unit.start("jumpjpc ('JP cc,nn')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 612b88d1-eefb-47d6-8461-73587a9cb3fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 35fc2b8d-e050-4b82-bc1e-6bde2670e01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 03764bbe-8ee9-4cb3-8f71-798f5dc3fb82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 7719fbd7-0fda-44cd-9713-ac0dc95c87d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 a9950c27-bf2a-4c54-8847-34c6e9214b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 dea5bf2d-3920-4651-bf97-70d1f56422c6)");

unit.assert_eq16(16'h092C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #0 cd9bc117-6dbc-4b2d-952c-2820da656836)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0003;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 cd87dd44-d92a-4447-9766-ac70b395d064)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 0689afea-a78c-47fe-84f7-57993e0d72e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 ff64e156-111b-4de6-9794-cf3d7ea7ba19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 5d7ff869-5d5a-4e1f-bb0e-cbb7841c32ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 d3f6825c-eb77-4d9f-9759-6fcc13268253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 dbb128b0-0d03-4e0e-b79d-0409ad2c812a)");

unit.assert_eq16(16'h087D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1 35443534-6c37-4268-83a2-6e9cee33a351)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0006;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 56f3730d-c782-4709-b4dc-a04a8a236483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 d9a77f28-8688-475e-b103-32d870ec2bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 a00cd20f-2127-454c-bf7f-c6a475636f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 acf8babf-eadb-47e9-9e5f-e96d8de85f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 f64cb73b-8ef0-46cf-9705-c2303f5ff9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 ee9dcd54-da19-4044-abfa-ba5de610fa4d)");

unit.assert_eq16(16'h0658, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #2 1cdcdc45-adb1-4cba-ac5c-dfdc6b7d91e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0009;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 25aec006-6450-45c7-a8d4-5b2775c5b64c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 e865d909-a29c-4f53-b96a-4baf2cf55b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 8a882b7e-2c48-40ed-aba1-55b8a7227d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 a5da86d8-35a2-4f73-bfba-49f2636a77db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 e4c21802-923a-43a3-a16e-f41144a5bd68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 26915d5e-a9f4-42e2-8777-8e650ba1eca9)");

unit.assert_eq16(16'h02AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #3 fc1c5f5a-82d4-4b83-b49d-239f19cc44b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 0a8b1566-2bdc-429a-aa07-6d1b281153c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 690c339b-0a2c-4405-8356-f5a461bad103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 4f1b0519-c08d-4eef-ab5a-526216af7a30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 059edfe9-e2dc-42db-a9e0-8782b5074a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 88f1c288-a5d0-42bd-a89b-bede556c190f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 c5762b1b-feac-49af-85e8-7c21a408c200)");

unit.assert_eq16(16'h0F1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #4 82b67bb6-493e-4740-a17d-fb4567228bc8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 bb58b1f5-bcf1-4a6e-9937-e21ae01b1a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 670a07cb-fee6-4b61-abf5-349824f10504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 a54f3b63-de2f-4a1c-87f0-92df9d4d5c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 c422c73f-6244-4e1a-bdab-44f489e4d458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 2a81ad7e-0aa8-4536-ac41-d6f83b07de01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 6c065292-2dc5-4ae9-9dab-1ea8a3123179)");

unit.assert_eq16(16'h0287, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #5 53c8b6c3-9833-4607-a0ef-ec59f23ee1ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0012;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 2957a4df-6888-42d1-b198-c6fb12538b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 aed2f521-8120-45cf-b234-8a4a5691d383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 4757827b-f4b0-4032-bc27-30f222d5bdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 46796beb-d3cc-4d6d-a05b-457e2c36556f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 8eaf45f0-9825-4be3-a4d9-abae1aa9b514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 30bf5695-1de1-4a10-a2e9-7702b0b82b86)");

unit.assert_eq16(16'h01D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #6 4b0c9123-576c-4060-a2e2-5b8167ac445b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0015;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 35e65a96-06d6-4580-97ab-e5d95b9ba55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 5f39a41d-d2f3-4841-a4cf-90077cc5740f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 18c268a5-2fa5-42fe-b79e-643016224abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 2d900697-3eeb-4293-83f0-f1bf52b4d63f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 548a100c-eb1c-430c-ae4a-a946dcf0df3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 a913e306-cff6-4bdd-a2e7-062c689100a0)");

unit.assert_eq16(16'h00C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #7 d884b3a4-f7a2-4abf-9ca9-fe726e9e1387)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0018;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 b70e0f30-2a1d-4ebf-ac1c-bff409878bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 de9f3e01-5b9b-430f-bc50-d3f10b6ecbd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 24b6dc9c-ac7f-43a0-be71-3b010890f937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 a2ed9e70-a1db-4ae4-8fc1-30227f8ffc6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 9bb8413c-1d60-40a4-a434-dc752788c78f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 09120c12-05fa-4a70-844b-c60095a9fcf3)");

unit.assert_eq16(16'h0935, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #8 167c70d6-4731-4856-93f1-8d1e4a73aa78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 92576ee4-6afa-45ba-a7ec-9c2a860186e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 4fcd702d-090d-4e21-add9-4a71c677b761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 050634d6-38cf-4266-9067-71f46defa304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 ab9b21f0-6e57-44ee-9484-1f704ad49b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 4206bd32-5b57-479e-bb3f-21022f4a41c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 f17bbca4-59ff-4efa-b341-ffce65b3ed5b)");

unit.assert_eq16(16'h0278, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #9 a0d39220-f412-4832-a224-5e9bfb9ebde7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 57a18a4b-6557-45c2-8fef-cf590b94ed4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 2151c13d-0341-421c-8f22-9e01a3844818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 d741edda-b78b-4e42-b9ea-7e7f9d233781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 9b1c3350-e41b-45fd-a43c-e15fd34e61fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 a48da4e7-da29-4e79-b8c0-fb0c480c53d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 c15e6f53-ec27-4ef3-9947-86f49f5bad0c)");

unit.assert_eq16(16'h0132, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #10 c567071a-e76d-4a71-a779-0fe410eb915e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0021;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 805ee8cb-c439-49b2-ab1a-6c96be86dfbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 4cdddde3-3217-44e5-97ad-a06626c139ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 be860a15-3d6d-429d-be2a-7160257aa493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 2575da38-3d29-492d-afdb-29c23aa26ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 be7eb089-89c6-4223-ba44-377e39671118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 0ab2f8dc-3fa8-49ce-91f3-beec53d13d77)");

unit.assert_eq16(16'h0E7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #11 b4921838-b67f-4b44-bdf9-13501963d647)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0024;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 c5f2f8b6-4065-46dd-9f77-88aa34ea75c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 35ea3f71-a190-4f13-8947-381b7faeac57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 f15b2042-6338-4500-887f-559d7763a55b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 a1def090-8fdb-492c-a7d5-90ec25539372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 b8352a3e-082b-479b-9c3a-49a622707344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 5ee03974-1b6f-4c97-984e-db2aa86a47e1)");

unit.assert_eq16(16'h0269, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #12 13f859ca-416b-4903-bdb3-2bfe7eb33d71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0027;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 ca8537c6-7a6a-4855-ae1e-1098b80c0084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 81b000d2-a96c-4565-bdc7-7126ca4d6d9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 782e9869-bec2-4130-a85b-0f663ba9910d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 98066667-3701-4923-a3d0-204846ef7888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 33da05ba-3320-46b5-84c4-f42628c66d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 57117387-c83a-49ea-8d45-6dcedad753d5)");

unit.assert_eq16(16'h0223, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #13 9e7c2c8e-2025-4b9c-af21-564b09e71f6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 64c2babd-3385-4871-a1bb-5499f69bbb14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 86b5c978-6b77-4390-b8a9-b561cbf5e729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 99249e09-4b01-49b9-b627-1f7c213b99b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 905825f7-f584-406a-b718-ab5ffd9c3e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 7058cb4b-f5ac-4a09-88d9-7f86d8972ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 5ad5407d-41f1-4868-8e33-964ad4f312d4)");

unit.assert_eq16(16'h0EC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #14 9392fadd-86a9-43e4-b797-2db15391eb46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 1d4e7cbb-1b8f-4a06-9eb9-d6e7e7858804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 cd776133-9071-49ec-8dec-dfd3f66200cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 0318b85f-4dfe-471c-a4c0-3e9a94b33b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 8daf40f6-170e-4762-b271-6d0a0df259f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 7c12683e-3d22-4352-a73c-fe86e112c1d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 2aa47d66-a637-4880-a54e-284fbc865e9f)");

unit.assert_eq16(16'h06CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #15 88c68783-62c9-45cf-b704-a530dfe4bc21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0030;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 1c80b427-0a54-427c-b627-77e29550176f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 7b75ce74-90d3-43e2-89ae-bc0cb76f65a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 f27760f6-c798-4b1d-8f67-f9dfcc6b78ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 ba5f8529-dce7-4910-8c98-abd1b2ff618a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 1ecdd2a3-c363-43ab-8345-e8586654bcf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 246d8d29-fe80-436b-be66-a854e50d6a17)");

unit.assert_eq16(16'h0899, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #16 f391de53-6cbd-46a5-9c66-12d35fb59b78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0033;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 c961e6d6-1c29-4d98-950b-e6c646c8f1dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 bad0cc17-65b9-4295-935a-8a060d4a4779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 6efbe4a1-1042-43be-bef4-f987a9602b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 bf73591c-8d95-45b9-b802-1a9f17eedf6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 772608ef-fa98-41e0-9af5-54da0638a7e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 70b84eb5-d43a-46f4-8918-63c849a434d8)");

unit.assert_eq16(16'h0B35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #17 e69cf7d0-caed-4826-a4f5-1fefa58d0f52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0036;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 8564a2b5-7acd-4ca5-bc94-b53cd545e247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 25b2f4cb-9684-43cf-9b34-5b727cb27343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 315e904a-de40-426e-977b-60daa607f995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 f06c10b4-cdd2-42d2-96aa-f90fbfc77fae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 94705c60-cafd-40b5-a55b-80696f57cc75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 e125fbb4-330c-4316-b3b7-27cadb41a015)");

unit.assert_eq16(16'h02F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #18 9a6a1b58-1dad-420b-aa8b-f932b0b411d4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0039;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 15ab244f-72ac-463e-821f-2bf0e716a57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 31d5e4de-2fd6-4aa1-80fc-e8b5135faf54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 87223472-3ad1-4ced-a2e3-ab2d421cc0f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 fe9160fc-ce2f-4602-977f-03ba8b9f1d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 5f9b083f-3f8d-401f-b892-cb459b4d0208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 4f873f50-8083-4060-9cd8-18ad85876724)");

unit.assert_eq16(16'h09AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #19 709a74bd-6f0b-4ff0-89c7-ed1e91718ce9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 919b8d9a-a9e2-4c01-9f73-a9a1ff6903f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 bcdb85d7-6e74-46bf-9697-9f42d8b67102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 20471489-c203-4085-8f37-7e65697007be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 4e884d4d-087e-4254-ba85-560d1d41a7dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 1802feca-5b9d-4e53-8020-8444a30c1701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 84453155-f8b8-4270-9dce-3e007b87fa0e)");

unit.assert_eq16(16'h02F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #20 89919aea-5c0d-4ce8-ac9d-fc8b13b32b25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 5c1ccfb2-3162-4be2-a88e-4fc33501467c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 9382f6f1-2675-48fe-9128-21bb550eade9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 bf638496-ee9b-4f45-9e67-d318c7444e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 9f8a7b5e-fcab-4a01-9b02-7c335f10b2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 b877aacf-73df-41f7-916c-29d72cee0ada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 5eb18fd8-618f-46dc-946e-c961395519cd)");

unit.assert_eq16(16'h0665, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #21 8f233a9c-91b0-4524-a0fd-5c847c715f37)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0042;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 ab0f4f11-be15-4473-9516-62b3b65bfb41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 7ebf0b72-d703-4265-84ac-e06b6bf015dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 bc3bf5cd-84a2-482d-9045-1e0eb9ac10fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 3cd92a29-5f35-4080-8b65-5ac6d12add7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 33f6f520-0957-4e10-b927-cfdffd3a5792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 2b583549-b568-495b-9703-b3d6693d7b3b)");

unit.assert_eq16(16'h0DFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #22 dad65f9e-c874-405a-aafd-74e48b8fcfb9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0045;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 57651d48-fea9-4379-bbf4-6d0c56c7b530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 8e1e7737-67b3-456e-a0d0-3d7258888908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 ca7bffff-c4bd-4e4e-bf16-47757c6c0419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 7caaa58a-e8c9-4830-aeec-56fbe8f7b1e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 7228dfec-45bc-401e-89c4-5d6d9f77befa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 f5e9ef36-9fd5-4ab7-a9d4-c89a6f4a3db0)");

unit.assert_eq16(16'h0061, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #23 386c7699-b8cb-400f-9c25-22dd1bdf8549)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0048;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 fe5af449-169e-461b-b892-a816fa9760e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 34a31955-074f-4fa1-86cd-1c1fa13ab875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 92e5315e-17cc-46ac-b26d-90d6cec5ca77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 12ddb25d-e782-4637-8e3b-e80fd7f3fc3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 d22e7093-9e88-4e0d-b2a6-287f5428970a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 f2a62e41-8208-4cfb-8fa3-bbd01cbf47ec)");

unit.assert_eq16(16'h0797, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #24 e759d369-36b8-4881-b369-538d242541c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 9afef11e-751a-4511-88ae-5d246e41cf71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 9919bf9a-6981-4a14-bc35-bbad5f8c3ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 f11c2e9c-5520-40a3-a82c-218fe1622ba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 ce4605eb-d091-4043-82aa-daa9158f7fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 5b31daa4-186e-4bd7-8a21-230492f15511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 9ee98685-c455-41e5-a59b-27e5a2057cd7)");

unit.assert_eq16(16'h0D73, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #25 75b69082-1efc-4341-a12e-396a5f2dbf59)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 63fb65ef-7bea-4947-b61e-8ea25774ff78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 55a27af8-b177-45f4-ad5a-05efb83d9895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 8c6bf1b1-6190-405b-8b4e-66d70bb123da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 11e07a69-2391-48d1-a07c-ff7235bcf906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 2999f0c8-fc14-461c-ab71-9e3d58d627e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 245f60f7-2315-4b72-828f-58be5fd9d448)");

unit.assert_eq16(16'h012C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #26 a454b157-3862-4d53-9afb-2312b2366106)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0051;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 ddc08ce2-91f1-4aaa-879c-9d0225518c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 134089ed-1c1c-4a7f-854e-62bf9b70d673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 14c91e62-8331-4f7c-9f3b-5e08507450f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 165ecbd6-910d-4199-aaa1-15de407cc394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 cf5a7655-e9a4-4a2a-aa7d-990a83e423c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 bea36c61-2afd-4627-ae5a-c5c1561a35e5)");

unit.assert_eq16(16'h0D23, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #27 2f0be7da-a923-4d37-a9f3-55bba25db0a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0054;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 bfcdc1da-cfb8-4679-a4fa-e058cc00b9ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 aba489cd-a327-4970-9ff2-41c8e79245f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 23e5674e-058e-4401-8097-a7bafe9989e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 c15c2f26-e9ad-41f9-9f48-6fd75b581bd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 0f86e33b-7c97-4cce-9fa5-50c294e41595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 96c9d203-4187-441c-9b5a-0f6386bcbba9)");

unit.assert_eq16(16'h0108, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #28 dec69f0c-6068-4fcd-94a1-a8ffe21b3a6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0057;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 e4e0485b-45de-4fa5-9f4d-385db0517510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 463831dc-0de0-4d18-b592-94a4ab196503)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 de1f91b8-2a9a-4829-b41b-9751b18c702f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 003d6ae8-c72d-416f-b56e-7620f970051f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 e7287a39-dd73-40a4-8ba3-7858b7c0a13a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 908fcff2-a25a-4f67-90d3-0a97fc44f56e)");

unit.assert_eq16(16'h05EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #29 1d33d6d6-4ba4-413d-8b83-71d235e86dc9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 202cafe4-badd-4d6e-a451-632b7727a654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 66c72f61-0236-46d8-9f99-53ddf16c46ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 f337261e-721c-46c4-b79d-a6dd23a25cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 eb3ef008-9276-4359-8405-413afdfc2271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 dc367a34-47ba-464a-abff-2a27dc3d3ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 da2de3b0-d03e-49dc-8758-9a29b8a3718e)");

unit.assert_eq16(16'h0A93, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #30 d75866e1-c4a0-42f1-94df-1d60a4b7165f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 3135b416-367d-4a89-b7f8-8fece94851de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 b145ccba-fb43-4cf7-aca9-f92df1d18f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 38b96505-86ab-4315-9596-0694a9c622c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 c9f977e0-2105-46c1-869b-3a63c944173e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 8baa7981-a403-47b7-a782-3afbbc126379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 1825bff3-7975-43e1-954a-6d6936cc9abf)");

unit.assert_eq16(16'h0CD5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #31 5edcf51e-21a3-457d-845c-5de98e2ced04)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0060;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 d58830e2-91e0-4692-b34e-41904380d4f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 43c16e54-987e-4044-a77b-fa27d8029870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 d5adbf07-ac4c-4377-982e-05f6706738a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 17bd7eea-e0d2-4c52-a720-88b594a4dc21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 3a9c73c8-9a9d-4c52-8216-240dd8a0353f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 81fe58ec-8516-447d-a027-f218bf7b03e7)");

unit.assert_eq16(16'h0063, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #32 9cfa73ab-5fa2-4b41-aeec-d96fb4db1904)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0063;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 6c5addd3-865a-466f-8ee7-c58477abae0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 0b1e9578-e008-4c0f-a3fe-86100891a7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 f427cec1-3663-4e9b-a8c3-b33a616e080f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 3830540d-4916-413e-a68d-2cd487dc9427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 8f866ef8-1807-4f3d-8946-f40deaf0c08d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 db248ef5-a80d-40c9-be38-a5b498769f52)");

unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #33 7a853298-4cb1-4c9e-92f0-0e6a8d2232eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0066;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 0fe7ac40-f1bf-4f64-9b93-e534bb87f849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 ee5173f9-c949-49cf-a29f-307dff76a159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 6f87f36d-e495-4c4a-8135-8bd5028511d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 237e65c7-adbf-4d5b-acf9-e05dde0ab6aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 061ac98a-47b2-43f1-aeba-3a886f6f2ff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 08da00c8-975c-4af9-9993-60d98e21424d)");

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #34 740124f9-c8c7-408b-8ebb-b4e3b79389af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0069;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 ead9a2c9-1da0-4085-8240-536ed8c8a5e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 46402056-aa1f-418a-9083-91c50e3fc33c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 44308b31-cb17-4c38-90f4-eafa94d8044d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 68084145-5efa-456b-9dd5-0d539e70d941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 6fa7f3c7-a194-40f6-9c68-31bf803e7d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 224305f4-a506-4f0f-9052-490af0c4a87c)");

unit.assert_eq16(16'h006C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #35 5d76d20e-983c-4501-9abf-83dbeda8905a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 22e3a3ab-7e2e-4455-9cef-54e4da801853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 312c7c33-19a1-4cd1-967a-59386b6566fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 1b1acbcb-7602-47a7-bb95-be65d69fff9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 7b7994da-e13f-42ad-8998-1bc81087891e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 cbafc5e9-8f5d-4a16-ae11-abc14bf6cd90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 00df2180-7c20-4cd4-9af2-402be0f61d2e)");

unit.assert_eq16(16'h006F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #36 d625f60a-1925-4add-831c-08bb143ad8b3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 ecab144a-7816-491d-9416-7a8890f1fd48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 c0d64e94-34c3-4f92-8f11-46054bd483b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 7e234fe2-34a9-4f3b-8e99-7cee6eff0ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 68b81242-3558-43f5-8974-d250bdf1aae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 23d16f51-18fb-4537-a3d5-0c8482693bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 04f52822-4fd7-43a5-87a7-bb82150c8bb3)");

unit.assert_eq16(16'h0072, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #37 49be7528-50ea-42d8-8e02-37a6c7c9f0a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0072;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 d0ffed26-2cc0-498c-9c27-060bc1ac104e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 f51ed968-5966-4857-b1a9-ffa96d581ab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 b0edc265-3d90-4a69-9e7f-9cac275ebfeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 5e5a7d7d-fc1d-418b-bca4-ba70379aec06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 6f921526-3a6c-497f-8e03-403b05e79d3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 4b4d4125-426b-4123-8329-610c65c45b38)");

unit.assert_eq16(16'h0075, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #38 ee6b5b77-092e-4670-a8d6-c6b2c24af5c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0075;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 f1a51940-fdb5-40e4-bb73-9008246d7ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 7aeb6ba6-238e-4e7f-ac04-616a4832d9ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 56ec66c4-dbc7-4827-928a-f35e76bd65d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 0ebdae1f-af02-416b-9769-6724480f4b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 c90f5a90-2eba-4305-93af-0f0d4f771e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 a257e780-7c84-423d-af68-30da63ec1cf1)");

unit.assert_eq16(16'h0078, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #39 51fed323-68df-448e-927f-7bc21c2e5d19)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0078;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 6a27b1d3-e110-4520-a988-addd39cfed45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 d767300c-8fe7-48b8-9604-4d116f35e687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 6adcb0df-2988-4870-9a8a-78d0d2aad98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 8ccfe3f8-7e76-483e-bae2-ad48f746e62a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 459d0d18-5790-435c-87c0-188b30b2ec77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 2316c88f-b0a5-4b5f-8db1-7e972077a189)");

unit.assert_eq16(16'h007B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #40 901e1a75-e37f-48b8-a346-e45c8fd9e325)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 42b03394-1fbb-45a2-8373-263e65fed334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 8e3be965-9a9f-4110-b07f-ece54063fec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 7abb7356-3bf4-4c37-9c1c-559869345d7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 13973de6-9475-44e3-baf7-bda8efb80e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 8c3bd360-6984-4614-a8a3-869d1467f84d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 d230856c-31b1-4b89-8c9b-bcdffe237d72)");

unit.assert_eq16(16'h007E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #41 42732744-de81-4933-9f22-f86273796661)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 bb68f8fd-459b-402a-ac12-2314ce716f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 cf2a9a84-67b7-4706-8da5-840b73c3babc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 615c40de-d8a3-4818-8e88-706e303b4b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 cc149f3d-483e-45db-be63-b936db26f584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 461da034-937f-4e19-b773-d8f7ee98fb80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 ca2638f5-01e9-4128-91ce-27dda839ef3b)");

unit.assert_eq16(16'h0081, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #42 0253760b-11f9-4100-b0ae-5098b71678a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0081;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 c5e169eb-f592-4976-993e-c40e65bce310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 3a6fa1e3-4ebd-452f-a8de-ab8e317f3f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 e392422d-78aa-4bca-9be3-024a55bfdcd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 72a00529-cb4a-4c63-9416-e5078dbf1acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 80bfeb67-361b-43be-93f5-4fd93df5ac63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 99547927-3197-4d74-b3b3-cab8a8070bea)");

unit.assert_eq16(16'h0084, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #43 819bdabb-11f1-409c-b10b-12d49516a962)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0084;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 125b8da2-9313-4ee4-a62c-91390be5be3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 fb0824a6-75ee-40e7-843b-e8eca332f9f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 ff700278-ae4b-49f2-a431-b46de4f5dada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 2a0113b5-2c5a-4b41-93c5-7ca56e1987bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 847b1783-5480-4010-841a-e9d42763cda0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 324621c5-893c-4dc1-ab44-dee767cbd4c5)");

unit.assert_eq16(16'h0087, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #44 9dbb83d1-a1c5-4527-a005-ce7586b1d35e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0087;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 2becea67-2973-48ed-84f4-4ffb9def31ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 5ccd4193-7cb8-4062-86c8-5c74b528e6a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 32d44a03-77e3-4edd-8d9b-b5dec8833763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 1312661d-104a-486c-8c74-e664dc4ad059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 7a6f36cb-29f8-434f-9b16-e539edc7acd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 90290c09-eaac-43d9-bb35-325f5501ba22)");

unit.assert_eq16(16'h008A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #45 a76bf7c4-7aa0-453e-83ef-271ff5e81f88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 97ad4695-5589-43b5-8139-897e0e9c6468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 82e11b4a-034a-4e12-87b1-b20ae401544d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 8aeb0950-45f0-42f8-aa5e-299cb2c2ed0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 b4ce0e8a-f202-4614-ad96-d3de058ba8d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 3ce0a63d-bf84-4918-9bd4-57acfd2628f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 430a5b79-6037-4b7d-b824-f40d2d82ba35)");

unit.assert_eq16(16'h008D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #46 59f8bc20-dd7f-473a-902f-c78b60df94fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 813d66c9-a667-481b-94b9-782919970938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 ddd02871-17a4-48f6-aa2a-34890663a1d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 35868e21-e096-4764-a86d-1895569d16c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 459263cf-317c-43c2-b0da-83d57c09640d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 3fbe490c-b411-4f76-b86f-363ae580ada0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 93ce4124-4154-44b7-aab2-8342f67c99f1)");

unit.assert_eq16(16'h0090, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #47 2603542c-0a6e-4589-98b4-90d4bfb0a22f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0090;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 12d62010-3212-4d6f-a9f0-17af23d4539d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 8b69ab7b-3898-4bce-8b21-1917a65715ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 f35a8e0d-3034-4a51-b600-e5f9ad8f97d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 5d9c554a-46db-458b-b45c-a1cf01e51719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 e8afea6f-aeb0-46e5-ad4f-1523d4fc36bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 c15aa552-cc5a-4601-8633-01d23661b650)");

unit.assert_eq16(16'h0093, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #48 cc25958e-4a09-41fe-a2cc-10635ef3a0b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0093;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 0cf94102-25ef-4a32-a647-ef810ac0985b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 a65bb853-4547-442e-a443-9276ac67b9fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 724e42f3-2b82-4a1c-981d-7d7a243f7796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 86d2992c-46dd-4196-8be8-090908edee73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 178fd34e-5fb5-4644-a01b-3a654a886f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 ebac12ef-d439-4e8a-b184-b9aeb4d2c249)");

unit.assert_eq16(16'h0096, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #49 0a52cb3e-625e-42ac-8b01-f6fc1fd79a9a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0096;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 7c727827-ee93-47e1-85ee-e81aa5833598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 a147514d-eb15-4334-835d-313e4c5400e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 0b8f9b00-ebea-4664-82d5-d254e08f2fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 bb0a6c31-8ab8-4dfd-b008-9985dd4c6034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 b79a7abb-f7a2-48be-baec-4d395fecd720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 c513a9bb-2edd-4da2-a290-670f98397c44)");

unit.assert_eq16(16'h0099, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #50 d899584b-61c1-4f3b-9f31-f2f79801ad94)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0099;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 50a1e21a-092f-4089-9bef-f494a7754f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 205dfc6c-09e1-48d7-b558-5b79b341f7f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 9951fa39-1800-4481-b2f1-35bf5e9eb8a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 8963b9f0-ba12-44ab-9940-cc6c9ed1e4c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 df3ca94e-b8c0-4c0a-8d2d-008a6935452b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 d0637d82-0c68-4987-b57c-831083fecb75)");

unit.assert_eq16(16'h009C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #51 019f7aa3-1920-4552-966d-c628c127b4ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 806d0736-27c3-49ef-b66c-518535ee0a68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 802f4f64-66d7-496a-a1e7-a7a99da752ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 3ed34b39-0073-4513-b503-7bbc5eb7cc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 919005dc-8ea2-40d8-93dd-c583a3b44f57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 f784e2d3-af6a-4b01-865c-63f2159939bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 56d0e0ea-4225-4849-b70f-0250f3f973d6)");

unit.assert_eq16(16'h009F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #52 bfbf4049-815a-428b-8d6b-a14dace72f2a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 9f2df4e4-6da1-4818-b793-4ae168007cdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 ac25a9a4-8b1a-486a-87f7-7d0b8d0f8ed3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 d0b4b9ea-71c7-4030-a207-10ae99162438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 a6c74e11-9dac-4097-b2f6-cdd259b30b3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 4efd10da-ebed-43a9-b757-110890caf02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 a452ea72-028c-45e2-896c-108c7f119289)");

unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #53 453ac183-c89b-4a66-9898-e2d364dca6bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 dfc9fb33-3129-4aa9-829a-85121996b24d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 4a6a0fb8-eb63-4200-b40a-06fa57d10cb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 ed96b74a-1e5b-43b2-89a8-5748f006a68b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 89e3d80a-d963-42de-936e-4086bffe5bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 11bac305-1bcc-4d41-b8ef-1f8f302f7166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 0fa6889a-5c62-4f58-af0b-9fcbb30fa639)");

unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #54 66a16b82-4210-4a3e-bed2-4287e6fe886c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 3bc3262e-4ace-4e0e-8f0a-d403faa3438a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 f5d4f9e8-afe5-4bf7-9cc8-090a51d4b717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 2d4d6067-17c1-4082-ba42-42c735723a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 0ad15959-92f7-4090-bb21-1eea2b508ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 7f4d7264-d419-4e2a-972c-929f2085a410)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 29243b85-aa57-4b4e-b621-114d363aed98)");

unit.assert_eq16(16'h00A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #55 a07c50df-5db1-4a80-b69d-dff12b9cc8f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 9a081974-2950-4407-97ed-19be40309080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 04ac2b15-aa77-43d4-99c9-efe813118ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 d390465a-eca2-44ad-afc2-6dd10817e3e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 2c54500d-ceaa-41c2-badd-35472769c5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 12621ce4-1875-4695-abe0-304b86a848db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 252aafbf-5af8-4350-9a39-0220f8d10749)");

unit.assert_eq16(16'h00AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #56 d1f9af31-51c8-4fae-95e4-b18c8c8db0de)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 078a688d-390c-42ce-b77d-8836eb176361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 746696ab-1926-4838-9fed-848f615f3adf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 33a88cfb-e62d-4e59-a062-5a1ecf31abfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 05c01454-49f1-430e-97c1-e68b14092cab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 a5df9f99-f77a-4de5-99cd-633e68279841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 c16b2feb-f3bc-459f-be82-4560ae9fe463)");

unit.assert_eq16(16'h00AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #57 1d0c4174-41ed-441c-a1c0-14d1c529433f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 983801f4-b9a3-4357-994e-07a7bd2da065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 9e05bbca-7f36-4bd6-bfee-849476c51262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 8755fd3e-b8c7-4efe-977b-426df57b4056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 2f481d6b-4e66-45ea-bf6a-7df480c6ff28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 392c55e3-63fd-4f73-9733-4af865afa9dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 0dbf4f94-82a4-431e-acf0-f61fcb88e2ee)");

unit.assert_eq16(16'h00B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #58 78337dce-ddad-4292-820f-3028dd14351f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 b8458ea2-1fea-4ec1-9e1c-b8ddb0d3b999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 5695ee0a-4477-458e-982f-ae522e0bfbde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 49eb2a3a-a995-41cf-92d4-9bfc470622f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 c2b4c833-2136-4043-a1fa-8cadf155991f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 aa686368-1dd5-4587-b617-27927e7aeae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 1d34873c-f71f-476e-a1c8-9bd2e962f77d)");

unit.assert_eq16(16'h00B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #59 21a7f36f-e541-4e23-97d8-d1f830671e80)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 ceeb2833-a4ed-47b3-95f6-3eda7c5c8983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 953fdbea-3d87-4731-a7ea-2b5729096760)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 c1d8ee39-2adf-4cb4-9233-db427993145a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 22612cb6-ff3f-4118-8246-f4b7c2dc8cb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 3a9ff13b-3dee-4b0f-a2f7-a2a19a08f52a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 4f3b9ea1-e886-46f5-ba0f-018e3a7112ac)");

unit.assert_eq16(16'h00B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #60 879695aa-4dcd-42be-8918-4737556c792d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 24b4947b-4073-46c4-b861-c414ae69a17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 ed2904b9-686b-4927-9432-c6025bc61e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 68f551ae-c95d-47fe-aefe-0f7f41fc0130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 0b8362a9-d744-4e23-812f-30957910bd18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 5fb0ff81-3fe6-4dd4-b532-64de04695c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 3f624129-f19f-491f-bfef-2662bfe70a99)");

unit.assert_eq16(16'h00BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #61 5b44dbb2-b249-4e55-b42f-84f3a96260c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 24e6cb3a-1b6c-4180-953d-4f0994f925fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 50bfa708-5927-426e-a765-7a88130260ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 8dfdea5c-ab5c-417c-b3a8-334c25e6d0ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 943a6ffd-7c41-48d8-b852-234c786144ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 3498b890-fe82-4271-b7f3-d8d36847812c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 aa77fc17-bf12-43c9-ab05-3a125f89d61d)");

unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #62 e0b760d1-2a3b-4623-89da-d8228e9c28da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 43203955-4310-454c-9544-0bd09aecd968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 86cfb450-3a18-43cc-ad1c-129ccf1bf93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 07564a8f-6c81-46b8-8847-878e5f941570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 4e296f81-b16a-49ab-93f2-d49c406d8908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 ef124ba8-febb-4617-a284-a49ed10653fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 ce4effa3-646b-4730-838c-f770dd7d6f88)");

unit.assert_eq16(16'h00C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #63 48476f89-bd0e-4a43-82eb-5a18a74d4472)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 a1036e30-8ab8-48d5-9564-939c1b1ebb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 e6870985-146f-4b39-89a6-13bdd7fdfb81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 58bb6eac-43e1-47a2-a7f9-503d70cabc45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 de608b27-8759-47e8-97cf-8d99733befb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 0e35ab38-18e1-46ac-919b-ed500c1233a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 318767f2-6c78-4c13-82b5-915d4fc4777a)");

unit.assert_eq16(16'h072F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #64 8c6ea72e-784d-409a-bd03-e436a3696a84)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 d7930fcf-e73d-4981-a3a8-c3870b6d5850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 3420d825-e499-413c-8461-f762d2e729fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 8986da04-3c4b-404c-9ef9-c8cd0d7de0fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 7d51600b-6f7f-4e35-bf75-477ae377a5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 da98e65a-24fc-4cb5-b1b4-c1a00c6b9926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 5b11f1f4-f541-43f6-84c3-c86d344ea39a)");

unit.assert_eq16(16'h0B99, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #65 70eac4b9-8c86-4dbe-936e-335e6b96277a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 a13c2e5b-3cd2-4bc6-a844-bd7c144bdffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 16e18397-6c72-44b4-9b95-8f301bc6a102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 36eb976b-064a-4fe6-9734-f7fecf3c2d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 b82d6c04-8007-4d1c-9df5-91628927097e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 a2c55c24-867b-43d6-8d73-3dbc81414a9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 659a0938-b5fa-41e8-bc6d-4f4b192a8005)");

unit.assert_eq16(16'h0CA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #66 19cb108b-ec28-4589-b512-423a35476d12)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 ff9029d0-9665-453f-9927-7733a0e266fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 b0e86176-08c5-4c6e-a62e-3063f804223e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 f06805d4-75aa-4bcd-bc7d-ef1cff83f6af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 9c04ea16-5841-4c37-9bc6-3c12faec6260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 51c5e656-836f-4674-96e3-dd6d370efa72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 2ab84c04-c7a0-4873-9de5-dfddfa279b3a)");

unit.assert_eq16(16'h0076, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #67 31442097-3693-4c87-81a7-971cc874b66c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 5b4e83de-1720-46b8-aa05-286b852e61bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 8a270fa9-e7c3-4a1c-a79d-b9430f24e71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 2ade7a88-1f97-4ad7-b769-73889eea2175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 5c984cff-9146-4e56-b86e-00f56346899c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 95de9f25-c0ed-4245-a551-81bad6f43b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 a798d96d-3494-41fc-9ef2-a9b3b5754554)");

unit.assert_eq16(16'h0DCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #68 f5cbea31-443d-4459-8f89-d470915f8816)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 db7e5b91-047c-451b-b84e-9b521d55aacb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 193315c8-f196-4422-9476-4ba7b74f4519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 cb07ccb5-0575-4a3e-a058-dd40f799f3cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 38fe4f15-a076-4c99-9ca9-6c7cf78db057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 a051e87e-02e3-4612-b518-103c7f347774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 121b81fa-03a2-459d-ba6c-7f165170de4d)");

unit.assert_eq16(16'h029C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #69 0a58bfc7-b019-4fc3-af15-b74c2af09c97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 cdbf22f6-342c-420b-90ba-ad6ee1127153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 bf749ed9-5873-4ff6-9bf4-68c2c81ee314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 13fe716d-6a87-4f2a-a521-fce59dd93e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 96c0766c-90b3-44f7-83e9-696c0b9aa65d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 d4b06504-588f-4915-af0f-dfaf72652f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 010ebad9-404b-4bee-95e4-212e13eedd78)");

unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #70 b31c78e9-09c4-4c1e-bd31-4670d3c69cba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 00d6b523-6e9d-46f1-90fa-8057f2e417dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 26a9d8ec-cb9c-4c64-a4a2-442735b97a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 5f783649-410e-4f75-92ea-379e568491a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 1e2cc945-b481-48c6-bd32-252e384233c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 559c4065-f95f-40e1-9a23-e51f9b26b22b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 d58d1961-f468-4575-9011-8333c51888c4)");

unit.assert_eq16(16'h0344, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #71 a62525f6-e8a1-437d-bce2-8ba3be6eefd5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 27dd72d9-2eb9-434c-b818-f52865f072ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 142f7caa-aad9-41b5-9ee7-bce43670d5a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 cbe06d81-7707-4d59-b98d-f6de12fd3f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 85004e2d-ee5f-40ad-85f6-535efc94b744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 1db7e03f-9a81-4c33-9bec-a4eb793e2c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 32697e78-ed8d-41ad-8db5-42de1f27695f)");

unit.assert_eq16(16'h0F6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #72 8cf25672-844e-4e7e-9ed4-0298b239451b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 58a048a8-5761-4efe-a432-79fea37a6da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 8374850d-4602-4b45-af2b-3868d0600039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 d152f02c-035d-4635-96be-d2a71de0588a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 000f5fe6-5637-43bf-b6a6-5dcb2434bf17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 a760fb05-ed42-4d3f-aabd-58bbe01dc4ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 d6d1b0a8-8acb-4906-b2ae-2974d8489cea)");

unit.assert_eq16(16'h0AAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #73 e3993504-c8a2-4adc-a1c7-e56031a99695)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 63298ea2-8864-4f2d-865c-1f9450299d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 66d62567-fcf2-4130-94c2-c19f065105cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 a44b598b-4a38-4524-b7cf-a5576be884c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 c67b10a8-e2f7-4e01-9719-44137bdadc16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 a69e1b57-db6e-43b5-b86d-282ae19fa9d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 8aff57d6-74f5-4f75-b9c6-24e853a042af)");

unit.assert_eq16(16'h01B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #74 d1c9eb02-371d-4b7d-a0f2-a8e7e1739e8f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 a519d486-8f7f-43c0-b681-bee0733cb50a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 360b68a2-dfa1-475f-a7f1-146182ce895c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 b9aaea93-fd2b-4b40-a696-6f255d753f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 8c08d9c9-d01d-4ab6-9646-c10226daa9b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 2376187c-e5c1-4f71-a2c9-6f5443bf9d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 f447400a-0076-440e-b6b2-a1e0b79a589a)");

unit.assert_eq16(16'h0907, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #75 5ee21e74-4722-4348-807b-9b0fd56dc5dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 13cb8159-f5f4-43d0-97f0-7008144a8a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 96c8ce2e-68ae-469c-b393-e46d83bef8b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 277a8d80-3609-431c-97fb-001133f42e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 9661eca6-175d-4e44-a009-bf74ca98ce9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 cc18ca34-54e2-4515-8f71-df5a2aead415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 cc48764b-ca6a-465c-b0b3-d9e41bdc572f)");

unit.assert_eq16(16'h09AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #76 8193cdd4-d912-4b7e-af3a-9845351538f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 20d15584-2767-47cf-ba40-f854f3bccc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 6e90dc80-175e-4b59-b737-92e93426f0a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 ba6290a8-eba1-4033-9f0b-a1b18de6268e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 dfabc8ec-c9a6-4f74-81a4-9a0523d481f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 61b0cddd-ab5d-4a75-8a42-cd7fc6f1b044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 4c9e70ff-518f-4d05-911d-d6162cb3b0d6)");

unit.assert_eq16(16'h01D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #77 be6be987-a1bc-4914-987d-03d5940d3a65)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 a183aca6-abe8-4e00-b94e-e6f11743b7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 640e0325-5005-4e23-9272-f36240ae82fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 bfa34cf7-3beb-43f2-901b-d50c5548e15e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 79501a8d-1f3f-408b-bd30-2a22817ebe1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 01f296c8-cab1-4618-9e3b-8379d16ef2d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 2d2be6a8-34c6-402a-8399-38b7c1ab0d10)");

unit.assert_eq16(16'h0823, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #78 08d2b13b-85c8-4225-be67-8ea173508da0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 82e2b09b-68dd-4753-8bef-2d33103d6918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 4cd6f852-f739-415e-a2a4-7d5f22969206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 78d4ecdd-3ead-4b4e-a693-406b641b90ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 fa87e0ad-d685-4b60-966e-468848e1c6bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 c502cb66-789d-46bf-b30b-8d245fd1b1fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 32db7c21-370f-490f-a81f-8f9d29d33954)");

unit.assert_eq16(16'h0F33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #79 b0d5ea0c-20a0-47bb-8cbd-ed80f887ca77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 fe228c97-8a06-49ba-8662-9bdd2a6ba8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 a62593d3-b976-44bd-a98d-241c5ad857e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 feaee254-fce7-464f-a737-e29be19ca9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 b35bd727-ba63-40b1-aa77-ad549bbe034b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 fc87f838-b377-4419-840f-ff380a9b028d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 d57dd6bf-3c9d-4379-ad57-cb8244e7f662)");

unit.assert_eq16(16'h0FE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #80 bb527469-d186-46dc-b88d-3a1d584f9990)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 cf19da36-fb21-4301-8758-816a3e7f50da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 877b542d-5a88-4186-8290-4f65612cf27a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 dba2e3de-2e42-408d-bd25-b41d7874ddbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 9234f64e-19b0-4597-af0c-690b8682aaff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 a8f6d502-f83b-4992-b78f-0ae2dd2b398b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 d8df6de9-20f1-4919-9d55-dc73e632f094)");

unit.assert_eq16(16'h0740, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #81 ee70514d-3387-4e54-84c8-f547507b4565)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 542112f3-8525-4609-8494-268af375a94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 0d2227f5-36cb-4fb3-bde5-53811a8764dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 b76af836-ea62-4f54-a385-f0cc1a0b53d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 1c7c072a-6bc1-497e-8889-4ce3467f1f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 7ddaf312-053e-4ed8-a744-f487eeadb457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 3fec291b-7960-49f9-bd1e-6be0d70abd27)");

unit.assert_eq16(16'h070D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #82 8e490947-75ce-4a67-a66d-1d0dfac90b09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 cf6a40d1-7c54-4f80-b114-54cf526e34ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 431c9033-b8c0-4a09-8f61-5c30baa3a76a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 75c10816-39d0-4d99-994f-2da252fd7bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 0f428c99-665b-4420-9290-976618ee55f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 d2af7638-03a5-4462-8e8e-33bf4f3f095e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 0521bbba-e30a-42a8-aa8f-c8d38d80b54b)");

unit.assert_eq16(16'h0BE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #83 18994b08-bc1f-409e-af1e-83cddd9dd880)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 b9e6db9b-e324-47b5-bbaf-4ec61109894b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 3c2acddf-124c-4854-9b8c-476c1552a162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 81f1938e-ffed-45ce-b7ae-019dd1705c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 97b2dff2-fe75-4f21-bb51-2df8922688b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 b490d277-ad36-4935-b277-21886ce7eae7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 9913b22c-f035-455f-b1da-7eeeb1a6a95b)");

unit.assert_eq16(16'h063F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #84 654fae7b-a5c5-4f1f-9e9d-97d1f3d4492a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 a843a1c4-1bdc-47cd-a311-190b31ed8d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 df675309-9072-486a-9fea-95ebe3d7c0c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 de154ed2-38b3-4265-bf3e-45eea4d11d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 346416c9-9e0c-4e3f-b32a-2b6053825ced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 61ad3489-6199-4096-b56c-07d9f95d2a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 3d59f71f-e808-4740-96a4-39946d9045f7)");

unit.assert_eq16(16'h03F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #85 d297e120-7032-4f37-b1fb-b740fa762116)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0102;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 cba30d71-e3e4-45a5-afd7-73410d2e106a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 a759115b-c3f4-4cc2-bc20-c89aa240c69d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 12333671-84db-4533-8599-6fd23688d51e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 95658ba8-81b2-48cc-b39b-5b2c45bb2a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 290f6346-18e9-4296-8e97-b843240af9be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 173d6891-d007-48b3-b342-84e88764047f)");

unit.assert_eq16(16'h0033, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #86 3bd773de-a0f5-4254-a1bd-0dabd8e26747)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0105;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 da155ca6-1183-4797-975b-6f59f42ba359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 418acde5-3789-46ca-bacd-422220c69e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 583313c0-5f60-4145-9644-7cab4addf63d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 3469ee54-702e-4442-aff1-dd3f25514a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 e366c9b4-be03-4ff3-ace8-7b0516740548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 ae44d73a-03a8-4c8a-ac3f-6e9f6945a3d4)");

unit.assert_eq16(16'h049C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #87 321a3dd9-d3ea-4cc1-af18-2e3a52c58fe7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0108;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 ff525351-1492-4440-b48a-2caeabdc4702)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 5d8c6ad0-f116-4756-b7e9-fb1072c904ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 1557dfaf-6fe3-4e7f-8cee-2d33db0c1f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 4e7c9c86-b9ec-43e8-9b1d-ff55887c0988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 e34048c0-be24-40f6-9ba8-45a32a43af50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 b87b3c00-0c21-4d9f-8666-5fa6d79a54ef)");

unit.assert_eq16(16'h0398, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #88 b672a9a6-8a70-4a98-86b1-a0534740052f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 ec8895d7-2b0f-4da8-b6e8-650b8d78df2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 a92790e0-77fd-4e78-92ee-0457500a4af3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 fd9dcfaa-af1b-4642-a3b7-e77f455e40b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 7725ef87-4025-444d-a389-2c3e38244c37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 96368d71-3a50-4958-8b44-c6b14ec1026e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 0b6b5887-418a-40d6-9601-a75e15875204)");

unit.assert_eq16(16'h045C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #89 3f088cd3-471d-4d43-ac79-99972a0e88b8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 8bbb126a-0f0e-4733-ac20-1d1370e1d805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 61ed70d5-2198-4042-a8ab-ce50087a4a3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 a7ea3c13-c65b-4840-8356-720bd0693047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 ea291ee4-bd53-480d-aa7b-6a6bca01e1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 dd3efd9c-8d64-42c9-8440-738e74b9d2d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 6a43945a-90a7-4ead-8288-6722fb278e24)");

unit.assert_eq16(16'h06D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #90 cc3cdb23-db0c-4965-a6d6-7e0febb3f78b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0111;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 b78ec0d0-14f4-4add-9676-b31bce2a6e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 055b7871-76b7-4068-a8ad-a523f2612b3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 68a591ba-6fb0-4f67-96a0-326b9ece6c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 04faafa7-2e45-45f7-92ea-91ab6a247962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 abe56068-cf96-433f-b207-7d0b412ede03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 430641fc-a908-467d-ab94-7e672a1f7e07)");

unit.assert_eq16(16'h08E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #91 2dfddde5-93c1-4258-9877-e60f78555d57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0114;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 c83c87a5-7310-4728-ad78-aa883ddd9033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 02759ef6-337a-4295-9b81-a007ab7d818f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 bcdb5a7c-86ab-4665-9337-e8bba60aac3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 b77bdbee-8327-4d39-986f-5a9124d1cb05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 662a1dba-0882-44d5-ab16-938be6c4139f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 44a03712-a6f7-47aa-8e0c-77a6cfd0651d)");

unit.assert_eq16(16'h0758, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #92 983343c1-7b18-414a-a8f0-75fa45a4e628)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0117;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 c93552ba-f429-4df8-a275-9ad8a92d6abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 67d8c1f3-1607-4a8a-9c37-8010b6d5434b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 5318d027-a494-431d-8752-6c07b8f6f31a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 41e6b387-c2b8-4ae5-b837-1e0d7a07978d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 eda04339-9c3b-4d77-afcb-262e88772017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 d8cd3820-47e4-413c-bc28-39c845cae811)");

unit.assert_eq16(16'h0FAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #93 75a0edab-77e8-42e9-96c6-2791f4396679)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 aa9a360b-b91c-421c-b881-b229bdc05b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 03da42db-6591-4ad7-823b-c0e790b982f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 ae67ddbb-1aa3-45c7-ba0f-32c96be5ba83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 cd816112-9f3c-4c9c-b61e-b25f343527eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 9cc2f64a-d7f1-475b-9626-459f4359e832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 674722bf-f62e-4343-9f69-571ce1b51f83)");

unit.assert_eq16(16'h060F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #94 9ba9e85c-0e29-46f2-9838-ede17f449369)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 9036aa9a-59a3-4b4f-bed2-efc7d8a61e9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 83187206-1749-4e22-9554-cffa435e4d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 0410d33b-701b-48a1-af8f-7b7dea656f12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 5699f530-bcdb-4363-876d-fb3f4c0c3435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 2ac6e7e8-f1eb-45a2-932b-24210a490f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 fd4c01ba-81bb-47f3-aa8b-8e9e75a050a8)");

unit.assert_eq16(16'h02AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #95 b0ac69d6-e3c5-4e03-a1d5-4fb961f774b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0120;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 28a700df-7e9d-44ab-bfc1-336f5de282b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 df972fbb-be90-40fa-8b4b-61def9ddaf55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 b5cf8922-019a-4869-863a-68c9186fb7ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 e3c13881-1ea9-4945-9216-edba5ba03d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 69d2bc7f-5e65-4701-90fd-4a626e953b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 afbdef31-668a-4fa5-8bf7-8e2f4d048502)");

unit.assert_eq16(16'h0123, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #96 e1fa9ba5-f486-45b7-bd83-63ab2610569f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0123;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 45a7981c-044f-41a3-8740-4800e2bdd66d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 771af7a6-72e8-4def-9c6b-531eafe1e4a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 ac9d45f7-bca9-4609-b1f3-b34038507328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 78f28f7a-8697-47d2-8832-65177533705e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 519ea145-11a1-4c78-a33d-90ae071ac632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 008e32c6-d3e5-470a-9758-85aece70e9bd)");

unit.assert_eq16(16'h0126, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #97 92939932-9a3c-4209-861d-c15bcb59bce7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0126;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 10bf6556-4e15-405a-b7ab-89977bde8093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 ebcc990b-6720-4902-b4f7-04b2e837f43f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 04a2756f-860f-428f-8930-ae13b7c6358a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 e5e18534-4b79-401b-9120-602ffd378cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 bbbafa60-559f-47d2-bd82-e0aaf1ee7102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 725fde64-36e6-46e2-bfce-2d8863b99e19)");

unit.assert_eq16(16'h0129, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #98 81e2ec94-9226-47ff-a506-34e355c7c41a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0129;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 28b50f86-0445-4e3b-a5a4-b76fd5de3ab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 3fbbc6a9-e824-4a20-8d24-446f6c5379e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 8e6bab1e-02bc-4fbe-b079-a96dc0ad697b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 2c4bd90d-a3d4-4fe4-8a88-42ff34392164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 6795c478-e258-4fda-a173-1aa1b339ae3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 a637df79-0dbd-4e03-8799-287dd5a00b1d)");

unit.assert_eq16(16'h012C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #99 f1b63202-eb1a-4490-aa9a-6f31b2f19803)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 1d282f61-1945-4811-95b1-d149302d3bc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 b348f62d-a0af-42ef-a693-79fec9fa6734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 16616c93-e92b-4a3f-bce4-a413bebd5302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 3b472da1-b3f9-4f25-9f80-9809a74769b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 477db1ba-0b3e-4ca2-aa9e-93acabf9da64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 36afc61a-cfef-45c0-9d14-456ebdf0c1f6)");

unit.assert_eq16(16'h012F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #100 b4fe29e0-8293-4ae9-8a77-47465e6a8476)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 4d98f048-2ac0-4ab3-944e-9aab12d124bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 9db8e4c3-9d91-41a6-878f-c8982b0c1b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 eb6844fb-8f80-4178-abd6-a458742c218a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 312abb1f-93b9-4c9f-b46e-9e2d7a28f208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 e8828ded-5e3d-4953-b367-3c8e8bdb1818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 9b12cd18-b7ec-4755-aa22-63134b46789b)");

unit.assert_eq16(16'h0132, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #101 bafc917e-799c-48c7-b792-469d3f18a264)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0132;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 693e3df8-f0da-4c2f-981a-c4cd081129df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 baffecfd-99f8-4001-922f-18c05d20d76f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 7746adef-02b0-476e-9566-0811c7621c55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 4b5fd1f1-c1c5-48d7-97dc-2d4eb10a09fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 98a50955-201d-4c68-bd25-b2d48c1c7e7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 26342ffb-5709-49e6-97d1-4646d315e540)");

unit.assert_eq16(16'h0135, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #102 6e9f0aa2-2a39-4765-b7b3-f8da4486b27f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0135;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 afb1dee7-b602-417e-8d6c-f67cf38eaa85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 2c6e4180-ea2e-42fd-86ca-fc1c0d4dd85f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 d617a2de-fa5d-4c11-aaa9-ee983078346f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 c33530fe-5ebd-4070-8ef9-8410ffb2cae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 5ad494b3-27c1-41dd-b31d-7322881370b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 44675931-dfcf-4e8d-aeb9-95e4321e5bae)");

unit.assert_eq16(16'h0138, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #103 fe219375-9564-4b79-a476-8281e807114f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0138;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 b530d3d3-668e-4042-91bf-0ed591941132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 0ca40239-e2ff-4c49-9f55-1651dab1eb3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 794dfd99-d171-4306-8197-562987e33e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 b557c144-9385-42c7-b377-b27ebe1d6e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 77354b43-5e2a-4e6a-89bc-db67d51958bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 fe68ad59-c8b2-4249-bd51-9fd7b48652fe)");

unit.assert_eq16(16'h013B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #104 7da8dde1-c25e-4dc5-8dea-3412a528e7a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 3a7e65fa-4a71-434b-aafb-dbf4177dfc72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 2b7f2b04-90f6-41ae-ba8d-f08fe566e8ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 cadb1702-cc40-4752-8e42-0c5f33f47b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 edf4b0d6-6f90-46d5-9e1a-3752d3f79cbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 86a07975-8caa-4657-8fcf-d858072da7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 91900c4c-054f-4ae5-a446-0cf2bcb9da19)");

unit.assert_eq16(16'h013E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #105 42731b67-927a-4f96-8c8f-fbeccc53fe5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 4691552f-7dbb-417d-9aef-ea80a1d42141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 ecd49426-789a-4a98-b2a6-fcde6f395a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 bd4671ac-041a-4f4c-b824-e7f36d330501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 f197188a-e6d1-4f4e-ae5f-cbfda9f53d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 5679047b-59c2-4717-adc8-6a09a8a1b755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 1e08f816-150e-48a0-a715-09fdb60de97b)");

unit.assert_eq16(16'h0141, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #106 6f880056-71d1-47a5-8287-7b83dfcffbbf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0141;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 388f8278-6d74-40f1-bd88-6de6582a3cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 eb4f86de-43c7-4ec8-991e-889bf6bb54d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 fe5a3e08-933f-4729-ac4b-e0f6d92e5e56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 26393776-446d-4e8b-841c-8ac33fa60f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 970ad1a2-4d1a-41c0-b389-9d48d62c1db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 5d459821-7fc4-467c-a203-e2da9fc36dee)");

unit.assert_eq16(16'h0144, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #107 ff9a098a-4502-4842-b15c-ab74b024a9d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0144;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 31a76614-ac74-4490-8e4b-eee43ee13083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 9819e05d-0802-4e83-87bb-e9619c233473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 4a8a335b-7ec2-4e11-ae62-57e8813d2cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 53f26594-4939-4a7d-9ec3-e43f6b61d75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 6ef33527-4ba8-41a9-80f8-c48bd6a8adb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 7e822758-c3b4-48a7-ba08-90e05fae2de4)");

unit.assert_eq16(16'h0147, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #108 7905ed54-0929-4f1a-a7dc-9484a42ce081)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0147;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 64c67b25-da7e-4416-8212-ac93eff31d94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 b1fa3654-a479-48d8-a1ec-d0cccf390a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 8ceb55a0-b06c-4535-82c6-803e27805181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 e7df71bb-4cc5-4e6b-a3ca-eca7476b0062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 1e4d220c-c316-41cb-9a6a-85f6c2091925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 b48674e6-f0ea-4fb7-9c1a-a1016cb64e18)");

unit.assert_eq16(16'h014A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #109 2d0fc7c2-e8e3-4992-9c66-a94b7965691f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 a3c9d7a5-6eec-4657-be21-44d3f05867d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 8c696b9c-653d-4cde-8b38-862d5fc7b258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 49760ce2-b030-4961-815d-da2bd8630fa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 2769295a-e213-4a0e-b72c-1782792322fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 0d0bcf65-289f-4a1f-9af1-9d4b3e1d36e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 f7b170db-bbe7-4e9b-90fa-f90743d089d5)");

unit.assert_eq16(16'h014D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #110 a69fb934-27bb-442a-964b-7f8aff4297ae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 3b29f5f0-4040-4bc6-b8cf-39d42bd07885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 a1c28f8d-a710-4283-bb19-dd7fcd1432ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 4cca2644-91f8-4bb2-8bc0-5941a4dfc294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 760c5e72-18ac-4c37-bde0-af6ba107bfb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 b176335f-920b-48bc-9d13-f455ff312956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 feee899a-b686-4e36-a9fc-7906ad52ee37)");

unit.assert_eq16(16'h0150, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #111 11099062-d313-419c-9762-b7ff41ca1824)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0150;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 3ec484c5-e9a1-407b-9e4e-28f0dea5cfe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 2d13395b-021c-4229-b20b-2829640b760a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 a4c75d9a-a877-4b12-8577-4b836a43551c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 92725c68-b68a-44e2-a4b3-9d7eac26fa17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 7fc61ee8-8b76-4c06-9f07-946978e8b7d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 b7b39d45-aa92-4979-8706-78a24781106c)");

unit.assert_eq16(16'h0153, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #112 d9d529e9-93a9-4d53-aabd-96ed34065c97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0153;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 92e1a1d5-b385-4c81-9ca3-c5a7492b6fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 fcd7ea80-b8f6-4e2d-a3d2-737524fcefee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 41b169a5-2602-433c-914f-fe7dca43f42e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 0dabc100-3707-4e3f-9ee2-d5dd77deecba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 db0c011c-c21c-4341-a919-7bcca1a703fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 04d9919c-fa4e-4e08-a2bf-08b1f6167fc0)");

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #113 bfaa1bf6-c833-44af-b506-455ffb0d432c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0156;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 f0e350b6-88cd-42e6-aeb2-3247b20814ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 7feb67e7-ca1e-4805-81ac-0e11377500d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 29e57614-249f-454e-84cc-cb8a580ed54c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 574f0937-ec97-49ea-a621-19914a791545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 7bcaecce-0c13-4281-8dfa-95d988ac4a52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 95e0a5b2-02ce-455d-aae1-5b29e402bc2e)");

unit.assert_eq16(16'h0159, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #114 0fbea59c-72ae-4a3e-9ef2-0fb1ab2f4819)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0159;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 564be06a-e8c1-4265-a694-a81ae0b3d743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 628123b6-07d4-4d9e-b765-706cc9f07a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 28771d16-ca24-450b-9592-9162d31832c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 d099d820-052f-4213-97b8-9639b9b7951f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 bd32d4e3-fe2b-4726-949c-63271633637a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 ca1d5f12-1d66-4fbc-96f8-3f6f308916f5)");

unit.assert_eq16(16'h015C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #115 cfa39d82-a630-4b3e-b924-5240821cca70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 72a8dcaa-a23a-44fb-9ed9-f04cc4b52e37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 74200d96-5685-4756-b5c0-b184f5bc6cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 6e214963-7f48-4382-817b-54d5c0d11a0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 e7e58090-943a-470e-afe3-4682712f8e7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 2de5337d-9ad9-4ec2-9ef6-749c26a6d83d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 f774f016-d64e-451c-9079-f8e31e745fa0)");

unit.assert_eq16(16'h015F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #116 c1faccf7-893c-4f31-b918-43d9d097bd28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 16efd294-ff90-4b91-955b-4347dde6a4f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 c5082f96-de45-488b-8fcc-98fc28e1d843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 3d6a4d48-3f16-425c-b15f-7452750800fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 ac7eb6d3-9a40-4bab-9b33-7d70c2135c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 792cf766-e5e1-49a4-af71-e1c871579517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 22b31986-6713-4dde-a76d-13f86bb456d3)");

unit.assert_eq16(16'h0162, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #117 948855ba-95f9-4095-87f6-99677dfc1f50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0162;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 c4282c2b-f1b6-487d-a6eb-fbf8c1c5a2b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 746454b8-1bcc-4f92-b1d3-89bddb9fd6f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 02f94f72-fb13-492c-a7db-16b4363f6c3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 f4ee2889-64bb-4359-9868-c286d1e76911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 fe3a4a4f-0c4f-469d-a771-f326ba29d8ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 8bc1b23a-730f-44a0-9933-7098d1f07df9)");

unit.assert_eq16(16'h0165, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #118 a007270e-0381-4a0a-a880-7a055d89c760)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0165;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 fa97c836-4ae7-46d4-95c8-239b6e8f46e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 f868f0a0-a189-4ffc-8f67-9d53ce84bb25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 7bee7a76-fdb0-4575-a8d5-58929ca9943c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 0b618c68-c5ba-4ca5-9e27-bacb80a6a763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 e50183c4-531e-402e-beb8-9f93783355d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 66c1de45-4667-4082-9e3f-67ca9e9782ad)");

unit.assert_eq16(16'h0168, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #119 e021b33e-e356-4e8a-9521-c103c30a1f52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0168;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 f0222132-72f5-441c-970e-63bfce80ca99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 a921ea54-a3b6-4330-bf96-3290a3a32237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 e1bccd4b-d232-4de9-a642-87c355b58d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 50ddd001-0cbe-4482-815f-193d5d0fda25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 c01cafb8-d825-4ea3-a9bd-0e3475944b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 3232cd65-a91c-4032-8c9d-5913aef2fd2d)");

unit.assert_eq16(16'h016B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #120 4f004994-7047-4296-8d24-89e99d866117)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 503064b8-a2d1-42ba-8ee2-b5334027bffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 e705ecca-0bec-457f-bb03-cf7a53e2c754)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 775db0ec-35ab-407e-bdf8-66312db1c798)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 dfb71fba-f2b5-4b48-8cf7-3e4ce02cf96d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 6b1c8dd4-cf06-4b1f-b850-b33c2055996f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 0cb5f899-7c0a-4e1d-ae21-6f4fc67cf99d)");

unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #121 767ac8d7-c367-47d9-ae53-d5df31c04b9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 0df9d6da-112e-41d8-8d09-786cf8e7aa8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 5873e53c-d3dc-4add-88ad-7e6fbe8b5ecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 ef6c412d-5c24-4f34-9f9c-c378f3ab204f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 fb5dd064-876a-44b3-99ab-ad2ae399bf20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 bfff32b2-3f7b-4971-bee6-ae68d0068b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 92de9b17-14c1-474a-a8b2-f597c201c76e)");

unit.assert_eq16(16'h0171, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #122 7c3dea7b-bd9b-4aa7-8db6-2c57888ef7a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0171;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 f900616c-72ed-43b7-ac39-94db5c5605c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 ddc465bd-73dd-4ea6-8fbc-e8d740f4f3b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 2a2addf0-ed90-4159-aefd-dab9ca4a61b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 f80c2bfd-829a-4699-a823-e46fe15f5d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 091d0770-378d-473a-822a-d2a9514d53fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 68831063-e1bc-442c-b6a4-07aa4f129420)");

unit.assert_eq16(16'h0174, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #123 5563aff6-2695-4178-97bc-92ef1ad6fa26)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0174;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 4e4dffc6-eaf4-4d5c-8e09-61922e2d08d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 ce9a7add-1973-4f02-9bda-5745895102f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 c01c5101-b47b-41f4-8748-888424f75704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 19f15d8b-11b9-4c97-9a55-88d9a626e651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 3c928d2d-dd54-4a59-806c-e546cf2f7754)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 afa00003-96b2-4bab-afff-8f88b293b7ec)");

unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #124 4b163bbc-f532-4cf4-aa99-263c22fd036b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0177;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 0992451a-566d-43f5-85fa-418b2492e750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 56d76fe9-2dbb-453c-9f32-ad0f18c8fa16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 1cad9fe0-64ab-420a-8a85-898da0987a0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 58e4343a-6973-43fc-a4c5-45f1adbb186b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 b737b3d9-e2b7-4e90-a566-df1e55a8b758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 cd306db2-3b89-40c4-b7c7-81d027c87b85)");

unit.assert_eq16(16'h017A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #125 7e2e6858-2b88-43d3-99c6-fb86d251d8b3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 bc625b82-78ab-4d8f-9e44-c7f29acfcebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 eda7efc7-58e0-4854-a117-e31dd6d11a19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 bf8edc80-284d-4d08-85e3-ede7acfd8659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 7fdca85f-2c83-4e76-87fc-65a16186cee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 1d5aa35c-254b-42d6-a11a-0d3d7c77e0d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 fe6d2076-c89a-4cdb-863c-8968d210d47f)");

unit.assert_eq16(16'h017D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #126 8df86302-e0ac-418d-ad7c-e5657cecb19b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 9681c91a-f3a8-4533-beba-1412804a4357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 63eb167d-390d-4218-a084-26a9e9662c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 4918042b-ab2a-494b-bb66-21b3d2a3e572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 ba6ff14d-6a75-4fba-b8dc-1d6e147f5dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 e995796d-0a19-40fe-99c6-14883e3c90f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 a985f819-a030-41da-b509-f6e6610757b8)");

unit.assert_eq16(16'h0180, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #127 f8927ad0-5fa9-4f39-9b33-619a68c1a719)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0180;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 cf1e90fb-91fc-4a16-9c5d-dad3be17ef8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 84421f67-3688-4f60-8bff-d36d8cf6eb00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 135dae7c-7fc9-4f26-a3e3-2a678fbf60c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 90b0eff1-02dc-4595-a540-17749d29a295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 78b3a967-bcc7-44ca-9dea-3e2f6c3e4840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 b714273d-aad5-4333-b6b2-1ad1ed92b476)");

unit.assert_eq16(16'h0183, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #128 d905db69-3de6-4678-aa91-fa673afb8534)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0183;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 cc8769e8-af15-470f-9be8-6515a4fff738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 17f1b0ab-daed-44fa-b148-52678220782a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 fa78d28b-b9da-4d8c-aec4-ea14ccafa632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 7e850b55-a20d-4110-8cd9-895dc99e2bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 68ca5f8d-8d16-472d-88c5-de8f809ef3ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 f5f4496e-ab55-49d2-a049-2f32b8415e1c)");

unit.assert_eq16(16'h0186, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #129 5ed27c9f-390c-49f8-988f-29ce6eb01ce4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0186;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 3ae26aa2-bb39-480a-bf26-2d946ff9be5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 a068f5e7-ef82-489f-9808-c624fda297fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 aca06acd-68e7-470b-82d2-eece47852fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 48cf56f4-e41a-4885-a686-bdad7afebb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 0bbdbbd9-076a-48a0-8ce7-3551c3e1cbb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 10253600-2b3e-4a94-99bd-b0273e74879d)");

unit.assert_eq16(16'h0189, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #130 f44cea55-da66-489d-887f-570baa12146b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0189;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 b8a38ed7-284d-4d33-9016-fb6808a3ad14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 f7a19dae-bb0f-448e-a045-cf720a40b84e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 7afcf7af-486d-48ef-a08d-d9db3c6604d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 402d70fa-fc29-4544-987c-f00ea0700f75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 13f9eda8-423a-4f3f-8605-cdb0d9ede8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 ba3be363-65fc-4e1d-b6ee-ab34e4997f08)");

unit.assert_eq16(16'h018C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #131 801f4779-6c2d-4d66-84a4-79e2aafc9288)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 9cbeaed9-6d75-4845-a24e-e6fbeae1ea06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 d059a4f3-bc1d-4e87-bebe-c35622d3d453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 559f563e-5733-4a31-bb72-db82a88632ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 1aafffdb-b328-4a1b-856f-ef4d72a98123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 b3121b94-f7d4-408a-9eb9-49edeea985ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 4253a031-d086-4003-a7bb-a56010bd8188)");

unit.assert_eq16(16'h018F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #132 7badf92f-edb0-44a6-907d-e824a966282a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 847d7bf3-c7b5-4769-a826-9d3dd9b37760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 f62acb35-f602-4986-8822-23bc2884449a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 9661e8f6-ebaf-4320-8f8f-a234060a3512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 f48e9711-015d-4023-bd61-370a7bb7a8e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 15be51ba-cdaf-497f-9fab-8a01f7a8feeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 69ba82ab-f257-45a0-bcd9-a52979b09444)");

unit.assert_eq16(16'h0192, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #133 83626ded-abc4-499f-92f4-e9db39efde29)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0192;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 af0e9640-1d66-4ce4-8a61-4ba147b6cb37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 d6640724-0afb-421b-a709-ea956fabbd93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 524f59bd-d89e-42c8-a3c7-46058381176e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 2d1135d6-27ff-44de-b2cc-7ef2b053bfb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 575b3b23-8acc-40bc-9cd3-3bf3057aabc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 eaea8467-ad17-4e17-b58f-7a1cd40ebdd9)");

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #134 c7c388de-70bb-4129-8955-c06e95eebf72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0195;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 d733895c-e131-4d8e-a005-68d8883488df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 c3c1ef78-bdaa-44f2-bd4d-ad3cbb636c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 cf3b75f4-6c58-4d9d-a475-27da3a10e25c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 83bb2957-55bd-4eac-89d7-887f4f558fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 9f353e75-400d-4cd9-8c0a-54b201c7cb2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 9101fc0e-05e3-40d0-897f-6baa8cb7e975)");

unit.assert_eq16(16'h0198, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #135 7cbef421-7c6f-4f0a-9260-d4fc614de936)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0198;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 0b00a409-e8e5-41c2-b1bf-cf503782ed47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 fb1cf214-f635-47af-865a-7b969e5c2c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 f3b0cb98-18f1-4553-b9c2-b0736553d059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 276b94f7-0a06-4de6-844f-dc11a232bd2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 bfcfad20-9634-49ab-83d1-58735223cf31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 ce4b61a0-223e-444b-9099-79f472936a1e)");

unit.assert_eq16(16'h019B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #136 cbea3ebb-8f6a-4d07-93c0-e2148d75cc04)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 14c3f4c9-3967-409e-a52b-4e76df58e85e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 661b14c4-97d8-474d-b8ed-8b689cc3b080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 9869fe04-eb0a-4d50-8250-fd4f44eb8e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 d258b13e-fba9-4ede-971c-9f2ed87724f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 a42a475c-4ca9-4000-a76a-d6844f05c393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 fcf5aeaa-82e0-4203-b532-20534e6e2300)");

unit.assert_eq16(16'h019E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #137 aad21fc4-e68a-4847-a658-ed73abdd923b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 420bc346-ec5f-4801-9a67-f1e2939b2c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 381a771e-2b4b-4cef-a963-84660ffd2b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 dd6e74c6-e554-4cc4-8fcd-403dc7519d94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 51d3f960-414c-4a80-9ca3-485cd8fb8656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 0b39c462-b981-4d1a-bcca-840c2cc50c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 c1bc5ec3-2944-43ae-bf24-aa04ae89c988)");

unit.assert_eq16(16'h01A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #138 9b83c567-1781-4e8b-895f-8816dec47753)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 6fed6ce3-4362-4d4d-a0e3-7315ae1dde89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 04fedf9d-3495-4ebf-85e3-a56ee6c14ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 b3190bfc-ee7c-4854-b694-7c820bee52a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 6b36422e-d888-4dbf-89b1-a9bfb6d795de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 d8ef9a89-36e1-4a34-9d30-0c117094bf7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 c2986a0b-171b-4630-82f5-0a0782a3f391)");

unit.assert_eq16(16'h01A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #139 e46b5673-063e-4395-a661-8cb38848cf70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 0e594c1c-ac81-42d5-9e88-e184cae16d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 95e1fd08-8ff2-48bd-935b-b58507f3d2cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 579591fd-8e0d-427f-977c-9f35a01bd6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 8d66bfdc-40da-4ad1-a98c-93d16c975b20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 e0268005-5799-4a3f-bc72-04f2227fdc42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 2b67b1b9-8016-4ab4-89ac-349d52a76c65)");

unit.assert_eq16(16'h01A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #140 0a875d8c-b6fc-4e53-9708-bb2c623cc8d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 6052a3c4-2748-43c1-b5c9-c4086c571631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 31b5dc5c-4334-4038-a30b-8a4ab24da24b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 db845318-764f-4854-bcea-cfe17f977b1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 63ef1499-8b98-416c-8f42-52a0857bf17f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 9dee6e93-ccae-4bcb-adb2-b3c0203a5160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 19b0af6a-e120-4439-90d2-0f2cf7b137a9)");

unit.assert_eq16(16'h01AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #141 dc66771c-8aef-4eb2-8d5c-f4c4e9afa76f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 5613ca95-62b2-4de2-9600-b503688f4b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 cd0eb9b0-a429-42b7-acc4-f29145618ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 c746dc9d-b0ae-47a4-a3db-2842d67ee0d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 06ac0141-bbc3-4dc9-8f77-afa35ae30c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 b66a6beb-c643-4ee0-9124-5fd701c5ab77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 8f2dce4c-8c05-43ed-982f-bbe66a0e668f)");

unit.assert_eq16(16'h01AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #142 4c32aae2-62c8-4654-b4e4-685cc7c862e3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 c0e108ed-c189-4e3c-9ccd-c2b94e62b4d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 3c2d38e0-14cb-404b-ab55-1560565f6f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 4a1430ff-d0f3-4315-bc68-e3527d8c8102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 ca612e71-c71a-4d9d-bbdf-046157cda7ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 de133907-6a21-4730-91dc-563c37d3995b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 a07fb984-684d-4e93-a0a9-cb250c79ece0)");

unit.assert_eq16(16'h01B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #143 50b9cf71-4fe9-4eb3-ac70-82297093dce8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 70c59a64-ef94-4a7e-b60b-5b431f4e85c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 7113de55-605d-4c47-8641-b062ecce726f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 3c08db33-63ce-4673-ab49-b684e0de94e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 42b56fdb-c1af-499d-9a23-1715f0b37e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 a8c6a5a9-7e06-4167-a72b-921b58adda0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 04c47f92-e584-4ad3-a081-174fe674dc51)");

unit.assert_eq16(16'h01B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #144 1aa40ef0-906b-4e45-bbf7-a4ef8c735f60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 28813d7c-f29f-4ed5-9198-9e81c916a885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 fc1d8809-cd8e-495a-b76a-dd4d371e7435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 0e23c077-e1b7-4731-918c-bd98ef1ea43a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 ca431245-cfc0-4e37-bdf9-9d9d7c81b675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 7624afbe-6a68-46be-94a6-f36f12c05ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 ff861bf6-4c13-4481-bad1-d6790d17a670)");

unit.assert_eq16(16'h01B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #145 f4bc6f42-d0ec-4f58-9f47-0672a5e4d24e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 c8820eae-99e8-43f4-83a8-8b1f934750c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 d2c8d5eb-6f62-4e75-8c9a-886526057191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 e288b1f2-17b5-4a4c-9e00-9b88714caf9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 fbc73f1a-b26f-4fef-a8af-9f096b2924e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 3f5a9c15-e8a6-4cd0-99a1-f4a188cd6bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 09fdedde-c2ed-4377-8f2c-a8b14798483c)");

unit.assert_eq16(16'h01B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #146 1ba175dc-813d-4342-a335-5b123d4b1dd0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 aa992e37-1fd2-4d10-ad90-c709396000dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 89fe1519-b61b-4c4e-9348-466d7f3de28c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 07a6b01d-ef01-4c87-9a4b-e77076bfc303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 d3bac7bc-791f-42fa-9f18-16d3eb000f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 1490e5f5-c7fc-42f0-856c-647432eaa05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 9f7c521a-aa08-49fc-b50f-2a8d37af0ea9)");

unit.assert_eq16(16'h01BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #147 91783636-d9e8-418c-9fda-db998c8f7982)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 25c26169-5b1c-4137-8a9f-28ab425475a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 fde86d9f-7f76-4f6a-9092-b3da9e4a5f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 9792249a-d195-4b8b-aa75-04ddc47c8060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 06982859-1fbf-41fc-a443-1fa1a0952f3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 387fd818-ab34-4cd1-86d2-63536c27570c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 e5a26d12-22c9-4c8a-bdf6-01486f88710c)");

unit.assert_eq16(16'h01BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #148 089595d3-c327-4840-ae5d-d43ff79ef7ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 be039806-3361-4c84-99bf-a18f3d852e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 ad9c4ca2-8dd6-4ea1-a48f-622a05c9c8c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 682b81bd-a350-4b0c-a8b1-883784367d34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 f1d584e5-fd2a-42f9-99da-93ac0b52a5cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 e8dba14a-911c-412f-9029-19392e6e1822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 2d65a15d-f0f4-4687-9162-71bfc7f74f65)");

unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #149 b36759f5-6642-4ecc-a38f-fd49470c0c5d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 cb3951be-1b6d-4e15-87f8-5a92db0deac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 64e1a7ea-3420-4b8f-9d9c-abd489325d0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 0819ccfd-4cbb-47d7-b40f-e95d69880d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 b280e546-920f-4e72-bf1f-a7f763168f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 e58cf142-9b3d-4a9b-82a5-6fd54f8fe6cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 7d22fc47-2aa3-430b-98af-bfc4f417a2c2)");

unit.assert_eq16(16'h01C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #150 157929a5-8056-4c7d-b4bf-10dbfb42aa14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 00d90fde-7358-4ff2-99f9-f9b84dfde414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 faefffb5-3fc4-4c5d-8ff1-06a54c0663c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 ca889c25-3194-43bd-9cca-4f129125d150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 58d6b9e5-c558-4aa9-8d2e-69c9e4865ebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 dd355655-bc5e-44d0-9e00-6e088689f610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 ba76fd18-954e-41d7-aea8-18f2f9e106c4)");

unit.assert_eq16(16'h01C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #151 891b629d-0748-458f-8d98-ef27cd5fc97e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 3a5ee70b-281c-40bc-a4cd-b2e17abe6bad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 4effec90-56e8-4bf1-a0b2-ab43b8750e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 b4c4fa1e-895d-4446-b704-2ad8d28b871d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 c4b70cec-4b05-4a23-ae6f-31b55253ec3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 493a5f5a-2484-4ea3-959f-0c9e939a036d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 9103fcab-b16d-46f2-ab9b-9cf337e92cb8)");

unit.assert_eq16(16'h01CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #152 17ba842f-1011-450e-8573-88e838c25d88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 475b5059-3eb5-4633-b857-dc1941ec29c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 abbb767b-6e5d-48b0-9089-4b979981a55a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 fa54e6bb-cfdd-4953-8755-6668a567f699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 51a44734-fb3f-436e-8688-912e7255bccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 93f00dbd-13a9-4768-8ee5-c10dc1c0e005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 0704f324-2953-466d-b1fd-499401c097f6)");

unit.assert_eq16(16'h01CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #153 596f3bdf-b38e-489e-9a6c-31fb630ecbfd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 f8e37454-01d7-45a0-b926-f07f62a4ecab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 5d966cc0-1dd0-4947-8dff-e208dfb58be7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 4d8dbf7a-b535-4e74-ad30-6de097035b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 b9179d3d-8765-4a6f-ae7a-967c4bfc24a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 d1531f73-5a52-428c-ad1e-17f99e868b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 790ff951-8648-426d-97e4-a7b67ee3e61f)");

unit.assert_eq16(16'h01D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #154 f8ee8667-c8ad-4409-88b0-8139bfa4064d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 263653ab-26ac-46f9-8e53-65e333bcc8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 f3b880f0-d80f-497a-a3b9-e48ea32755e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 f7035273-c501-4aa9-a0eb-70af69843193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 826b74ec-317a-487c-b433-d9f276d5a236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 6628b70b-3257-4ebd-b3ff-7b96242a39f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 fe8738f2-5f65-45aa-aead-3bee7af4ecf1)");

unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #155 51fd7b07-005e-4645-8688-06bdfd669156)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 d8009b2c-2bc5-4c6b-bb32-0f7be955c813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 a1feb69f-566a-4d3f-a820-e116a2efddbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 5a8cb0b0-e723-43cb-9f01-a3b9aa1c4c59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 eb3d3a3e-8e5d-4193-a12c-2ee2854498d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 a517792d-9aa7-4a35-a92e-37f8d16d5f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 6f0b2337-aef5-447d-96ca-19db374871b0)");

unit.assert_eq16(16'h01D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #156 4f31af2c-ffef-43c5-b581-7bda46c205b8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 7b4c7944-9ebb-4402-a028-235a69c1b866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 fa443111-1243-4314-b7fb-b6a65b8bcbab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 8f9597f2-f078-4a69-b44d-5673bbb45b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 cd3833c8-24a6-403b-be99-94f7de4d708d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 7a66c5d2-7697-40ca-b654-7b37b59b7dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 62e99707-1bee-4c36-aa7a-e25d57d685df)");

unit.assert_eq16(16'h01DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #157 7d59c6dc-f0ea-4970-a210-fdc6a16cc139)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 42940be5-47a9-4cd5-8b3c-347364218640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 cf325fc2-0c07-4526-a886-a3046cf479c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 e1e38ab4-ab9b-48f7-a40e-5f17c96ad430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 64ed9409-0a97-4c9b-96c7-cb16b314f41e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 0eff6bb2-5c7b-490e-8ddf-d745a8d79bb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 06308fc4-1e0f-4190-88a4-e1893223aa01)");

unit.assert_eq16(16'h01DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #158 79d22c8c-bef9-4124-b508-c59f920d0750)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 88b63b59-8e41-4088-9331-e43a2a066b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 4191addd-7029-4a13-ac43-8fd67681b1f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 e91dea0b-9346-4b08-a909-a9dbea736050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 bf10ca4c-bc52-4b05-846c-37c4419de179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 3807df28-cc45-41c0-aebb-03fdab781629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 677c03ac-2307-4617-8337-3cfdf8d119dd)");

unit.assert_eq16(16'h01E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #159 7b9dea44-b800-4b6d-8f39-325e26b77770)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 05488d81-bbe3-45f1-b1fa-19449124f202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 99e9f47a-d426-427f-9b12-7acf747b3ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 d0798f7a-72b4-4c90-ab2e-f2a739498e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 7b865495-e848-427d-92b8-72f5409a901e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 b4fb3b60-9a0e-4226-b83c-ed33e160c008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 ade52c01-8ca9-4e73-ab95-aff29f3cee9a)");

unit.assert_eq16(16'h0052, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #160 ccf8b153-c80b-4b66-bcdb-df4ff42eb014)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 0dd2daae-47be-4627-8c5f-b576cd620f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 364f77ef-1cf1-40f4-b572-075bb668edf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 6591b125-2643-421b-9ae7-93faf82b9425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 0874bf24-b1ba-4fc2-bbe0-6542df9ef329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 e0b75bb3-f6a4-420b-a3a5-28a18782a3c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 ed5c3ec3-9ce8-4a33-9f73-ba6457614096)");

unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #161 5ad09289-7866-420e-be76-b80252f15cb7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 0cd4e169-aa8c-4959-9634-208db9454ac3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 f8ae35c6-2f03-4f36-8458-a10603db5aec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 67d103df-d88f-4be6-a5dd-49ac5759d101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 7cea0dfc-36aa-4cf2-8ac8-7d91f28dfd93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 e1229443-1870-4446-8850-b8307201c5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 693e8301-0f78-47a6-8d65-3409d915d410)");

unit.assert_eq16(16'h002B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #162 50fdec8f-3854-4425-83dc-4817b890c004)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 0ee2cf0f-91a6-435c-9d4e-0a279d60972b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 c5a1b0be-4d86-44ed-8eb2-1eafbb1313d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 3aa4a571-b962-41b1-a854-a7bbccc54ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 99ddd642-e6e3-47c1-a505-0d79a3a722dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 bbb90f98-1de2-4524-8534-df35590ab2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 58c40c98-41c9-4119-aa6f-e675e6721267)");

unit.assert_eq16(16'h0C28, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #163 5d343aef-76c8-4727-9554-0f75cd43f2ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 9955a12c-d025-4d0a-bdea-f3d13c1a471b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 c7e36754-a854-4d2f-9eb5-23669a6c7203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 29eaa424-3199-41d5-ae26-9124b4201684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 9414cfde-6b92-40fa-b932-816dd247793c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 b11cfad0-c748-438d-a0c1-bf0e692f85b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 99a60a8b-b8e8-49fe-af3a-d73aab27fe76)");

unit.assert_eq16(16'h0311, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #164 5e4d270a-8b42-4dc1-aa2c-ccaf64c8de17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 bcfa974f-965c-4bcc-afa5-ea250993b201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 9444ce7e-4894-4604-b8d9-56fbfd8b7391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 a414eb0a-71fd-4e25-bac0-f12a0f8c7e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 9707ba7c-1a4e-4541-b6a5-a745b16d6735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 18dd1ebd-5a28-45ea-9209-ba327ccc2634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 40b41ac4-85f3-4f27-b64d-d6ee0017df82)");

unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #165 21e3e573-656b-4cac-a460-8ab373d9c80e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 3a7b2c9e-5ddf-4c7d-a69e-b001d990a1dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 0f6f92a0-14dc-4585-8428-017d0252b231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 51d4c625-42fe-4127-9594-5aba63fb055c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 5d9dcea2-0838-42ed-90e4-1bee33c8cea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 dd56ca80-a05a-4814-ad66-6a32c8297c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 609d1494-3f16-4760-9b91-fe6581c14626)");

unit.assert_eq16(16'h02F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #166 b354377b-937a-4778-bf46-63854b8c6303)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 44c39fab-885c-47fc-833b-d67fec58f7ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 d18ad4fa-f5bb-4e3e-9984-577d10f6aae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 04041edf-c056-455f-bdf1-bd62440c4a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 ecf6dcad-07ca-41c9-a536-60fe1cd819d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 a6358d0f-99e3-4ceb-b69b-fce4dfafdf80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 c101f361-1917-4560-9335-936ad98e5a84)");

unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #167 22527883-b07c-4831-8ca4-4a827c73db8a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 0053262b-64ca-41ad-b054-7755fb39105e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 ee0272ca-5a9f-4619-88b9-175fa5767d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 2a5505f1-4b9b-47ff-b7f2-865facb1964f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 af845d77-a072-4b10-9db9-103fff226720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 a5b0eead-a39a-4d5a-9db4-ff806a92e7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 37afb308-fd16-401e-878c-43f0dfd9f7af)");

unit.assert_eq16(16'h052F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #168 ff99dc49-5dfd-4afd-acc0-bbe89476aacd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 6564c2f3-4cbe-45b2-8d30-39d884922afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 60b6edd7-8a46-4c93-b786-05d7a4356949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 c16bfd38-34e9-453c-b2d5-c1dfdd127578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 ae450616-3bd4-4313-8940-4b0430f4f8f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 8b1303f9-0ce3-4655-8ebb-1717a390448a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 d905f171-3df0-4da1-ae7a-14d906a76dd6)");

unit.assert_eq16(16'h03DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #169 3125b201-54be-4a1c-aba1-7d79ccb7f90a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 d2db2ac9-fcb3-4c45-92ed-dbb5f6721096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 218ea6a7-3285-4b6a-ba6e-231b5ad7d9a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 7df913c4-84b4-4eca-a80a-a7049e87429c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 6996bef8-4ebe-4e6a-9f8d-853b764a4fd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 8c14833a-4cb8-461c-9f90-82ecab77dc45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 df7560c9-92d7-48ad-8c34-0dd0e5bbad18)");

unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #170 c821560e-4c9a-4b7f-8dcd-7010563245e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0201;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 ba75a920-f434-4692-923e-7491b5bfbd88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 68f661be-a190-4d1a-a04c-fe2c031174a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 f7d33c38-3fa6-4849-bca4-d6bf167fcf35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 adec7c41-f0fb-4558-b1fc-c3dec643742a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 a690ecff-92a8-452c-8c76-1889db25cdac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 64e6de4e-922f-4030-8df8-320f9990049e)");

unit.assert_eq16(16'h09C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #171 ef58abb3-3094-4f8d-82d8-372192f0fbd4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0204;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 530ddea2-9f2c-44b3-8172-73ac109146a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 9afbd4fc-8189-4800-b7d9-c27aadce75f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 fa0df8fc-a925-40ce-9845-9abf345b5d05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 662c80a7-f7bc-4b10-8c93-6ca0c3b8ddcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 2d364ff3-6690-4606-b875-feee9d187585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 4fd1b4b2-2610-48b5-b242-a3539b523025)");

unit.assert_eq16(16'h08E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #172 cba5264a-b3e1-4cfd-8a44-7cb7324208b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0207;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 a88872bf-202b-438c-9c9b-eb8d9ff0acf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 32eddd9b-b5c2-474f-aa0b-814ed222d257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 06887af1-ce04-49c6-8bd5-6ee8be591465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 da83a8d4-01e6-488a-ac92-83997b1dd601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 73a5e4c3-3f43-4b9f-bc93-f852eaaa2a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 12119a78-5f24-4497-90c3-62f60e466431)");

unit.assert_eq16(16'h059D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #173 7a985320-de0e-4177-81cb-591970c7851c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 4083aee3-a109-4c7a-9c9e-33e279c0c521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 a1fd78e0-7644-4803-96a3-3a8465fc91b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 b74f2da0-e796-4254-8d09-7296dc1fdd5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 bf51da17-9d22-458c-82f7-230fef895291)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 f38706ae-6c10-4cb3-8034-88ae9ac8f3cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 fc994753-fdd3-4798-bc4a-c06d7863ce56)");

unit.assert_eq16(16'h03F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #174 93ddb172-49e6-423e-8ded-9883424252e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 343d44de-1e54-43b9-89ff-4381d2d98cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 14f7e8c8-e0f5-4441-8bee-aa7b02c592af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 0209f976-7640-4e03-b610-2fc958853ec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 8d27227b-77d5-46b5-89fc-f615173bcbc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 5e6b578f-3865-48ab-8e8c-488e5367ed63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 a4a54c68-ad74-4da8-b4e9-b37e4ac4bf31)");

unit.assert_eq16(16'h0FD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #175 4de786e1-9bce-44ba-bf46-43e1b89ea011)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0210;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 1a51bc10-242b-4a4b-b75c-5abbbba160b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 1a485058-2893-4103-b7c8-a5d428f13761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 17b75586-f37c-48bc-aeec-bbcfa8672ab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 424687d4-41a1-4ccd-b7e0-1d4080b48543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 831aa864-5ede-4529-974d-c8e9dc263330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 b82461f3-db84-4a60-8516-698e6a3812f3)");

unit.assert_eq16(16'h09F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #176 3ea93573-e155-456c-9715-5991834f67ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0213;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 1ae7f573-b11c-4f10-a6d6-52a87284a96e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 cc9c9253-8b41-4bfa-bfad-8d7ca8a72d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 f5da0554-08f4-4b19-bba1-d57ffe90dddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 30ba870b-a4ab-4f97-be54-44416dc249a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 e36afed3-5b09-4e05-bea1-736709b11874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 e3f4ca7b-faae-4d76-b489-472a866bf253)");

unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #177 8968fc5a-b6d1-4b60-b5b5-fd7f0e4197fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0216;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 20ff9ed8-b1fa-4a16-9959-ab41f0b8d5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 f0aafa7e-6d02-448d-aee5-5e3d2ffd9b7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 a7d017f4-7b66-411d-a59c-401e260b3c77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 d9e30d31-4ba4-4cb3-883d-cd3f2f883df0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 bf4f00a7-d6ac-4011-b980-76fbd5862a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 c2ed939c-5636-4dec-ad81-441ae55a8c75)");

unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #178 c8cd9601-7431-4e0f-81c0-3f0c319b9daa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0219;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 7203fe8f-ec57-4d6d-9a28-c1f74c589e0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 cccb59a7-0575-4934-9724-a6ed6c1d95cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 aeca0c22-adf3-4c93-a4a8-8de04da96a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 9eb80838-b07e-4c33-b926-5800e891fd2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 ad39d4e3-321c-45f5-ba2a-b0f8b582d766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 78d5ad75-d26c-412e-9c60-adf37d602384)");

unit.assert_eq16(16'h0B83, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #179 1aad28a3-f235-405d-9da7-0f4666f73a32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 b0bcbb6e-0d33-49d8-82e3-2b5a8d5e5591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 d149b59c-fb73-4a99-8482-35308b7d4a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 14179085-ae3c-4418-aac7-87c72549f3a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 222ec219-6bd8-4063-bd1f-82cf602edad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 98c2831b-0a2e-4e60-aa6f-111bb631433f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 eba7201d-aa05-49d3-b465-ac38beb7e29e)");

unit.assert_eq16(16'h08C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #180 ce1d2736-c51c-4f83-a785-ec2a6f621bc2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 b8a25ce9-ca6e-421a-af5b-9837038eb93a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 0f084d4c-e0b9-4c9b-8634-319b22dbae11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 73957afa-e4f2-4944-af32-cbcadbeec764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 934758e9-7d4b-4b6f-ba25-bcef24466030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 123d31c7-b60f-45c7-97af-f70c26e8f526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 f6402c6b-6b6e-4a52-bb3d-ac7a517752fb)");

unit.assert_eq16(16'h00DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #181 dd0e4c2c-2d0d-439f-8b97-efb84fedd57d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0222;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 8651bb31-890f-4c3c-aca1-c6a5849bf419)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 c05714a1-7389-41da-8565-2603f6d4f6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 ed62d01a-f1d5-440e-8758-c8c1820c2811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 652a9731-8464-4090-ae14-5cc9e553a32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 54120b25-05b6-4cdc-8bd7-447fc6e63796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 250b24fa-05ad-4b6f-a452-e58fed90cc1f)");

unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #182 f367a4a3-a073-4bb9-8059-121959d2a63f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0225;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 ca14dd22-49a0-4891-a870-c41c50772da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 aeefd5d9-96e4-4b54-a7cd-52c6be30a9ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 6045f75f-09cf-467d-b86c-e17423033f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 8b9af712-ff2e-4315-9d5e-cdee9e72f54b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 d660cd71-eb40-4c9b-b748-098653a3b924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 0ccda2c3-d1b2-4bbe-b04d-ccda6a14bfcb)");

unit.assert_eq16(16'h0C99, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #183 44f9059b-47ad-444e-a3d7-2356c0d4cbf0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0228;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 114ae3cb-21fc-43e5-882d-deb8773a120f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 17d9416a-adbd-42f9-9bdd-4b74a4bcdad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 15447a96-fd37-44fd-a30c-283c374167b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 5757e0fb-7a0f-42fa-b125-2d49af1df490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 75ad57a9-fcf5-4f2b-ac93-70cf8411e9ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 2b4293ab-bbc3-44db-8d81-5a7c75326ced)");

unit.assert_eq16(16'h0763, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #184 d2ac39d9-0f19-43ab-89b4-06a1c24d41c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 7e2cb28e-8a19-4248-97b5-3f7087429c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 d54f33e1-4bd5-40e8-b894-27568f5b7737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 5dbab6dc-8646-4cc3-82eb-8bef995b773d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 646dd291-8304-478f-abad-eeba7363a22b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 581945d0-7cf4-49b5-bd05-b9089d15145a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 3ec7bdbf-5a83-4dfd-b7ce-ca57c0e2a113)");

unit.assert_eq16(16'h072C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #185 f27f58b4-bbd7-4f5d-97f6-0fc9e61eb74f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 c53d8d10-9f6c-404f-8eaf-2e53198fcdb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 8124edac-1631-4ab3-83c3-fb80ecd9f0ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 00b6cb13-f591-4d89-b13a-10a54f034e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 6b9efb5c-6a2c-44d6-a34c-5591eb87696b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 05d60595-5c86-4f78-bb9d-a6addabd2ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 1d6d4c0d-0864-49d9-bacd-7929d797150a)");

unit.assert_eq16(16'h0FA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #186 dbc3cf78-bd3b-410e-b93f-8f8b07a32e1e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0231;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 59989344-2a06-4842-acdf-0f42078f3bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 07ab60d1-0353-41a9-86a0-6c7123094744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 57941448-8074-4788-b1b1-f30e81390c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 3540ba12-14a3-4cbb-959b-4a55824b3dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 1f5d64ab-afd3-4ab3-a17e-ea537a697e37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 a765a621-a160-4b28-b52c-4f085bfbe9ed)");

unit.assert_eq16(16'h0501, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #187 6cf37b09-50d8-41e2-9b02-9cb80914da90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0234;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 a8a5b652-c0a7-4d56-a891-5c5d5c81751b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 4b9d9ca7-8691-400e-9b82-b4927d0713b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 7861fe21-a674-42ec-acd0-4768e4cbfdfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 74c99020-7c18-4bd0-ad01-3ec9872cfba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 2298f137-6ed0-48b2-9620-e90cd4cd45c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 4768aa71-0ce3-49da-b6ce-d1355f5cbe1e)");

unit.assert_eq16(16'h0414, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #188 4e65f97d-0d25-45e8-bb93-4ff275896e76)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0237;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 a68d6e4a-d469-4c5f-845d-e8313ebb8fae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 72ca6936-2085-4598-845f-da5591a97226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 e7a2020f-8485-405a-bbb8-61ed39974d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 3602083f-5783-4d5d-a007-c58770271365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 bd06e02a-43e8-43cc-8e9c-768b1def5c06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 3a00a559-51c3-4111-8d26-34229ef57d4e)");

unit.assert_eq16(16'h0EE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #189 91c45616-ee4f-47d1-aade-843375461434)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 2242e147-f138-43d6-a47b-52e9f589a0d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 94ac056f-0faa-4266-8d10-4c535ca75552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 a1c994ee-d859-4b29-bb75-6496c8329dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 b0f88b61-b622-4bb9-9d1f-45db81ee7070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 f23b829c-5712-487c-a408-4af395fdd331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 98558c4b-2447-4882-9ff6-4f98ccf3bfec)");

unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #190 d37a4c74-dba3-484a-bc5c-aff064b1bae0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 9aaddfb8-6666-42e2-94cc-f8a9bfd104c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 aa6c48e4-fa68-4d89-a692-adf15776f894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 94c2be35-1427-495f-9b29-b5445038cd11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 8d201d3b-e2ee-448e-bbc5-c31a331221f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 13c73431-63ad-4e03-9f4a-99ed179d9f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 1b754fdc-dac3-42ff-aeec-9cc8edd62951)");

unit.assert_eq16(16'h05B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #191 36c91e1a-0fd4-4ef0-9676-3d12f61dc5b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0240;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 3f9fec8d-37cb-422d-abd0-132e22a3c0fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 13829a56-85e9-4913-a512-fca2f54d4095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 92967bf1-d859-453b-b463-08fb9204f55e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 064d60fc-38b5-4da5-8acf-6cde1cc82f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 f297be59-f8d3-48b3-a821-df5405d51c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 11aa40d2-b476-4e9a-a6d2-931b0469c280)");

unit.assert_eq16(16'h0243, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #192 e25ef415-99db-4031-9fb5-ea394ce23747)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0243;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 d6c98562-ed79-4644-9255-7e269e72f519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 9c612b4d-e091-45bb-8c43-5f846fdbe6c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 c0e75d2d-8491-4230-8d49-ded5379840db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 b873b116-b2a4-4126-bb9f-39f572c73d92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 1910d382-70d9-4f86-9881-55e62bf6e516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 159e3bd0-2b5a-4403-8523-8bf6aeab0e0d)");

unit.assert_eq16(16'h0246, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #193 ea23c74e-77d2-4c1e-acd9-8df12e75bbe2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0246;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 6f798426-3143-40f8-927e-4a9ea5a6859f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 9433d2ab-900c-4d94-a73c-408a0dae0714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 295382ec-a7a0-4916-9941-cbcd5501ac79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 ba860220-4320-4af9-ba4c-d4629c3100cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 f1d22225-7642-49fa-9798-630eeb922652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 061ba0d5-972d-4a10-8a77-edcba9c3805d)");

unit.assert_eq16(16'h0249, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #194 da9c6a57-9918-4088-9ae3-3515abb2705a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0249;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 a4885c02-15aa-49d8-8db4-142f2be7c6ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 fb7b01fe-7895-4a97-8c60-ea904017a0b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 7fedad6c-4931-45e2-aa76-4f65346e7b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 aa845792-1bd4-4828-bb56-879895c5b6ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 d718a5c1-1679-49ab-b8ef-f0a72f28b252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 71b5a525-e38b-4796-8baa-23d8e773a988)");

unit.assert_eq16(16'h024C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #195 73da3c36-c009-4421-bdfd-78b0a952d02a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 6c8ee9e4-3b99-428b-937e-2ce4545dc527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 cd344745-3a16-40ff-8362-53fe3217ed24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 540a2087-b54a-4628-b0c2-07b2ad19ec8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 85fcde7b-49a5-49a4-ad63-79a5d3a866ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 94601bf1-8e6a-43b6-bded-00bf98500d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 62e3114a-729f-491a-800b-6dd3f95428a0)");

unit.assert_eq16(16'h024F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #196 c4f2dbed-2523-4ae6-b37d-a1d64ae6cec5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 3e0ac163-25fe-432e-ab47-b967ab1b8223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 1aa91468-6ef3-4517-9905-7c9b3d95987b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 a00801a8-96c6-4a4d-8680-bd78588ded19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 ba93ef96-d44d-45b0-8402-4cc9745f367f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 086384e7-d0ec-4916-ad2e-2b92aa26ff00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 1312ce56-1abf-40ea-aa5b-2fc4cd9e0629)");

unit.assert_eq16(16'h0252, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #197 09c91bff-3fe8-434f-9267-c103f8804459)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0252;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 05f76c4f-8d3a-4284-8c2f-d45d78b75056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 64377ebd-2f16-4ab0-99c1-476957412ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 5019cfbe-ae12-4b95-9535-622afbc03b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 4b68a4ab-e311-46ba-9f2f-fef7566fdf0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 0542a3e3-04b0-446a-ae44-f1e753d48f16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 b211215f-0849-48d6-845f-dfb68f119655)");

unit.assert_eq16(16'h0255, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #198 e034b20d-bf3a-4289-a7ff-59c9a6f2425f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0255;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 40da1161-f26e-4c77-b607-a585bdf7d331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 07bc00f5-7b44-4c1e-82b8-0cc48d973adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 f88e8a34-2e3f-4cd3-83a8-e243eac71ebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 33713e94-febd-4496-8fa4-d8e6ba29ed4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 1089a778-3eeb-4d24-a7b4-3aa2bbd1e46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 a58e841f-4e9b-44ca-a9bb-fc8f3021c4ea)");

unit.assert_eq16(16'h0258, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #199 98e36bcc-5c41-4d8e-9d65-6a12437a3216)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0258;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 dddb3964-4692-4bf6-b94e-80c8d135fd0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 879d422f-8a9a-4b67-8f2f-97f53cdbfe62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 26d0c904-9316-4412-8cb9-1d19de31d310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 dba7a49f-904c-4947-9902-d07f716a1637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 bc0b1a06-a547-458b-95b0-f34eb87b07c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 e1301446-2e4e-4d32-838e-ed8430668e61)");

unit.assert_eq16(16'h025B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #200 2df11ab3-fdb2-4d67-a871-690a3742b9a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 09b092a6-752f-445e-8436-62f12f76065d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 28a2662c-d524-4874-8fda-d1a50232163e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 205b9e28-dc72-4b34-8a5e-38bf673b5e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 9c8b928a-2cc6-4284-879e-de8f6f2af3d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 27057d79-5e45-46d8-9d5e-dd9b88de673c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 4cdf816d-007b-4362-9782-a2a49d0e0744)");

unit.assert_eq16(16'h025E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #201 fe012f41-8bad-43ff-bddf-7e97752f40c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 5d852667-d0d9-4093-8e7d-ed40ed35011f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 b8cb9d2d-f02d-48cf-ae1e-53b7a54dd124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 613fb308-d199-4925-a1eb-a57e8eaf1666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 380d4c59-57a5-4521-99ab-0f24dbdd3603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 410d25ee-861e-467c-b263-a035d307c873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 32784746-2822-430c-9063-547b8f2eba2c)");

unit.assert_eq16(16'h0261, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #202 7993554d-cb46-435c-9c34-009901d01472)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0261;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 4d3c6d0b-c2f6-4766-89b1-ca166662c42d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 620f7700-0d50-4c7b-a23c-83a4e3d58372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 2cc850cc-0746-4a0f-82f6-a41246a137db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 69c610c9-1bee-4678-acda-c7f69d42e658)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 fc273bc8-fad6-45f3-acfa-65d3c6ad7973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 336c66eb-3b41-44a4-90cb-553fe1a4baa4)");

unit.assert_eq16(16'h0264, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #203 14cc94fe-8c16-4c31-b304-fcdac53dc1f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0264;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 5460df32-7bf8-4c57-b87a-97b67976b35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 65a5dd4a-2242-405e-9dd2-164cb378cfc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 e0898f28-0d53-455c-833c-9a091babf99d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 76697c91-04e6-4efd-81c8-078ce0eee397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 af355ef3-3dd5-4c8d-8748-de92ca7baed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 6ea27325-9be8-44c5-9373-1a690736b7fd)");

unit.assert_eq16(16'h0267, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #204 55dc0dd3-4acb-4429-9fc6-c8cbc4ff35c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0267;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 6a0af164-81c2-4aa2-906d-92ccd54022ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 d3acc5ba-d7d6-49e2-b531-64fd9b85e8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 6d26c51a-85dc-4a55-972f-18a974ad634b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 e416cec9-afa1-40f8-8f8b-d79c77c08e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 bf849c82-9b90-4ac4-b153-039b0fc79980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 eeaf83bb-fee4-45ca-9b4d-6b9351dc479c)");

unit.assert_eq16(16'h026A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #205 7e5564d4-f849-49f2-a433-7bc770f8aeb2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 678cbb1b-2011-46b7-b7c2-d85a3c7fcb4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 1709030d-965f-4801-9a62-44d8bf646131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 7b64d512-82cc-49f3-ac34-e62860465862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 47b251c1-0390-4756-827f-46a16c4ba279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 bf8e4615-2f9e-404e-afcf-62629f3050e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 3fca5655-595e-42b3-9568-82fbf9cb9c99)");

unit.assert_eq16(16'h026D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #206 938e670e-9bb0-4d40-a4cb-47bf92402c58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 05955690-c571-42b3-ba18-4efaabc2c483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 2b9e3f6d-878e-4905-9eac-8be53174185a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 05cbc9ac-2d22-4126-ad83-6a9abdf493c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 f6a8bada-34d9-416a-910c-eac9bec72b5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 065c3033-00a6-484c-a0c6-ff7fe46a540d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 110ee013-5735-4b67-9b3c-3ec479bc68a6)");

unit.assert_eq16(16'h0270, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #207 5d3d0fc6-9273-4775-9097-c9cde58f5905)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0270;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 8fcb397e-1386-4c4e-8e16-d4fe6c04cb22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 58ff9600-7adf-4bae-960e-4d1b3e35477f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 b0c6608b-81d1-4f28-adea-f9e15d08acb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 fced3560-851a-464f-b737-530fe4d07df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 566f9fa6-74bc-439e-9691-07ba7474d04b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 6f0b3890-2efd-4db5-8ac6-79a4bceb937c)");

unit.assert_eq16(16'h0273, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #208 026a2eaa-0f3e-48c9-b871-d90c41bd1312)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0273;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 5850d639-57aa-4774-b28f-21edc44e9309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 5748dc43-7800-42ae-8c39-c9826d0d7a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 51c96528-f1ae-4954-b726-c5313bff2cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 fa351e0c-146b-41f6-88a9-94e5a06fe63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 abbc3a38-8aab-4144-86da-a30bb8e67d73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 5919e402-3000-4183-9a4f-ebce16375d7d)");

unit.assert_eq16(16'h0276, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #209 8bbe942d-f837-46d5-8280-2dacd99795b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0276;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 54fb1909-178f-40a3-b756-fc60ef067b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 02484ea9-4dad-468e-a739-19613893832b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 eaf26911-bf4f-4b1a-a504-8715010d4437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 6d61ba64-1f1c-4f03-8385-7209e1edeaeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 6609732b-50e4-4716-943c-589cdbbb92b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 ab4b580e-6361-448b-9843-44a46d935177)");

unit.assert_eq16(16'h0279, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #210 26c57c54-ef53-47b8-8a6c-78bc960bbd42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0279;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 748f1f50-4492-4000-9d55-6b3c28d705f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 9beef1ce-27ac-437b-89bf-76aa7c48fcaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 863140a0-e127-4e29-9a97-977b5d4ceb6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 2761a2ec-5a84-47c9-b473-69d1e735740f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 7d06ae89-0ba6-4e54-a9ba-80c69dfabc07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 1005ba30-14c1-4928-85a0-3cd613938650)");

unit.assert_eq16(16'h027C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #211 c1fbfdd6-ed72-4f14-94be-cb85b9101530)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 b48ca9c6-766d-420a-a15e-bab549253c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 cc3164f4-fa04-4dd1-843a-c5a02a08441d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 fe15b8ef-244c-4246-8a1c-38906770b998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 83671338-6fb6-45a7-90bd-aa9a7a904e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 ef998ccc-bc32-4518-9c67-8f5b9ce0d94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 0b9b6d14-6e70-4299-a53b-df63d9ecc8eb)");

unit.assert_eq16(16'h027F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #212 832d803d-5f45-4631-bd7f-1cf9c77b5bf4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 61704faf-7112-458e-840a-85976809008a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 3c8b1a99-76f1-4a78-abe0-669e8c4cde35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 7f23d99d-44d0-48ba-ba01-cdfe6f786031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 56b1ac67-8a91-4b43-9ed7-c89b44f398c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 edc9d19c-fa28-445c-9316-a492386722a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 63c3358e-7195-4a8a-bb9c-f362276974f9)");

unit.assert_eq16(16'h0282, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #213 e8c96992-cead-443f-8f7b-abb0fc47d779)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0282;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 00f41d69-8e5a-42f7-b2cd-a4fac792c488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 1bdc07a9-1f73-4a01-8e36-10d73fbbd2c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 f810a0b8-a681-495e-a4ef-5d58f8757dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 f1fa7f11-ecb7-4089-9cbb-242b6f1ea08e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 ab489119-59e9-476b-8489-35a39e490ab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 8217c5b8-8696-4a56-b93e-4ecf1a639af5)");

unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #214 7c3e956a-ab0a-44da-9442-6997b14bc5ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0285;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 1b221f88-f90f-4896-8a74-83b0ffdfb002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 d5ddd454-31d5-46d0-b2d0-aedc1597d82f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 e802cc2a-31ed-4105-b10f-b5aeb0945c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 05f3d741-bc7b-49d6-9cfa-6de97ebd16e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 52a378ab-a878-4b30-8770-eb6ffa271dba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 9ec90d7b-2c93-4ac3-b249-f0b191aeda07)");

unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #215 7eb8d273-d775-4b7a-a976-53c667230a57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0288;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 138a1ffb-bbeb-4e66-b541-4e3d276186b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 1a37f8a6-f54b-4316-b551-0d7b274a8235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 0d2a8cc7-60d5-4c47-84db-44f299d0d799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 b9e2ad2b-79c6-4039-9ecf-432876984549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 8b8bf7a4-2e13-4363-8ace-8331db24e1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 c4242e7b-e35b-4ad1-8dac-eda6f3366b34)");

unit.assert_eq16(16'h028B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #216 51e4856b-fcb9-4fed-907d-6b0efc7c5a15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 86b6d39a-3994-4abd-885a-27559b24c1c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 3c64c148-8067-432e-9c97-97f2b6560400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 b54db416-baba-49da-82cc-733dcb670aee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 8060ae64-bf1f-42ff-af67-122afbaa7e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 c1a7610b-4756-48c4-9ef0-bcf9aa25e07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 90cc016e-cb28-4552-b130-d7a10d54286a)");

unit.assert_eq16(16'h028E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #217 d63fddf6-d5e0-45ab-9254-bc8ba616c80a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 bc386687-60f4-4e01-a1fd-670059b442e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 dae08465-7c0d-41b0-8aa4-f3fb3fe0f789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 65059aa0-6c56-4009-ac2f-b3de9229f764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 ab3c7e8f-cedd-4ebc-9ce4-d1d80fd1d177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 0d2ed3eb-cd19-4c37-bd68-8a82c0c6b635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 5d6cbd5c-2320-4a15-a082-34bfff0d930d)");

unit.assert_eq16(16'h0291, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #218 fcb5251f-ed41-480a-9265-62688272da36)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0291;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 509aeac4-cdd4-400e-8465-a60fb62ffb9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 2493d0f2-7abb-4313-a07b-5504345fa038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 80abc66e-1ca5-4840-9af2-322107d6a4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 fc5c864a-d4de-4b5d-8177-e687f6944857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 82f66fce-2954-45ef-b0eb-59198129803b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 638e37d6-05b2-4cef-8acc-fa2194a44564)");

unit.assert_eq16(16'h0294, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #219 4402746b-5144-4cc7-b2a4-03bb7babb424)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0294;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 1bd08795-17ac-47df-a782-cbdfd164da41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 081bb26e-85c5-4440-acca-3b10ea11d59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 90a63278-ac36-4e0f-b4aa-9c4dd34c0d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 8d5f96f4-09a2-4267-a5d7-1c41874f3202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 972d8ef2-f9b3-41b2-8319-bd4aad911836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 60ce24a4-8da8-4d9a-8a05-037e775e6ee1)");

unit.assert_eq16(16'h0297, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #220 ace74930-31a7-4048-a9a2-7b31c2541ceb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0297;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 86b8f127-eea2-4220-b22d-47a9682a81fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 867c54f5-9ef4-48df-a893-091c3cb1cdf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 b7c3aba0-9ba6-48c1-b8a3-f3b03a10f0ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 503a76f3-7636-4481-93d1-1e00fe9003bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 e90dff9a-78b0-4bde-add0-2f4f5b5504e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 aeec49fd-29e9-4010-a851-627385bc66a9)");

unit.assert_eq16(16'h029A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #221 61b0adbc-ba68-4604-8ec7-26149e9b800c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 5cf377ab-ff75-4a20-b3bc-13a5db2b241b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 2318bae1-28e2-4c04-a0a4-8d1a5434ee2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 b308bc7c-4439-4898-9d67-71fccfc91088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 1e315fe8-3df8-480a-a24e-653ebdbbcded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 2408bb43-2cb3-48eb-9ca2-df283f6dc8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 da7ac0b0-b2fa-4f42-b4b3-8216eab964de)");

unit.assert_eq16(16'h029D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #222 db192d38-4897-444f-a5b2-8df26b6bc9a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 1b237e07-293c-4804-96cf-2e7969b63ac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 d5dd9cf3-5986-4551-a44f-cf7026cf23e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 0003ae95-6e38-4df8-8882-96783ce01c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 93f46e96-039f-4455-b0fc-76bf55cda3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 2bab47a6-a274-47a4-b93a-72410f34c016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 88e54bf7-28b7-4974-a9b7-9f4d38d813db)");

unit.assert_eq16(16'h02A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #223 1e22cbaf-4718-4374-b88f-60d1cb339cf6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 fda0b22e-7e83-4359-865a-8008975588b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 f070523b-2f4e-4774-8b83-0d64399861fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 23c82fd1-adf0-4cc6-be2a-6880293ae882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 ace4ec6f-37b8-45c6-a184-faf40c38290f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 ec4b6566-4543-42ea-bf38-136fc000b65b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 e055ccad-d388-42ac-aa3c-ad1d47a49e1f)");

unit.assert_eq16(16'h0C87, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #224 f02b7bf4-64a2-4d54-ad6b-65c30fc3c203)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 c2f9ab65-5e6b-4233-833b-a5a4dfe96e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 b4c3a48c-69f2-43d2-917d-a30cc8cc1556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 498388b6-9889-4631-8dc3-91c21513b2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 fc2d9dce-f357-43c3-8b38-3cc9b9af94c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 0ee4d939-a3b0-4341-98e3-a6886bd99eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 299c2441-8cbc-4f07-9449-5d4200ce4cbc)");

unit.assert_eq16(16'h0CFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #225 54cd5e70-630e-4bc4-b178-cb1a64e16784)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 6378067b-c364-49f6-91be-5d87b3e0cd72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 a1d8c840-d8f2-49ff-a665-89223eb381f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 b44e69ab-954a-45ff-a122-f0f5dbe8e530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 1108b259-6c25-4b62-b7be-c56ea6a00b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 562c19dd-6878-4831-92a8-5364bc4914cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 1b8afb92-055d-45a3-b179-23545961bf54)");

unit.assert_eq16(16'h0944, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #226 5ad16bfe-d9e7-4aac-b16c-6211c9151a6c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 aea616c0-6d51-4ed9-ac0c-78d6d628f17e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 0863f75d-38e2-41fb-9abd-1889b53db92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 a81544d1-b51a-4e8a-a192-f3044b73f689)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 8cc140d6-05c6-45f6-a2fd-49ef1f349c68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 629b6495-de4a-493a-b91c-f9800ebbc5ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 b32f1f40-0363-4ebf-895f-a292ee95c510)");

unit.assert_eq16(16'h09F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #227 d86635ad-f29f-47ae-862e-534ad7fc2624)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 603d10d3-e582-4dcd-9869-38415ea36c6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 81f9453e-4c10-4b7b-9333-44921014f2d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 a00486b9-d5a4-4cc4-86a2-affd06420d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 4e8d709f-9005-476d-85be-c4c2043a3cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 2684efcf-96cd-44e9-8036-6243d68fe491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 c48277be-bddf-40a6-b329-b2ed609714e4)");

unit.assert_eq16(16'h0EE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #228 f0d8f0aa-e4a7-45c4-8465-d31f33102166)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 f2de6e2c-e599-4771-8804-19dee82ad3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 607339d6-0c3c-4a50-85fe-5e5cec34a160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 5b4a5624-fb0e-45bd-8874-65ba0c02ed53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 64aabbfd-be8c-4524-b6b4-568225a981d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 e259ad57-3e82-45cf-8b60-b9fcc0b7c53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 1d0b7f60-95a5-4b43-92c4-8fd62ebae988)");

unit.assert_eq16(16'h0667, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #229 11a8613a-8a9e-4831-82cc-87d5dfc3f294)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 358f1bd8-e679-45fa-b875-64ba10270824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 b3be86a0-d59e-42a4-81a3-f6abce15acc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 9eff56bf-832d-4956-9eb6-9abaecb77f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 bf2d2b63-83e9-4412-af04-b05fb249e6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 f567156c-16c1-4212-8c1a-11b0fe6aa2cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 9612523b-95a5-4e79-8c73-6729dd076074)");

unit.assert_eq16(16'h0805, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #230 5cbaa89a-bc17-497f-8118-aeb2099f24a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 d79ab036-deca-44d6-9eca-b8db09d2a337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 59bc16fd-2c45-4da6-8881-b0c7cb90fbef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 a0c553f5-4799-4ff8-844e-21e5af8f33ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 c713101b-a315-4aa5-8bb1-26732b73df24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 4a74342b-f506-4247-8735-004486f2fa1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 99cdfc04-1448-4522-bb72-5e9f68514766)");

unit.assert_eq16(16'h0A27, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #231 8519035b-7ffd-4def-8acb-626a5b8a247e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 4501d4a0-d954-490b-91a6-c93aef107d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 2d08c6d1-380e-4c59-ba3e-edb2a9fb7cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 9af51077-d2d8-4654-ae86-f4fad5a8609b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 fd4b5e4f-c53d-41ea-90af-4b9c000fa423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 c41adbfb-e002-487f-ac77-6d38a005979f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 f6ae85ac-2130-40b3-b800-d9af1399ed4d)");

unit.assert_eq16(16'h082E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #232 5b14fa1c-d744-454d-bc74-f4c599c0304a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 8feb295e-9ac1-41ec-9919-4b97b640eed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 7371ca6b-4b1c-45df-aad5-491c4f37e8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 b38906c0-91ef-4d4e-89e3-88bb75a46e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 0d7cec2e-bf91-4fd0-9b3d-4f6742a6fc54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 b31c4ac6-51cb-4a0c-bb07-1f2072094099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 9e228ca8-fa06-47c1-ae43-b9354f6abd4f)");

unit.assert_eq16(16'h0AD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #233 89086044-3eab-4e2f-b527-72c65d31a7e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 3885e8e7-08f8-4615-aa46-0ae4c87d4067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 2e79fde1-ecf6-4f37-b0d0-9a846d4b0a68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 89a72e07-71d0-4394-89d3-79a080517844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 34cc2dfa-ab3f-401f-8520-e99d1ca45a86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 75f4dfb1-1efd-45b8-b4e3-e750640cb17c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 6ccce23b-1e33-4a08-936c-b3202abc9928)");

unit.assert_eq16(16'h0D59, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #234 82f41716-f385-49f2-887c-4f6607364496)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 4405ed71-3213-4856-ba80-4f9a15f7a2b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 a914ef73-fc4b-4c45-830e-6521f88ac181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 19830a74-bed3-4c26-9333-f34815ea362c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 9c2c98c0-4f40-4336-974e-09095e104350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 7f560002-4353-4617-8cc2-b76dec91da38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 60d4e4d5-560c-49c9-a1d5-f974bbc899a7)");

unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #235 50d6ca66-626d-450c-8894-5e0f89915663)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 421f0383-4350-4abb-ad3e-5e58d87f3f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 5265ae40-b92b-4df6-8905-9bb822d1ce38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 8703f50e-a624-49e5-a486-d62d6f24ecfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 09e0f616-ab6a-4454-8de5-ff2d4f631806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 c61e3d67-6a94-4db6-9c2e-6db3cfac0876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 8024075b-def8-445c-a2e1-716903053b8d)");

unit.assert_eq16(16'h0B8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #236 d02d40b5-142b-4b26-9668-d75f0da99f75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 f1061bcd-06d6-47eb-89a4-97c83164b5e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 d3aae90f-bd06-4c72-9b84-4afb1eca83f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 1a2a3a76-8541-4178-8e40-43dd801482db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 25e54a3e-f448-4767-b7bc-b760ddb75c25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 e0b45fe6-f5a6-47e7-8f33-fa79d49fd55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 1008842a-267e-4db4-8797-0989f02865c5)");

unit.assert_eq16(16'h0B8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #237 ff526394-403b-4e15-909b-a8402212b823)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 2541fb6f-e4df-44cc-a50a-9614ef63d20a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 43387251-78a2-4c64-9abb-497ad3a3cf77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 c0463315-f083-4f41-a8ea-e1d0d002bef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 8ab8884d-7c77-4c00-b52d-a311dbbb1022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 8f337b7f-3332-4675-a586-458944b08f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 b488638d-7fe2-45c5-be6a-e921d9bdaca8)");

unit.assert_eq16(16'h04A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #238 66fded21-9fe9-46c6-80de-3cbdb12a8958)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 81f9e450-4c48-416e-a3d0-6610755c689d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 a64e0552-9dca-4e57-ab4b-dc453b0fa9db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 9fb3e68e-f277-4785-88fc-fd925f10d172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 d9861143-afb6-4a80-a31f-a88d5b8bcafa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 a6b06f79-b125-49e9-bafd-7aeac11e05e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 38730778-8b8e-42d1-9d69-3473a4a1081f)");

unit.assert_eq16(16'h0172, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #239 d887f1e3-eee5-4c22-93cf-b53c54c3ee5c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 68c65abf-eb77-49d5-8d8f-4e2f19cead98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 e007e42f-f1b1-4e8a-8c09-86f38ca19152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 c2da3327-3415-4c86-b3bc-1acd83fe04e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 c363e777-1ec2-4008-913f-4632f70912c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 5c696fed-209e-45a7-98fa-9c71f67563bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 511290ee-9ef9-4bc8-94ac-3b65470d89f6)");

unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #240 fcba170f-196d-46f5-956a-7243fc611b53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 53a1b1e5-f2db-43a1-aeca-19ad23945085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 7c4ac5e7-9ec2-464a-8fdb-4df5deb7588e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 7833f179-5802-4db3-8666-b73f2b3e916b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 1ea22a41-8fd4-4396-9e4a-de6a33d6a340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 93cd16ed-effa-44bc-9a0a-e670229338c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 363ecf85-b212-467b-920c-048a2828064c)");

unit.assert_eq16(16'h09A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #241 eb562308-ca58-484f-b4eb-8d44bd1e3e0c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 43817401-7609-450c-9aad-9c10824ccbc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 53183cfb-f16d-4588-8bca-ae4701da24d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 f1f37313-6b6a-4cdb-af92-6a6bedb4574f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 2b09e440-d554-4d8c-ae2a-05b4c933ba91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 7b0088f7-45a4-4b98-bacc-cece61d9e991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 2f6a879a-4624-45fa-ae3f-37cc6f821188)");

unit.assert_eq16(16'h037E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #242 1770a929-cb31-4ba5-af44-609039d3d731)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 f88c7799-ff24-4b04-b5ad-21a9cccac95a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 c2502c85-2ad0-4aa1-ab29-120d66d36a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 d69b8600-24db-4219-8d0d-26f1fb0baf0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 b1c1c818-846a-450f-82cd-0bf92f65346b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 7a8b3e69-41ed-40dd-92f3-0aaaed10c02e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 0fed54d3-d0f8-4c03-bda9-f95eaf9d3513)");

unit.assert_eq16(16'h0D7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #243 6d046eb1-9e0b-48d1-a039-5cb42fd5e9b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 03952027-6e80-4559-af33-0c62370168fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 2aa29090-4b9f-45de-b694-8abe3380cdb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 b263b3c4-a6c1-45a9-9357-de9bdb8656c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 53b741a0-a514-4a4c-9ddd-2d56858fcdd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 20c35553-e0e4-4fbd-8acf-9b129462e886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 3f07f570-1ca8-4558-81a0-33b82f70b49d)");

unit.assert_eq16(16'h0AEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #244 d4853ee9-f864-4091-9585-d17396acaff3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 aa333b9a-e740-4e25-ae96-2065e5e0d852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 3bf5c379-211a-45f2-9290-ad578f3bbf4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 e7fceb33-984f-4b41-9901-b5b58d1b037c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 2f3495cc-cf0f-4a8d-af8f-e1404b9e5e6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 c6af2608-637a-41f2-9976-c69ebece6ab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 e0a0226c-27fe-4d8a-914e-870999c463c4)");

unit.assert_eq16(16'h04F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #245 0c35def8-f160-4e34-a3ea-b91d741d6a78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 ecff5141-5a4e-4583-a094-1db4fc0ae678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 da18f63c-a44f-49d6-9a3c-aab465e2cf4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 734addf7-8cee-4db2-a587-c6da149f94b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 359bab51-55a9-40ad-a1f0-0f21ecf0d360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 f1312bcc-9be7-450c-adab-5677818d8a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 c739813d-9226-4287-b309-49ac7799cb8e)");

unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #246 3812e3a7-1e3a-4781-8e7c-de9ee319719d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 fa6f05aa-5b0c-48e4-86a1-b3ccb298b9b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 d45c0eb8-f9a7-4fd3-9b72-af13a0f6416c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 6ffa8ef3-93a3-483b-afd2-c7cda677b3f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 50b0f602-1822-4c23-8b75-a35c283f9e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 65ac41b9-95a3-4b73-a4cd-669e1b57ff6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 3b9aa4dd-f6bb-435b-a866-f40b590f6a06)");

unit.assert_eq16(16'h088F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #247 285c53e0-969d-4b84-969d-06874b9e0a91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 7d05f148-e73d-42ad-8eab-b1a1c9d77749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 d30e8c2d-3c46-431c-ae7a-d6e521c39d75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 98730d75-3d51-4bb6-93f2-407cb28c39f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 41561f54-9a2b-4537-be0b-6dc31faa565e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 d9412a0b-c0f8-4c8c-9515-b2dd992b432d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 839e4542-2f23-4c0a-8121-5c35c58a846a)");

unit.assert_eq16(16'h0672, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #248 e34d9ce5-22d1-4e1e-88bc-1c39f28cc68d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 c0346e6a-cc00-4441-bd7a-b62a9674f0ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 3bfd5d40-2340-4194-b060-615ddd43621c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 462812e0-19be-4b8c-a8c9-03ab49994064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 93c033a2-d854-420e-830d-16c76490d57e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 d85b667b-719e-48fc-8fd8-edb1cdb2fd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 38100c43-3e71-40ba-a78c-fa024d8921e6)");

unit.assert_eq16(16'h0AD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #249 38832751-ec64-4472-af69-6d248ecd3ebc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 85672a0d-01ca-4db4-b7e9-b9f680fd0fdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 352ec810-bfc0-44d6-84a3-c59f97be1351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 fcc049bc-47fc-451f-99ac-4a8570b08ee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 29ff52f8-bd7c-4bd7-9cc7-c03a5a7551a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 f3996694-12cf-45c6-aa00-3edc6de220c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 280cd80d-1382-45b4-9377-2f04d949c087)");

unit.assert_eq16(16'h051B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #250 4ca61e64-2a89-4325-ac97-42c590d5a6b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 ec7b0e70-f132-4b9c-b771-afb05837d8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 9bf822db-1371-40c3-861f-0f44bfdd3774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 324809bd-d073-4135-80a2-fe1ec1f16ec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 45a0383a-99bd-449b-a198-98ce0d745694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 4b65018d-653a-497d-a039-bf0ab9eb344a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 a5b489b5-834e-4117-a1e0-1a8311127ca6)");

unit.assert_eq16(16'h0BF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #251 e1a76d0c-cbde-47f3-8c99-e5b64924496c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 885cc6f0-b941-4f9b-849e-b2c482b1a7f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 195a9243-3453-4603-a664-2a8511ed97ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 22b864e6-f4d9-46ba-89bf-07b0139a9d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 db4dcd12-1ae2-4d68-88e6-82e92cb47e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 b2a96d76-6876-43c4-99de-3d5808c0f292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 0fddbcfd-606b-4e7b-996d-00c671a01469)");

unit.assert_eq16(16'h0B52, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #252 755d6877-5559-46a2-a122-196670e32a07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 011e26e2-3018-4df3-a695-5d82b2225aab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 2c5b063a-298e-40d6-9285-51afd50537a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 aeecf348-43ee-4fab-a212-fc7f0d325441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 4c030c59-cca7-434d-b6e6-c08aae433c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 e435fa3d-a4e3-4e1f-b93c-c23afd028da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 c2775775-8ff4-48eb-b1d4-aaf586fac748)");

unit.assert_eq16(16'h04FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #253 ae89204b-da05-4f0a-813c-dc479286da7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 0c5753e8-31a0-4b47-9602-2a41a3a2f054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 08980046-d8d6-4c6f-895c-d135e299c3bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 d5b7ba18-c956-4340-9e7b-8484c4535c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 23e347a5-9ce9-47a5-a9ef-37528bdc5b13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 646796d0-e822-4847-95a6-a4d453a0d997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 af13d049-e7a8-4673-accc-7337990e62b6)");

unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #254 40be0615-4bf0-444c-a821-e12fbaafc5f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 55ba3497-5b05-44c4-bcb5-f2115ab8c3e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 eaefa2a4-91cc-4123-b72d-b73e631f6168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 ddf7a35e-dd31-4a83-a8c9-3277fbb89976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 d3d42876-fcc5-45b8-bd01-162789c4a3c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 9cc70de8-8aeb-49ab-a85c-9ac518ce328b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 bfc567a9-0ff4-4dd2-b9ce-b8e45596d134)");

unit.assert_eq16(16'h066D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #255 0a5d2e36-17db-434b-9d7e-e1e93585667c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0300;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 f933edad-d33e-4bb6-914d-38c383e4fdb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 a7731f37-a472-4e16-987a-8b7859f117b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 4274166c-1471-4503-8804-e4b1a8b7c18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 09b48577-8f4c-4f97-b19a-786d7f8528af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 949bbf27-aaf6-4cbb-8b24-e4d58b76a7ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 a47c362a-6eb4-4281-94cc-d928aa2300ad)");

unit.assert_eq16(16'h0654, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #256 902e008b-bf89-456f-a384-05eaba3c2abf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0303;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 b6dfad91-af2c-499e-8b59-2c9fa5956145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 0c0fa95c-e043-4fc5-8fd7-4c480a066126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 b77611d6-846b-4fdd-816c-b4679f995b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 56bf603e-2b9c-40de-a111-645bd426c2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 62e1f58d-049c-4ac2-a82c-8c71f597000c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 ebbd4d76-516e-42fc-959a-5e956aa35ced)");

unit.assert_eq16(16'h0D9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #257 8bbb408e-e647-4149-85f9-e11fe4d52786)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0306;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 e0eca806-41b8-429a-9add-0d0f0ea37314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 4c29d097-0c7e-4f25-a0e4-b4c07787f170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 018a141e-4239-4bac-98f8-a99a2492619f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 e87a5811-25c8-4f09-9d09-3403225c64a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 6a2db91b-84ff-409b-b62c-94d8c4602cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 6dd1e629-aaf4-4d73-a0c0-e87c8a05ce08)");

unit.assert_eq16(16'h0309, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #258 54b53139-45ef-4186-b769-085dfbc98c83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0309;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 74600138-3a9d-4c52-b357-fca57c19d929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 8bfd3e40-7819-4b55-9549-418e06754f0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 e71492db-7684-4b09-a250-1ede308d099b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 2d8f055b-8efc-4def-baaf-40978956f393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 0e803b75-a6a7-4080-a8d1-ec452558dad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 17a987ab-6b36-4187-8a29-d160df32b078)");

unit.assert_eq16(16'h030C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #259 5ac727e1-4220-45b8-89ed-a9a67175cc83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 5832d98e-2750-4b00-9858-c7fe125f0fa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 236e0db3-ec9f-49a1-bb92-dd0a02d78c84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 291b7807-332b-4a55-8fc4-48b6e4a45993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 b28bfb18-5e1e-4ee9-b0de-523fe85fd5eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 e2268713-e6f6-4d25-8971-dfc742f905ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 b4d0d1bf-9ead-47c0-861a-335b72bec470)");

unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #260 45123d39-31a6-40dd-afa1-6b34b1a90e1f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 53341e6c-5ec7-4e91-a586-0e007aad2492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 854f6969-d78f-43e9-9bef-55896edf5317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 1f60370d-2f99-45ad-b060-80ce609d4d2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 cb154e54-53b9-410f-97d9-3b3e1781138b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 76649add-a627-4256-97ec-dcee73b8d679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 43a2a516-9f55-464c-9dcc-1107d0a01bfe)");

unit.assert_eq16(16'h063E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #261 ce2b8570-5598-4bf3-a12e-74f46df4131b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0312;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 f868655e-8806-4b9d-a1d0-d1856dfd8b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 0393483a-221c-4950-b8c3-dd1421fccae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 c77ebf12-a19f-46c0-b53a-c1c13c4c1ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 9b9fae80-1db1-40b0-86c2-655a035cabbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 f1d08cac-da4b-4029-a9e2-397a2c1f7927)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 c5041c93-fa9a-4ad6-9201-5efc30601826)");

unit.assert_eq16(16'h0315, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #262 4fa6e159-9252-4e3f-9b63-022b83f73573)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0315;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 eecbeb6b-d646-4ae8-a86f-129204a216de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 c0827523-fae1-4050-839d-f1a73786c7f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 4dd8a6f2-5059-4b23-b15c-06d5559e1e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 627dbdbc-12c9-4660-828b-28ac1040e783)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 8494b637-4115-496f-ac0c-4e9f7f792622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 b0b5b800-ee1d-45b7-9e77-219e536c20f8)");

unit.assert_eq16(16'h0318, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #263 4d250ee2-4edd-4406-ae52-9191210b2575)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0318;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 5b38b2d9-7cf2-4026-9f33-f2c98884963b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 fb0011da-fb5c-4cfd-98a8-da552c3c57c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 45c49f4e-1f97-481b-839d-d32e329870ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 8fa88cb0-a79f-4cc4-8c49-46b631f9f93a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 3b6f45a8-914f-4750-af75-c5b1b85a0b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 ba8b9d44-9619-41f5-9548-3e0349ce4d03)");

unit.assert_eq16(16'h0A9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #264 d9b5ef27-9944-44f0-947f-5a475801428e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 063d7b56-afbe-4b74-a5da-4d2adb6d2fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 97ea8c97-3e90-45a0-a391-54e665b12e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 23da1d1f-cb81-46ad-b165-7d9d0145502c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 9fbfcc31-b236-46f4-a75f-a54fce93a8c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 5eb40a85-6851-4423-b166-9d4c61c21011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 33415f43-b99f-4fe3-8d30-374702a5d87d)");

unit.assert_eq16(16'h0A58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #265 bae2587e-056d-4554-8519-35c4cf83c37e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 1764422c-d922-44b0-b547-e34c5da17bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 d0cc88bb-eeb7-45c6-b70a-1b2db8258981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 39c5014f-2bff-4aaf-a38c-158f9a23880e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 362f5e0b-fc4a-45bb-8240-0da1c3099574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 2167d81d-b81b-46b1-9046-ade125bbe49b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 97a43d51-f7ec-42d4-aa11-bb8fae6a5d92)");

unit.assert_eq16(16'h0321, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #266 cbe6616a-9040-416b-80a0-688132f2ad21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0321;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 a04e4229-ff63-4f49-b9b0-f26d0176f208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 ffe55846-3a26-44a7-9db5-2d10d9e8e00d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 a5952ca3-cf08-43b7-ae2e-2fcc796d5e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 462dfba7-1f85-4f8d-bb30-17809dcaa571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 9701541e-12cb-4ab3-9793-b9fc81af9368)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 d53009b2-719d-49a6-b51a-54a9828a55d3)");

unit.assert_eq16(16'h0324, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #267 38fb5747-5d84-4a44-830b-19f6d0a15a6c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0324;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 2038081b-6503-4fe4-b365-4d34599c4e3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 64048d75-ad69-4f72-b886-3f4d7aca4c92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 a22947d8-409d-46b7-ad8f-1c82684be938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 1598cc12-7e13-494b-bde6-3a447481d88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 badbbf5d-ba22-428f-8888-1fe849651cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 aca63788-6ea0-4419-bfce-8a9d381d1beb)");

unit.assert_eq16(16'h072E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #268 9c140cc7-323c-4e60-8644-2435aa4bcf79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0327;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 554262d4-2020-467f-93ca-6b795a92d2ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 39b50bf8-dd8d-49d6-bd96-6fe0ded23005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 e8ff0544-791e-48ec-9f3c-11deee819faf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 1ff3e239-45aa-4e1b-ad77-95d009c8e33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 9359e0f8-8cee-4c85-9535-b4ac0b360c01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 d5251f6c-4a21-423f-be5c-c41ee571ffb3)");

unit.assert_eq16(16'h0770, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #269 9f291f88-b017-4024-a9bd-a5c4095c4dfd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 c6e883de-14c5-4cd7-b68d-b6035b525413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 5a599b93-022d-40b6-8508-d2889d8a61a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 ef40c7c5-cc9a-4e0a-8a9a-475ed973824b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 7e1e9a9f-7e57-4819-9652-0430bcc4e235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 5eb71a2e-20a0-43ad-9633-685936bc1ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 b066309c-bea8-4b16-a3cb-4f3bf4234607)");

unit.assert_eq16(16'h032D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #270 c4d716b5-a3c2-42d3-a211-b6a80960ee8d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 80605380-7b0f-4c2c-ab5e-e360be5d9b2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 cbaa1367-3c1d-43ae-b2b2-205510fa4371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 f13f7e38-3135-4ec0-9eb6-1471e3b39efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 43459e4b-2d3e-4075-b944-c466ba2e87bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 c0c75dae-0b30-42e8-963c-498b86525e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 9f4fd4a1-1435-4071-acb9-951f41966588)");

unit.assert_eq16(16'h0330, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #271 437e2b78-2775-4bc3-9b7e-63cee092f9cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0330;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 bb77d440-4df3-4531-95fc-dc44fa5564bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 fc3e8d70-f411-47fe-9427-9a0787b6241c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 7ba43e4d-6377-4cc7-859e-e79f60f28c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 ce90a229-0cf4-4e3c-9513-33237c3e1c38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 13a97772-5e66-4937-ac3d-de5577b43968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 9fdc1d47-34d4-47aa-94ac-448ff2c49fd2)");

unit.assert_eq16(16'h057D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #272 3755746e-7ee2-4981-a5bc-59ff533a628f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0333;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 2a31a565-7a24-46ca-a448-cebd948fcbfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 a56f4cde-0a46-4c19-9fb9-f473480c6b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 0255d4d1-c3fd-4947-8c59-2f8f7058d8af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 7d5490f9-5734-461a-9800-dbb1b0baa97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 830e2fa0-e59c-4b68-ad9c-52394ab54726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 7bd96258-e71a-4794-8a0b-6d7ff46c2d16)");

unit.assert_eq16(16'h0BF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #273 467c28e6-a6ad-450b-bc37-32db4d8b97a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0336;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 3d796a13-673c-458d-a8b1-5490cdefb158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 cfab891e-76da-422f-9006-8001e0c6df6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 f09707c1-2de7-479e-8229-e4d57605fc6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 77ffb0f4-0853-4da3-b491-6476cee4ee80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 8fd2f6c6-1879-42cc-8c23-1e365e0c7dad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 718698fc-0269-41e1-877f-ce1a53593727)");

unit.assert_eq16(16'h0339, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #274 21572099-ccf2-4dfc-9087-6a8016099d49)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0339;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 df5de859-dba6-4216-b7f8-f947dc84899c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 18a5241c-1050-4c27-a98b-0c2fc74ee786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 c799560e-e622-4c6b-8728-ee9809da77ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 dfefacce-daea-407e-b838-46ec30170a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 42fe72e3-b904-46cf-bb0c-040cfdd8981c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 e8da834b-5dd3-4a81-8de3-454bcf77c0ac)");

unit.assert_eq16(16'h033C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #275 ace76a3e-c65e-4533-8cdc-efb1acdb6b79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 ea40aa16-3327-4a1e-a717-b1d805634dc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 f9e70854-bff8-4626-a7fe-a9094d9a4abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 ecc754d7-b956-4412-bdac-ac02ad411dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 f3ef0860-e31c-4a4c-9b04-f3f9e2380176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 1080d5d1-e8f5-4af0-b0e9-5d467b9f0e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 2912339a-2a59-4005-b504-eb6d08199e6c)");

unit.assert_eq16(16'h0E58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #276 03908eb4-20ab-4d51-8ce5-8f280eb3c37c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 11c7bd4f-6bca-4654-8509-3f3c17d15317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 92b5c425-cd31-47c3-a18f-e1baaa021239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 13a202b6-0031-4703-a304-8e659f62b0e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 42eaa75a-6775-4198-9d67-97a229e5fa29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 8496103a-573b-4dc0-aab6-dace3d5eec59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 1c415935-a9e5-4ed3-b723-9236084bdaf6)");

unit.assert_eq16(16'h0ECA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #277 54a63992-debf-452f-a943-84690a2bc655)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0342;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 6b38edc8-3283-498e-a022-b7beecaacda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 2649022f-ce05-4ab9-9a20-05be49a018e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 71087153-b202-47e4-864d-c5e4e28df5d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 714646fa-2979-4a82-b2f7-809a68138304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 97b95da7-3cb7-4a38-968b-2bb28dfef370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 406eba6a-ee5c-4c8a-a754-f233bf258ca2)");

unit.assert_eq16(16'h0345, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #278 c1ea87be-04f4-415f-b66c-835fba3b9b28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0345;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 4fb96aa4-4242-4f9d-969a-f189c651c2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 f3e6a3d9-1d21-49f5-bc01-ea9f5338f7d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 32cd4e7e-c8ec-4918-9ba4-e71ed0695dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 335e6081-0dba-4662-9c4b-bc24d929d7ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 d809c418-90d9-435d-9baa-d7749a9d3345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 8d37d457-409c-472c-b8af-e4b0e6c97220)");

unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #279 410d9026-cef8-4fdf-840a-206c585d9a61)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0348;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 c689f20d-e6c4-4889-bf5d-39d3f62715bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 018699ef-3b1b-4a32-b56b-3327d18abb32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 3c1a4b9e-4f50-4bf4-b27c-b2d3680252cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 8c61cf33-b502-4042-ac18-ad0e18fc1919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 30b0fd6c-1cff-44d7-9dd7-0cb70a63a513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 9b26aeb8-46c0-4584-a8d8-a58649dd7991)");

unit.assert_eq16(16'h042C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #280 23aa2381-727d-41a9-bd2d-6336f66e2170)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 23deb41c-a11f-4815-96ca-8001edb77c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 9ca7c497-38ec-411d-9651-c5d092389926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 1d864e2f-9870-423e-8dc7-06c8d86e58db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 cde68b20-d38f-41cd-bc9e-70860d7752e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 c301d885-9631-479b-90a6-1e4289da1c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 16be3d87-778d-4dff-a45d-32a0032a20f6)");

unit.assert_eq16(16'h0E03, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #281 217e8cf0-b011-4fa0-a87d-29eef28a5342)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 ccce67a4-8efc-4d2c-88c2-ad8c5f04c1ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 bcc7e52e-b457-4e1f-83cb-4439d7f57faf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 c04355ba-f294-46d9-beb3-9a7743022359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 ac5dace3-f180-47e3-9ca7-75e5f63f8521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 13094206-5cec-475d-adc1-78e9a08f2d0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 1ea415b0-d989-4a0f-819e-ec67ab53739e)");

unit.assert_eq16(16'h0351, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #282 9f3b722f-7944-4e7e-bbb7-01a303cd66da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0351;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 82bd0a18-0a2c-476b-a165-13ac4b34ca66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 3618e621-ee00-4176-9363-c0288d201a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 8cd93b00-c507-4d6b-93e0-94a1170043f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 86d47770-61b1-42b1-bbe1-c2b48ad7e213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 26e7b7da-e259-4cad-9f46-87bc8d12a744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 73662238-99f8-411f-bcc0-71854fbc1008)");

unit.assert_eq16(16'h0354, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #283 498c313e-8dc2-400b-9510-781f7afe0e95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0354;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 882d478a-d848-43e5-aa4d-fbdbe2349c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 0abbc9a0-2e3b-43f6-b65f-02ae47a2ef6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 50b5d859-2d08-420b-9a6d-c06caecf985f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 79d89d15-7e1a-4411-83cf-2dd368a6e422)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 13951f2b-c047-47ff-bc45-ada301a90a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 586d7dd6-f000-4ee5-97b1-4e69ad614443)");

unit.assert_eq16(16'h01F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #284 8349acca-b328-4e83-b840-950a2d1ab7d4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0357;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 0a2968aa-1778-4767-bb32-8506a0910caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 0e88b3f0-ed82-4b7b-8319-53a3bb34c8fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 ecec19f1-ebfc-45e7-a159-2131c45ce198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 7f81b098-761a-4e4e-85ff-369aa2d51b61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 7455dd38-4f65-4827-9f9a-bb8edc1fbf89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 8ecce04f-48b9-41ba-9698-c6e2dffabba9)");

unit.assert_eq16(16'h0A62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #285 ae8b0f87-4f46-4719-af5d-80dc6c5d1a40)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 9c68393c-79df-4316-8aaf-dd37628f1ef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 b67ca6e1-0353-44d1-accb-fd2e414499c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 a30ee51d-e782-4448-8934-0b33eeb67851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 500fbfd6-84e3-4e9f-b2c0-fb3ffeaf84cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 db4d4d13-f443-4a05-b7c6-2360dac689c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 71989fa3-da0a-48b3-a8d0-315e1302ad6c)");

unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #286 238d502e-96ee-47be-bb7d-a2b44fd3f969)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 b3d259e4-d7d7-479c-8e1d-9a23e04c444f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 89f20ad6-3cd5-4ff6-9997-cfb72a25a26f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 9447e80f-e811-4ad3-a37e-0b22379a1a70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 b77bc08f-c342-402d-8748-e0c433f8b8ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 5209abab-17f5-483e-b200-e9fd25fa01ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 c4074866-168a-42e8-84ac-c0d4609cba18)");

unit.assert_eq16(16'h0360, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #287 ca8b0b77-0a44-4516-8253-d82370d5f8e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0360;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 d6c39e22-b495-4401-b451-338a5520ec3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 fe7d3c0f-8e63-4d5a-b68e-9e1a25308319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 116b5311-2d6f-4cbf-a98f-485266a33508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 99cc3af8-90c2-4a37-a2da-d65632dd49a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 bfaa116d-8388-4c24-bfcf-29388f9c1f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 5c22d9b7-4713-493f-8c37-5fd8ef847282)");

unit.assert_eq16(16'h0491, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #288 f77ddd8b-83fb-4c16-8e14-9345dea1117c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0363;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 24fb347f-dee1-45b6-bcc6-1ffbb35255df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 a3a53e6c-3cc2-43ba-8ef7-36ac6d1149f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 54523f10-c46e-4917-b660-77a66fe91bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 d76f90b5-6063-474e-8dad-eb0555825eab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 15041b08-6797-4a47-8153-3ded54a2bab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 50ee9d86-8f3e-4be8-89e1-3029740d612b)");

unit.assert_eq16(16'h0C90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #289 35894d52-d8b6-47df-bd4e-c8fde0ca6273)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0366;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 1df5374f-0a94-4609-a2f3-85473b976ffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 9ac3b635-b818-449e-9364-6af351e90af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 45a9dada-b0ef-4ee5-aa8c-b9ce52202f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 24410e7b-bc6f-4f75-9450-e7a100dedb32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 ee3e7a38-04f5-400b-af8f-c11eede6b296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 12d91c64-9160-44b8-ae71-bce90f8e9a28)");

unit.assert_eq16(16'h0369, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #290 6dd9aabc-49bb-46e4-95d6-b0e0abf5abe5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0369;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 6ba45fcc-1ad0-4263-a3dc-5ca6b992a92d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 b0e0cdf6-4f8d-49c9-9e82-b057608c0d28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 e93b717d-d754-4740-89ee-cdaf993e2510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 c737fcc1-0b0a-4d9b-9f32-d45af270ce4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 cdac2b91-a1b8-43f2-a6c5-a1e83ab4c692)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 a24a65c6-b52d-4936-b549-127eed4de469)");

unit.assert_eq16(16'h036C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #291 8c58aace-d75f-4cd5-92db-c6eb24dffdc5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 beb4e71a-9647-41ae-9f38-bb49b72ce66e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 b3b507ac-718c-4942-ad92-ef251ebfb529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 367642ee-5dfb-452c-b43b-01a022a535a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 f24580f0-710c-4e2d-a7dd-1bce88b4dbce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 bcf6ac75-b484-450d-81a6-225143e92b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 d7ee5107-5b52-44e6-8ea2-155adc32fdf4)");

unit.assert_eq16(16'h02D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #292 8b35a494-b0cc-4b00-a6cb-1fcbd3750ef3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 7da40475-8a57-48ef-835a-9d0ab4047d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 0dcd2011-777e-4a0f-97ad-67ba88f82298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 e8dd36a7-a06f-4377-96e3-f75877b458ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 f4985d26-90c9-4c9d-b59e-55dc2134231c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 2e69f359-e7b6-4d71-ae04-45fcefa40fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 b6073f08-1c7b-474f-bce1-5feb153cf627)");

unit.assert_eq16(16'h07EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #293 63213135-064a-4720-bb89-498de8911666)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0372;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 013491e7-206a-44da-b5b3-e0e1a5d3c005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 7efa7ba0-a949-4805-84a4-cae4f5446384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 7fd6efac-2c1b-4c58-8de8-79d89f900259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 fb90de28-4a90-4f70-a24e-6b72417d0a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 3d826a58-387a-4246-b969-cc813b39b231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 0f0c3415-6f15-40d7-b939-e64437a46731)");

unit.assert_eq16(16'h0375, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #294 862b3ff1-3166-4025-984c-93ec0aa9efd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0375;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 1c5b83ba-d032-4105-922f-73f45bc1c6e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 bd799c6e-d81c-4edc-b0c8-14ed8cb326d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 37e975e0-b428-40ab-8b0a-0c7d19c4b8cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 15cb38c7-eed9-4c69-8f34-86917d89a931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 5a6b1e53-9efe-4585-9c4f-9d417cb5c33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 c659c389-a3f1-4aeb-88e7-a63c1448e3a0)");

unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #295 f73fb2dc-a779-4c14-956d-53e54f9007ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0378;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 ff8f91d6-cd25-45f5-9e7a-4bf652cc3465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 aaf92d64-fcb2-40f6-a323-869b670cbeef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 fe76abe8-5209-418e-a8ed-a501a064192a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 793be0f7-7130-45ea-b8c0-dc322b25dbe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 26c4062e-daa1-42ad-b8c7-693d4575714a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 4f65551a-4f0a-40dc-a3df-f6defa337392)");

unit.assert_eq16(16'h045C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #296 83e3143c-7a61-47f0-8aba-89ff96c04ce0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 395c7b57-a524-4c13-8a07-8fbbbbd21287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 9bff3d25-d710-4502-afbd-3e4b63f7ec46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 11f842b8-3d8c-4eaf-a633-f350015bd661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 0fc12b04-04ce-4144-bc28-39178933aa7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 149623ea-0382-4b70-aedc-f27d0f863cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 f018123f-16b1-4500-9a2d-7c1a28f35c4e)");

unit.assert_eq16(16'h0023, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #297 774dec2e-8cca-46d9-8ec2-3cf30d12137b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 70253a4a-5e40-4055-b994-8470e926853d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 d74cabdf-72b4-4fc3-8ee3-620b96739109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 474038db-9aa8-4d49-b254-e1e118934dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 36aafc31-a923-444d-8240-5e35d8e46109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 34906967-cec6-424e-915b-8f5dd7943f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 32c4c79c-92e5-4ca3-b6bb-9a0b9e773831)");

unit.assert_eq16(16'h0381, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #298 fe7e761b-ef19-4315-9253-a15c9968b33b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0381;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 c33dd709-198d-4290-bf9c-4c42362ab7e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 a6ca5eca-25d5-405d-90f4-c2f742237f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 84e436dc-8462-4ed0-8029-df86f726c3a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 2b3e45d7-2bed-4506-8325-d04580216393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 db4a0ec9-d15e-47ec-93c7-ea080edc21e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 b61be4ff-70bf-4310-b00a-f2ea92a9d523)");

unit.assert_eq16(16'h0384, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #299 410beb57-b58a-486b-b521-0840dbc968a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0384;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 e3cbbca7-b781-470a-b1b2-7e8c396404e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 7ea44a54-7a6e-41f1-9242-7533fab6f7aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 aa110a07-7f64-4807-9a52-5b494de4c4f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 66a060f3-b5ff-4e08-ad68-dd79979d3c5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 72ce5f8d-afac-4a27-985a-5af089561230)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 247067db-6b51-4520-9cb3-eaf6d8d88449)");

unit.assert_eq16(16'h01E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #300 a32c560c-ebe3-45f2-a38a-ac6a27113402)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0387;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 b22b9411-e890-43b8-8a76-4c66c8979211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 9de5dc96-8e06-4ae3-b2a3-d895c670a265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 c178a415-2108-44ae-b3b0-a9e491a44b7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 e3dc9b5d-7e7d-4036-a029-c78e2156b786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 b8a7ec65-cf24-432b-a6f1-295a30e5de81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 6601a8bf-b84d-43ea-bb1b-1598789f6f17)");

unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #301 1f826c39-ce24-48f1-9623-6610b47babef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 da582510-a36f-4bf3-bacb-05c7d5892e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 6e3972ab-0cb9-440a-846b-df841ca444ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 654e88df-928c-4886-832f-c77d4806cc39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 3b918c69-44f6-4abb-98e7-305b021b1a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 4063cd4f-bece-4a2b-b85c-b6103f95fe00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 ee42d3f5-e827-4c8b-83b3-4cee42a98b54)");

unit.assert_eq16(16'h038D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #302 fd8e32ec-d2f3-4c9a-b5e5-94a999c029fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 b028267c-97fc-4dba-a9bf-080c88eb909e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 6ff2c8ec-23af-49b9-b044-cebfb9a7291e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 e00dfab5-c913-4143-a7f2-e421c3bba35e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 cf983b26-4234-47f8-a9fc-d4e5ac043378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 f7e0f6d3-e65e-4119-8e88-aaf2c01626ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 4e31c561-364d-4a51-bb80-c420fda51e25)");

unit.assert_eq16(16'h0390, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #303 2d81249d-ddd7-495d-80cd-4d6fd34cca2d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0390;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 dfc40fe2-1aa3-432d-a777-2a83c064663f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 a6edf0c5-4229-480a-a293-4153c8468412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 6f137fa5-6e1c-4083-af2c-7ec18f73857c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 bb3c3ea0-637d-4267-9b6c-7c7be1ad3d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 90ab9c3c-a5e3-41b4-b7d3-7284e0b49ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 ebc46107-9df7-4c44-90f6-2eb07c9d9d27)");

unit.assert_eq16(16'h0082, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #304 7d33a191-eebe-4a40-99fe-d27d061aa5a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0393;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 5d44e071-2c9e-4c05-8171-aecaa3b1f118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 d52db01c-50c0-4777-b6b7-18d3d502af04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 063f2d95-7dfe-4f99-8ec9-3dbec6e1ef55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 20e215b4-a96d-46ef-a827-fd5573683900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 12e6c853-7b86-4dae-8876-2780e478c842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 9e236e3c-a628-43a2-8383-8c35b23e045c)");

unit.assert_eq16(16'h0009, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #305 d7e96f5b-d909-4774-8c10-1ecd384a884f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0396;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 427a971a-3f25-4ea5-90d5-012abf2840dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 cfd47be4-8fb5-44d8-b43d-6fcaf31566e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 ecbdc8bf-5e84-473d-9a77-e4815b627d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 8fcdc7d5-ed5f-4688-970c-0bc6bfd700fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 15ca73fd-370c-4680-b4bf-81ee5ea24f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 596da663-1714-4d8b-93ae-6c0f5e9fdd96)");

unit.assert_eq16(16'h0399, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #306 76339530-1e1e-4d08-be8b-5bfc647314b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0399;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 ce141ec1-bda0-455b-8ee1-2ecbf88e9e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 6a8f81a0-bc8a-471f-84f9-8748cf476826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 f00d5d31-9bab-4fdb-bfc3-9ccc3e29d9e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 248ad0da-19e6-4c20-a5ff-27296f6f03cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 853c25eb-0a60-4f7e-aede-277c178ac428)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 c4d6ff9b-7c37-4222-8aaf-5a95f6051785)");

unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #307 d0542124-dc5c-4733-8210-7d5d87db43eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 14102c1e-4565-48f7-87de-b8dab6be619a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 2a8466de-09e7-419b-adcd-e894dc837975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 f1547fdd-1a84-464c-847e-37613f9e1215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 9168c907-1575-41b4-9140-4e10fe734b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 4bfbfd0b-e32f-4192-bffd-b8f1a097a25d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 91dd7e68-dfbc-4962-80c8-598e9ddf16fe)");

unit.assert_eq16(16'h0FAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #308 dca0aee6-5bef-4cad-861f-b3f1c2673cec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 2c79072c-7f7e-4ad7-b4eb-7aa820498f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 a88f1194-19c3-4b0f-bcfc-1a387177448d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 794afed6-b719-4eda-a78c-b42936b30cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 a511515b-23e1-4c10-8dfb-514f1fb8de27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 bd9f6a4f-b3ec-4446-b2cd-dd10d80d4c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 49a12122-35d3-46d8-8c22-d768f397d967)");

unit.assert_eq16(16'h088F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #309 dac9cbef-b462-48f7-8f3b-08d5038693e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 feab1690-cb06-469e-b664-5753a74b59d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 ef9b0f4e-71ee-4fe5-ad38-dcdc8738919b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 9727efb2-2fec-4430-94a6-616fbbaba5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 ec310858-bd56-4a93-b256-e113a73dedf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 d74fcac6-2eab-4e62-b363-cd45c1b3cf5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 31c0d8c8-6c8f-41cb-bcc4-ec8202aa70cc)");

unit.assert_eq16(16'h03A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #310 2a91441e-1e09-4f3d-9e5c-db1fda92d9a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 55da7076-ea27-4bd7-991e-5d15a343ae5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 7dc36215-b869-4af2-8e8f-fbf6b9262a0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 2dff4cb8-497b-448b-99ef-fb5b34ba75eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 de387f8a-d291-4726-821e-c47b185d2e7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 1d78714e-a0e7-419b-8058-911c7ebdf3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 3680c1d4-8cde-4303-abb5-372a312710f9)");

unit.assert_eq16(16'h03A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #311 b186985b-29ea-49bb-ae12-ea5b5030a818)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 2606fa9b-0f3d-4032-b6c4-6daba8a90abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 5a81a3fb-0bbb-4a0a-86aa-b167a84ca290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 daef7e06-78a5-411c-97a3-11642b1cbff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 60cad921-eb51-4062-b06a-ef8b1a21bc65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 4b7b6b86-80e2-4302-bf75-854abc9e810a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 147045be-4fab-4c5a-adde-a7bd97b6c111)");

unit.assert_eq16(16'h0DBE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #312 8a4d1f65-0be3-4f06-8919-3177283f51ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 98c57c37-34ff-416c-b64c-7c5ec53d2ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 779c7a69-1007-4f90-8fa2-5ec51235a363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 3bae2977-4f52-4036-85a1-42f6bf5a47b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 970945ce-a25a-48c6-908f-1f92b9abfde3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 e6f6e04d-6131-4349-8a56-7ba27c7d2c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 baf8a263-fa40-4060-9aae-7de5a996e10d)");

unit.assert_eq16(16'h0CD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #313 b8c72f8c-e5e1-4525-8e20-ff852327fbc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 27237734-323b-4a2d-b520-e781e815a618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 58e12fb1-a07d-4757-8af2-671f6c97f667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 66777c5c-495a-4d3e-88bd-dcd2d9715d2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 c8abd697-732c-4c51-8a49-77f49a90e454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 82708215-da02-4b0c-8c1f-c839428e26cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 ff6b995f-5754-47b7-bcc8-61328c52e930)");

unit.assert_eq16(16'h03B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #314 fcc30f08-8ef1-4d5b-9efc-abddb1768cc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 64b969e6-ef23-4a41-8d92-396b5c0d120d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 7a337b3c-4a83-4b69-8177-c4256005af0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 b08d3cc7-36e9-4150-aee2-a80af2bd63db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 e2e9caa9-5d13-4d8f-ba9b-5d10b02a5cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 26458b41-a50e-4ecb-839f-31b87716047f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 fa2f6cd5-735f-424a-bf87-b6504d502784)");

unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #315 82798054-d6c8-47e9-938c-2476e3b22a70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 d187def3-586c-4367-8d23-41b7e50fba6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 7a8068d0-ed53-4c50-9005-fefc59e4c40a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 51d26824-7b26-4b8d-83b8-c0daae45ffc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 73c7deb9-c4c3-430e-8635-2da70ff229c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 6ca81fe2-8905-4732-8f6d-b40be9ed04a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 064cdfcb-bcea-4ef0-90dd-f8c6c72cf78b)");

unit.assert_eq16(16'h0863, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #316 39fea893-7e60-499b-ac58-f4ea9cd73fd1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 98a00849-db13-4091-81fb-3be234920075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 15c97e68-07f9-4bc4-a65e-264621115dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 a0f2f26f-7608-4d47-997b-2844d7943e9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 906f8984-fb86-49df-9b1e-f37c08870ffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 71722fe4-82b3-496d-9ea7-c9fa89fb8b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 3beab18c-f522-4be1-b63d-ec9057944284)");

unit.assert_eq16(16'h07CA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #317 cb3e7729-2b07-4f3c-8ca5-d7060b86584f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 23c3c1cc-6734-4c1f-b1f7-b73addb07c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 4a854c9c-cd4f-4f04-aa80-50db6fb8a7f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 d2cb36d4-2709-4b53-85ed-afdc3d4ef61d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 046c0741-c1a7-4b34-92ec-5e020639b12b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 463056d2-508e-4a2f-9b22-393faf778db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 4f09a4e3-b0cc-4fb6-83b2-a00a94c3a2eb)");

unit.assert_eq16(16'h03BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #318 fedd9eee-7596-45bb-adec-1056d637803d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 dc1bccf7-5d58-4fac-a503-1113886532e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 847653cf-0e07-4665-b0f9-ed89d98fe296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 56f6ec09-393c-4a68-9acd-2729c0130cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 842a4093-c1f0-418b-a663-2b83c312e5db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 9aa1318c-6bdf-4e55-abe6-fbb31ceedac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 3fd97bcf-fbfb-4b26-969d-b89947b3ca32)");

unit.assert_eq16(16'h03C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #319 ec91bbb0-6517-4f8a-8b31-45e444469948)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 b698b661-146d-4ef1-b888-f6057d58d106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 e15acc9e-a4f5-4215-81c3-47a84a21077e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 65d28dec-9b65-4808-8e75-d9aae78e0d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 16ad05d4-468b-4504-a81b-a1f62b38a176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 e639302e-b989-4b1b-aa7a-03aff64af6c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 3844d0fa-b7d6-4c8c-a40a-802aaa08aba3)");

unit.assert_eq16(16'h08C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #320 4589a829-ee31-48f7-9a41-c47b154d2c89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 e4b3f657-1d17-4a4f-b984-e472907718b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 082f18c4-7e1d-49c0-b566-ec54f98913fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 ae77ff77-8729-47d7-aa7f-b7dc072dee9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 918179f6-0f51-4fcd-9dcc-893799f9560b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 3bc40c45-f097-404d-a4c9-22350ad4d618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 7e2eed7d-dffc-436f-9750-e70dcb12051c)");

unit.assert_eq16(16'h0790, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #321 5957ef9f-550a-4a4d-9fd3-0a49f4c6c3e6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 4d39f886-c9cb-42c0-b38f-f26522b9c296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 53207a8b-737b-4538-a6a8-365c30306dce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 afbf62f8-37f0-4ea2-9128-854a77b8cc73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 92001fde-e7c3-49b4-be1c-02c50eb1e0df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 0d8a0ae6-dbff-4f1a-b5f2-5f9ef67c5d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 837b0c82-cc8e-4cfd-9664-d466537bd034)");

unit.assert_eq16(16'h03C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #322 92512107-7d6c-4bac-9a73-d607c5ed850d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 d2ced52a-33f7-4f6e-9cbb-9b1f458adc47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 db8981fd-3104-4585-8a52-5f43defe5386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 4e2b0fba-d77c-43bd-81a1-7b3cc105a805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 6711eb48-41f4-4b30-9e21-ca4f52b13622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 fff85444-3090-4d4f-8bcf-8f4406c4a9ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 03f961fe-f68c-49d2-a0ca-25b237a83130)");

unit.assert_eq16(16'h03CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #323 29e7ba23-2d15-46d7-958e-04ae375a2745)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 010091b7-d391-4eed-8a5d-24e3407d2402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 8fa74d2f-3f5f-4c2b-b598-87e193e96d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 e14d072c-b4f1-4e77-a196-b9ba7ddf2d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 e70ef5f9-594a-41f7-9e10-a76f37a7c4f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 c6deb9bc-0d20-4d64-9293-0e8998540f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 ff2ac041-c948-4e98-95c3-e1d85a42a4cd)");

unit.assert_eq16(16'h0F3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #324 7f89284a-17e6-4da1-a5dd-df963da34a53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 9e6bf147-a3ac-49e6-be78-796ed9cbfe2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 3b740705-fe54-491f-8b91-36540bd56300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 0fa34bd0-87b1-45d4-830b-db9dad2876d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 a8c2f890-007f-43ed-9e2a-57262c8cea63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 1b353641-00ad-4069-b531-c92f76067ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 607cf305-3a0c-45e7-bf0f-07892572a4ae)");

unit.assert_eq16(16'h06C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #325 ab2306bf-acd4-4367-ac1d-7e5d507d4224)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 1e02438a-67b4-4357-b71c-6ae5d29901df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 a85ca80d-086f-4979-ae46-c82daae8e7e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 204a6fe0-707b-434b-bc0a-e28fad4fbfb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 e8826e76-bcae-4cf4-ba9d-c17664c76ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 a9510045-3035-4c0e-b909-3e1f1c08a8c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 286aaf9e-6951-411f-a713-0962ecb0f6cb)");

unit.assert_eq16(16'h03D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #326 d75f7e64-8565-43cd-90b3-a8ed512f23a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 40515c0e-8dab-4348-ba11-d082db79a699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 aa7fd4cd-89e3-41b4-9f39-7da0d7642ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 05f3e49f-4e38-48c3-afde-feda731fdb18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 0b46580b-de0f-4ed7-84ed-d41dd2da69c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 a7ff804c-5bdb-42a8-89ad-cb1f8042a62d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 3ddafec0-0c7e-445f-bd7b-3177294167f7)");

unit.assert_eq16(16'h03D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #327 3cbf503c-9336-45e1-9f06-ebb58deb2d5e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 ba27130f-7241-43c1-b998-25fb2a961fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 d2b4c7c0-f5c2-438d-827a-abd9473ddaa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 11ebee58-96a8-403c-b143-491c2bb9841a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 38facb4f-f7e5-47d5-860d-83381345d933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 5f212a8e-aec2-400a-acb5-8b76d58ba60c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 7f5fcac5-632d-40ce-ba10-17b4134c9b5e)");

unit.assert_eq16(16'h093D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #328 bb3cf8eb-bcd5-4029-9ab7-2efc8fb67cf6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 508d801b-d21c-4b79-b8bb-f1f8a169545b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 bc28fba8-9db1-4cc0-a58d-1b4e32a7185a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 956177d4-3655-4d7f-a70a-19f4adf7e5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 b4864483-388d-45dd-8b7d-07ec31a57882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 ff9da044-ab3a-4dec-aa96-bb5f74674db8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 e301c928-1c3c-44ce-9be0-2697e573b6cc)");

unit.assert_eq16(16'h02D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #329 6402203f-b96e-4609-b8f3-78876d4488c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 43146232-c08f-41d9-87b2-9db6b14ea3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 5c516e14-36b5-429f-a916-3be42fb1bd9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 b69ad2b5-a2d6-40cd-9fe0-845e17377b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 e6b939e8-6e17-4ddf-8a89-c22d0fcafdd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 b41cc4e4-fe04-40fc-9470-f7ffe61c2bea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 89f3e69e-26b4-46a0-8a16-6dc357d22b56)");

unit.assert_eq16(16'h03E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #330 6eed01b1-9ed6-4c01-954d-b53efcf713a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 dbdf9e74-5ab1-41de-9217-579e6022ef04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 2306ac4f-d7eb-4368-a526-8a4baa37246e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 5cff1e2d-a8d5-4218-8b49-bbb2a92d680c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 58c2412b-3cbf-495c-a249-080ec0311b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 9560dd36-a6b0-4966-86d5-a759a564b490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 e0a44124-8bc3-4968-b05b-de61a3754ad1)");

unit.assert_eq16(16'h03E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #331 08c61c8d-a4a3-4060-b9eb-c0c54adaba75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 c2f19039-eec9-4320-a1b7-e99444ceb2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 61b4f400-a267-41ad-9965-84c43fae244e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 b90f017e-776a-4f4b-8b91-e5c2ad2d0511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 3acfa541-f8a6-4443-9c42-2454aa133c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 05f48917-73fb-4d0f-ba08-c05ab1cfd4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 c9aacef9-bccb-4894-af3d-0f9f4fd87237)");

unit.assert_eq16(16'h067C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #332 7cdc8609-97a9-47df-9f47-c87755678007)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 0d4ba4b2-c72c-4b9f-9035-e750effd154e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 08a03bf1-0173-4087-aa0c-0dc904455aad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 97474cb7-ae23-4bd5-b578-bd6d76ff4c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 a70de646-1b8c-4847-ab4a-3b97fb1d842f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 16f9e0ea-a563-42ea-aa44-410dc24864de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 1479a121-b7f1-47c9-938f-f38eac8723c1)");

unit.assert_eq16(16'h04A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #333 c45a8fbc-fc64-4252-8c89-a2d7ebdd440d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 dd97ed61-d880-430e-96a9-58dd96ecdf7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 723cbbeb-f6ee-4bef-a819-7cbbb39f85ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 3f865e60-66f0-4509-b2d2-c4ca6a2a8306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 64cfe1f2-2eb7-48e9-8f16-56bf02cb91b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 4950c14e-fbf5-4f52-b740-b91fee83149b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 c2c8a16c-ea47-4afc-a0e5-c0ff7684adc7)");

unit.assert_eq16(16'h03ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #334 02f06efb-62ef-4abb-bb6a-bc31bfb381f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 bdfe600b-b3de-413b-b6b6-f3baaec873c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 8aa1adce-d388-44db-8454-29979b672dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 7ad22b4d-403a-4384-80ef-a645ffb3be32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 09672ea5-4fd6-4747-8319-142b50b74fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 f46ee9ed-e92a-4311-9182-6f36ecfe9cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 c8be7e49-88d1-4556-9d7d-fa1238242dbf)");

unit.assert_eq16(16'h03F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #335 d9aede9a-314e-4c67-ab49-2bd6c1a9daae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 7ec7a462-ee54-4e87-9a7d-85363c828762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 0fa0d0b7-55a0-48b3-86ce-c306ce147f33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 876bef35-6203-4d47-92ed-611fdb683407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 853519d4-7e85-4ff2-9622-6ee92b131588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 1c21d7ba-77af-4565-b296-110c7d7ec26b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 14b250fc-fb4d-478e-802f-ced88fccc9f2)");

unit.assert_eq16(16'h0AE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #336 0b421a88-f70e-4d2b-a46a-12be884ac7aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 4782ec55-338b-4ae4-be04-38df8726cc90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 f6507860-3aa7-4184-833f-35df5c85cceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 89b5a93c-cafd-4efa-b70e-4d5596bfff88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 20caf6c3-5fb9-49a2-b51d-5df3e601ca19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 2f55e185-3fa3-4e52-95bd-8ea43be1a116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 05ff9681-f991-4d2c-a218-537c02afc2af)");

unit.assert_eq16(16'h0B47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #337 2b045862-9b7e-45b8-a26e-d96ab14a8a14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 8a91bc6f-18b3-4f05-9c36-d82d496cda14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 6f54b0c0-f532-44ae-8b20-a48de92e42d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 b5cb0065-79f4-40a3-9a94-75d1a6560cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 783e6d43-cbb0-4d7d-b856-0a9a3189089b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 3c69be7b-3762-4281-9902-d943fc40b801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 57367aaa-f8cf-4c60-88e7-55d4ea2086e2)");

unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #338 d916d71c-3319-4cb9-af35-ee451130ac46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 906657f1-0059-4a76-bb0b-a370e08145a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 5ff2e64d-42e3-4017-a9ba-eca07fa9b487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 d528dd92-5dd3-4ccf-90eb-cf07ac01a44f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 092d3c63-2e34-41b1-a5d0-4fb532555259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 1f8dd12c-09db-44a6-ad99-cb1e3261116f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 7f79237f-5364-4d7f-9220-7e698aab2db4)");

unit.assert_eq16(16'h03FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #339 62b5683c-ed83-411a-8cc8-029b2850dfe6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 173be3c5-7bd4-4255-9a96-74c12e2a1f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 f5851841-c3b4-4a13-ba92-a523a4bba50f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 d71826f7-d0c0-4c15-b3f2-6b175d7e5278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 93bf7cb4-e33e-4a74-961a-4adbca3b0857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 7aa0ac3f-8f8a-42f4-a6e2-f52e47910f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 9fd51eb1-b21d-43ca-8580-9f9e9fa56433)");

unit.assert_eq16(16'h0407, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #340 c071a0c9-b50c-49e0-9d72-e3b5e78b9861)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 7e782c67-4450-43ee-8f78-f09de7ab04c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 926daa5d-6022-4880-bec9-d4b407b3ef81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 53c35c94-3fca-4af2-9ee9-124ede0372b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 575ef282-4aa6-45f2-8e0d-b76707f66495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 0f5916be-7370-40f0-b1b7-dbe9e0255186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 c7951e56-e3e3-4ca3-bf13-0ff185b681d2)");

unit.assert_eq16(16'h0EEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #341 c3cbfa42-e759-40bb-808f-a7e4626d0d4c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0402;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 2b0a1f7c-3156-4f93-a8e6-dcc911f8a2c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 abc4a2be-7557-4ce7-9211-5b9f82b2ba8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 93fe2c5f-5dd5-4659-ac7d-0837450f9d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 4459a5da-23d7-43bd-956a-b14372e585c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 f5269475-9ef0-4167-818e-2bceae6df175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 364cbd11-49a0-4851-a62b-50dc0248778d)");

unit.assert_eq16(16'h0405, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #342 60b2f0f6-ae87-4641-a52a-2cf307c7841f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0405;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 068b8ad8-8c04-4862-a0bb-6b9f0352a5c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 d60b2459-23ba-4846-bb63-bf0b286c8753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 b66ce7d2-c285-429e-96dd-a4855f92d97b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 f7fbf110-505e-4df9-b3b1-f1974b037a29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 4d752baa-5770-4eb8-90e5-1ba15e1d1745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 965b6da4-02d4-414b-92c1-ff7d70d285a5)");

unit.assert_eq16(16'h0408, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #343 1599296b-e4eb-49e7-b77e-161b608e2d16)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0408;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 ac710dfc-3943-407f-b1e6-9f68291288e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 b96146f9-f9ac-4cee-85f7-620ea2f7325c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 05c6acff-e220-4ab8-9358-ccb931988b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 bcc6e26d-b48d-4508-a2d7-9cf151818a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 565ec206-a063-4645-819f-57cbf1fe6b5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 063e08c6-fb75-4ab2-98c7-64d97fd46eee)");

unit.assert_eq16(16'h0529, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #344 48c05ec2-9ee9-4423-88a9-cf05a285ffff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 3a7c51b1-a8bf-4fa1-a5c1-0026d9746fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 e4ac7a2a-24f4-40a4-9503-e0a55c02c875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 8a68eff1-f28f-48f0-90e2-07f3af9136cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 7e521926-53a5-4028-840a-d91605a039ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 770f28a4-e658-49bf-890e-2ed9a8506c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 efb3fa31-f723-458e-93a1-dd0ba5c75109)");

unit.assert_eq16(16'h0795, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #345 758c8db4-026c-4270-ba32-b0066eec6aea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 79e619fb-5db9-4f61-9fa3-0b58a4ecac7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 5c6f38f8-c441-4797-bef0-b4bc3dbc1ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 2a9cec76-2a8a-4248-8574-f04d9ec75499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 e3cbe671-c8d6-487f-a9b9-02106281c62a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 213ac843-5d26-4480-8a85-65ba6e779c37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 0c293040-75be-43ed-891b-6fb0169a7ff3)");

unit.assert_eq16(16'h0411, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #346 1045c6ad-8a98-44e9-80c3-3ecb27086a8c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0411;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 73e944cc-eb23-4cc7-9c8c-1087cc7cd2e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 3bb91fb6-43b2-467f-9ad5-1d654581ea05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 def78afc-1b00-4192-be9b-20bfdfcebba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 49d90212-bbe2-4e23-8561-fdc85112566e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 876c23a7-9151-4663-9672-99b985a7513d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 9226a4a3-32a8-446c-b14d-9b9ba4b111a7)");

unit.assert_eq16(16'h0414, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #347 fc7c3042-e3e7-4101-baf1-06e3c36f2fdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0414;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 a55c0ec2-e59d-41fc-9cc5-5e9f72f75f11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 26db4ece-c33d-475e-a490-c996a81993e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 2dd79efe-a267-4565-9fef-f1aff87b611a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 51cf8394-124f-4070-ae70-8f9e77354ba0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 698981f2-55ca-4e1d-8e0a-01e1df3dec40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 b66bb6fb-39ab-407b-94cb-9832e7a38649)");

unit.assert_eq16(16'h06D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #348 ada6940d-73ca-46f3-a730-a3b7aef5a922)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0417;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 75147633-1e08-4590-afce-515f336449dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 f646832c-205c-46e0-b654-7ca070bfa1e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 e6417139-a93b-412b-90d9-35d8c9a50e72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 77416d35-ac10-4545-8a60-07126ed7627a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 b87ff2cb-9d77-4bfa-893a-f37c1a22abfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 8868bd9d-8e61-4fb8-a64b-d12865620004)");

unit.assert_eq16(16'h0067, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #349 2c227e8a-66f7-4d37-a8c9-3e14ab3ac033)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 1239ea00-9f54-4b3c-8766-ca4ccec7cccd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 447a3523-13cb-4165-be05-630ea115c033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 deecb3e1-d7d7-40b0-9924-36349d0edb16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 2d2bcc5c-f4a3-4f64-9483-14ef6f2f48cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 ac3a0dd7-550a-428d-9e86-a61ab71608ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 e6bf6539-556b-43e1-885d-1a79603cef37)");

unit.assert_eq16(16'h041D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #350 c76bb527-b748-4e14-a016-64549cb4583a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 a8573696-fce9-4b15-8d25-1acd3b289131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 ab1c1c74-a221-4222-a538-1fff2ca14360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 757da433-9c56-422b-a0d1-86b99bd80dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 ce44f3cf-37d4-40c4-93d8-ce429f737fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 b38f69b4-ef56-4c06-8596-514024e2e763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 49dd19ee-bad4-4bd0-9409-16bad1a3a03c)");

unit.assert_eq16(16'h0420, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #351 1de8cbad-4b66-43ee-bb03-77abaf5b7321)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0420;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 38eefdea-5871-4cfa-a240-a3b315d8de89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 711de31b-b6c0-4bdc-8cf9-2c6b4c99b1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 66030456-4def-4db3-983e-68389769d39e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 d6112ec7-cc7d-499c-ad1d-850de65244f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 f8782ca9-0608-44e0-ac88-530775ba4aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 ddff25c5-d0cf-4a29-a7f0-560a3c273311)");

unit.assert_eq16(16'h04B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #352 5d499cf9-ae56-4ed9-8f28-adf8ed04dd92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0423;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 9949f55d-0024-40cf-9cb0-145a4e35334f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 e3699020-506d-4c37-a170-fbe09dbca235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 94f9101b-5203-46be-a241-c92b03d0c10f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 3de799fd-3e76-4654-abba-8f48d4e87a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 02798c92-e272-4221-8370-b9bad9a2dfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 4d86ac5b-4ab3-432c-a098-519d194e3f51)");

unit.assert_eq16(16'h0B47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #353 94446084-03fd-4813-887f-2628a5ad8d54)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0426;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 4445a6f6-7c23-4efc-b742-19e586e02211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 c22ed3f7-22d1-44a4-9e1b-b8b8ae6b80ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 a5c1c770-3f88-409a-8d15-2f39e6f2e037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 a2078128-e6a1-4d34-8501-3a4931ae94d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 8dcdb201-6bd5-4cc1-ac77-fc1e21b3042d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 e0c4c9d7-30fc-4a32-a442-b10c93edcf92)");

unit.assert_eq16(16'h0429, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #354 4c81d1b1-c54d-4336-bd17-d5662cb65ed1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0429;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 3e07e1c7-a047-4ec6-8884-be8e25ad93f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 4a04cc45-d526-4c54-981e-c506cf253bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 030fbc07-eda9-4b86-ba3d-04c57005e850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 7cb24870-05d8-4ffd-adfd-9dc46945be1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 36028948-4f21-4d50-9b22-7f4963b0a740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 63b829ee-cd0b-4ed3-a2ef-e935eda6231e)");

unit.assert_eq16(16'h042C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #355 e8bd9097-1320-4682-bc58-4571672b3bc1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 4ebccb75-60f7-4a7a-9e64-1fa5a4adc311)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 1aefa65f-3ab0-4aa6-96f8-db7d6d20b41b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 ad670336-1577-4f18-babb-2da550444f57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 022e059b-29bf-4200-80ef-0c9e6f8c9744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 583a9e8f-240e-44ff-b3ec-e918237b84de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 be8f7e35-a879-4646-a4db-6e4bd68269f6)");

unit.assert_eq16(16'h03D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #356 13b3c851-b6ea-4af9-8bd3-9dba53e52a5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 a20f414a-b007-4f10-ae4c-7900b822c450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 b985e881-eb43-4e09-ba43-9ecd179b7145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 c438814a-8079-48c0-be61-67372f2fc0ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 955d4eb1-64f2-424b-bac8-6fa9600e1e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 11b9dc65-64c4-445e-8782-ad31622b7a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 25900e74-c537-4895-89ba-6078db5b84d3)");

unit.assert_eq16(16'h0AA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #357 5dc1f583-8992-4b85-a493-19117124bd3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0432;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 f74326d9-8f62-47b6-81a7-d6516cfca674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 e18b6767-b4e4-4327-950d-5215c79c77c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 97fbad11-d569-492b-a067-aa7f126c17c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 cac5757e-687c-4f76-93ef-6f943f4040d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 80fc53c5-3071-4361-b49f-1044dfb1803e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 e9414cdc-b83e-4183-bcd2-7a9f8dbb1734)");

unit.assert_eq16(16'h0435, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #358 a3d7c2a1-87a3-4295-ae70-18adf579e92a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0435;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 f4d5fc93-08b5-4737-9277-950212930ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 190712ba-33b0-4f91-84bf-afce94fe3693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 f14b71cc-a9cd-4c7e-b647-b9099a734619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 dcd19a95-1e2a-477c-9398-10b07a7112cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 5a8496ed-9354-4b39-add2-44da3d2cb66d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 d636313a-9c22-4ea8-add0-8fb6a7178b33)");

unit.assert_eq16(16'h0438, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #359 e2d2347d-88fa-4544-b9cc-cc483a0aae63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0438;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 daeea66d-836a-418b-af96-6434cea8e2a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 1f0a89fb-31c8-4818-9887-8e4a31670f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 fe506d6f-f4d0-4205-b375-4e8e9f97e98c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 33031cf2-7487-4377-8018-d8a938cef21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 98d8dedc-4c28-481e-b74c-b51d754467ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 551d30f7-fb2f-4b82-a3b9-a11a04bf0ee5)");

unit.assert_eq16(16'h0A76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #360 eacafae3-bb00-44bf-a497-4a844fd3c76e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 9e4d873a-c22c-4500-bba1-cf2a000fd7d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 d057b873-ad5a-464d-a0cb-f9b14fd4f32f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 2d333b8b-1458-4e7e-9d63-d246548b4479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 4e53c04d-b0cc-4869-813a-eb594401f4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 f5be89fc-6b89-4365-b6f1-03de46359a61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 9b2c156c-5cfb-4439-b4a2-beee54801a92)");

unit.assert_eq16(16'h0F16, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #361 b30ffd59-4e81-46a6-b0a9-970c42687ebc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 dadbb2ab-9ee6-45b1-9716-47c8ceb7d113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 b0bacc4b-00de-43a8-9fe4-1d7cb8a405fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 8034a6a3-5ec8-4515-a8f0-dc702aa2de78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 cae2da79-7485-4c22-a912-3de039ab2fb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 2f97c448-636c-4041-afa1-b87c56365027)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 e3cc6357-a84a-4fc8-b05a-799f8cbef1b3)");

unit.assert_eq16(16'h0441, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #362 6ed64910-ab75-47bc-89f3-8cf8ceef04e6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0441;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 cfc351a9-dc6a-4cf0-b3cd-ec979d2ac199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 98375413-ded4-4d12-8944-bec9a2eb4b95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 f3dcb72c-709a-459d-be83-c66877537ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 49b4edb3-0b03-4fab-8dc2-076e7b3536dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 5cf902ae-4e04-4562-b0fd-57918a498932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 1642a87b-02e4-4464-939e-ae09f14311bd)");

unit.assert_eq16(16'h0444, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #363 3ba5349a-2397-42ab-89b9-aae7165d4664)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0444;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 686738f3-d753-420c-a828-a899f45bab38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 d245f9ca-5ce1-413c-b9ff-d2ae8240745d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 f74bb9d0-676e-46d4-b2e1-2f8f21373107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 1cf3ca71-7838-402f-a396-9c26ec33e6a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 c0d26290-00f0-4fb2-814d-69c698d8f8a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 b733d8ff-279d-4713-b449-d6b76840ddb7)");

unit.assert_eq16(16'h09DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #364 fbfd6640-7a3c-49f2-ad41-f4163bb78daf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0447;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 f67a3de6-bed5-43fe-8894-578216f29163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 69020580-3d06-45b9-8796-cf7b6a61ac29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 39b42dc8-8f52-4fe8-b347-942e22bfcef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 63e47300-c5c9-47c2-ad36-f91e5ab94525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 caf51037-b8e7-489c-a065-12c0e71361aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 f5cabc89-dbcb-4479-8c47-4f858e63a73b)");

unit.assert_eq16(16'h0729, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #365 dc154b92-509b-4499-b592-d060e024c8d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 86d3b9cd-7b69-4025-a25d-c3c8295d2b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 95b02004-0c02-4358-ada3-9b4611fb719b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 642d7229-f300-41b3-a1b6-52f852afbe1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 1bf3a670-d261-4e43-a6f5-bfb5ce174b01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 289418b4-1ba1-46c4-8010-6b9fbe2823d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 b8148bb4-5c2a-4a25-98fc-d104d5172ca5)");

unit.assert_eq16(16'h044D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #366 8c90488e-088e-4d19-971a-c631a19aedff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 1367539b-0692-460a-8f3b-5d071db8c888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 8ebbaca8-504b-4ce8-a811-3ce32367e6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 d67ca473-7660-41ee-a468-f6dbc69b6cfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 7deb6351-3553-4429-a77a-cfdd03bdee24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 ec6ffcdb-6034-4dac-b5ab-338fe8c224b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 34e478cf-8bc1-476a-9048-5eaa14e0b60e)");

unit.assert_eq16(16'h0450, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #367 5e28f3c3-e235-4444-b6ef-95a23a7a93b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0450;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 8380b100-b6e6-431f-a95f-e70bff66b6b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 e36b8d41-f35e-494b-9d0c-88d29b5a041c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 a5a3bd08-2413-49d8-9c78-41d1a7e10c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 8567b14c-1d15-4a8a-8737-a8c3ce72480e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 7e0d5fe3-29df-401c-820c-59789f42032f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 2d3cb420-5709-4152-b037-6d395c549f28)");

unit.assert_eq16(16'h0B05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #368 42d1c405-73d6-429f-8fe7-649597051dc4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0453;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 4b10b553-bde7-43af-97b6-1d224a08e23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 f57df12f-e732-41d1-8952-baf2849cb58a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 d0022c0e-ef60-48be-a83e-0416701600de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 687b027f-392e-4516-aac9-a3d52a81bc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 eebd375e-fbd4-4f86-948c-e0ee4b853cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 c51db98e-5751-4f1a-a553-3f1fa30972bb)");

unit.assert_eq16(16'h02C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #369 79622c90-e69f-4c44-80e7-120c5eeed6fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0456;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 96cd7ad2-ad07-4770-bd5c-9f9ef130866e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 3492f0ea-2ae8-442e-abd1-590b378c705d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 d27ff7d0-3de9-4009-b90c-1cbe431c5a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 430ae5ea-d929-40c6-ac00-fea7de545406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 083f1583-ee0c-4522-af3f-cbe6ee94a176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 47c00701-e64f-4a5a-9e33-9d590790a5e0)");

unit.assert_eq16(16'h0459, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #370 312aebcf-4c7a-4ec5-bbe9-7509134f9e55)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0459;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 9a05285e-976b-4d8f-9df8-af675963b7a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 d0e27ef8-603c-49fd-a3e7-78b80286d871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 971575cc-ef84-4d55-979c-4f2563101c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 482dd950-a55a-4c86-8fcf-c54289696ac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 c35aff26-8438-448a-9f82-b8ac8cfd64de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 31d1b0d7-c7b6-428c-ad06-65cf755ffe31)");

unit.assert_eq16(16'h045C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #371 34b67a77-9ad6-422b-b52d-7ce1ad44ef14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 beaaa2aa-9589-442f-816c-d7149a003ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 55de1a30-1ab0-47ff-ad6c-857a276dee2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 5a42a6d5-db1a-425c-a5b7-d254bb1f7ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 2b475103-7872-4448-9a80-24b53dea8444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 9b116fbf-79b9-4671-9883-46437c3e34c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 2abef085-1ec9-4c22-a563-6ea47b2ac16c)");

unit.assert_eq16(16'h07E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #372 8286ad1a-d02c-4238-b68d-beefdf100ae9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 8b54229d-1a4d-4507-a3fa-ea545d0382ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 f40a3001-d01f-4dce-af51-f85e67baa6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 8b6acf65-9e67-4005-ad90-d7cd5c634d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 d800cc88-8c9f-4e4e-a8f3-9bbb0622d0e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 5846494f-068d-4b82-9813-c6ad6a3d15ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 9dbc3e80-3099-4777-af33-6d25ebb57afb)");

unit.assert_eq16(16'h0827, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #373 8c272053-aad7-47c0-83ae-ef79efaedbbd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0462;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 b4c6125a-de52-4e8f-9bab-181646c31574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 adbcac72-f2d5-4227-8645-a6e97a3526d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 bdd2ed91-c147-46bb-a7cb-18591941cd20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 f5c66fad-e0e9-4680-b30a-b86d65fe54f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 d0b5c268-d8a4-4d99-bf3a-cd3a9d205a6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 31f93c29-7df7-48e1-bc9e-f0e4d1fd0c54)");

unit.assert_eq16(16'h0465, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #374 1ad26376-7992-4d6f-9bbd-7f7c43746f4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0465;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 0e1662bc-2e30-424c-b31d-e5c8a16f403c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 4b14d6f5-6448-4ea0-aebc-b1f63059758c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 ca6d1100-b22d-48ec-b7e7-5bf512247b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 5ce05857-f447-470b-819e-772fc1403522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 47c3f41c-07d9-4d10-8189-d1664f294994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 74111965-9f48-417c-869a-1703bf01aee9)");

unit.assert_eq16(16'h0468, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #375 8c60b4ca-3644-43c6-92de-885055d505cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0468;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 0fba4e77-a213-4989-bf4b-eee98f855496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 9b20e6e2-48c7-4eda-b6b6-dddc57937cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 ca48c58b-6da8-4805-b111-0aa56d0e67d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 0a35f450-6b95-4430-a588-2b39aa9d3c67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 7c09cdae-9276-4b77-9b56-3580e1185874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 2b9933ed-7b99-47fa-b89d-f714bb3d802a)");

unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #376 b0c9940b-1db4-49de-96ed-d20357a2997c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 57cf987d-d77e-444f-8311-5a487c565e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 a5d5948e-7a3f-4c8a-8e61-061dc5c179e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 e8a34153-ba29-4f5e-bba8-560c4b05e26a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 80cc0a9b-4820-4962-bb47-c8ff6f6b4e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 35cfff86-7399-420c-adf8-f0369e841c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 34f55e1e-da1a-4e8e-85bb-2f72907e001d)");

unit.assert_eq16(16'h0EC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #377 50029c4e-c71c-41b0-b1b0-054d265b8221)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 3735acb3-d0ec-4b86-a793-d6eef454900c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 7eea031d-ce93-4f7c-9145-0ce99b88bfaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 781f7b4c-77c4-4aa2-8873-1c70d436c008)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 7b4cc9f6-d18a-4f38-87b1-7a7e3eba7e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 40105c24-f841-45a7-a298-840be1e32cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 e3456293-becc-4491-bac9-f4393010e765)");

unit.assert_eq16(16'h0471, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #378 e7d9ab8c-f2a8-48ec-9af3-a8c56cd1f2e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0471;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 d2d1417a-c5e9-41e2-aafb-caeb332270d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 7857df93-b6dd-4a92-977b-353473c9f8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 afec92c6-b5e1-45a0-a428-8e0bb86d1a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 25a30ceb-bb44-42ae-88e9-ffac84634af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 d9d728b7-ebb9-4c73-ae28-3f036d7dff8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 da208e93-2b78-4d86-8a6f-8263ae01f36b)");

unit.assert_eq16(16'h0474, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #379 8f8a7539-617d-4690-b55c-e3f11bc84fe7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0474;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 03509bf6-31b4-488a-a78d-03d25880e2c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 f1a32eb6-4b4d-415b-a312-baa3e8677d56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 7acd666d-23a4-45e4-aebc-c7a807d0717d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 2df3b0d3-4911-4e92-a4bf-29262e015313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 2f1fb7f1-3ef5-4748-b13e-1f375ed861eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 2973da38-7bda-455d-9882-253582c437ca)");

unit.assert_eq16(16'h0E49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #380 1eef64d5-59cd-4c46-b1b4-a4994ca361ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0477;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 fcb2c7a1-1641-4b0e-9507-659ca183aea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 2c15d445-3c88-49df-a64e-d277e3c47550)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 ac122312-3f16-4eea-a1df-0821095dac70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 a88a451b-011f-4015-bc00-9abeaf30fc33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 5e514239-1844-495a-8f81-1877dc810473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 891ca0e0-2a28-4024-86dc-c29eb9dc70bc)");

unit.assert_eq16(16'h0467, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #381 c37b6fca-ca92-4299-9978-4aa54e6a4b3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 ef9797e0-a6ef-4e63-b3aa-440078e0657d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 a974738e-b7a3-4490-90eb-cb32153c08d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 429f28b7-9f34-410d-a05f-eb8565ed1d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 3f64c621-c1f9-49dc-a2ad-b293f495c51d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 4f86f704-605e-4c45-a74f-415b8d5ba289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 fdcea224-6b86-407e-994e-da79c19f1d2c)");

unit.assert_eq16(16'h047D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #382 fd54a2b1-04f8-4b3f-a531-b5563ad8a4fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 f9cb9a4c-8811-4a34-8fa5-9d1b1d6d194a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 94aad48e-7d8a-432c-b741-0e56c09f719b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 88422d99-9790-4ed9-88a3-9de4ee0f01ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 e0c59f8c-367a-4c0b-81ac-f22dda330387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 7eafc1f4-25e2-4d8b-8d01-f11638b2df0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 7ab3c2fb-3162-4924-a921-84e624d4875b)");

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #383 f0916f22-ffca-4b77-86c1-76f398fe6ed6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0480;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 9c271bd0-b808-4e71-86f4-a5a0bc88e74f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 f01c5a8f-c996-4172-92a1-fb6f6710692c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 d55eccfe-9c7b-4f80-b82c-4264904559d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 cfafb8df-163b-4f73-8043-7302660cb07b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 089b4589-07c6-4231-ad15-80012e3c6859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 4c73496d-da06-446d-88ea-6ae4a989f8b6)");

unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #384 b5e4b97e-e1f8-4679-abbd-1da997f00077)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0483;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 a92255a7-d5ae-4f0e-a073-8797e47421bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 e6258978-ff6f-4b22-8108-d5e411da5691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 23b1609e-a98d-4b6f-8caa-20cf848f739a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 0382c778-d359-446c-baab-9f07e0001ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 29820693-cc69-40a5-a35c-c50208d3d1e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 7e05db97-7978-48b9-891d-2f348b669a4a)");

unit.assert_eq16(16'h0486, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #385 6ac33629-50de-4b27-a69a-c3db60ecdf0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0486;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 cea25513-48f0-46ea-8921-c80709f8089e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 74e634fb-5ff3-487a-8dfb-b97cc74c3d73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 301da270-cee2-41b0-ac5b-dd468463caba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 f9caf25d-9f84-48e0-afe2-717f27b1bc0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 5f7aa242-c938-4867-b850-ac10c1f1d001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 e645ecaa-7aa0-4205-bc72-4b9b58e217a4)");

unit.assert_eq16(16'h0B3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #386 dad0d0b8-b8c1-4d43-a87a-fbd401c26302)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0489;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 b40cda9f-37ca-47a1-b2fd-91089968be93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 ed6d4c0c-8954-4a29-999d-f471e35631e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 8cf949e4-1e7f-4f00-b911-c78a76f39898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 8c8a6939-2cc1-480d-a90e-818922fedb71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 bde8f257-01bc-4d73-9c06-d7ec10eaf0c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 ef34e84d-73a6-4b87-b58e-92c0bd09df2a)");

unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #387 e96f901b-ac24-45c5-93e6-be8bd3f80fdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 b6f82a29-1761-4420-98a1-c1edfca0df9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 22c8741d-c106-4e9d-b414-41d95c3ae37c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 478c1a52-7ed0-4e80-87cc-6749ebb9b07c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 d08b2898-9fba-44e1-9355-11973a6f9268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 836c2d62-3af7-4afa-921e-40a086e6dd96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 5f5e56fa-bcb3-48b4-8263-3bef44529a7d)");

unit.assert_eq16(16'h048F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #388 80a2c7bf-b60a-4f73-baa9-524baab7b6e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 2e1233ee-610e-49a2-a9a3-587cf7ce3569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 e8fa331b-7f67-44d1-b6be-5b62687149d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 33b89bcc-cc4c-4437-8130-d2dc223a1e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 a5ef2291-f922-4493-a8b6-af114438e1ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 12ab0169-9615-4414-a9fb-bc3a4ee31757)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 610c1883-9dab-4cef-bca6-5aa32a81f373)");

unit.assert_eq16(16'h0492, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #389 106174be-b1f2-48e7-a2a2-368aaab1172f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0492;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 dd6516d2-c7b0-4c4f-8279-0a7c438e82bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 abc20a02-6809-42d9-b2a5-82482626b51b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 e1788f80-4b15-4394-a11b-35be9a522dd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 84c2a5f9-f15b-4e47-9183-a35a9ffb3807)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 fea0c917-b30c-42c5-aa77-d493f938cdcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 31dc6344-acbc-44c6-af85-57d199eb0988)");

unit.assert_eq16(16'h0888, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #390 8e80fc7f-d2cd-4280-9368-18d2ea0bc485)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0495;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 6d89aadb-101b-4796-be7a-6112bf5d300f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 a09131c1-88c7-497c-b54b-114e189c49a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 f6cdb799-5df9-4f92-9ce6-1e78021ee33e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 76b628fe-d5a1-4e11-ad8d-85799f6b68bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 777ddac4-30cb-48c5-a901-34c3c035d094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 9e0a9ccc-304e-422c-9fba-3c6eca7437dc)");

unit.assert_eq16(16'h0FB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #391 942b0cd6-e85a-478d-829b-5666cb1581da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0498;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 0d1c3540-9eb0-4c47-b685-2914c5a64ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 70efd8c6-104d-4894-abe0-73bb07467552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 b4d1f842-7a3b-4c18-ab6e-2fb91de100c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 2c6fc02b-c1a0-4cd4-8df0-0f0b3823346c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 3866f739-f0ff-4d9c-9d90-db3437681d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 8881ed53-8ab3-41d6-bb1c-ed5c3314e808)");

unit.assert_eq16(16'h049B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #392 25339077-4846-4145-be5f-938c0897c938)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 2fbac56c-deee-4ceb-9b44-f08e37f56a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 5365f9bb-ae33-416e-a157-106d6af937cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 e64fae32-d59e-4299-9194-0fa757f39bdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 b20f6e83-43e2-41d6-9396-b402cf355ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 aefe081f-2c0b-4a15-9ba2-b900091d082b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 1b12ac5b-8cb7-46fd-af43-9c34edb67712)");

unit.assert_eq16(16'h049E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #393 202904ca-c2a5-4c16-9b55-5f66f6ada65b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 8f6c2ecd-e446-48d0-a035-7e4fa6f7de1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 0ec5373e-c7a9-4975-ae26-16aad4a3c813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 75642004-65ba-4172-a72a-5e0c03f97095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 62063c01-86df-4ecc-a826-7348ff411114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 d36dd315-c1dd-49bd-a731-7abbcb210784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 2f319828-603c-48a4-ba07-c0233ce6ab56)");

unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #394 a3233a55-797b-493e-8469-a780dea6cd56)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 f00db9fa-1419-4370-b7de-f94d3280ee21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 9d37cb70-6cff-4f85-b451-dd69e9464f0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 87e92269-53dc-4b5b-830f-fa5543490dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 b9efbad6-816f-4d4b-99fe-e314f9df391f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 050ab3cf-d5a8-4402-a65c-2b42e950ab98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 c43cd653-b26d-43a9-a653-fe303fd8d3ac)");

unit.assert_eq16(16'h0E2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #395 d90a008c-8080-4b49-935f-55f4136293f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 7dd0b546-f78b-440d-87bf-2cba33ebdd8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 fd3ea069-2bb8-4991-a451-f5108bbcb879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 afb9aaf1-f9f9-48a3-acb3-d02143fd19bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 ae2721bd-2848-4899-aa21-fd6d5ae29ec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 90c7075c-04ba-4353-bfbd-bf28312711c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 091bcb60-a1b5-4611-bd4b-31b8085b2928)");

unit.assert_eq16(16'h04A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #396 8dff9f30-9fac-43fe-8e75-9ef0e95b4252)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 5492da9e-9817-4208-b057-f50cb1ab3d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 d62d48d0-e6c8-4080-97c4-f2c31b8d92a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 20cd167b-fd36-4509-a378-dfa1d4e4cd36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 ff410f47-0223-46cf-beb1-2805512e8653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 234179c1-f29c-4694-9f45-c53a34c23842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 f3eaeb4a-089f-41be-9201-e2f1136ce8a9)");

unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #397 b6e83a64-e67f-4107-bca5-73e1714db892)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 ae75ae7e-ca52-4240-ab1f-294196c7d6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 0db48f6a-71ba-49b9-897b-be8d0a95a11f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 ad540edb-f468-49ee-8ad8-b622cd2f3b8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 810a65e6-9522-4716-bb54-625c9709958a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 67459f74-f26c-42d8-be2c-8b1cad68de8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 0e354a66-c682-4f99-b054-f518acbcf095)");

unit.assert_eq16(16'h0C9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #398 72c2a34f-e839-47c8-981d-9550cd0d7803)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 7b5a43a3-20e2-41d3-9c20-c7ab623d4abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 6059f99d-03fc-40fc-9341-616647ba9752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 ca803582-ef21-4fdc-98e1-1a5c220c6b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 a61174ef-4bf3-471a-b6b9-43416c6205de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 d7d6c346-4cdc-4906-a3a1-49724dd386cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 1b7557ba-82b5-479d-8828-9979645b9e0c)");

unit.assert_eq16(16'h0D53, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #399 21a3f0e2-85e7-4b46-886b-8fdf1bd3c763)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 1cb24a1c-36a8-408c-b820-141863b6ef38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 dfeefbe8-a0c0-4e32-9631-c7afb56dd936)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 1037bd15-4eaa-4cd0-82dc-63b0d4a96557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 435572a2-f461-4ee6-aa37-3c15b73f9942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 3832b2a2-2246-4de0-bd16-89d3b9f46b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 82ed222c-024e-4d44-b3d3-9844ce972353)");

unit.assert_eq16(16'h04B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #400 ea07d969-65de-4b90-b219-dc038634a7df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 4a8db7dd-365b-4595-8f99-5e3d975e73e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 2192cf4b-3361-46f7-85db-71a4323e7e2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 ff3396f8-9d51-4d1b-8c60-0a0b4f0f1ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 a2c484a7-f8b5-4fae-ba8d-d2f16b4cd7ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 fec6a429-7a63-43ef-8c6b-3fd447da9caa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 4cca360d-9e16-4f40-b00e-b307510c96ca)");

unit.assert_eq16(16'h04B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #401 0fc3ccf2-b3a9-4dc5-b78b-6eeb7eff9de0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 a7fcf5be-a1d9-45e4-864e-5b4f84fa0158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 e211e6b3-14f3-4e11-b182-2da44be2895e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 277e1a2d-eb29-49aa-8965-8fffc8fad3cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 0c3407b6-bbf0-4b48-b3e3-bbda0353d879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 207b0cbb-71a5-4fc7-aa17-f3c40612832f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 db4a9052-3e2d-4ae0-97fe-dc95047c6e50)");

unit.assert_eq16(16'h0FC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #402 d49fa60d-77b3-418b-ae48-e0e9ffd94da4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 e8221cf5-8f30-42ba-92e9-ba9a3c2c663b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 d9c605be-1605-422c-839c-cb62747c6433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 1e090824-4292-40ae-8ea0-eff7b0d2361d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 99500f00-b37f-4867-985d-01697e3ae596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 129b8e87-924f-4cb2-b464-113d63bbde49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 8d7b23a3-8379-4e5a-8287-304b55c06023)");

unit.assert_eq16(16'h08C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #403 0c738917-2d22-4a7d-a6ed-428ce8b4e1b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 04f99f20-ff66-4ae0-88c4-9ee74bba6fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 9985a55c-eadb-42b8-8719-163812c57da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 e65b9492-2aa9-46d3-a5d2-06182c539281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 97072d9e-80b5-4546-aca7-994e878ca859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 84baf457-1e85-4744-b0d6-e4bca56a4ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 a38466ed-3b51-4658-b7b3-3acc55b24e45)");

unit.assert_eq16(16'h04BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #404 fe2539f6-6045-4691-ba62-8f878e213b5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 26156ed0-6394-4d31-89fa-ce03bde1c1dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 83211793-a111-4486-91ac-bc4df763e33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 9854fe85-bd27-4283-a20b-ce03f0631536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 89160022-b380-4f8d-a7a1-88a9dacfb6df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 bc8e476d-0673-41d0-a12e-8a94db0dbf8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 526ad7a1-11c5-4607-adb3-c1d4fa63b28a)");

unit.assert_eq16(16'h04C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #405 7d53c1fa-9155-4f41-be1d-2668a8c44fdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 7ca23879-363e-4730-accc-13a4ede9f82a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 c1dd5e18-2526-43c0-a9eb-567e09055b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 63d49f6c-52e5-4e24-9175-7c05ead1704f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 3821eebd-3a26-40c6-9c2a-50c7bfd6d369)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 977cb28a-b5b2-4766-9dad-c74916bbd880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 419c1f89-22f1-4c0a-85b2-08643971ccd4)");

unit.assert_eq16(16'h0E99, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #406 b2356d9f-70b0-469b-be2a-602bc015375f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 fc793634-6d14-41d3-818f-5088a1eaf360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 1e84ae2e-84c4-43e1-bda7-a4aa6bcf69fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 49465d95-0c50-4844-b58f-0c834d37fc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 e251e602-4c29-4565-a436-d110d5b9ffcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 befdafb8-4766-41c9-ac59-f404aa4eb5a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 beb7ddd3-b546-4fa8-ae13-dac1fac4bb39)");

unit.assert_eq16(16'h0DE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #407 a94c648d-cb93-41d6-be39-08c45ddf64f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 d8c171f8-57b8-4df6-bc87-1900690a46ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 c5c64c49-e225-4f7f-9ac6-b428c88cec0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 085dccbb-0c1d-4827-930a-862d47a29043)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 0ff3d964-20a5-4f78-bb6a-62f11b11d52b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 37fbb324-32d7-48d4-b15a-f8091962d148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 6a8da687-ddc5-4f9e-aa98-f6a368cdc15d)");

unit.assert_eq16(16'h04CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #408 d4b2f70c-4408-4d6b-8dc7-de7eb672e15a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 f1ac6e2e-6642-4bc3-912b-6492b52940c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 acb231e2-53a4-46fb-947e-48f6cf7b33b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 5fa9a71d-3308-47cb-96ae-a9290391ffdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 c59d42d1-2c7b-43c2-bf94-4b030157a50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 f4f484de-7336-4f51-8b25-90eaa6230d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 6bdc2514-6b26-4af7-95c8-4d06dabbb93e)");

unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #409 79263a1f-0306-4f98-a3e3-d96e22ed5062)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 12be3a48-1e65-4016-92b7-0c99f3e47d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 6cbab296-e84b-43b8-ac61-b7839e4018fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 b2ba8516-fafb-45d3-affa-6bf23076bc50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 397c4a90-9384-48d6-8bf9-9d7c68196622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 2ebaeb08-392f-4259-be9e-7e9a8159d32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 0b70111a-10f3-45cb-86c1-8c4cca431720)");

unit.assert_eq16(16'h08D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #410 c36c1f09-9b71-4485-a9e6-405133291ed3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 9fbaea65-cb75-4e88-b4e4-5d11637c4b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 ed9dc0d1-dcee-4284-9073-2f822af79afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 b44c346d-9017-47cc-8a4d-a6edc9da374a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 8d1fd21f-d0a9-435c-88a5-30c28b3c9ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 7fce4de2-8ccc-4c86-97ef-ee38fe337ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 3a37aed3-a35d-4bb2-8bb0-b7c484a551e2)");

unit.assert_eq16(16'h025A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #411 4bd809f7-6d4d-4227-bf9c-e64bf78e5781)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 e4aece6f-6114-48da-9a5d-2eabf684aaae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 39a5be08-7541-4c66-ab3e-b4633d837fe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 1edb3c29-978a-47b0-ba57-31d2a0955668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 a919ded0-7b70-4156-af57-afc39bdd67e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 f75c929c-c633-4d62-9945-43e89ded6cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 1dcbc29b-2433-44b4-be4f-3e6873cfd750)");

unit.assert_eq16(16'h04D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #412 a3b8fc08-e665-45b2-a1ef-93cd8c471b6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 e4df9aef-02be-4299-b2c6-dd2e75ea0dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 82c7be01-672b-4310-86e4-7b7922afd8bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 4f09ea45-0b09-42c0-8ff4-74621497cdcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 a3dea77f-7324-4ccb-ae90-f000a10cb749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 403ca33b-52d6-40a3-a99e-8260ffe9a8fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 ba12f93c-a5cf-408d-a953-36304daa8cc9)");

unit.assert_eq16(16'h04DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #413 99d401d2-6da6-45eb-b03f-73d41bc31959)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 c432c408-5b13-4c28-84c7-07c7ff3bd7ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 5cb0f3ee-301f-4163-87f8-4b546404922a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 257bd750-ea22-479e-99a1-79ff52529a35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 7ed42486-cfbe-4798-81b0-4391dc978343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 155db0d2-1540-4366-9d64-6907eb8a7fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 420391c3-674b-4ba9-99c4-60dc502215d9)");

unit.assert_eq16(16'h07CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #414 bb1beef5-a21b-45a8-82a2-d2e607a603d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 0159e0ef-1470-477d-9c13-6654c9d44883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 26312892-ae89-42bc-8b3e-30ced752618c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 727f4dee-0257-4557-ae8c-4bf4207e1d7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 0094699d-8aa1-458b-8bce-af72a2f0cdc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 201ad965-fc9e-474d-8ace-c4f9cf3f865d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 28a61eb2-a3df-41dd-a561-150c642d9fea)");

unit.assert_eq16(16'h0E58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #415 efc9a454-4868-4d69-9ea9-84730371b837)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 80374a87-36ee-4316-8f6d-146894be94af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 72cc13de-a862-4f72-8e6e-7f3f16ff75be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 840d3c1c-04b0-4309-8263-021bcdc2058e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 0ee16646-314e-4119-8690-bd348d1f11a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 ea36797c-ffd1-46d8-bac5-7c222619b914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 27f67d71-4063-4088-b937-df64e4100062)");

unit.assert_eq16(16'h04E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #416 b20c0bcd-321d-45b7-b1f7-936283407124)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 b2a5f15c-fbfc-4553-935e-b1d900eefd30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 9779f4f5-6126-4517-8fe7-4b92ec45b727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 812185be-17ea-4e36-b1c3-de5bde6796b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 edb03518-026c-41ad-9d38-fee15db1f98c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 875fe6f2-29a7-4025-8d5a-d77b61a2a09c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 0de715a0-0b2d-4e66-9adc-72728f2cc312)");

unit.assert_eq16(16'h04E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #417 54b7b016-54f4-4f88-bae1-5c0c3169f617)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 bf43bfca-dc2f-4c87-b473-a9855d5a900d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 758b2009-2897-488c-9068-7b03fb8f1c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 6b2f404a-8d16-48c0-942d-712be01b1afb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 af3ff8fe-fb30-492c-a280-204862e26ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 5d089af4-981f-4320-b144-4562964d86fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 eabea37e-3b3c-4b57-89c0-e24e58432126)");

unit.assert_eq16(16'h0E76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #418 92aeeb7b-a62b-48fb-b181-efa8b5e53a1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 0b17b41c-bf91-46e1-82a9-750e08f95001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 9fddff19-0b8f-40f3-b78a-925bfd9565c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 e2616db9-b6af-4ebd-b45f-b7e00ba7a973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 7df86307-e24e-45c5-9794-b3fb235c92aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 2febd202-a50e-4a7f-bb0e-4d286ecafc80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 e7705c9b-e3ad-48e7-9512-e91a1c45d77a)");

unit.assert_eq16(16'h0DF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #419 acd6ff68-59bd-49e9-8518-aefcc4e52f19)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 af76c6ba-a59e-4f29-9b0b-2134b9b32084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 56c0271a-cda3-4780-ae1c-4f2397c7a092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 8565ac72-411c-4878-a015-1b9e87efd10a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 840d0400-552d-4a4f-a22f-f3037bc11f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 f3a28c78-2b53-4fb0-a660-52fe826ae495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 b7394002-e975-4d74-8cf3-e4978e9d2080)");

unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #420 180073ea-39c6-446a-9723-1dbc8b754f46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 d2af1f1d-d783-499c-91e1-756130367dfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 94497963-3418-436d-ba62-6627eb5bd726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 9fc1eb58-4cae-4c86-8428-ca14d5f0218c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 c6d1b7f4-789a-4ff6-b7d2-df515067eb8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 89993a03-9752-4294-a52e-f1391d718396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 ac89c80c-350c-4c87-9717-78ebebf67d3d)");

unit.assert_eq16(16'h04F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #421 34575d2f-2535-427a-827b-1914168424db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 ee60c831-fd3f-4c20-9c3a-8250764282be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 2cc98209-c277-4dfe-9d72-a72812450c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 ab130662-3dec-4f5c-a229-006123a07c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 c4d1a955-1c9b-4b02-af3f-c2df3cfa869a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 0bc9a3c1-4f84-45f6-a8a0-344b0782fb28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 19b5d78f-76f8-4a65-b849-b0cce9e66137)");

unit.assert_eq16(16'h0C0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #422 49732c4b-516e-40d3-a898-2d5b4fc0c80f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 e36a843f-27a3-45bd-b814-94c63d4e36c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 9d639a29-571b-46e9-9b5a-9d480dd2a630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 c5fd82e8-8c1f-486f-9b4a-c970ea7cd798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 b4075611-679c-47bb-a718-53935025b456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 1b34658c-ee4e-4d2f-83a7-6d88594c6ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 de038155-e9a6-42ec-a7c7-0bc652a9c220)");

unit.assert_eq16(16'h0FCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #423 7c4a03db-52b9-4c0d-a386-6b778e15d964)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 306877a8-b624-4f57-be42-9b5918784b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 40e55435-67b7-44cb-afde-23d8b46290c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 5c7894cd-df89-4fc2-a5fa-ed2813a12656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 501bb7c8-cebf-4ad0-94de-d81b0f949544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 fb543146-6136-4b27-96e8-1ee71a889c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 52519162-9532-499e-85bf-bbcecf28ded8)");

unit.assert_eq16(16'h04FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #424 4a4b9c6a-63d3-4a2d-825c-2f16f79cca3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 0644c114-80e2-499b-9895-91db65a10155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 1f25788b-41a2-45d4-a700-a9ea363ad15a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 250cc2d5-003f-405b-ad53-9932f26610b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 fef7bf6d-9ef5-4dcc-8993-b5f4b183af14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 8d87a295-47d8-4c77-b30e-f5695f3190f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 58f77933-2113-405b-ae05-e3d0957cae7d)");

unit.assert_eq16(16'h04FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #425 b9055383-2d14-47c5-8f27-1b4dafa0b3b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 24470df6-6660-498b-a884-a24e3c059c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 cb58480e-a19b-40d5-8932-d9398e9bbb66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 bf3b624f-a812-4abf-8b40-835660e63953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 a11300bb-4525-4fc3-b78f-089faef08f06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 a27b0628-10e8-48c8-9ce8-642f7a998d0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 a7eb0a72-c120-4a3d-a898-46646d9f7363)");

unit.assert_eq16(16'h0DA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #426 a30e09ca-cca5-4404-a279-ee620d03e7ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0501;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 85a862ce-43e4-4c76-9a1b-69676f265bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 a756b3de-4743-4555-902c-decf38561a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 26aa07fc-83bd-4967-b0a9-f0832db34791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 c01e5b86-4bf7-426a-99f2-42a788d14ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 316f3596-5381-4832-88fc-6aec88d75c47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 bf3596a4-e7ad-4016-bc66-b6657cf518c2)");

unit.assert_eq16(16'h0A6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #427 c90071b6-9e1f-4330-9265-d9760b64fcb9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0504;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 5cc41e42-43fa-45a3-b81a-23f59f9c96a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 4eaeec14-d10f-456b-8d79-5b5b83f5c92f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 a88e2fc8-0fc2-4dd0-a171-5aa6553319cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 caeeb484-4de5-457f-a815-927165a47b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 6809f87f-3c92-40c2-bc57-3e96c923a961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 fddc3468-05f0-4bd3-8e63-1648fda390ae)");

unit.assert_eq16(16'h0507, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #428 6296f63f-a546-4282-8253-24db5292a7fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0507;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 f455f641-d1a7-43ae-9a8e-49a14effcbcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 81e71e43-4d91-40ff-8870-79627d800325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 32e91b6f-3aba-430a-8014-1f4fa15961f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 15075e21-bf70-46fb-9eee-c559601fa9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 fe25978e-48f7-4f55-87f8-777b18748958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 497a1f3a-cccf-4edc-95d9-2aceef1016dc)");

unit.assert_eq16(16'h050A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #429 0929f450-19a6-4cfc-8529-2069b4221718)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 9efff7aa-33ac-472f-bfce-0ee5701e676d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 490e4249-7b7d-476c-8ef1-9c96c5f28613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 3a580bfc-8544-42c7-8abc-9854426032d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 0a7ec07c-28b9-4993-a1d2-cf3c4b17c2ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 330f8a4c-245b-4bf1-9756-25cbcfdf2ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 ee564b3f-4904-4fb3-846e-74144a5aacb6)");

unit.assert_eq16(16'h06F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #430 fd1e103c-28c9-4f00-864a-43f199d5e654)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 c2703816-a940-491b-a87b-c02c95c87d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 1b307a87-6d1b-4638-a9dc-ac6cdea9ca4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 c765bcb0-6666-4cb4-aec1-1b5dd9d8b492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 c3fba188-b9e9-461b-9d54-31545c395750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 67d71146-6a92-4618-9b8a-fc43ce7af9a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 0eabe682-6e4c-4e63-bada-8e16f960f38f)");

unit.assert_eq16(16'h0585, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #431 01c64892-5cab-4758-880f-023a47bb46d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0510;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 9b44d863-3849-4d7a-b7de-e5661ff0170d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 26efa5eb-d957-4f1f-b25e-a6b6c8ab04c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 8625c0be-21ca-44a6-aeee-db52ec7656d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 2b626183-a2b8-4d40-96c5-02624718cfc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 83ea623d-70c9-4095-bf16-082d76b4628a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 782d225e-131b-4687-ab2c-6d751efb3b9b)");

unit.assert_eq16(16'h0513, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #432 a64633af-51f6-4035-bba9-3681c1ca19c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0513;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 b36b1e4f-e73f-433a-88e0-a556afeb9044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 c28337a6-3ab9-4191-ada4-71c43223d9e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 153975b7-806e-4a49-9a79-336281840f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 43388980-da01-4e93-a258-92d5ae37de24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 49aa92c0-c4fd-43b1-97fe-aa4e3844cf76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 e5448990-164a-47a3-b0d6-01315c8b648a)");

unit.assert_eq16(16'h0516, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #433 0ee38ccd-963b-4058-af93-29384b049501)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0516;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 5dc01274-8915-4720-8249-5e695c043380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 46a5f6dd-2485-4f37-aea9-5f1c18008ba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 85b45159-6a55-46fc-995e-fd5e3f0a4f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 de4345ee-7e64-488a-bed3-51483643e27b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 1be2f24e-6681-4ead-a7c7-942c804889bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 14f961ef-ea7e-4780-8ff6-b17462a8a2dd)");

unit.assert_eq16(16'h0CB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #434 0ac1f1cf-698e-4f00-95dd-d9822018716e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0519;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 c2246e42-fd9e-4e62-87f6-5f984a601d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 705c29f4-dd44-4f40-90e2-cdc90483013d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 b035d4f0-2ce3-4362-9b5f-d3aae016c02a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 88b85907-04a9-4227-ab4f-8d47a640c678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 71ebaa50-b649-456f-91c6-4e9ccaef64a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 1b420492-7de0-476c-a80d-322c0959945b)");

unit.assert_eq16(16'h07A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #435 4c13390d-4772-4ec6-9f1e-4d457706d507)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 dbc5146f-14ea-4580-b19b-7697a1571f59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 639cb2d4-8f6b-4d5d-828d-a9fb61a1350b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 f309c588-8ae1-45e4-9629-eae09e5a51aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 51a97d42-0222-4937-803b-5e93e37d21e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 033ad8ce-9e1a-46a9-933a-89b88e069baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 d430ff8a-fd25-4f53-beb5-6caa8d308c59)");

unit.assert_eq16(16'h051F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #436 804f7357-5187-4179-9b32-6ff01e4bde47)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 789b91eb-57a3-4c22-8e68-9a45a86e25e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 1526a3a4-aa8b-475d-bf58-a20f7e09cb8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 d40af327-5f48-4360-9ea9-247f0aeed3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 3a713200-2513-408d-ab2a-d38920074dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 962dcbd9-17cb-4421-b9bb-92107bc007fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 cd8dec4e-dff4-4947-968f-96c3bfb576e7)");

unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #437 0dc9e41e-a23c-44dc-ac50-66afeee0b78d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0522;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 ac660222-7ac9-4cad-b077-31113cb8e79d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 9042a7f1-82d6-4360-a3e0-70f22087c88a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 50d5878d-4f55-4fb8-be07-c8d75705caab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 b8f6685a-eee6-45d1-a62d-158806bbc4d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 d4d636ee-2310-40ec-99f0-ae11e77f3955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 e9ca37e3-0760-4528-9a42-a925d3ce86ca)");

unit.assert_eq16(16'h09AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #438 16a66fb8-ccb2-4660-817e-a5f07644ac2d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0525;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 9077b57f-77c3-41c8-b08b-9fa659d637d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 c12d36cf-b560-45f5-9b9a-428487814213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 413ddab7-3d92-4e45-83dd-36e5e188ed1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 5d654a16-9106-46e5-b32e-f84a134685c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 e858aab5-bfdd-48c8-8ced-0de8b53f7281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 2e4f9eec-e4f4-4cc5-842d-45ba04f58102)");

unit.assert_eq16(16'h0CE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #439 0ec063f7-592e-42b4-9108-5767d81b963d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0528;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 7a3ff5d3-c28b-4448-83d0-2d0e8328591d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 8f207b6e-1564-4373-af4d-15266e88aa1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 be1f9109-4f08-40bf-9bb0-c48a831efd50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 59986a8d-9382-47c4-8afd-915118d9aaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 cdef9215-7fff-4755-abec-73b2c2b87dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 d872105e-dd83-4ef7-bf47-1fb61b31779e)");

unit.assert_eq16(16'h052B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #440 c1e5a38b-1d34-4f49-8fc9-523a17c66417)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 1aaee84f-9545-47a6-b4a4-c80ba28f2700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 76d3075a-7cb0-4e49-aebf-e056f4c95e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 4fd6d781-ce15-4f75-8086-3334d4d43bce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 7716c778-c084-491d-9b8c-3ff45987e007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 ddc53507-f703-4c8a-bd86-c5cf813efda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 5028ca83-67b9-465a-9892-f3bb2d24f055)");

unit.assert_eq16(16'h052E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #441 6d4a5222-8661-461c-a77d-753698a50d2c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 b2171bf6-af3c-4814-8728-5f1adaff4878)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 96941856-4f7f-47eb-9f28-afd3f5149b8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 a2f27f7d-872c-44d9-95f4-f8ff95681611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 965ac92b-9883-4e22-a2d6-f6fce3aa2b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 622fef04-87db-4a71-b351-dad0578b734f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 03b5cddf-46a2-4591-b4cd-5ff83def83e5)");

unit.assert_eq16(16'h001B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #442 884619c2-da53-42b7-99b9-542c433ab758)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0531;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 0c3c820d-d98f-46d8-8656-21d3d0dffbc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 44368a5d-e045-431a-ada8-3fa007ca62a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 1b009ec5-9b47-4ec5-9f37-826e616952cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 381d385e-8a8c-48bb-a1cf-efc2ad1beaff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 41671c60-4e7d-4e1c-9819-fd21e05c515a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 bd7b7577-0fcd-45a1-9d3c-30f0fb04bf4a)");

unit.assert_eq16(16'h0018, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #443 6697ac1b-8db9-463e-b24f-46266a23af37)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0534;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 6def9c44-993e-444e-ba2d-6e151c3dd72b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 8545acf0-8afe-41d3-91e9-71de9e388607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 18f3d56a-24d7-4ea2-aede-64504061db6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 eddd0e4f-cd4f-4c55-b42c-e5a8af949706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 8f2eac37-67ea-4411-ba9e-ee1aaf96ba9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 5c9cd7ef-15bb-42e7-b2f2-78c3c7ccc3be)");

unit.assert_eq16(16'h0537, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #444 f41584c8-50ab-426a-890b-a7974351d600)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0537;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 828ed61c-3f6d-481c-9ddf-4af314c3b8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 aee94428-9e50-4049-9185-efbd0c3b8082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 7a2f4c3f-3fb4-4c73-8261-4dddbe31e68f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 6a242a6b-e656-4035-97e0-a41c5fc53ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 effc610b-9830-433c-9bca-d9eabb3897fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 9a4729b6-7f03-46ce-b24d-50664ecd8bdb)");

unit.assert_eq16(16'h053A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #445 fd22caa9-88c7-4db7-8ab3-d86c05e49d35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 2c065761-f161-4960-9a1f-0d7e6309be86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 9ca91342-6be9-4c37-b30d-91172c42ae91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 3bd2d0ef-0abe-40b9-afbb-37a4e80ca643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 064cfd5d-c405-4835-bf89-07e884720085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 202e3a9b-b4c0-4486-8a63-e816fc8e40fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 603a579d-6efa-43ac-b789-81de6a710b1d)");

unit.assert_eq16(16'h00D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #446 08609ba4-7b93-40d9-9f96-a8e987e2e4d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 eb8461ff-006a-40c0-9de4-48677aa861e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 864001ee-dfb5-43c3-b536-6e419cfa35e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 b7202449-7a9c-4d67-ae80-2e085ca182ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 7f29493c-8a3a-46f8-aff0-13c26ea5a191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 68d89635-24f7-46cb-82ad-72266d8efbb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 7914df31-b491-45b0-98c2-e6b2d2e83472)");

unit.assert_eq16(16'h07A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #447 6ff7f3c5-d50d-49f4-b95c-2651059679a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0540;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 e38be1f4-b881-4390-b6fb-16818ad5bd4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 437156c5-7ede-4628-b317-6337162370e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 0beb4ce6-b550-4438-836e-3a0c02c419f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 49ef4920-4e27-46fb-96fe-f5870ffd0c5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 63dc377d-1081-4f3f-ab56-4da307acac38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 dbc90d50-ce5b-4b29-94e2-53291bc154d2)");

unit.assert_eq16(16'h0543, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #448 e1f5a808-c4d4-4ce3-8c88-4205b6c97765)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0543;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 b002825e-327d-42b4-a573-70caf5db5773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 1a8b80a1-7a49-4c8c-beb3-e7c5a7b2b3fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 f766fab8-8503-4456-9330-51ad4742f151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 126665c5-b389-4844-81c0-4382b3d4ef7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 55f42a40-01e6-4aed-9b4a-dad5458ab963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 edc25e93-53f6-4c50-81b2-e2ec8f25e65c)");

unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #449 e0b456ab-6c89-4d72-b38c-026712d45342)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0546;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 8a5745cf-89f7-4536-bf21-b23eb3da05e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 1a4f75c3-35e0-4d6d-9e62-518e7525ae96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 4dee6de4-c13e-48fd-a747-71de5b6358b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 947b2b20-8f45-4943-9cdd-f0483d7b2daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 3f68e772-8889-4e48-bd5b-06376c62ca63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 4585e9e4-cad0-4f51-93d3-d4ee38f159d8)");

unit.assert_eq16(16'h0C60, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #450 b23beb97-b1d7-4af2-9fd0-eb4aad97fd5e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0549;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 e21a77ac-cc87-4b6e-b2ec-398b1d85adfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 6a73dd39-3be6-4d3d-95be-b6bfa7c2164c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 d5ec26a3-f03b-4cbc-b75e-bf04b8df5c04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 547ff370-b56d-4bbe-adce-2f60cd167b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 39d80ec7-6fde-45f7-b6f9-3206405eb149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 49d077de-491f-4042-8915-2a8710feea8c)");

unit.assert_eq16(16'h0CDD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #451 bb9d10c4-cb59-4405-99d7-0dca30d59416)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 b3dbabb9-6935-4289-9bcb-d42d6d507283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 7351a7b8-dea1-414d-8b85-4070a673b4c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 6cdfc2ae-8827-4915-b1a1-c56c235e059d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 b94a9150-fefa-4a5a-b675-843275ba5b6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 f847663d-1e80-41c1-92b9-0ba7b695d6b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 92b6cca9-5be3-4673-91ca-bdb3a01e7f1a)");

unit.assert_eq16(16'h054F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #452 63622d1c-e42a-47de-b8d4-38f0b9b090ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 bdfc083c-6e62-4029-bd06-46bf28943c9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 76ee95b3-6835-4fc9-b7f3-881d9a07fe32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 4215ada6-85d7-4cda-a0f8-f0c5c9b26c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 eb1b6713-0f6f-4b06-a579-960ecb610d51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 f4f377c3-f853-4de5-8b71-b298b714603d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 c828c5a2-799e-452e-b8e4-b34be8f136d1)");

unit.assert_eq16(16'h0552, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #453 6d394e11-aeea-4580-a4c6-605a18fa670f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0552;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 73e04727-e8ce-4c8f-a135-1074dd28d51c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 bc119c7b-3fb2-47fa-be9c-f497e8455b88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 c37905c1-1991-4f20-9702-791b44fd41d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 e25662db-e52d-412d-af34-1570ba256272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 4a053a10-2845-4edb-8f51-48add4d8de6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 b634aad2-1967-4f67-b347-db7bc0490943)");

unit.assert_eq16(16'h06AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #454 ea38c4e2-480f-4a6e-a415-918188842f8f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0555;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 2d303959-fcd3-49ba-8a3c-8e33032fddf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 e353e77e-a465-47b7-a581-6ec729111dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 1fc93149-2136-4a94-aed7-0fb68f1bcae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 a6a0acd5-90d7-4dff-ab24-76c74ab82ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 29ed1361-a60a-43fc-bd78-c0e1e372e10e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 67547f44-4ac5-4d64-b661-dd1f10ac9b66)");

unit.assert_eq16(16'h0951, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #455 cffb746f-ede3-4808-ada2-adb10066321b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0558;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 93b92a6e-1ff4-4ab5-ab47-51087c5843c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 977e0ea9-ea7f-41be-9b8c-b85fee837c55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 ac5508df-a792-4a04-bb0a-97efce53c8d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 7ec0948b-62a0-4cfe-98df-56238f2a4bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 30696868-930d-4d34-875e-50262d8d4ed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 9daf1cf4-c001-4216-a221-282367f1f4c7)");

unit.assert_eq16(16'h055B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #456 79dadaa8-ebcf-4ea3-8e98-dca2fc96c1ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 46696d8b-f927-402f-b000-3d4c852694bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 09236e0b-1573-4ef4-a745-7a615354a71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 360c5e1c-4e63-48cf-a38e-af5c9f9b347a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 f20d8188-83f7-4fe0-8068-886ae2fb9872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 f3948b00-1772-4aaf-884d-d78efc13754c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 a39addba-7f56-47f6-ad39-09ddbac47b4c)");

unit.assert_eq16(16'h055E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #457 e2d30290-54ae-4ab9-8a3e-89d717e6b273)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 b6b75138-61a4-41b1-b798-23b4162648eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 7dfacd0c-3ad7-44ea-959a-c307917cc7bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 dc7604fe-34ca-436a-a6c4-27dacf2f5355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 62a27f37-1fba-45e3-9143-4abdd03296f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 cce59ffe-e9b6-4d38-830d-1365a7693c40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 0e11067c-8639-4ec8-a6a2-97c6a70a7c92)");

unit.assert_eq16(16'h0CB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #458 e4f593a7-7fb1-4d6f-b1b5-c36a800a4f99)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0561;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 41bcc7cb-b0cd-46b6-8a53-b90a65defec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 c935b65f-37b3-404d-9507-60a42d5c1a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 dfbbe4a4-a7ac-4cd0-879d-bfb8c557f9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 a8fa7286-9473-485c-bba5-24ff3389c84c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 7e962397-e1b6-43c2-bb2a-afb16f35f0a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 c6019c0c-31f8-4753-a600-848b661fbdf6)");

unit.assert_eq16(16'h014B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #459 35b979cc-00ec-40d1-b31b-320533d09e5d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0564;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 7381cfae-746a-4356-8951-8e8a872262b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 e35baf5c-8ce4-4530-8f92-ada043ca716b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 73fa2a1b-a51d-4ab3-9d19-39b7ebedfb36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 444fb5f7-702a-4cf8-80be-b3ed95f5cb41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 0a38ac4f-812a-42fd-841c-6250dfa9e28f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 647fc7a2-10cc-435b-8455-d082af152465)");

unit.assert_eq16(16'h0567, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #460 ccde4756-bda7-462e-8f73-8d6b365c5f98)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0567;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 341274a3-d625-47ca-bb6f-5886cefef763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 fc4a21dd-d7a4-4c74-bc73-8b849a978c06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 6b9dada9-32f7-4192-8fb8-300e33d487a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 4ec0cf94-d14e-4d78-b72a-2307e38a5570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 1491399c-71dd-4775-acc2-9e730d3e399c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 dd70225a-efe2-4309-a6ed-4c58e9b50f95)");

unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #461 665f3bb2-b1e3-4e36-bf23-16c2f496161a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 bc0efcdc-74c3-4231-833a-d9ac86188602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 e03e4856-d966-41c4-92fe-acb96a48110f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 6df37093-637b-4aec-beb6-089f48e3424e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 37eb1150-4020-4fee-94a8-1c24710a836f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 0176db01-f94f-44e1-b305-b4efce5928c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 3965943a-bd99-4aad-a98c-286e6dbbc120)");

unit.assert_eq16(16'h0B4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #462 d3ff96bb-baa4-4ad9-bfec-c83c55c6f0fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 65704c67-edfa-4660-b98d-9216108c9e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 e371ccea-0fb4-41b9-a30a-1c5c8cbcfdc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 81df0d80-b36c-495d-b4a2-4a1da26a8f6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 928f4b4d-b42f-41e0-a7ae-58174eec64b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 2df27037-2ae9-4925-898f-c428c6e889a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 d5c0add3-304c-405f-a432-8f79fd1ab032)");

unit.assert_eq16(16'h0B04, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #463 c6ede476-6b55-499f-8d91-bf2c6236bb34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0570;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 ee97de39-3467-4527-8a4c-230b13168286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 9f21cb70-2987-41c4-a4f8-cd41c072a5ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 83bba764-f671-48e2-a196-dd7e625e5738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 cc9a79b3-a734-43d3-80d4-81ce3a23cb95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 e2cac643-d602-4973-bc90-b39f3a728509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 b44fe0b3-3ab7-460c-afb7-8f6a07cac50c)");

unit.assert_eq16(16'h0573, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #464 4138d8c7-96c4-4cc0-8035-831c50dbf030)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0573;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 a1d0edb6-a337-465c-b627-231ecea6d160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 315f4073-c2b1-4ae9-a551-4c7e3142df46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 b5ce3206-e0dc-4ab1-9611-2f600bfca674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 f737fbb6-b17c-4816-af39-70051d1ab1dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 54d09130-e348-4f85-b1df-87cb4e6f9577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 3a400479-e46a-4bda-a20e-eb24d2b83f4d)");

unit.assert_eq16(16'h0576, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #465 37110df5-5770-42dc-98f5-1e518162b84f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0576;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 5e489c88-afb2-4034-860b-00d787714318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 edf569eb-628d-4f72-878b-8d044edbea81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 cd29bca3-961d-4a4c-98d3-d167c22b9a72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 192acf38-f971-4ca7-be13-d0407781c470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 6d6e5b19-c291-4e15-87c2-1a1d861c6ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 d5446559-b272-48ef-a6c1-9f050bed1fc6)");

unit.assert_eq16(16'h074C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #466 5b1b04c1-3102-4960-b9a9-80bf01a40cae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0579;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 ef2bff14-ac96-4d27-bf54-6cf6708b0647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 57febf1f-7fc9-4b35-82f0-e4805046b7bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 0942661f-8171-4f64-af19-0f67456adc63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 123daf0f-7fdb-4c2a-b5f2-c13f6463a6ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 d038ebad-1f28-4631-a800-5e1a979ae5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 7525e835-c785-42a9-85d5-3837f7b66c90)");

unit.assert_eq16(16'h0020, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #467 c8c3bba7-fcfa-4c29-837a-249386835032)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 847d5ab5-56c1-485c-9b58-689ee6bfe772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 f26ba7d9-83ce-46fd-ad5f-0898416c97be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 d7b11e23-f6e6-4462-8199-cdae23c2c12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 dc55fa1d-55b3-4a65-bc56-ffe35a858c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 f4f285aa-6a35-4cd8-9d97-bf2a3878b142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 c61c22a3-b004-4366-b100-106f3bd9b7f6)");

unit.assert_eq16(16'h057F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #468 99ae3053-af93-40e6-aa76-d47304187e4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 ea92f88b-e930-402a-b75c-bf9040b54d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 502c1044-ac50-4ebd-8d5b-331d72a005ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 76fd3a0f-e0b6-4f04-adff-7ea4348d9dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 5213ea25-0561-4a9d-a49c-02738e14f1e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 de6e1b31-f131-4806-a59f-e14e75c5fe3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 d4a92273-adfb-45ee-893a-f7c66245457d)");

unit.assert_eq16(16'h0582, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #469 425a4dd1-ef67-40ac-a800-bd762445e32d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0582;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 61637019-4597-488c-8de5-82d3f623f0af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 1e3b5900-147e-4eb2-8c05-ac413049feae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 67c6e0a5-709c-4b5f-852b-647a0119a06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 56ae5df2-59e8-46d5-adf0-57f5dbaf3dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 8ea63df0-c3aa-4f1b-86f9-8973bd599f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 3bced791-422e-4316-a34c-c123d1e30896)");

unit.assert_eq16(16'h0A2A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #470 b42fc2ce-e6d7-42bf-9c67-66114d39dded)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0585;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 41a9c2e5-7acf-44f1-b6c5-f6419190d2e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 557243aa-a34d-46ad-9426-83cb3fe30d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 6b101faa-5b79-4e08-9b8c-d6289d9c23d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 5d6673f1-3c78-44e2-80e1-76243b489ec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 651c1bde-6321-4f2a-8d82-b93b84efc133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 863c333a-7d27-4535-8a6e-96e07d64a8b1)");

unit.assert_eq16(16'h0682, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #471 0b3a4a88-2b31-46a5-9106-969ab09e6ab6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0588;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 61334db0-23a0-4ea2-af00-de6f6199c8f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 27bbbcaa-4ea5-42ad-ae21-a566069f4961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 2f04d5fb-c750-48b7-b843-90a8082dc408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 11a635f5-f12a-4a52-bcf2-8cfaf831588c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 8094c41c-926b-418a-8f09-b95e5efdb2d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 fc432072-b05d-415d-8b32-3e12b2907410)");

unit.assert_eq16(16'h058B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #472 aa398a0d-ec4e-4eae-9e55-74f77426aa34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 583d794e-143e-494a-a8f0-b7f49afc6228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 7ce326a1-41b5-4f1d-89b6-b851aa370f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 a7bbe9ba-42a0-4aec-8148-678731682b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 8c3b4609-5b3d-4769-aa59-83080a6cd174)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 dcce8ad9-e8f3-4d65-bcd4-25c85ef5d6d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 cb65d6ba-88d1-4fbe-a0d3-34b14da2c8eb)");

unit.assert_eq16(16'h058E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #473 a7c18ce4-33ef-47a8-95d8-be96ba4fd3f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 59758898-492d-4056-81ab-c323f58eb223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 7bfe587e-35f4-404e-ad59-3cfd05885863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 693269f2-f0e6-418f-aed7-d01d1c6f83e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 5eddd160-858e-4af6-b919-027ee5d62a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 799c7254-eb05-49ed-9845-a1e81e63bc91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 a4e07eea-179f-4b8c-9e3a-f3f8a902ec02)");

unit.assert_eq16(16'h0E71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #474 257e8699-52de-4d7b-84fb-dd93337d8772)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0591;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 5a0d64d0-bda5-4fef-9249-35c857016376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 abf4fd22-2657-49f7-8681-196e1d4db5a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 5f260908-16c1-47e7-9a0b-79a26907e284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 9562bcf9-81f9-4e49-bcc2-278fc93a9c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 38d1eded-b2be-4429-842e-dd31aea05415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 86ee91e7-5c17-4d17-bca3-91bb67df10b1)");

unit.assert_eq16(16'h0706, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #475 ebccdfac-2e2c-4245-bee3-24bb852415c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0594;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 d1c0c8b1-d53b-40da-bf88-91bc72945466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 8d07f5a7-d077-4255-8a88-970098bae371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 229f17b4-493d-4c35-a07c-2c89f797ddf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 b97f8b8d-09bf-457c-8c4a-da7e9f4558c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 62bea306-41fa-41dd-92d4-86624a0a637c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 5f859a76-534c-45ca-b95e-2ba32b2aa25c)");

unit.assert_eq16(16'h0597, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #476 4bc28329-af00-42c9-a97c-af926a4e3c83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0597;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 801dbaee-dcf7-4267-8dad-cc3901c03719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 07e8816b-3437-4f9c-98cc-05009da5cc5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 9b4399d4-a18e-49be-9c78-2ebd61881094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 0c99fe36-fc06-431f-88f2-cff3b53ca1b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 14d98d22-bae3-4ddd-8559-cf1372563c68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 0f8b1819-5dcf-42bd-ab60-512392bd6e9f)");

unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #477 619e8c23-d637-4594-91cf-32443e5e9f37)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 02ab44e5-92ca-4b1e-871e-3cc67a1c28b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 d658edee-ba48-4c0b-8a3d-8c3849b9167a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 52a26595-ceaa-4174-ad56-1b3a7afc6917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 96069041-65eb-4b55-b352-9724f659cdd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 9e3fff2a-6f33-44c1-b232-6320febfe663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 6ce12ff9-479b-43ed-be55-1acad3cdd03e)");

unit.assert_eq16(16'h01D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #478 409b29ab-8792-452d-a0ea-7d743a5212af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 d6656a94-0f03-4f52-a8d2-7d5454f27f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 9025943b-c699-402d-87cd-fb9762c44c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 a4cddfe2-b07c-49d7-80a6-2a7fcbe73f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 4dcdffde-4aeb-44b6-b7cd-ea57ba2aceaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 2c45890d-1243-474a-9508-c56d5e92d934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 7a3e127d-524c-41e2-aba2-cb5d37db0fd3)");

unit.assert_eq16(16'h0484, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #479 08c1108a-48f1-49cd-94c2-984fdf5a3dca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 317ddb47-cdb6-4a65-875e-54df3e37cc61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 03ece780-61e3-4225-b342-dfc16b1fc2b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 82f7bdb4-d38a-4af1-86cc-83bb419c78cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 e60603f3-6e56-4d36-a6cc-ad9c17291b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 96304f4a-decb-4c92-ac7e-860b947cee5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 517cbc7e-81b5-4b33-8df8-699cfad23305)");

unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #480 b97bc886-f6f9-404e-8a9f-64cf087061c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 156712d5-3492-46a2-8cdd-f1b6f186cbe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 68a7da7c-cb82-42fc-9c14-6b4aa64085da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 8dd4b992-e16c-41a1-ae99-3d7a11623ea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 46e48c9c-dcbd-46d7-aba4-ae694744cb99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 eb7bb2c8-f5b2-4ee9-8818-5380f1d2e751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 bdf1569e-10f7-4b91-9526-9ec1d53adf9d)");

unit.assert_eq16(16'h05A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #481 557ecfdc-ced3-4d6d-b773-30345e6f647f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 a747399a-d9c1-47b9-8738-26c777a80463)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 0ae5527a-3b42-42fe-b7c9-3d31f3708b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 884c4b10-201d-48f1-abd5-b5961b4d1cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 ba8e2395-b3d5-4279-8721-68d5c7e66ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 948648d1-3e7a-480a-9d21-88c04d0135c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 03f1ca75-c74e-4a87-816b-d786a4acd30d)");

unit.assert_eq16(16'h042E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #482 99bac384-4d16-4878-a308-67336c842099)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 2df56cdd-29da-4a87-a9b9-18277dfec2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 93204b02-aa3b-44fb-9667-0c4e85f004a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 b1265fb4-b732-4c4e-8353-ef4c2020ce00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 af68e861-e732-4cf9-8102-a83bcb842a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 36e05f86-2796-4f59-83ee-313ad8a6c002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 4c86cfa0-f01a-40b7-bc0d-206c984e68d2)");

unit.assert_eq16(16'h07A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #483 d38a0adb-9f20-41dd-bb2b-2dbcc10b6346)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 8342022b-b739-4aa1-b4ab-894619de6a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 616046ae-c896-4e5a-a146-de4faf9b1148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 1f7d957d-4c63-4d6c-b859-88ba6e48964b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 e28d270f-51c6-437d-8d18-0261710ff445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 7c7f5ec9-9100-4620-b8be-30f900e2666c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 9a67e086-1d8d-434e-810c-98de87cd28b3)");

unit.assert_eq16(16'h05AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #484 19d50534-1a38-4199-b84c-c14717602395)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 e27c26db-9b0e-4661-82fd-7c698333483a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 abfdd0a5-fbef-4ac8-a39d-8da2aa7165d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 1f20b0db-abcc-4c38-bd57-25859ce3472c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 83ecfa58-864b-4bd9-87be-62c8aaf47543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 1ad553d4-5e28-4111-b886-4e693f8c90aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 0427e3c9-7c2e-44a7-9dfa-6bf01c402f76)");

unit.assert_eq16(16'h05B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #485 1b608d11-e58f-4e49-bccc-76f154b318ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 2d80cb0f-4064-45c1-9414-ebd89306c5fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 7ff87aef-af7f-463b-8926-afe6826e0f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 8dd4ff9f-5b41-4720-b7c7-8400cc0583cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 6d6e6211-9639-4399-ac76-14361af51dd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 6b528deb-47d0-4531-b0ae-2e47e0ba3558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 1aae7842-8e1b-4363-9307-2959c5fbf3b0)");

unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #486 c6da1863-3d99-4901-98f1-b273102df091)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 5ea1ce50-96cd-4a46-80d8-9f91511c1a72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 7bb4e2cd-12be-45d6-8c70-a7d23ca96579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 07041ff3-e9cf-45b2-bb64-dba766fb8fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 2d9ea8c1-d603-4b02-bf37-f037684b50ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 646b5434-df17-42ed-8d25-607395b68db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 c474953c-a083-4cfe-b329-9b883414f77a)");

unit.assert_eq16(16'h04F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #487 4e8b7467-1882-4c1e-a204-cc61fb395fc7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 6ba15c9a-7d81-470d-a3e8-1b580ab2a2cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 f1d01200-0227-4a90-ad5f-2e8210c2c06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 729c9796-373b-4bc7-a6e6-e34626a20552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 99db9045-7c8c-46c5-ac77-5794c576a010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 a480f2ac-6876-45f3-8269-a23dc2422768)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 63f1c632-fd7a-4ea4-8fc7-c68bfc4f0619)");

unit.assert_eq16(16'h05BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #488 5f722958-49a2-4e09-9df6-d35c05b3398e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 46c44e74-f825-4a6d-8c24-c60061f5acc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 338e89c9-a303-4502-baa5-40d492f7e507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 d48cbaf9-42ad-4381-8746-8bb0b1989871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 d8a206a6-4fc4-43d2-bbe1-944038123a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 69658dfe-89c4-4d4b-9e85-f95a99518922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 5d43e18b-850e-4f65-8a32-e88bcc9f0aca)");

unit.assert_eq16(16'h05BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #489 7e89a180-dbee-43b2-9a3b-5cfaf4e56121)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 379046a8-626e-4ce6-9c55-abe84435e717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 2077e967-e9dc-49d6-b1e7-522d6f4e5ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 658cd8bb-7e0f-47e3-89f2-48ff27f359c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 63e2db5b-08a3-4860-8d51-c01249d439f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 7426499e-8020-4254-a4b6-974d8ba586a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 59fe5d01-9d80-4f43-943b-fe44db2c3c62)");

unit.assert_eq16(16'h0C7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #490 dd1c6284-1dac-44ec-af45-a8cacc6a730a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 4c8261e1-5d84-4fc6-a13f-1cd0b9bb7830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 42348d52-565f-4788-8838-f24957fd9f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 fe9c06f6-0b36-4815-b948-91435435aec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 a1d0f657-d4a6-47d5-bbc5-c63acf259686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 db764919-001b-4257-8cfd-3a253d5cd398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 db99a451-b805-4582-a713-14cd15267cee)");

unit.assert_eq16(16'h05CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #491 95737c1a-8528-4a1a-a47a-32e63bccd225)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 7ce40761-212e-42ce-b3a2-4d97ab482e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 a4cf0917-99f7-4671-80b8-a0a79558512e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 74c90b51-f25c-4aa6-ad25-3b33a612f669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 e4b259c3-d294-4729-9d1c-7bf77750c09d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 2b5b67df-eb31-4e63-b030-69ee439e5294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 f7b5fb48-1d24-4b90-b559-8ba63acbeec2)");

unit.assert_eq16(16'h05C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #492 047b9f32-d341-45fa-9e31-0dfa54c743f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 9cbcb152-964d-4657-8691-1d9c1bde6eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 056f04b6-239b-41e7-857b-232a7bb6307e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 60d8413c-7b10-455c-bfa4-aba60dd93724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 327f55a2-a77b-4671-bd58-c0fc6a44caa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 639f79c1-d27b-4149-9c8b-26df6e963a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 d875dfc5-797b-42de-9145-a8166aa18cfd)");

unit.assert_eq16(16'h05CA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #493 ffd73d22-5a7c-42f8-ab80-244bc77c1fa1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 e59f76d2-bc46-4477-9019-3eba8304d8a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 229b22a0-0f88-4b91-85c9-ab6a072e9809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 bfe21771-db82-43d7-98fa-f371edfa7dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 f31d277a-970d-4db8-914a-1b0849728041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 a1cfacde-a6be-4d90-a69d-3f07b905be6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 2b6f8392-1e3d-47d1-8b89-ecacaeca3b8d)");

unit.assert_eq16(16'h0E1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #494 9f601124-fdb1-4753-91ec-bcee612a078c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 36978227-a80e-45c0-a6b3-5af204d50ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 d17a1d8a-51d3-45ba-a44b-cacc7273212b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 b7fba865-5a17-4008-97b9-6ad08fd26e34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 7879c954-48b9-4c05-9c88-e50f2f2b7036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 cf3e39dc-c47c-4ba4-9726-0f8d8a5a8015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 1f4becb4-321f-4d90-ade4-2b5b0559a98e)");

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #495 c421982a-0392-4790-9c57-91b0a79240ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 a1dfbe00-7f81-42b5-9430-f94e4ab8170e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 6a0df939-4390-4165-b45f-5dcaaa7d515a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 512d7fab-4e9a-489d-9762-fe5d84a133a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 e868a3b8-55db-48e5-8be5-a6f40f7ad487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 a83d79bf-94de-410c-8ea1-e1aff62bf4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 d24b95c9-53b7-4a3e-b7cc-5eab9466998b)");

unit.assert_eq16(16'h05D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #496 0de5acda-4bd7-4824-93f6-95cbbcfaa015)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 f03c86d1-f451-4ff7-82f4-fe8efcaa0c1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 86259595-317e-4d26-ac74-917bf68a187f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 18068bda-257a-42e9-8a44-96bd32848f20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 08a21baf-c09e-4411-9170-aeaae641e504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 b996074b-e083-4955-bfb0-6a3c44f54187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 7e570791-a661-4cde-96be-ac755e40ddc8)");

unit.assert_eq16(16'h05D6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #497 79f76aeb-6d76-4453-b681-0a7cd05a7cd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 8b61b3c4-c42b-4afd-b5fd-67c6140a5e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 6708f839-3439-4a4d-a5d9-8120afaaf022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 4c0ec489-a5b6-4fae-ab2a-e76d1201ffeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 cd5450e6-8b88-4bb7-bdda-4381c60388af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 1f9e87ff-c6bc-4f20-ae7a-f27027b24094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 eed8dd79-7e39-46e1-a9e9-5f5fe7e56e83)");

unit.assert_eq16(16'h0EA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #498 5d3794b5-7c4b-4326-b6b9-89258cac13d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 24a19f76-4d08-4ac7-ad67-2c907dc71c4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 79baff10-458f-4c16-8666-2748f1d5f2da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 1fb8fc12-e4fa-45a3-8ab6-d16ccf3b3a45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 9f109256-731d-455c-a074-8946e5677446)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 43436a8c-2bc7-4c39-ae82-5a2e8fa930cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 934a21d8-aedd-4a2d-89b0-e3334420c903)");

unit.assert_eq16(16'h0B6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #499 78d825a4-def6-496b-a431-cbf3a3c6f10b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 82b28d66-1c27-46cc-826d-63e3a8a067eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 2513a8f1-87f3-4951-accf-aec42ab9d0e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 17088245-e57a-47b8-a002-6f3c29cac55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 a54013d2-ce1a-4ec9-b4ef-b6ed8a403d60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 7536fc44-11a7-4622-ae05-100a4261bcf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 b1541fb8-2d5c-4257-8340-58faf792529c)");

unit.assert_eq16(16'h05DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #500 bc532d7e-e6ac-40e4-9726-58ab7aeb9296)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 65b0616e-c275-4481-9f05-6e63c76b4345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 f621b8af-25c4-4f42-b946-96f8e92a3986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 4714356c-b767-40f9-8284-0d607a2f1e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 114eacd6-e9f1-45cb-b8fa-0d0f55505fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 a25f3e49-913f-44d1-a772-2aeb297afa8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 a80c30af-8fb8-4765-af92-156e01b0b523)");

unit.assert_eq16(16'h05E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #501 9ffd746e-6a6e-4cb1-b57e-97dac26c9223)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 08042963-13c6-408b-bfd0-533874acdece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 7bdc2fed-0d97-47c6-8de1-eb091e2c056b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 fa0bec7a-0ee2-4a69-8239-902340cfa329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 a7029796-bc3d-41b0-be68-3854130a598d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 600788f9-2927-4445-9c92-2edf564fde9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 d2f52e01-fb1e-453b-be5c-c3614ddd044b)");

unit.assert_eq16(16'h0B40, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #502 f7bbd292-528a-4986-85f3-67ca1a208e4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 4aeb5ae1-973b-40b3-89ee-80a471733f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 48b03088-8b71-4da3-8f07-b4b929d4b96e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 ccb0476c-a34c-47b1-bc73-6a33354ca3ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 16a788c5-2ab9-4a2a-85c2-30cc97914b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 cca7e37c-538a-405e-8f54-081855cdc2b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 fc7c3718-0fd5-4967-961f-e97704656cf3)");

unit.assert_eq16(16'h0D7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #503 e05eb219-3856-497e-8e17-b7a2aa21613d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 de3456d8-7f2d-4c98-92df-08d561075791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 792f6fb7-75e4-4a98-b254-c0c7fc534266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 e8f225f0-c535-4f5d-bb9e-537632ca6bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 246496b6-982f-44eb-b9fa-8ba3cd3e0f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 4d3ea5dd-54b3-4ce0-b37c-e1ed9b8d5752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 e0d22ed3-b5cf-4e2b-b645-ba0918cb5fbd)");

unit.assert_eq16(16'h05EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #504 41337d5e-5f47-4b88-9b38-fba08265d21c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 d8647d7f-fddd-4e8a-a64e-db67a39ca8f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 be85d183-ccf4-43e7-8956-c9b8f22bf33b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 3e98478f-b56c-4ffc-b5c5-895ee9303fd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 57fd8553-b393-4764-bdaa-8f8abeaa2052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 9583f2e9-aedf-4c28-bd75-5c68cef1ac52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 79be1790-e78d-4159-809c-6da90c91700f)");

unit.assert_eq16(16'h05EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #505 50ef2300-410c-4090-ab39-8ed352da2168)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 4b0c732d-b01c-444e-b6c5-aa61e76dfb03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 1dcb054a-bb49-4e0c-a83c-a1a8b9e42969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 f2bc1e14-0b59-45b8-b521-f99543c65755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 676d206a-5356-416e-b341-219a2065fff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 aa1b5f2b-2264-47dc-b04f-f889cb023d4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 b37db210-88df-4e09-80ad-5330b9ed4632)");

unit.assert_eq16(16'h0651, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #506 6a995bfb-6938-4570-a0c3-98dc71c5c4dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 031dbf63-66e7-4941-a037-817fdcd7758b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 4c27db82-b60c-43d5-a627-96e093669d15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 2f6f00b0-8944-4c94-b09c-c6c14d0536aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 b502c88a-bdfe-4641-ba21-ac4b4ccc7dba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 8f4f8e46-898a-4baf-bbe9-ef785274e544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 b479a38f-006c-40b5-8d83-695f2c4b963d)");

unit.assert_eq16(16'h06F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #507 7ad877e8-42ad-441b-add4-f08cd6ba0211)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 93d67f82-b149-44ad-960b-17b50b0032f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 10786223-042a-4991-b2b6-8f44da1019b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 07381bbb-de9d-4ccb-b7ec-3de1e064e67b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 5b74a6e6-ba29-412a-89c8-4ee81156fc83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 94cc0f9f-b5de-48a4-9d2f-9a0704818bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 8401bbad-2b8a-4fcb-8cd9-a588351489d6)");

unit.assert_eq16(16'h05F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #508 af4de53b-e4ce-473c-aa08-661483e00ee7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 b434e374-e4d0-46a2-84f6-703b0e0c5650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 78cbdb27-f574-4300-b0e7-1bfcd14df19b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 9f07e54d-f367-4e4a-9e6e-a74167e8cda2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 e3584aef-9ef3-44f2-85bc-cac5cb52be42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 ce9caa8a-e6ea-4de1-aed7-f0e0f144ad9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 62eb4feb-41f2-44a8-bd67-a198acbb0c16)");

unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #509 86af5ca4-2e22-4e79-9ff6-cd458c35a56b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 c5b8398b-9b2e-465f-8931-684aec438530)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 999ed56b-c74e-4a83-ab6d-cd9ca9b0c74b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 29821595-5530-4e9f-beca-050a20fc70ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 2bd1bd97-851b-4383-8820-9d2692bd0411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 221e7e10-e887-4256-aab6-9886c5ad04a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 31ce6ced-7fb4-4f1b-a112-7210155e0565)");

unit.assert_eq16(16'h0B63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #510 885f8c18-bffe-4800-a6ff-de531af81329)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 46b09956-3ae0-4d67-b6c3-a13deddb1ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 d4604329-a868-4ab9-a511-c550b16a7cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 ed8d2a3e-e0de-4561-a952-0ee1958f5817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 2f8f702e-3c95-4a82-8df1-49cef160e41c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 40dcbbeb-fa0f-401a-9936-9b901e81d9b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 95fc1cbc-5b44-4011-9ac8-48930949adf1)");

unit.assert_eq16(16'h03B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #511 2832aae2-8ede-41b3-8c4c-17bcfb677ef5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0600;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 9dea7be5-a080-4881-aba9-64d2f01655b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 6b0ff212-1e29-4278-aca8-7a3749e550fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 27824872-809c-4d6f-876d-1da9ccb3161f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 41e4e6ab-a598-4bb6-a854-1873499208ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 99618f28-5ee7-4511-942f-716c50556af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 4fff9eae-ca99-4fc9-af13-305a4dc4a315)");

unit.assert_eq16(16'h09FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #512 7d2bfb2c-ed95-4725-9277-266cc5f6e71c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0603;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 8137f161-b377-49eb-bb18-ab9e30320d98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 d5cb329e-3475-40fe-85bf-989159a63d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 e64f392a-f426-44d1-9d61-9af460ffe70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 f7b7319c-30bf-4d85-b25a-a52d5e6b4a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 e13460d5-b3b1-48a2-a765-02185ab011ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 6fe2dd80-439c-48f5-a753-34e0deecfda8)");

unit.assert_eq16(16'h0EDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #513 4590058b-42a6-41ae-ae57-c0dad8dba7d4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0606;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 8044bd12-e1df-40e8-9c01-514ccfae5300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 2c35bb08-b97e-4f7c-b39d-f5a25c27a3e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 729a9bd4-cb8c-450a-a679-a434938a25c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 f1905714-aabb-4a06-9c79-134054692aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 b85c7f28-0435-49e6-a6b8-793c337a2ca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 8e28ffb9-7993-48f7-9932-256c5f28fe4c)");

unit.assert_eq16(16'h0C2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #514 397fc33e-2e10-43dc-832c-e9c46794d2fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0609;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 a43e173c-f593-418a-81f8-a0e1e88f1f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 1be8ab6d-d5df-4176-8391-6b07e51b78bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 9699d9f2-917c-4780-892e-a198efe6ada7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 e80e2fd2-bf76-4f61-8313-3cbee2a25ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 270d37e0-f0a3-4b36-879c-1c1a5d1c2b53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 ea77f5ed-fa7d-4cb8-ad73-54fe8071d6fd)");

unit.assert_eq16(16'h063B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #515 5930780f-d0fa-4460-9061-60c4b1152773)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 ed0b7c74-a249-4853-8568-5117f081e4e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 434f623a-7c17-4575-85d4-c8ef55e44c9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 02803924-3022-494f-9ea3-4b6b4a5f91c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 6cb8e022-6b78-4199-bee4-4f6bb077a2b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 e10ea8e4-be4f-4424-a50a-e7a32843dfa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 af18c6ad-787e-4762-bb42-1e9f775ee883)");

unit.assert_eq16(16'h0B71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #516 82c9bb05-b5fc-4a09-bd5f-071553b73e2a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 c54de302-614c-41c1-9332-efae22cd5c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 045d1ce3-0fb2-4ec1-ae70-1bfaacdf96e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 03f22616-a32b-4506-bee1-2e1a30939a18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 00a45223-584b-44c7-b7f5-586c0a5e143e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 f8ec1391-2f64-4102-aa3f-f1a99408dad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 ed20971e-a9f4-4885-903b-2f4d0223275a)");

unit.assert_eq16(16'h05E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #517 f005db28-eb1e-4ec0-8c59-f093d4c38d40)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0612;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 36447b38-6ca4-466f-a5c8-cd0749ab84f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 304a6147-e995-44a6-9e4a-6f0d27b2a9e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 259352d8-b358-4d1f-87f0-7b1b6d81cf0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 f7638434-cabf-41c3-982e-d18db83d7e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 18f5a0f8-6427-430b-bfff-95d491f190ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 3a7d5d36-b6f3-4b53-9a2f-3fdd0d3779b8)");

unit.assert_eq16(16'h05B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #518 31d7526d-ef10-4028-b222-dd341419426f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0615;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 fd466c2f-e344-4412-b127-f38c909d8729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 8ca91cce-92a4-4b4d-a197-6a1b8bc5af45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 e458f2b0-88c9-4748-b064-57fdd941d51f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 1a6920e4-fc7a-4fb8-8d3b-6bd712a3963f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 00205e82-15de-4524-9636-8079d05c7107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 a6a3db75-5215-4d6f-bc5e-ab7832f2c2fb)");

unit.assert_eq16(16'h073D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #519 f1146834-a8d8-48f9-8f5e-2cfe35ad0427)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0618;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 c5ce7be9-0ff0-48f4-9b39-d8ce4fd1b128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 5230108e-ad26-40ee-bea3-6684289d7e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 5f2eab45-a89f-4b49-bbbf-94526e130251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 34ba5386-71ad-4260-ab08-b80c47531fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 eee771ea-b302-4e29-b37a-e4cb042872c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 1120a84a-39f1-4b96-8d06-4f122b7eff9c)");

unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #520 6fe815ed-84de-4c7d-8489-0fc956643fc3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 5f92b8eb-4138-4daf-adae-dd0f6387cd84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 5fbd4d17-04e6-4fc9-a89c-1e361550df45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 56280fc3-e154-4bd5-b1c3-c5dbaf036f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 00807590-cf64-49fa-822f-8abf5e5d10e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 234d3e53-08e1-4e5f-9ab8-7a824d2c0de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 1f0ba9a0-9f6a-40ec-9585-b64c04a3a11b)");

unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #521 88d3c377-f920-4bd8-89d0-9db210d1906b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 9ab25dc0-099c-46be-81c5-a10f778eba54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 83a2c722-5a31-4a3e-8464-aff126edea3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 77b14802-b998-4a2d-b095-0676d034b307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 287618b8-d520-454b-90a8-46cf6d6d1b2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 5a874426-73f8-4d81-a52c-3f2be20a924b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 e0448000-817f-4010-997c-3c5c6b9d10fb)");

unit.assert_eq16(16'h0621, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #522 88bf98c9-9f21-4ddf-926b-f38d44cea462)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0621;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 fa9ab495-0d08-46c4-9fb2-f51df07fc449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 571a9730-347f-4770-8331-aafb80531b69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 9129bd37-549a-4ebd-8949-a2f058ea4a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 82958ab5-4299-4f60-ab0c-aaf32e4a8e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 05195f81-7b97-4249-889b-632ea09d3d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 308240a1-95c3-4449-bced-686e87d6a17a)");

unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #523 5e9f3253-6c20-4e8b-94ef-97cb895a559e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0624;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 96b9a93e-b333-466e-ab62-ab9123f9bb80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 5e25c347-2d2c-451b-9861-24bcc50358e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 45f8b6d0-53e3-44d3-835b-f1529790b7a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 e4bf43f1-5f7a-4a14-b95e-25881b7f5f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 6f99ada6-c481-49fb-ab58-cc3ef5f2eafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 a7a39379-d9f0-41ef-9b43-4049107485e3)");

unit.assert_eq16(16'h0627, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #524 72ee695e-d153-4e41-afaa-202c8871d1f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0627;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 a8f6b0ed-0237-4ace-8b90-8888c66bc505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 781515d1-a05f-4211-8baa-7c69fa5383b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 cd5041d1-e28b-4535-b710-bcd280d757b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 fdc10f93-38f7-483e-b7cb-ef5445feda37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 01c5e97e-b67d-4ca7-bc71-3797a6f7618a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 a9a47894-2a5a-4862-b653-eeea9fe9dcc9)");

unit.assert_eq16(16'h062A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #525 10d10dbc-6da5-4aed-9688-92706ee69a63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 4af3147f-dc94-4f1f-9a5f-bbd5c66d1971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 5da2009f-7f73-479d-9847-c831e6e32a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 24498ab5-c3cd-4935-b716-0f080e23b75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 18771d6e-8e8d-4b50-aadb-dbb3dbc31dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 42648500-679d-4363-8587-969a22fba9ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 6b5554b1-1f38-4f7a-804f-6ad3877d3060)");

unit.assert_eq16(16'h062D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #526 59910de8-d8a8-42f4-aa80-315951c9c115)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 7657a051-cd6d-4911-818d-7640b0ae44e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 111ece41-8a26-4e09-a3a7-ed6f6d2e3d1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 642a938f-7d4c-4f6c-9d93-ba7e8c85cdcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 2dceb492-eab0-48b4-a4e6-ce7418eb4507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 9234e47c-89b5-41ee-b48a-6b3e7064a177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 b477125e-f736-4528-b1d7-92439ef0caca)");

unit.assert_eq16(16'h0630, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #527 89d2048a-14cf-4615-9c74-bfbe00a3ecb9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0630;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 15f0e97b-8b28-485f-8e84-80759b13bd4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 64e5e7eb-64b3-439b-837c-c5f496766787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 d2c46477-8d2b-48f8-9e36-9953e9d90878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 68a11197-81ff-46b2-8f7e-b5aa37d1691f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 bfd26eb0-0ebe-4bf1-92ee-0dd4c4ba733b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 58c0e807-cc0b-4176-b5fd-0c19ce2b2bf0)");

unit.assert_eq16(16'h02FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #528 f3d1854d-97bb-4e21-b078-86977105863d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0633;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 68e0b0fb-d1b6-429f-bace-dd6dd1f5c925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 3fd21301-eacb-416b-99a4-aebf5004ce92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 5e17866d-ad91-4532-977d-e5b2f4afde1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 063ce800-d9fc-4bb2-82d0-8a3eebb05756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 ba191332-9a3e-4066-b7a4-b3f3aca8455d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 6416ad13-9d88-4528-95ce-71652352068c)");

unit.assert_eq16(16'h0B45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #529 dbcbc651-f143-404d-90a4-acf1290c0be2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0636;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 d4d183d6-315f-4561-a0b4-40c7c7c2b81a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 ab3df897-ece4-4025-9b06-01287060764a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 5ddcba82-3d94-4d37-b12d-ccbab37143bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 9dd7a900-5753-44be-9442-3805706d9ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 2a4dcc2a-5126-4ec6-8e89-ece04956a6a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 ce214fe7-26c0-48b4-b309-56ef7fa8db77)");

unit.assert_eq16(16'h0423, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #530 ebf643f8-9289-49e8-93d0-7d32ceb4f9c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0639;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 1acf90ec-fc79-4a4a-8da0-4efa4c624c4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 149dd453-0118-4270-8c11-160083cd196e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 fa5b3998-7fbf-48b4-9aba-ec7954fd5689)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 6e55592f-11e3-45bc-8f44-feca09656beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 8aaaf881-2d12-4ade-ba4b-c95c6a60e2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 7c48b7c9-6565-439f-8e2f-20ff4140ba36)");

unit.assert_eq16(16'h0DEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #531 82073d28-2e15-4cc5-bed5-c66cdc013c6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 c097b7df-a550-4f7a-b958-3ac3278f66ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 2917d2bb-81ba-4efd-a2f8-26eb5c196b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 714c3f3e-decb-43c0-a947-442c38b5b914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 a924500a-08d7-47a6-b4eb-b401e21fa658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 0641860e-bdc8-413e-b81f-d35b364046a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 2796c6dd-2a4a-4baf-a605-f8e9699f962d)");

unit.assert_eq16(16'h0A17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #532 31697d32-5946-4fb9-8f6e-7f5147b776dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 6a3c886e-ad87-4ece-aa16-02deb9a0ae3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 78293f59-3839-47a0-83f1-d61193c4eb63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 8b5c5601-a9e5-4bfa-956e-f380b4461c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 8b3561a3-8ea0-41e8-88b6-9adcdef80e29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 b9494064-ff92-4bba-8903-b53ed9477193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 dddbb26c-4ba6-4d7c-bbac-ba529589402f)");

unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #533 3f38d750-02b5-4d66-bce2-e606d6c6d65b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0642;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 876bb8c0-097a-4d57-a61f-28ffb3ccfa37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 bb7dc8a9-8729-42e1-b67d-7a2ceea4f919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 f4f40a8f-3248-4937-a934-1ac43cb5a152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 ba5352d3-7e1e-41f9-99e5-425147db5bdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 57ddbd98-a9ba-49a6-8883-6ddf7d6e6986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 77e74497-0f40-4f31-8388-b94122cf21b9)");

unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #534 90f92276-c840-4776-809a-06c5f475b22a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0645;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 652954b2-699b-42df-86d8-0659e3b6be89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 3b86403a-db58-4262-a9c4-f9684e887697)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 da153e61-9977-4fdf-a4a0-65a72b79e537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 45d64b76-e237-461b-89ce-eff6c3ddaa09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 d56bd169-54aa-499e-b928-29d882972d3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 9f315fe8-075e-47c5-9b09-126ae65c5757)");

unit.assert_eq16(16'h0E36, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #535 62984be3-ce19-49b6-ae73-d14e880f5e8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0648;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 168a83a0-ff65-4f55-9c7c-4336364798f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 1812b38b-1b1f-4992-88e3-585bb87282a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 1380f6ee-ab04-4667-89d4-3a47435fb21d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 f281528e-dc43-4a04-b331-cab24384b4fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 3894a68c-9ac0-4bae-9b1d-1573d291d35b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 c1c3cf30-709f-4bb0-87dd-d5308bb90eb9)");

unit.assert_eq16(16'h064B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #536 79cad7b1-7c2f-446b-b3ca-6e050e5ff808)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 0c6b96bb-e5af-4495-8879-690add2a3919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 7e8297ef-4ef2-4a16-ad53-8ce292948633)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 d4afcf85-bc52-49d2-8fba-0e7dd9336891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 70abd3ae-2e96-4a47-b718-e78b7fed6b41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 64b2c441-a97f-46e5-87f4-830e7298a491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 fe530ddc-8009-40c9-8818-f3853144c4fc)");

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #537 b986436d-4a74-4642-9953-8777f80cab79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 ce410f58-25ca-404b-89cc-182b8960da95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 2e0b74ae-0524-426c-a311-2c99432f5e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 b1234fd4-fffe-48f6-9e31-c0ffbd3e1b84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 dd21b85a-a40a-4200-b846-1428e03d952d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 8ca1a232-e838-4174-bd2e-96ad67f3eb68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 2c6b059d-444a-4279-a31e-b2f2a1301438)");

unit.assert_eq16(16'h0651, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #538 3ffe91cc-e834-4ec8-9d99-bb0388aa7d79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0651;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 221bc0ad-55c7-4cca-a073-93c885c472d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 1b5a6e30-ea38-4248-82b3-6b90bfd12319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 6caf4841-a551-41a0-95ce-03986f04d4b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 835fe5f8-0f88-40c1-8e42-d5dda36570a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 43bd4f4f-4e24-46a1-a9b1-e4f96c385db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 dd6a08e5-924a-4d38-9bc6-458e87eae951)");

unit.assert_eq16(16'h0654, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #539 db2963d3-5e86-4888-8aa3-8911a489ee88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0654;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 cc4f4ca0-9727-4c32-8a87-c8826b9b84a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 4fc095e5-4774-471f-8612-02e568abfcfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 89e19be5-4076-4496-819e-ce69aadab9a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 106daff9-ca2a-442c-a916-3b36771b7bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 7a18efec-4f66-4f17-a26b-291e4150e0ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 19b123ca-a999-41e8-85fe-3fb14a423ca4)");

unit.assert_eq16(16'h0657, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #540 fb1506b0-5656-43c3-bbb2-692daefba37d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0657;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 62376352-4637-47d0-846f-678fb947729d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 9e867756-8270-4a93-baab-57cdbf5d0e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 ef95a5ac-2487-44e5-8f6d-57dd465f6bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 67d2ad9d-86c6-4559-8e05-81f6bcd400cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 699f52b0-447b-48f5-8dfc-de9fa583d364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 de3a7578-ce04-4ac3-a6e4-119c6fb667da)");

unit.assert_eq16(16'h065A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #541 3963aa5e-5dc4-4cac-a2be-df411fb7fa66)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 7ebd1e8a-ac00-4a4e-94c1-98ece4b5bbc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 a604a537-5e2f-4edc-a9c9-e61bf680e1f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 fb47a250-ebda-432e-bcfc-880eceaa2fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 498a14b4-de31-461e-be44-4b0f9767ad85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 b1efd7bf-866a-476a-a61b-2d209b55e5e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 78f65ca1-7a7b-45dd-8168-2603efdbdbe2)");

unit.assert_eq16(16'h065D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #542 96d79677-c847-4233-909a-6b51487416b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 4b5d0bb9-bc45-443d-a52c-470258454dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 839c84ee-9333-416f-a9a1-e5f315166728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 768f9f2a-2355-4de3-a24a-be1b93b244c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 d345ecb9-e208-46b1-99bd-b2a343852dd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 446a4478-93de-439f-b7c2-af1b391f9efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 3e001e47-d4e4-4600-af2f-280f82bf61a5)");

unit.assert_eq16(16'h0660, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #543 eb9dd787-7738-4416-9cc8-8ff5894164bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0660;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 284c7d8f-2f33-4680-82c1-c18cb8bee2ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 338b6af9-f448-489f-b54d-67eb51192a5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 e08e69ee-1cee-4d84-b206-52e51e84c12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 e3d434ae-d3ea-4fa9-9483-dc17f788715f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 258b9144-b1e6-4367-a98b-2ce37605243a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 138862a9-5eaa-417f-901a-0876d39c1b60)");

unit.assert_eq16(16'h0B3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #544 56ec18c5-8f7a-410f-bf5d-2d9b220569bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0663;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 0dc6891a-8de2-425f-b143-c8a75400b589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 1868aae1-61f0-4f27-8f0f-afbf70fb39c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 ffbbe15c-fe66-4536-b4d5-4b1b4116f43e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 32f668d4-b940-44d4-b6a3-4738d1a58be7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 38fe8082-c9e7-4304-9014-e40416e96c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 1f56a2d2-9c38-4a0f-8ec9-c54470282ee3)");

unit.assert_eq16(16'h034F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #545 a881cf6f-7816-40fe-9b3c-0c16559be6d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0666;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 2b495abf-0563-4833-a4ca-1404a6b86f43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 5dceba80-5cb8-49a5-851a-c09834406246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 d290f7fa-b783-4a02-a9ba-2dcc548f6c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 6b52f659-aa46-4602-8571-de83223cc989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 2a4d6680-9f86-4616-a6a7-9a572a4b828f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 3e354ceb-7026-4ba5-9dd8-3a30eb79ffc9)");

unit.assert_eq16(16'h0C2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #546 20e7b97e-d3dc-42a6-90eb-4fccc4fd55d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0669;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 dccf6230-d01d-4828-8153-bcd4813924bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 1e3e2570-6e84-4477-b3c6-79afed49e48f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 81cf930a-0e8b-4525-a054-fe0731516098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 b3e38e88-2957-4326-8a3f-39761ae2d2e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 444b09c4-0028-4cb7-8d3d-2edf72d3242a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 ad0407a4-5f15-4319-905a-75e733e90048)");

unit.assert_eq16(16'h0BFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #547 3b64bb17-8e41-4952-88db-8013ee61173a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 8d21ae91-fc72-4cd3-8967-540bffb2a4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 4f66e28b-1738-42c8-a298-42c6d5f4c725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 a80e7524-7473-4569-b853-cbf0460a232c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 a7670f25-d4ba-446a-a8e5-95123215addb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 37e91494-8203-4f8f-93c7-f886757f9993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 66b07306-3467-4f04-b76f-56587bc98d7a)");

unit.assert_eq16(16'h012D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #548 d60bf5c1-9aa0-4c4e-9e41-601a13f965a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 15dc824d-bdc5-4a3f-a849-919887b91779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 dc7d0630-e87e-4c87-bd43-5f6c14205c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 1cdfe96f-31f2-4fdf-b4ad-4e8ddb734761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 db553cb2-7198-4ea1-8436-8d5869e1fb80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 c7a53b31-3321-4c77-8cc4-6faf5c7a99c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 98f08814-e23c-4d41-99fa-02379b01138a)");

unit.assert_eq16(16'h0E4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #549 7ce5b190-ce36-4f69-851b-4de4c8d33824)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0672;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 295fa342-4f28-4428-8bcc-ff749001c825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 0a6b172e-6d32-4e9f-98ee-d745a70d8d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 bec055e2-fb38-4699-85ee-a60768de313b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 fe057635-55f4-4193-b59e-2376f8b68271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 04dd5d54-81e1-4534-b384-4b92777efaf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 d812af90-777c-45fc-a1e9-19e32d02a893)");

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #550 904bc258-32ce-43f9-9045-77574586076d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0675;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 55ea4389-ad1a-47e6-b74c-2a6fa8ae0315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 9353e573-59a9-402c-9669-c4b068e43a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 0ed6f6d0-868d-443a-a461-d8664a7643ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 fadba9ad-1b28-4645-b76c-cca0c1a2cfe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 48b8b60a-7b9b-4b26-b7f0-55d01bf1524e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 42b6a3db-2fa2-47ef-be9d-215353e01af0)");

unit.assert_eq16(16'h072E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #551 83240f27-08ca-419b-8fe8-eefcb890dc8b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0678;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 baa41fa7-210b-473a-8c8d-cc38610df537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 f046c101-7d4e-4cc9-b1b7-aea146310d5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 ce8bb89e-ae4b-4d71-8c58-5c768f834414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 14d70a9d-9093-4611-97c4-0786837c6b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 5a70c483-103d-4de5-a32b-f92886e63013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 165d41ee-9957-4efc-bfad-73b30859115c)");

unit.assert_eq16(16'h067B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #552 e34eeab2-df2a-4b1d-9b39-ce8e702759a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 ed79fbdd-cf76-49aa-9ad0-2c9db8c67ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 0ecf2255-23f0-4f9c-b213-f4d2f0335c95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 37373c03-3b34-478b-8a40-be74fa169d82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 9c0b044d-cee8-44cc-8e50-90f233104573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 823bddbf-cc41-4b13-b499-31716fb1723c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 e211d43d-aa48-4b7f-b5e6-9d2b0ed1ac0a)");

unit.assert_eq16(16'h067E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #553 b94b980c-15e5-49dc-b5bd-cdab07ba3fd0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 dbd9947a-6274-4bf3-a36c-b4fd9d28e162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 0f273347-09d7-4b6e-8ed4-e74cc21326f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 c4dea655-7adb-475f-ae3d-485eb1b74c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 0503abea-1e80-4163-8d7c-974782b3fecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 52cf958d-9b26-46a9-8a91-9eb6a0d336d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 8ed7050b-83df-499f-a7bb-8a1d9e7b7298)");

unit.assert_eq16(16'h0681, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #554 16cc6658-d26d-4fb0-8fa7-144883259e71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0681;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 5a5c34a1-4dee-484c-8ac4-a72f2804c2c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 8c844cc2-3510-4fa0-afcc-f1c9f3b94d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 fe066f98-4f33-494b-8ba4-42b43d96b2cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 c966ab78-cab5-4074-99a7-3ca00456a44e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 7751686f-89d1-47dc-a372-116c28ce16a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 1ef53aab-7f4a-48da-b531-33aef9882ecf)");

unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #555 c227b39f-8160-48e2-bfdd-a448dccc8383)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0684;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 6677ff2c-5855-4040-8f63-e8f3018be981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 b4d37582-f40d-4bd2-b896-8b14c45e9efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 9089768d-bbc2-4a7b-8c12-8520f5b843c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 37d6de83-7ea1-4cf3-9f7b-9ed7c3206e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 9ef270ae-9e91-47e6-9354-bdcfc61b2e3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 4784908f-140e-4117-a314-1cca636e9976)");

unit.assert_eq16(16'h0687, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #556 2e98f70d-aa78-4d7b-afb2-41dd18f5a30e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0687;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 30def3d9-25e6-49e9-98bd-070a25e1b505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 f78a52a9-1084-4550-b82d-2830b24c23e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 f41627c8-b8e2-4024-82ef-824a6d4c9cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 b37f828e-c6bc-4c82-bb97-18d4a8ec06d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 71059277-1071-4ddc-9325-127024d9df93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 16ba145b-c4ba-4dc4-9aaa-55a161d3557e)");

unit.assert_eq16(16'h068A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #557 420736dc-dfe1-46a6-80ae-11083097aca0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 cce6ba04-2907-42b9-b11f-40d6a24eec8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 7059a97f-f2ba-4995-967f-3d9ee33d8d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 6a48060b-7ca9-4471-819f-44da14a446f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 359339b8-f969-4115-a85b-60e93f73699d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 f9756020-136b-4b90-9ee1-7dc382d33714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 c24e8aae-5917-4750-9155-85a9c464a3b8)");

unit.assert_eq16(16'h068D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #558 890b27ed-6b3c-4f8b-9a56-9edda9166c8c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 c1e5403a-75f5-482c-af24-efe373f8357b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 a709d5d7-30ed-4222-96ad-66c0f37ebdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 2dcd06da-70f8-4622-badc-cb64a171f11b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 ba707981-5931-47ee-a2f9-6bab87a1a4bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 315e7086-4149-4958-a09e-f088a37031e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 6409f744-f566-44ff-a111-ec34f20d4173)");

unit.assert_eq16(16'h0690, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #559 11e7f396-247b-4e40-adad-7906381498c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0690;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 f5bb15ea-8ae0-42ca-851f-b7eaf3b27567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 390ada27-8103-4187-badd-b24509fa1ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 5b766827-57fe-46e5-9010-a34b53dd5ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 8d40a834-dd5c-4032-89a8-6b7c1be8c4db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 090fc65f-ddab-4bd1-9bc6-3caa1a7ed47f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 45986373-a3ab-48e5-919c-1ecc68b15a71)");

unit.assert_eq16(16'h01ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #560 10547dcc-0fb9-46e0-b399-6bdd20520393)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0693;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 ef45f0b6-cab3-4358-814a-9f25fe5d7194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 89f70363-0b1d-4469-9e47-483dc96a89e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 903d6e8a-b345-44f4-8cf7-f402ddf2595c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 1169b7d3-b447-493c-bc93-d7e732b21cae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 c7d0bd0a-dc4e-43da-83fb-235bb8b3dab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 4fe66d6c-fe0c-413f-990d-62d664b90392)");

unit.assert_eq16(16'h079A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #561 23d0766c-97ab-4527-9f74-6f46d4e164a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0696;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 45668d62-0c7b-436c-9ed6-6de1bc9871b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 a8ff73ad-7e0d-4bf8-ad3b-0c0b07a06120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 d50e5379-a50d-4310-a86e-529fa0a4415a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 340ccf91-4531-4891-b2fa-ebb6ccc18944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 a8170c1b-a876-43e4-9bef-cdb98bf0fb1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 1d23e705-e490-4168-8080-241a1618744a)");

unit.assert_eq16(16'h0A5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #562 db6a7545-d938-4f85-8b08-d0c7166f9d81)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0699;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 6674b265-12c7-400d-b4cd-0e420480a0e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 2ec42811-d59e-44a5-aad0-1a9653e8e6a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 f2fa6447-cf09-44fa-b202-4a566950a762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 4e09e7dd-a820-4e06-a044-05e76aff1ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 6e658dff-a55c-40aa-b029-78f6f60f4651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 029c3506-b770-4c88-8c4a-9f461f09f148)");

unit.assert_eq16(16'h035E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #563 48ac24fd-c5f8-4eec-b678-2a74b637716b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 0f5911fa-9b05-4fe9-b462-56af665df204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 0f4f4d19-7b4a-415b-9ad9-217299f32a07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 a116a35d-88a6-4f13-98c9-cabe113b8a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 f93be93b-82e0-498a-922c-68019bc11531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 e98d7954-4ddd-4ae6-b519-4d4836d9cc2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 159bda53-a053-4220-9569-79128261bffd)");

unit.assert_eq16(16'h0792, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #564 49342fcb-f8a2-41b5-8ed1-98ed5f12b5c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 eaf8a620-4302-4ca3-a4e1-1e16ded5b14c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 dc0234d0-0f80-4e16-9c55-cfb2565873d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 3706b121-071d-4f8b-8b5f-fb775e30dbd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 4291738d-1cbc-4e9f-a376-238c8abf79f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 9c31bfc5-a6f7-4c3a-b9c5-0d663b5ac086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 4b0c4d04-25b3-4db9-aed6-c59e9706856f)");

unit.assert_eq16(16'h0CED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #565 7244dae2-1c12-4c40-b60a-e96debada235)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 4a08d994-70db-4b38-a368-2e8897edfd73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 f912c9d7-6f94-4d5f-aced-1300c17cca67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 b9edfeec-ed0c-4a41-ac74-7190d318abd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 123c8e4e-2258-4226-a396-e59b3bba9d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 b9c835ca-983e-4fad-90c0-3e4b7eb8fd13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 57b873fa-1de0-4315-977a-7f6b0ef33687)");

unit.assert_eq16(16'h0855, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #566 98d374a5-fd27-4030-b29c-22433c275b77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 509937f0-362c-4fac-b5b6-75e92929f68a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 e9d34a8e-5012-4dc8-be19-f01d3be29c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 4e257744-a801-4225-8778-f29b74805d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 53090c11-4dc4-4948-bc2c-aaaf76dd2b7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 aee69700-b290-4a01-9031-94831d91e6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 e4aca1a4-6a5c-4418-80a1-3b3a7c2740fe)");

unit.assert_eq16(16'h02F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #567 e8911f22-8c50-40a2-9e01-05286873b78c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 10b94395-ff86-4fb1-80d0-a1d5bc6329f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 9c30a5e8-98df-4bf8-a28c-e207efc68a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 9e5413f5-ca69-4de1-afb6-8ac750a7ab3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 259977dd-d900-4f64-a5ae-98ebfc39df60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 190f07a6-b429-445f-bf81-3169a3aa3f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 a7ad8a1a-caf8-4cb1-b32f-757d4d04f8bd)");

unit.assert_eq16(16'h06AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #568 5b4c9ee0-2680-427c-840f-d8c6a67af1ba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 40146072-7773-4073-83b8-751133ab0642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 dbdc6c78-6a6d-4dd1-aa9d-62ee15467d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 4d1c9af6-3889-421c-a7fe-0664c176ac68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 63f3aabb-c3c0-43b6-8e06-deecbb9c3e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 998b6c34-a87b-48f1-980d-d34dd211bb0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 d7b7c2a3-34c5-4ef9-890b-76cbe2ac8143)");

unit.assert_eq16(16'h06AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #569 837744f3-31d4-40d7-9334-95a38a1ced39)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 2e089ca3-ebc3-4fe7-aa98-800c06476598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 834413e5-484f-42c7-843d-0f51fa717363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 bce2ada8-d601-4349-a2fb-8b85521caac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 24977cb1-ceca-4c8c-9427-11fabefb1f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 4b951d77-8e95-4256-bdf8-0de0b113c635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 5afda0fd-ea47-458c-8fae-657484a9ef30)");

unit.assert_eq16(16'h06B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #570 61c97832-2e33-409a-9187-d452793e65e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 9ad3aa41-09a7-455b-bcaa-444215846505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 0fc5fdbb-094b-43c5-987e-aa2ac29c0d0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 001d387b-7364-4f39-af44-e35ce6e2e418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 25abb769-1e09-460f-8d39-2a60c845a2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 1227c462-4df2-46bc-ad11-70118362ca4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 04ff316b-4892-4b57-852d-47ff53626ac8)");

unit.assert_eq16(16'h06B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #571 4db0587f-ca37-4b2a-a3dd-a86684dba4fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 e36f4cb7-8bcf-46a4-b825-cbe6aeceabd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 0014ed15-23ee-4ba2-bed3-887d4753d68b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 22f4ef52-8689-455a-880d-4b482a1dc959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 f4ee0f53-af20-4db9-8a23-092be9542ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 53086877-bcf3-4de8-9313-82fc7eb1e518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 b446adf2-70c7-4be7-a3b7-6fa49b515ddb)");

unit.assert_eq16(16'h06B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #572 33fc2607-a028-4438-88bf-d6c9642a25f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 c3c5a7f3-40ac-4991-8c24-d0a582ec7484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 c1679feb-4be2-4819-aa6b-aebc045a9d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 a96cb0d4-1269-444d-b044-1fc86fcecb6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 32b7fab0-7808-49c2-b4a6-514366569e95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 6765266d-1d70-4026-8271-90532c0d7ec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 0d91adeb-9f83-4302-a3d5-8c928bb70cfd)");

unit.assert_eq16(16'h06BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #573 fb64e558-d0bf-4193-843d-f444e8814589)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 08084622-3410-4b9e-8996-85304fa7916c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 1b0add24-a6ba-4f49-a06c-8fe080490c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 f1da3afb-e24d-45cd-adcb-53626e5ac267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 9e064009-26a0-4f77-9e34-46d9ba5eb81e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 1c6741e2-e20c-4182-8cb6-7eb5d4fe39b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 85d8447a-ee70-4563-9ae6-ce6a434d0883)");

unit.assert_eq16(16'h06BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #574 bf346b4d-f9ca-49ec-a7a3-7e21c05e8566)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 374dbca2-a792-44b9-8b6a-04a8b9f1cc95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 477987c7-1350-4907-b630-e3f91b3e322f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 721eb0e7-4d8a-4772-9738-0a1a827d522b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 26061ed1-8a0e-471d-9fec-85b06173a08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 2064b34a-7970-438e-a7b9-7ef249881073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 4a8bb3be-a37a-4931-85af-a6f4ee5401f8)");

unit.assert_eq16(16'h06C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #575 322d1498-4484-465a-8790-770e6b848d7c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 0f0f750d-56db-4d30-98c9-a024cd6906b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 5c638707-df6d-4ec0-a1f6-20469481a4ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 cce55093-f853-43d6-8f5d-02018e1c95dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 8f141510-9bd8-4b29-92e5-b80d7ea0c566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 543b5800-4f9a-42bd-933e-71806c100d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 b4c07e24-51eb-4105-a6ed-0436510674b2)");

unit.assert_eq16(16'h0979, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #576 733c602b-700a-4abd-841e-591beadd372e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 0f7c091d-328f-4af1-b37b-f51bad2d8777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 dabd6baf-c179-4106-a70c-8fd781360d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 57967c15-ef35-4f8a-a7f1-748f70837582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 90e06b65-f73f-4809-9b36-85499d99e3cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 3598c060-54ed-4ca8-a9bd-a2da50839b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 bfc195ee-ccaf-40fa-8cc7-767d2c611d83)");

unit.assert_eq16(16'h0B62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #577 33a6d261-c88c-4572-85ef-9d6d5f89f217)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 8967fbfc-2386-4dfb-9895-bf53d48e812f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 ff69cdb5-7e14-4f85-9100-1cc12b508fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 1276fa01-9a36-41f8-9108-fa9de0f251c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 9ee2787c-d033-4464-a0e4-e8d8c5f06cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 b1c4fbf3-9e78-42cc-b04d-e0568957882b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 4d9d06d1-3273-47b4-8605-2e5852774684)");

unit.assert_eq16(16'h0609, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #578 54ff07d1-4ec2-45c6-9e4f-f5778a0db009)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 dec96db1-bbb8-4c73-9d24-bba9fb8a4b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 e4144605-b8d5-4168-abe4-6492b206293b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 8b898fbd-eb1f-4ab6-ba48-fc310db68c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 34268495-de4c-4e07-842c-5fa088c1f63e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 a07ffb78-087b-4e0b-a4fd-85049034d158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 6f44c2f0-66b1-4f6d-b46b-7a57971ad669)");

unit.assert_eq16(16'h0045, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #579 53e3d77e-b451-4cee-a5ed-8340df1bb0be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 2530f394-240a-4196-a691-3e50e9eae869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 1d53b9b6-1494-48ec-8d1c-a39ee9deeecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 6b4cf19e-9b17-4fd0-93b8-fb92fbf52d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 658d0ea5-c321-4e09-b5d9-aa25ec3a266f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 a12347c2-b903-416c-9fbd-25dc2b778b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 5fb1c079-41d2-43c5-b4e8-95b574cf66f1)");

unit.assert_eq16(16'h0267, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #580 39033785-3312-416d-9014-8465395766a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 9c78df5c-71d9-43c3-bda3-704f9f94fd16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 0e26cf42-b1b2-4865-a945-5709e1d04045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 32951ee3-a9f0-4460-bcfa-2ca230431dd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 f53a94bd-2b2f-4dd7-b401-a783922047d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 1b021eeb-67ec-4fe7-99ee-b30e2b98b8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 4ef3a7fa-21df-4477-a090-8dfd08f3dba1)");

unit.assert_eq16(16'h0C79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #581 528998fc-334c-4460-92db-18a0fba5800e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 faa33a35-137b-45a6-8fe4-70b55c5b7ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 a6099ba0-e09d-45e4-bf79-2c4f0ac95a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 a9389289-f80d-4deb-bf24-a09bebfc0ddf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 06db2ec0-d6f5-414d-b2a0-b07d7506c000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 d7f8539d-fc3e-4936-ad80-ee6b61a21d0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 76f7223a-cfcc-42f8-b4a2-2ee346e05c56)");

unit.assert_eq16(16'h0701, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #582 eb39d94f-b8be-4547-8323-761b9a009655)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 ea6bd091-1963-49f5-9911-bf20d5baa580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 434b464f-1bef-4e75-9ac5-05a69b429433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 6fe16fb1-cf5a-4940-ad55-67f69e089583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 bfec5b0c-5cf6-4d54-b687-fff057e395bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 d0fe17c6-8826-451b-9ccb-0d89588f1678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 ac72da00-f158-4a08-83f7-3a5452bde69c)");

unit.assert_eq16(16'h02FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #583 eb8fc27e-308f-4513-a72b-87c55c308b1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 b2f10bf5-cae2-43ba-8089-78bb72774c8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 12e69a91-8375-4de4-b39a-89977515cf98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 62757d5a-8742-4229-a69d-2b8907862d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 a9afff01-a460-4dc3-bcfe-e6a88d169e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 402a0f8b-0ace-41d2-87e9-ef83856047ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 28f6eebf-c193-470c-9d64-0978f641c15a)");

unit.assert_eq16(16'h06DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #584 58c8c8b2-731f-4668-933d-4dd79405d677)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 481ace9a-b347-4a70-a33b-73e4d3f6f8a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 80440bef-f0ef-4157-ae82-fb9f930a4f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 ff58a2fb-2e76-4720-a8c0-eb05eb6ffe0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 04984f61-1220-4cbc-908b-79c3e09bc0e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 3cf730cd-3080-4066-8b0f-0fa85a972842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 7dee2e91-c451-46de-8726-ae1b58a8f1be)");

unit.assert_eq16(16'h06DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #585 f51fd591-236c-4c63-b5ab-57041f204fd3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 e34c15ba-fcdb-4598-a40a-91bd80a48f37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 6397cf3c-e417-4043-b81e-3550794da91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 cfbeab5d-3aea-408d-91c6-e124332dc630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 3800aee2-19e8-43a9-84fd-14e59cd434e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 b2f00d29-b017-4d11-a45e-80cfc4a8fdd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 c3e20bb8-a113-45f2-8842-3b12e60f30db)");

unit.assert_eq16(16'h06E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #586 9544f102-8798-4f2a-a818-53a13a255427)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 04006298-57a1-4164-a544-07f5cef5d101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 b9fa018b-ed13-46f8-a58a-cf30dfbf871a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 c11cb2fe-a20b-4b6e-87dc-681f59ac31e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 4db8b45d-25a4-4faf-9fbe-a86f35155b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 95e6d338-1759-4daa-9392-c83822b96cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 324b462b-4447-45be-9f4a-0eae9a9e28ee)");

unit.assert_eq16(16'h06E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #587 e1b01bd9-5923-4a7d-b7af-6136861c2eae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 a4dadcc0-ca32-4caa-9254-364444e3ea8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 3ba8f601-8f17-4597-90b6-163a0f29c361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 f8f424bb-2835-429a-96d5-16d488569250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 d1b9161d-a875-440e-b41a-b8d7ebc50c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 036e162d-dc8a-4999-96f3-b33a7b6dfb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 e82c3f1e-8d19-4d22-88e4-cee05f35e69d)");

unit.assert_eq16(16'h06E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #588 c5496c29-94e6-4e8b-8183-c097954cef91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 b1449d6b-1bb1-4791-9e07-666bcbdc1f25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 371fb227-fc0d-43f1-bde7-d7389e467c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 bda06f58-2982-48d9-80ab-977ec905b9cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 09200f4f-fa6f-4e7d-9c9f-f223e97e930c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 7c6e132b-fa74-481e-8946-ad7324df69ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 d0d481ad-4970-43e9-b957-65c11c5323e7)");

unit.assert_eq16(16'h06EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #589 60f5dd23-254b-4235-9311-a1810ff7663a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 19da908b-c5f7-4397-a22d-ea3e750f0ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 b8479762-ec05-4b4c-b91d-33ffca2e6583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 bd55979f-30e3-4cbc-8563-9915fe70af92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 145d9338-70b2-490e-b7d6-155fc93ec2b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 8904ecea-a1a2-4fad-8960-34d03b60dfc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 c0e65554-a13f-41ca-a2a1-595c6f8a2df1)");

unit.assert_eq16(16'h06ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #590 3fd3cdba-a340-4485-9409-a9b644c77c14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 190b3ca6-54cd-435b-a3c1-5fa330bcb4af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 ed2a3f41-c910-481a-9abf-d8c06c3fb7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 0ae3fb73-3641-4a0d-8b6b-e13a5a833f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 c529194f-5b3e-4508-aac8-cb19a29acee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 c7270ced-33bf-4603-9b01-760caff58789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 9452b2e0-716d-41c9-b2a7-4e82ad1259b7)");

unit.assert_eq16(16'h06F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #591 b3e1465c-7dea-4d9a-8895-56b909c43b4a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 db5f488c-b45c-4f0f-86d3-77e0c5b6831b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 776ff904-d119-42ce-8571-7cd8afb5374c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 a9c7ce32-beaa-456d-ba3a-1caa18a3f6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 97730992-cca6-43fe-a98c-e27b4a59c929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 75bec94b-c8d1-4246-9faa-5470c43778f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 f24c5c32-bf0b-425d-924d-d51d2c80ae48)");

unit.assert_eq16(16'h0AB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #592 014cf432-a23c-4eec-93b2-5641f2fc932a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 9222f47e-0e79-4afc-a45d-78de05011ce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 64e86d79-e019-4349-8a25-a7f37f89cf9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 c10e11e2-1397-49c7-b82f-c24ccc3d2f52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 d0283de0-720c-4455-b3a2-0f23751862b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 7ee4d974-c33d-4a3c-b30b-40dfa663b011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 98c6a16e-7351-4bbb-b699-653354a1e298)");

unit.assert_eq16(16'h0F85, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #593 aede93f1-b54a-483e-a370-ef432e8d43d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 289d3b3c-c0f3-47ee-975b-5b7747e9a46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 bc20eda9-7576-4d50-83ef-021dfc80140d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 fa333047-12ef-42d3-9c8e-00dc59ca7d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 350413a2-1874-4cd2-b25e-bc37b3a5c4f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 66e7223b-c766-4b81-915d-2145e679649a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 2e144aae-505d-4eda-b033-4949a753bd3d)");

unit.assert_eq16(16'h09F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #594 ea5bdead-79fe-4248-be7d-6236963c4681)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 62b80a91-6c06-45ce-8080-e9efc1392e9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 001a4ae0-620d-469e-8f6f-363e6c222ab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 ce6847f7-a0f2-4975-9107-bc1d03590ef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 448ea6e2-e91d-4915-8f9e-488aac7701b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 1bd51c47-6a7b-496b-9e17-bf109be76351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 9465159b-8ad2-4159-bc86-17335ecf0212)");

unit.assert_eq16(16'h0A27, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #595 08065b53-c70c-48e2-ab92-3a337dba04bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 4481bb7d-ba4a-482c-8746-b4bb44d8bc8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 0ad7bf42-dbcf-40d7-ba70-ca524e8c5238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 6af34cfc-8a36-4093-a561-8377648dff4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 dc0b6e9d-10fa-4795-8aa5-daa0db6cd7a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 e8685bbb-916a-4f42-a1b3-4a395e184bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 a1872e85-0c4a-438b-9532-aab9226c6b04)");

unit.assert_eq16(16'h0FB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #596 6e4026ea-f0af-458b-9778-d16b04d91c17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 786db58c-3481-49f2-aad3-875d243d47c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 c5165ac4-f489-43d1-9633-d2e1aa15fe2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 dc0a22ca-4820-459f-aae9-5aea7bcc309b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 2ab0c667-14fb-41a1-9f64-baccaaa48af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 b4f5c8ce-cb8e-445d-8f22-51ebb21c5a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 5f7fad54-5053-4e25-aa82-5b05cc8b99e1)");

unit.assert_eq16(16'h0543, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #597 06bde44f-cbde-416e-bfc8-0b38641f569f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0702;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 221dcd3e-fb11-43ea-9067-d99d4f69418e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 1ddd1196-14ab-4166-85ad-64e85dea31c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 15012a73-0912-44c9-a2f6-fb586ddf3cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 15b33ff4-a7ed-4569-b486-c4315859dff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 9279194c-4276-4a22-9be1-9487ccc940da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 bc611674-a68e-49a1-a02d-cc007c3a5634)");

unit.assert_eq16(16'h00C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #598 567b00ab-06d6-4827-b91c-5776a92d18e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0705;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 585549b9-894a-4b00-ad4a-02d60181e33c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 743dcbeb-8068-4307-a649-2eeedbb105b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 de81cd91-18b8-4a3d-b0ea-6b76a750e453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 e001d4e1-9ce0-4635-98cf-4468f96e5095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 c342c645-8835-4120-87b6-453ea137b12f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 249d5962-08d2-4d5c-9662-935f3c6f5d8f)");

unit.assert_eq16(16'h0523, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #599 a72adb28-5899-4ec8-a48d-0a775e40dc37)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0708;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 8d0bd718-a0e1-4b77-a5fb-50dd73020a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 20848490-ee8e-4b90-bac0-c2ffb7dfc134)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 ec634782-e28a-4f7c-be80-4c71d286fbb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 82b9b525-d479-4a0c-b4a9-1085d38cbddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 63fda757-27f5-4516-95e6-89b4fc516a64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 597e29dd-ae8f-4ec6-a84e-c276b9c3e9b7)");

unit.assert_eq16(16'h070B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #600 138809da-a246-4ee4-96f5-e33d450db87a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 f9101e5d-bbde-4c34-b188-f6f00a9ff5d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 a0cbb2a4-ed29-437f-a8c6-23078e1a0a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 88dc3042-7acb-47c7-825b-707750e3a359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 9dd72c20-255b-4ced-8252-0514938ab5a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 7fa28229-98db-4062-a89d-6e60b8aac555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 739b87dd-835d-4510-9d4c-07f75095bdea)");

unit.assert_eq16(16'h070E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #601 90a7bbf6-cdc2-4c4d-a412-f31850633e1d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 134edd9f-46ef-4a24-833a-d05e59e3736d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 9673d53d-564e-4f49-950a-a4ec6ca1ab76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 bd986bcf-cbd5-42e5-8976-e1c71184477c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 48ae43de-4c6f-4cc7-ba11-e607da719971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 b754421a-9bb1-44ce-8a2f-8b080c5523b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 3c4bba56-4f87-4afa-8738-3fc9f8016c18)");

unit.assert_eq16(16'h0711, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #602 aeef900e-27d4-472a-ab78-f385b96809d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0711;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 4d5da410-122c-4e66-bb80-b6077f86a3cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 a3ae170a-bb15-48ce-acce-c7d48588773d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 e61cc5bd-b7c6-41ad-ac82-0bb1c0086f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 214aea42-a9de-4407-aaa1-a2fc2379d704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 9e7ada9b-66bb-409e-bdb8-7e3a93730f7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 2fd3d695-24a9-4e5b-a302-c3453787820c)");

unit.assert_eq16(16'h0714, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #603 7b192304-d6d2-4e75-9e7c-38197c299eb0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0714;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 48807c93-41de-4e16-86a2-45daf6bf210f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 b4179939-69e1-4a6b-bcf6-1ae2d477b8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 e60b4710-60ee-4e27-8eeb-b023a2071f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 8926fecc-3771-413d-aa74-e83ef94566a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 71f1d63e-3154-4545-8e1a-c43f6b3a53f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 bb806c35-ae53-4f9f-ae2a-2bc04e238a19)");

unit.assert_eq16(16'h0717, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #604 887f42fc-6deb-4da8-b797-aac7c7200ace)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0717;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 ff4bd6c3-10ef-4de1-b1ff-f96d2ebfb2eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 8b510184-6977-4613-b9c6-79228573feff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 63503f7d-c475-4d1c-bd1e-34519b1f97f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 f1335c1b-c396-4825-be3e-53ff41712468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 e7715c7b-76df-4fc0-8cb4-62e9e722cedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 24389079-4cc8-41ad-8f54-5bdad37832b0)");

unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #605 dabbd67d-6011-43e6-bdc0-5564ada40ce2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 755cf413-8515-4e63-a3d4-27efb9d96c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 8151f1a8-1661-49eb-b104-5f692444ae7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 498360a4-1838-4c52-a071-e984fd97e175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 71547a7f-d84c-41e6-a08c-a8f49d09a42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 3f82ebad-5c44-4ee1-8756-80d669b21993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 c4c034b5-410a-4a90-b796-d0f54e86a8e6)");

unit.assert_eq16(16'h071D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #606 c9f1b880-0cba-45f3-9798-b8553d334757)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 670c3364-2164-4dd4-b98f-313c4486e7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 feab8182-e88d-4d61-9d22-232b492b10c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 ced85216-2278-4fd7-ac8b-d8e1b0765e09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 c8a66779-2aa1-4422-9e33-84672b2f4a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 da631e02-9f24-4caf-9979-a4a11da914e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 614b9cd4-95ca-4d90-a2f3-65197aeb7d85)");

unit.assert_eq16(16'h0720, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #607 6aea69cb-33cc-4af5-940b-2d5c5f7a33e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0720;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 0bfef8c4-8ef9-4a51-b4ec-4def37c7ff5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 a2c89d94-a0bd-4f70-8562-7a5a6c1e6dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 9f3c337f-1222-41d1-b8db-eb04c9de1a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 52240080-c9c1-4567-9005-9f719125dc1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 7d2c6d4c-8586-46eb-a947-c7ad1e7b430f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 738d3558-e8df-4217-b137-a540a73191f3)");

unit.assert_eq16(16'h0A4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #608 c934ea3b-4d4e-43bf-b800-372c9d9e9581)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0723;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 f2efbbf6-9cb4-49ad-8690-9851100213da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 95992f8a-ef77-4ece-8e2a-c0fd799b98d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 44b44bcc-22d1-4058-8433-af6e6499d550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 61d94d70-3110-4743-b1b9-f74f404d4828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 cb7d86cc-c250-4463-9480-b98aaa19685c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 1a2de010-6d3d-4a9a-bb81-96b1423f812c)");

unit.assert_eq16(16'h0C55, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #609 b43f6abe-e163-4259-bbd2-5a810e0508ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0726;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 fcd7685a-4327-48b8-8eab-94ae5edc88e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 d12d9f39-9bcf-4868-b6f2-beb63caecc74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 8edd5f9e-6bc9-4e22-9c2c-352935638fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 a4b1f872-1ad6-42ca-afba-e70b16f78237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 0cf5c836-d59a-492a-8f64-8a9d20313b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 b317ad9a-70e6-4a72-84fb-fd3ef8b0d039)");

unit.assert_eq16(16'h080C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #610 109dd617-7c85-472a-ae3d-f4e84fa46579)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0729;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 8b72a544-972b-4e6b-981c-26461df0350c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 1c3fbae7-12a6-4f1c-8a1d-0af271a252b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 789e66df-6497-4687-8ab5-2dc7c8993885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 a95dbbe8-7779-4461-b619-9b538468f72b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 38b989fe-fc21-4685-b75e-81e45a40e943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 ff00342a-e132-45dc-9258-bd8a2151eded)");

unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #611 cad14fec-3b3e-48e7-8701-75eda7700104)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 2dc44440-fc77-44f4-b7c5-908c0114d3bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 db325500-2149-442b-ac48-493ce6a1a377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 086635b0-ef5d-4363-a0f6-13b00f449a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 f0ac4e52-907c-48d7-b7bf-6b1cfd969e28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 ec4f1ec9-8cfe-4baa-b6bb-9fcc88666743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 6aba1ff7-a207-43d6-b553-6c0d6f4b6d45)");

unit.assert_eq16(16'h0787, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #612 36857b3b-bb9c-4ab3-9eb9-269ca816bc45)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 bbf862a1-84c9-4cfa-91d3-c8aa153f0e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 a28d4da0-615d-444f-9c27-ee024c397d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 a358d057-c71e-4aa4-9a74-ff762c18e6e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 a0b6bd78-a0e2-454e-9299-db03fe842c12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 20498ca2-fd5b-48df-a10c-1f0d61985761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 e8b606ab-229a-4bf6-9b4f-333f095cb7fb)");

unit.assert_eq16(16'h03C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #613 509058fa-ff06-4b9f-9c75-2b4e5115b32f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0732;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 464d54af-83bc-4fd4-920e-9fea0077c965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 a673e45b-de2f-49bb-a05e-7bc73d25ee3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 6092cebf-b92f-400d-8a73-3e3a081d41a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 2c20bb2f-4ce0-4377-96f9-2f888bba02bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 26b7f9ee-0cf4-45d5-bc60-5a853fa0994a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 a6e65017-9522-495e-8949-b9afd0dcdb7d)");

unit.assert_eq16(16'h07C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #614 2181215e-3b5c-4dbd-9ea9-042c363fcdbf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0735;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 31b95af3-bf02-4d22-96bb-87d0f731339b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 5abe9a62-af60-4c46-9ca4-c26266c6e930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 3bc9eb30-c3b5-44bc-a093-4c1239c46d20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 2bc3a65e-87d2-42f3-8847-ba5dbe170254)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 35de12ea-058f-4bcc-a940-f4142ef78705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 ef3dd216-cb5e-4a35-95af-424ee4ceabb4)");

unit.assert_eq16(16'h015A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #615 2aae8641-32c3-465b-8ca5-58fd26759679)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0738;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 2f72f70c-6956-40eb-b664-d050c1a67f4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 f42989cf-e812-4b0c-9963-3ff99d1710b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 a73b6b54-364a-4d13-9873-218ce46d67a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 81bc2bfa-e433-48b1-904c-6226e3a1f222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 4d1ef5a6-99ad-4480-9ffb-3df82a37bad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 afb17943-9a56-4601-8959-358f5bffd278)");

unit.assert_eq16(16'h073B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #616 4e025f8b-70e7-4f38-bade-170bfce1c11d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 c9967f3e-4128-43e2-bd40-6d771da87854)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 fd1e8fe9-a0b3-4db9-8008-5cbf3991b8bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 22b43c7c-4a23-4e7d-8238-3bea23eb6ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 cb429c4f-2611-497f-82f4-5e1b02d10de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 05aac861-2ce3-4a93-bdf0-eceaa7b7a37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 487d1e54-e241-4e2b-b30e-e7b528bcea66)");

unit.assert_eq16(16'h073E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #617 ac4567ce-b094-4241-a0d6-3b26a81cf718)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 096ad195-cc73-40b7-a138-4bc898d70191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 a6cba002-2056-4c11-a246-6af46905f6f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 8ee7e9ff-49bd-4093-ae8d-73c8c1d98985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 b93b6b30-199f-43b6-a50d-4ee7314f963c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 17966afa-823a-4177-91db-ba0faaa4d6e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 c15f1f33-4d08-4a02-9c0e-e1b088d55dce)");

unit.assert_eq16(16'h0741, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #618 9d9c054c-39e4-41fe-abc1-7547a6c22df5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0741;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 1345929d-aa34-4e84-a656-6dd9c24fb985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 602cc4b9-ab2f-4e1f-b310-823dbe2efefd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 b60ea9b0-f575-44b5-8577-e36ae2611d15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 0aa0818e-2fd6-4858-9b28-1d40b32f1099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 d0a9bd39-d225-4c5f-9467-33a2b4b9a0c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 da923519-1e9f-4ca8-9495-ed237b7f114c)");

unit.assert_eq16(16'h0744, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #619 76619192-4e90-4ab6-8139-8b28e6c18a01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0744;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 06bee971-7eb8-4d7a-99f6-0cedf54d3423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 6d750825-f20e-4051-8662-f899948c2e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 eae1f4d2-c047-4943-8d26-13eae4d87133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 b415d811-1ad7-4271-93a0-62491e6589cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 2b727e95-5e72-4050-89eb-3b492c962942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 8dce8241-8d82-48ae-b11f-d9103b739f02)");

unit.assert_eq16(16'h0747, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #620 814aba5f-f198-4c0f-bedb-2a854d504377)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0747;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 d6b2ce4d-8bfd-4c78-b1ff-0e69481e300f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 48d3d284-ddcd-4992-8f34-fac3e88b533b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 1c34174a-fbbb-4fd0-82cf-a08ae31f6e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 f0cecbec-6898-4411-a15a-5bfac0048f50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 f5b7922d-e7dd-4c2a-bd99-a087fb656f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 eef5a844-1bab-46da-9cd5-1e3df1c0f2e0)");

unit.assert_eq16(16'h074A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #621 9847f415-1562-49a6-a8d9-84e594c18292)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 d523c3bd-24db-4daf-b3ce-a1c9a43cd3da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 5863e4d3-cf70-4157-a977-ff5ec5e317e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 03855bc4-0ac5-4535-898a-ec46e7a15307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 fc731a84-a6f5-419d-827a-c2f270d66321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 edb7e724-f2ab-46e9-b83a-a1005004225e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 9eff5966-ca47-4e4a-a2e7-7aa2b9ceab55)");

unit.assert_eq16(16'h074D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #622 449469b5-9954-434c-b55c-fcdfaf33d510)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 5d7d1249-4e4e-46ac-b44a-f8e6a7cb273d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 e1a62d2e-40a7-4280-9ca7-41bd1ead0ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 95fe8ede-c6cf-45e4-9a09-0dea35875548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 19904517-3712-43db-a914-be510673d781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 06f9ff5f-0885-4f0e-8bc0-19fd91c2ed10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 1f84474e-8fd1-4a8f-b42d-cd2d4111513a)");

unit.assert_eq16(16'h0750, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #623 0b4a08d5-133f-474a-a9ec-197e9ca32514)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0750;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 40599307-8540-4507-a8a6-f58af0eca50a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 d793886a-e37f-445e-9a25-5fa12bf7aa55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 f495c8b8-48d8-408b-8d78-2bcb4b5f027a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 4a62f302-66a7-4c4f-9760-c96f8ed79692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 b70ad3aa-cf5c-4e2c-825d-4194266e8822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 49700eba-ab71-48af-bd7b-72a00adb7649)");

unit.assert_eq16(16'h008A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #624 85a025f2-323c-416c-a5bb-d2bc15458a2d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0753;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 36bafc2f-507f-41ef-9ca2-cb2ceec9332f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 d7beb67c-e042-4700-be38-2a16a7c499f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 23ed0b14-9210-498e-b116-94f257eec1e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 576b008b-8363-49e0-a171-b8040fb260cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 609c5748-1da3-4616-b013-11bc52060d1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 fc63231f-b260-426c-8077-c1989c46b3fe)");

unit.assert_eq16(16'h05E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #625 356e062a-306d-4743-9675-4fd6afa6e1c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0756;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 3bd67d57-6903-412b-8723-7ae871dc80dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 e68ceb78-ad3e-4f5c-ab07-0aef2aec99f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 9f3b8d7d-89df-4515-8fbe-b8eff06741ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 a53b384d-f93b-4a5b-aa8d-224c2325ea7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 daa503aa-26fd-4091-b816-9af494d990b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 37ea273c-1b0a-484c-a998-720455613c15)");

unit.assert_eq16(16'h0B55, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #626 cb6f730a-8070-4259-8df2-f3614cf9aa5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0759;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 c186119f-e736-441f-b2eb-260a0ee3e192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 eefe96f0-358c-4c87-ba92-cce5edef0258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 094b4b49-b6d4-4ad8-bf7e-e95117fcf55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 f64ab52a-7916-49ad-8f0f-db4cdf81cbb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 81c26d68-8c90-480f-99ce-1a6ca3b4fa69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 9e934650-7684-4e68-94ac-8645d38e51ab)");

unit.assert_eq16(16'h0566, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #627 5d791969-57e5-4a47-9a0c-51cc8fbabf42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 2baa4f5b-75e8-48e8-a8d3-8e6dda173160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 4f9d27d5-0da5-430b-8ebc-aa55b912e94e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 120fb749-7abd-4c0c-a996-3c106e39de54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 84c0ddd9-7d31-4742-85fe-798f1ab329d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 731aed2d-a713-4680-bb07-82fa44304f9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 d40c83e4-b497-41ac-bf1f-8be108566fb4)");

unit.assert_eq16(16'h0F42, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #628 d1750cbc-d178-49eb-8026-0c63b26b268d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 ad2548ea-d622-4fa3-b369-3487c710b48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 4ade8884-2885-4aff-9f25-e8eeba42ef66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 2d01572d-7e48-449a-8cfb-18cebf653b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 05606164-d888-4cc8-a7cc-775b3d46269e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 a54793f6-7a9c-4dfc-9a55-ca71b85712d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 2cbc080f-9c43-423e-af9b-ac233f89e5ae)");

unit.assert_eq16(16'h0B69, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #629 b7591032-b64e-4110-92c0-ca9dc7ab37c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0762;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 e80bf4f4-eaac-45aa-8eae-2440b48a0624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 e4d34efd-1182-4555-974a-3dac5da98d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 ef708a3d-7d15-4954-b9ce-8832d52e1a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 18c4c50e-2798-4726-a903-4bc969a1cfb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 ba411231-3599-4e5d-bb87-26b51e34687e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 4eabb125-a57b-4c3d-a489-d89dfe6cda52)");

unit.assert_eq16(16'h0A07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #630 a3e70aab-855d-4168-b8b5-6f388e6d5d91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0765;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 899899ed-5421-401f-9c5e-0f057599764f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 bbeb27ea-22c3-43fd-a2e5-4b97ce3f9e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 954c8607-8c5d-4657-ab8e-70ce625303f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 05f32649-0856-46ad-8229-7a20d3ef5845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 4e5086fe-3caf-4ba3-824b-88da86d068da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 e6464755-3768-4828-a226-3799b081d959)");

unit.assert_eq16(16'h0BB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #631 fbd0a87a-7ac3-4927-9e30-67f6adb0d6f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0768;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 05672f51-9297-47c6-8a7d-d5d10b901fbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 a3a6801d-9098-4fb0-9d4e-78b30a08dcec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 f0366398-807a-40a4-9bdd-47201f491a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 2c93b824-e3e7-47cb-a9e6-8d80b342481d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 bc697d02-82cc-49b9-9c39-ed32de924cf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 a604da8e-fa98-4c6f-b538-d55b245fe182)");

unit.assert_eq16(16'h076B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #632 76f9222c-f052-4931-aa31-ddaeff3f723b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 971f5c97-702f-4c1e-93cd-69374f50e02d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 8db3c805-f91f-4c85-86fc-609470d9a4f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 f47c89a7-3450-434c-8faa-276cc7f5b27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 ac50b4ab-19e0-47e7-bc32-e31f33b5bedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 cc0884da-8355-4af1-ade8-ae35702fcd15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 3db22fd8-de7c-44d9-8f68-ec5c5415e9d0)");

unit.assert_eq16(16'h076E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #633 7b3e8c83-ecd2-4c2a-bb5b-60534e0d0332)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 cee9035e-9be0-4e42-92df-4840cebe4d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 8cbe894a-bf52-45ec-b06b-1195b69bbc13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 1c200793-eba2-4bae-bdeb-fea23e320f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 d6e6ee4a-0207-43f3-b0d4-46d73c0590e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 11f43d05-41e7-4294-9054-8ec7be98a207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 00c2a5b5-dfc1-4c1a-a320-09e0a24912f4)");

unit.assert_eq16(16'h0771, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #634 1f4f77d7-d544-4a9c-9881-019527aab0b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0771;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 48fb9356-82a8-491d-a2d0-44294d040abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 3ff40b24-a930-4bcc-a9d4-e40031c9931a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 b12c8e08-caa8-4f0c-a902-321952f8ee48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 5a427a90-73d1-444a-8349-c05ef2b3fb70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 6eb7f1e7-01fc-4eae-8727-c5ce81cc6689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 08e91185-c6e9-4f0a-9ade-d9690880d7f5)");

unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #635 7a8d1df8-6430-45ea-9396-b89f746ff4ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0774;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 4db1abbc-1b52-44d8-8583-c1b84c3410f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 72fd2af6-649d-4cec-8e7e-591211e89cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 1340b551-ade2-493b-9178-3bd5d8e6aa45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 39607048-a2c8-4c53-990c-a129aad47cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 b6bc8506-47d8-4da9-a6d3-57fdfd7c1c69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 c1e830ec-8ac1-4f32-842b-b38f3764a7d9)");

unit.assert_eq16(16'h0777, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #636 e7b58e39-8f3b-4f3a-b1d1-d4e8aaaefea5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0777;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 bdf1902c-6780-4faf-90a3-d93ccf53dfc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 836a55b9-3a34-4e3a-a0b8-83b1c6539a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 86f3243f-9b77-4645-acad-7666d8aef608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 7c6794b4-c155-4a53-b092-7a3cd19f7593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 9ab72fd9-9c4c-4625-84a8-469eb16bafa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 416ba7e0-a0db-46b1-b75c-73e56a25572a)");

unit.assert_eq16(16'h077A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #637 14add281-6797-4ded-be63-1ae3428f3127)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 a7906958-f63e-4c80-be1f-e92c686c83c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 e909a09e-1e0d-4cd7-84c9-15253470da40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 af906469-d51c-4e92-89bc-4ed036bcb03a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 9afda79b-a913-4e84-8479-29542c795eed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 84209a66-0e58-4ffb-ab0a-1923739dbf01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 517146b0-f9ca-4610-8743-f349937f1610)");

unit.assert_eq16(16'h077D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #638 544cae34-baf3-4aea-a58f-01f9f923771a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 ecc1546e-fb52-4256-97b2-b87090a3d8fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 5e419cf3-22d4-4271-8256-74c97fc07af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 af7d0db6-0350-4ab6-91a0-35e6839b7c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 69d780b5-29a5-4bdd-b113-a7acc545ba83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 31b46cdf-7fde-444e-a639-94d79c025782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 47920275-b7ca-4f31-82c2-481dc1efa2c6)");

unit.assert_eq16(16'h0780, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #639 b683ad6e-f4d5-4c97-9230-9c77423f9b24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0780;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 53dde1ef-8fea-4fda-b476-2e44ecf346e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 408be1cb-e91c-4f00-a647-5591807f892e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 26006f54-0746-4581-9ed1-51d18e777305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 a0ae39e4-9436-4115-9bbf-f44602ac4fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 82059972-8c07-40cc-be82-99095ac13fc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 b88fe713-a371-4106-a573-2128bafd1db8)");

unit.assert_eq16(16'h0783, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #640 15773c4f-6a92-42de-ab95-d1a1da3a0bcd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0783;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 4fb778ad-b60e-464d-81b3-ce74cc5e98d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 12c128dc-f391-4ddf-80d2-4bf2c57848a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 c6d586a0-0064-4a0b-9498-f3c66f0f05df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 fdb57f39-d644-44ed-af18-ea7d2cc3cfc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 d9f44c6e-0562-4f16-994c-e16e30e1de7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 8de86c18-821e-4b2a-8bd0-e4a8b73c4c40)");

unit.assert_eq16(16'h0786, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #641 005b2df5-9d00-4410-8b2c-040ef030646c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0786;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 288e05b5-501f-430a-8218-daee997e5884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 5035016f-eecd-446e-8b71-6a21db69f59c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 4980780a-f5de-41b8-97e3-5d6411072816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 57ac560e-ca77-493c-a4a2-348e543a96cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 f6fdef39-4af3-47c8-8fd2-71400596ce8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 4f9691a7-1b04-4974-a79f-1fb15664f335)");

unit.assert_eq16(16'h0789, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #642 ee670218-832d-42a9-b116-9ab6c9223180)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0789;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 dae807d1-0950-4396-b271-05488b4e7a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 7900a1cd-f630-48b4-96c8-db2804a6130b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 c74636aa-dbf5-49f5-9093-10e6162483cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 5477c893-283b-42e0-af40-927dea9461d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 6ecf2b09-a8c1-4f27-98b2-a7b36115fdee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 594f3fbc-a697-4478-bf6f-9abad18e9bc1)");

unit.assert_eq16(16'h078C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #643 f70aefe7-8b30-4454-aa90-604963e0ea43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 b9d68691-6286-4b38-9c0b-1a5d2962ad12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 48dcbd1f-7cce-40cf-955c-da03a7523cdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 1de4fb53-afbb-4c7c-9737-b603c040d3a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 eaedd644-1af2-44f7-ac9c-337262b87dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 be7b490b-7d5f-4d48-93c2-789fdefed20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 119a0cd1-23b3-483d-b924-91e6c136b3c5)");

unit.assert_eq16(16'h078F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #644 941c2d6d-e9e9-4adc-9bd9-c84414d0b523)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 0730ea2f-e811-4a48-947b-9057d861643c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 56844622-8dda-46d3-8821-c59deca257d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 07108d3a-3c59-4e3e-801b-49dbbe31b032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 5a087245-9ac4-4002-ab75-b9511a893a08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 13049b2d-2a3c-4276-ba2c-9cded8c976ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 b8980ae4-9c66-400c-a86c-e5646f127470)");

unit.assert_eq16(16'h0792, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #645 ca8ff1d7-c21d-4613-ab81-bcba044757e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0792;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 7ddf94e0-b492-4859-ae8c-a740876e66dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 1b276ce0-8d75-4700-a533-671e9f95dee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 5d2ff92b-ebc1-4631-81e8-771e30e99304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 429e0f4c-f5a1-4fb1-8846-439eafe10cca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 6afeef3b-40d5-4a1c-b4a2-6cf60954f331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 339c219b-6a1c-4d7f-98d6-de98ceb38bdd)");

unit.assert_eq16(16'h0795, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #646 d5eff503-4c6c-44ef-95bc-928bb59d3446)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0795;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 f91b5453-84a8-41f6-8bd3-0482bc096b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 c7a5afe3-ed86-4c02-aca4-c4d8e5a9108a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 f2491b26-317e-4db9-a9cd-11f5dadf40bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 02e736ae-8857-4360-bbd0-0ecb8fc00e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 7f396dc4-697b-401e-b55e-e5e2e712fc4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 cac9697d-00d1-47f3-9914-f17de91f62f5)");

unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #647 4b92d5c6-f173-4d83-b816-e0bb3f258fe6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0798;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 808c578a-2a25-4477-8c7f-916e097c73e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 85d353ca-828b-4610-a7ee-5ac1f1e676eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 0e565cd7-1128-4793-817d-c5daaebad90d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 3bdb60e4-55dc-488d-8d52-ce1c6f946bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 a9896e57-715d-4f45-aca2-2df0e1867f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 b8f55e43-3113-45c4-af47-00c019589b54)");

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #648 8e89ff3f-b986-4282-909b-0a9b520ae927)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 2bec0c99-7ae8-4103-811e-f1250eea0882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 c6e54be2-f750-4e47-ae61-bdb7079ea0f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 5b190096-38b8-4135-bd4f-9eedb7128dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 6a2bc07c-eadf-4ce8-a2dd-38e2b74182de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 7233f076-73ce-456f-9bba-aa2e783ee541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 97216956-580a-4b6e-9923-7c6538be58a4)");

unit.assert_eq16(16'h040D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #649 58fc7291-8377-4530-b4d5-1e154c2277cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 fbe1640f-a69f-46f2-ba03-bc3b7812a7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 2f021d79-3153-4ceb-a7d5-9641f26832d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 78fe939c-8e33-41f2-a94a-7edccbe41d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 4deb90e8-9e3c-4977-b2e8-40205230b9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 eb8a2295-3a21-473d-88ff-a2c4f190985c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 1e59c1a6-244f-4d5e-8d87-97784da7582e)");

unit.assert_eq16(16'h0ACA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #650 7482583a-df4e-4d7c-bf16-a23d88f6d3e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 57240560-421d-453d-9f32-afe7a48cf525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 e8458675-8c32-4a61-95fa-4045cfdc9d0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 f56a761d-5baa-4b45-b4ff-4edda56a1491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 3ffde603-8258-4b66-8a46-2ad0cc96257a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 4dc56912-1470-448f-b5f8-93f9f67e890b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 b1c31176-33bb-4d46-bba0-f36aab112ff6)");

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #651 ef6ffb19-6884-41e2-b5a4-479bfee164db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 174333c6-34c6-4a60-a214-cad6781593de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 c847c119-c035-4371-b957-9a72fe19f05c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 f94aa177-5f96-4d6b-9e91-77de49524f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 3b0e3db2-f7fa-467d-8298-52d42204f970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 02088d8a-44f2-42a3-ae0e-21cb62b773ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 ac8606f6-62a6-44e7-9627-b85ed4aedab5)");

unit.assert_eq16(16'h0690, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #652 665aca0d-0693-4cab-98d5-0513a8657136)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 dffaaac6-f494-4ec9-9ff1-e3c732681726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 66d85cce-5294-4230-8508-bf4b3469e45a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 660e0e39-289a-43a2-a55d-44bd31424c7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 014e9a18-b74f-43e9-957f-5683720a1f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 d7db0daa-9ece-40c5-a328-4f4ef67e77e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 33b70796-fbee-45fe-819d-67464079197e)");

unit.assert_eq16(16'h013F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #653 02ca83bc-0e27-4739-b66d-fc920b174c60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 e4a597a9-f082-4599-83b4-bd1bf511ab93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 57893452-d1ed-4b2f-b97a-4430ce1ec00d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 cad947a0-4e58-4321-b901-d64a3324002a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 2a84ba97-2f23-40a4-9868-cfb34dd7c8e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 4876485a-6ac6-44ba-b88f-e69f6b01979f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 d593cac1-7413-47d4-b31d-d8ffb7d8348b)");

unit.assert_eq16(16'h0452, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #654 6838afb5-4a20-4e38-bc50-ad5a8f899f4c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 e0e511cd-e417-4c15-901e-accbbf40f6b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 01d1c81c-b876-4fbf-8b8f-2918837750fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 157cc3d8-8eaf-4a9c-8e37-7d88ee7baecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 63e5eba8-3fc8-4552-9a66-61c9c21cc822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 77cc3589-cba8-49b5-8fb9-0b38965f1d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 f3fd0d57-6aec-4567-89f4-14eed33ca82f)");

unit.assert_eq16(16'h0BF9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #655 603951fb-b537-4af1-af8e-59fbf445f0dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 557ce54c-c6bd-44b8-a9a8-aa03ba9aafc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 763fd6ff-0eb0-48b2-b59b-2b47157bd231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 966a41a5-5bdf-4950-9780-9a60c6f63f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 f59a9c03-6ead-413a-ba81-6b5c72892500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 efd7b055-3522-4ff9-843f-c261e028fe8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 ecc1d85d-8bba-44dd-a03d-c2dad0e5a5bb)");

unit.assert_eq16(16'h07B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #656 55806990-2b0b-4a10-9f64-dd300a43fe1c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 2b43bd56-7a2a-4ada-960a-40f313883f2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 1903881c-a16f-4a4f-b190-2bc77ec8a261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 143aff2f-8894-4b03-a503-16e1c894c7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 51c5965d-b9ec-44d3-a391-29474e4a5ffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 875d9c8a-a3d5-4214-9184-1690680dcf44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 6a5a5966-0403-41b9-9f74-486701a7e7cd)");

unit.assert_eq16(16'h07B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #657 71175c07-1de6-4ecd-8441-cb7a1bbfb917)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 c118c957-778f-4a73-bada-1116d43789e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 5aafddd5-c177-4801-8108-2c129e3ed524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 d56ab8a6-e754-461c-a7b9-6d8ccc0d5e75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 137218cd-c5a7-4866-a58e-d9110e58e2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 6c026235-1e9f-42cd-80c4-15ff6ebeb2f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 2917d26b-0418-4205-b60f-4ea218b4c23e)");

unit.assert_eq16(16'h07B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #658 adaf94a1-56e6-433b-8a73-2efd87c05b9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 fb681505-9b7c-46f2-b4e4-06c6c64640e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 3e1bf20b-75d9-4834-96a1-438d852ab1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 772231de-1093-4a59-a8dc-f755a2f10147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 bcff6c14-e2d1-4a13-863d-31440a153019)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 9d553f66-575f-4d2d-8ff6-3ee0c4d4d31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 86451cb7-d599-4076-bd0d-e253438a32b2)");

unit.assert_eq16(16'h07BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #659 1d45715c-f29e-4910-9d78-0dcca3c5f701)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 a6afe9dc-2ad1-4cf2-a72f-2473f471fded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 4e245c6e-704a-462c-a495-8fdd97869fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 f144dbca-eb19-49da-8d39-5168857f16dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 28d8adec-b815-41a3-ae11-736b7ad8dd29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 3913e5b4-8e96-4d19-93c7-c2c0e5a3f5a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 fec22c50-5b36-40ef-970c-a85fa7d3cba2)");

unit.assert_eq16(16'h07BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #660 b9c6c63e-40b1-4cc2-bda6-78d495acb471)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 95e03f5b-fe81-4b29-94f1-213274b3dbdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 1d4e936e-aaec-494e-b4f3-e185236bede1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 f9e84fe1-f2bb-479b-a578-e19cdd29b7a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 c509c3fb-8314-4384-8767-8e895c22ef94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 bd0d504e-d9f9-4ec9-bb14-d36ec6ed7fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 67edb06b-7069-4611-8dfe-0867b9376578)");

unit.assert_eq16(16'h07C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #661 07505018-cdeb-4b20-9119-00537648a86f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 bad513bb-8dfe-4b11-b8e5-a9f7a1344489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 66cf6932-b175-48a9-8bfc-4684785c32ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 11dac4c7-aa9a-47c8-ad11-528ae0d0d147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 fb465741-0c6c-4f65-b67c-6940c0e8ddce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 760b6d82-8fbd-4bc6-92e8-a65a17d59fd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 60d7564e-7748-481e-a14c-021758d8b8b0)");

unit.assert_eq16(16'h07C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #662 f7ef97e5-9ff3-4939-accd-6c64706c05f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 d45fb321-cb13-4716-9d42-baceb77d5590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 9894eb54-1b18-450d-b260-3a48ec891fdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 5da89633-f3a2-4c9a-8e53-150f1474d460)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 9a27e43d-d06c-4857-a36a-4959dc2e326c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 596db404-8679-4f6a-842a-ec5998f5aed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 f9fa4d48-f14b-4826-b619-081f87bf15d5)");

unit.assert_eq16(16'h07C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #663 4004d5a4-c310-4efb-bef3-ce20b6d30183)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 65771259-c2f2-4a51-be7c-f4b0f7baf4bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 af928bd3-8758-415a-b053-343f8e31fe54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 6fd4c326-c38c-4303-81fd-f63a444abc9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 94c9a4d3-b354-4388-9637-d77ec5771993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 b1e336be-2932-4327-a26a-faf9023ee52e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 f4672220-b5f9-48c7-817c-c244567c26a5)");

unit.assert_eq16(16'h06EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #664 5cf25b69-74d9-4e14-a0c8-af302a3ff6d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 034e9c91-8cda-4dbb-9919-9265cc4cbfd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 daf87f0c-4f84-49c5-b327-9d8b1823d7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 4bfca5c6-501f-4a65-af3c-7006b0b5d23b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 f46f595b-75e5-49a9-8347-2934fe0dff9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 8ef597fb-a3f8-4ec0-8d39-2b3aeec15716)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 f5a43380-43dc-4dab-9741-edd2eef3ae8b)");

unit.assert_eq16(16'h0125, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #665 f2378bb2-e80c-4b63-919b-3a6f04997351)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 6c3e0905-878e-403b-afaf-f6d6c020d380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 0018c3f9-566e-46c0-972c-f1353a7b3969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 f9ea2c6f-b0b0-442a-ae10-d2b0cdeb36d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 48cef177-3537-45fe-b972-fa394a26a326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 d32d6d50-5f07-4d04-a9c2-f5c70225f2ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 c4088737-0e07-4886-a154-c2fd4413b475)");

unit.assert_eq16(16'h075E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #666 6f414705-4e0c-4fc6-b1e0-8edce6f38694)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 0293b9de-6a7b-47ee-97b3-0b6faa6f9c1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 c5f65e89-9872-4da6-9db5-4f68eb3147a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 07902892-7ab0-438b-a934-cb90d697d3e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 2032f438-11be-4183-a4f8-1f6f4f12b66d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 0616a53f-d5b2-4444-b724-f3411bacbb74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 b4441302-60fe-4bf2-ae12-cc78d8e99c48)");

unit.assert_eq16(16'h00CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #667 8fe48ecd-52b9-4c38-8d77-f34894fb15bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 fc40afa4-3aab-4781-a238-38f28145d952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 b92b3fe8-5af1-4be3-825e-fcc98c82a8d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 4abcd3ce-48e3-4ad6-a231-6a5ba8a13381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 23d88f9b-9b67-46ec-b2d5-aa127154b70f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 5c44cce2-63e0-4584-9350-c7c5f75d2a41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 237e0e98-c0fb-4af3-99c7-d17a5edd8efe)");

unit.assert_eq16(16'h04EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #668 deb97dc2-8e73-4316-9828-c5efd1b9ceb1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 477252cb-fc14-449c-a1bd-d65d1cb5d227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 436928c6-9e8c-432f-8951-def3f8518205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 8c34c685-3bf7-4e78-a0ed-4acacd882c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 f153876d-9c21-4a8f-b097-7e191046f3a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 0e5f47ac-75a0-4a5f-8d93-d18980a30c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 5909c4fd-53f8-4619-9c0e-369e4f36b389)");

unit.assert_eq16(16'h0638, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #669 3f24766b-5a03-41dc-b297-a05d2b3dfd05)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 2ff73c80-442d-4789-8c1a-c064524bdcdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 d1b4d089-f5d6-4489-8ac3-61207f2a0548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 d6118f38-8575-4b27-9d83-12f267366a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 b931c45b-70b1-4c16-83a8-39b6a75f970a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 046d2dba-9f6d-400f-b0cb-ee6b67b87adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 0b7fe6a6-7c3a-4eae-bc30-27e1340aa15b)");

unit.assert_eq16(16'h08E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #670 c1e7ff22-4887-47c3-b610-7dc00ae8c49c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 59db3fa4-73f7-4e8f-bb44-5b97b3693843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 37a3ad54-e157-4b24-a81f-ddac89770cbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 8a62fbbc-3d07-4b0c-9b94-fa9623d76a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 16e9c863-1b8b-445e-9377-4e4b26c2d181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 ffe56b4e-5d02-4d23-971e-236f4d3b0e14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 0c3c8e45-f0b4-4ebd-936d-9205902901b7)");

unit.assert_eq16(16'h02E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #671 d55cb13d-b3b3-4b5c-965c-012c55881c50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 4432dfcf-4d3e-4969-8986-9d8ee24f0868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 6ff83974-14a7-4439-b3bd-8967804b47c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 f52516ce-42d0-42d1-b6df-e61eca5f981b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 b0e33e4b-5ec4-4a86-8e8b-910fa7423eb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 5903f862-1441-4fc8-8fb1-58e12343a6f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 c2755bf5-8e72-4342-8eba-07d19c87603a)");

unit.assert_eq16(16'h07E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #672 973ca50d-2c80-4cfd-bda4-7223ab957129)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 ac258dea-a855-470e-9bff-3890aab0566a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 97f19a58-3958-422d-88c1-08fae932edcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 683496d2-245a-4cee-92f1-f56f4241d47e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 bef06392-9251-4a84-8e2f-c7b4db21e9c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 d583dccf-d9e0-4818-a0cb-acbd607c1d34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 7e7ed43d-83b3-40e0-8aab-4844f8904001)");

unit.assert_eq16(16'h07E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #673 600035e8-5b79-4491-ad00-bcbcf7a25f6d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 28b73b9b-6cad-40f7-a4fc-a5990194aa8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 baa77570-2f15-4a0f-9022-7cbd1407cf17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 5be53af0-2652-48d4-898a-2bc2264394a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 54c5cc65-b102-46ac-bdd1-8f91ca175829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 a81fea9f-d1c7-44f3-9b20-0ca131ecdc70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 30533a70-b62e-4f1b-a2cc-d112e98347b2)");

unit.assert_eq16(16'h07E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #674 be2465cc-d2e2-46c3-9ad8-be284533e9f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 aeadc924-baea-4bb3-8bc0-cf0dcce0d035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 8bd6d969-1bf9-4ef9-8a41-6d31b28c0b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 56b0a88f-031b-411c-bc71-51708c3ddfc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 bf79844e-dd98-4160-96a5-1b94b564e4d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 05c533d6-f281-4ebd-89e8-0b1215caa091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 3cb8310c-ce1c-4f10-b57a-736cc2b02cfc)");

unit.assert_eq16(16'h07EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #675 31d1292a-5efa-48c2-b6a4-f68043f5fd00)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 63bdef41-7382-4816-953b-1cd4716fd3c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 acf0987e-0428-444b-b24d-16c79ea214af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 87b83d00-9e2c-4cb4-9067-00e5c62a9875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 cdb17c83-1fd6-4bfd-bf72-14b22235bd37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 35192fd2-bbb9-441a-97b6-26f56a012233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 0ffcf93e-8a72-44de-953c-358076d4c73d)");

unit.assert_eq16(16'h07EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #676 feba0853-3932-4592-b17c-ff940140f012)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 df5178e0-adac-4128-9ce4-8cc4ef9c7b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 7875702d-df8b-47ed-9808-5c1d590d1a02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 fb885166-e3c2-4ede-89d5-0101e305a76f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 b7e7fd4c-45b7-4465-a65e-d1e1ef879f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 7069279e-99b7-42e5-8a96-01b06c552012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 0905ae89-d7b1-4974-b804-6f1b5ec7eeb7)");

unit.assert_eq16(16'h07F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #677 f01032a9-f1c9-4385-b319-e95ba1a0e072)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 39cef68b-132c-48e2-934f-dcbeb845b3ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 da9f0bce-d21e-4656-9e16-d38c595e381d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 c9b32202-2575-4ca1-afdc-b4fe09830124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 515f87dc-730c-41c3-99c5-06cb672aa64d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 eda04040-0b7c-4389-a792-0363282cc3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 28a2c3bd-be4c-4c23-b7eb-9474e76676ec)");

unit.assert_eq16(16'h07F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #678 4b335115-4359-4d9f-8ff7-9699bbd305f1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 95ddf2b8-4d43-4126-8467-a79cf0290068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 b9e56d83-fd5c-4a1f-a338-809c21ac62d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 00446e52-fd7e-4e0b-a83f-87a5cfdde454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 b9f5a183-d60a-4000-858d-4557484a9f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 681a5e97-e360-40c9-8612-3f926bde64e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 5e99195c-4a78-449c-8258-458921a7a15e)");

unit.assert_eq16(16'h07F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #679 a1c88bf1-0e34-4312-b34e-202263bd2119)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 55eed865-4fa6-4e71-8173-52540fa95cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 a235e72a-0d2a-4326-bbdf-a2e46f7dc41c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 a1a7da8f-4c29-4f16-9924-3ffc4107da37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 a4313dc6-d018-436a-b531-9a2c6e7f0130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 7067582c-7097-4a3a-abf5-e85afb5ec661)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 09937025-b3aa-4f81-8071-eb51a5deb45b)");

unit.assert_eq16(16'h0EE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #680 ef390ee6-b274-47b1-9b56-fb24ff3792de)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 ba59b0d6-54fb-4aa2-b1c4-8f681604a924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 b23a7838-f454-4ffa-9f39-bd49960cd13c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 b04ff786-5b21-445c-9486-7da7d74390a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 23664cc6-8e2d-42af-82af-5790524793ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 88752ba3-64b5-44b1-a46f-1fa3451c9359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 649851dc-2b4e-429d-a0de-9e006b83a18f)");

unit.assert_eq16(16'h063E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #681 1868d386-f2b6-4df8-bb5d-9bb7fa64f7c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 eb2b658e-abce-454f-ae77-5e5eb4ce07a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 121d6195-a8e0-4eca-919c-46d874828392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 2a1b2a4a-f189-41e7-b3af-c43cb2101d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 ad92f298-7be2-4286-8140-6c9221c11829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 60f50cde-0590-423b-a769-dfb09be447c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 90041554-e9ae-441d-9fd6-7b465c0637ad)");

unit.assert_eq16(16'h039F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #682 2c15eab7-74a1-4a93-b3ee-205fafd7ea85)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0801;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 8c2e2195-a2bd-440f-970e-68b33d1bee18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 dcf8041f-8b97-4ebb-92fe-70f08704cd1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 538c8f97-0a53-4659-93c5-be44fd1f4849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 7bec0714-690f-4e6d-98fb-336698485087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 a82be47d-e15d-44b1-8b4b-bfd6b59d40d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 4516fc22-0357-46a3-ae36-1998b50868e0)");

unit.assert_eq16(16'h0011, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #683 ef9ccd38-ee06-4673-94f5-dcd9c6b8ca5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0804;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 e7a39bef-9bf1-4c31-b5f2-991811ef01c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 d98dd3ca-0dd8-49e7-8692-bab8b5170fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 d870e043-b2c1-430d-8a95-988371c4a2b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 43adf182-ee51-4d80-a695-071ac136b50b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 4bd876a9-7f0d-4f30-84a6-32418d116b44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 7eef3443-9a10-40c5-a28b-e9f427c5066a)");

unit.assert_eq16(16'h0153, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #684 2f4b8b68-0ea6-4492-8cdf-5f39d815b9ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0807;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 c0435a08-4426-44d3-a812-ed13d2e55793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 d447af25-e38d-42e9-97a0-3e285303338a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 a78f1f6f-46db-4e57-846f-8ae8d96e0d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 e9ea7a12-d2a6-4cf3-b66a-38cc066520e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 855c2dbe-8d20-4702-a231-5bffc8dfd084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 e63136f0-dd8f-4ef1-81e8-03f9fdcbb696)");

unit.assert_eq16(16'h0BC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #685 dc2afb48-a1a4-49d0-a09f-ddb93628868f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h080A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 604d73bb-8a57-4250-bf7a-fd906b98be88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 b6bec41a-f635-4fd2-86f3-177e79dc1366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 749f1c93-af15-48c1-ad65-a7b63ed056a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 687925b9-65a0-4485-b64a-69f0600e7fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 58313a30-03b6-4cd2-b948-5287176a760e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 095cf3a4-0bee-4640-be4c-982d72e9cca2)");

unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #686 7ee904ad-0358-4472-aba1-eb1d4d5f921f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h080D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 f8f71647-3705-4704-ad01-fdfd44058c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 beb2fb1f-e85d-442a-929a-e99855a66661)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 4ac12923-67fb-4047-ade8-00d7eef40c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 af358683-69f0-47e0-94ec-3ce4d2e4b9a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 8c343d5f-a125-4ef8-be37-b6f63e3af2b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 1cf4eb65-e56e-4f99-ac7c-44034656712a)");

unit.assert_eq16(16'h0D9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #687 68d19ad5-75a1-4ef2-85ed-897dac5e847a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0810;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 d57542a5-563e-45b5-891e-da43cd0b0f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 58fb8d14-3447-4526-b81b-4f7c423ae804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 fb20369e-79a3-42b8-9e9d-5289190a4f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 48596ed5-a028-4cc7-93d2-bc815ab7383f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 bcb4cb09-1959-4c3e-abbd-02e101e543ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 376e2a7a-8004-4cfd-b4d8-8435ab3686ce)");

unit.assert_eq16(16'h0813, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #688 4cc4b994-e00e-4ed9-8ca0-9ea6aa4e3997)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0813;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 a77028bd-f95a-4086-b785-258561334f8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 346a330e-3f05-4b4c-8efe-03c69bb850bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 ff41f5c2-53de-44c4-92b4-ccc8f8e578e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 e572b559-b419-4e8b-91fe-ab6cdfb3b3df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 9892a13d-2573-47c7-bd57-5fda4955ae30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 7a460958-a16f-4d50-a798-46916e05d029)");

unit.assert_eq16(16'h0816, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #689 48b9abb5-756c-407a-9f09-00241e0740ba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0816;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 714448c0-304f-45e7-92c6-a1beebcc4899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 fcfd0651-7249-4fdf-ac49-e677569b70d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 47238477-d03d-4689-b646-a90d49af1b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 64550792-ce72-4089-9ad6-c2b8364ab83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 dd6a9834-d210-4f47-8a91-09026bed3cfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 01267ec4-cdbd-428a-814a-fba04ec13343)");

unit.assert_eq16(16'h0819, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #690 acc5101e-2375-4363-a5cd-ed69de281999)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0819;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 790358fc-0e92-450f-a68a-496696aaff73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 2ea33010-1964-48e5-8d10-528364dacc96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 cf6aeca7-c2e0-4c6b-a472-169bc7cdc6c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 7e4e6999-7d17-4db0-8d4d-15e84842486e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 ae88e7bd-6343-4ad5-9f68-8b2b57545acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 a2d9c526-2ed7-48e4-9288-262308444861)");

unit.assert_eq16(16'h081C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #691 63ef2d3f-0cd8-4bc0-97a8-33f0281dd8d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h081C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 cf8a4329-5c9b-44aa-893b-0db2791fae8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 f578089b-707d-46d7-aba9-ed9223f5a402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 9c089a2a-c1e5-429b-aca7-ed3ce8722e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 d2fc337d-3862-4efe-a6cd-c4ab34697c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 a92d284f-c125-44ac-a362-305202afcb3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 64663c21-e75c-4bc9-aaf0-77852b65f65f)");

unit.assert_eq16(16'h081F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #692 095e5de7-055a-4aaa-b5a1-b32f2859ff2e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h081F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 4d17b9dd-38aa-4737-b71c-4403400cfded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 caae96b2-fce5-4d06-93be-756524c48ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 4cc9b949-6b82-4c34-b93d-b1c66bbff8c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 d7646919-7ef0-4dff-883c-8446976c5164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 6e334ddd-1431-4e1a-8bf7-de27dd68ec95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 f717d39e-0138-48ff-8c8b-32cea3c638ad)");

unit.assert_eq16(16'h0822, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #693 b4172215-106e-46d9-bffa-29d4ff2a4488)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0822;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 26c9ab08-bbbd-4da0-a5cb-7847365a4da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 e995ed48-739c-4373-95ab-d9b3ad761d5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 c51ebd98-4e68-4531-8cf0-80ae34431482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 7820e67f-d068-436c-a2fd-7cb9f4997807)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 65635757-5d32-4b22-bd12-6c314058f3e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 3e839642-431a-43bb-bf69-e1ca6f0d04d1)");

unit.assert_eq16(16'h0825, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #694 894341e0-b803-4f30-81ed-2a4d64880915)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0825;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 948f6f1d-21cc-4649-b6a1-491899760872)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 b00680f3-a317-4391-8154-6673373ab5f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 0762ff30-be7a-4f4d-8f21-3d0dcd354550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 f6706312-a767-4c7b-a4a5-af9944128563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 bc1c8b1a-be4d-4cd2-b1fc-9086271eb2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 970eaa66-6496-4080-92e8-931e0ad89593)");

unit.assert_eq16(16'h0828, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #695 33ddd789-2ae6-40a7-89fe-7bb206637259)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0828;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 9dd9311f-af90-4b52-8a21-d2ea75fb1ea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 f242c896-d0e4-4ca7-9d78-94d7a5703bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 b685a988-b7c6-451a-816e-851fc91af6ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 6c230e18-62a4-446e-9178-db43ab83137e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 9dd93f7b-fa15-4d88-9ef0-41870a916a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 db427af9-5c2a-400c-8d4c-45e434de51c5)");

unit.assert_eq16(16'h0512, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #696 69b43040-3f4d-4ca4-89d0-e3943459fe82)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h082B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 5ecb889f-2488-498e-8937-1bda4de52fdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 4296ddb3-99b2-4515-af78-05f814452b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 d5ad791c-e078-4037-93cb-1ace5cd4e2d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 b231dfde-5cbc-4f46-99b5-32c9422f2c1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 03b822be-42d6-42f9-8d68-e1ee2fd0c037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 3e8e72ec-8be2-4d5c-8258-4dc7e89afec9)");

unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #697 6897dbdf-aa36-4639-a126-dd5426f87b8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h082E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 5afd8f0a-6e82-481c-85eb-001c4354bc68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 d0a76ff1-b156-430f-9aa6-12d2d16998ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 f7719cda-02fe-4d07-a1ac-d2ad0382285e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 3d194799-3f85-4f0a-a75f-9802b4b7d534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 fbd3b224-8c89-4edd-b213-b0ff596531f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 58c5be3a-c61c-4c0f-a7fa-10f3e5a8eafd)");

unit.assert_eq16(16'h0E45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #698 628d2b29-3def-4879-82bb-c5e523c4cc75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0831;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 4d2b049b-fdbe-46f3-9a1e-be66d97af8d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 b6685686-5f23-42a1-a666-2deb2aae2226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 031d017a-924a-46b3-901c-87e2979167f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 2f4fd7b0-2a59-4afc-9d83-a6db5ae42656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 216808f1-69c3-4f07-afc7-dbb8f6e2ea3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 61c0fa0f-dad6-4e68-a4ec-92181371f9e8)");

unit.assert_eq16(16'h0F99, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #699 95dc5aed-1d63-456f-aa8e-5c472383a2cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0834;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 9c1db0dd-7fd6-40ff-a16c-c2b0f812d844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 3af1685c-6f77-4031-9ed1-ce707a916d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 00c42c1f-f392-424a-a054-2337a76c6a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 06fb1c1f-7256-43a4-82fd-2d109603d4b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 bd71e74d-3546-41f7-afea-85dbfed6e9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 ec8c894b-7736-42a3-aadb-658ef98faf63)");

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #700 c60182a0-a27f-418d-bc20-f45418b96548)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0837;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 44ff1a02-efc9-4161-a9f8-eeb43d9fcf4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 57e5e377-7de1-4119-ad14-68bbdafb612c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 218ae785-8010-44c2-9884-f5cede6c4664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 ce7e0aa7-9c50-4cc8-964f-c1deff76bca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 184f5094-159e-4bd0-8560-c24652225680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 c9591814-3849-414b-8077-ec386facbd35)");

unit.assert_eq16(16'h0F09, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #701 ad664deb-542d-4c73-881b-e5fb0219b4c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h083A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 e50d3a0e-aa99-4e2d-9f4b-9cbfb3fcda38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 63aa1ed4-692e-49f1-a2a3-415a1d317bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 e754ed25-8346-47a5-8198-b60a65d0b8e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 6fa5c81c-0281-4829-be30-8a2d2a99768f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 9d21649c-ace9-482b-9c23-75125777b149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 b5bd7bc8-47d3-49bb-9c79-e33884873fc7)");

unit.assert_eq16(16'h061F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #702 4e700246-adad-46c8-90b3-34cd978462d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h083D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 f54c3f15-e1f7-4d8b-b53e-b7eee99d6055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 1c415262-1fdd-4ff1-a85b-37cf9888358f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 95657cb8-8bdb-4d6d-b249-59f8bfa78ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 c55b0f24-1ac5-4047-8d68-b1525b2b8119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 90efd327-c4d8-47e6-afbe-9d25168b9839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 6e78ecd1-7d0f-4a67-bac6-2944e5b9080c)");

unit.assert_eq16(16'h0FB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #703 2a58c3e5-5fd1-489a-8b59-0feb1b0c6c91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0840;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 88ce3aa3-787c-4bf9-ad8e-10a5de2e2e0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 0d14e8bb-f729-4c19-a8d9-d7cf2ef247a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 6799e253-79cb-4fa3-b154-087dc28343d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 5904fd69-ab01-4f3c-807c-65542893f746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 44fc2cae-704b-48e6-a161-6ee57b972431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 aadac7ed-3bad-4ba6-9e55-c232e7ce7e6a)");

unit.assert_eq16(16'h0843, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #704 61520921-a093-4680-932f-1fa46f723104)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0843;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 fa0148c9-9472-4739-93d8-8e536305243c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 1da2a3b6-30d2-4f59-b1e2-32898c7d8a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 88272ee5-af2a-4a06-b03d-e546b29b2308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 f1d898af-ec0d-4eb0-b49a-57fd57f9a29b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 eb70d18f-c163-4f0c-930d-db49894f48e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 8d5b927d-d42a-4dbc-981a-a461cfe14314)");

unit.assert_eq16(16'h0846, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #705 689122ab-4c0a-44b0-ba2e-1f3d7ac5bd04)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0846;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 825e5dce-463c-4e41-9cbe-8a5c2a55f1ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 4a212d81-30bc-4795-9189-8ee1032cbc10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 947f6ff4-72ed-4941-b747-66543fec25ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 876bf117-a96f-4a37-b510-1a3db0b1c4a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 29d92485-f120-4745-b7ab-a2403e4a2bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 9052fb87-102a-4438-8f8c-3578bddedd3e)");

unit.assert_eq16(16'h0849, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #706 0b78d142-f5b1-4f01-8b18-fd5177d31dc1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0849;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 0e492c53-f832-4446-8fc8-60c35ee73426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 382ef753-0b35-4d4b-aa7d-55b297302d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 58c93f4c-8042-4530-9d82-dd7906532849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 e521d26d-3b0a-49a3-8ca9-56eac81054e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 849c3b08-5fee-4e9f-b697-791654fd9378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 cb7ff177-4bae-48b7-9808-d33e64a4d621)");

unit.assert_eq16(16'h084C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #707 ef7e0774-4afc-4e1c-860d-b1195c59611e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h084C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 0b275ddc-e477-4a9e-8a11-301f5db71a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 995bb107-717e-4047-a991-7d7b240aa1ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 60b6da4a-b518-4ffe-afa5-cc5ad5a96467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 0cbbe09a-f6e0-4abd-8d25-202337ef43b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 9f8f1fd9-c0cb-416f-b54a-cfb1fb5179cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 d5a4dc7a-bc45-4c69-be4d-8ddb20864acb)");

unit.assert_eq16(16'h084F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #708 f12cc898-79e7-4f11-a887-0ac892b949f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h084F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 a077758f-3e46-4187-964d-a5bf990be304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 f665acaf-4864-4349-b03e-109c1fc71b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 9489ea08-dc69-446e-9d30-67b1622f958f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 255905bb-0dac-491e-b689-041036845f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 728b8f2c-2a0f-4655-b8be-269130110453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 472372b3-559d-4f6a-99be-5dd2f709d2e4)");

unit.assert_eq16(16'h0852, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #709 8d181776-d4f6-4038-957a-803f93b15248)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0852;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 1df7eb64-adca-4fb0-92d9-3ac0194099f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 4bd9398a-25cb-4896-8a52-eb7e4b3303a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 ba1dedee-1c8f-4bd0-87fc-8118ec0d32fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 9d4daf6b-21ca-47ab-91f8-496832a47da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 404a476d-13cf-44f0-8ce1-082d34c39ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 1b3d14bc-2e2e-4944-806a-b137afa9f775)");

unit.assert_eq16(16'h0855, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #710 dfc837cd-2f78-4b12-8a48-212f8239b4c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0855;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 c98c63d3-7535-4927-b25e-fec45bf40949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 aacc6288-9638-4ff0-921c-a4a284d43bb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 183e1c3c-ac17-48d9-98a6-505d72b64556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 6dbd6b37-2da8-4449-a5e7-67e24ebb256b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 91c32d05-2299-4e66-9fbb-b01b212720fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 68962796-6b34-43f6-bf5a-cf1566e8acf5)");

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #711 24927f5d-406c-4bc3-b0f2-f16294ac9eb2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0858;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 5a4f8bc7-90cb-4b0b-81f3-3f1864829963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 a91d1a63-d5b3-47b9-9f28-8b193684d3b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 4fa74604-6a06-4b67-af50-683455e100d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 de75aacd-adc2-4057-af01-133e6cb85e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 d1742c73-32ca-4924-b0e8-2397ac38818f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 8c983b8b-343b-412c-92ec-f93886fa8be0)");

unit.assert_eq16(16'h0C6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #712 c6c67a1f-3471-49b6-aeb0-3739975c2ecf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h085B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 937aa351-5aeb-4f82-8605-1c4d383e235f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 1ae0910b-ece3-45cf-a485-4f0a06a26a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 081c68e9-1d0c-4715-b5d8-a75c3f4d5639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 9e6c2cd4-1588-44a2-9861-95f8cc9e8fdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 f3ef1e93-c484-4978-9514-e61db2fe767a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 3cbc968d-0ec4-4912-b593-a3a0178a9fbc)");

unit.assert_eq16(16'h0AB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #713 33bf722a-9a90-4071-92c6-9cf74cb236d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h085E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 df0338bf-e658-4e7f-8082-8e3ca7df9240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 579ea895-ca86-4e3c-a814-fbe81cbe7a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 fd2e3a89-d6f9-4168-8b94-b99c057ead05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 cd7c1d60-2d55-4e86-b362-79573724e1ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 f83c5720-23d1-4150-82a1-59331de33aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 73860eb1-2e56-4ede-af88-d34634daa75c)");

unit.assert_eq16(16'h05BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #714 51e6dd92-72ce-4b16-adf2-ba7865c6be49)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0861;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 981dc512-7c30-4d97-a105-f75decc627b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 092db945-1ec7-4c13-aef1-6694457d8b7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 e4c63f8c-d574-4f6e-8b1f-99406780541d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 bbdd15b5-c407-4c10-895e-d6c34a1e329b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 79c9802a-3153-44bc-a677-94c0c5326bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 59b15867-6498-4a7b-9f3e-253babb5df22)");

unit.assert_eq16(16'h0EE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #715 97d3355c-b1eb-4e6e-ab08-f1eb88f5519f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0864;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 5b8bb29c-22b5-412f-82c5-840ce8027aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 f58542b2-222c-470a-8e95-e9c3a233bee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 ee09e722-7939-431b-b102-fd3f67134575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 18dab7fb-e16c-49c4-83f1-d08c02f97ef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 17de3ca5-97a9-481b-a1e4-52ac14f879b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 e06e4e67-63de-4a3d-ad2e-0d676039622e)");

unit.assert_eq16(16'h01D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #716 a5c470a8-32ea-4392-8a6e-ab2c13447129)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0867;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 c12c0a44-4c8e-45a2-ac57-8853421cc337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 1d8afa21-332d-4209-b0db-0828c044eebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 e34ae68a-bc81-4119-a2bd-adf1795009c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 0aa9052a-1af5-485a-9c11-55ba33ef0402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 025a23f7-133b-469e-ab3d-02bd6aceda2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 bbb07872-81f6-4783-a990-d747e00beaf8)");

unit.assert_eq16(16'h0DF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #717 ae7e00d9-2384-4f73-9f6d-a161ee2381c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h086A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 187fbfe0-61a0-4333-9c70-1f20c64174d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 b09f5c8c-6dd6-4c35-9396-ed996fc0c045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 65e1fe70-392a-4475-9bec-53ce3c0a7762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 ecb5cdfc-6783-43d7-b6d8-87df8a13b7f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 f44734ac-9ef5-4414-bf88-6a50e4854d40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 65c51a37-4139-4d46-a58c-44cad47e279c)");

unit.assert_eq16(16'h05DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #718 4a1eb903-26cb-481c-9956-9b6aabbe8ba9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h086D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 eafc9f67-9e88-4c1f-b31d-98deaaab1d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 95fcf2a8-4784-4dae-812c-6fc793fe03cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 633de5cb-c13f-4aa5-a9a0-171e7b9d8cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 1d5fb654-c823-4872-91fa-5da19eb93bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 c9488f0b-fe3e-48b5-ae00-b8ec58278a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 03e54089-fd10-4ae7-a8a3-b7b17ca97ab7)");

unit.assert_eq16(16'h0785, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #719 fd350a44-dc51-4885-a885-be3f884035c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0870;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 870211ae-55b0-4a52-b492-c66b785cd0c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 2a514b1f-78a3-43a0-8c5c-8c34bae3cc07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 9bea6056-1d6e-4ad9-af29-6e213fca1294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 79af411e-7ba2-49a6-9f13-9461abbb8318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 b9417711-6a77-4dd7-a9be-46ad24c1cac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 6f93d6bf-c711-4053-94d4-f200ae9cef7e)");

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #720 b66763f4-a3cc-4e6f-a7c6-727faf1d2c13)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0873;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 9feaaa81-23d4-4216-ae43-ad3276959f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 a5605d46-4370-4e9f-93db-9e66681b6ca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 06da6132-5224-49a6-846e-2762f510b91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 066c1120-71dd-4c4e-a888-045760899046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 3834fed0-d83e-429f-8ef2-eaf9e7540148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 27431407-911a-4089-b7d7-ebbc591f2fce)");

unit.assert_eq16(16'h0876, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #721 372b7d2d-f892-4c0f-aac2-10dc1ade2c5d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0876;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 e4f5f084-b4a7-44e8-b58b-8290d6ab2d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 f26971a5-ef1c-4ae9-93f5-fe7367b37371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 15bc052f-1b95-41c5-bd0f-c94d576b0e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 f7bf71a8-8d84-48ba-8e01-9a1cfee0f825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 d2da075b-f04a-4fdf-b305-e39829132f06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 1852d0ce-0117-44b6-80a9-0f0818bd6599)");

unit.assert_eq16(16'h0879, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #722 5f26245f-6cb0-4dd1-a63c-81a9fedb6403)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0879;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 3de5783a-7647-4d94-8738-0b26f58f9da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 55be6126-b2bc-4838-a578-2553c75edb7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 1971066c-2923-4f04-a73c-e2bb765c477e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 aff75499-75ee-429a-8745-baf4f1abc1b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 98d278e9-528b-4318-bcd7-713a22f365f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 6ee6c9c8-1ba4-43b9-88cd-023effd65337)");

unit.assert_eq16(16'h087C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #723 af6b7da0-b6ef-4595-84f7-603a246d9692)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h087C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 273bb83e-368e-4dbf-b3f5-0b0e769732c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 db955535-35fa-4c65-a840-80fc2c56e125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 6f9eb4fc-d9de-48ec-a5a4-cf05138b7c76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 6c70fdb1-3367-4a7a-a789-f30477fb6d25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 bebfe49c-8ce3-4a6b-b89c-5a0a6f89724b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 f4895e87-959f-4768-8c7b-d3cf20da6d5e)");

unit.assert_eq16(16'h087F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #724 cf7a38f7-07a7-4d21-b5b4-6cafd5c930eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h087F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 746fe415-242a-4fe3-a3e2-3951899d73a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 df015c2f-bae6-4c07-bf57-29d9d72866f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 d55a8650-40ba-4b6e-8b7b-1f0a05dbd9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 6d6e21e6-298b-433b-b975-9be147a2ebdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 9285b563-5efa-49bd-898c-7276dc4482bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 446f48d2-7504-4940-880f-fc57b9a5f094)");

unit.assert_eq16(16'h0882, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #725 efc1ea8a-85dd-4d24-95bc-905718d601ee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0882;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 065b618e-6ccb-4115-b8cd-bd991df34ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 0d2ae9c9-3721-4ec1-b204-14ebcdb0e27b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 4e28c519-2632-4f9d-a631-0a72c6813ccd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 2c4e7ac6-bf09-4d78-92dc-6ba1f229b312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 57626054-bc0f-4041-8cf2-22e347486c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 eadbc8f8-f3aa-47f3-bbd9-38eae9b9a6d9)");

unit.assert_eq16(16'h0885, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #726 34762162-be58-4246-b120-93d2e2460b4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0885;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 6e94152f-af00-489b-8f0f-1705bc2730b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 3788516e-b8bc-482d-a012-89483f307d4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 890c1ec4-04d2-4cf4-aa0d-c4567124e2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 862997b0-7480-4e58-b3d7-888839cee0da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 94bfcd4d-20c6-481d-b2e2-d1e298b518ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 8fee8a70-b9dc-4074-b875-8b0fb6e1a5d0)");

unit.assert_eq16(16'h0888, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #727 3faac007-5d90-4c25-a6c1-dee86b778eb7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0888;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 816588d8-52b9-46d7-a3ec-537efbdb66ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 53fdbe6b-f8af-466e-9ec7-cd101c738301)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 ac033ef1-d3a0-41fa-bad7-db9cd584bd1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 0d3d670d-d048-4bde-9f08-3a2f70229cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 4b550b20-4aba-4398-9533-70c6b105d4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 a769be1e-a138-4155-b713-413f3159566a)");

unit.assert_eq16(16'h0238, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #728 c3afe1f9-4239-4ad2-a7f0-c6e4fa7141d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h088B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 1a1c3272-561b-49ef-9c78-9fccc7d69644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 e663932f-14db-4a08-83b7-23a5ef1a07cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 462de06f-ca21-4b10-b231-050b36e0afa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 2f6ae981-4b54-4eb6-bd4b-f49b3f7b320e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 79a224cc-9bbe-42ff-b3c9-3bfe7efd5a53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 fc113ad8-965c-4d53-8cb5-58bbc551cb12)");

unit.assert_eq16(16'h0447, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #729 56f0dd9b-d51e-47e4-b2fd-74b638060a70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h088E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 19b82a13-cbde-477c-bb4d-ebfeccd7d7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 84ff7209-1698-4160-86d7-2e369d1b014a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 5e45137f-63e3-432d-8564-5d21c0d44dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 a33d5d84-d4ba-49f8-be3b-dab1e55effd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 f00736a8-cad1-428a-9dfd-d110aea04ffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 06c7eb53-1024-45af-9d3c-97407edbe88d)");

unit.assert_eq16(16'h040A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #730 593fe50e-91c9-47f7-8b71-708bf4a89b90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0891;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 1eabba0d-98af-4fa1-adb5-fa5d0acaae40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 66656dcf-d86a-4e8e-bd80-7b3c08a1bd12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 bc9a1fa8-ff14-469a-9284-4f6dcbaac333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 f6021b8a-0187-45e3-a8c0-29471b61759b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 1468e7cd-501d-4883-a122-c6c4f70d5608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 c5ee4cdf-2f51-4573-bf5a-2195c6524609)");

unit.assert_eq16(16'h04E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #731 1d2db269-0dde-47cb-a159-9ed50bfdbda9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0894;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 684bda0b-987e-46e2-a5c6-470c7705101b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 93695d1c-264e-49a7-9d17-390c8351c511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 9aaea36e-b8fc-468f-9e59-c372eb92fc48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 e1ab6d78-dd35-4172-861f-c43197cf151e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 5b3c4a56-9d34-4382-b49d-c071c0ceaa37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 c825e7b5-3f43-4779-86e1-47c4939fd855)");

unit.assert_eq16(16'h0C49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #732 9b8932ea-5228-4cfd-9c0b-bf2eb06baea0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0897;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 7a9bfc36-32f6-4680-8a08-d1c4c93fc4d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 b685e7e9-d55f-453b-a670-544d4602cb44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 9c374ab0-70e8-4a2d-8819-d8bceaf4296b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 379d65d5-69e2-4dfa-b792-72a311032b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 7aa79e39-fce3-4d27-9512-0a5c5a1feedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 b7ff4ece-c6a9-4495-a7ba-f7ca41959df6)");

unit.assert_eq16(16'h0939, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #733 e0ba2a33-fd25-4445-99c3-6273bf63137e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h089A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 74491f62-7d51-4a97-8200-5fe4fdb429fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 3774524f-f09e-44e2-bdac-fdca33b91a1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 32bee305-af53-4bb8-99cc-c926ca8aee3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 4ae7df7b-bce5-4a87-b3e6-e399167953ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 1bd01ec4-819d-4b66-b0d9-910819faabf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 e4503b4b-3f30-4d41-a597-7d0b17b24856)");

unit.assert_eq16(16'h0BA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #734 aa66918d-7849-485f-954b-e83d863fa272)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h089D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 73bc6279-91e5-47bc-876f-932bfdcc8fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 7e4f1cf7-dc2e-4517-8cd6-768a18cd3669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 add62d97-5b28-460e-8ce0-091538da9e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 b6f2d9bb-6bcb-47fb-908e-d46f0ff7e92f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 d7778c6b-3e42-4023-8bcd-0c4c56550fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 6cddcb19-45f4-44d9-83cb-444f59cac385)");

unit.assert_eq16(16'h0BB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #735 06d35d48-2112-40ff-8287-388636a640d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 67496db5-6a3a-403d-a1ee-bb8563449f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 4bb62e0a-d864-4db9-ae15-57ffd1ee932f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 424b2c8c-434f-4172-b702-90e27d302f77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 0c563cc4-f62d-48cd-86ae-806b4b9d483a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 a6b465dc-b238-49ad-a3c8-de0535fce91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 0dd72201-2525-4aa1-960d-72050cb1b0e9)");

unit.assert_eq16(16'h08A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #736 e6a1e779-dfa5-414a-9865-0c9942699acd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 99c24703-0e66-4fa7-8ffd-802c25d86122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 c3a99645-a192-44b0-9ca2-63841bde6ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 89ee47df-6d6c-489b-b6a0-7f94af783e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 4fdfc6e6-74ce-4e16-ae6d-4a5b9490bf64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 a6142c27-9119-4f74-8985-c751b28bc9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 6257cccd-8062-43a9-91f9-308f352a0d8c)");

unit.assert_eq16(16'h08A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #737 a95d0413-6b1f-4f58-b7c4-3289d4f63bab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 e0913cc5-8a9c-4cf9-b92e-c267c2d020d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 f851a236-0c18-42e4-9564-dd255a580741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 cf7ed6fc-45ea-4905-b3da-a8b2dba7eee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 e479eec4-9cf8-4547-bdc1-b8c12c8009f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 e9ed19d4-2286-435d-b5e0-c174b8822da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 cb957515-f2b4-49ee-bf0f-0249274cb5ae)");

unit.assert_eq16(16'h08A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #738 596f33f2-1fd7-4694-aa06-330b10026838)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 bc908320-0f52-4bba-aca5-52dcd1c74f84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 362ffc7b-1cf0-4d97-a836-0faa55c85eab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 d7556151-5b38-4446-ae5c-cfb119e8bdac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 b93742e9-eeed-4e10-96b3-aed2bf5a6734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 a60b2d76-63af-4db0-94aa-78950d0a28c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 1ccf3276-1c78-47fd-bfac-e0439e22bcc7)");

unit.assert_eq16(16'h08AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #739 f8e4a742-ac6f-4dba-9db3-dea1808cf65c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 f7f8fd6a-65cb-406f-8cf7-6837b04c8759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 282a8d3f-24c3-41ab-ba6c-537bcfa76205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 bf35d0ed-7e5d-4836-8181-73e052e5e545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 0894a54f-ca13-4b07-b9e1-2203a84c00c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 15760870-8caf-44e0-86e3-a4a8da8257d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 f1235519-43df-463a-a753-324f5e76d2ea)");

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #740 de3b22d7-9e7f-46b5-8c40-6eaa0df5aafe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 7b2e5718-87c3-4c0b-8bd6-f1a026d855da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 7e5c94e5-fb31-4c46-8f2f-cde53d76fe5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 6596e4ac-3f2c-4f23-9c35-cd42c834a039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 c874e4b2-505e-418c-a7a4-cdb8988cfc57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 307ad960-83c5-4f6b-b1db-8266230c16e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 6f89a0cc-ea77-402f-849f-98fe4fe793ea)");

unit.assert_eq16(16'h08B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #741 82337121-492b-47b2-9f5b-a74e91b6da5c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 9c5b7e18-6fd4-44e0-ac79-a93d55a034a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 32209693-cc15-4100-8c39-2b5f6c26b544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 ac142ed2-12e5-46c6-827c-ce79e8eb101f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 5ced167e-78b9-45ae-bb72-41976edb505f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 745cd9a6-2890-4ca8-b406-dae70ca71931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 0d8b2af7-53b7-470d-8e15-156a8c5fd6be)");

unit.assert_eq16(16'h08B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #742 7984134c-08b8-4ce0-a734-9feed98f3dfb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 2468a5b0-f5c6-4945-85df-9803c9796911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 7c76ed78-b377-4548-9b64-b10571109fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 b65af103-e607-49f9-95fe-d13d4c7d15ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 b491a32a-adde-478e-a212-be2baa8afc8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 e209c086-eedf-4ac9-b4fe-192e0b61eeb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 3375070c-c893-454e-a5a0-946cbf7f445b)");

unit.assert_eq16(16'h08B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #743 84192dcc-d1b0-4699-bcfc-5e8c398c0319)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 f2b88e2e-55f9-4d42-9278-2eba2eb7dda4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 07738405-f3b6-4a07-a839-d078166e50a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 b33e69ea-145d-48d2-84eb-f5c32657f874)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 32d8c55e-9bd8-49d7-a711-d12757767bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 ecc0834c-80ec-4a77-8c3e-003d324c286a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 5ec7d465-532c-40ab-83bf-eebc68dfb5c3)");

unit.assert_eq16(16'h0630, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #744 3f8d1a81-e0ce-4d0b-a18d-b38e6cc23eaa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 38be01ee-348b-4e0f-80f0-b8f213ba0c22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 f6af06d6-da25-4c72-ab9a-9f1bdc1eae18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 756c17fd-0645-4ed9-80f9-66985b019da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 9db3ff6e-5086-46ca-85b9-a822e88c85d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 71c38e32-a80e-47f9-8936-a2fd06dbe985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 d4ceec56-81c2-4c64-beae-3695f295486a)");

unit.assert_eq16(16'h025D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #745 48905744-bdfd-40f6-9837-62cbc2ca19f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 5a9eda8f-44e6-483a-bc61-5527914fcaef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 cfc27cda-b123-45bf-b2c1-38e66dad8178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 b9d034bb-7310-4096-8d0d-5da4161ff524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 0fc53efa-553c-4f4e-a266-6c1907395345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 de549eef-2b7f-4d3c-977c-0e29ba7cec3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 6dae939c-5f0d-4c78-8460-74f75ae433c9)");

unit.assert_eq16(16'h0090, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #746 1db22a17-4d31-4387-965c-6fcab22ce91e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 ba8c2161-9fa5-41ed-9a5b-c5d4b26f0bbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 c16ba7e5-17f6-4e9d-a92b-aee0b4beef67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 48953dda-afc3-4840-9904-726574d53a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 cc47abd6-0cdb-402e-a94e-adc506799a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 d3531ef7-63af-4f34-89ec-b0468bf601e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 93172a95-4ab7-40b0-90c9-937b11fe1a27)");

unit.assert_eq16(16'h0DB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #747 5e85e6e9-78a8-441a-9da1-82f4f2c9424a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 076b065a-5536-4371-8971-bc683b60c94d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 96b6a23d-5352-42e2-9b3a-9a17de4dfbaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 93ed8550-bb7a-4647-977f-586798c7b3c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 2197a42d-73aa-4b03-978b-39fc9861cee2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 0f6717dc-ab1c-4622-a30a-b55a623afe40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 0e16e05e-7723-4eac-84fc-5739cff0ad4c)");

unit.assert_eq16(16'h0D2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #748 2d303790-419c-47df-9a61-ec8f8b1ccec0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 23a00889-e326-4324-8a66-757669df7890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 ec07ddbe-418b-4917-b5a0-8dc74b935aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 5e2f36c6-1a52-44e3-88fd-a8c536dc850a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 84b8ec05-206a-40e4-88e1-4c695e2c0cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 275f15cf-1458-47b7-8a14-997b8a90bbcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 f6461a5e-eec5-4b18-9c02-03fcbf34ba70)");

unit.assert_eq16(16'h0030, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #749 880fad13-38d6-40af-a972-644c16fae6ae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 461a501b-e019-48c3-b0d5-125ffbff456c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 16760b7f-ac26-49a3-9161-f39e13e91382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 ec52c48b-ad6b-4471-abb4-ca6d116cde0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 ebf73207-9bc0-4fe7-a362-3c87d6f6a4a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 43bdfe1c-ed5d-41b8-91ec-ba8ba3f9556e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 9c18aa4a-4a73-4166-81e0-12deaaf33f10)");

unit.assert_eq16(16'h0010, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #750 7885c963-9b89-417b-9c77-bd8d28a3d99d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 241c413f-654f-4ffc-b466-d28cb74b7490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 8433ac7d-2588-405d-a46a-738275d84e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 dad264be-bf53-497a-acc8-5f4521d65e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 1a80ec6b-a109-45f7-a19a-26a03d1aba8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 b10aac73-d9a1-4941-8e29-3f0a071773df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 f5a6e734-ac87-478f-a939-cedbd5785f19)");

unit.assert_eq16(16'h06AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #751 2d992891-987a-4bac-a6b6-2d51c9bca7c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 71cba298-69f1-4f52-b987-868fa5ba098d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 b2b78b33-cffd-4da0-8ade-a48715df9ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 089b3d22-61ce-48e1-869f-a500d4a5821a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 ce2d21f7-266c-49eb-abf1-5af7046f12f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 3b87e88a-417e-4cee-befb-887c6ba75758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 8d1a35d6-b71a-462b-9885-80d63bade745)");

unit.assert_eq16(16'h08D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #752 b4e1a4e8-de3d-4330-9f7d-ee2f3b0115eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 a834aa49-c8d4-46e3-bd0a-2068c1d249c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 83312efe-fcac-4d33-9d5a-abc276b1d864)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 52bf02f3-a274-48c1-a220-436372dc017a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 bc7330af-e274-4132-b2a3-3e8e915f41aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 867778ff-ba8c-4324-a408-6372f703777c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 3dea804f-854a-452c-aa73-4d6ba1a6ffb4)");

unit.assert_eq16(16'h08D6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #753 8ca4f750-d7cc-4383-b1fb-8562ae4ad5d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 411e36db-bca1-4b20-a150-6bc897df51fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 4f6a6694-07cc-4af3-8b2d-90bacb4598f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 c64f6c97-0b14-4940-b77f-71f042a8b7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 ad8a542d-0fba-4d9a-ad8b-4f8f93341ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 8efe2121-30a4-47bc-b3e3-108bd45f580b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 e5b577e9-fc9e-4dce-834e-2fd34204d438)");

unit.assert_eq16(16'h08D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #754 8cc6ba83-5b21-4164-a6c9-bc1cb32b1edb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 e33e0b02-f081-4616-9ff7-1a95e0871fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 36fb367a-e53b-432b-98e0-4ada3dc49e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 d9d0b044-99ca-491d-84e1-d7014d4b9740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 9c0e511d-5048-4da9-8dcd-f2dd39307a89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 af09cebc-f2e3-4cad-989f-fb849acc9b9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 a2262a72-82d6-41fa-aac7-6d8a421a934d)");

unit.assert_eq16(16'h08DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #755 16484ae7-21e4-461b-b2d2-3144d3115f51)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 15a91aff-e92b-4aec-8ef8-1dc6f6c85076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 49f71153-a25f-478c-8400-e357ccda359e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 4fbff3c3-36f2-4fd6-a53e-6d2772376b2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 49a65339-f4d9-45ed-bb1a-cabd82b22b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 c864fd42-5f0d-4391-b5e4-29d9b812e16e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 c72e3ab1-f171-45ff-adc5-b2d1041558df)");

unit.assert_eq16(16'h08DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #756 cb73d129-25f0-4f65-83ab-f1f8127ee089)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 0d0dcb84-98e8-4145-8588-fa4f3a4a429a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 1857e73e-98ef-4de5-a637-a91da59fcd6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 0858d7ac-8d52-43a8-bc6f-b0393c1aeafe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 5d2836d3-4eaf-4217-92a2-a7b7724a1ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 0465fb3e-8908-49db-9e3c-9bb7ebf1d65a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 db3ed420-a5da-44c0-b9b3-363bd106f4e6)");

unit.assert_eq16(16'h08E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #757 f8042da8-959e-4ede-845d-c01c7764b5cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 84a81b93-6e99-4a93-aef4-d9fcb57e8a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 f4eee6cf-d9f4-4f51-9108-59035add076a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 8aaa2f8b-309d-40fe-b21c-3d7f5c8c869f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 611d6f4a-9429-4331-aa54-04add7b6da50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 f818d1c8-22d9-4f8c-8d07-4391710bf3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 983b91b6-b1fb-41e7-9e27-b6a5de94a082)");

unit.assert_eq16(16'h08E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #758 1775ad87-b521-4ce5-bfff-f951f371906c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 91487f76-80a4-4196-bd64-a05c877b8ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 47c5331f-ca55-4d62-9fdb-259c3a2b8b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 b7e89e48-4f50-4775-964a-aa272bd2c965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 c0f32d34-64c5-4123-9ab6-029670064791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 6c9f72c9-ff91-4937-bca0-a9201f6efaee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 f44fabb0-e954-489f-9296-39f310759796)");

unit.assert_eq16(16'h08E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #759 bebee9b7-e833-4182-8364-ff8857b7b495)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 787c313d-15bd-481d-9210-dd528eaf87fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 2395df6d-e909-4e0e-a4f6-234d223a095e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 dbab15ad-3cf0-4763-ae21-536eb2cdbe9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 a7db162b-1be1-48cd-af72-57aaf52eb036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 bb1fb0ee-67e1-4fbb-b452-f2601cabda71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 4559b127-0e12-475a-a5c2-bde640098e71)");

unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #760 c6e3477c-1570-4b98-9575-c8d9b9ec1c58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 87bdb5b5-b053-432a-8e14-74e5f1f2cb9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 bf4caf7d-392f-49e8-8f40-8ffefe9cfc9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 e749e79d-3233-4169-ad71-27a8574d6932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 fc6e502b-6161-47ae-be06-c5faffe67ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 6c79efd8-7c25-4055-8914-26892d5a600d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 4b73a035-9385-4719-a4c5-f0a993a25d70)");

unit.assert_eq16(16'h0AE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #761 6120d4c0-0b5a-4a3d-b5d0-f3f84612991b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 64fcdf7d-7bda-48a5-a772-01efc5bbfafb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 5a606555-e086-42ba-96d6-e4e157fa6b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 5d858072-fae4-4706-ace7-2d073a10fc44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 20b8c7d9-9f21-42e4-af27-5d5653de3116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 a9771dfc-cfc4-4798-9663-3aed35622f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 934dc392-8942-479e-a8e1-91aecc9d203a)");

unit.assert_eq16(16'h08CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #762 74309861-add0-4c18-a527-b7b6528b917a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 8f72da9e-01be-432e-9129-048431819ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 67bbbf8b-2538-42b6-9772-f7a962323a42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 62d0b6de-c48c-4e84-93e6-57dcb021f23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 dbc449cc-d011-4ec8-9cb7-9500a1b523e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 71de2eda-881f-4c0a-ab4f-a455f82f3c73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 af8d9ae0-40c0-4f4a-b5d8-610975c48760)");

unit.assert_eq16(16'h0005, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #763 6c3ae5a0-0131-437e-b0d9-b53d5cfa93a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 2aee1200-ab1e-4a6f-946b-dddd5dac7644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 914256a5-b7e9-4164-a2ce-0a2e569c6d05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 0129923e-6525-447a-9c21-f3a34caa5d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 013768f9-38aa-4810-98cf-92475766338f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 b7e544ff-43a5-4185-ace9-32137ba8c796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 2c8b6e99-7783-40a8-83ae-7e6f3f11ba6d)");

unit.assert_eq16(16'h0CA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #764 ab1f534a-e037-4c11-a8a2-dcbc44cb2202)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 ff29b5c2-9f62-49b0-96fc-dc57ef9e4bd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 188c873e-2ef5-4024-8aad-c20eaf1a68fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 d3cdea8b-e08d-478a-aca6-a39edde4d160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 c7ce63cd-4335-4150-88d3-a1be54e20c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 d8466b16-c1e5-4715-9f93-4456d449c806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 c0eed857-782d-45ed-8c77-80f45b9aa086)");

unit.assert_eq16(16'h0D2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #765 bb0ce4a9-f569-4596-86af-8c0d5c69893f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 b3c6f1f3-8c2c-478d-845a-8bdb5d87a8c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 ff4ffee0-147b-4f4b-8b64-0c4c3170eda9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 99257220-8968-47bb-b375-f7956de997a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 6d3c5256-e6e0-4100-9d3a-72f0d35134b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 b0cfc558-7842-4617-9098-5c55cd9cf28c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 4e16b865-04f7-49e2-a0b0-e2e4216954a0)");

unit.assert_eq16(16'h0AB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #766 82dfe9c0-fbc3-4c75-bd54-7d53dfcf7074)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h08FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 9006a6f8-060b-4823-b38d-1870255795c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 4d4e35a1-0634-467e-8db4-8b18e9caa4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 4f0591f2-2d40-4127-884e-501857d7a67d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 f882b250-4300-4775-8ca3-9bafaf86baad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 211d5a3c-4ddd-4eda-9240-b31685d5d62e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 2e345475-51eb-4f26-a625-810d7774c23d)");

unit.assert_eq16(16'h0164, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #767 57859937-6d68-4f9d-97cd-b69efdfbc42c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0900;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 239f47de-1006-41ce-9bce-7e3e9af0d71e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 e19fa43f-25aa-4eb7-9814-ec2e04549c68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 7f0bd581-9cb7-47b2-bf1b-d0519662de29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 5245a5ed-6992-4241-9c61-750327639fb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 bb1328ab-2730-409d-bded-7733fb0857e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 072be7df-b42d-4c30-82a3-eb12367e3ebd)");

unit.assert_eq16(16'h0871, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #768 7d564b32-a4d7-4724-a995-8417a6a7898e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0903;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 90261c2a-79ac-48b0-bd6e-23fda273f879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 84534d0f-2606-425d-a9a2-3f9c64470301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 c4eb2536-0c02-4683-bed2-3770b44f3a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 651b5c7a-1f32-4ffe-83d2-67cd7763f534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 c5b85cbc-a106-4a64-b74e-a956221583a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 a9028672-d70e-4b73-8371-80b8fc3c86ee)");

unit.assert_eq16(16'h08C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #769 aa121ce6-f0d3-43d0-8ec0-01d8087f43ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0906;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 ab046d9a-3545-490c-983c-29447ea4b7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 20cd0305-01cf-4159-b149-36b15e331ba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 cc77ec2f-b597-4428-b954-e25f53c3de41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 6fa796eb-67cc-4c74-b2e2-21cef2adb1b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 8bc0c81a-b4a0-4fe3-a678-b01d1f671764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 49d1d329-08ff-4353-9931-5757818904ce)");

unit.assert_eq16(16'h0879, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #770 6a9ccd30-f210-41e7-998f-4f6d0ee4094f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0909;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 ec4bd914-bf7c-4146-8584-12d18a78fa40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 9fd8ec84-6677-4329-945b-2eecd068ceca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 726383ef-f8fe-453e-86ae-c68d9264ea32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 80a403f2-b3e0-43d3-9812-935b066c433d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 a4d9e94e-a4e7-48f8-8d0d-89da2b9596d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 fc95d5b1-870b-4aa0-83d7-b6c4a28bb595)");

unit.assert_eq16(16'h04FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #771 ba407580-6d48-4b10-922e-e8c676da7040)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h090C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 833ba0e1-0623-4f0e-b5e6-9ada8e0b4ceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 09a6aae1-6908-4941-88ab-9d160b2528f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 d5e56039-3b13-4bc2-b836-a681dbd4c27c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 7138b6a9-5fa6-42d1-8d87-6e3fb5c733ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 e3760f14-c3cd-4325-8907-c96d3e4db94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 6e2b8a77-0ad8-4ba3-96b6-b790edf378e3)");

unit.assert_eq16(16'h0456, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #772 32d64d21-e791-430d-afdb-0addb10d208c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h090F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 d3ec6f10-5023-4244-81dc-029f8a60201c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 6a9783d2-c959-449c-9483-7c918d01f2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 e0acbdda-5d24-458e-a815-f80561ceb18d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 c95ee8ba-52d0-4820-aedd-53faee174cb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 64d99d8f-e178-4afc-812a-0af806295581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 044840b1-c0b9-4f46-bcdf-0c7638ced497)");

unit.assert_eq16(16'h0AB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #773 123e7a40-bcb9-4c14-b886-0ae8d74e6e88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0912;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 d326309b-6ba1-4ad0-be3e-2818882ed7d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 5c773a8f-f250-4da9-8288-edda4c4de0d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 cfc8831e-e76e-449d-9074-6a22e7261177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 de9d47be-00fa-44dc-a2c9-bcda0ce7beb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 e2b9e069-2f0a-45ef-9303-3ff7dec20006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 84f16fa6-dbc0-4d1a-bde7-e5c615b05b4b)");

unit.assert_eq16(16'h0216, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #774 521fce96-2865-4ab5-9d59-78abcca4b0e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0915;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 ebd72b2c-0a98-4e0d-a0d8-6bbbbdd5f4e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 813dc1c7-cd81-4e14-820b-7eda901fa133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 5fecd8d8-9475-4368-9a87-c620e8d59bde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 522b17c7-c448-4e72-8c81-c4d30660ac29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 11c75d1f-84a3-4948-9d69-d85697acb7a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 bb597fbb-65d3-4565-9fc7-819ac31ab310)");

unit.assert_eq16(16'h003D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #775 cbabfe53-56b4-4310-830e-19def2e5a0ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0918;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 5f3cc50f-0040-407d-87f0-524c4f910631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 c999b7d3-0e7e-4a6f-a4b5-9c399df584b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 7a5d47ea-c179-4b15-8ce8-9b727656929c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 774a73c6-95a6-4158-9293-7ef717dc27d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 876efe76-153d-4af1-97f6-e7de3908200c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 00a64c12-9968-4f68-9bce-f80c27fb882d)");

unit.assert_eq16(16'h0967, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #776 78396661-1b37-42ac-adc7-e55b1d6cc3e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h091B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 0b88f973-a2db-4e77-8984-c41bfeb4d07c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 d64965ae-87e2-4c75-aada-0f3a063e142b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 f8684cf7-48d2-4392-8cf2-7f382efecaea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 0d86fbce-0356-4db7-b00c-fbbeffcd4fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 e81c30cd-a857-42ca-8ba5-b1b752bc24cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 e609df61-10f0-4310-816b-eec47158448e)");

unit.assert_eq16(16'h0CA3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #777 d881d3c4-604b-4b09-b411-8e83c87b68bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h091E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 44861ec6-c0bb-435a-81d3-f7092b690ce1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 1e612cf8-79fe-4b98-ae1e-ebdbda71c57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 2a8855d4-44b5-44e6-87b1-e22741739dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 85a30188-ad9b-491c-b0e9-6680038f66e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 1a411d0e-5cf7-48c3-885b-91cb82c658e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 5246f788-baf0-4f27-850f-fe68e957b85c)");

unit.assert_eq16(16'h08DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #778 cff182f6-fd53-4095-bf3f-75d4820ffb6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0921;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 d4108059-e6a2-4b41-b94a-b125563b4e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 c4ee4bc2-2924-4f51-9b0f-367ccad1f370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 cf413927-fff7-46f0-957e-eb4ed24fb9de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 c6707892-f8b7-4899-a5c5-30aa51f6f37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 c1e7186a-fdf3-4944-8721-0ed7f5145345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 fd602fa1-99ed-46fb-96db-423c4cab022a)");

unit.assert_eq16(16'h09C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #779 4174c8ab-81fe-4ab7-8498-5e8de6975560)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0924;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 7071b6dd-0737-4844-85e3-9124ef8311dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 4cd25946-5f18-41a1-ad1c-c9c9ff1bb31c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 b105af8d-dbdb-4db0-9b2a-e00f63d1d852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 7d3a4574-6ede-4bed-af28-5e8a2c749fea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 28167d96-bf38-4075-be3f-a046c932daf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 6ce13ab8-ccbb-45da-93b8-68dcf7af37ef)");

unit.assert_eq16(16'h020C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #780 322413d6-6958-4876-8e4f-4d462f693580)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0927;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 b979fc66-45aa-4b67-849d-c713a5560b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 59447e1d-1370-418e-9e7a-81ba3ec55abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 c3c66666-2c51-4146-bec0-f93cff133767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 df4071ef-c2ba-48af-81c5-12cf4711eedd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 6fb294fa-9196-48ae-94fc-107798229a81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 1c97a0f2-22e9-4793-8dd3-46a34f0aca89)");

unit.assert_eq16(16'h08CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #781 41a35d43-ae04-4c0d-a0b6-7c53e2f4ebd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h092A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 e2ca7bc3-59e1-4d10-b825-4fad56b82b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 d6e46971-20e7-47db-a37d-de8e4acb6b91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 5aa8579b-8582-492a-9463-0886a88b483d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 64227bcf-61fe-4ec6-9c28-ab43f4c44299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 0c614cc9-1e2d-4e8d-92b4-42ce84311f98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 6306e163-a37f-4f25-9fe6-59fe4a4deb93)");

unit.assert_eq16(16'h0EEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #782 cc8a1042-a3dc-44b2-9723-8a519312aeeb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h092D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 8e09d930-b0ee-4a9c-ad86-c65dad8ae336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 e39ef915-2365-41fe-a483-78cde727099c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 df06f2c0-57a8-4ac8-97c4-0371274a4ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 c8142304-fc8b-4e81-aaac-8501b2da38c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 7926b205-75d6-491c-a32f-9eff7b6eed7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 55cac6c1-115a-4968-8c8f-f29063aceb7d)");

unit.assert_eq16(16'h0D1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #783 84f1e721-d881-4628-b4ff-04f6575680e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0930;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 4f25b955-b5cd-4ac4-82d6-d90119c425b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 5ee5f196-3ea9-4339-8d24-26aa90b0622b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 804661fa-01e9-40e7-95a1-93c909eb9b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 1b7431d2-c7c4-4ce6-b085-929d98c79418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 e454e6c7-f6ba-40a8-96a5-d4408b1fd801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 eb72a1b5-8d95-4167-8437-b6633f0cd731)");

unit.assert_eq16(16'h07B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #784 553331a9-2133-4a13-a87e-6c45301d9f83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0933;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 8ca37b06-0f08-4d86-a395-a0a665209349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 7143fbf3-d028-40fd-b45a-e8f4f143eb60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 007e422f-aaff-456e-bf76-d5ab4c8692d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 a883a726-f287-4876-9f27-aeeda1c95aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 49c4fb14-d2f9-4ba9-a3b8-64dcbcdabd54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 c383c806-b325-4cb4-96fe-a80e55c1bae8)");

unit.assert_eq16(16'h0567, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #785 6db6519f-a276-4cfb-8f99-35542bbcd2a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0936;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 e4ac823e-e1bd-4090-a09f-6f6d49cb8840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 ca21d8da-4a86-455d-bb2d-959b3d91a417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 da27e375-638f-49cb-8466-53eaea34c22a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 efd11643-4af5-4e0c-a8d4-80a0c81da3f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 e0cf5bec-0245-4ba5-b5df-aa6bcff96d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 63ba3e59-5a62-4439-bfb5-c51dcfc556a0)");

unit.assert_eq16(16'h00BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #786 4520f36c-4cb8-489c-bb28-3fd2cb279637)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0939;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 ffd3e6ec-f1cb-4f96-bcf1-bc67ef0f139e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 ab6f943c-e85a-4c9f-b0c8-5385e38432bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 85b909f7-b140-4f2a-81de-cbff773b7b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 24d7a9d6-67e3-423f-ab2e-2934aa8bd4b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 3fc75cd1-e982-4ebc-8ab8-e3cfcb067add)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 a3deb1cf-1781-4d9e-9dc2-11489d984e8e)");

unit.assert_eq16(16'h0E81, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #787 63515530-efb9-4fa1-910a-bf4d921f59a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h093C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 67f8750c-74b9-4e31-a102-644a47cc40c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 08a7edaf-b0db-4ce5-bf88-2f4f31aa60ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 65beb71b-546c-4171-9a63-c37980ea8095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 39cf7ac6-1bb3-493f-8c18-0d4c8055e810)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 a159d1dc-c1de-49dd-bafd-9a60eb92791a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 d7dfe653-f77a-4f0c-be5b-30f6e21632d4)");

unit.assert_eq16(16'h0A5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #788 ffadac81-60f5-4594-ab7b-01be2ef9fc72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h093F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 bc572332-1f1a-4785-8f82-eb94efceeae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 38ee590b-1fa1-43cd-af96-940d3df72677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 dc508411-4221-4523-863b-08072bcf7c63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 38e892fa-41d0-4582-8942-dc7b40b12b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 508a3a23-4645-4710-ad8f-0940f718f2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 61a081f8-594f-49bd-ab3a-3d48d93c03c9)");

unit.assert_eq16(16'h0DEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #789 f9195cd2-bb4d-496e-bee4-2b48d0c4bd34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0942;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 dd887ac8-7713-43c0-9d61-91531e89ac0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 6bb852d0-d340-43c1-b4c7-c27731cdf841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 13ae4b53-8987-43c6-82bb-31e68db56683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 7247f49d-9b8c-47f0-9793-1d19b195f221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 83e6f6ca-cb8f-4623-85b3-a805d64d7722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 f149c2c2-2afa-4d71-942d-e41a21730714)");

unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #790 b595eaa4-7599-425c-b237-a1c6002f913e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0945;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 a661e95d-0987-4eba-928c-86135c3b179d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 f78c3d40-1c60-4f21-afcf-9ef8fa56ff34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 1a618863-fe75-483c-9e51-69d7baf390f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 482395d8-326b-4d03-add3-3c22c0312c5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 9f3c842a-fb5d-4d64-8654-7cea8ebf8b72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 af04d9ec-7d1f-4538-9460-682cfc5d0bf0)");

unit.assert_eq16(16'h0B43, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #791 c123f48c-4158-443f-8cd1-8be363335651)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0948;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 fb0dd56c-f181-41b9-9900-c128255438a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 c9bb615b-c3cd-460c-80b6-ca2ea59b8b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 02bbbdc5-4d5a-46b6-a0ff-7eadedf98ed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 01b18bcb-4f74-4554-b205-15d0f4d3f690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 ccd0f21c-6888-4d11-8513-b5b9f352f502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 91394ca0-a548-4318-928c-66e45d731bc1)");

unit.assert_eq16(16'h0DA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #792 9308466d-ce88-4a33-bd24-267d6b759e83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h094B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 c2c601ee-1a1e-40b6-a4a6-0608d8c2af5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 b4daf351-51c3-4838-8657-c7ee0e541a87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 f03f3ec3-2a4b-44e2-9d61-5a5942ef95f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 58a68c94-885a-4c9a-95c7-780140d6b03e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 4d5d7c73-eada-4fae-82d8-d7acde78c95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 02c58460-07c1-44a5-91c2-e65c593d941e)");

unit.assert_eq16(16'h069F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #793 df51da19-a4ee-4405-aa3d-a9548954b575)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h094E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 51439ede-0313-4762-89d2-f7bfb265af09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 19dd590e-447a-4514-8c48-7d515a3df943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 16b10836-9a10-442e-b153-d8ea9fe99ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 46e34140-60f4-4ae0-a065-b004a3f7e75e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 da442b60-843d-4091-b42e-a635f6a848b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 d20a9404-22e6-46ef-8ac2-0f77e38acc1a)");

unit.assert_eq16(16'h0BD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #794 940bc659-1896-48a7-80bc-7efd89c3a49d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0951;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 9442da21-663a-462c-9cae-5ba8a76e6b9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 46bc0b80-74f2-4ed9-b80a-1a61b5901ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 6e0a6419-d754-44fc-95a7-c09e1dc835e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 b8049d6d-f062-4e3b-a5ba-6680411aa7ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 23da3d6a-5915-449f-949c-0957010f5bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 47a00d3a-0dc0-4325-b0e2-1ea47e8d6b32)");

unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #795 16df87c6-75d8-4380-b9b2-6ab27b68116f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0954;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 c3f459fa-ccfe-42dd-945a-19d6d6db4b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 de88a10d-e6b0-4111-b95d-f6dd214acf5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 213efdc1-959b-4376-9a87-cf4324656005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 81547a01-cc7a-42ff-b365-d60f03594905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 6f31a9fa-8f43-4039-9d3d-f5f98aba5109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 89f4f8d9-bc78-49d4-ae11-020a41df6512)");

unit.assert_eq16(16'h02F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #796 bc3791ed-f3d1-41ff-9d03-2ab1a59de48a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0957;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 e59ece6b-6a74-4732-a53c-900808c4cd75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 3a16b749-c6f8-44bf-a315-8d8bb10f60a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 ff1da91b-5e3b-41de-991c-ec614fd02c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 7bfed72e-0d22-43c9-b544-06c5f041a237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 c5ef18bf-d608-43b2-aec1-bec41efcf3bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 3a1d8459-28b3-4850-840c-e359d4c2acda)");

unit.assert_eq16(16'h09B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #797 8a5f579b-5a35-4396-bac3-3a92b022d143)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h095A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 7c68ce6a-01e4-46ba-aa0a-46e58af49e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 185cc6d0-b820-44bf-a605-427433197960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 38656b3a-e877-42bb-b954-d446b63cae78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 7bbd7de8-313d-48b4-9f1d-adc77648edab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 be77cbe0-7945-4717-96e9-426d639ffa80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 5bbfabad-4c30-4a26-9004-56785035b6f4)");

unit.assert_eq16(16'h0AA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #798 df335bc2-bb19-4684-9b86-b87b74c62936)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h095D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 5fc202f0-8c9d-42c2-97a7-638b9c7d22e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 8a32cefd-5c57-4c9b-a938-54623895df20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 a9f44899-22df-4f69-a02f-2ca1a8b7e4db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 8f741aab-09be-49ef-8b75-d35f776e6470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 d61b4d9a-659c-4ee3-8e24-c7d9b8c3a6db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 000bac1a-c51e-4e9f-8223-8972defdf5ad)");

unit.assert_eq16(16'h00D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #799 3a284407-8479-4b20-a484-537158695bdb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0960;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 33d802e5-e488-45f2-8288-55d4c8aa6f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 3060548a-84fc-4644-9f4b-e962743e0da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 e7ee9c42-874e-48bd-85fd-363e7a09dc47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 eb895870-87f8-4b8c-a379-4247d677ba5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 6cede89a-f21a-40da-8a4d-5bcf9914295e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 13ecca95-b4f3-4643-a20d-3352e2a43d9b)");

unit.assert_eq16(16'h0EF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #800 3ed80223-0012-42d2-a314-d7350fd64c72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0963;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 d758b96f-153f-4233-ba1e-f4a3e0443f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 ffaad20b-022f-46f6-9fb7-c909a9178635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 3934d03e-6fc5-4618-9377-e45d31e58be7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 4fc3a471-da42-4b16-bc0f-16dabe9c9d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 e9b592b2-25a2-457e-9315-46fc25829765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 f8604f9b-c709-4c83-8113-29c7915662de)");

unit.assert_eq16(16'h0F2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #801 66be2ccc-57b6-42ba-a61e-de16da3ebd25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0966;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 f1069d7b-a74c-4936-a1b3-a3a725705d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 c749601e-5ad0-491d-9621-c51e41901291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 b0f90210-b826-44ec-8d9f-24919a8c6267)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 2b39f053-000d-4189-949f-6b4b740b6609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 49005b26-23d1-46d8-aa66-9183ac370f85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 7d29082e-1d40-48c1-a72e-8711b963b84c)");

unit.assert_eq16(16'h0AE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #802 fcdead5c-693c-4b2c-9513-f5e2553c76a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0969;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 30084613-fb34-4a1c-89f6-b36739c55bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 983235e8-0160-4ae3-90a3-dce5e9834a4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 72ec653f-6f8e-4274-b3f6-c5eb6f133495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 11022488-1432-424d-a7f7-78281a5f7071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 0ca0398d-1fcf-4b49-ae83-e3a1d848182e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 39436957-9845-4a74-99a4-0f7a33bd1c12)");

unit.assert_eq16(16'h03ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #803 8b90f6e7-4f05-4eaf-9b5e-ed63d75bad28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h096C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 6256cbdc-bb90-49d0-9f30-b8002c9238c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 a9ed14cf-813f-468a-805a-0b698a4c3bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 619155d0-3401-43e7-844b-d2ccaae7e2e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 18a819b9-9dae-4358-93a0-33517cd9fc5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 4adcf889-a96b-452c-a5ff-4dc705bf8f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 19772612-06cb-4ee5-b0ba-0e3f15192c91)");

unit.assert_eq16(16'h064A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #804 9b2fb657-5fdd-46eb-a257-adf73cbf0981)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h096F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 6ef89dbb-ec24-4b2b-9c9f-7f2c6bf9311d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 13ed2c06-1356-4bd3-a2aa-8d85a2b46e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 37504cf3-ae90-481c-82f6-3a842431f1f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 c39d8494-fc26-4b95-b6fe-943b0d7df91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 23825c8b-577e-4f82-9aaf-ca0680dd6391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 e9faaed5-b6a5-4ebf-8cf2-57685cb80d74)");

unit.assert_eq16(16'h0977, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #805 003ac18a-a69a-4f6e-adc0-f80171f42886)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0972;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 68e476b6-7b2e-45fe-963e-0cc12af60445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 fda99955-90aa-437a-b830-62ff70742cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 a7f64cc2-200a-4a2d-ac09-1f06907eb4f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 d68959d1-4d8e-4dfa-9edd-fda66a9775af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 3904eb7d-12fa-40fe-bcd7-90f0206ff602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 56ef8f5d-ae1a-43bc-97d1-7cd8419fa692)");

unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #806 495f1576-88c5-4bc6-9caa-5a431246d613)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0975;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 c6f4705f-f6ad-4c59-a36e-49491579840d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 49ea123a-824d-4b60-8715-82d66156e408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 04c39306-011d-445c-8679-77690626e88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 ea2f5a83-cdd1-4df7-aa04-5c2badc7c1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 bf3c5a78-7dbb-454b-bb4e-d75fab348cb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 30467564-69f7-40c0-a647-f3aa7cbfc0cd)");

unit.assert_eq16(16'h0363, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #807 cb534f2e-54a3-40ba-86c1-2c13d985db4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0978;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 8f53fc30-3984-466d-9d33-24d5ca69398e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 4710da3b-5100-4dd0-939b-be9cdc803e97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 49205437-186a-4ddb-b931-cfc90230d12f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 99a820b0-5f85-4a6a-bbf9-d934700294b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 985a3ca2-b5d1-4d6a-b11f-17ae777a6429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 565b70ae-0915-496e-8b03-1289f4e0c856)");

unit.assert_eq16(16'h0732, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #808 4c50faf1-2b07-4e2b-b126-ea6ea07826f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h097B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 de58f1b0-8871-4f05-856a-7ef5ac7fd8b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 c01a23a2-4ca6-4a5a-b004-c0c7fd072399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 56b6eae6-6321-4a2b-b36c-12c05bd54a0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 404e37f7-f524-401c-8a6b-b922fe854613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 51bb8942-8b65-4b54-8830-ecd08c9554e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 248240e6-9602-4dca-b7c3-be1697ef7bde)");

unit.assert_eq16(16'h0C4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #809 79a79320-fddb-443e-ad3e-5bbd3b9a5576)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h097E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 cf5553d7-51f0-42c8-b8bd-709ee0aa2905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 9f6add2c-37b8-4f75-9966-4dc7a0e50ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 09975730-f938-43cb-8a8a-19572d89a29b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 878e03ee-3a81-4685-b934-8a2f6c4f74b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 0a2628a6-fbb2-41b9-8153-4111e2367d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 e8deda07-0a87-412b-bedc-e0eb7aa84da0)");

unit.assert_eq16(16'h0C63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #810 d0f847fe-739a-4000-a05e-637fbf959d69)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0981;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 9b74bf79-1a6a-48ad-a1fd-280ac74d2264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 28fbd2f0-06ad-4eb5-b38d-b0a94f94031a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 0d593821-e619-45ad-8e18-322eae4c29c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 a24aa8ec-e350-4532-b7f5-7d52bee5b4fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 a464f0fe-c915-4603-898d-5f2ff3c1576b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 4503f9bf-51b7-4444-a92f-52ff3a0c9737)");

unit.assert_eq16(16'h043B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #811 a74d03c9-2934-4c1b-a11c-5de09d274d81)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0984;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 2086b637-0f42-4f68-aec4-4d25b385ae70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 ebe6efaa-6ad8-4cbe-838d-8949ac7f5f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 f1443b48-24f9-4416-b40b-a76dd3720e81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 83bbec99-31f7-4111-b522-73cefa0b76ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 32747664-3d1f-45d0-a845-1f9480f311e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 1dd3de45-6c29-4f4d-928a-8c4e309db49d)");

unit.assert_eq16(16'h0498, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #812 cce6f1e4-b045-4634-abfc-3b0511c218fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0987;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 bc4751a6-7bf9-4988-ab7f-8465809d263a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 19a1f2cc-027b-4703-9a0a-6af1f3674bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 f89fb45e-5efc-42f6-801d-1f4e80a631f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 f285fd7c-afa6-4c84-9e0d-eeecbe6484f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 dcd54d11-6455-4c16-a109-07bf53798cef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 f03afe1a-2a81-4414-9ceb-f3d5c87af455)");

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #813 1b60e31a-6be7-461e-89ea-c04232e86d34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h098A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 b974c825-046f-4c7c-aeae-b3ca814a5bf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 55dde6eb-3541-4bf4-9e08-581483b53ca3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 4f8c256d-ec12-4706-bcd5-13d27c21c2fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 562b35e6-49ea-4d42-b55c-3fd5a25a7f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 320290a1-6b67-4738-a0c3-835a9b595e3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 36a809dd-f556-4094-bc87-d7ed5c335884)");

unit.assert_eq16(16'h0E1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #814 2040894d-cd89-4968-9429-0078ec5bd409)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h098D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 ec2daef2-4d32-4771-bb32-ced7f5362e88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 8c4edd85-7dff-4a75-8d84-6c8e9599385f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 c2f5e9a2-3a0b-4c70-9629-5d80fcbb0e1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 4a6c4e1f-327b-43ff-9ec6-3dccfcabb80a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 b7be85e2-d610-4007-b7f4-fda015bc8107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 7d09e8c1-6d39-4bc5-b09c-4b8f69358a18)");

unit.assert_eq16(16'h02A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #815 1e6ee7b4-6f4a-4387-b97e-c354fe098113)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0990;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 efd2ef65-6820-47a0-a6ec-2a7918896c33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 173144f5-5d58-4e5f-91d0-e0d44d847c88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 fc81d8cf-ee1a-4943-8ec0-d0d2e0189fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 cd79332e-ce65-4498-8b97-6891b9a761ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 ab93c9ae-3c8d-4360-8560-6afa64bbe3ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 bcb80868-f67f-4280-81e3-32caaf56ec58)");

unit.assert_eq16(16'h0FE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #816 79e57e95-9703-456a-a4e2-bfcd222b0266)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0993;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 7217a0ea-f546-4d36-9e46-85e6c183d006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 c7e4a822-56ef-46c3-b3f0-40e05091d6a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 4b1000a8-d712-42d0-8704-e4d8a368536b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 d77889e4-8cce-4043-8867-b9cba55769e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 c62a7ff0-ccad-4c42-9da6-559f4e447f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 2ba94ea8-a85e-4d11-85cd-a5acd6eadc75)");

unit.assert_eq16(16'h0F20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #817 487f6084-c9d3-4b0b-aff8-673c0a01284e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0996;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 7aaf8be8-5eed-4e1c-b4b2-ab6e1d3f1796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 4d029a28-51dc-4827-8557-abc088d19635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 c116becc-482e-46bf-8c26-edafd4fe7649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 e6ddbf73-ce8a-4ba2-b9bc-a7f4bf8fcdd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 4985cb50-4562-4ff0-925b-442aa0a8fde3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 b98de965-0de4-4a8a-b8d0-52271e810b3f)");

unit.assert_eq16(16'h07DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #818 84066902-e2e1-4e84-ab4e-2b9708a28289)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0999;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 16c98ddd-b881-4b46-b897-309c77ea34bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 abdfff84-9694-4629-a3c8-ebcf2b8c19b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 153d0e96-0829-4600-8c10-31d4a55ffcf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 38db3742-d530-4076-bf50-64a4777044df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 86681c3e-f57b-4ecb-ae6b-01fb60f5d77c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 df56ec0b-d1a0-4e05-ba31-485b4a775116)");

unit.assert_eq16(16'h071F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #819 af85c6ad-2a77-4e06-8227-753e385b5988)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h099C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 cf7c2c08-e821-446d-b3a4-3de1db49caab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 e9daae36-6fb4-4b29-812a-cdbbe2f1a818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 702ca67a-90a3-4efd-9213-aa2f8f756fea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 be5a3d43-7ca5-442d-b62e-be2a4a696138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 1c870d6a-3e23-488a-9ecb-bc26a7e1dbd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 a18941d1-238c-41e5-9460-f6697eae15d6)");

unit.assert_eq16(16'h0CCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #820 4e327e06-91d7-4dd4-85fc-280a7e5bb775)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h099F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 6b66e0e8-0c72-4b8a-9b73-5114395d317a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 42da8217-d09b-4080-a5b9-1ba974ce9804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 deed5e4c-8931-4937-9da6-e6c41f44a7c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 cd89c20f-dbe5-4d70-9395-b6889d38a08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 632f2474-54c2-4eeb-8693-cd34a0a40107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 472a1c93-52c5-45ee-8079-5340553e55b4)");

unit.assert_eq16(16'h0868, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #821 21790476-fba4-46cc-b463-5ba75a0aa0b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 18e4a671-66e8-4451-909a-8c3202ff5f7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 7fd4458a-5959-4df8-96b6-ebe92c2f6216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 1ed951e4-2798-4b0b-aa52-e166c3f27631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 7cbece82-2abe-4cb2-88b6-2b4fb1975b11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 4a2dc5a0-fd1b-4d06-a57d-2cd398c8e668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 a1cf8a68-3561-4bfd-be59-68782ca3d5b7)");

unit.assert_eq16(16'h0600, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #822 4a9f1d03-a77e-4c73-9159-11b59e154697)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 11480ed6-26f3-4c28-b85f-b2ebd6c23f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 70a10f7d-2d6a-47d5-8382-d68b93ebfc6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 4c42d624-680b-448c-be2b-85d22d049f04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 236d5270-7dd0-4e96-87cd-49836668d4cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 a3fc0b5a-44b3-4389-8727-7837007190f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 a3763040-13da-46c3-b516-06910a64a4f3)");

unit.assert_eq16(16'h0EF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #823 ddd654f1-d603-4130-8feb-a48407497a3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 a6e354cf-24b9-4bf3-85a8-009c6de679f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 22deb8c8-743a-4b3d-a5e2-b0c0176d7980)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 a31114d6-4472-4d71-a287-acc6b19a1231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 eec2ce00-45bb-4e56-bad7-5cc76fad6f3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 b11e2d5c-77b7-46b3-bd44-f2068f5e50e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 31c32f7c-1cb5-4c90-8ac4-d00e8dcbde10)");

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #824 4931b15f-63ef-4c84-9099-5d8e1906a748)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 cf6e071f-ecc8-4345-b15e-7600ceb389b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 2242eb8a-b1c7-4b88-9999-700daf9f2bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 3eb82d64-53e1-48de-91de-4b37c4880f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 aaab1ba8-c67a-4ab7-b571-c9086d5a84f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 6d58f661-ad15-4b2f-83e1-8850e8ee67a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 cfd16b6b-f4a6-4c32-a60f-7d0a0b379062)");

unit.assert_eq16(16'h0467, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #825 496f483c-4a18-4567-b846-6ca6bb33941d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 f65da053-1d9d-4069-8ed3-8d6d504cb53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 2e4430f6-7cf1-4fc0-8dfa-5cc1ddc48d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 12201a4a-0947-4ea7-bd3e-6f4373e35ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 9e656d3c-1918-4a04-a3ab-407489cace29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 64329396-c729-4946-9eb3-15804a88714c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 b8120670-e974-4eb2-a507-1240af2e0d8b)");

unit.assert_eq16(16'h0D3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #826 d3b46fcd-02a3-47ae-bcd2-a34190ade1ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 f36428c6-5bc0-4dc8-98f4-daba24e3c8af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 bb35c2c7-f94d-47f8-94ea-ba21519f2e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 d0379aa5-6fb9-48b8-bcbe-ff1fe0d7ac40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 7c8ec047-8ae0-4f1b-9e29-2146a46b51f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 0e991280-8152-49a8-9d53-854ac7350a7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 1429f36d-79f3-47c1-b782-db6a76266794)");

unit.assert_eq16(16'h0DCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #827 adb211a5-7df7-40ab-b1a6-014e81b7ed11)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 c304b8d4-176f-4773-8031-d15e0c7f0ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 ac36af07-176e-4db1-9cd4-18e4bfdc0b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 8a135cd7-7d33-43be-930d-42bd140ee48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 c2c25f6e-f1d1-4b17-a97e-babf13a9e820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 3ed612d2-7758-473b-a723-479634eaabf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 66825ff5-3e60-4cb3-b110-d0eb962c11da)");

unit.assert_eq16(16'h0A8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #828 bf47c40c-e875-47fd-b7e9-6f00afc13660)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 d53b375f-9c0c-4428-bb94-3114e045e9de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 b573e06d-93ba-4b80-b7a1-d7f10631cf30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 94485148-ff03-43f3-bde5-9856b24b8daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 d9d20bb5-6049-4314-9a3c-e10865560972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 dd9e6baa-e7c2-424c-95e9-63315e03021a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 21f0983d-daef-4a9c-9d52-934408d7a8ac)");

unit.assert_eq16(16'h0390, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #829 f2cc21ee-5dd3-44a8-bbad-253084fa3990)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 0d65db1a-2b42-4664-a304-0b77be7f2226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 4cece7f7-f2d9-4164-88ff-f85a3193e9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 2423abe5-a802-49de-89c1-93ff9ce0a7d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 47314745-9190-4fe5-bcba-e951575666fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 148f94b5-b4f0-433d-81c9-cfc52c8e185a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 7abc22b4-d548-494e-ae0b-26f58473b98e)");

unit.assert_eq16(16'h0FCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #830 b5b22747-d934-4214-bd57-63b7c3c7f2fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 6bf8f1a7-f367-4645-b978-7f5a579700f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 516c9e64-6b2f-43e8-9df0-b440e5899633)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 9e0c7e26-0214-46fa-acf1-c7d097e64cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 b17d53ab-b806-4526-b6ad-2aef7b37e88c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 65dbc09b-e889-4f27-bf87-a5ddfd7a5a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 2dcc7a53-9a2d-4b17-808a-9440d80e5e7f)");

unit.assert_eq16(16'h0A50, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #831 75a6eb4c-124a-45bd-a854-4a889885f0d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 9d983530-a8d8-40e1-9ba1-e5d4f2fc3ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 7ed658d5-d9a3-4989-8c61-df0266714476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 95d1bd1e-35a9-4f05-b949-4a144ddece56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 f90c9f0b-f84d-4850-9d95-54be10dae035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 4875a8cc-d63d-4ec2-a768-5dd25ade86cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 a8f46301-b523-4203-a939-4fb8cf921f77)");

unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #832 74d88e80-68cf-4748-8401-dbb84253ef99)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 1ffd12c9-fad4-4b3b-b18d-b10f1ada270f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 64ac4dd3-7a41-44ff-9f13-3d5ddd51ee0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 d4a56845-3f14-4f1e-91da-aee9929c4b5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 865e71d9-a5ba-490e-beda-ad82ceba0ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 d1387aa5-715a-400f-b0b5-5caf574299e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 af50f20c-6e51-49fb-b9d3-f6e1ce1510c5)");

unit.assert_eq16(16'h09C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #833 ce01a5ff-56b5-4fb0-9653-13084867de6c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 e55dc5b5-fe39-44c5-a1b8-d5c612452dd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 07765afa-fea8-4619-8a00-880cd74172fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 bda49c03-3f9d-455b-bfa6-c0697aae869e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 e9c2de63-a90a-49dd-b31f-1d0ec5b23a0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 4bd08874-57cf-461e-b2e7-460b28617bd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 3174ed0a-13a6-40df-9dc3-161d9ccf86f6)");

unit.assert_eq16(16'h09C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #834 af068646-41db-426b-9d09-f4a449d1239c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 0367bf2b-7501-4781-bcfe-bf10a5671959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 29ddd924-aac0-43d8-aaf8-1fdc13a1e2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 9ebe5422-c4f0-4fbc-9df6-e56c92905838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 55863127-4b47-473b-98db-b54390dd3439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 ffdc4fb0-8653-4a74-a7e1-d67060174642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 622bcdfd-fe46-4d4f-abf4-d7401317f2a0)");

unit.assert_eq16(16'h09CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #835 7bdbe922-db9d-4784-9d2a-e4c4a6d38138)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 bc382a0e-c742-4011-8dbb-6b6d8cac20d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 b536deae-9d3d-4fb0-bef4-8495585fd9e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 3d18f2e2-5048-4f71-b764-7c0e54ff1e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 b8709464-deca-4413-954f-1c2fba8be468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 9216b3d6-b0a8-4507-90c9-0c7ddc25597a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 497b8631-4a7f-44a9-9cb6-ffc09c765b8b)");

unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #836 1a0e1c3a-1199-4ef2-87a5-d1c378292b1d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 758d48b6-475d-44db-9caa-03041c91668d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 c25d27cc-5de4-45bf-a4ae-7e14c646b3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 275bffae-7400-4757-8c08-70bb3bf147ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 951c86ae-71a1-4224-b06f-70e9bae46467)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 4751684c-e8eb-4d31-9695-35a92aeb96a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 c51c9586-3fa0-4570-bfb2-2831e78007c7)");

unit.assert_eq16(16'h09D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #837 ecf9dfdd-4e5f-4efc-b670-bef158693a30)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 2f09e8ae-e9a1-4d41-bec7-afa623badc81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 3cd70f0e-6161-48ff-8853-45471888f0e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 f470d8a3-43c1-4ba4-8b08-2ef1f3423aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 8ef0fceb-b180-4478-8218-470291e5d5e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 90964bd4-1a34-4636-aee5-d1a5a95f64ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 b9f8bf3a-7b4d-46fa-9baa-e1993ba4e0fc)");

unit.assert_eq16(16'h09D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #838 19c8daac-8de7-40d6-8ca7-cd81cfa6bd92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 3790c696-55c2-4546-8c44-372ba1b13d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 501d2474-20db-4b6a-9a4c-76e80d4fda68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 35ff6e87-59ea-4322-8e8b-33939c48ac03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 d0892053-6e80-4d68-b8a8-c95f0a411e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 cec81b81-6ed6-4181-b3b7-7d11291881cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 832a17a5-7089-43ca-8a23-c9071ff16f80)");

unit.assert_eq16(16'h09D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #839 b0d9be78-ccd6-46fe-980f-f0178ee52c09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 60cd799e-1f20-4751-8c61-1990ea4a8bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 c52775d5-9e67-400f-a6c1-a7bdeb0b28d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 b95fb48d-69aa-48cd-821d-59a1c6d17da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 7a0c187d-4406-4943-8db5-6b5298c53c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 7e66617d-69b7-47f0-9fce-212510d4c979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 27fa98a7-d303-4cab-8f12-4843e8e19148)");

unit.assert_eq16(16'h09DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #840 3e2c4833-6eed-404b-ba50-d7c46f161943)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 350aada0-2e81-4fb6-8228-85b1d84d065d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 50902033-99d5-400d-acce-5e2ce3e300e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 9aab2b15-b692-41c6-91c8-4f53cee2490a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 223ccbf0-c2a1-442e-a8ee-81512f8238b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 3a11e2fa-a326-4c51-838f-a188348129f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 c4718aca-bee6-4e8d-bd45-65930a412154)");

unit.assert_eq16(16'h09DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #841 c71e81f1-fbcb-40cd-b533-72017ffbdbf8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 064de867-4496-43fd-bdb1-bb89c192ea3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 bf7623ce-8539-41e1-a04b-9e7203ca7b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 955c8fb7-3ebe-4f4c-978b-1d93da5728ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 5b141d63-6a90-43ad-a6ad-d4a616d198fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 9978e864-44d5-40fc-b31e-828c93de12b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 8e8a9b81-a342-4bc7-bf88-c79e893f8f4c)");

unit.assert_eq16(16'h09E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #842 271e0053-9bb2-471d-baa1-12fac4bd41b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 fa17d85c-d4ee-4b6d-9181-546898c59df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 2d056b78-23b8-4520-8afb-36082b8bde70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 75cc0532-b66f-4c22-8b3d-08a212913a95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 1b849457-9d31-451b-9664-d29caba4db88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 ccc4dacf-3709-41d4-a6b8-4a0bdcb4403c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 d747d745-0651-4b75-b3c1-94bdb2b87a42)");

unit.assert_eq16(16'h09E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #843 c0a8a304-c9fc-4e75-abf5-6aee0b9a8a77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 2d358e1a-d4ff-4302-a8ce-1fded33e4828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 46c08518-2579-4e85-a77b-947cfa156d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 4bfb0ef1-87b2-4806-8048-5c15005e7371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 57665ff0-a419-49bb-917d-832db68fd552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 5a40b28b-c140-4c91-81c1-18cb7cfaf325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 1f831e29-cbbc-4f02-bbe7-06fa8750a524)");

unit.assert_eq16(16'h09E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #844 debf3d9e-d2cd-434c-9ef4-2da6270f4f79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 07c7367f-757e-4a63-9ee2-03ed133c19c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 32e3ad68-16c2-4eb8-b759-3bc20346623d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 079956cc-3c6b-409f-9507-c0d1818d1f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 eb1454af-70a7-4ce2-8707-d1604c140137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 268cfe9b-cd3e-4978-b936-ca1ecd56f30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 5ff0bc69-e556-45f5-86c3-2eb617ec0616)");

unit.assert_eq16(16'h09EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #845 3060aba2-486e-4ad4-8095-2f854819ee48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 4ed885f9-c6b5-4080-8836-366a2a28f8df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 fc6c3faa-47e3-4497-b7a7-5efbd09fad37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 d11ed1f8-9d70-4395-b250-55f0f361d744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 a7168e00-fbb8-47bb-bfda-d62ef8504529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 563fa6d3-fc91-4a2b-91aa-f2a446786a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 9132d433-6b7a-43d1-b91d-8e5cd35499e2)");

unit.assert_eq16(16'h09ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #846 4bffc1ab-1e70-4ece-936e-c44be769153e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 b8a0044e-3aa8-4aee-b8f2-0250b57c1ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 829c24ed-3272-43f3-92c7-a2b96003787f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 83745f4f-b5b0-47ac-8795-d578ce04266d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 50b94760-605a-4c37-bd0f-bef00f73cfc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 0411de16-0749-4e81-9aa0-b9524f7b9305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 65979aa8-ae42-4c38-8333-758805ed244a)");

unit.assert_eq16(16'h09F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #847 c34a9533-fb0c-4af0-9cdb-31420013d566)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 54c9b0c1-7303-4afe-9fb2-e5f9d53d6009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 9dc8ca2e-6a6e-4c52-99ad-e6e69f3e33e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 baa30d70-9739-4d63-9bc4-f5dffe018494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 633da8a1-bba6-4fae-9073-137cc24c2218)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 9a406eb6-94c0-45a7-a8ca-49fd7bf8a5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 b8be5fd8-7e7e-42ce-924d-4c7161a5fe4c)");

unit.assert_eq16(16'h09F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #848 c843781d-de18-463e-aef4-d87b5dbc3d43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 6a3439b1-e130-4520-a7bf-cca94efae462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 ed103688-0c13-4707-bd2f-7e50e9176fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 91dbb2ea-5777-49f8-91c7-f8f0bf774ccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 2c8a54e8-3e7e-4b1d-b08e-fe5239c69f49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 bd2a6d6c-f756-4e72-ad61-f9a6da63d1d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 99e5312f-55f3-40fb-a697-8705af5395a4)");

unit.assert_eq16(16'h09F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #849 fc9b57c4-6620-481d-9ec6-2dc6ae83901b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 1c233816-3b6b-41a2-a83d-6345828491d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 5196a226-fb55-4c18-8371-fb5e932bcbad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 efff00fb-84c1-4b1a-8f4b-09293bffab3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 99ef2dcd-1ef8-4274-a41b-b77a1c6ee9a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 b648e974-fe5d-419d-b6f7-4bfa8dbda885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 1475309b-bfe8-453d-8c33-8166a71cb1ae)");

unit.assert_eq16(16'h09F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #850 08f3a541-71ac-429d-b4cb-c00fae66c024)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 3968d249-baaf-4ccf-8d1a-7a496adb681c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 3462a4cb-8c41-4b94-b995-6d9e7c949515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 8d359b33-dc5b-4969-a28d-4af8071b1c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 fe594509-5d33-4737-85dc-ce7bbbb22d8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 82c9bd2b-dcf7-4141-9182-ec0ee3988000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 b3f83d90-4a67-4d26-be51-233f0ce9c0bf)");

unit.assert_eq16(16'h09FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #851 ad309226-fa69-40b0-9257-8bb0f4bb9531)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 c7959d69-88fe-4096-966f-62b0dae38d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 fa4c552b-3d60-4943-86cb-21ea0f3269e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 1e322aa3-50b5-443b-a0f2-05078595e8aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 51e57fa1-a1d3-4b45-9d99-22121e63c2da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 1256520d-235c-420f-940b-848e864d25fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 f0cdd8e3-4d02-4278-afd1-ee4abe4993b5)");

unit.assert_eq16(16'h09FF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #852 080157ec-ada5-4ba7-a3ee-399a52382a22)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h09FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 5c763997-191d-4859-ba49-00ba75433395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 bd73938b-ee10-441b-b28a-9da2d6c93445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 dafdeda8-0964-4be0-965b-a10f4a4f94fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 2cf96d47-5d35-42fa-bd3b-acefa548c074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 ba57d9cc-fa3e-4476-a8bf-3bf409b72a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 62c83781-72fd-4d0f-ba6c-88a8b5d708c9)");

unit.assert_eq16(16'h0A02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #853 7f058649-12b0-468c-b4bf-46c33a1cf798)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A02;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 b00cbf0f-3f66-4da9-b0e2-b1a6a52727b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 ffc9be8d-325f-4da5-91e8-4508aaa46d5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 084887ac-c3b8-4a09-91d5-25e21632e450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 4ab9694e-eadb-4fcf-a7ba-9d21e731ea67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 44e4a8b7-bc78-4e12-ac6b-e0cd5ddac455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 464f2833-e365-4819-a434-f15e477a4e7f)");

unit.assert_eq16(16'h0A05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #854 8613720a-690f-416b-97e4-31b56c028c9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A05;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 032f4d56-3a2d-48f8-80af-f3924b6a560d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 713e66ca-068b-4ebf-96d9-1ab1ea5c358f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 a945c561-5f74-40f0-96a0-ec0271907c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 d6929018-08f5-4ad4-a36b-fb87232f2fca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 10067f4c-fce9-41a4-af12-c995a7382d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 b05f57d8-b695-4aaa-a7c6-bd31df62dece)");

unit.assert_eq16(16'h0A08, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #855 d85c46fe-7861-40a9-bff3-bf3731e46ebb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A08;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 a9b63c58-319a-4377-ad07-5b14f9cea23c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 b6cea35f-2022-4fec-aa9f-9def762a1cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 81ce26e9-7bed-4aa2-930d-8896797b0a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 91c8601f-8327-463a-80b7-6ad6172e95f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 11418d6a-9ca4-4e61-a894-88c0204205ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 f17d7acc-9391-469c-a561-8412f3cc9629)");

unit.assert_eq16(16'h0A0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #856 3eff2831-9a25-410d-bce1-29ed7782945c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A0B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 908034d1-494a-478d-abb0-f9ce26c13f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 51749190-5a7d-46bc-922f-8223663c15f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 a6a79f3b-2486-4794-b83b-3f7f6f351ada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 9cb7ab29-5256-4c39-8a6e-744284431ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 dd650c9e-ac80-46a1-a207-2a86153793a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 dab5be10-41ec-4659-9598-477835913212)");

unit.assert_eq16(16'h0A0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #857 f7219802-e96b-4290-8d3d-38176b860230)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A0E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 90fc367a-b07b-454c-8832-8fa5a90b76ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 e7bf659a-bffc-4f56-bd7c-d662d014a3a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 c7e0539d-86c3-451f-a986-ab000508371a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 eadf3af1-36d7-4ed1-8814-1064d1945940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 82c2bd7d-44d4-484e-9586-341d192e9ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 32419dac-04ab-42b3-b6b2-8ddbf8ac07d9)");

unit.assert_eq16(16'h0A11, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #858 397b4985-c789-4223-82e7-59d067347f32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A11;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 614710c3-12e7-4259-bdb4-0e55ee213315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 b20dde6a-4efb-47d0-87fb-a51b167d984b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 b31970d9-b5bc-480f-a4aa-2492e44f10c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 87f1a55b-6be3-4a6d-af28-f5296db058bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 34ae3465-f929-4f1b-89bb-ef184c647c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 4912ebe6-46a4-47ad-b60a-a3ff3759fd37)");

unit.assert_eq16(16'h0A14, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #859 ca3673e2-1a26-4417-8c2c-dceb0963ac32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A14;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 da29ce81-c437-4415-a2d7-fc54a97fba16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 85c2ca26-d30f-4b79-bc2f-f7c20ddfccc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 f1a1f68a-7804-4d76-ad58-81ba5a156337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 3c3feefa-4f61-41f7-b43b-f221b431ceaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 f7779eba-51c2-4042-b90e-80ad81ae3bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 e9e1fe6b-d93c-4318-8844-12054c0336fc)");

unit.assert_eq16(16'h0A17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #860 808678ff-ce05-4b0d-a83b-a116673ee1fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A17;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 2ca3e61b-ab30-4332-a85b-4917fd2aaf79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 58cfc0ee-6d9e-45f7-96e4-8eecf9ef809a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 099503e3-476e-4e41-a6d6-a62ca2532298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 45206583-d0da-4c1d-9a52-d177d0b7058e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 7c23a244-a7fc-490f-84a6-6d7241a77556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 22794ce5-e2e8-4601-874f-5ed851a89f5e)");

unit.assert_eq16(16'h0A1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #861 ade81c7f-5fcf-4f0d-88ac-6e1763971720)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A1A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 a0817dad-cb8b-40cd-9f54-8f607ba0aa39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 04d72344-9889-4862-959f-b901198feaf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 c623ce2c-bae7-4a30-8f8a-864f405c787f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 b4413323-18f7-43a8-9b45-05081906744b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 474cf892-c036-4134-a6dc-0823a58273b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 9673170c-cb32-46ef-bd74-f57f91d0b6c3)");

unit.assert_eq16(16'h0A1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #862 126ccf23-7661-41ce-9a33-1d5ff8bd5721)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A1D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 5a565649-c6b1-48cb-b6d0-e62e4fe3599e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 b141a675-772e-4806-ab2a-7adb85293326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 e26eb054-afdc-43a4-b4a1-6e21d17d4344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 0a5c99a0-7c9b-460d-8da0-65805708e879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 234eccb2-8438-44b7-b1f4-28df1c60e268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 9b0b16b9-e91d-4ceb-93ca-11cea0ae9c4f)");

unit.assert_eq16(16'h0A20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #863 ffbfc214-cad7-4577-965d-9341a62e4855)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A20;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 c456c2fe-bd23-4f87-be60-435bbadaf7b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 f36c6ead-1f38-457a-8c66-8f8b30519d69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 95a58e8a-715e-490c-ac05-e68220344a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 74498a4f-1809-43fb-939e-bb5bdb1532ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 9c000da2-c11d-4c0d-854e-a5df42f447aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 55998b77-d5df-428b-b67a-c1f6bfa84538)");

unit.assert_eq16(16'h0A23, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #864 c121cee6-0dbb-4d62-ae7a-63244011b7f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A23;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 d08995d9-7ba3-4629-8040-2de60160e998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 d0fe3629-14dc-4aab-8494-23305408522e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 7cda1873-e644-4f76-907f-8d06bb6c13da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 a9c90b8c-0e25-4b42-8f00-e09b896df433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 0b5b70df-d5e2-483e-8aa8-dfb5624a0c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 a29bb313-eae2-4094-8bb4-458897d6f449)");

unit.assert_eq16(16'h0A26, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #865 5376ef1e-2cca-45fd-807c-f79a59875870)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A26;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 ff5866f3-18c2-4aa5-b0a4-2bc4a4c2775a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 71048e6f-a0fd-4ec3-b6ba-1286cc016d4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 6ea139e9-0251-4700-a4df-28b5e9e27ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 9619608a-8bea-4c3d-87eb-2ca0b3ddc7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 10c37193-ef06-46ce-b719-af3d2bf83d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 ed268158-d088-4a60-8d27-f0b5ff4491e1)");

unit.assert_eq16(16'h0A29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #866 800efcf0-0a4c-4877-9995-28181769b8e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A29;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 75061a0e-bc7e-45b8-b84c-9c33fe77e726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 e37b713c-c224-4b7e-a7cb-58ce32fcc28c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 c1789148-e756-4314-8c30-92d5638f5710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 6b6f7808-015a-4f80-927f-094b71dfa578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 3767a5c7-9417-45e7-a9ca-e43f81d7c864)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 7ab2de97-13c6-4622-afdb-f6c64fd4f5d8)");

unit.assert_eq16(16'h0A2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #867 32924a96-cf7d-4a2d-81e9-7398f3dcea3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A2C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 80bea81a-41c7-437e-a986-2f47d4ea7be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 eb20957c-a3e0-4cc7-8643-40597c9b3045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 6ca827bd-bac0-498f-be79-d3be55dfdc9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 3d643d8e-854c-4d99-99e6-4146dac0d315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 18afcadb-fd99-404c-87f8-fc9a2879d01c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 5cc1345f-7afb-4a01-8f95-603a2ae0e4cf)");

unit.assert_eq16(16'h0A2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #868 ad02590c-7e92-40bf-b5ff-d59d96eae1df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A2F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 1cda2f67-9b10-42d2-a799-d7dd8f15efe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 9da06a2c-0d4d-4ac2-93ed-416c76c74753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 ad81fabf-d10a-4168-a02b-a80795048c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 858189e8-5f3f-4c75-8406-60ff6f4e0978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 de5e84f6-7b83-446a-8a03-5e9ca0459b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 189b4e0b-87ea-4149-b0e6-629d205d711a)");

unit.assert_eq16(16'h0A32, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #869 0cfb6074-e35f-464b-839b-b59c1f0cfba1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A32;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 bfcc6883-4353-401e-ade8-97aaa087fc59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 0a713dfe-1786-405b-b627-b48911ce2ea5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 54511731-4063-448a-9dfd-0ba6da22391a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 7aa912f6-36bc-489a-9183-d607b767e048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 2187a1a8-c3b1-42b4-9ef6-2e3183c0b740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 62f4de4b-58eb-41d8-bc6e-644b57798430)");

unit.assert_eq16(16'h0A35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #870 92edbc4d-fbc1-4ad8-85e9-4ed046c90471)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A35;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 625c1c7d-5408-4c7e-96d2-ce32b83ca88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 11c4f08b-8f5e-4b49-b0c4-ca7de565a313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 73534053-8a53-41eb-a9e0-515bcead12cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 0acfc5d1-a177-4174-99ed-3b108a479be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 c19d916b-1042-4799-8ecc-404a4a78e0ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 f2075a74-00d2-4f9b-b5bb-1fbe2856b67a)");

unit.assert_eq16(16'h0A38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #871 97b3e311-3b51-4a50-887c-f82c0326d10a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A38;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 b29fccba-4dd3-4f26-865e-91618af7372c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 f4f56e9e-3af9-4cf9-bf17-dd5c3b503c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 44d46bd4-eb7b-4283-a945-87f1bdc346ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 91866cbb-a2d3-46f0-8a06-442aa0cbb29d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 1d8dc7ce-2f1f-4bcf-a757-f67bc56e651b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 28e2ad28-befd-4344-b608-448592eee79d)");

unit.assert_eq16(16'h0A3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #872 93f9d2f8-22f2-453e-9945-7b1d624e1668)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A3B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 f1884f74-a4c2-4779-b7be-97d5e13be6e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 a4b31c0e-e31c-4260-8fec-e1372fbd0033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 eeaed1d9-6e6c-4526-9d66-7d02c32befe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 0eac65f3-1307-409e-bf37-fc5bc0425ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 9aa5e9e1-cd4c-43cb-90b2-d2fc48d95fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 0535f525-be62-487b-9548-4e64be90aee2)");

unit.assert_eq16(16'h0A3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #873 0f42ba2c-b0f7-4875-9ecf-79d503908d17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A3E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 331aad88-079d-4b55-845d-89c06bf33abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 45948db8-ca2c-4227-b02f-d86c863bc7ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 a8200618-d46e-4471-b361-d4213d37df73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 fe5c6238-f1d8-48c0-828a-b4f48db3a643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 40116962-d73c-46b9-847b-355e0de3f984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 08f7a27a-655b-4281-929a-555cb2736bf2)");

unit.assert_eq16(16'h0A41, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #874 7f413d60-8d99-4c99-8640-fd260e792023)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A41;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 e30de407-27a5-421c-933f-dc2069b33abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 77495777-d7cc-4519-84f1-493a198a338d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 d4878457-05d6-492d-8ea3-06c45993c573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 22ae9a07-5215-4911-9c20-5930df07b379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 3003a5f5-ac9c-42a2-8ff3-c4ac1f6a3802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 cd93dcff-e640-45bf-8fc9-188ee21fdbf0)");

unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #875 28b132ef-2e74-4420-ad18-5cd45b5ea1b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A44;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 3cf9e482-512f-44f9-8991-e09ff3319b0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 c64412f2-7b65-4724-9865-7cad20195ddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 93239811-abed-4656-9cca-13ac7d4e0ca3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 d3e0e4c8-828a-418d-8f9f-e42a5bd32dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 18855acc-8507-467e-8f6a-1d699e8e67f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 897281a4-b9ad-4d69-926e-be3991591508)");

unit.assert_eq16(16'h0A47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #876 9b5a6430-b17c-4ded-9493-39d69f90dd7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A47;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 c0389f2c-3a25-4e16-b63e-f9fc831a03b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 6d408dad-4c15-40e5-a215-791b3563fe98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 c9a19bfd-8dab-4333-a4f3-5fb28f311f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 7940a0a2-46cb-4e48-bc82-0f32616ae973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 45587a95-a2f7-45f9-b166-80e24a0b63ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 71d8031e-a5a5-4c94-a36f-d3940256e967)");

unit.assert_eq16(16'h0A4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #877 7e45c6f9-5405-4ca5-9e9b-49827a9dd3a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A4A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 e83fe518-65c2-4d9c-8eae-916ba29cc309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 596177c7-f71e-42e7-8a49-31ad1d261f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 cbf2c3f8-312f-498b-bd1a-717ad55d4048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 7459936a-aa30-4871-ac53-ffc28bea51c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 64f5049f-4de0-4d75-aff3-6126cce2530d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 1ce9e7a4-1b60-4fa0-b88c-a20a2adcbbee)");

unit.assert_eq16(16'h0A4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #878 981f6b53-11d7-4ec3-b607-bba298abd0cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A4D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 52991b67-93eb-47b2-bea7-656564ed0d0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 5aceac1d-370f-4fed-a7cc-80099b780c2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 1996ab18-af17-4739-8c2a-e3edf62be9b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 6793c538-5183-41ab-b55a-35f7d6f07914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 c19800bb-10d1-4c41-84fe-c70f3bd65dd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 a54e175b-3f6e-464a-a903-cd156a6bd757)");

unit.assert_eq16(16'h0A50, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #879 ee678fec-a8c4-4f37-9455-bb3c698c1029)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A50;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 fa5c20bf-131e-4066-9f75-c6cf391e617b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 a4a8a0c7-9544-4193-a6ea-988e422e92d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 0bbe35ff-748b-4eba-b526-feeb2669e4db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 26169681-67bc-4063-a90c-c15b2ecf5cdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 46e2f750-c900-4b25-a8f6-e9bcbde85590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 fe98e580-4ab0-45b3-a0c6-f53183af048b)");

unit.assert_eq16(16'h0A53, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #880 102f6a23-8c0e-49d3-872f-a7622eb7fae9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A53;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 6779c3b1-4f05-436e-877f-98547e20f3a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 4ab28122-c13a-44d2-bfa7-f031168b6e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 e97560db-42f8-467f-a914-b2216afe7519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 c0c44ccd-bfe2-460f-b26d-4d3595ee0d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 ce7506ce-9fab-4c2c-bc71-2340bbffda70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 ee6ce6d7-33ca-422c-85af-e34ea6203e62)");

unit.assert_eq16(16'h0A56, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #881 74801bd5-942c-4beb-89ce-74da42298a00)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A56;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 4ec10e8f-53b8-4c50-a1c5-b23933fbef63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 a6bc76cf-4f52-4009-a231-a8e2f91f0fad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 3be3ceed-1c2a-464f-b9f7-6bce98dd089a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 afd11070-7fab-405e-a9b8-a7af578eb80f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 a3e54f5f-d2e1-469a-ac54-576113bf4510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 4f7f96dd-4cf5-411a-8298-5fa7df1aecc9)");

unit.assert_eq16(16'h0A59, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #882 bfd2d104-c190-48a7-81d7-c4b62a6d29a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A59;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 4298dc11-b36c-4a74-aa45-8929c750f39a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 e6c9e24a-e9b6-49d5-a215-dafdf0cf8160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 51c63b4d-9063-4652-ba95-3c1f869e3227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 4d25864f-2983-4444-b3c0-3c34fa8808ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 60edbe50-c5fb-4dd8-b3ab-00eab4ded1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 d629159d-462a-429a-8e86-40855dfa9bba)");

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #883 f1363902-fe89-48d2-8a7f-7c95d44d49db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A5C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 56c13681-7192-4787-8b07-431e32781c5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 7ab66720-dd84-4c73-b71b-3536827774ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 89b277f0-50b2-4ae3-b8b1-c300f34137d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 905cb536-4361-443d-ab6e-316aac07159b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 a6829523-1fc0-4c12-8c09-2f573e1c6eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 df671f3b-038b-4da7-a528-bf149d857bb0)");

unit.assert_eq16(16'h0A5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #884 50a96c5b-1433-4592-a245-13dc1a3c2c43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A5F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 7f79256e-e104-40f8-b4a5-4dcd35ccef0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 67d48cd5-fa5f-468a-8c0c-d632402342c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 5edfc47d-9de1-4815-ab4d-dea62fd7c095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 195f83ca-a2c2-4687-8201-589db3e5e3ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 c9f01930-dd25-4f3d-8651-5105de8018d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 acbeb0ed-2e2a-4cfe-aa62-48b3b6e41034)");

unit.assert_eq16(16'h0A62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #885 d618dde7-4085-4d8d-9539-6e9e91a30f65)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A62;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 a4330da0-7df7-4ce7-9da3-ad43c43e2fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 bae0f834-46a7-4198-880e-5a5cce6b3515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 b5a97d34-12e5-4276-a613-993017d4a0ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 c5eb637e-27fc-41ed-a02e-88e9f9048e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 b02b40bf-138f-4c8e-ba20-4e0bda173739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 c5c5de87-e145-49d2-bf13-e9b46e59197b)");

unit.assert_eq16(16'h0A65, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #886 3435bdd4-30d1-4feb-b760-921f1e3f6f9a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A65;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 2f5da3b8-8dfb-4e7a-a401-5bed0da38c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 3b67bcf4-73c7-4e08-99d6-23930d1181d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 157aef10-cb94-46a9-b5cb-e214837a147c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 5dd14b90-3464-46ba-aec0-92ea14478d0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 2b2e468c-d09a-4c06-a93c-70d0f0b41d43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 881fd2cf-f79c-4d97-b70a-e7254820ef81)");

unit.assert_eq16(16'h0A68, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #887 e8f7444e-2520-401b-9254-59a7a37db4fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A68;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 67e8f5ad-d9e5-4f60-975c-0f47af3c258e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 4c72da4d-53bf-4d88-a95a-895e11d8ab01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 c8683a78-6763-493e-9f1c-1cbf31237f76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 1655e3a7-b3b1-46f4-bf44-622382097e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 42661222-1cbd-4023-b655-116acd63af45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 ed4bf9e4-01f7-4afe-a5f7-91711f125920)");

unit.assert_eq16(16'h0A6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #888 9b6513cd-2680-40f5-b2ee-47a5247ea083)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A6B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 0f67edc9-60f5-4189-bf48-143a61434080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 5a033f45-e668-4afb-a367-b168cac999cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 4226cbc5-d493-4916-8965-ec188ea1d77a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 7c1ef522-5647-41fb-a73b-b60cfaaca122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 c27be20e-1633-436f-9e2d-13f7e249d5d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 5a2d7ad9-8fa6-40ff-ad70-79d2718de772)");

unit.assert_eq16(16'h0A6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #889 a00b196a-9f4c-4a94-bdcf-54cabe2a4f88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A6E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 9cc30b59-d50c-421d-a0aa-386237cc6e0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 91fff996-aa1a-45ae-b548-62f82061ecf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 4e88248a-93c1-4737-b0fc-e455e1ce8219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 ee6f1720-93a2-48b3-bbc9-0261e284ae9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 b3def221-ce1c-45c6-811d-c3399cadf95b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 a5603d03-eee3-47ee-b5de-bbc48cd62916)");

unit.assert_eq16(16'h0A71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #890 261dce26-c1d7-4cef-8f81-78ca8cae47c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A71;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 b3bd5743-ae28-4cdb-9283-ee56d7599c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 a966e71d-7477-49cb-9e00-9c600d1729a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 e20f1cc5-1b72-43d4-a29d-4a33421de242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 0ffbe53a-4b0c-42d9-afc4-9bf2f7050125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 22723403-f594-4f57-9943-1166c09e14b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 66c6cdb4-6ee7-439c-a665-47db55918d88)");

unit.assert_eq16(16'h0A74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #891 5d0b0d71-7535-487f-a7aa-d660514046d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A74;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 a23fb3e4-b5da-451d-b880-189e4e5d9ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 2e574da7-ba18-40c8-ba34-d93b9c05b73b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 d26a2e7d-f97a-4a37-9f3d-106b17a2b4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 bc9b1c10-c15d-45d0-a9ae-92d3745cbaee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 21361237-0cc7-42dd-98d9-6c998484ad9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 8a3909e5-2b01-4e55-81a6-a3d638ccb1cd)");

unit.assert_eq16(16'h0A77, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #892 2eee408c-4b5d-49a5-bad0-519194c33b02)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A77;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 2a3dcb5d-de48-4f05-a178-2165e6e6646c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 42330856-3d7a-42a0-a6fa-2a04d3e43c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 c4ddb57f-8231-4f6b-b491-0888a13d04f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 bfac24c4-775a-4a0f-a163-941bfda5eb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 43078d43-0d48-4dc0-b48c-d5293f45f79c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 45767756-9be6-4c22-a9aa-473f321b9321)");

unit.assert_eq16(16'h0A7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #893 b7d16dd0-44ce-491c-9fca-614cd1c0a631)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A7A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 eecd12c4-a709-4eec-8639-d531ae435e87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 656c91d0-f128-4f70-9662-2840ff5670a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 c6f5773b-3754-4dd2-8d1c-c8a4a5236f2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 f647352f-ac2a-486e-bb87-405ee6b90994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 323b1b37-b50f-4ed8-805b-30345359416a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 159a8ada-9419-4afd-9e5d-97a9d4644120)");

unit.assert_eq16(16'h0A7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #894 76434874-4efc-4976-a48d-a1d59c98246e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A7D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 e0dfdcee-860a-41b2-bcd0-d47fa38fd84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 e0961fee-9715-469e-b298-9c0524ccb4d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 a375dc9c-f498-4222-be4e-5b1b9a455693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 ff11e1a1-f310-43b9-b1b7-07b8d0e13a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 87503aeb-0484-4bb6-9320-c26533257e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 0b3d79fc-e2ad-420d-b6fc-a863cfe13edb)");

unit.assert_eq16(16'h0A80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #895 bf6965df-9738-4969-91f6-598eb5e414ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A80;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 cb84b4ba-852d-4a03-812d-cd757408fa0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 a5226b19-81fb-4c42-860c-62767b492844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 88b03275-e907-4561-854e-a783eb58efdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 7d6b873b-c143-4a9a-86ce-db0b989892a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 4815834e-0244-4e77-bbf8-8e04928a2c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 78c9a384-178e-41d8-8ac1-de5e420c43c2)");

unit.assert_eq16(16'h0A83, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #896 6cdc72d3-3d4c-4756-ad28-d23b6f9ece14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A83;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 797f381e-c748-4c0d-80c4-d2f3ec00352c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 d6904191-8e3d-43c2-9d45-33347bcbc96b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 14c3533e-aeba-4efc-8f0b-25306bc94864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 50dffaba-2bf6-454e-a81b-f000b166dd3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 48479638-3704-410a-8cbb-ed157a87aae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 aee7e0fa-5306-40f0-b55d-351e4b820811)");

unit.assert_eq16(16'h0A86, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #897 656b8c82-d690-4a3b-b06e-6e7b9bb38f25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A86;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 59902b66-8f82-475c-b1fd-a12500ac404a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 2ecf075b-1961-4ca5-a9c7-59fc01e8bbb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 05e9db51-87b2-4eb9-8ad8-a9cb85b96f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 407ebbca-a032-47cf-9aca-5cf205eb5bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 b6e931c7-dcca-4962-9588-798a7d653f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 fa6ce006-329a-4714-a03c-892f8c822adb)");

unit.assert_eq16(16'h0A89, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #898 75ece7c7-5e23-4af9-ab8a-8f3283f7336b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A89;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 b7e002b1-c2a8-44f0-8905-96747ab6d16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 f16f1ed2-a42b-4bac-b5ee-6e366ec30624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 54a9dd9c-a5b5-4c8e-b3ab-7a148932e6f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 8b662776-d637-4623-82c9-34691f371e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 ae0dce29-68e7-4361-a0e5-2d4d95149dfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 0db54ba0-89f4-48f7-b5d7-f4a5fdd273e5)");

unit.assert_eq16(16'h0A8C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #899 a0305456-223b-4d4f-944a-f416912212f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A8C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 825ad6fe-6829-4f73-9352-b02b7ad5a600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 c4eea887-d7b3-445e-8920-5fa7a00efba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 57be9713-b6fe-471f-add8-9389477c55d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 34eccd28-1def-4af0-ae7f-7aa42fedd638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 b1c88a65-77b3-45c6-8740-d5908e6b9145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 7e9722e5-5084-4309-bf02-641a4c2700fb)");

unit.assert_eq16(16'h0A8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #900 03da7e17-1c32-4af5-b1b6-dd2509697ba6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A8F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 86d761a3-053a-4491-9a8e-8faf9ce5cc8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 18a14dd2-0671-4e41-aa5b-aa7e0131790d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 0a83a15e-8b5b-4191-bde9-057236b82c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 eb2fdc75-3440-4033-ae4a-dc8f321e1d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 c3ccf5f9-859d-4022-aafd-7041ddbc8381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 993cf10a-a808-4d30-a831-b56625db1d70)");

unit.assert_eq16(16'h0A92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #901 f66e0804-3807-436c-a92f-19de99c84546)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A92;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 789b9dc9-675e-4552-815b-0a73041eb28e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 e8a7d395-c737-49ad-b581-62afefaf2241)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 d8fd173d-7d08-493e-b8f3-0ce921014f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 b0b79e18-5318-41d3-9202-5433474e9c43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 82ded091-2565-4a8f-94bd-1785925553ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 3e67ee2f-231b-4ba5-b2b4-14fb1b6e311b)");

unit.assert_eq16(16'h0A95, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #902 efeb644d-88c3-451c-8834-15bac30f949c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A95;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 5336862e-a636-4b17-9a66-ad346cde87fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 8d776212-21f5-4d9c-9459-923f0bc4013b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 e87cf00d-44ae-4a8e-84b4-c0d23f50870e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 92960b2f-3dcb-4a12-94d3-72b965ea6d2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 562d0507-9040-405b-a508-2b3c59a032ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 1e03840f-d193-455b-941d-8041429f8ff6)");

unit.assert_eq16(16'h0A98, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #903 d0af1247-3f2e-4422-9f86-896ebaf3a44a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A98;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 ceb1da63-40e9-44cd-8612-0febafbda928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 d5f2927d-7df6-4855-8bd9-06381d9e61ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 d2c22b83-4054-4fdd-b5fd-bda53ab9619f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 2cdeace6-af14-4036-a442-d35f59402af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 098d6d54-a6ba-4d6a-b568-4aae183b77e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 c00055ce-188c-437e-a256-997604848333)");

unit.assert_eq16(16'h0A9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #904 6b05c536-35ba-4e74-b954-7d5c21e6c921)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A9B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 2fa8d888-0506-480e-9332-98e0d7b15eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 3f36430a-7e0e-4be7-a79b-b313f25a8a61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 5992e4d2-acb2-46f6-ae62-10024b468691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 5150132f-fdc3-4c25-ae02-343b25e3de52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 999d1e8d-7562-44aa-87c1-2cada9554c78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 15cde5f6-9b4a-4c28-89a8-118e46cae762)");

unit.assert_eq16(16'h0A9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #905 86fabc51-081a-44a5-88ce-bd513416e700)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0A9E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 d13735e2-1874-48bd-9524-bea22f721f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 461122f3-b3c9-41a3-b107-d438c156c847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 b566c10e-7099-4006-ac39-cd3042641269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 64c59d2f-f744-4604-b8aa-5b0544802515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 8343f695-d5f2-480a-a699-1a4e7cb203dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 b03aab24-15e2-40cc-b34a-8eda87b0aec1)");

unit.assert_eq16(16'h0AA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #906 45dfecfc-91fe-4f00-8a10-d7e16b223551)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AA1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 93760b2e-fb10-4d47-b588-53f437ea635a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 19e93d41-17d0-4918-b652-2e725605abc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 95d02bec-c5a4-4fda-91f1-fdf797545aed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 0bd2cb1e-d120-48e1-9654-e731293a71f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 665858c0-49a8-4adf-9f40-b3cdfc345207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 ac665bde-6869-423f-b297-b09e946fd31c)");

unit.assert_eq16(16'h0AA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #907 0e5c22e6-7234-4648-8304-30e6ca5bbcc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AA4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 e4612720-54cc-45c9-8b44-9855b05e4f52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 3d362aef-a7cb-418f-95a0-b6281ba7b111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 6b389fd1-ef15-44fd-a731-bd932d548d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 845a00a9-bf9b-48e9-9b0a-414a46ea7d8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 fcd06d02-3e44-42e8-94af-752fcda7832d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 36fa68d5-3b8d-4f31-9034-978f8c59aa1d)");

unit.assert_eq16(16'h0AA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #908 b87393f1-280e-4b7f-b4ff-a728b0253200)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AA7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 2c77c4e6-4436-4f1b-93b8-ccb8e28387e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 a56dd02d-daa4-4737-80d8-a9b2803c7b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 98e0bb3e-d56b-4594-9811-b8ac9f6db4df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 fa3eda7d-d51e-4faa-a55d-33aa751f9b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 e6e63d63-3d2a-4bc4-bc00-0a52b76686fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 ff657690-b3e4-4493-8d3d-21cd5e6e7b6c)");

unit.assert_eq16(16'h0AAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #909 0d3fa626-9ab8-4860-b39d-dd899230c47f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AAA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 44f5769c-3c32-4531-96df-7d773cf195a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 b983dd17-39de-444f-b2b9-28c72b0323b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 fea4cb56-b632-4ca9-9282-8bb9336963e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 f707f7e0-faa3-41c1-90c8-5cbce595aa9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 5d88227b-0c74-4fe1-bf5c-2ad8938ea045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 fd016c6a-aa44-4092-9822-89e7f9e4391a)");

unit.assert_eq16(16'h0AAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #910 45a3bae1-2287-4eb2-bf96-3ca064a317b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AAD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 516ce717-c056-467b-86f8-3f489a0d5bda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 7dc71a78-2f18-4335-859f-272742d3b963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 0bd453f6-9190-481f-89d0-b311e34f5372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 307b7b11-da4c-4956-8249-fa84066c1a2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 d2801864-0cfb-4614-9dba-71ade4c48202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 a0adb72b-10cf-4f2b-9bb8-e81737d0bbaa)");

unit.assert_eq16(16'h0AB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #911 9a1ac31e-5a3f-4738-9c28-0177b7928690)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AB0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 d8737380-44c9-4316-b781-7dc4c582c44a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 f9df46fc-46fe-4240-8bf9-974b6447733d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 424e39e3-8235-466d-86e9-5d13bf74f2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 8d5128dc-7b9a-4a71-830b-7ab6660b41c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 30554a00-90f8-4f26-a44d-8d32eb5ca667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 9139116f-17f9-42ab-abb2-9101be27d822)");

unit.assert_eq16(16'h0AB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #912 34a54cae-7012-4e03-b174-ebdf6c72c95c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AB3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 ade0ceba-50ff-4b9e-a7ec-27ca91f61b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 53e1bfeb-299c-474b-ac25-7625bf6cbe45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 b8cc8454-ddf4-4216-b910-96fbb1224082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 3b685579-4079-474c-b69a-c7562f2991e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 afe97802-137b-4586-b19a-df776918728c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 b289d48e-3833-48ea-a948-d1112cb32215)");

unit.assert_eq16(16'h0AB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #913 a3e8ec08-c625-4d48-bf45-f7bd1d0e2018)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AB6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 126a6a9f-502a-4b6c-bb58-c554a2f957ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 7446734a-cc0b-4235-9323-27fc5810fbe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 f6992023-ccdc-45d0-91bb-a0ee4408e0fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 2e817bb1-973c-4fb4-93c8-c229b91be205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 84246d45-2764-4024-87fc-940c3ced97dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 964a01c2-3cdb-4dc8-9561-b47f54251ee1)");

unit.assert_eq16(16'h0AB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #914 144a0df5-7d89-4783-bdad-bf1f7760e7d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AB9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 2e397457-1624-474f-a6c0-e2545bbf9eb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 cc81602c-2268-44c3-927d-c1bfc3718b4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 f58fd754-879f-4879-bc91-2c42afea8af2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 346edddf-421a-46e4-98bf-ffdcc173601b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 c389dbd3-b971-404f-acbd-15f9376cbbdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 796f49aa-2018-431a-a6ea-e9c0ef973f0f)");

unit.assert_eq16(16'h0ABC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #915 f040dc5b-d4b9-48a6-8764-db92ac8c94be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0ABC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 ba461a88-504c-4877-88dd-7b08f11c586f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 6542d5c8-d052-4d35-980a-abc5e68493da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 e14a36fd-7f95-410a-b139-19989abc2685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 7381a36d-2c97-4f93-803f-05c0fe1fc241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 c821ba6b-a393-4807-b945-8007788438f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 b10a794a-28b3-4bbd-b47a-63548f5df240)");

unit.assert_eq16(16'h0ABF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #916 9efc300f-e36d-4941-8b0c-21d42b37edb4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0ABF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 99101166-ad4d-45df-a845-ebe973e3537c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 d62f75bd-d582-4b41-8eca-59840f787e31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 33589823-b32d-47cc-bdb1-30721d3223c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 270ea0fb-5331-4c80-876d-95d1b4cb083c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 8cc10343-5e2b-41a1-857d-8422c976d25e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 f62e2f3b-0824-4d29-9e62-7a82d819f2c6)");

unit.assert_eq16(16'h0AC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #917 4d1caa23-88b9-41fd-ac6c-3660da93638b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AC2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 4658e128-a746-4f0d-977d-a5209f3211c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 59c643c3-0741-4f23-9095-e82c167cf537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 b61dba24-7b77-46c7-a3fe-312f01ec2669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 1bd1df61-e1c6-4ce8-b229-b14f3875f780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 47e889f6-1009-4a2a-bc2a-0a63d3038a4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 024abd9e-039d-461b-a3d5-b90e6fed8046)");

unit.assert_eq16(16'h0AC5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #918 62dddc1d-1952-4acb-80db-164e8bb5b43f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AC5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 662bcfc5-c8bc-4d4b-b905-67912a46d27f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 cdf93ce4-417f-4ad5-898a-2054caaed454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 5ab1706a-0e4f-4eef-808d-2384679d1995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 012c8421-a51b-4c95-b0b9-4c7ea7e5cc4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 ad9bea13-5722-43f2-b765-e1464ae1e3a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 b075fb59-c8c6-45ce-a56b-d679a000aecb)");

unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #919 d0fe5127-bc8b-4c80-8ebd-1d717c1c485b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AC8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 d0485b61-dfa8-4c36-bdfc-64bf6a81317d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 faa1f44d-3433-40ea-9a5a-e91babc340b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 802a0e0e-3502-451d-8b90-46301787d27b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 3e647365-ab65-408a-a4f9-ea9bb1a16a14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 dca16904-ffbd-4e94-82ae-73d30c0b43d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 4eb42661-f095-4db4-932f-c1f9cb903648)");

unit.assert_eq16(16'h0ACB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #920 5fe81292-3742-43e4-a9a9-afd3a5c36970)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0ACB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 d2098aaf-95cb-49c6-9aa1-3dcfc5a61368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 bb50d66b-f597-458f-8dce-5224ef902150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 e0587b49-149b-4f02-bee6-37429381f122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 09e4cd40-26d7-4d68-bb71-302279ea58c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 cc93c432-dc1d-429c-8993-9417c7b11e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 f2d77e43-1eae-4423-8ca5-8f0ce2369cc8)");

unit.assert_eq16(16'h0ACE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #921 85c8f853-557e-42ff-983a-1bb2c087c756)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0ACE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 3ca27499-3dfd-43c8-8900-9bfd53789481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 cddf261d-6808-4415-97ca-c017c45913b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 f1e9cea8-d511-4fc3-87de-a650779d6770)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 7fb2befe-efcd-42ec-b508-cd71ee17b9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 634695eb-b444-447d-b895-e446fc3612a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 0858b01f-6d85-494c-8e31-f663d380254f)");

unit.assert_eq16(16'h0AD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #922 e18aa0fc-ebc9-48e0-9fc7-02f25b57cfa7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AD1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 f6b4b5c8-e6b1-4307-8d36-c78685ba9d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 6c85df35-5390-40f1-b042-1cb6fe6fea36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 07c876eb-b9d0-4196-a278-163fd58a7267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 f185c1d4-14cc-4327-b832-05673756dc14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 eec8af0d-2b7f-48a9-b4ae-fb8067a9bc77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 94a782d6-a204-4e01-8e36-3a3eccf349ff)");

unit.assert_eq16(16'h0AD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #923 f62fec47-27ec-40a1-9a01-47563f4aa5fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AD4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 41dadaeb-839b-4079-8faa-2737eb4ca161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 4a64053c-5b28-45ab-81ca-55902abadc67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 2fd77e4e-81c6-4bae-9bbb-13213c864bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 cab5efe7-605b-415d-8c88-d3b01e36666c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 b2cc79a5-b7fd-4280-9dc5-f6b9bc667601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 df0af4b6-228c-4fd7-9ffb-0be95bad3821)");

unit.assert_eq16(16'h0AD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #924 455ec007-fea0-442b-99e4-bb75f28303d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AD7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 8fdd295f-8c2f-4f35-ae4b-f20ce4cac1fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 9ca159b6-822f-4e1e-814b-83e1aa755b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 f3e30890-31dc-401f-9015-d91d8323720a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 e3bfa0d3-c082-474f-923b-76620f59df07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 afa9d07f-1315-49d5-ba01-a3a3dd5afd16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 8900786d-d60d-4e21-a716-3e7823441302)");

unit.assert_eq16(16'h0ADA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #925 87ca33ac-975b-488d-95d8-cc5ae46172b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0ADA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 3004c28f-c6cb-4cb5-9fcd-570f1d62f378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 b91bc0a1-dbde-47df-a75d-13e6c66b15d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 549a3663-a601-4842-8c70-6d4f7a071d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 9a2f49ca-8a56-452a-bb85-dd762ad58a4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 be58dc4e-517b-41cd-a81c-3efa1ce35703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 be926631-0450-4474-b5fd-416565da9147)");

unit.assert_eq16(16'h0ADD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #926 ff80f71b-1787-4736-96e2-7968bf59c067)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0ADD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 e7d21c57-2713-426a-bf5d-f472c7580685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 32d761fa-b88f-438c-81a7-eee2c6a70476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 af173e24-8592-4db6-af52-60ee13145e74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 e3380247-37f3-43e5-b323-d385422249ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 d6afc980-727d-404f-933b-a55df311f993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 01f96c99-8b9e-4e65-ba94-799150abb3ff)");

unit.assert_eq16(16'h0AE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #927 9b116a75-c5e1-4f04-b5dd-5f5f51b7be3e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AE0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 278a5338-957a-425a-a630-496cc6796922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 98bb4036-4d7a-40bb-8809-9b96c6e87a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 ef106e92-a0d6-4d43-8683-8fe9a8251f91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 b279d816-5a93-4405-a39d-ecca12d0ba64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 b4916c57-202d-4963-bed3-56bb1f254f57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 67fdd04a-e4c3-46c2-bc1f-d7a32248fcc6)");

unit.assert_eq16(16'h0AE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #928 81a52d0e-8e47-4a51-bfb9-a7ede1506d82)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AE3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 89f4c9fa-5d00-431a-99ba-5a182903c5d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 e256f495-3fd2-4f5a-9e10-495d259cfcd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 1da7b186-5099-44a4-baa7-51228f1e29bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 5b2e5610-678a-42ec-a2a6-7df68f297a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 c5934135-417c-4789-8920-f7d9a1866817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 60410c35-571e-4b67-8640-a53942382ed3)");

unit.assert_eq16(16'h0AE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #929 c6b4ff4d-58bf-4ff6-acf0-a69602d60eb2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AE6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 aa078488-0762-4897-b941-b5da1297e434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 57f124bb-e193-4f85-b878-946058936d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 e3bb1ed8-c78d-4080-84aa-162b2155bf24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 233f1241-cbd4-40b9-96d6-b21062e6ed82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 7ae0b7a4-c8dc-4877-b18d-d082b78f88a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 e488982a-cc10-462c-89eb-49d6de428c3b)");

unit.assert_eq16(16'h0AE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #930 d457a2b1-a5be-41a8-bd6c-ca25ccd7eb09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AE9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 c7b550e0-cacc-4a4c-a228-23537e07c931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 49734d40-729b-4d44-824e-7bde0d434de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 4cc7f70f-82f1-4bda-8c04-ce457119b8ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 2b5e90e9-12c6-4ec8-9274-a51d9b2586d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 9a92ff6b-3a0d-4536-8d03-9dfcf28478b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 971d8a95-224a-4bf1-b5a7-82ecc43842e3)");

unit.assert_eq16(16'h0AEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #931 87ba489a-216e-447a-bd63-4291f9a5f257)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AEC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 0b7246de-ef61-471f-8c94-f4e4d5c5bce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 9f93f4b9-77e8-4def-aee4-7c09452b369b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 2636aeff-ba66-4bac-a15e-9bc5359a06bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 3d06eba7-840a-4c4a-b6e7-343ab0e910af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 b307ad74-2e2b-475c-b1eb-7e40afee6f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 ab919281-523d-4a0e-b48c-a3860ad81f52)");

unit.assert_eq16(16'h0AEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #932 3f25f645-54e2-47a6-b57d-e262ec45dddb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AEF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 1c1922db-b57a-4b65-9eaf-a9c7c42cfdc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 64026524-be40-4962-82f5-017a6b6fb2ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 2a37cbf4-c626-4106-84a8-b829b8695f51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 a6ad053b-23fc-493d-9bbd-91e0aacdd2a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 2a2b7906-78e2-4037-af49-19639ccb5802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 613b1a86-f579-4e57-a3d8-bbf805d8545a)");

unit.assert_eq16(16'h0AF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #933 a37afc93-e486-4102-8d86-0ab0e8d9023a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AF2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 0110ad75-9eaa-4a51-a7b6-ab568205b658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 ba95097c-208e-4cfa-818a-db0be56a7ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 a2479553-65ea-4d46-89e2-c7b07293b41d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 7a69133e-07a3-420e-b7ba-d93f7d60a564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 287569a0-7546-42db-ba53-b33b661e808c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 0fa2ce9b-246d-407a-9426-92a3c886af5c)");

unit.assert_eq16(16'h0AF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #934 63100879-8d46-4eae-8a0e-a624ad01b715)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AF5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 ea4e5074-ef62-4210-8d7b-bff042247448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 7d153075-34a8-4cc5-877b-b1b7e7755cbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 cdb2d8a3-780c-46fd-85d9-6da7d4e97ffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 d056c747-4fec-40c4-bff1-f1a0f4e90c3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 82185e74-33a0-48d4-bf0f-b3ca1f5e5750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 c2579f00-c2b9-4e47-8dd0-e5f3b54f9cbc)");

unit.assert_eq16(16'h0AF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #935 9bb3cec1-9089-4834-b231-878a8806c2d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AF8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 0e80b787-0d70-43b8-9abc-80e8e0612740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 d0a4ba37-e512-415a-9eb3-e8333f338ce7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 920f5b50-643f-4564-bcff-92139de0a42c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 6ae79997-e8d7-4dc3-9161-05eaac9c1c42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 e7fa11c3-82a4-4fd0-8010-406327364e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 1b9daf1f-d636-43fc-848a-f08fa4410742)");

unit.assert_eq16(16'h0AFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #936 9023b2eb-3738-419b-8bec-3649704a825d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AFB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 fd380f50-711d-439f-91b1-e46744cb7e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 730cd5c3-758a-4aa0-bd25-b15cb298d809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 6e66abf5-984c-4b12-8bc4-47f8a7cdc4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 4bab69d8-5e7a-49e9-a72a-b157c2ab81f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 d8a148fc-0fa0-4fcc-940d-3158235d4561)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 1baee535-ca52-4ae3-8275-1008f661d165)");

unit.assert_eq16(16'h0AFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #937 26e6c57b-daa5-4a86-9e6e-6f489981969f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0AFE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 0a673711-b1a1-4122-9e4c-00c58a37b32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 9856471e-42a7-489a-8dfe-b4d8bb6849bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 426b9fbc-9b32-44b1-bad5-66dc7afef8a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 bb71b424-f098-4486-85bf-05c0791d9114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 3bc7c045-1243-4cfb-9b0d-c9037ffd2cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 4713092d-02de-4b80-919b-91fc01d94c4f)");

unit.assert_eq16(16'h0B01, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #938 8b10b35e-50e2-4f19-93e0-bef86fa2428d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B01;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 949512cb-5d95-4ff8-9e6f-b21ec0327f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 231d80f4-a8ff-4036-9573-f66c70df2042)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 8af58300-f85e-489a-a7e4-a8c17b062371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 eb60aff1-64fc-4fc3-a486-cf427d7de016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 ce3f88bb-1dbc-4093-8efb-881a1f5d942f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 c2b2690a-6344-4b6f-ad01-f27d3fe14453)");

unit.assert_eq16(16'h0B04, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #939 22756b42-3849-4bd7-aba5-1247590e7ce1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B04;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 c076b6df-6773-4f6a-ac6d-9ceb078b5c31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 cc6bcdca-8e58-485f-94e6-77ecf2bfc82b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 4e43cac2-a538-498d-a9be-f0066d0bfdfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 b886b9e3-93c8-4f0e-8241-e0da00fddd57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 e083c161-39bf-47e6-a6eb-c815bafa4762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 36778278-d4b1-48a4-81fe-b84245cdee40)");

unit.assert_eq16(16'h0B07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #940 44ed222f-34fa-4069-9655-b2572402fdc8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B07;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 77df58bf-65b2-4ca8-ba5f-f8a0887cd3ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 b1019c72-43f7-40b5-bb9b-70ae3128630b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 e2028f84-3917-4b92-96a1-da34e086623a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 e7d02dab-801c-4aaa-a1f2-c9081b2f80bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 0436482f-8058-4bd7-81ce-a94a90b3746b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 dbf53a57-ac4e-4792-8734-9fb352b267fb)");

unit.assert_eq16(16'h0B0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #941 f2df1da0-b1bb-4d1c-9e52-75431660c75a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B0A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 da91f402-453b-4505-9dbf-44b3d8c29e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 20fdcdcc-1694-46eb-877c-ae57af2c2122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 e0426519-7ae4-494c-a483-7b6c8363b32d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 a733b98d-ee77-4edf-99c0-ec72cf50ac76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 79b32e70-6cc4-429c-8a04-470221db3151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 900860b0-e1e1-4d9d-a01d-efdc0b9f3b30)");

unit.assert_eq16(16'h0B0D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #942 ba8f0984-5dee-4a2e-9fb8-2b3d0aa6cb62)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B0D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 dc6e2750-8b03-4beb-b7fb-36dd146e0745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 98e995d6-c961-44aa-aab9-7c3b6a0ff8cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 1a1a35f3-97c0-41e7-bdee-9a4cb54ba5d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 ca4f9163-eb33-437a-8052-34aef3720ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 307f5837-4d3c-467d-854d-2fb2b255fd9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 1488c5fd-22f3-451d-8bca-6ba59620f478)");

unit.assert_eq16(16'h0B10, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #943 c153ef41-a7b5-48b4-8051-45111177c989)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B10;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 56ea5614-88cc-48f2-bba8-cbc00f7c8596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 1ff89469-70c9-4816-9b3c-8ca4c3236fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 bfc17221-ef47-4888-9ec0-c95120acf982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 4a560a4c-7164-4ad9-a089-8d90ae46597f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 394997e1-6a25-4921-9caf-a343143df9d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 1971f1ad-e5da-4285-ab36-bc600b0becc5)");

unit.assert_eq16(16'h0B13, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #944 3b050038-ca79-4655-853e-625d1150792d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B13;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 a231a118-6981-4ea2-a46a-ff967a235a17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 ec764d5a-27d8-4ff6-84b3-95e1b62e27b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 cc44b32c-91de-43fc-b4bf-e420ab692960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 d6c67868-6484-4b31-b6a1-aa1dadab03af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 e2acf459-63b6-4111-89f9-5553d73ae691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 50f8d870-0ae5-4046-9056-85a263f3ae7c)");

unit.assert_eq16(16'h0B16, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #945 75feb3a7-f7cb-4379-9bbf-f650b21082dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B16;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 a383b59a-65b7-4ea2-a7f2-741969c82b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 a3fa0121-7dbc-4f46-b930-f8c043a4c4a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 aaed86fc-10b4-44e3-9574-07cbdc43f93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 607ae7c1-9ff3-4ec9-aeab-6ecf000f8943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 441129bd-8d6e-4e25-a412-3cba5336b670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 232b32f2-c561-472f-837c-9ae5ac022243)");

unit.assert_eq16(16'h0B19, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #946 d83e8e41-df23-4ac5-9172-ea55a6f661a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B19;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 2919ca6d-8094-42fc-84b9-aeeede43b578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 32061a04-64e7-4816-a3f6-a49b22794f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 b35fb5ce-df01-43c0-a56b-935bed9912ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 0e45b931-5332-4c40-b326-746ba0da05da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 3fbc5ec2-32d0-472b-ada2-97277b75fa59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 4e76ff38-4ec6-4dbc-9811-acd50a6e3d86)");

unit.assert_eq16(16'h0B1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #947 d754a12d-c12e-461a-aa58-30278478f2ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B1C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 95b61fca-b347-4d4c-8a0a-2804f9716f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 785bcbb5-b721-46e6-a9e1-85c8a3b15a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 c3fc2e69-c492-44e6-beec-f63f65326da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 4ac669e0-76f0-4c7a-9a91-3946f7269dd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 4f8d94bd-db99-4834-b12a-8d0446d7b9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 854e73b8-642c-4003-8410-a6491790c514)");

unit.assert_eq16(16'h0B1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #948 3a417d08-3d2d-4708-97b8-0b54049b8d38)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B1F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 b389a04b-1891-4902-93c6-302fb7d9e81a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 ab4aa62d-49a2-4d7a-8f5d-df9a6133b168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 5ef20569-4887-4c61-9b1e-7e12f9413486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 95c3d45c-875c-4f67-81f1-351ef69b25b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 88c67d2a-3a85-4db7-b254-aeda80c655ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 c32f1226-25d3-49e1-aba0-05e7e537124e)");

unit.assert_eq16(16'h0B22, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #949 cdc18969-5e58-471c-938f-29b2a0283766)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B22;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 fefb0dcf-b8d5-4366-b060-e4287afd92ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 49811efe-986d-4402-a3e4-0e2534daf698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 6a2bec51-5f91-4b77-87e4-faaf855d737c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 f4760ec5-394f-415e-9bd6-0b119390add1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 14e49f38-43d9-47ef-a111-fa1e7a3ea1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 1ff474fa-29b6-493b-a964-9c5ecefa1040)");

unit.assert_eq16(16'h0B25, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #950 83e53464-b5b0-4dd6-8aeb-a14fb8d42e24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B25;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 a9b00c7e-ff34-4345-acbc-27cf92e0e282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 79c22239-bc49-489a-ab0a-fc85985a3da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 dc42cafb-d98f-485e-99b7-b7ed44a0a1fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 6e5a3d61-3124-4aa5-bd54-12eecc6e5e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 870c206b-a563-45f9-a472-3c58c40aee74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 47b2c0ac-1804-47f4-b792-c79c68da8c5e)");

unit.assert_eq16(16'h0B28, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #951 09518408-a04e-4b0d-b852-33c3695f8d5b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B28;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 4dd5179e-3b5a-47bd-bc25-e74ab27356c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 3d1e8334-5414-45ed-a2dd-003ac0caa328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 9e2bfec0-5451-473f-a88c-6372ccac15ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 bd962d14-7205-4332-922d-66fe68dd12a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 ab37372a-cf6b-4d6a-81d4-4ba2fb67a7b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 e915ae5b-0d30-4b78-a1a2-8c96eefab503)");

unit.assert_eq16(16'h0B2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #952 4d817f35-3ef9-456e-b7c6-148053c293a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B2B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 5e18407d-3d90-4e09-9f52-b09bf4288f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 06531760-6672-412c-8af6-474ef886dddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 82f7accc-fafb-4e44-bfdb-8ca9d1d00388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 6a5b5ccf-6087-46e1-b88c-926a72bccc84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 a1397288-5c8e-45a1-995d-173655aa690c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 d35073a0-83e1-4ad4-8116-035cea10d72b)");

unit.assert_eq16(16'h0B2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #953 1247c8e5-e624-4b68-b0fa-e7009d9dca22)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B2E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 e90c47a6-8a6c-4634-af65-dbef36cb2048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 870fef40-4cb5-4807-873a-ab6838036ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 33e5b742-65ab-47e8-8209-1e02096d616c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 7f8d574b-4938-4cbf-a08a-e074d1995592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 d67ae3e3-4898-4cce-a3ab-e4b17c836e1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 1c93ac31-6847-471d-acd7-d466e7bc03f9)");

unit.assert_eq16(16'h0B31, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #954 669df06f-09dd-4065-8039-473bac43d1fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B31;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 c6f52edc-bc2a-49ca-bf49-5dae9c1a00e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 7b46cea0-6d8e-470f-9eb2-852960537f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 976bceed-2c46-4c5b-9261-c2b4a87440f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 1d9583cc-2a5a-4a92-969c-76156bff4e14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 89a3f7f0-02a9-4f71-a63f-7b3fa1bd039e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 a9e52d82-02f8-4f85-bf39-ddb5ffa18890)");

unit.assert_eq16(16'h0B34, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #955 614c3b46-a744-40db-b55b-1f93e3dfab37)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B34;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 faeb53c4-382a-4edb-a068-32aa2f0bc99d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 c4e838f6-e9c4-4e11-a711-016025c7c264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 99b6195c-1aec-4344-9106-72959587b26e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 4f5e4a80-116f-43ed-a356-791f9286af06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 40ac28f9-fc8e-428d-be7b-eb59b2260d94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 eba51600-b5cd-40f1-8b9a-e7c02e56da13)");

unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #956 cd88a2d9-3b04-441b-a424-2f2c9e441235)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B37;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 81078905-173c-4c7f-be5a-5824b76af9f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 8c9d4197-409b-4fc4-b002-ccaad5c59bcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 95a3c6ac-55c8-46b8-8770-aa5a0e92b5d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 d55c2b88-bc4a-4cdd-b136-78a0dde9fcfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 be3ad5e3-4d1b-4556-9493-9d864d74f820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 76b60cfc-1b96-4097-8a80-583315d659e6)");

unit.assert_eq16(16'h0B3A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #957 28194867-8e56-459e-819b-c16498e1df61)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B3A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 78d4bf37-0395-4186-afc0-e83040dd1867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 36178035-0cfe-4f71-8c52-c16421285a97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 5a3bc989-2218-4d44-9412-ca83c3193e9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 8f955804-c077-4ae1-8e26-746555f1c4eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 a780dc77-8ece-43c2-8afc-f031bba8437f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 6c8de0bd-737c-420e-97f9-a96916d13bf3)");

unit.assert_eq16(16'h0B3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #958 b914300d-6446-4fe7-a280-c515aec6b700)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B3D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 bdb94b1a-7e17-4167-88ce-eba0433b4db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 f4f8e451-e2b3-4e52-8c6a-3b3cfdb83cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 36e7341d-35be-41c4-9a88-a8bf7f2da05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 f86f1fab-132f-4d28-8084-b781f585fbc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 db7f061f-65bb-4591-91ee-b2d04a1589ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 023b5ed0-78bf-440d-a260-4cae3d56a04e)");

unit.assert_eq16(16'h0B40, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #959 3b4e7bb1-1c1c-4ee5-8a61-c6d28885e6cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B40;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 8724cfbe-113e-4b53-819a-7749ba4f31cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 990ae07a-ce6f-4bf0-b966-5dd3f4ddf8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 48e13903-d584-45aa-96a3-64dfa3cd43e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 60da4a5d-74b7-42db-a35d-1c4e46c20669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 50fc79a9-d2bf-49a3-8f0d-a918b5c1d953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 e198ccdf-be46-455f-9bbe-db7a6ec67d27)");

unit.assert_eq16(16'h078D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #960 7e835c79-c760-4cf7-b5d6-7fcec2ad9f28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B43;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 58496664-e324-41f9-a1c3-c047b8e3fe33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 89874988-adc2-4fec-a736-24d609f49ea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 5cb67870-a2a2-4a78-bd6d-6cc0c494b4da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 c392c025-2acd-4099-9316-fc49de11536c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 d6c3c1bf-a572-46cf-96db-5f2b8c877d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 29aaa51e-5bcd-41f1-a76a-47149e50d3ba)");

unit.assert_eq16(16'h0FC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #961 7cb123bb-4b76-4bd8-92b4-333007eb295e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B46;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 72066d7f-a1a6-400e-8ca7-021378eec180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 13b4d5a9-1cf1-4963-8b6e-5c4fbc648d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 532bf4d4-33c2-4d1f-a943-33d9154eddb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 4aa42f0b-ffdb-4145-bca1-f9848f4152b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 4b088ec7-5295-4d59-a9e5-48107213ff4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 83aea12d-cfa1-43da-842b-544575ebbb06)");

unit.assert_eq16(16'h0BBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #962 9bdebaac-69b3-4ce6-8679-52ba06e0d3cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B49;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 79bc8486-43fb-49b9-b023-a69d10ee2141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 6b27bcaf-d8ea-4239-b258-da3a35887f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 93bc71cf-01a6-4d30-b448-8534e499be8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 1fe80dd4-bd81-422c-a930-32a73039237a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 9e139524-9f84-4b2d-90df-7f7d4f24d33e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 cdf71594-095c-495a-a1fb-3020e189da62)");

unit.assert_eq16(16'h0375, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #963 776136c9-28a6-4f03-9525-b6a70af1177f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B4C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 cff93838-2c4c-4661-8f8a-8d6a22221943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 b47fc2ad-235a-4579-9dfe-235e1940a19c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 cf6cc8a1-0c4f-4ed3-b4c5-a0e983006e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 390ee2b0-f7b1-4174-9f06-fcf8d4adaffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 b78388bf-803d-47ee-95a3-e0e1a0f9b1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 f1d4c022-4209-4acb-af4a-cd78cf0acfab)");

unit.assert_eq16(16'h0C17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #964 5d1033a6-066b-4025-a46c-adcf2f38150a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B4F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 8ad25af0-253f-4a8b-a52c-e14c9c70a763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 47a56897-9719-47c5-841c-967831002809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 4e958355-1fa6-49e2-ba48-fb363c9b58fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 ca53ee07-dcc2-47ce-aa71-3e39ccb7b765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 42cc4d94-d440-4ec4-ac8b-2b6b4d8711e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 4e870e7b-c7e0-4cbe-8b83-348926d44653)");

unit.assert_eq16(16'h0C74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #965 e4d13a79-896b-4b11-938c-19fef7d0634e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B52;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 ce6f7728-cc98-411d-a879-fe6c896adeae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 f04d364a-a34c-469b-9fba-9c14916d3f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 2f9d6e6d-a40a-4283-8510-65ecb1491478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 879c7c51-305d-421b-ba99-ef2daf07a8a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 6ae7ae9e-c132-4605-9610-26b8987d7d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 a9ce1cb7-6756-45ad-986e-6d74d0181409)");

unit.assert_eq16(16'h0697, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #966 d48265d0-6c5d-45f2-98f5-b243d7ae85ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B55;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 30f40937-4a7d-439c-a8e6-1493fa0cb0f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 3057a608-488c-4c05-8989-ac7c45eb0c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 a561279a-3007-48cf-b34b-d583028211b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 12b013b4-e37b-4424-b43d-31c336ad05cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 a28f5ccb-d061-4e4a-9e59-da86af84225e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 6daf0c92-3072-47bd-a3c1-a2d4725733ad)");

unit.assert_eq16(16'h07D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #967 a19084d3-422a-47b1-bdaa-4ba00aeae98c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B58;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 2e987b93-035d-489b-a54e-d2638d030aee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 36c70098-2752-4648-865d-687982bd94e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 63bd6b3b-389f-4760-9da2-13fc2b6a203a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 85dfaa78-3d35-439e-ae9b-ae52e8c770f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 df754546-84a7-4c72-8814-147139a5644a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 e7286154-6d70-4f65-b068-57c7c964527b)");

unit.assert_eq16(16'h0221, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #968 25931ae1-6bab-41e4-b7c8-1732cc0b9e53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B5B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 8de7bb81-de79-458a-945d-dff49391dd05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 506cf747-3ce3-4d3c-b6a9-8b3ba0fc0b0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 a497e758-62b9-4f31-badf-f1d4629a9cc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 995eaf74-5034-416d-87b5-512087a9410f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 b9922122-84f7-483e-9cd3-c4bde24cf7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 65e8ca32-0ab9-4ebb-879a-6117523e940c)");

unit.assert_eq16(16'h09EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #969 cf403ad2-1535-41c6-82e6-c45f7cc5ab43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B5E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 9eed9375-5bd4-48be-8fdb-1464564cdab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 ae5dd8fe-8451-453d-8dd7-e450028f0fa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 e4f51385-aebc-4a28-93b8-577be09edefa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 bf7eeedd-c487-4d02-a29f-08773d0ee22b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 e9686eee-d9e3-4ac0-9399-1cb3af7d4367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 bfced764-ca82-47a7-b3f8-65f666bf4bd3)");

unit.assert_eq16(16'h0687, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #970 4c5e33da-02b0-4710-9dce-811ccf7e2d72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B61;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 fbc7c478-c1be-423c-a766-a8c91907a2a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 f82100ad-3e0b-4480-86d2-5092fd92eb94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 5cb055fb-42f0-432b-8c8d-c9e31c5c2e3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 8bd6bba6-8ba3-4e53-91c1-fb2e9f64395c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 ec771657-a50d-4e27-8b12-88fe13ef584d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 5cd7cc0c-93b6-4701-96c3-709ef5408eb9)");

unit.assert_eq16(16'h0C73, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #971 b09e331d-7ed8-4df7-a6cd-64bd4780339e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B64;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 6b7cb753-f6ec-4ff4-922c-e771426dec23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 f0c5120a-3d69-4831-a45a-bbce5bdf5707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 6c7b88bb-0cdf-4953-b8fc-9efe74b50397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 821ec196-4f35-40be-8322-0d23d1ad68f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 bd227622-17a1-4ae3-b8a8-6df605492ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 04d1494a-268e-43fa-ba29-c77a75ec310d)");

unit.assert_eq16(16'h0B63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #972 c3cc8d19-136d-45fc-8487-07bee0b8bdb1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B67;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 253acfad-23e9-492d-8695-22245b8a4dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 1592d436-e4cd-4a8c-b21c-6e513cdd1f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 7ca99183-3df5-4611-9627-fd805be077da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 1fa95652-8c49-4c66-ac35-1386e26f85ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 0297b024-4836-4f1a-a180-de58a2b82a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 2960e60d-abd8-46b8-bd55-084f117ad28d)");

unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #973 c7134327-37aa-4ec7-802d-1611e326b669)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B6A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 e2a9c463-13df-48e1-891b-d791b4abc4a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 59e852d3-7aaf-4607-a58b-87ccf88b5022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 64c0222f-428b-43ba-a1a1-dc9416d45fff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 c417edee-ebd9-49e7-ba4e-377f98d4e029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 d25195ca-9fbb-412e-924b-6df19e5e6acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 027811ed-953e-4206-ae7d-90b7139c07d8)");

unit.assert_eq16(16'h0CF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #974 4fcc91b0-c875-43ec-934d-ef9bbeea63a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B6D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 5c5c42e8-c73c-4c23-801c-ebce0f584972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 52bc6f28-6cdd-435d-b112-cc7d04b4bf3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 ac91922f-3981-476e-a3af-407af8f3d969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 754af059-107a-4ea1-91ec-6d6b1b7e42b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 78068c1a-6cf0-4565-b97b-8e62567cc717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 0b952b98-b11b-4c1a-9add-12d5d5e3ff33)");

unit.assert_eq16(16'h0D4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #975 050f16d2-9dde-41a8-8144-bbf00c82d67a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B70;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 f980d854-be71-41b5-8a24-4b1d2dc07276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 8b5c5a8f-7844-488a-b5a3-bf6f26464ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 a3dc6f81-eca9-4223-ad07-03d42307324b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 04985d79-a05f-4aa5-9826-d6f33c9c5ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 f1fefb33-259e-4b78-846b-316b3161ee9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 bc01d325-54fe-491d-9d7e-63de5b584ff8)");

unit.assert_eq16(16'h0C43, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #976 e71bfd74-28d8-4621-8c73-a1357c5a1b9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B73;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 1907312e-4573-4122-b1ca-60a88f01e741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 cfdf9ef4-c80f-4756-8938-5eec38a88fc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 127846b6-df01-4ebe-ac15-52f79ea2894d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 ed73216c-21ed-4198-87a9-6046ed3ccb46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 93760d1d-370b-4765-8860-0529ae9fb01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 3670ede8-39c8-4d21-b234-f8e86124629f)");

unit.assert_eq16(16'h0698, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #977 65e29f28-e9aa-4541-b802-7e3d9f22c1a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B76;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 09a61ccc-7912-4980-a238-63da6a666783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 db7cfb21-8c98-4a5b-8760-31945d133899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 5a8403f0-2de3-46e7-8623-f37a859655a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 9b938b90-5cc6-4abf-a0c2-e2dbaf5809dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 542f3400-5d8d-4f7c-9165-117ebca71971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 017b4155-588d-422a-b297-160f7b8e8b8b)");

unit.assert_eq16(16'h0972, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #978 fa68e469-dd3a-4a03-97f5-88d3bf1560da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B79;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 722b234d-884e-48fc-8486-5367cc8afc16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 af523959-bcb7-4f14-8330-9674a3bba123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 c96879f7-5858-4755-ba6b-1e6e586e265d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 a91ded77-5de6-4e0c-b4a7-8a584bc62785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 9d99a5e3-76e9-46fc-8832-19ec7c35c078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 0ace3d3d-9988-4d4d-9627-871971866b7b)");

unit.assert_eq16(16'h0A60, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #979 f1afad94-bcda-4948-bc24-09b6d5830604)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B7C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 35d6cf86-fb80-4066-a717-b96ec7c5fa6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 5835a67c-fd27-4a79-8f40-c5a58a0cb5b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 93e52058-077b-4fe7-8ec9-c95ee92325c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 42458f52-bf60-47e5-ae9a-7699bd5d29bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 7aa5f7d9-0352-4d23-93bb-aa578f0f693c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 2d19fb5b-93b8-4f0d-9010-1edb50915b22)");

unit.assert_eq16(16'h00AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #980 85daec38-743c-4143-b197-955d4ec35e7c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B7F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 4a2224ac-74ce-4708-9f6a-1c3d795dc2e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 030f5759-ef09-40bd-b092-0ded356144a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 8fc111c7-b48f-40a6-aa1e-c8f7cd87de45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 02a36dc5-a427-4db4-b6fc-3e76c0f4ffd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 374db5a5-7a71-49de-bbb8-45f9629e0c69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 6242a1b7-46a8-44d3-8f66-6002112340cd)");

unit.assert_eq16(16'h0B9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #981 15ad2919-badd-424a-9224-24b11cd8f651)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B82;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 4f36a32b-f3f0-4842-81d3-3208f1201762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 e007d52f-031c-43c0-8ad4-ad1b6e023e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 557f1465-e65e-4fec-8cdd-7e511c00f2f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 357621dc-5d47-4df0-ba13-e4c51e08b1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 b3675782-8478-4abf-8cef-8fd8737609e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 4e87ac21-fb7c-44d2-888b-97cd47923137)");

unit.assert_eq16(16'h067B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #982 d0828535-c956-4a1c-addc-b79b88546674)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B85;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 42383025-9941-4310-b1b6-25293885ab12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 6ab79ff6-8141-44bd-85ae-26adfcc45358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 8770ad18-9809-4321-b236-2e30e6d85e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 ff12139d-8a6e-439d-8691-cda35390ccfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 09e67449-4308-4c28-89c2-b1bf385c137c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 f1c3a936-5f80-46ae-ba3b-78ac8efb55d8)");

unit.assert_eq16(16'h092F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #983 ea79bf8e-3bcc-4fa8-9594-c3eefeababf8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B88;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 bb5e4527-d36a-41df-a345-9e1c83c8371f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 091e8eb6-1907-4923-b81e-039d8e4180a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 395cd181-b798-471f-b1dd-7af89f563851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 9c04736e-86de-4921-816c-d73b09d91b7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 47772b7c-178f-435f-bb9e-28a7d3a491a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 f073067e-dea3-4ed7-8642-b16a01fa8dba)");

unit.assert_eq16(16'h0324, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #984 4e060964-03a5-4ce7-adf3-f95a36edada1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B8B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 23fb8c06-ca9f-4181-a156-9a9a3dbfa308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 24438227-d9aa-451f-8fef-2a0d257e835e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 f16ae236-b765-4240-9545-b700ce584551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 d9e191dc-1ee6-47a7-90bb-6f03717ee592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 9f34572b-30b4-4fb5-a7b8-73f538e001fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 2b51bef0-1838-4a49-9ffd-b5f80a631aa6)");

unit.assert_eq16(16'h0E80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #985 06ddf972-0143-47f2-ae29-0222d449f3a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B8E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 f107548e-233f-4585-ac1e-bc0866e1136a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 52db87b5-95f9-4efa-8efc-8002d5b5188f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 41d2f817-318f-4951-8308-3e5d39d9fcf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 0e8998cf-44cb-4a48-b2aa-55e755f21463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 d60cbd5e-3665-4858-bd22-463ce42148b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 a169359e-cf22-4630-be83-596c6a56c608)");

unit.assert_eq16(16'h009A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #986 e1b7c6ec-a9e6-4917-a3c5-fbd51f8452c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B91;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 ec65099d-f072-4123-a3c0-6242d25d522c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 bb98668c-072c-412e-bf94-4aa3dcf46de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 e2bfebcb-55c0-429f-bc1e-3e255c6c6644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 fb8db1a8-43a2-4010-a25b-b7f6a082803d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 63d69e3b-0ee9-405f-90eb-6e37a6f9fbde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 4bc44b82-2e09-4745-b2ad-11942c3a3f50)");

unit.assert_eq16(16'h004A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #987 db7b0c8c-770e-48ed-a12a-cf0a2d82064f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B94;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 83b13290-d878-49ec-906a-ee038d9a0587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 825d4345-ad1b-4553-b7c2-272deb47435b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 baec5ed6-6ac8-477d-bee1-4535aa75fea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 cb7c1276-fe1b-4e37-8399-05f31a57f866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 6007b2ec-7fac-496d-aa84-f7d4b2a6fe1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 82b5b4a4-d52d-4dc3-88de-0e718fe0ff98)");

unit.assert_eq16(16'h0DB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #988 41d49551-f699-45e1-a37e-a65e9476251f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B97;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 323177ba-034e-4821-8256-fa252876f389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 7e441890-7b6d-4422-b785-e2fec97b9634)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 777beb85-1fc5-4997-9da2-23b17b027e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 06a85e8b-17d8-4bfd-a681-a849235da889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 79a5de62-713a-4929-82aa-0115b0bd4eae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 845b2514-b94e-4c96-8742-c507f8f44f85)");

unit.assert_eq16(16'h05E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #989 edc28069-1031-42f4-910a-f267902db6cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B9A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 73d6179a-84f5-4683-8da5-78e819c668c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 b488eb02-d065-4bd6-8aa0-e09888bf6bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 c0bb49d4-e4d8-40da-b5c6-0d3446b117df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 81c4ca23-9a9c-4578-a8ce-b1750f4510b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 6f1bea19-64b9-4646-b544-8b6427edc193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 be186e4d-35fb-44c7-8513-3f6af546b63d)");

unit.assert_eq16(16'h0B06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #990 fbc46001-336b-496e-b27f-fe2590af597f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0B9D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 4c7ea4aa-05df-4885-a2be-5354c6385b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 58a2a82c-2dde-4879-97b9-a91e41785592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 cc06c42c-2c75-49fd-8ac4-62e14dbbbd87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 f51a9697-44f1-44fa-b731-43cfefce4712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 ef539e06-858c-4a55-9b09-ba170f1af0cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 6bd37763-2a2a-4e53-b9ed-218953db34a4)");

unit.assert_eq16(16'h081B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #991 4bbd028b-b264-4222-a27a-dc2b1ba8a201)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BA0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 685f8791-0f5a-4955-a26f-6ddaf2e3fb5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 40da0f76-ac23-4dea-8baf-996681cb6fb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 f7c0ae9d-90f0-43d8-bf2b-e0f61713cdf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 09a0eeb2-3a45-46c0-a116-aae660d2cf6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 9b5da335-b1d3-41af-a9a6-266a139c93d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 d6c7f966-1786-4514-b088-3b2ee9c5cd46)");

unit.assert_eq16(16'h0B6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #992 6faf6650-b1a4-402e-85f8-69d4e8e85221)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BA3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 412c11f6-ac3b-4ca9-b3cb-1202b7e84e68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 08e24583-1b75-44ed-acff-96daaafe8818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 a9b05c8d-0e7e-43f3-be1b-ab57cdf4e89b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 0a585de0-6d15-4fee-8799-475cb8eee722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 13a9175a-fc30-494c-a795-5b76618d888c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 3621dd47-4d20-4916-9a15-9c4cdd018b17)");

unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #993 5d333664-23bf-48eb-8339-270e5790b326)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BA6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 1a904503-0bc1-4631-96cd-35854ff54059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 2e6e9814-1ff8-4760-acf9-8b04241642f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 6f928559-b6ee-4db7-af9c-751ed842b99c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 6ff4e4c6-b097-4855-9ab1-2da355dc3603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 9b0dc619-9418-4cd5-8175-18deb1038e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 d688ff57-ad00-431d-ae9a-03729f997bde)");

unit.assert_eq16(16'h00BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #994 0d59d214-8cd9-4f29-b30a-815e905d4b62)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BA9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 9384e78b-d5b9-4c65-8965-053256516e2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 bb01652c-32aa-4630-b647-97922281bba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 31e13cb1-98bb-4aa1-8e88-3b37aaf26a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 2b08ce76-b54f-456f-b78e-5b073848a40b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 af64b816-0d04-4000-8ebd-bd12bad910e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 9852674a-1a0b-44fb-84df-714d60c018b4)");

unit.assert_eq16(16'h0D1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #995 65ec549a-e25f-460a-82a1-80a121009ff9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BAC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 7d5ca373-9d6f-4cb3-a16b-0dfda3700e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 f5dc67b2-496e-4095-bd29-283e0da433f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 ea7dcb2a-2b33-4aa8-a8a1-a2e0407100a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 a1e200ce-32f3-4ab8-82c6-5ca8a92b978d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 42e807ef-3a6f-4265-8adf-174eb09c1bab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 1358bee3-8ece-4ac7-bd66-a129cc31347d)");

unit.assert_eq16(16'h018C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #996 c724ce73-7f53-4083-a2ad-c16a4d303f16)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BAF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 c50d55ca-c7aa-4b9e-b602-6dc822007066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 a2e4570d-bc00-46e4-a472-476dc96343e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 516d8653-2f16-4917-b68b-00ea4f45b079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 e0f7f5e5-3297-4f07-a07f-1e400fca5a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 e912b501-0935-4079-bb19-0afca0c8e9f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 56ca016a-db77-4c33-88dd-de16b8cc30ed)");

unit.assert_eq16(16'h04F4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #997 f5263f64-b9a4-4434-829c-db4e5499ef7e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BB2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 a46b24ac-6bb0-4000-accd-aad0b0b77970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 bc38e4dc-6528-4a3b-8da5-d71334181b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 c6685d09-a8f6-4f93-a719-fe34fc611b3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 294414f8-d6c4-4d4b-ad4f-96f4ffc58433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 5753854c-3730-4aa6-8a9e-6db44c1ab9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 bea5853f-52ee-460c-90d6-e930561edfa6)");

unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #998 dde13204-136c-441f-8edf-f97583252828)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BB5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 56e85b3f-9c2c-4f07-8bf8-055903dfebd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 e909b3eb-c518-4b7a-9b58-eaec8568d0a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 47569b20-2ede-4b9b-8d83-07910ef0221a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 2ff0fd95-bb48-4576-aa73-6413d7122212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 927be708-8738-45ff-b858-b83a883683f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 353a6785-cd94-407d-b3f6-9190533dc57b)");

unit.assert_eq16(16'h01F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #999 a553bbfc-cdb3-406d-a679-f8fa36a3e34c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BB8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 aa21ce7b-c1df-4794-be7a-9d7a30700f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 11c33500-685b-4efc-b3ee-30df8b7881ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 e037dcc8-2cc1-4f33-9f55-a9cac2bedbec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 7e6f8d62-2369-4584-968b-7b9304ff2e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 e12ed6d8-51a1-48b7-b7c6-849326881522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 8c63e0c8-16a1-494d-8e5a-9a9679b29d5d)");

unit.assert_eq16(16'h0173, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1000 a28f4cca-5ef8-4421-bc48-ab1f5e40b733)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BBB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 87e3c088-0df3-48ac-b83a-687b0cd1d204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 02d40fdd-e974-4379-9bb2-fb085c653cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 8d8ee4bd-cc42-4b4b-8c57-4c1ed17007c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 401d9884-bb5b-466c-a771-3f4983c5cc9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 afd664a5-bab8-4b52-be24-2085cbe8ddb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 64fa7ee5-2e90-4fe8-8ca5-d92446260728)");

unit.assert_eq16(16'h02D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1001 dbaa4d33-2ce4-4ba4-9b25-d85197ff00d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BBE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 2a5f6f1a-950e-4444-91b6-fc366e4cb1cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 728d94f1-7b71-47d0-8253-5823d11b0fc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 f2e0f8eb-c67e-4499-8b3b-516fa513f2e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 d60bceb9-e7fe-481c-b5a8-c27daf772bea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 101bdfde-ca73-4879-a6e3-b1fce135f599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 214c98f3-5f67-412e-a41b-067e3b9de48a)");

unit.assert_eq16(16'h0B48, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1002 a2f31a6d-d495-4b27-9d87-d2f135b7545d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BC1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 69ce3719-24dc-44e1-9db0-35428f64f6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 f02245d5-a2bb-442b-9fae-5e5e23a37726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 ca6fe745-207a-4b61-9178-d975b5afdc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 75cb9a06-8fb9-49c7-9926-74b13a8264be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 20711efe-e8aa-4f87-a1c8-1c2665632bfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 5d5ff1bb-c5df-49ed-a849-a659217dcf1f)");

unit.assert_eq16(16'h0F67, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1003 589153e5-8eb6-40d1-add0-68571fa78d9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BC4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 9de99d85-374d-4ae4-80cc-cb7dd0bfd0e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 2b5f7818-5483-4afd-a07c-9f53ac859ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 b189838b-e2b2-40a4-a484-66232d6cea90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 b2fcf61a-2541-49da-a97c-faa6e7a7cd5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 1b03d14e-6bfa-4edc-a50a-675672b040ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 88f9bb04-54ec-4629-9c53-7e2823cedd62)");

unit.assert_eq16(16'h0DCD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1004 287d01ae-4bb4-4b14-b714-67aed7160b89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BC7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 0824c5c2-d224-4cf9-b490-e99fdd563f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 8f4d2348-c72e-41ce-b675-71a7c694d8c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 d5ceaea8-7551-438a-ad52-7f3fbd872e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 3cca096f-f0b9-485b-84b0-ecd6b42bf50c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 90514b38-ea01-4a78-b998-e8b058a7b805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 c7585d07-34dc-4a95-9fff-e4d8e81f38f4)");

unit.assert_eq16(16'h0185, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1005 abb3fd05-3806-4245-a1b9-5cdf03920197)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BCA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 61836035-b2da-4fad-a325-34fbf14ac5cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 3c7edaef-2c12-4259-9336-b4ddb524e95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 0e9f357a-48ef-4c36-9ff9-3fed4a5cf43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 6aa604fe-c17b-4697-8420-284a613e8c65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 d6b71101-c4b8-49a4-add0-c88675444608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 26dcc2b8-6a8d-41a2-9800-3ee0727d9f9b)");

unit.assert_eq16(16'h030C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1006 44bf735c-8309-41b9-8a15-ce2f67c7199f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BCD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 35a07156-3650-46c0-839d-6bcf570d1cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 adea8bdf-7a24-4c9c-a4bf-dc3f4fd901cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 721c5d98-25ac-497e-8436-1b1a5e6c59a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 d7bde521-5743-4804-baed-402f9ba53ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 6f79edcf-6b95-45d5-9fb9-d0a3d68513d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 6cd3fa21-9cd5-45a1-a53e-ecfdaf0c1881)");

unit.assert_eq16(16'h07CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1007 fae69b46-d1cb-437f-8247-57fdbdc8af31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BD0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 b0fad0e4-cd68-4f16-9fed-ae833eebb37a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 7d615fb3-ca0a-495c-98a8-6cd8ab01e389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 e9669c6e-755c-4867-b565-6639e003b472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 8ff16e0a-3d93-4d10-83dd-deecd6131895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 68f35502-550f-431d-8f6c-6aace0a33e94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 28f41e3a-2b92-4460-aec1-04026a056523)");

unit.assert_eq16(16'h0947, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1008 ab02484c-2c5d-4556-b2fe-1876b47bdcb0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BD3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 6925b76e-fbf0-48b9-9671-29f1410d5978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 3bc1d541-d638-4890-b28d-2228cdfbfd2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 02325100-e868-4049-8dda-1196efb429a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 9b350812-2fec-43bb-87f5-6924d9adb8a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 667596c3-d6fd-4ced-a989-4fb78cfafc13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 3aa657ab-0309-48fa-b6d4-e54110746922)");

unit.assert_eq16(16'h084D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1009 ea604e5e-fe57-49fe-9133-bf097213366b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BD6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 ceb667cd-b526-481e-bbc8-907f286c27f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 82988f6b-fa5f-410b-ad47-9cb191797186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 4c277177-db28-4da0-90cb-f1f632da35de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 115de2bd-fcc8-4880-8a71-abef5526f81b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 bfe2a094-a230-4209-822e-73c9341758f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 648aec05-f9e5-4ba3-86ab-4e8ebfb170bf)");

unit.assert_eq16(16'h0819, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1010 a3f54148-8b6e-4fa3-8a21-549ca9e5f697)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BD9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 dc8a6550-1fe1-455b-9766-b77123b21c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 1c5912d3-d636-4c82-bbea-05efdcca3722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 731d200c-6243-494b-8edf-f35fe32467fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 f042de28-1b4b-4b72-b7a1-2f7a2d8b48f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 160ee2d6-20b7-48ca-866d-635f7e423258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 42f30830-47e6-48cc-90fa-c24c8fa06523)");

unit.assert_eq16(16'h02B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1011 5af044cb-4a7e-4880-b04b-ffc981cd29d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BDC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 aa044907-b96f-409e-8efb-bdee3937dd6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 5feb6857-8e84-47db-ad90-be8cb5a0f17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 6e5f47c8-e23f-450e-8410-6ab4efd38316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 b0ec19bc-47bc-4eeb-933e-cf0fbeefa212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 cf4b6973-789f-4e2d-8223-71d173f91352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 cc6e0cce-e130-42e8-828b-036135c8be81)");

unit.assert_eq16(16'h0AF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1012 624cee01-021c-4c05-ae9b-60efdaef2fa8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BDF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 8397cbf4-7ef3-40d6-b50d-04d6f048ead8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 e72c4118-7eca-46bb-9297-4dd719268ee3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 ff6fc6ac-b5e5-4654-b269-95a1e15f505a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 874cd66c-c358-4ce3-931b-28296203e6c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 72582dba-3140-42c8-a194-0c2cddf4ae82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 35f1c89f-579d-4301-b73e-0d71ba317485)");

unit.assert_eq16(16'h0547, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1013 b33bf65c-3086-4419-9d6a-9c60521ccf30)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BE2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 62772a7d-ec80-4f52-a89d-8874af749395)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 e98460bb-6e13-49d4-9a6c-80e1d2d08b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 8928ddf4-3d3d-4b13-b06b-0ef0c88645e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 0d118155-0c4c-4f45-9cc7-d3373f76c463)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 67bd0693-59f4-4c08-93cd-10e9db201031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 dbd2346c-f387-441f-bd9e-c99113f75e8a)");

unit.assert_eq16(16'h0C6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1014 6bad8227-9de5-4a96-8802-762afb5c95a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BE5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 a8686251-a08c-4152-a079-2bf6165f567a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 e8c132e2-bba9-4c55-a0f4-c8355df48de2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 beda4ece-d9ec-42af-81ec-8ee976f6b67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 c0c8e8ed-057a-480f-885f-3627b260b22f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 42e47d5c-279e-469b-9a95-bd16f8e0d046)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 3afd63d6-d395-4aac-8fff-70dfab2be150)");

unit.assert_eq16(16'h0165, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1015 46df38d8-9eeb-4bdd-9483-5f3c50f6a82d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BE8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 49372304-ec3a-4358-95e9-fc142a40fca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 982f55ac-7c6b-4d53-a4ac-c2f5f4b86f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 6ab9b947-e03f-49fc-b393-fdda21627c06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 6aa6053a-13a6-4cdb-b7de-9ca861064136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 51146963-4a44-4068-b215-2a5bcf7284d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 23ab49f7-e477-4e5d-83b9-b97e73fa83bf)");

unit.assert_eq16(16'h07DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1016 aaf516d0-a5af-4d19-b61e-25cea56c45c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BEB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 2af480e2-a37f-4a86-aea1-71be04622ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 35eb594b-479b-49bd-b6df-bc543d16dfce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 71047247-5582-4110-b404-a6ac56809cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 05b073ac-376a-49d1-ab5d-e4f13ec348d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 03922dd0-79f9-49fc-89f5-79b1314aa543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 f886a653-15b5-40c0-b288-fe3b3595983e)");

unit.assert_eq16(16'h0C17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1017 5db5b15d-3701-4dc0-904f-5c4ff1b01751)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BEE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 1d177f32-07cd-4da2-891f-b356b295bad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 ee7d22b9-745e-4ac2-85db-9a4145315534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 713dfcc6-6d3e-45f9-92da-ac775533269f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 2e159950-8541-48ca-a47c-26cd55a313a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 1721ce27-40b0-4176-8f1e-0e4b9cdad4f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 903f18f0-9956-4185-838a-652739600d63)");

unit.assert_eq16(16'h0BB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1018 239954fd-6c5f-4df9-a7f3-40b4207bdb9f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BF1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 6d349622-5f00-413f-91b2-5b7957a23104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 2a19072b-4e0c-40b2-abd0-5b65a3d231d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 033505ab-ff9d-45e6-b3e7-8e3b311c6512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 1c8905a7-6ba2-4352-bb5e-6903971335c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 06dd4904-fbbb-47b0-95ff-5d97ea0149c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 cfab06b6-25fe-47b0-9ed1-f5902a06de05)");

unit.assert_eq16(16'h0E08, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1019 4a242f05-673f-4277-b738-a686457e30ba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BF4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 7ffe5f76-7f5a-4afc-8805-ee718078ea2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 e2a3688d-e0f5-4f0a-babb-00943fcd5624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 94dbc63c-b271-4076-832c-0ebb5cb82d08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 8d233bfd-ef33-4944-b3bb-9d778758615b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 e0d9e5e0-8100-424e-8894-c94795f89221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 133a1248-a74d-41ff-bed6-0e46529f3f52)");

unit.assert_eq16(16'h0819, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1020 e2afac96-b4c1-4e3c-9266-24fa3e50b947)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BF7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 7472924e-8c00-4030-b2f8-c81f18187aab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 b26b1a52-2ad2-4206-915c-f181a8b67603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 e57ce67e-7c16-45d7-b821-79dc6546e69c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 76b68913-6858-4e64-96dc-86190b73f274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 64ca2e3a-3067-4f08-b7b1-66b18963f024)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 05bd4da1-c644-4e97-a326-00e42af39c57)");

unit.assert_eq16(16'h0605, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1021 b68f77dc-36ac-42ad-b692-cec87ceed9f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BFA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 2d08d2c2-ceb2-4f03-9626-32254bf64070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 c99841dc-df17-4d1d-a570-8a0d66f3c711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 76eadd74-53c0-43a3-908c-323de51faa1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 1dcddcd5-b29b-4c8d-8983-6e606ebe99fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 dba4eef2-7e06-49c6-b29c-b6e26a28f29b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 a366263e-125f-4fbb-bc0a-4d3a62742f1d)");

unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1022 b0aaba4c-9b2f-405f-91a0-0d39080a7bc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0BFD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 2a0d85e7-4b82-4e26-a267-c8de1c6826bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 e1fe9783-e3b2-40b3-b327-550c32a29865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 6951d90f-5b80-4f0e-85d1-2b1c7ec663fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 33be6b02-bb39-4f2f-8ec1-63fea774a2df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 13a1ce3c-168c-44e2-818f-3aef344a1b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 ca3a8d77-8d64-4eeb-9bd2-433c0ccc5c7f)");

unit.assert_eq16(16'h0D94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1023 f24549fd-bb1c-48f8-a55b-0494dfd7b547)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0C00;

#(CLKPERIOD / 4);

unit.finish("jumpjpc ('JP cc,nn')");
