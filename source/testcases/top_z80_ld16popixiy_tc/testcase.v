unit.start("ld16popixiy ('POP (IX|IY)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB4DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0546;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'hB00E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #0 5374f242-33b4-46c3-a3c7-08e9388cd540)");
unit.assert_eq16(16'h9D22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #0 a1a3296f-0075-4e2b-bbae-0e86d249f942)");
unit.assert_eq16(16'h0548, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #0 5b24f67e-960b-4a56-9a7c-6454389dccad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 e9083dd6-4151-4532-b59f-09e6694c0f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 15403156-f367-4acf-8982-48ed0a0c4edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 011e83a7-16cc-499a-90e7-0423dca38399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 c7884dec-e479-481b-a7be-799af4c57aa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 d6dbdfc6-3756-4f08-a62b-51a7b6b1ed4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 85ddb709-5656-4dae-b9cb-433f320fe853)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBCE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'h5FBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1 490431b4-0517-4dc7-9281-9144ff7519e0)");
unit.assert_eq16(16'hBCE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1 a5f0b7c9-f71a-49b8-baf0-414ae3963ed5)");
unit.assert_eq16(16'h0CC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1 3fa4a03c-8fe2-47a5-9ee8-58b28965c75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 4da64790-3f41-4152-bf4c-361a321fc676)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 2dd57cd6-f203-46ef-8302-c70599c4f6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 5e9cf11b-bfd5-45e9-8454-d474529f712a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 c80ad83a-2a6d-43ea-b12d-1bf8f93d5260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 00442a1b-a8db-43cb-ae43-65e683fa7126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 aa6c0108-755a-462f-8468-ed917b667593)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2AD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h129A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'hA189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2 7a6e9744-0fc5-4e08-aa92-6147817deb99)");
unit.assert_eq16(16'h129A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2 bdce85c3-5b1f-40bf-845b-35f8cfc23cad)");
unit.assert_eq16(16'h08ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2 16607b18-65ba-49c2-822e-86267fac9545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 dec980d6-ee0f-46ac-8590-a5b76d858f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 ec972d33-fc86-4d86-8018-e44b3b27fb6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 5a412f3c-a633-4cd8-95ea-c7c7a61ea9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 8ea5a932-5ef5-4cf0-9c76-48f10f906e33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 65de33f7-9022-4dc7-a5a8-80acbee52ab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 07782819-36f8-4870-9fb2-563cf7c2c3c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'hD4AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #3 cc796d09-41cb-4213-865c-588c598f0633)");
unit.assert_eq16(16'hB2B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #3 d1956fdb-6509-485c-904e-af9babcf4bdc)");
unit.assert_eq16(16'h06E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #3 a334c8db-a917-4821-925c-4c8b7a44f2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 50015d66-4854-427e-9f7b-f17e08c99d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 5bce0fee-bf66-4a1f-b888-534f45b6b4e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 c9e11cda-883d-486e-8653-fefd085befa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 f3e0cc40-6558-4c1e-9113-968a273aa427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 727d94ef-e3ce-4b7a-96c6-31ffc2e6875f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 fe333598-128b-454f-86b9-ea9bff816e45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2AE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'hF0E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #4 bffafa5e-b4ab-491d-b548-85bd339aeecb)");
unit.assert_eq16(16'h9D20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #4 1c7b8dd8-0995-4582-9a30-a25bc8bf0ff2)");
unit.assert_eq16(16'h078C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #4 8531c64e-8ab5-4cda-bb1b-caa5d5f7dd05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 2d31a2cd-5ac8-401c-83e9-7e612dae848d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 a0481a6b-519b-4888-9d48-5f02d6931717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 f80cb3e1-300c-47ee-9681-33c1ca5a647c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 c9aef6d7-23bf-4537-ab41-faefb5880733)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 70ed06da-0cd6-4eff-a3ab-3317636dd930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 c060627d-7c04-4e9d-8659-7f4b15610c94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD81C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0133;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0618;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h7D58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #5 54bbcf27-06ed-45e5-95dd-305b15299bb9)");
unit.assert_eq16(16'h0133, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #5 6e4d32da-54d6-48f0-a6df-1a96f0a3ac29)");
unit.assert_eq16(16'h061A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #5 0f3a064b-94b5-47c1-805a-1158e30224f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 a77a2cd2-243c-4442-b5a2-e81920988489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 9bbdb828-f04d-483f-8a3a-1398f148e717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 6f285299-3512-41c8-8711-97ff7b024974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 0a010c7c-382d-425a-a127-7c64d0a86c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 ab9033cd-739f-49fd-af20-a927be99b140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 df93896e-7410-42c3-8c91-ba3b32cdb6cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h3F2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #6 33412b36-6c0e-4bb6-ad76-a473ed7e8ccf)");
unit.assert_eq16(16'h4D32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #6 78277901-5664-46e0-9c38-9e7323c1ccaf)");
unit.assert_eq16(16'h01BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #6 ad2b2b41-4e73-4526-9d18-6bbdddfc9c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 2cbeebe9-c9a9-4e89-9e0a-136abfa1686b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 f32c2958-c672-4b15-8ce2-7d2fd5982b01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 8dd5cb42-a3ca-46d3-a32e-6839c964c8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 e1ae6e55-0cda-4607-96ec-55c761825b8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 74e935f3-5567-4a1f-86d9-3f498cbc3b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 399a7200-7ce8-4e01-a4f9-9ff1a31784ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h841C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0977;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'hF983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #7 4d5bd356-cfc6-4201-bfaf-68b61d0a7d67)");
unit.assert_eq16(16'hB9C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #7 eb7e19f7-139e-488b-9ce0-6820eee9363e)");
unit.assert_eq16(16'h0979, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #7 3552d4c4-f84f-4669-ba28-b076adf72fdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 d560f0f6-6e1f-478f-9e87-1c55ab65b786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 e04b12a8-b5e4-4922-ab1b-cf27988dd133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 5b7089db-3113-4451-9dab-92e0540f05d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 110ee4e3-df78-4c7a-8599-04565c649570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 cdaf56ce-070c-4778-a228-e8b4e241355c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 33cfc85b-4d51-46ea-9390-bc2322831a54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4FD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h74F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #8 a39dcf11-70c9-4d3c-a68f-60a5c8fa2f44)");
unit.assert_eq16(16'h92EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #8 4f33b4b0-55a4-4879-83d3-5a553e2d57c9)");
unit.assert_eq16(16'h0930, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #8 327c1aeb-e881-4254-819e-1c98f396ab95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 fbd67811-2c37-406a-b6d6-27e6c8e51dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 f5e51a85-a09d-407a-ac1d-a9482644689a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 96ead4bc-2f85-46ef-8d04-da22676a353e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 db49feaf-0e69-459b-93cf-e99bb311ab9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 0f3fd338-4a01-4d4d-8502-6d09a2a9ec4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 326a4dee-81a6-4122-acbd-122ae1f9974d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6549;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h209D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0882;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'h950E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #9 57db31f4-c62a-4ea5-9c12-fe41bf280379)");
unit.assert_eq16(16'h209D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #9 e83f4bdf-98e0-4526-9eca-617b9b9f35d2)");
unit.assert_eq16(16'h0884, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #9 9c45deaf-181a-47e3-a5c1-be9e4e711419)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 3e63caee-5ed9-4c42-ba93-a038c70c409d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 76d1718f-063d-471a-ac69-8996258df9c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 b1d2369f-93fc-4de4-a27f-de4aa7c0af3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 a7dd4ea1-323e-4eff-85b1-3df03fc6a04f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 b986f20b-6632-46f1-b4f1-1cb2c0e60a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 31cfc911-f25a-4bbb-82ce-f6b6216ba379)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hACB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'hACCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #10 ff91c169-7fca-4a4f-b979-7880a04fa88a)");
unit.assert_eq16(16'h3D33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #10 523eaef9-1ed1-4250-b54d-1749019021a5)");
unit.assert_eq16(16'h02D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #10 82aa46b4-e1e4-48fb-b2a2-39c68d5a1bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 a0c6cb48-0f7e-4833-b485-7d7d5be220ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 454ea401-2507-4a34-934f-ee5494c01074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 398bc409-36a3-47c2-bae7-951fcd53c48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 7cadddda-8857-4712-a21a-7ac153826ff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 14418a1f-beba-4304-8e09-3a12df9cb0d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 1bbcb4e3-2b27-4b72-8f5d-edd642cf7fb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h859A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h2BEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #11 6a055462-21ea-4a0d-b9f4-a00c986d951f)");
unit.assert_eq16(16'h859A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #11 0a85652a-d697-4137-92f5-9b91f80939d1)");
unit.assert_eq16(16'h02F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #11 746168c7-f43d-489d-bf9e-2d4ceae1c38b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 f91e0bf2-78ad-4f1f-a960-395acdae4cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 741a8436-cbc3-4ec1-9a39-86bb74ed0743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 5156189f-26e5-4c5f-bad6-5935f157d7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 a72fc935-69d0-4b00-bd5c-c86923266033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 24dbd136-1f04-4823-ad83-4122ce901ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 f0f1ff82-6e3a-4c23-88e7-33a60015db9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD5AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0322;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'hCB9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #12 8341186f-7c4d-442c-b85f-1e7927920b81)");
unit.assert_eq16(16'hD5AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #12 668f4888-5b34-49a9-baa1-441ae65d74d9)");
unit.assert_eq16(16'h0324, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #12 a796ec41-4d9b-484a-bda0-4c23b8a9cfd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 08c07a77-940b-4245-9b95-b6f8ae4accd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 a353babf-25c8-4a03-bfbb-a660ed7177e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 02c182d4-00e8-46b4-adfe-8278c265be11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 8cdb2742-3806-4a0b-8a49-578fcccf1b73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 eabba323-82fa-4f95-a145-9a39c0837067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 67851128-0477-437b-8bff-35e59248d84a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0112;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h6095, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #13 bb55b3f6-4828-43f6-a9de-68948f520483)");
unit.assert_eq16(16'hCE66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #13 fc22da6f-203b-48ce-b2c3-52f8a5db92a9)");
unit.assert_eq16(16'h0114, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #13 151e5307-21ff-4a75-b17a-d2de134614b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 1e4b7218-daa8-4d48-bedf-5d8a1192de62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 a0718b52-5b4d-4020-a5b6-b0a990ba158a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 7a099f6b-5755-4898-8c7d-68c1a6d599b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 300f9ebd-5b33-4207-9f2a-7fd99e25669c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 3b2758d5-1173-4e2b-b35b-63bf961ada30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 c6cd821a-ff1f-4fb3-a1ba-603cfc1ca705)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h7D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #14 f41a321d-485f-4e4f-8cee-cb1237633e22)");
unit.assert_eq16(16'h4DA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #14 b2d59131-dbc4-44db-b0b8-de425c489d4b)");
unit.assert_eq16(16'h0BEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #14 cb6ab3d2-883a-4ab4-a443-c73aac170061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 22c42fc8-eb7e-4558-8297-728f2a2c55c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 766946c3-9119-47be-aa83-be5ee0f01c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 0dca77d3-fab5-47be-9af3-11db0a364dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 5063cde1-5485-4d66-a3d7-b3dcdb9309aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 8cb4d3b5-5e2a-45c8-8c31-d3219388aa6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 7d82b455-31b3-4d5a-8cdf-179dbfaacc26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD698;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h451A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #15 d23768e4-c185-409b-9ba6-1167da16bbef)");
unit.assert_eq16(16'hD698, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #15 2cd84a47-dca3-42b4-beac-8bb324a88608)");
unit.assert_eq16(16'h0CCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #15 f22f6910-25f8-4e8c-b3d7-b8501c6cc97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 7c7fdffc-f3fd-41c1-aba8-56d5bf6eb26e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 3d872fea-595c-4b96-8e38-68dd107f9440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 d388ad73-e394-436a-a1a6-2dda2ec0aa1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 a96c6c04-e5bd-457a-baee-95baea334d90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 e908d2dd-0e4b-4090-920b-13ec56f7b5ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 7f448326-cffd-47ff-a222-3db083d59952)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h669D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0498;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'hAA58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #16 9553a4e0-d1d0-49e0-a7b1-49aac478e0e4)");
unit.assert_eq16(16'h3B0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #16 5aa353c2-1611-494f-b29f-954dbb581880)");
unit.assert_eq16(16'h049A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #16 d1a548fc-9edc-4cb9-bac2-eacc49be938f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 dd15ea06-809d-486d-a80f-0509faf9c91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 d74cf3d3-ff43-4378-93c2-efeec4153b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 c8e5384f-e4ee-4fc0-9f38-ac054f3e0e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 bd8b702e-6b86-41ac-8eb5-263a92afee94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 c099b198-a107-4be6-8549-a0aee915b791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 f87af05f-9034-4a5c-bec5-d376e47d0bd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h691A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h631A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #17 62f5afca-eda8-4720-a2ef-47113cea709f)");
unit.assert_eq16(16'h691A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #17 3f24aacc-b7ce-42ab-9c92-5425453f7264)");
unit.assert_eq16(16'h0BB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #17 3a33fc55-861c-4b50-80b7-034884ef3aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 71896a96-c1ac-429b-acc2-cc0c73e7e042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 ca0e20a0-61fa-4dd9-8ff8-13dafebbd145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 10b456a1-ffc1-4d62-becf-f77f72c539e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 1d145944-8cc4-438b-8630-4472d7e6e2c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 4212dfdb-4633-4070-b298-ae4e115b60da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 d5cd4f89-4f75-4da1-9f48-2cded28f0be3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h162E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h1D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #18 2b440d7a-93ff-473f-9ceb-51b8ae1fd6a2)");
unit.assert_eq16(16'h4EBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #18 70a25832-3e01-4300-aa7d-029eda91503a)");
unit.assert_eq16(16'h03DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #18 8d22f5a2-1c0d-4b63-aafa-f266d99b693a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 3c69e273-b536-4a36-a543-181f82a1203f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 01b916dd-405d-4075-be9a-80271e7c1db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 838c88d6-9c88-4586-b012-09611a1c289c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 bf8c42eb-154c-42ab-9363-26baa689621d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 60d826ee-e6a6-4257-b496-0892b4e7b8bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 380fec67-0ebb-48fb-8353-837507cd02c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'hD98C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #19 56661822-71f2-40a8-a4b4-ea4ef473092e)");
unit.assert_eq16(16'hCA2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #19 eeb84b59-d7fd-4125-a353-169e3e2326b3)");
unit.assert_eq16(16'h0BFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #19 4ceccc0e-4588-463a-adf8-2d8e1706bab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 304d721a-1c2d-487e-8b2b-ff91eec42d64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 a45e5b4a-4365-4b2e-b2a1-661dd686cec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 70d20cdf-4fa4-4886-ad58-f78764d864dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 facf248d-2d97-4ea7-871a-4fdcde050bc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 ab00c7de-c221-478a-a64e-996e56fd0d4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 623cdc27-0103-4e53-8abc-594fb5711d29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE926;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'hEC07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #20 7503498c-e058-46f7-92f5-2fd7204d85bd)");
unit.assert_eq16(16'hE926, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #20 3f06e376-971f-44f9-bee0-78f446db3333)");
unit.assert_eq16(16'h0B13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #20 dd17a3f8-11c4-4cf0-b109-53ed567b89cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 0354ee7c-79e6-41d7-af96-ef7f96de828c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 e925cea3-a33d-4564-a117-fda9b7d5ab4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 3305740c-dca7-4cd0-8896-742254026b85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 7b6b7f78-1ed5-475c-822b-77f7c1f6bfa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 91495bf7-a608-488c-94c8-5675da0d6067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 569b71f6-988c-490f-97c3-0767fd16b5c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h97FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2024;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0004;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h1F57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #21 cbdbf9c0-3976-45d6-8ede-ea3b93e252e6)");
unit.assert_eq16(16'h2024, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #21 a369ea5d-e2dd-4bbb-aa66-34dc5cc6e173)");
unit.assert_eq16(16'h0006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #21 343c44f8-24a4-4da0-b191-34532755aa18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 77088671-5a64-452e-8f8a-135e1e32e161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 8cac60b9-8f9a-445b-93b1-92882b9bc35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 5e80aa4a-5d8b-4cd4-a77f-6132f0a87fdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 189ee1d7-7063-4344-ac0f-dbf07ee7e126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 1af28d0c-9b2d-4edf-a5fb-6cb02c0cd833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 404aa141-e950-49ed-97a8-819d4c7b8a81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE626;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'hD33D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #22 292aec48-e7d5-4143-a5eb-212fff1ba29f)");
unit.assert_eq16(16'hAE0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #22 0a0352c5-096b-4647-8c9c-2b669cf95c09)");
unit.assert_eq16(16'h029D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #22 faf7f4cd-0936-4351-b153-23b199e748d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 2594c3b4-dbb1-4d6f-bc75-3b1d4283b7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 a6957cc4-fbee-428f-810e-8dea8fb97e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 16bbb8bd-8cd1-4764-b09b-3282e6e25236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 83ca30ca-0285-4752-9a8b-700f83f24504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 aa5704bc-7a5e-4c39-8be3-6767707ac8df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 b4ce0e33-be1a-4fa9-bb50-fbf6c412ecd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h473C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h1D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #23 069c2df7-a283-4eb9-9a5f-502252301eb1)");
unit.assert_eq16(16'h1F4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #23 d5c7afe5-9f3b-49dd-9168-924506596976)");
unit.assert_eq16(16'h05BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #23 f23ccc8c-155e-4d40-a77d-1acacc30cffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 a16a076e-a122-4244-81ae-94e5a4dbefbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 541ba4f9-0e57-417e-a969-198d060fe994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 2172300e-7d2a-4ce5-b08a-617a06c17b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 b3e9009c-7da3-4243-8d0a-290a861146d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 f608a170-c856-4a2e-b957-0f01d64904b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 db7fe6b6-7633-4c71-9ed7-17e71a9c6125)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8FEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h94EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'h0C45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #24 aa5c8c51-a687-4e5d-8fb6-4aa549ab8863)");
unit.assert_eq16(16'h94EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #24 5d30b18e-a348-4ef4-8f84-6444ae0cefc5)");
unit.assert_eq16(16'h05EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #24 c0a5f095-1252-4ae5-8b1e-a3df68b59e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 4172243d-75ce-456a-b47a-1f0380af599b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 13072157-481d-40eb-bfa9-0e33964e1e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 1d130010-93cc-4fca-aebf-c4079c299361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 a3bde045-3178-459e-9173-56971fc3e216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 54080241-aebb-4fa6-8174-d65679fdc76e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 028b7873-acfb-48b0-9ec9-3aad10578d01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h357A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0876;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'hBA53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #25 9e82df0d-f37e-4a6d-b772-d123060e6e62)");
unit.assert_eq16(16'hBE9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #25 a9f643f9-3a15-4842-a837-f65881db5426)");
unit.assert_eq16(16'h0878, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #25 14d6c043-4c85-4b18-abf2-37a032472a2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 752468e8-3eec-4893-bfad-e349bd009a41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 dde5553f-4951-439d-8865-f6c6e03b6d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 d2ccbf99-2add-4dc4-b101-68af5d194aa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 310545a3-f08e-4364-900e-2b38be016667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 bffcb164-31ac-43e9-a8ca-0f4e70ef417d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 7653d514-e7a4-48cb-afbf-e3b5c8de9ec0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6959;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7AAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h069A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h26BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #26 f29947f7-9993-4805-869c-619e6ffb5fd9)");
unit.assert_eq16(16'h7AAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #26 9ed055dd-b4d7-419a-9b5b-8be8a62e5176)");
unit.assert_eq16(16'h069C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #26 d9348785-2226-4bde-a5e1-a8680113fe5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 933fd742-6b04-4ba9-8238-6d3c95ff6eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 7ef57c93-1e1c-4215-bc36-bd3999defec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 3aebfac5-aa11-4668-9b46-62be4f7aa8d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 d8417a6e-48f9-4aa3-bcc1-f659e6f40151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 61e4c868-731b-42f2-901d-aac99f962179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 26231ec3-6479-49e9-a987-17117b0211f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4283;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0988;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'hD905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #27 41acd886-97e4-4502-a0ce-73b940555004)");
unit.assert_eq16(16'h5E58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #27 197569a0-51c1-4cb8-bdd1-02050f3c34c0)");
unit.assert_eq16(16'h098A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #27 42b472f7-3f6b-43f5-abe1-c7d0bb1945c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 045b10fa-2ef3-496b-8e3b-ec53946a77f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 4142752b-0b30-424a-a9fa-53a04d962f86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 b4f2b5d4-3641-4c3c-8d5f-c34636a385c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 3cd3d1cf-1b62-4bfe-aab2-7ffdf432529c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 ac498d5a-ee2c-4143-9406-5e6f2921a719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 798341f8-1cc4-43b5-a490-daded562cf3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h753C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h32AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0376;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'hE424, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #28 f50c22fc-7bec-42d4-8639-2982ebb43529)");
unit.assert_eq16(16'h32AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #28 fc6d4843-a055-4dbb-adee-a5c25dcdba10)");
unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #28 e25655a5-9bb3-427b-926b-85bb80fca1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 c297e498-a521-494c-a4cc-9ae1201c040d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 0dce5574-314d-4742-bc2b-6b6730ce588b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 f3ec8d86-fb87-478f-9583-aed9d0385694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 b830056f-2ee6-4ada-8583-7cafbdc0fff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 33896149-19bb-4570-97c8-d82cca5024e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 385ffb59-ec84-42e3-b66b-4762d91b5328)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA456;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB181;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h9023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #29 e53eccb8-1eea-4682-85ee-3f319d2ef5f8)");
unit.assert_eq16(16'hB181, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #29 8d0ddf38-7c29-4b5e-aa26-31f90217083f)");
unit.assert_eq16(16'h0A41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #29 66e535ef-63bc-4f97-82b3-0cdcc7519710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 25f5502e-055d-4eb7-8d67-a95c6d98a3fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 af83464b-b045-4dd3-be8a-bf11bb24d68b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 0beef6da-9b77-4096-b8cd-a882bd7f301a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 cca7b094-91fc-4547-968c-daf207ea3fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 d24c68da-363c-49b7-86d0-ce0dc2bcd71e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 bce15bd8-225a-4dd3-ae02-94f289d879f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0055;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'hE2A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #30 b70d83b6-f39e-4ee1-a670-765d968cd76c)");
unit.assert_eq16(16'hDD86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #30 901634b6-d43c-4d51-b59e-63e17b795ca2)");
unit.assert_eq16(16'h0057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #30 8335f2ed-f4cd-46e3-84a1-ed44a4637c4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 eb35c8ac-90c3-4769-8795-6d08ecbb1102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 16a49e4f-796a-47d5-8e93-7b76d11b3405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 4ac126eb-68e9-43f5-b930-43077b123986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 e8273f6e-4ba1-4a58-b918-f29e2e69b467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 307eb446-56cd-41f6-87b5-e4c4776a8c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 91465d11-e0d4-43ba-8301-666d3c11aed6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'h1744, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #31 be5454df-0f93-445f-9882-a8c79f883e98)");
unit.assert_eq16(16'h01CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #31 f1e3844d-1395-4bc7-8bf4-b33295061631)");
unit.assert_eq16(16'h09F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #31 19dd90c9-6587-4a9b-9350-e327bdbaea30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 190ba803-4eeb-46a1-80d9-22f84c778a02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 d093e4ef-050a-46d1-958f-d9a4f376a6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 87c61a07-f40d-4696-8277-f7d18dd43459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 93d23a94-8085-430e-a957-bece0dbeacf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 cb9a0c48-bef5-49e6-b671-0c844894eb93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 7d18be8f-4324-4f97-ad8a-611544ea2fb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0488;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'hA182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #32 dc8dc41f-cc79-4247-b438-3bb96769e533)");
unit.assert_eq16(16'hCC76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #32 d875880b-9ca0-4ada-b864-04ac8f050697)");
unit.assert_eq16(16'h048A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #32 2c2651a7-ec12-44e5-b77d-7361b6cf072d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 085831bd-102b-40a9-b43b-f431768f3f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 e9558d4c-e4f1-4c3d-93c4-680edd3ad667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 2bb4ee08-81ee-4fef-8a28-c8c24a12369c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 749075d8-a76f-486e-b15d-63421b29a800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 fe69272f-b067-444a-b3fa-05d3720cd842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 1efc1b44-365f-4f81-97bd-b53a133bc39f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h2CC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #33 f9628f53-23f7-425b-8610-89f023c40ef3)");
unit.assert_eq16(16'hCBA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #33 489744e5-b521-4c3a-9433-f81988c5dd05)");
unit.assert_eq16(16'h0C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #33 8943da2e-b32a-4f08-82d1-78d15a53e9d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 bf3174b3-4782-453a-a828-5d4e963851ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 0872b060-697a-4a76-bede-0eae1cefb044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 f7f32176-3a13-46ed-9d1d-20cd0b0c64fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 ce1ecb1f-d2e4-40fd-8a78-2aff111e97fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 8cf3a81c-dd18-4e28-9b67-6eca85ae24f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 2ddc13a1-3065-4550-a29b-4dd542428b81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC189;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h39BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0705;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'hE6FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #34 b4ae5d4b-5048-4551-b7b1-367a7047ca11)");
unit.assert_eq16(16'h39BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #34 7afb09d2-3ee5-42c1-b36e-716d1977058c)");
unit.assert_eq16(16'h0707, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #34 f30f88ae-dbcd-4d7e-97da-a7fbe75b1c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 af0d14b0-f45f-4145-ac89-9dcd739cd78a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 e2563cce-d1b0-4761-8daf-8a3bfb8adda4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 073cfd92-6eda-441b-a7e3-00380f01e321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 4056613e-27b8-461c-8d67-a961ab8aa3ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 d0043bcc-57a6-4c0a-bd3f-8128fd1f4e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 f769dac5-812d-4bf7-939e-4fd380707820)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h48EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h7BB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #35 2ff0f7ba-969e-4a6d-9c43-449f53aaca39)");
unit.assert_eq16(16'h3E1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #35 90e28964-95b1-49b5-a38c-c0921b2bca51)");
unit.assert_eq16(16'h02AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #35 f12767fb-777f-45e1-8d19-39afed2962d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 c6513039-842e-4daa-821b-dcec81a88d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 a23ed73d-719c-480b-ae5a-0103463b1ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 6d7d357d-024a-4976-aa28-7602bfb30df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 855945a1-2f37-4cfd-9af4-2581c3c35159)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 c858f180-3f69-418d-b45b-a2b909cfcfd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 7ff015d9-0105-4441-80b6-f42172863fcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFC74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0293;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h2238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #36 5740bef8-66c8-4ad3-a97a-f5ad051652dc)");
unit.assert_eq16(16'h2D03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #36 67c4b644-9173-4d6e-9392-1da714959abd)");
unit.assert_eq16(16'h0295, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #36 d02985ea-00b1-4413-a985-6189f3a0e2e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 c893cb83-b5b2-4754-95bc-dcaea8e42e3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 df0ef5ec-670e-4c9d-956a-201836c5e5bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 325bc5a7-f980-4e5c-ab24-3736b75122a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 86c4c95a-a3e6-43d8-a0f3-9bef24763efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 5ee728f8-70e4-425d-aed0-560ff034850d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 a5d7fdca-ac0f-499c-9f3c-60bbea0c5c7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA538;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0123;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h695A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #37 9eed6cbc-603e-4489-b1ef-348d324252ae)");
unit.assert_eq16(16'hBD61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #37 f3b47f90-0cff-41e4-85ff-99d041095a43)");
unit.assert_eq16(16'h0125, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #37 6fcab90e-a409-440d-bf41-c5a25677950e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 2de9bd28-74b7-4294-899c-f56134ced745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 87dd18fa-0a50-4f84-aeef-c3af8b4c2a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 df47efe0-32ce-408a-b108-16cab002a191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 00c3bd23-9618-472a-9b29-e3cd8bd40725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 d416204e-06c7-49de-861f-17b093b7ee2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 ef39e60f-9357-4c2e-a84c-95e3cff9d3cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h969F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0534;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'hBFD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #38 2e62f9e2-9001-4670-a82e-78bc2dcadd86)");
unit.assert_eq16(16'h969F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #38 3dd54255-0ca4-4ed5-836b-ad9526d76aa3)");
unit.assert_eq16(16'h0536, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #38 02bd8e8d-5971-4a41-bd9f-8175e3ee2e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 d4171ec1-85bc-4ef1-abb5-21ae47e5b071)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 6d5dd405-a3d7-43ea-a0db-6f91a1c6cd8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 9f118536-5c7a-4604-af96-4388c85a977b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 821ef315-513f-4ef8-8105-c4a9c2db4015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 8aeb6af7-90a2-4902-aba9-da84ac5e2899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 7e5e922b-099a-4403-8178-58c07dc2e0a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h74B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'hD00E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #39 7f3b6d8b-49dd-423a-bdd7-6f719ba83966)");
unit.assert_eq16(16'h7C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #39 a9fd4275-4369-4f64-9125-5a679a91da89)");
unit.assert_eq16(16'h0459, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #39 690bf88b-c22c-4cf5-baed-3ed534b81e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 df03cf7c-bbf5-40f4-a564-c72ef5de8af3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 c2775d48-21dc-4af7-81ba-4833ef8a9ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 577d9097-2d4e-47ab-90b2-dfafbea3166b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 75645945-9f70-439a-b582-94e2dbafe148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 db34716e-7f74-4520-98b2-1db85fae2b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 4dbaf797-3709-46e9-8ec0-a628ef8dc81c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB445;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h6F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #40 247dce1e-a976-4ffe-920c-5e09b90e9872)");
unit.assert_eq16(16'h67AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #40 bd0eaaaf-145f-4e3b-9050-2525ccee180e)");
unit.assert_eq16(16'h0E8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #40 03c47164-9987-4f14-bc26-efa7b101f6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 f05c3d99-2916-43a9-ae64-b940f6bed436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 13e867cf-4fba-41d1-8b3c-32d572b066e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 c56aea65-9e43-466a-93c6-161cf30b6231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 50e2df45-8aaa-4947-9a33-09a2beec3372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 05c47c86-fb11-4ff6-8da6-cec19133ac4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 6f5b2287-f190-4707-b597-5c09c49a083d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6242;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2598;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0004;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h1F57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #41 ac24ed84-0bf2-4bbe-be1b-d7c236136f99)");
unit.assert_eq16(16'h2598, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #41 9d3dc31c-cee7-4116-992d-d8495f7d6eb0)");
unit.assert_eq16(16'h0006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #41 f8979753-a938-48bc-972c-309b29cdfc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 d2be0cdd-89f5-4dd7-be46-c73819c63e94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 9f6edf15-2bad-4b71-9595-7f688f06adf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 e6f5fa2f-258c-4e04-aeb5-48570ef32bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 fdba45ef-c7f2-42ea-b7bc-a892b785010f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 aa535a6d-327d-4998-b838-55403971c2bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 1388f8b8-3e2e-46e2-a903-8c64c2d91e65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC82A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'hA4C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #42 b204bf99-03db-46ff-af5c-02322697069c)");
unit.assert_eq16(16'h8C1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #42 a7cf3a4e-74ab-40ea-9e04-f2567ffb9817)");
unit.assert_eq16(16'h0E4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #42 5c435dd6-523d-4861-a264-da98013301b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 3304a5b8-c2d8-49ec-925b-e0fc781a74e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 85d2c1f0-6e40-4f0f-b6b9-383c99a6dc3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 60f466e2-f891-4a25-8be7-5bef4acfcc27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 097f4067-503c-483c-9f7c-d627b9309bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 55e38d12-6d1d-467e-9b0f-546141c3d822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 2a7725d6-fb30-420e-9620-6ef2ddf0fc99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCEF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC670;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h075C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'hEF19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #43 641bfedf-6ae3-4d49-afa8-3641f396e182)");
unit.assert_eq16(16'hC670, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #43 7967c841-87c0-4705-ad8c-ff519f1234d1)");
unit.assert_eq16(16'h075E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #43 e2e7ec34-77a7-4776-bab0-8f93cf815982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 f55fc28f-b739-4fe2-982b-dd7a545479b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 349b983c-b664-4f38-8fdb-267df91f02d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 2182ac4c-c525-4851-be02-5e4a23a82b7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 3ba8f7e1-17c9-4b62-8b1e-3013141a98d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 8562abd0-d068-4cf5-93e9-fa5c44db4af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 7acccec3-2bf7-476f-a183-aeb1f4be5f87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h35E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0251;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'hA3BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #44 a96129fc-4a98-4fd3-8e54-68db762750b5)");
unit.assert_eq16(16'h35E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #44 05aeab03-ecc4-4811-b847-bd18b7d66c0a)");
unit.assert_eq16(16'h0253, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #44 fc182bff-9228-4e9f-a58c-f1cd0a0ae8ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 f528a076-10f3-4dfa-a4ed-01462ea768d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 05438f4e-af88-4977-a173-65043ff930b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 05331ef6-b6f0-463f-a0c2-ddd50965ab17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 9f97757a-3e19-4047-964e-075329e56c03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 c55a10ed-6bfc-474a-8760-055b8e4eca7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 88bb91ec-3d63-4f65-b68b-90f4d8fba25c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h68A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0225;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h9CA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #45 c4589963-5409-4940-8148-e36f7ffb2ec6)");
unit.assert_eq16(16'hD2C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #45 7dac79af-06bf-4eb1-9729-41cd00cd5aee)");
unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #45 9231ebbf-9ccf-4b37-8294-c28b8cf565ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 60651f68-7c78-4609-a757-9ba9c477f6cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 4f9aee5b-f6f7-4aa3-9558-aa8e49abf5dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 00e0ca51-7e6f-4e34-aa90-d7aa434e1b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 8ee1c9c0-8075-4484-9859-f5f8f76daece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 8255a6d6-e43c-4ccb-bd38-36837c0498ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 3ec69195-ffb7-4377-b2b3-47ddf612b4e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4666;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h1B57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #46 d59fe1b0-06e5-43cc-b8b5-aced8a841db7)");
unit.assert_eq16(16'h4666, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #46 f277208a-d35b-48c1-bc86-e9a8d315b1fb)");
unit.assert_eq16(16'h07AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #46 618bdc5f-4844-418b-9759-91cba820694e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 51a4fe52-c1de-4f8b-887e-80f722b303c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 4991681a-605d-4bf0-be6a-c7ede84cdfff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 21cc44d6-6aa1-47f0-b9d0-769a794e1bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 d681751d-9580-4967-a5fd-ab8b9be7bfd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 436d91b9-95cf-4e7c-b122-b20100520dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 dba2ea28-a19f-4f00-b53f-c392fd078a92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'hF365, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #47 105519aa-aef8-4c80-9b29-5dc92f83cdbe)");
unit.assert_eq16(16'h5E54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #47 51eed6c9-3d86-489f-80f4-ef09c0a13538)");
unit.assert_eq16(16'h0E6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #47 932a00bd-f94f-471d-97ee-08dd5d3bbf7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 12d89a4f-4a27-4218-8fd8-85deb6fabfbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 f0109010-a765-4e2e-9f02-0c889be05db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 97d7e647-f83c-4575-a230-a0ad104e956e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 7ce31f70-c1de-4c2d-b33c-a33b29768e90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 2a3e7be9-42d2-48e7-9037-5c1968361828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 1cc739cd-4494-4e17-a6c2-f1e513e442b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h49BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8589;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0369;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'h84AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #48 46ab2605-5b2e-4881-9903-ddbdd998c8c1)");
unit.assert_eq16(16'h8589, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #48 111715a8-c163-4d24-8be3-57f9ccb685c3)");
unit.assert_eq16(16'h036B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #48 ec498aa2-af13-41eb-9634-6ae13dd71256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 d004b41e-b3f1-4bca-ba1c-a40bd7571023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 34c757d1-66ea-4090-9e21-c1f74ddf14db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 42e9c74c-6550-416f-827c-8b6145d70ca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 f130c2b1-cfa7-470e-b475-d3a1fa12a66e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 e2c19154-80e9-40f0-b5cf-eca936f94271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 37c18362-a18e-4409-a9e7-c0ddf7cab93b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'hA2C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #49 eb07ce3f-761c-4f58-a31f-e3e5cc50d0da)");
unit.assert_eq16(16'hCD70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #49 33d383f6-087d-464e-ab45-007f3130e53b)");
unit.assert_eq16(16'h0A6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #49 369ebbf9-d8a9-4239-9b2f-49d9ec0f466c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 86645494-0388-4654-b7e7-b7061196dbb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 162624eb-f01b-4c08-9ee5-5d0995478fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 782577a2-5620-4ed7-bea6-ae39b4cac4a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 306221c8-3826-4a3f-96d6-2e2b04d955e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 a19fc8da-d660-4c3a-bbdf-e16d66d636ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 11330eb9-0f66-46b6-b133-f948b8d711e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h34B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #50 e6b70f1f-be11-4ac8-a93b-122b972a4d3c)");
unit.assert_eq16(16'h8DC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #50 963e60ab-6a92-4041-8908-e2399ddf29ff)");
unit.assert_eq16(16'h06D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #50 2ebbf15d-517a-4b69-a048-e1bed231418a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 3a3f9642-0f94-42c2-8683-30d10ef85d40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 3c3aed32-1b6c-4d5c-a357-cf4739362ace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 17bc610e-4cb9-40bd-bc97-fc6c9c499589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 47af3738-0e76-4276-93f0-b584fbe00beb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 c4b954ae-7781-412d-b2bb-44ac33c32470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 f42b0ec2-84a2-4ba0-a3c0-86c031e49956)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC0D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'hA642, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #51 4b79f14b-7736-4aa7-a224-6aeb85fcabaf)");
unit.assert_eq16(16'hC0D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #51 981da7e4-f72a-4d95-877f-a45f9e815a29)");
unit.assert_eq16(16'h05AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #51 011b151c-bfd3-4549-bd1b-f939e2697ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 7af4ebcd-5345-439f-9a54-8b8a9ee2dd05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 890645e3-162c-4718-b8e3-0afb7824ed34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 3d046480-1b2f-4a28-a3e0-c53ed139a69f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 34b0fe8f-c4f1-4793-9679-f269dc6b0580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 cc811e8c-e8b5-4159-ae80-a10fc12623ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 7bd71a55-4e20-4d4c-b083-27276786c26a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE91D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3466;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0946;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h2CC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #52 5c837c65-2e8d-4656-8034-1f2b2ba7f799)");
unit.assert_eq16(16'h3466, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #52 dd19b9e3-f08d-42af-8fc3-160c6eff21bf)");
unit.assert_eq16(16'h0948, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #52 acc9b832-e2d0-4e3e-a662-7506af761b1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 af391fcd-431e-4072-b8de-ed4cf6d335ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 1e2e89a7-d261-44f7-ab34-2235326cd7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 2ec1f31e-527d-47b6-a9bd-a6eabdf42ee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 e0234d28-10d1-481b-b686-4b53fcfd0812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 d49994a2-f512-4fc0-b287-20a0acbf5d48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 acbff20f-be46-4cfa-b395-2f65604730cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD0C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'h1B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #53 8a38df17-9094-41a3-8b9e-a513f77c338e)");
unit.assert_eq16(16'h2B01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #53 98b22fd8-cf42-4c1b-85cf-37b6e2e23d46)");
unit.assert_eq16(16'h082D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #53 a4e295d6-94dd-4a3c-b492-d1b32ced4ec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 d84bd6b8-f752-4334-b2fa-e202e5332c90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 1d62bf91-517b-4c31-964b-844ab7aa30f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 cb2e844b-7c80-4826-887d-b4a3f55a8822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 68a41758-8100-4182-a94c-85c11218d86e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 cb5d25dd-1a26-44c3-bdb8-ad5efdf10790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 1c24a020-3432-44f1-92d4-c31969a95816)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3551;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h273B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h298D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #54 17ba7a93-f192-4846-bddb-4b4df5a4f656)");
unit.assert_eq16(16'h273B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #54 003e3518-0e9f-4d63-a5fb-a13d6f050124)");
unit.assert_eq16(16'h0E33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #54 411bac96-24bc-4c04-b8e1-9f457103fa2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 9d9c5475-2227-476e-ad21-122093cfb9e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 47a16de2-669f-4906-8c23-70394c9164d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 5f695772-6822-435b-a0fe-f655a6c41a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 7516eba1-9a8b-4257-a652-beac57d90e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 cf81da41-78af-4218-b1b4-7be2fdbb2ade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 66722336-de06-4157-a31b-602c712ce0ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2128;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'hEEEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #55 2e4bf3ab-95bb-4e1d-8728-7ab73dec6e78)");
unit.assert_eq16(16'h9E41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #55 198c098e-660f-4ae1-8574-a5369c7890c8)");
unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #55 d3b11590-3ab8-4ee1-bb56-98b1315a2bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 5a811b14-2365-4b97-9689-2af1a8a97dcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 b8e4b7c6-beab-4b93-9b88-6e24c157b841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 93f07fd6-c149-4d37-a0f5-6764a350911c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 508764d1-3925-411d-9e96-f2a045356447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 93baa495-694b-44bd-b0b7-394adaaf8ce7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 da122016-b2d1-4fba-84c4-b22174e414b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE77C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'h244A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #56 ab2dedb5-cb97-432f-999c-b60fda9394a7)");
unit.assert_eq16(16'h8D13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #56 45d739ce-5a1d-401e-b055-6023713c0ac4)");
unit.assert_eq16(16'h06A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #56 27acfed5-fe0a-4d76-ad2f-81e2444bf39e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 1d2bcb61-febd-4356-86b7-06714c277420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 eedd85f5-9e08-4660-81f7-3add065945f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 fd5eec27-b28e-4685-a4de-1917fb65fffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 19838840-4b33-4b1a-821f-e8e226878559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 714f8930-7b27-47a8-826d-2804594028a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 c2c1565e-f024-4ae8-95c0-716eff498d7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE44A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'hEE0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #57 741f91ce-0442-488f-b328-472d05d04824)");
unit.assert_eq16(16'h6FC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #57 b4873aaf-bd08-4a30-967b-d71c7a11c31e)");
unit.assert_eq16(16'h06ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #57 20ba77af-ee3b-4f97-841e-b8709e255919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 2d10b909-4b63-465d-a7c0-2573078ec617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 d998922d-7cbc-493e-ac26-8b98bc489eab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 fd1ba3f6-516a-422f-86cd-8b2ad15734e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 dfb15bf4-052d-464c-a0db-5daf958d5191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 cc4bbe48-b5f5-48d9-923b-0bafd0e96236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 3f91c74b-8fce-4d54-97e7-0563196cfc57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD15E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA548;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h81C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #58 dd7b5be0-f08f-4afe-a40b-ee23f5d5b81f)");
unit.assert_eq16(16'hA548, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #58 71003489-a1c5-480f-88c7-3c31722f0ab2)");
unit.assert_eq16(16'h012E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #58 4a13ecdb-f3db-45a0-b8db-545475f6cd91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 7befdb94-774b-4d21-a1fd-1f0a53617a8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 c2b35408-f3e1-474a-b76d-d5129805e5aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 399b3fa5-0ebe-440a-8d7f-609a6023f82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 bc9e9412-7769-4e2a-a118-6230dbe06666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 2eea3d84-271b-4346-bd4e-53ef849e2cd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 987db739-5567-455b-96df-971ce9e9c6c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'hDE64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #59 3d0955d3-59f8-4b1b-b484-64483292d351)");
unit.assert_eq16(16'hCD52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #59 484f20a2-e7a6-487b-bca5-d0631708fbbd)");
unit.assert_eq16(16'h0A04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #59 bd351093-d9ff-4e09-a2c9-bfd7c7c362e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 ed6cca21-9e4d-4928-be01-518a2757b50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 f2007ccd-10d8-44cd-9d61-4ca3048aaba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 099732b7-0d12-4676-8b44-9eccac463854)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 4184b96d-aa0e-4135-97a2-4a4c367b03ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 f548e4c8-75c8-4336-b866-b43698b5e3af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 5c400778-ba52-4e38-8895-d81bfb94bbb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE673;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h4F83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #60 e81cdc66-3548-4070-9a70-e44c4565a258)");
unit.assert_eq16(16'hE673, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #60 2e6eaa3b-3eff-4c02-a1cf-0b0ba4001bad)");
unit.assert_eq16(16'h0B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #60 94403c24-ddbd-4210-ac53-ae8821a4c4d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 704b533a-b8bd-4ca2-a4b7-265fc7492dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 d1e4a0f2-e466-44d6-a177-4cf44b834ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 bc8fc818-1410-4a7d-ab24-f1a584d0aaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 82050e2e-9c1d-449c-bc14-122398e48029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 143c85a4-5761-4d0a-b91a-e0fc1b33c682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 cc2061f5-aa70-49c8-8fb9-a2fd67322ce8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5879;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'hD3F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #61 9866cf99-50da-491b-8388-76323ec4b1cb)");
unit.assert_eq16(16'h5879, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #61 bb676a22-6683-4943-ae0f-37aaf0ac135c)");
unit.assert_eq16(16'h0E19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #61 7b1ab2d8-4c1c-4451-85c1-ad6bde711d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 94c798f7-b8b0-4f8c-aabc-503807ef274d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 a39055ca-a484-4c58-a020-3e2126819379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 a539ae32-31c7-4614-af95-5e9402fe2465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 6bedda3c-a978-4289-985b-6e9add2d698d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 94450540-7c5f-48c0-8ca4-d10cbfb507a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 28006790-8ef6-4740-ab3f-9b3761bf2e99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB498;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB509;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0493;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h15F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #62 a2d10520-35bc-4ae1-bf56-6373c8ed2231)");
unit.assert_eq16(16'hB509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #62 0a5e183b-68e9-43eb-b9f0-8c7f6ac0fedb)");
unit.assert_eq16(16'h0495, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #62 641e4b7d-9381-4c88-8ece-5dc2db2a5202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 1f98e750-24b1-404d-a3ae-f4e2377acdf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 370380d2-1165-4c8a-81bc-214a09d14573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 a2985817-3d93-4be6-8f8d-f99f33dadf0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 023ab905-67dd-4df8-8196-1e9ed1d7ec78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 804b11b9-193d-4708-89a2-a4231d4ff458)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 a0f6332c-a3a1-4e0c-90d8-948add38fafb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5130;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h001D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h0BBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #63 dd694014-9529-4ee1-a930-377a9898c15a)");
unit.assert_eq16(16'h5130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #63 c1585f1b-aef4-4372-bdc6-b64574074287)");
unit.assert_eq16(16'h001F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #63 9b3a2b68-d5ab-4b5f-a9f7-53d5f5d590db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 6056b427-f417-43d2-b447-cf63c403b30f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 1b613d12-db29-4cef-a29b-32781835b352)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 0e0276fa-f8a1-4e69-8186-3a24ac3b0e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 75fa059e-f722-4444-a594-fb57068d67bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 12ab36b3-1c32-4a90-a868-4f3d21725dc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 f1c734e8-c408-4042-ac1b-2e914aab3abc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h752E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0776;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h2047, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #64 80ec613a-85e9-4ec9-9901-b251dbad9b6a)");
unit.assert_eq16(16'hEF3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #64 58b9cbcd-89d0-4569-9817-f5ec62489bdf)");
unit.assert_eq16(16'h0778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #64 221a5d04-4667-4d89-95e4-d98f47c18176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 4f5d4f58-b63c-4702-b18e-f85e2a49ec62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 e4baf5f6-0a6f-474f-bef8-0e98e32e23c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 b430b0cf-3762-4826-8e76-d04d1b4306fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 afa23dfd-053a-4999-b755-ad89a9cb5fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 59079a5b-3f58-459e-9939-8733c1d8db19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 e444a1b2-1e29-400a-baf5-9fa8c263974d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1EB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'hC66E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #65 50a6dda2-a143-47bb-8577-669b62350f81)");
unit.assert_eq16(16'h9CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #65 05b9a856-ebf1-4fdf-8822-08e9cd0f01bc)");
unit.assert_eq16(16'h0EB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #65 656b42d7-5b69-4f0c-9888-42a2ce82b97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 e5601f29-8174-4b33-acf9-8be062ffd260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 98ccdb22-a74d-462a-8675-b2d4606e2cfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 f37376b6-5ab5-404d-b3a3-23d762133431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 27103311-aa28-47df-afed-49b4fc7bf211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 ee1a0c22-dd31-4b8c-97da-d0dda5b9267e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 3b2580e4-fcfb-4d8a-a354-12af963c5c58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h932A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1114;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h4E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #66 144465d6-2687-45fa-ae0e-8382edb7da91)");
unit.assert_eq16(16'h1114, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #66 27a5d4d1-c666-4bd6-be4b-a7677a24bec9)");
unit.assert_eq16(16'h0DF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #66 98d5285c-2a8a-4be0-bf76-d4785db63a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 dd472eb7-6b03-4349-a796-2a3284e96ec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 213563dd-27fc-478d-abf6-3807b86647a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 bf1f5920-576a-45d6-a6e5-b41880fd171c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 b12963ea-93a7-4eb2-8ecb-24bfc7be7c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 b16d7ef5-7da0-4e44-8ed4-41c71bb6dde0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 71086733-c15f-41bc-8e5c-fd94faee4f84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9783;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC408;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'h6AFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #67 51e330bc-48de-4c3f-a022-83e09bf783b6)");
unit.assert_eq16(16'hC408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #67 325404d4-d820-4932-b2b2-5f91140501ca)");
unit.assert_eq16(16'h0E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #67 2f6501d7-2115-4415-95ea-e038a399f7ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 759e30db-ca16-4b98-b1a0-9fc8cf0191e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 cb42e4ab-ada6-4c5b-ab78-2abdd3904370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 15c0af98-6856-474e-9e0f-c70b8284a66c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 b04fd5eb-a99e-4af0-a1ef-a8c3bee91403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 7af9f16b-8429-41f7-ac99-e3766d3b7232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 11abe12a-0598-4d90-a16f-fc51732217dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE9B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h638B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0459;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'h33C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #68 d1d6ff66-15d1-4c51-8624-bf270f74336d)");
unit.assert_eq16(16'h638B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #68 d5a53ea2-8c3f-4ead-84be-79d9278e7aa8)");
unit.assert_eq16(16'h045B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #68 0f95ca1f-8d35-40c9-ad2c-32ab683a4515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 f03202ad-bda6-4534-a3d4-639d8bb37ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 b01bdbb1-f8c5-4b0b-b07d-0992fb54eb93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 aae4e4f9-052b-4807-b8dc-4fcb037a6be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 e1aedcaf-92c9-4cca-a4e5-db04897db54d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 9aa8138e-a4ab-4857-b1e3-73e38c6fe204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 e887823c-ea71-4b90-84c0-0d94b6ec8ead)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0374;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h0A36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #69 38e453fc-c468-4cb4-9be2-9d8de6fcf95a)");
unit.assert_eq16(16'h21E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #69 ac89eba6-1445-4619-a34f-2f8a436dbfaa)");
unit.assert_eq16(16'h0376, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #69 a24daaa1-5a1d-4a31-9439-ae937d61478f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 087a7442-9a38-48d0-9ca7-5edcbbaeb69c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 bcf74b9f-4fde-448d-8169-6f885e3c3c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 3a59bf73-96d6-456c-b634-9fe1924c7dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 61570eeb-43ab-41a3-b7de-a56fc57b9efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 cc32a015-8be0-40a5-86b7-44ea44e5847c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 8d1147f2-b05b-42c6-a552-fa6c76dd0b8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0853;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'hD185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #70 d151a6da-6321-4960-983b-cf538228dba9)");
unit.assert_eq16(16'h3F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #70 5bcc649a-96c9-4b9f-87b4-270bf35e1648)");
unit.assert_eq16(16'h06F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #70 0e2da420-c2f1-4efe-baae-681106ad083b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 a7bf5481-afef-44fc-8b21-f48728da8471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 ea1c4be0-b923-4cec-b3f7-01084775c3f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 3e69bd38-0f1c-4d13-a2e1-541f3c39922d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 51f58c6e-9c1d-4e70-b0b2-6faa45861370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 75f88ec9-faed-4f87-b225-100d77d46f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 3f9bdc9a-94e4-417d-8d2e-487225f0bd80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2790;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h5948, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #71 8ff3abfd-6f34-4567-9a8d-e5c1a2693343)");
unit.assert_eq16(16'h2790, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #71 48a86fb7-8b4c-4eec-a5d1-e4fbf06d0ba7)");
unit.assert_eq16(16'h06BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #71 ac5c1076-7d8c-4827-bcec-bc17e6bc7cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 70c740a2-4793-4de4-92bb-9f92292844db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 385724ee-c2b7-42b7-9297-fb61393c5767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 db30667e-ad3b-40fa-8322-f9bc8d92a591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 5cb8df9b-88cf-4557-9d9e-3a52ea7f1784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 207ee333-ecc8-4522-b325-f8d7c7b6ecc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 28ee5841-a910-49b7-88bc-336142853bbe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'hDA56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #72 13a0d195-d96b-4772-a649-6ee2cb2fb05d)");
unit.assert_eq16(16'h1AC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #72 e183f7fd-1c36-4844-9a0c-81c9b0c550c9)");
unit.assert_eq16(16'h0D2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #72 91db440e-678e-49b8-9655-ecdb16bf16ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 1d5f0802-5b89-4e1e-ae0f-d1f4d78af461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 a0957aa4-2c6e-42a6-9cb8-87a044540f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 b297a245-9e89-49b0-a2d2-4093bd40bc06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 0d652a4a-7c6a-4fe4-b9a2-452aee052302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 39b1c3cf-8f6d-4f07-add9-6b3064dfc62a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 5736f1e7-45fb-4e50-9fa4-d8e3d8e9646a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h9AAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #73 f7771da6-e706-4ef0-9d15-dbb0da8c89b1)");
unit.assert_eq16(16'hCCCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #73 d9781370-c0ce-413e-8b49-419c783a8436)");
unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #73 11e71856-61f0-441c-af5c-be95c419d7ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 cf996995-cabb-4660-9935-d965c5fde46b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 7f229893-469e-4bba-b757-0442888c801c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 17bd8f3f-84a4-4be1-8cda-3bf7f4a27297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 d2c89216-e062-4db9-a837-3200c977bf9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 1645af61-524b-491b-b7e3-6df0dd29cb9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 621ad582-437f-49f2-8036-bfb6f657b414)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5557;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1769;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h6454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #74 fe828ad3-379a-4798-8850-6acb43952739)");
unit.assert_eq16(16'h1769, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #74 f5d5f93f-9b99-4547-a723-0fd9256f44d7)");
unit.assert_eq16(16'h03C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #74 05258a77-d90b-47f1-84da-6e762b683929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 84eeb7b8-2e4a-4a95-8ea0-30c9c98c66da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 67041e08-a23e-4e2f-9f07-cc6c47649a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 887a967e-b54f-48a0-b1df-ac417c069059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 b700194c-f575-4677-bf73-321b9f5d395c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 cc9b0c73-98dd-478a-8c8f-f795f19a9172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 b41d7e47-52bb-48ce-adbd-07b1e0c72031)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7047;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC379;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0279;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h4217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #75 9366ee29-b6af-46fd-bbf7-55798cc3c1bd)");
unit.assert_eq16(16'hC379, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #75 4723c9f5-a55b-4120-bae8-7ab2c7fe41d3)");
unit.assert_eq16(16'h027B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #75 9cb80c69-df6e-495c-82d6-46edda0b7ebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 ed1a3cdf-718c-4a96-8904-d98dd37fe3b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 94d19ff1-0128-45b0-b506-f138d283db59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 1d61b5d8-b743-47c2-90b0-2694182e64d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 3059c30e-43ce-4deb-b1ee-c35a9f213a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 945b9c4c-f63f-4074-86d5-d072f1f15a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 14747fb9-569e-4369-9682-7e34ac6af90d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h18D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9399;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0700;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h0C22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #76 b772c294-a1b8-43d2-b6d4-4a11c0fd402a)");
unit.assert_eq16(16'h9399, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #76 1a55ed20-b995-4b28-862b-845a9d897b63)");
unit.assert_eq16(16'h0702, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #76 71d6407e-b6bf-4eb8-9763-f8aec8dbc89e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 fb1c5852-1708-4994-b844-03d8d6445edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 545b6e23-dca1-488b-be79-9a359e62e2df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 d0213ea4-8d9a-4af8-b0f3-6352d5ea33b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 be588875-714f-4b39-b780-8a376e7c4c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 a86f5e36-4ac5-462d-8f51-73dd7195a3cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 e1499915-0589-4172-a787-5261a3a7da8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'hFEAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #77 a5dfb5af-f292-4765-b878-bd6a46405ebf)");
unit.assert_eq16(16'h4DB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #77 83c3b330-7a56-4916-906a-04d837baaa7f)");
unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #77 90c76850-1c84-4619-9cdc-a724f77a6fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 883d0d82-74d4-42c0-92bf-433584b64c7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 d8bed1bf-d978-44f7-8518-51e4826ed010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 fc253c06-2e19-4734-a5f3-dd2eaba18d8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 17a7bef4-179d-4be7-b1e3-b20e220ec880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 9a19f22f-bde7-482a-b7d8-6c507e22e82b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 3f304584-3125-4a3a-97f9-c01bc4d0c2df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h08C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #78 15cb0171-51c3-452a-99a6-0112cbcb56fd)");
unit.assert_eq16(16'h6C88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #78 6f7fbf2f-6d78-471c-92db-0df9373bb53a)");
unit.assert_eq16(16'h0C3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #78 62126f3c-ca0e-4a2d-b86f-8fcecd1fff1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 0eb485d0-1277-4ace-b4bf-8efc447d42d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 8137ab15-b96f-47aa-8284-b9a65224a685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 278106c8-75c6-40b5-b658-7f6194c29cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 1f61a627-2d9e-4907-a887-527dfc49e216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 bd3f9550-ef47-4c6c-b952-0cc78b053d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 b4634ed1-e4dd-42e8-bf2d-40201478d1e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h98A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0044;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'hA48D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #79 bdb28a51-b910-4972-80e2-05533c51b866)");
unit.assert_eq16(16'h98A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #79 0d8eca7c-6318-4231-a0be-09be2003c801)");
unit.assert_eq16(16'h0046, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #79 4d6624b8-d779-458a-8bda-8420541a2568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 52ad0d9c-3609-4835-99c8-c143b5cabc8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 dae642e2-4edd-4513-b2e1-f25b36d32545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 6ad45726-0a57-44c5-9603-76fc40ebb5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 bd1e6c53-cd60-47f4-8840-cdd309d48046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 d27634b0-9928-4479-a2e7-83e61f36b811)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 3f219e33-2e0a-4daa-affc-8ad5edd7e5d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h089B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'hDA64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #80 73c832bc-51e7-40d5-b3fe-4eb3b864087a)");
unit.assert_eq16(16'h3F92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #80 f2649d7a-3cdc-455a-96b4-419d22d225d9)");
unit.assert_eq16(16'h089D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #80 fb0cf1b5-d23a-45b7-bab2-a39fb82c580d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 1072a815-11be-4d5c-a52f-4a5d0e181384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 acc628f9-ea79-4969-8bcb-5dd21c35f61f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 51519e1a-6d72-4572-ba2e-bff2546f0cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 b615a6ee-1cde-4f39-b703-c8003e738073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 7752bc0a-7c77-4ebc-ab24-00ff5125c0de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 d77bb546-d217-4c76-93c6-068ceec06cdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'hDEC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #81 b7d49007-1f76-42e5-971f-f49e63413a49)");
unit.assert_eq16(16'h1F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #81 65a58102-8222-4534-b1ec-bba06a432a37)");
unit.assert_eq16(16'h07B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #81 3cc3e1a8-79e3-433a-b16b-1d05d61e8c91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 72816b94-566d-4e0c-b88c-0147ec8700bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 3fe36dd3-1f30-4602-b007-77984baec8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 a07c8977-f07b-4413-b3fc-95a53c15d91b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 1d2e818e-22e8-4dbb-91be-bb377f3e4994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 90d30b42-1902-4c9a-acf9-677fc8beb2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 319f9953-541f-4546-a5a5-72463777e9de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0576;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h8E57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #82 710a304b-08f4-40a5-915f-12a153a9d09c)");
unit.assert_eq16(16'h6D56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #82 c1b08b91-4d91-4bb9-bddf-861537dbf759)");
unit.assert_eq16(16'h0578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #82 521dd406-93bc-4a23-9eee-f15a6fdb0d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 f53bd6aa-5638-4473-b59d-8e000639e85e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 0d149597-1d2c-4a8b-929f-74a60d27a980)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 f1f60e57-35b9-4077-9e81-034e6026f512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 d92370fb-6c4f-4584-ac2d-97441aae877a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 6b025e82-6dc9-4c90-a01c-fd46b289dd22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 75ce6b4a-7aae-45ff-9a20-b134963175a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h18BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h73C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'hF184, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #83 d8ff015a-88d7-42c4-be3b-21b78fb24227)");
unit.assert_eq16(16'h73C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #83 ac7f9a3d-3bc5-4291-bb2a-8efd612f0b8a)");
unit.assert_eq16(16'h0680, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #83 7b2ff5f4-7576-4e96-b945-780db223e518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 1e57714a-97bb-4e20-bfa5-6c7ba4b7f013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 8e7fc8e6-3b56-48af-ba27-791eea699abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 3c478857-8edb-4fd1-99e6-e8065da5a79b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 29149b47-14c2-421a-89d6-c8f11b11ab2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 e3d4bb23-bb92-497b-bc55-21fc47c3c02e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 9bb709ea-deee-4699-8675-093c375de150)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h5CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #84 0ca25892-fd63-40e9-96c1-dd6f36eeb747)");
unit.assert_eq16(16'hDA40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #84 e9229d16-cfd9-4382-aa11-d8af4b64cceb)");
unit.assert_eq16(16'h0B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #84 42578106-c706-4c5b-a2d4-f091ec18e9bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 5a788f70-2061-4385-81b3-87eee6aeddf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 2daae5b0-c3ea-41c9-9bc9-ae479c81dfb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 9de1a933-7ef1-49a9-b38a-9208d7c51571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 7064649e-95eb-49d1-8453-bd2976ebfda0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 2fb39be7-7e5f-46c2-a5a4-58a045dd6076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 0b898039-5e42-4a9d-98e3-c2d8eb5a19c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'hB985, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #85 e961f491-ba3f-4906-a2ef-bf5ccfe4aa07)");
unit.assert_eq16(16'h9DFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #85 b14fae8f-e8d1-41d3-9728-e31f88f0e49d)");
unit.assert_eq16(16'h0AB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #85 2a6390fb-2e19-4fc0-a933-058feb5da0d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 9edf5447-3525-4b1a-ac4d-4d44e35a0831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 50238a61-ce20-4b78-87c7-f417c5ba561a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 8bc475d7-3461-4328-89f3-c9e9e0a077a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 0845331f-a55a-4ac4-8fb5-d45daa2ec761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 92735cbe-e2eb-42ce-8439-969cf12c7266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 12136893-b8d9-4b8c-8e35-dbd38961b8fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hADCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h074D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'h4DCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #86 64378d5a-425b-46d1-9d0b-b622ab8f4112)");
unit.assert_eq16(16'hADCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #86 1df99bd4-a7a3-4f6a-abcf-c0d9b41105b8)");
unit.assert_eq16(16'h074F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #86 acfcc326-0355-4b67-94c5-8e6a86e0577e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 2dfa0ef3-2a77-4234-8a9f-93081c4edacb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 bba7f009-c061-48f7-aa00-21fcf242b944)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 990c5495-1d0e-4b14-b50e-dceb81359bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 b286cf0d-d5fc-479d-acfd-8457354fc309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 871e4d8c-86a2-43a2-b85f-ee2a0e2ee245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 c731e8f8-777a-4458-b5f5-e41116d9e041)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'hDC6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #87 a07b0f9a-ba26-449d-9e20-37fc0e7585d6)");
unit.assert_eq16(16'h6E66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #87 e1458045-221b-4084-9e3a-0544be70c377)");
unit.assert_eq16(16'h07DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #87 b7a9544e-a923-47a7-9467-b6d09383d055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 fd81ea40-4c3c-4952-a5e4-77f57ada4811)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 b3609e1f-c672-4bc3-af9c-8cf5ebacbd8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 fde999e5-bc97-4d8b-bfd9-bbdec9d242fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 b5df8834-79e9-48a0-a8f1-99676873d573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 2f732ccc-43ff-4146-a7f3-e2b83c6bb877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 469b3b61-c5f9-43bf-a88e-89b5e985c269)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h461C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h4B31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #88 d08ebdcc-2185-4c09-95aa-8efcbd9a08ae)");
unit.assert_eq16(16'h461C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #88 3af53fe9-9f17-40e5-a4c0-b725bb5f5f95)");
unit.assert_eq16(16'h0987, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #88 e005b17a-686b-4434-bfe8-54bb681a7f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 37ce5232-a1d6-41d8-87d3-18d51423cc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 4f24b9a1-3bad-4b71-81b5-2bd39c3e7877)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 996539e7-2aeb-4f48-b9fb-387f6a8dd820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 e9788bde-b54f-4a23-b757-2f931db476fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 18ef4f94-656a-4ec4-9d6e-d3e33cd532dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 2be8a333-3fc5-4333-946c-cac71767fb44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE01C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h10D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #89 9e5cbcca-4f22-4eb8-87ce-80a967701557)");
unit.assert_eq16(16'h8E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #89 c1388583-5a34-4d33-bf33-29830ea63580)");
unit.assert_eq16(16'h04A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #89 73ea5b7d-60cd-4d17-8268-760265271965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 5aacb417-4e84-4a2b-976c-f5f3f2a23664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 0eb48be8-f376-49b4-8f16-1228eca0b6c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 39a7f310-a3a3-487a-a118-fc0ab93ea28f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 21bd4a76-1f48-4293-8986-11799aad18ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 352f5efc-203c-4edd-8f86-3cc4670b090f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 bf7b0ab9-a0f6-4af6-99c5-b942786933f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE86D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4826;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'hEEBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #90 f1eb4730-3704-4a57-94d1-0ad2a26fbc3f)");
unit.assert_eq16(16'h4826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #90 91ee7b03-fab9-42c1-8ab9-74aef954da4d)");
unit.assert_eq16(16'h0D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #90 89250d12-3e92-464b-8cee-b4df72d79c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 ae95b8d6-fff1-44bc-9f39-c7a58052fef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 ff1923c4-e2ca-4368-852a-de3caeb91dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 e9a744b3-5caa-4786-9164-7003436abc3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 c27232b3-fe57-4b9c-8486-798906ed0355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 4b23ff05-c361-4fe5-932d-2250c790ed4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 392a0c4b-4e4d-4c14-a867-a2cd508e80c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCEEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h3B93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #91 f6736bcd-078c-4d3a-89d9-06026c8a4726)");
unit.assert_eq16(16'hCC37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #91 f8568d6c-b005-44c3-b3dc-d790b12a4cdd)");
unit.assert_eq16(16'h05D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #91 77a8706c-68e9-4f77-a98e-a9de0e284bab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 8ead490d-2fc8-4c57-ad9d-d7ef14a00e4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 c794870b-4309-4096-a3d3-11fe23b914c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 f8422f8b-2f4f-4537-8b82-4085b5832e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 da6850e6-bfda-43d7-9d0d-f46cef77176c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 77a0e159-df7d-44c8-a2c8-2589eaafd413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 06f76ffd-7d34-4877-8259-651a6673ed34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h84D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #92 1e9e04d7-4fdb-40ca-b656-e36288217634)");
unit.assert_eq16(16'h8C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #92 d4d4b097-b7c2-45c3-8c0e-a70433ef40b6)");
unit.assert_eq16(16'h0F0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #92 8f206f67-fcf1-435c-a144-6c72e763a59b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 cd31b48e-d476-4371-93de-aa398c4062e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 7979bca7-e738-4448-abc7-25f912d8a84e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 52487eb4-60a4-4398-85dd-3c60339f5bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 abc6eddd-fd0e-4803-b18b-1f276a14c015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 960f220b-dd5b-42a5-b4ec-824d1c3d800a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 00c46ce4-7c07-4163-abfe-8f47783f777a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1BA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'hF6D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #93 2c6fc915-d2cf-4749-9c81-f2ea57bfde21)");
unit.assert_eq16(16'h1BA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #93 e9d799a2-b3c0-4588-91d8-a556abe59e5a)");
unit.assert_eq16(16'h00E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #93 23c64cdc-58d9-4cb5-8f76-b3ee1767e84e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 440698b9-8a31-4c09-b365-0162cebce69c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 394b01f5-9ef2-4217-80f1-b122ee9ff12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 113c700b-fbdf-4a3d-8893-bbeb7ed01c13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 fc96eb4a-8be0-460d-99b5-813ba08f5a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 9c5773b4-0757-4ab4-b868-70098bbbdd3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 fc923f8b-30ad-4581-8e86-6a1b78cafa7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h256B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'hDD02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #94 7b0b9bfa-9208-40ed-b3c5-0e946baabd5a)");
unit.assert_eq16(16'h256B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #94 39d84558-3d27-4b4f-a530-00c0183e311f)");
unit.assert_eq16(16'h05FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #94 9608acda-3579-4075-b86f-7608f31080fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 a31e9f61-8d7a-4956-b05a-576258abfba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 c6e40c61-c442-4dd6-affd-0599433b2963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 003043cb-064b-4cdb-8cd8-1aafcdc27052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 26214cc9-3b1a-4617-814e-a76a66563d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 bbdfdf42-3945-48e2-b5ad-638565a735c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 d3ce144d-5b0b-4170-ad24-66d10d30e241)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD48C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'hA2C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #95 7928df63-fcbc-41c3-8913-b85fef744b36)");
unit.assert_eq16(16'hA5F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #95 7b341e1d-6399-4ef9-9ccf-2b036b78a00d)");
unit.assert_eq16(16'h0A6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #95 4f3901eb-4feb-47f0-b919-beaed1824cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 f1fa2e5b-420c-4f98-81ad-964ec9d4e3e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 a21df49a-0620-45dd-84fb-cbc4ed04e72c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 7271f28a-b80c-41ae-90c9-467346469258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 d29909fb-c114-4af3-b410-2462a170c0b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 f47bc273-1b37-4443-b385-c155793604e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 88b035cd-afdd-4faf-a1ee-a4f8702ecad5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB221;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h8B94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #96 cdc0ccda-bdb4-4959-8554-02073f3fe701)");
unit.assert_eq16(16'hB221, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #96 d2be0b4d-f017-4aba-a6b2-fc3ab8c5a35c)");
unit.assert_eq16(16'h0AEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #96 3d35ce66-4854-493a-9b04-d57b4b070f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 30b1908e-8627-47f7-b13b-5aa27c25b68e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 32757637-a9da-447c-8bee-19181c4a62ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 babb315c-251d-4958-8826-a4f5ed269f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 c1e769cf-42fa-495d-8281-51c64a9b1691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 41798274-08c0-46a1-8ddc-81609521d5bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 06cf31d0-6b26-4a9d-bc4e-4a72e0939e6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h73CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h5CF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #97 b4c02e2c-dca4-4b50-8052-f132f730014c)");
unit.assert_eq16(16'h73CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #97 5662d42f-61e1-4564-a2b2-0de21b8c5d48)");
unit.assert_eq16(16'h0D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #97 18130090-1164-428c-b090-2f527934bf64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 b4d31a54-30ce-4e48-957d-4f9d0c9727cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 a1d68cf8-f0b5-4de3-8f5b-c3d22d49c972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 f897b5a7-3748-4dc1-b46b-02c99e94a36e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 ac1b987c-11a3-41d3-8b56-f71078831390)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 dc7cf090-a0cf-4f24-8bb9-fab1a25a79ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 4af3952e-ed24-4c85-a9a4-bd119d667d99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h990B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h4E62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #98 ee9de371-bf9a-4858-b87c-07d0a37157db)");
unit.assert_eq16(16'h990B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #98 95466bcf-6a48-4239-acf6-0514add49aa4)");
unit.assert_eq16(16'h0EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #98 52b8cbc6-0b69-40dc-93c1-cd2f13581dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 6dd9d1f0-0d3c-4eb1-909b-231fa7495d2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 af2c46da-c2f1-42e2-9596-fd262cf4d5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 7d38ae60-18fd-4de3-ab18-d086cd909a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 daf4d1ad-09fe-49d4-9f46-8a9564b6b3ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 cd43a98f-fdd3-4a3f-af8c-d475ac924731)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 90ae94ba-9370-4f98-a9fe-f66d766bd694)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h541E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8CED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0988;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'hD905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #99 d1ede88a-3697-44dd-8faf-ffcd9d3ea301)");
unit.assert_eq16(16'h8CED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #99 642304fe-d831-4a62-a45f-5a27f87e101a)");
unit.assert_eq16(16'h098A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #99 cac921a3-f5f5-4340-ad7f-59766c630f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 ceb46182-ef61-452b-b7f4-5c90f463d8b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 7ab1fb14-c799-4e41-9224-8cba055e5251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 20458e8a-68f6-4d34-ad15-d2603079418f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 dff144e4-f402-4738-adf8-952e125cd1af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 d4f51acb-0ba9-46d0-90db-088231bf818e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 1cee0092-c052-448a-8537-17bd448e45e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h9023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #100 7418a7c6-66aa-4b1b-99b1-1b2b3d2842fd)");
unit.assert_eq16(16'h01F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #100 54cb10a7-8ef4-4cbb-95c1-bcdd4b9822f0)");
unit.assert_eq16(16'h0A41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #100 4e9de614-e57b-44e9-ab01-ce928c1f526f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 59539c27-aaf3-422e-90c7-c60c24a22c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 bebe1779-bcab-40a3-8a64-be40551a6ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 8cfe2e20-0ef2-4418-a679-35e3f099f808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 79238d71-5e7c-4a16-85bb-596959d68a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 9fed91c3-ed15-4b4c-b4e7-406999424915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 b7474404-6830-4c45-a262-2f137c233a13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h999E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #101 1a6c7f5e-d780-4f85-b299-f69efa57ba55)");
unit.assert_eq16(16'h92D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #101 a4378f83-d0b5-4ce9-84c1-b9ae9c802e1d)");
unit.assert_eq16(16'h0E42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #101 c61af807-b898-40b4-b379-c6d476e65d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 8e567dd6-b760-4220-b901-734b7db742d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 6c909eb5-c62f-4ee9-a754-05ac2c17efd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 4fe5c1cd-49a1-4b9c-8508-f8f629186d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 9b00b54a-8020-4eac-ac22-36125ea0deb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 7691460c-38c0-4d1d-a669-a1c4401e6642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 71b4a5a5-823c-4409-a2e3-a49d834e87cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA1C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h47B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #102 8ff56fcf-4b49-443a-a7e5-96a1d7a0657b)");
unit.assert_eq16(16'hA1C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #102 5ec0b99b-a124-49c4-9076-3376c388bd24)");
unit.assert_eq16(16'h0A07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #102 b65686e1-a375-4bf8-8a1f-1178b2777021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 17d08933-7a98-4a33-be70-c6e811a83c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 8f7b2639-1b60-4050-a68c-383ab7403f3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 72e44ac7-6989-43bf-ad21-d43108f7b0a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 c16adaac-a9e3-4a1a-950e-a54fd201edad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 d6bec2b6-2418-444b-a5a2-23c220e63458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 a0b5a8f6-dbbb-49d5-bff5-d8916d4558af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0649;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'hB80B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #103 b7ac8753-43d1-47ae-a448-af3b92f95a8e)");
unit.assert_eq16(16'hFC55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #103 79681253-5373-49d3-9e82-3d93644920d0)");
unit.assert_eq16(16'h064B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #103 8f4fc7ac-93c6-4ec3-ab7c-0a2c568f10d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 cf2c675e-5e1e-45f1-b914-fe2d4c401db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 42bfefd0-759c-4953-90c5-0a66a55ba718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 607a53ec-45a9-4541-8282-cc8aef8d4205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 cde05470-d975-4cfe-b978-67f505290ed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 1890df4b-db4c-4331-bf7a-0bd90b7d210f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 73b04fcb-41fe-4048-87ab-6f5e1add3f29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h128B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h380C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #104 97bbb815-67b2-4798-b66a-5c977c8b06d9)");
unit.assert_eq16(16'h128B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #104 e8e5b0f1-e8af-4e86-b06d-d61b49081d17)");
unit.assert_eq16(16'h0E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #104 8c55fbab-9ba1-44f3-b49b-42a406564e18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 13634f92-d481-408d-9b53-9bffa3de1367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 497b9f79-ae1b-4b94-878b-0dcba3e015aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 a5884391-0342-4f9c-bf09-7d177cb74155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 a85ba44c-4393-4e00-934b-f750f927fbee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 137e544e-f083-44c4-bd91-20e71f84fd0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 e1185cb1-a699-411f-ac0f-5826e39c8997)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h635C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h45D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #105 537fb79d-6dab-46f5-810d-1e1df59f8ca6)");
unit.assert_eq16(16'h635C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #105 c84596f9-917b-492d-af90-b4a85072adbb)");
unit.assert_eq16(16'h0BE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #105 095b540f-b15f-4d2f-8394-12ca706208de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 9324bb03-c3a9-41c6-a555-c5b4d4effa3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 5b79e4b7-cf7a-4c70-b20c-0bfea00a67ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 fddd4f47-2029-4085-96e8-faa624a82499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 6d5877b0-9839-4dd8-ba65-09177a05063c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 c4dce571-f653-4cc6-b74e-dc6ac30271c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 43c40f10-140a-4050-ac02-a0ff413552f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8F21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h064F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'hACA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #106 ded1cb54-cc9b-4b87-a66f-061b0fe7ab4f)");
unit.assert_eq16(16'h8F21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #106 c67641bf-8591-4779-b71a-ac82afe8fa72)");
unit.assert_eq16(16'h0651, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #106 6f987494-e0cc-4379-bc0e-fc7e59f82741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 02cdad1c-7fc7-452d-9cb5-47c0a8a74eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 35da8151-a9bf-4066-912a-1e968802dc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 6bbdc155-f71b-4b74-99ee-433cc140a983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 7c7f4b63-3888-40d3-b593-3381a8ef222d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 bc857acf-7f26-48c3-ada6-66a44779a399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 e2ac28b2-4894-47a1-91b7-9246b396f7db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6902;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h94B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #107 2937bcbc-2400-4792-b18c-5606dd1a4813)");
unit.assert_eq16(16'h6902, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #107 148751d5-596d-4ee2-b4a6-b86a7c7fb0fc)");
unit.assert_eq16(16'h0AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #107 328c5dd9-ba5b-455d-b495-d700549a81ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 8d8b3e4d-4e7b-452e-b203-0034b2b477be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 b954cf33-035a-41c9-895c-716915d8c8c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 7d51c360-1247-4cd6-9ca4-78b02b3f4321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 f51bb736-7589-428f-9c68-737c60ea3605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 e09318ea-2127-4bfc-b0d7-f61ca4480e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 ac7b2f82-5af2-479e-a7f3-5c80f33b22c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4806;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0615;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'hC26E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #108 d2f42729-ee18-4080-9f93-e33e6791b3c2)");
unit.assert_eq16(16'hA5EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #108 f0d97c73-3655-46f3-890d-a66dd17ff1cd)");
unit.assert_eq16(16'h0617, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #108 d2459ff2-98e5-44b0-b606-200f79f56c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 b288785d-10e9-4026-a8ce-c1cd1bbc1773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 3fd0fcca-86e5-4793-bfd8-75dfb80c66ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 d3ab1501-b91f-497d-8228-74808a5e43d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 643e0ab0-1465-4bd5-bc8c-fef358927115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 aa81d966-f642-47d6-85c6-ba1901148cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 ffacc8c6-7067-4ffa-a890-cd8440301e3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE063;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'hEDA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #109 9c9b63fd-8aeb-4506-9307-7d2cf465331b)");
unit.assert_eq16(16'h8D3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #109 80e3fa10-2892-44e5-8156-cc1dad261064)");
unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #109 ed7ca70b-799b-451b-9066-112dd23bc748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 f90b806b-b564-4679-9061-ff786c34212f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 5341bb75-a0ac-4e25-a64f-f5b379a14201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 f0258fbe-5029-4c8b-a788-7a4a1f5bbe26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 e62383e8-90ee-46d3-9f0c-d2e3e9394681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 91c4344c-b977-4525-9885-29968780a7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 9fd36c68-5574-43e2-9911-45e7e258e582)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0001;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h2A97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #110 b14a7c4f-4418-4542-b521-357d34604da9)");
unit.assert_eq16(16'h2E62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #110 6d3b2f00-f3bc-4c8b-952b-55a78d960609)");
unit.assert_eq16(16'h0003, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #110 0a2f0c0a-1858-48b0-aa74-b70064e79051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 1dbcf03d-6a76-4e27-9b7f-7f60050ee563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 1cc4b07a-0c3d-4a4f-8c60-c1c59cfd96e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 225bcce0-85e1-44bf-b6de-0c609da968d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 bda4d962-6d57-44df-9f7a-03ed28460996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 d0ee43f6-ebe3-46d4-bb60-da0f82b3dbd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 e640cdda-d5c9-4d8f-917c-3d6f8275c3bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h541D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #111 dba8e5c5-4f0d-4cb3-be4c-9bb37ed622ac)");
unit.assert_eq16(16'hEC59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #111 8cab9d1a-250d-4a1b-9584-64b8a37e2082)");
unit.assert_eq16(16'h0B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #111 df922e91-96ff-4c03-a67e-8415c1c9f653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 de21ced3-947b-40e8-a6fb-1aac1c8eb72a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 e73f57b2-7320-4766-a3eb-9ccd8cb14312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 883df1b6-da99-4f07-9fe9-f2a58204f6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 b986756e-9874-4674-965b-efb858c3f21d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 11e70bb0-854e-49ff-a537-1dd5cc606630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 4a9bf88c-303c-4785-a015-fedadf5e8ce4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9AEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB27F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h44F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #112 bba4ff92-9216-42b5-981b-3556d59139c7)");
unit.assert_eq16(16'hB27F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #112 aaa01946-01c8-4400-9964-f0a39224ac6f)");
unit.assert_eq16(16'h0FE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #112 f1c18797-3fcf-41ac-b384-e423db7cca60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 304f70a6-f606-4510-ae5c-2553aaf8d743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 aa2fb21b-575d-4ce9-ad2d-e68fc9285672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 6cae823f-c32f-483f-88dc-27196e50fd0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 dac65723-e470-4c47-99f7-b67f938060ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 fcffa082-652d-4649-bbaf-bc6ad069db98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 39c81feb-8e60-4507-af22-4b1cbc273f9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h64FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'hEDB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #113 273142b5-d40a-4c30-b4db-0d60bc38399a)");
unit.assert_eq16(16'hBEB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #113 d82c1deb-fec1-48a9-8349-16e6221c44ff)");
unit.assert_eq16(16'h0F6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #113 bd1fc2f6-5b34-45cb-bb6b-618958c29e94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 1d66ef04-3537-4e39-a0d4-816d08a4c64e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 71c03457-feb0-452f-9b65-10fc8913b365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 ff9e9398-42cf-4ae3-a503-c36fe80a09d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 1aa1788e-9d13-491a-9c0f-91a9bc2143e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 82dd6c5c-043c-47e5-b6e2-24c142242725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 9787548c-2686-4df5-bc5e-9924f689eb43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6331;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'hADD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #114 526bc666-d634-45ba-8f99-4bdb3bedbc9f)");
unit.assert_eq16(16'h6331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #114 1a516278-708f-470f-811d-5d4d4cd82ee7)");
unit.assert_eq16(16'h03AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #114 c8203616-8168-431a-9614-386f864a8b87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 a805454e-081c-4726-9f81-35a218238d79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 c7c52df5-42e7-4f1a-b1f9-27eb66dc7da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 5b6ef27f-74c1-4a39-a3a1-5f986b393c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 e3395516-a3a5-4f15-80c6-3e4cf0d85bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 41e39056-61d1-45c2-bff7-1c4f1d8372c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 65d8f5cc-74ca-42fa-bd8d-6c81207d5ee4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8317;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'h2E54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #115 d7fc58f8-e90f-4db0-9636-5fe05e7be8d4)");
unit.assert_eq16(16'h44D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #115 6efdac89-8e8d-47f2-b937-262785c00458)");
unit.assert_eq16(16'h0AAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #115 b7eae3a4-1aa4-4902-bbb9-a50445ed2778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 afd5f8f9-5d78-4658-8eab-48ac35ef4686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 f8c1c1af-5de8-4bb3-b3dc-e6a70026cda3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 eae8dd20-cb69-4683-8a98-0efca298383d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 6b5badd6-387d-4694-9475-9f959e70d017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 ed811b75-6053-4228-9866-91c2b1501761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 dc28a53d-436c-41af-bb71-08d7680c33d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h221C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h37D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h532D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #116 8dd673ad-b7a1-43ab-a029-26f28bb200dd)");
unit.assert_eq16(16'h37D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #116 24f15521-c163-48d1-8063-6343018852c6)");
unit.assert_eq16(16'h099F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #116 e8dd4ab1-290b-4714-ad49-80e3ca802bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 89b273ad-1144-4bbc-9860-9bf9301b6c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 e0f25407-9825-4c3e-a2c5-1aa95b976637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 570a7cb6-e715-4c0b-aae5-5dbf3f84cbf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 aa2774c6-31e1-4916-a932-b7ccdb23548e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 3840ff11-9526-4feb-98ca-72541d558760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 10016d49-3277-4fca-91ba-1ef91cb68b1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA53B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h482F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0671;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h8B52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #117 3b5f934d-2351-4717-b8c2-0a7e984a4cba)");
unit.assert_eq16(16'h482F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #117 fdc15016-6430-45a0-9e83-ab485a39e81a)");
unit.assert_eq16(16'h0673, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #117 841764ae-6af3-4416-92b4-8121caccd16a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 e63568ac-b3af-4c29-a234-02bc93e31fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 de4c381b-2c9f-4687-92d3-6758a05d72b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 4b07a577-2ddc-42d9-97bb-8eefe9adf169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 76788217-9b3d-45c8-8674-8d9ea498dea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 c0901912-b36c-4fc8-93fa-db4dae4e3970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 182746ea-7d05-454b-834b-4545e7876448)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2379;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'h1D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #118 3f4e5707-18aa-4d51-807e-81740ac26533)");
unit.assert_eq16(16'h2CDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #118 005bce2c-79e8-4d40-a9d8-69a5a41a7f36)");
unit.assert_eq16(16'h03DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #118 dd045a67-40dc-4b9f-b646-e35ddb3c9555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 2ff31c3b-28a1-4c5b-afd8-e601f3f92fd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 d3cbe43c-c29f-4804-80b0-3df0b647e590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 5e34e883-e6d6-447d-b230-d79c012efe90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 d091f274-897d-4f1d-b8a6-2fae11b6e76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 053f858a-974f-44d6-8ffd-5eae3c0331b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 1f1fa938-73c6-4d35-a61c-c35f15a8285e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD021;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA942;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0670;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h5264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #119 68a8cc4b-939a-4318-bb4c-92ee910dfb6a)");
unit.assert_eq16(16'hA942, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #119 64db8d46-365e-4d2e-b228-e6f2f997e35a)");
unit.assert_eq16(16'h0672, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #119 3e1e861f-2ecf-4cdf-87af-d14423fae9f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 d0c14c26-a296-49f4-8719-62d187c1461a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 4eb35b11-81f2-4895-98f1-7e9e246b6128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 8d25b7de-de64-498e-8ab6-10476b0c1ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 cb49908d-f3c9-4764-8265-d2e6d62f6543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 af797ccb-e04f-48b0-a512-3ed0c0770eda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 b18e176b-5233-4fab-bf70-13e3cf7f7e16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3176;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h1849, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #120 01905c6f-469d-4060-8b81-0390e6f31de3)");
unit.assert_eq16(16'h49E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #120 023cb3e8-e51a-47d1-b775-6274cfe0a14f)");
unit.assert_eq16(16'h0A77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #120 78c3bef9-f82b-4aa4-a44c-1965e1e5f1de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 d9f90297-7413-4b83-b8e4-a9473263e7c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 101ebfa8-e231-4453-8a79-db28044e0fae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 e00442d7-ea40-4af2-bad9-d86a120e0bdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 181ef479-941b-47c0-b313-418d6090a307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 7a5f6f89-a559-45a7-bca5-aab79b4c9e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 83afdfe1-7e05-46b5-a7ba-456534ae1090)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD76D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0653;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h6777, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #121 2aa8400b-d5f8-4a7f-8331-572319829f7d)");
unit.assert_eq16(16'hCA2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #121 649bb0c8-cf01-4104-a06e-3c0542d3cdb7)");
unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #121 ac33278f-89d7-42ab-bed3-2e8517bc5c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 f610d2e0-44c1-46ec-a3a8-10dc6a9d5878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 32a58129-58f0-498e-ac17-aa237242df66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 5f5a982b-c613-4e0f-b227-2cbb04a0d568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 e8458518-8bb7-4739-9dfb-52248f1ce5f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 87b23481-7b44-458f-82a7-1f2b28a68e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 954614b2-0a5b-418f-afc5-720639582f97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCED0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h63C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'h6079, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #122 c7a61dd8-03ed-4760-bff4-969c7cecf5ab)");
unit.assert_eq16(16'h63C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #122 7fab1971-84c0-4f9a-b88b-a48a9d0a7e13)");
unit.assert_eq16(16'h03A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #122 23df0dd1-a402-4983-911c-def32a524d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 24e8df10-af04-44dd-8192-9498e7df4add)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 f814b27f-0fc0-4df8-b8c0-433843e54a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 d5957ed5-d260-4b95-b97b-31ec9b325981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 a766d9c8-3d22-4523-a8b9-a33e644374f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 162b58ec-6407-458b-ae0f-3448f2cb441a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 a733cab4-5df6-4318-bd4e-1c7b45e081e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3849;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE42B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0657;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'hAB66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #123 2f8a6fec-7a69-4f07-bc57-f8740c8f9900)");
unit.assert_eq16(16'hE42B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #123 3e6acca5-d09e-448d-8730-5ede1ecfe0d6)");
unit.assert_eq16(16'h0659, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #123 970ceca9-a25a-47c6-8ed0-388da7399060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 8a4388b3-17e9-425d-b72d-0efe1c6e41b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 81b639d3-9be6-4eba-ac62-38e9d4fb3b2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 d9075287-5b47-4e25-aceb-b6e24112bd91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 5d675a2c-51e2-4e52-b490-dfe692469ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 a224b4d9-fa60-4236-8fe3-91ba59020150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 1c3b660f-7fdd-45f6-9f5d-7cde60221676)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h65C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #124 4c567dd7-afd4-4dce-8f10-26576a522689)");
unit.assert_eq16(16'h75D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #124 b1603508-b6d7-49c3-9232-0142928e12f6)");
unit.assert_eq16(16'h0F76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #124 874fb314-3caa-46d0-b50e-b96dd5703ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 15003cc8-45bd-43ed-9d4f-3d984f6a78e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 bf60f00f-083e-4b90-9d30-fc9b02ef9758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 38ce45a1-cdc8-475c-885f-73ae03e6a1b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 ab0b01d7-7ee1-4d6f-b9e1-27a34cf32945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 220ea41a-0f41-4f1f-b441-fd2e6faad01e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 3c9c1aff-19ea-4c01-a054-274f96c7f1f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h67D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0499;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h8BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #125 f3678b0d-ecba-4a6f-9963-0d0ddc530e5f)");
unit.assert_eq16(16'h0AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #125 d6216acf-be2a-4611-b777-741366ecf050)");
unit.assert_eq16(16'h049B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #125 35389079-a88e-43f8-9a3d-c3c8d951c0f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 26a0296f-1ee4-4e00-8ded-7b298e2e804f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 02c9fb87-ce99-4234-ac94-05e6d1a48b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 e15efa3b-1268-4feb-83da-8577f0e1ee27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 ef85f541-c6fc-4e79-8cff-be88ae64528e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 09f32435-c096-4086-bc43-067d091d703f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 47c2587e-51c6-43de-9306-22dc1b910e59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB16A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'hB99A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #126 9d324870-e47c-4360-85c7-74fe78296857)");
unit.assert_eq16(16'hB16A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #126 96a281fa-7eb3-4862-b573-8daa0ea5a98f)");
unit.assert_eq16(16'h0CAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #126 b80898af-94d9-4550-b3ce-d19bce44fd43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 e0ef60cf-9ee0-47bb-acbe-c4a1a8e131ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 e49c0c3d-402b-416a-a2e7-1f70b26157f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 49ef5bd9-458b-4368-b05d-3b3d46c3f978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 e9734430-a75b-4820-9d4f-65558015efd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 5795544a-63f2-4ed3-bf86-8b2ba0d8dfdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 6c06ed9e-d3fa-4877-bc21-73ff2e4fa497)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'hCA1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #127 d91beac8-0e2c-4f81-8bdd-c7f253768b13)");
unit.assert_eq16(16'h66E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #127 a7cc3c34-f366-4a51-abef-22e13f785239)");
unit.assert_eq16(16'h07AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #127 81ad92f2-e075-43c9-9c23-c52af244f330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 1f81bb81-1457-4b1a-b9d1-48d6f79a0225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 ccc83ad3-26e3-4bd6-bcd7-30541de5cf14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 cdfd9a12-5a8e-4bda-93cd-73f4244cb3a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 fd2b74ae-4309-45a1-bbd4-179b3351fb66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 299a7951-210a-4dd2-ba4d-c1bc7591029a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 b40ad2aa-4658-45a1-96bf-05db2afd39e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8798;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'hD96E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #128 1e2c21f0-d1a9-4caa-8728-ad3ce78c6722)");
unit.assert_eq16(16'h8798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #128 33f39c74-e635-410d-8ea8-1cef348ea8eb)");
unit.assert_eq16(16'h08B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #128 f5c8e950-ed45-4718-9861-0e60aafa2c15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 eb8d46e2-caf5-43ab-912f-ccabc69b1847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 0aff0c30-671b-4f9a-aace-45ad8170905b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 418d126c-52dc-4599-9aa4-d26ca960767b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 e41f77d3-5139-4292-abcb-158be9a912f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 5a52c654-f7cf-4263-b2c2-b37b6e36f795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 0ff3c428-b615-4b3b-8799-3eafea8c6a54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD693;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h27AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'h7ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #129 441e9ba1-0f11-4559-93c7-f94554796fec)");
unit.assert_eq16(16'h27AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #129 4724f2b9-7e4d-4ab3-83b5-6340536b4bd0)");
unit.assert_eq16(16'h06A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #129 f60fd011-4b62-4ffb-b68b-65e1fc2634ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 0788abc4-4be7-4d0f-b0e2-4421c4e38919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 f082f1ab-c6cb-4a81-8f6e-c9e42a3307a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 5443f9f4-cf46-4743-8c4e-ee422e44a0b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 dba1eacf-9921-4a3c-a022-3fbb5337563a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 d36c2c2c-c0fa-44c1-b264-e0de0f306117)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 d34c0535-42f2-4dd2-bb19-0804d487ddd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h74C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h0143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #130 53812cbb-4433-45cb-9d93-99e499225d38)");
unit.assert_eq16(16'h00F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #130 06d74046-90e1-49c9-b138-336991af97a7)");
unit.assert_eq16(16'h0B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #130 1771ea27-965c-40b8-b0a1-218fba77c67e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 f39e9c6f-e9a7-428e-af69-64e8bda0d7a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 a887252d-c5a6-444c-8785-ab43355a6b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 14786a1b-05f1-4fec-bfb0-66e807581a43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 708e41ec-d108-4ea2-8c84-9a6cda0d214b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 e71884d3-3ae5-4ebf-b0f2-97d0cfbbf817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 c09ea0bb-c28c-4fec-905a-4805a16ae0e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0336;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0980;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'hFB6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #131 533e0ace-f1b3-458e-abcd-33053c6b1067)");
unit.assert_eq16(16'h0336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #131 e060ba87-4ff7-4509-be59-3b6e76c84561)");
unit.assert_eq16(16'h0982, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #131 88d9d75e-7afe-43d9-9550-0b04ee87a7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 f6f82072-7367-4f4c-8a56-32337453afc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 497b9a69-adef-40c1-8cdf-3001ca5715dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 c9c33488-6f79-4f98-a34d-7e0c51f3bfed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 a96abff6-a315-4b8e-be7d-cba8568a101e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 a5bf99c7-8a2c-48d6-8d19-136dc180cffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 fbf1b397-7f2d-4db8-9f2f-092e69a26fb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h7049, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #132 559c4e37-71f3-4dce-b3e5-2f634bd8ea15)");
unit.assert_eq16(16'h2FEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #132 a46916d4-634f-4f14-86ef-1de4895bc91b)");
unit.assert_eq16(16'h08C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #132 98ffeb8c-8e6a-480d-806b-df808acdc158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 b5a5708d-e383-45fc-aa82-0f3dd9c40313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 4b9e210f-bf41-4178-9204-9830b18b9dcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 0fa15556-5193-4ba1-90db-883990a21d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 d10e2b0e-5175-48cc-b717-3b6de129bd72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 277112f0-5feb-4dbd-b8e3-4c4ff1896d2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 f680f070-1a50-4993-985c-7d25c0d3fb74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF039;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC44B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0183;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h47BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #133 c6a88900-aed8-4ea3-a7fa-f27aa63df47c)");
unit.assert_eq16(16'hC44B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #133 eb271038-8b0b-42af-9931-7390a40e8da7)");
unit.assert_eq16(16'h0185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #133 bf930384-d8fd-4aef-8bff-22ea8d7f4662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 0c06d4c6-7620-4013-b27c-c5e8f09141bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 80b985f1-75af-4d12-a244-9c9a6d173bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 15b0dc85-81d9-416b-a63f-811ad74e9f82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 9b82ccb9-2134-4dbc-9ffa-481937e95b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 820f6fc2-b42a-4f71-bed2-943eca296c2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 522f2bac-aac9-4b4c-9b20-519d10e66b13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h22D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0631;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'hD251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #134 56749802-deec-4245-ab8c-37a55f74435a)");
unit.assert_eq16(16'hFB82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #134 6c480ee5-7693-44d8-a498-eacc95e71b8f)");
unit.assert_eq16(16'h0633, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #134 d116d2c3-42d7-47d0-b7a2-6ccb58c7f160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 369e5015-b7ca-439d-b067-e776760a3956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 e1bcdeab-aff3-4d6b-86c1-4a6787aa02c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 63dca5d8-997a-4942-8ca4-e4ce0fccc5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 f01e7aad-3611-47aa-84c9-02f3ab86b681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 fae45e25-49e0-44b6-ba30-91b20dd756cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 a2b56548-201f-4846-a0ec-0f263eea0b71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'hD1ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #135 a9022053-d21b-46e6-a233-0b739847ec78)");
unit.assert_eq16(16'hCC22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #135 53fe0fe4-eabc-4ba3-9774-f293c94ac6c8)");
unit.assert_eq16(16'h0696, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #135 93e22cc1-6255-4fa2-929d-5e1725e3d472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 4a54b332-9dca-4a6e-b358-77775bf5e07f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 69765f6f-d57a-41b8-94a0-fe7510aa91cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 00c57cd7-ac12-4470-9cab-2276f66e4069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 6e77f48c-b38d-4b5e-9d78-1cb41037a380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 ba688529-9f4f-4808-ab70-718c7b9b3543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 1f46d493-4e69-484e-beba-6ff16b98cdcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9C67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'hA0BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #136 a805d1ac-3b2c-4766-889c-d2156112c14b)");
unit.assert_eq16(16'hDBA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #136 d01057d4-95cb-4835-921b-d0d8b2ac6750)");
unit.assert_eq16(16'h0FF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #136 47f17027-c993-4eb9-8b90-f7d924cf4275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 c9ed413a-d2bf-450e-ae0a-b80b18b7173f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 48e06987-cfb2-4184-a576-0c873e2559c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 df95d2c9-0f87-4435-9e46-5ef11c0551d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 c8cc41e2-ae86-4a3f-8869-a1a9fcbf3af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 ccd46b78-c528-43ba-bf67-17a965d8abd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 0a6a00dd-ed2d-47ab-a0d2-baea5b67ad48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h154E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h1D84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #137 fcd0ee50-46f1-477b-92e0-427aef0cd55c)");
unit.assert_eq16(16'h154E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #137 584cfb7a-ceb3-489d-a209-a723507c1d9f)");
unit.assert_eq16(16'h06F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #137 fd2645b8-7034-4f0a-a480-3a9ea9118941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 33cfd4a0-3c9c-45a8-ac14-3040ac9389c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 b802e932-3078-46a2-94fb-3b812c4fb084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 9a1212c7-15d8-4d91-ac61-bc3fd4eb8ffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 4cfb8816-b5fe-4c16-8590-735421aa8fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 a26919a4-9b80-4dc1-9ec3-e8543100f338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 a4b7ab88-e5b9-48bf-ae94-b424a59f1d3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8554;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h028E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h50C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #138 fce59421-8c1b-4848-89f7-2efe8d0e3bac)");
unit.assert_eq16(16'h7A15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #138 cfbd4350-11d7-459e-9187-d53e5b3783f6)");
unit.assert_eq16(16'h0290, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #138 161b51c2-9495-421a-a98f-1a7a2bc7097c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 373ebecb-bc51-4d95-928d-dcf2b70b3bc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 62d088e6-498f-4cc9-9358-6329e6cd7996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 8e1ea460-c3c6-48bc-9209-796e4efc3577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 20a1c73f-bfbe-4ee9-a91d-fe4f06db2e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 749fd08b-2d06-4332-93c1-1e905f028a1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 9f9f0817-7cb3-485d-ba99-c8c06728e05a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA308;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'hBF8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #139 1818feeb-b89a-4b2f-b292-09ccda77c384)");
unit.assert_eq16(16'hA308, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #139 c145c37c-8752-43ea-a5e5-086b17313277)");
unit.assert_eq16(16'h09D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #139 6213437a-1522-4687-a015-5bfa54324ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 aac9a85e-cf1f-46c7-a308-a72f3ccc773b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 0eaeccb4-f5fc-48c6-bc8a-5ec8b5d316f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 924e702b-179a-4e9e-8d16-60393bd2e3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 b389bdee-77d1-4dc0-b56a-27c9d5fbc905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 bc7a1116-8369-4889-b7f2-306061fd62f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 100d12d3-833e-44c8-a248-83d2c5ee6bb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h57FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'hF491, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #140 7807f387-2e80-4c9c-81b1-92956e972465)");
unit.assert_eq16(16'h7C7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #140 353cae50-fc3d-46fa-bd46-e2492390913f)");
unit.assert_eq16(16'h01CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #140 e6852dc0-c209-4f76-8e09-e05891fbfd33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 3d3f95bf-7827-4a7c-9aa7-7d34d40ceb4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 bd01a878-1890-45aa-9e4c-3368b5f098ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 638d0534-b38d-43eb-a351-4a719c50ac2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 e617ea3a-57fa-4059-8235-7a82a329bd5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 7f1341b2-7c01-47bd-a235-a2c8a1c58972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 c1a27b26-fd36-4c01-be65-2716dacc430d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC523;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4573;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h67FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #141 7f9e7f07-023d-4457-86fd-605e6825e8a2)");
unit.assert_eq16(16'h4573, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #141 fadbcee4-8b33-4c89-b116-f273b9182e91)");
unit.assert_eq16(16'h0F38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #141 5489e38a-c07c-4be8-927f-a4b00a11f0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 328517da-5b3b-488e-b22d-583958331629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 1939bba4-68d7-4c3f-a022-01b1b4cd22e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 6dbc347b-ed1d-4f71-ad6a-838276a3c791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 045cc11d-4d0e-4d87-9789-d472f967199d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 56c5c8c7-9ec0-47cf-b77b-e71895e0450a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 49398d50-43c4-4fd9-a8a3-cbd683a472dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF306;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8235;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h11EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #142 160dc25a-5b90-46b4-ae66-20afed134481)");
unit.assert_eq16(16'h8235, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #142 50e62b35-53b8-488c-961e-3fe2a8bd32be)");
unit.assert_eq16(16'h0831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #142 881229a4-417d-4193-816a-c8367caf3c59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 e7ef1431-eac3-4954-aa72-22ebd06cd9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 bd8c7207-bed1-466b-9c07-3e0bf21d21c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 9394815f-dff1-4bbb-a816-4ce3ddd3f914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 588f3840-2e5b-4fe9-af47-32779eb626c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 ef313ef8-2ed9-43da-9871-446c13b2684f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 8808f06f-70bf-435f-931f-0a5b49d884e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h158A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h024E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'hCC63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #143 5d541c04-ccb5-4d7f-885b-ce552b2f540c)");
unit.assert_eq16(16'h158A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #143 99fcca61-d62f-49f5-bd76-0a97e47e364a)");
unit.assert_eq16(16'h0250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #143 d07b4a7c-436c-427b-9806-cd42888b2c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 e2f6ef85-f7cc-4f01-92e9-ba958981b65f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 fb4a1748-f9f5-4dd9-99a1-1838aaf42099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 ff6fa3f9-4312-494f-a409-e13aaf64de64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 a3283130-37e4-4f46-8120-288129dabfd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 0bdcd309-6dd8-4638-8b62-7c6b37d101fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 16227de7-4abd-4577-9a6a-3463760329af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5091;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3A6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'hE170, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #144 930f3f92-7cef-48f7-964c-a3fce36119d7)");
unit.assert_eq16(16'h3A6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #144 4a76bdc2-837a-4c9b-a512-4be186c9b8c2)");
unit.assert_eq16(16'h04AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #144 d84dc345-5b5f-48b7-8d06-b916244b2aa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 5fed95b3-63b5-43bf-a95d-6a270eb803b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 ad833b6f-2a1b-44cd-a9e6-8bcb957d1708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 a48f41c0-67bc-4bf7-99b4-0a9457d4b900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 1cebc679-85da-4c89-b98d-8cc5f7470de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 090a6f78-b9ff-4403-af19-97624a4b715e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 0f40505e-93b7-41d8-b2bd-6157c4d46198)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h050F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h8F7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #145 626c75d4-3b37-40a8-98dc-d6640282b9fe)");
unit.assert_eq16(16'hFBAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #145 631a6c17-56c0-416b-94e7-8e509efd09a6)");
unit.assert_eq16(16'h0511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #145 e5aa5899-7cc1-4e60-9537-d77442a9b18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 09753ad6-371f-46a4-baa1-c6cca9cbbe24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 4d6bdfe6-57c7-4116-8f79-30e642d92e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 aeab16c2-958c-4f92-ab12-7c8f0eb3e888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 77140667-5019-4b56-bf6f-48a8efa3d1de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 80c9bf53-19ee-41a9-8af6-b8900add0cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 b9272b47-473c-4417-aaba-f737ea88b252)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB857;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h5203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #146 510f8168-719a-4582-a51a-ea7b6057c890)");
unit.assert_eq16(16'hB857, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #146 1c335404-b16b-4a71-b87d-ae14d8531df6)");
unit.assert_eq16(16'h04BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #146 85a7aabf-46c3-45cf-9a59-3ec349ad4c84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 32ad9e0c-353c-48fc-9da7-67d16392083e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 17db51b8-7689-456e-9930-bc2a16aa6a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 bcdc9195-3178-4301-bdcb-7acd2e477714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 ce493a30-fa4c-4eda-859d-25b1904b9dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 752807f6-5894-40c2-8943-3c6cad52dfc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 83fb8538-910b-4ae6-9d94-cff3c3702ef6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0207;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'hDC46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #147 5089603f-a0a7-49b4-ae05-22652052707b)");
unit.assert_eq16(16'h3C5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #147 5000d366-9c27-4ef0-8020-7e43e7a58df9)");
unit.assert_eq16(16'h0209, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #147 99610d5a-27ae-4e00-a00b-2e858b551744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 d6847060-30ef-46bc-9605-5480c0e673bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 0f2fd577-66e4-46af-a84e-94759c818a14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 c8219009-8714-4f43-a1ff-06e611c46312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 ccb968f6-1bfd-47e7-bb9e-8596048d7b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 029b2322-d97e-4f9e-b5ca-2db9f5766c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 982c0a7e-6878-4e16-8f01-4156bb9a8d93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h606E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1195;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0367;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'hE755, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #148 900369a7-910c-4b0f-ada1-23ca0c7d45e4)");
unit.assert_eq16(16'h1195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #148 d77d0101-5cb7-493a-8e99-67ce7ab8d0e8)");
unit.assert_eq16(16'h0369, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #148 9000610c-02bf-4df1-bddf-04cb01be53c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 3e2d054e-c8e7-4732-92ce-6484598638f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 b4f697d2-1d46-488b-9f6c-b8e8650327fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 8f19a7ac-0b85-4576-b63c-48a6c6849e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 cccd7c6a-851e-422b-9cc1-1ae9d70913c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 b6558ca2-554f-4f46-a471-dd4cc31b637d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 0bae1b9f-dffa-4eea-958b-d3feff8f162d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA0CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h6E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #149 f68a7cfb-169c-43ee-8c41-4085c25a4152)");
unit.assert_eq16(16'hA0CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #149 0d4571a5-78b3-4b21-b76c-0d663f6167b4)");
unit.assert_eq16(16'h01D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #149 32a9808a-0d30-4040-be9a-719d403fe92a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 01e21652-b20d-4b16-b588-089be2a777b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 0213dd67-c0e8-4911-95ca-535d1eaf745b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 d68b26f9-e1e8-47b9-9335-2b7338e7a9dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 e1292ec7-f09b-4bb3-9a08-025fe2bbc1b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 761a1296-e401-4d13-bc79-708bc6706550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 c7417012-e0b5-49ab-813e-3a4c10852e15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDAE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h846B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #150 f8d36b51-e3fd-43fd-822f-2b9d9c02a27a)");
unit.assert_eq16(16'hDAE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #150 9966523b-96b1-473d-af3c-3149b85053b6)");
unit.assert_eq16(16'h0C4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #150 13cd0528-5d96-41e1-9d75-c736d9dc3bf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 0af49e7a-c116-475a-b141-2e3dc281ed45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 cbd9df70-0dc0-42d3-bda8-12f27ed01372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 b3bc5d20-c0dc-4a5f-ad9c-57cdb1ae254e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 826e0a32-340e-42dd-ab29-4f50ae723b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 a0864b9a-fbf4-4c9c-b828-277501ec4269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 ced6f8c2-135d-441f-a405-5b4d9ddcec62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h918C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h58ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0787;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'hE91B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #151 660e76f1-a0d9-4e84-be97-1970dcd4d324)");
unit.assert_eq16(16'h58ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #151 4c6ee671-6752-45b8-9a2e-ea4419b9c73e)");
unit.assert_eq16(16'h0789, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #151 7accfa16-6d63-430b-bcaf-6a965f8612b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 14b85b85-8bc5-4ae3-aa77-ee999def8f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 ade024bf-a9a9-4653-8ea5-d002fe189d82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 add1214e-bb48-4eb6-97d8-01812f7bdfa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 a27b3761-a466-402c-838f-be9249584013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 af7a9d37-48b7-44b0-ac2b-dcc3187aaa65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 e546288e-4665-4a40-9b65-c126051053a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'hC284, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #152 17112e08-d50d-472c-90f2-f980861f1164)");
unit.assert_eq16(16'hBA99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #152 4e809883-ebac-4a1f-b4f7-7b983ea38edf)");
unit.assert_eq16(16'h0F0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #152 dd03b224-28e5-4c4d-901a-f47aac5fd0cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 25c5184e-0922-4729-9b24-f716217be705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 42064a15-c45e-41c7-aef0-a7e64e702534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 db5af233-1997-4e62-82e6-d20ed57b30dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 ad7f596d-5a8c-4956-96e0-098daf67da3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 b757d8d4-cbf5-4bc5-ade3-aa51851044c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 58d9fa66-c68b-4362-b91b-e227cefe6b26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h13B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'hC0FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #153 34e73b54-1d8f-40df-8556-b133a040b9d9)");
unit.assert_eq16(16'h13B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #153 2a395d13-5c12-47f2-a434-1d0b5a2d987a)");
unit.assert_eq16(16'h0B23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #153 b4b40723-f6a2-4aec-a4f4-daaca9e75908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 35c1577f-6720-4af6-9ea1-6f03de2423ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 2dcb1052-3785-44b3-9f8b-169b7a7848bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 65b1ab27-356b-4474-b733-36276e78b0be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 133332e2-0d0c-452a-bc28-1a37ff3d9527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 23bf4764-5b5a-4a68-a4e3-81605e8a522f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 322d231b-acec-4770-a217-b6dbe3d0a85a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5719;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'hF657, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #154 7822888a-5451-44fa-9701-fb5c405300ff)");
unit.assert_eq16(16'h5719, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #154 c4439f29-67e4-400d-bf69-b2ccffff14f4)");
unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #154 7c81e9b0-5a30-440b-a8d6-22b4a5e6001b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 53ee9f02-9487-47e3-8c95-956ecc330cfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 20cac024-613a-4f23-ac17-651f984d0cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 49c78489-52c4-4801-9f05-c73bb68270ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 b98660ba-f8c5-4a84-9bdc-5da9b9c9416b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 de6993f1-6786-44e9-922f-a1f2eb2f2700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 c64ee31d-da4d-47fd-a5ff-7f127edef22e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h96F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h7A12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #155 0c334303-eec8-4cc7-bf7e-724e15defeda)");
unit.assert_eq16(16'h96F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #155 7e4055e7-dc45-4087-a446-b260eb4e1fb3)");
unit.assert_eq16(16'h0B79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #155 85480f77-5787-4432-9fbc-91dfe203e428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 1e335775-afa2-4ae9-8c17-570d1b144bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 ea969343-fdbc-44c3-8025-e69a1944b22f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 7a683d52-6296-41f0-85c8-136d2c1b9fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 00618fde-b8b0-438d-90ad-420fff439418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 4acf5cd8-93cb-4be8-a156-a70c6ba77a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 72967b3b-ec80-4ab7-afa6-0a2d2e0a2f00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h00F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #156 4ec461d0-62b7-4f3c-88e1-bab7e2b87b8a)");
unit.assert_eq16(16'h6D88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #156 4b0bdb48-b66a-4fd6-8721-4c00a78bf506)");
unit.assert_eq16(16'h0EC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #156 8d49933f-aaa8-4b32-8693-e79ff5e704e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 fa8b0eaf-94cc-4774-9407-d72ea046397b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 f2ef67f7-f5da-4afa-b0c4-0337afae3a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 01fa72d8-78d5-4569-9bd0-e0aaff320c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 29dd95a8-69e5-46d9-bb10-bac474d14fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 1a1e7ef1-fea8-47af-b9b6-d0415509c1d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 effee56a-2ba3-48db-98f4-8b065758b3b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h6220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #157 3deadeac-ebe1-43ec-862d-c90767c522ff)");
unit.assert_eq16(16'h2C73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #157 ec81b804-fba0-4dd0-86ce-87a2939ba9c6)");
unit.assert_eq16(16'h0EB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #157 d7a71109-0a87-477b-bed4-4d359c466f95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 3c798050-20cb-41a1-865c-d15cf45ef8ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 15d229ef-56da-4f3a-a7de-07ca473b84cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 eccc404b-4607-41a5-bef7-f5b9c5bd8615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 73aea8c3-fe69-4df0-8946-34a99eb42a91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 b3a5247d-2dc7-4089-a810-f40e272c518e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 962b1c51-c42d-4ee4-8a26-36f268e3f3ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE89E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'h4564, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #158 1b265a05-a5df-4886-9351-e4a69cb60542)");
unit.assert_eq16(16'hE89E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #158 33096825-9b28-4d76-974b-b393d8018bef)");
unit.assert_eq16(16'h01EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #158 e1e434a4-e6c3-4efa-8573-f77007b54e2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 e1be7daf-f9a1-4f64-bb74-b878a0745d0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 9ac87eab-9b91-4f5d-ab50-b02bf785f5a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 5ac91db4-4195-46df-a051-4687c4c55590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 3e272eca-1f73-442e-884b-fcd350392355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 5ad5f207-fd0a-4147-9ed9-1fa543852e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 43776178-5d7c-4b6e-9f88-819c61630552)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'hB1DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #159 52b78aac-25d9-4975-8c29-e6e67683cdc9)");
unit.assert_eq16(16'h3D0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #159 99526b6d-313d-444a-9a18-3675139d2fb8)");
unit.assert_eq16(16'h0EFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #159 276a3156-4ad4-40cb-a5c5-cecce51d3072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 59472e6f-f40e-463a-9d7d-01cb2438707c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 3da6826b-53c0-41d7-a3ba-30b5d471a2b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 23d5099c-8a49-4ee4-8c20-5d764123b33b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 c70fedce-82bf-44d6-9681-39ca2a6f4a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 7540acf7-431b-4ce7-9ffc-ef1d19505d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 e2b1412f-da43-4b7f-9414-47fcba864aee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0425;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h02CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #160 edc0a483-1e5d-4646-96b8-3bf32dc52a35)");
unit.assert_eq16(16'h78E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #160 3bbbe320-e254-40c6-ba42-5ce4e4a6f6ca)");
unit.assert_eq16(16'h0427, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #160 c7de6d64-7e92-47ef-9701-8a0694e15112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 3e0631fb-d95c-4a95-98c5-3e757cb08119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 baa69288-26fb-4475-80c8-761086203c16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 c681b0e1-be1b-4c10-a187-4f82195bba1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 bbde6f2b-b31c-4308-bcf0-21ff266e5237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 dfed66df-586b-4af0-9b35-4caa038bb11e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 580de6c6-6d13-4954-a466-d17b746f791a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h97F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h366E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #161 84b14c06-0998-4089-b1f2-3d35bc29d156)");
unit.assert_eq16(16'h97F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #161 3c21e78b-8f0d-4e3d-860f-d87429867bf7)");
unit.assert_eq16(16'h07BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #161 8fc87106-5374-49da-89c3-b172aee272dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 18c034ca-0c29-4d23-a748-3198b442cc46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 57201367-ab1d-4163-a522-1b4d0aba89e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 f9ed4520-5e5d-4fe3-8fce-78374cd2aa3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 3da9c17b-7239-44fc-bad4-81c356b57c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 0ae1c69a-a60b-4818-a7aa-c038f1dd4d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 18a7bd99-826f-4f7f-9288-fef8aeab34b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1AF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB13D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'hE717, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #162 9bf8e606-7e8c-4623-b433-dbaa9518933d)");
unit.assert_eq16(16'hB13D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #162 6eca4262-ab0d-4956-8e8b-93aa6223bea4)");
unit.assert_eq16(16'h05D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #162 4bf6c38e-e1f0-4a18-88b2-8f5d3b0549aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 1e096bd0-5c63-4574-90cf-7664552e7cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 10ebe3a9-bc96-4ed5-b3bb-df258590508c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 ee8ee2d2-82dd-4bf6-833c-e4dbf55fd3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 6a247579-f95f-4b77-b6bc-03f06dddcc5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 f247b56b-c6e2-4b2e-8ce8-7b5d7a9d1304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 ff3d6285-6eed-43c2-a723-006ead0241cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3819;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'h3C8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #163 1ab62b13-bfb8-4c86-8a55-a10de01255a9)");
unit.assert_eq16(16'h3819, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #163 85877b7e-e070-46b9-868f-5155113f3f59)");
unit.assert_eq16(16'h05EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #163 4b16da32-7964-44c3-be30-63ca69e220d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 cbb8866a-38c0-42c2-8fe0-3cb13947c9a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 ef2939ce-b57f-4c2c-9549-3a6428da791e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 29aa52b2-e447-4d97-a3ed-d62aebc09003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 190da67b-14ad-45fe-9aad-3eae747e4112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 8b20f984-7857-4f48-8128-7f356c0d4793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 65afba7d-faa5-4aad-81cb-9a415d81501b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5244;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0133;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h21A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #164 59f81c6f-1008-4109-a296-158fd518fdad)");
unit.assert_eq16(16'h80F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #164 53bb62cc-2e0f-4acb-95ed-6ee21df725da)");
unit.assert_eq16(16'h0135, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #164 b541405a-4472-455e-9267-575b73221f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 2a47f6aa-f5c1-43ee-bf94-faf24aa7af89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 d5a3ced7-58dc-4da0-8b36-73b4d0a2445a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 a73b7fd2-824d-4750-926a-06613347b0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 e8f17a51-61b9-455e-b692-61ac9323fedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 e0c49ce4-74e8-4371-baa9-bb264ae5486f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 02df157e-34c9-4f8e-ac5f-de74053cfdc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h132C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5003;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0671;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h8B52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #165 050c4b16-4135-4daa-b317-ce5d60e8f1cc)");
unit.assert_eq16(16'h5003, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #165 fc86c02e-fea0-4c4b-936f-b7b26ac22785)");
unit.assert_eq16(16'h0673, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #165 9aa3f35c-3f1c-4075-8a6c-38d25af92257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 75427c03-5fb8-4497-af46-e8b006a52bcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 b2e325fc-cfdb-47c9-b5da-143817d48c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 e74b42ab-896d-46eb-8ab5-92dc5c4df58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 97067c43-e93a-48c1-8e0b-2eaec56de793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 0a5a70b1-a090-4e06-a1eb-1bd9fe65ccbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 da2b88a5-90e2-46da-9294-ff72452e8c3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE76C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h118B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0258;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h6212, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #166 dfa6dcc0-b0c5-4b7c-bdc9-2fbb834aac3b)");
unit.assert_eq16(16'h118B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #166 697acf68-3b7d-47eb-96fb-fd1f1fded6b7)");
unit.assert_eq16(16'h025A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #166 fe5d5f04-d24c-492c-8a46-234f739ce138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 3060038b-beb3-4036-b534-dec7098eb541)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 8f32e2ed-c556-40bc-83dd-0d94a054784f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 c763066a-2504-4f45-a38f-0f2a6850fec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 65903fff-ed97-48cb-afde-a4f7899f328c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 4099a98d-e4d4-41fc-b373-c253d571d32c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 6a4c0d47-dfae-4ec3-b0bd-f023c00bdf40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC5D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC581;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h8C8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #167 46efe2bc-0989-4d7a-8c15-419dd66163b9)");
unit.assert_eq16(16'hC581, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #167 d1bcd2d6-9fd5-4fa4-b78d-44c2ce862f0a)");
unit.assert_eq16(16'h0E59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #167 77843c35-2946-4d05-9702-8877a33eb749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 23da455b-030f-477d-a0a8-549239f84304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 b91c08d8-ce96-4a43-a4e9-eec257d6621e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 e0bc3a23-fe85-4afd-8c9d-3024d2e768e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 f507787c-5f93-4fdc-8d82-429253a7059a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 b30fd4dc-8e08-4bf5-9c6a-a59cbeebddcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 5aa8746a-3cd8-4f6e-aa2b-1eb685a3204b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB82D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h991C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h7F09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #168 c880ef73-1c52-4b6a-84aa-f3550d86c2bc)");
unit.assert_eq16(16'h991C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #168 fc634e53-0845-46b3-adb1-1f6d47019357)");
unit.assert_eq16(16'h0D47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #168 e21b9956-1a90-40e5-8a57-0bcc669933e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 08d8941d-7aa8-4a24-af8c-9702bb6229da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 5d36ae08-973a-45e9-ad17-4cc2736833e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 99a280bd-5476-46e6-ba6f-48cd76fea698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 942f69e9-5596-459f-8953-12e237f2f3dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 b608c1f5-5708-4ad9-9fbd-8aa936ebe09b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 a92018a9-af4d-44a6-8e52-6f683e2f1e42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h41F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #169 d1bf8d0d-bae3-4024-875c-ed38446750d5)");
unit.assert_eq16(16'h8C7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #169 0bf1429f-f1cb-45fe-8395-484c32925364)");
unit.assert_eq16(16'h0F42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #169 e6140867-3edc-4d96-8094-52a00665b01a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 7e2a4ed6-0e24-476e-ac90-b209ae015a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 9efba8e8-2dd3-448a-8fdc-c208508cdacf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 7181a9b6-65c0-4f93-97e2-246a263dc69f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 d4ed6b74-9389-4d69-add1-8ba4cf92beb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 fecbc95d-3693-43bf-8542-664fe3119d4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 9e01d695-3f50-4729-bd84-354b61628c38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2893;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h1D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #170 09816882-6c93-4567-93df-87a248022464)");
unit.assert_eq16(16'h2893, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #170 3a9e24c9-7c20-45d2-90e2-705ca565004c)");
unit.assert_eq16(16'h05BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #170 e3978315-2376-44e6-b286-643f1b9752e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 340544f2-ddcf-4fe5-b966-140b41d5c15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 59c41f94-e3dd-4b24-9fbf-295f926576ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 ddbe4dd1-9fae-46bf-bb2a-f51c51c673fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 22856364-3574-4406-8b6b-ac6a6d86b14f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 496582d0-8ec0-4dd2-84a7-66ffaf73da1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 f12d7dcf-97be-4a2e-a339-538c91089c54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6087;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h22FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0682;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h164A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #171 5d991392-d7a7-4363-ace9-7e44f74b6d6d)");
unit.assert_eq16(16'h22FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #171 4c442c46-aa8b-472d-ab21-47d994d8b5a6)");
unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #171 c182c5a9-e3ba-4c36-960b-187b828a12e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 3e23ea31-1456-4686-81b0-ba4f2cde5c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 8718e46f-aadc-4aeb-8c10-41d669273b5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 42ca5d61-a9a9-4f2d-a0e0-e98653af498d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 f3322f07-bf37-4864-a967-1b922c543f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 60b88188-d1ee-4ef2-afa4-916c38ab8651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 2817defd-c315-4ec2-9f1a-72d70d842a18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'hFCAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #172 35097af0-904e-4120-8528-b2d92f5ddd5b)");
unit.assert_eq16(16'h56D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #172 4396b2ad-9364-4fde-84dd-260a2e823476)");
unit.assert_eq16(16'h0FE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #172 05201cde-1dd8-4e91-9cd8-165fa80fe429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 8f7897ba-0170-4acc-9fe0-47719adcb592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 6ed608dc-a8f1-49e4-ad5a-ee3899c8e98f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 6c175620-e0df-48f2-a0d9-7666d12ea431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 cbc8a26e-ec26-4d46-9fa7-d8b6c48bb3e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 747e0165-d334-43e5-b257-a58557dcbbdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 fac4a85e-bf24-4dbb-bfc5-d4c9cc188cad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE678;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h045C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0478;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h969F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #173 6b71cd17-1054-4321-9067-906de5257aff)");
unit.assert_eq16(16'h045C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #173 3d0d8da0-7746-48ac-be07-e6c2ccfe39e5)");
unit.assert_eq16(16'h047A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #173 6db70b7f-74c6-40b6-8b19-0eeb90e09eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 d20d53e3-b007-456e-83f3-e4ac72417375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 7e254925-e1d8-4593-90cb-6edfdad7c1eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 93366f45-1749-4125-89b9-59f27b0f1fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 e549febd-4ccc-484e-9839-bb48e3f8db13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 b9e8c24d-70d7-40a0-8f37-3dd5bb6bbd7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 13ac4b60-e6b1-406a-859f-dcf5d1063486)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD3E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'hA503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #174 8373a3d8-a92b-46d8-b448-0d0abd18bbfb)");
unit.assert_eq16(16'h0CC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #174 f1719758-2684-4f89-8c54-5e47fa21ae3c)");
unit.assert_eq16(16'h00DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #174 35547ba2-49cc-4e8c-ac64-d55e37611b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 51b01c9d-2cfc-4200-9ff1-7c0dad8e407a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 9f81966a-8ebc-46a0-9529-44c791ef8efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 19c38dff-8e58-482b-b055-77787d341f94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 212442ef-5b01-4405-8abb-46c8eeef6b78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 5b338398-78e4-4d2e-b9f6-ffa55d60851a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 f1fe2ed1-285b-416f-a55b-be450e2712fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h258D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h0A48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #175 5bc3b7ac-448f-4849-a8b6-9eb4de2fde16)");
unit.assert_eq16(16'h258D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #175 2acf1a5d-8066-4d7a-b67c-bfc70a4a087a)");
unit.assert_eq16(16'h00D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #175 e7f26e6e-4cba-402e-bee0-e1d1348a3732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 690d0116-b38a-4a43-a6aa-1bdbcea30e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 32fe8232-80e6-440c-81b4-a273ccdb3e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 cc22fdcd-694f-4f3f-9b2a-52125caec5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 f27ec770-36a9-47f0-9bab-9d68d9d8142a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 d9a67fe9-b99e-4f4e-a9bc-25772212c6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 0ddbbdac-f640-441c-8a83-6ae042836774)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8831;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h6D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #176 24ef0756-9933-430a-859c-3c2ca81aab51)");
unit.assert_eq16(16'h8831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #176 a67a1ec9-d756-427c-b2b3-37a3d9ee5fee)");
unit.assert_eq16(16'h03F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #176 2636287c-322f-49af-9915-512cf4591e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 35d61a62-5e53-48a7-ad67-5c3cbc502348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 8b3e2aee-fbf7-426b-a888-c56a677fb7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 149536a5-a202-450b-a9f0-ff7e783f65af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 918b7649-3acd-428b-bc23-2e336d95df24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 90fde761-74d2-4e3b-b5f3-299645c975b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 62ac2bde-d32e-4cf2-be7e-7ef0a9336515)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8511;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'hDEC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #177 e879aaaa-de13-4068-a3f1-a6b4b33fc8f0)");
unit.assert_eq16(16'h8511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #177 3e23dae7-9b31-4f9c-bcc9-03d305ca2edf)");
unit.assert_eq16(16'h07B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #177 5f1eaa55-7ab6-4445-8eff-703b7f0c5dd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 f0969bfb-bb97-4574-9b04-afb6a1894685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 2c110db3-6af7-4c72-88b2-4053ff263d45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 db216846-fd8c-44f8-9a07-340dac8d9148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 dd901635-f67f-4935-852c-044d0dd5ee8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 ecedc350-5999-45e4-815a-38c4c42b560f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 45137e94-9890-42f5-bd70-310932f020e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCAD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h961F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'hFB57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #178 cd1ca1dc-58ae-45e2-b25e-1d92ce02452a)");
unit.assert_eq16(16'h961F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #178 75fa2fbe-e6cc-4b46-8ad9-b5b2d0bb6b6b)");
unit.assert_eq16(16'h0C33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #178 fd39c41b-d638-4a78-9725-c7180d055265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 7dc9f609-908f-4ee4-8ed2-96bfc0b6e5be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 d4f404ff-4d97-4c99-9d53-ec5550e44c64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 6be0eaa0-d009-4a1e-b617-5f7e36c96118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 c63c3362-61b0-405c-9fe6-bef1309ad01e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 2f8147dd-0599-4864-9c29-f2631d2ef465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 57581c45-085d-4598-a304-2e48768f20ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9E83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h778A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0625;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'hA98F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #179 9e368811-ff8a-4d04-8763-460a39101826)");
unit.assert_eq16(16'h778A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #179 170538b4-3a9b-42b5-aa36-3f84ad46a240)");
unit.assert_eq16(16'h0627, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #179 87628dc1-5df6-4428-96b6-59d1e0b8c2d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 dcaa86ed-51a0-4528-923d-6fbc2277ffd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 36ccf48b-2926-45e7-904c-584cc34222df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 63074f04-2ba1-4618-8c41-620ed73a7989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 997a47b1-8346-4c78-8853-d2b5790eab5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 f84d6f95-a071-412a-a949-f6ed96251a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 31832975-e456-4e75-9ce0-04a52cec75ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4BBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h8BF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #180 673a994f-fd25-464c-b674-689289d9b666)");
unit.assert_eq16(16'h4BBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #180 1ce28627-91fd-44fc-a2a9-b9b3ca3d5205)");
unit.assert_eq16(16'h09F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #180 c9c9453b-189b-4098-8425-4581f5253b8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 ef3cf572-15fe-4e9a-a499-b7234373fe7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 75648e78-fb42-49b1-897d-a99fc14dfee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 f292d60f-e348-46a4-8a39-4b201c16517b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 c99cfb51-57f2-40d2-9007-7c415ef75761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 1068bda4-9dbf-44df-8d76-2a077886481c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 eb454931-6715-4409-b6f5-df9d4c1b98f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h494C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'hF9D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #181 2d96d6e5-e7a6-4b00-9758-89879a56760b)");
unit.assert_eq16(16'h494C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #181 1ddb16af-e4de-4300-9449-20f1a79b43c6)");
unit.assert_eq16(16'h0DE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #181 1bfcd977-69f5-42b6-a15d-a179c2f98ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 34fdb60f-a1d4-437f-94e7-9681ccb00b16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 aea56f31-fe53-4a3e-8797-b0e9693fded8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 bc1fef7b-d453-4333-93ff-a9b759344e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 d29272a9-9d42-4734-80bc-27e3b8050f8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 4ea8624c-2d3f-4926-ae9e-8d38f7d46278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 9b8f2450-2b4b-4dca-9472-10a93c23e226)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD00E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA4F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h58A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #182 6d79b3ff-b083-499f-9829-27cc41052abd)");
unit.assert_eq16(16'hA4F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #182 dd81f022-b29c-4b33-8576-c70fc06b5b8f)");
unit.assert_eq16(16'h0F22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #182 1c60575c-d3aa-43b6-abdc-5d24cb0e8b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 06b2cab4-d75b-4a36-b4d3-b3a9da69aa74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 4ac15ff4-237c-49c2-bfa4-e3cdd85f5cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 cab6567d-4fcf-45e2-b0ea-47611b98ac4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 3ec5dd90-1bbd-4723-8805-61eaf58da5db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 159e33b3-d6e2-4556-b880-c64f7fbb521f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 18c3957e-bf3d-4d01-8dde-eae4b9fd8cb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4293;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0512;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'h5C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #183 90165d10-bfb3-45b1-bc79-a886ff4a4bc5)");
unit.assert_eq16(16'h79C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #183 bd7b8b40-a6a2-4762-9a01-2729eb1f9a70)");
unit.assert_eq16(16'h0514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #183 f5381a20-8804-41bf-ab01-c9b34bbbb6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 f9717c1e-aa38-4d5a-8252-1bbd46cd223e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 19669c19-a9c9-4e55-afc0-538a8a5852e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 97a89de3-684c-4465-aafe-2b7746328170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 f17f5168-4435-4a75-972a-2a256ec85bb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 27f49525-86cf-4463-b943-a507dea00ea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 8d248193-1d7c-4b97-bb30-e428580f0c36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5726;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'h37E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #184 a4b0bbc1-a392-4415-9c68-1a258aed0f47)");
unit.assert_eq16(16'h5726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #184 13ca703d-a4aa-41a5-b6ef-1a1fea19888b)");
unit.assert_eq16(16'h0B95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #184 dd3e6d48-aa38-41ed-ab5d-bc263779fac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 cc83c9a5-582e-4d88-8391-b91fc187fc87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 4b0e8f84-6e1a-476e-b8c3-03c56fe1233c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 4bd0e775-a302-4b9b-bf97-fd1afa902f6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 506e2016-4f38-4dac-bab9-ec629772671d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 54e5403a-1835-4557-8ab9-0bfb134c68d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 48151cff-2dfc-4a6e-9bc6-d41384a78213)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA862;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0229;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'hD263, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #185 5365f345-2162-4de8-be90-96bf500484c9)");
unit.assert_eq16(16'hA862, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #185 bd62fe34-d9a9-4340-b614-407963282726)");
unit.assert_eq16(16'h022B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #185 f26c5776-3bb0-4c1c-9ecd-683c0dc59bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 e5c90e16-a4e9-4da0-b2bf-9e37edf9914d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 4a172142-ca83-4291-8165-6408ef2e9838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 f52e5003-0247-4df4-a9b5-edddb2049eaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 c94ab8a3-d13e-4ef8-9878-1c2b49d893b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 c9eb6648-41f0-4fb1-90cc-aff67cf9eac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 d48b7561-694a-4d59-bfcd-8336026f8d2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3DED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2433;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0698;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'h975B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #186 66153640-3203-4f71-95b4-f847c4dc3e13)");
unit.assert_eq16(16'h2433, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #186 87a5bd6c-3799-490e-9813-93fdf11207ae)");
unit.assert_eq16(16'h069A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #186 2cd1c418-5a10-47b3-b04e-9d6dc6297535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 9fe6834c-5e37-492c-bd61-8e6ee197b75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 c0ac2f65-f250-4087-bdcb-f45b3790a179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 190deb42-6d27-415c-b410-a8e0c164718f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 34ad5b3b-119c-4651-bc0e-9f8b9dbfafe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 80eb4beb-1a44-4856-9e8a-e9bb622a6fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 52d90196-b5d8-4d92-a356-ebc69ef6ae77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'hDF0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #187 94dd1c11-78f6-4761-92ef-f307348b12bb)");
unit.assert_eq16(16'h6D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #187 0f251bb1-7492-47ab-a56e-984aa28997db)");
unit.assert_eq16(16'h0421, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #187 fbe96fa9-b873-4fb7-bee8-97480f849c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 7e084caf-bddc-4660-afc9-97a45c1e5fd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 49c1f9a1-f72f-4c34-b19c-1cca569f1503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 bae78511-ccd2-4610-b9f1-9b6a7e204830)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 48d683eb-de23-43ce-896c-46ff76df981a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 e8a58e9f-b219-4e71-9d12-e068ba8395a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 2502f4fd-b74c-44bd-93e0-94b4e9e636e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0771;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h57C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #188 38c67e66-3faa-4f91-8c70-c9fb505f8ce3)");
unit.assert_eq16(16'hAC05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #188 3190f8f6-0f82-4224-804d-6a3053b30a71)");
unit.assert_eq16(16'h0773, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #188 24e05858-5534-4df9-92db-a0c9fc218438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 27e030ea-a76a-42c2-965d-6ad4387d84ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 b8dcbaf0-5f78-4993-a102-2106204a4e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 a0dbb620-c60a-44b5-893b-2c0d223d83ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 2d7d6432-cf0f-4cdf-ad59-75b8135926d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 f8d5faf9-0f6a-46f4-bbea-3e76422ecb2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 10ee1b80-9e63-4014-abc7-35391129c5bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8214;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3154;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0315;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'hA833, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #189 72e789f8-e64b-4343-b7c6-4647bec07c8f)");
unit.assert_eq16(16'h3154, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #189 9e0cc4d4-b682-4343-9f85-d7e0866566b2)");
unit.assert_eq16(16'h0317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #189 e63c5491-8655-4ce6-8f74-106303615cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 1baebc59-3f39-434f-ba4e-a8f4f1c7aa6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 10727d74-fca1-49e3-99a5-ca80e5b9ce0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 a965f808-2152-4fc5-aae2-85730fa94be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 c96a307f-dd54-4b2c-ac3e-7f2b224aab98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 1d16afc4-4567-4562-8a8d-30ee4514a91c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 c0491a5d-809c-4155-a698-12d6fbe8f74d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC3CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0936;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h4EAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #190 756ebbf3-89eb-4b52-a5d4-37873603b34e)");
unit.assert_eq16(16'h1DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #190 33a55f16-94a8-4271-a82a-f800704067f9)");
unit.assert_eq16(16'h0938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #190 d5e609d0-7bf8-4760-987e-92936ef6d4b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 f462c78c-a400-4ecb-afc3-cc0b6c3eacd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 a3eb4d8c-a49b-469e-aeae-c8259bb5b27b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 b7dc1622-654b-460a-ae9b-fa28da0962a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 c04104e3-9ae2-4f2b-a0a2-9e1a8bb58f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 d81d0b00-8224-4031-9300-233fdecd96ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 48b42070-f010-40b9-b95f-3c8ff0e1c9e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1209;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0500;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h596C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #191 1a0baf3e-7838-4e4a-b650-8a7a9e5c3ed0)");
unit.assert_eq16(16'h54EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #191 c8d7dcba-ef12-4a72-a11d-7a68f5056698)");
unit.assert_eq16(16'h0502, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #191 40810bf5-cf4f-409d-a971-42b228ed0d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 8263f2b1-8e2a-4bd9-9f6e-03a85c5f0341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 89ade154-04cd-4002-bca0-f4596ba6bc1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 32e6f9d7-03bb-4593-b9d2-19bedd8fb5a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 d79cedd6-e630-46fb-afa6-6864522066b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 b5924ec2-5718-49bd-a664-519fce4d603b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 531cb76b-696e-486a-955c-850500b86ba3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h53B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h2E0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #192 4541b6cb-aea1-400b-8bd3-e02e699562f7)");
unit.assert_eq16(16'h53B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #192 838aa40e-9531-48b3-a2bb-ec7a228aa698)");
unit.assert_eq16(16'h0ACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #192 e6c461bd-752e-4af3-96e7-09c734985562)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 cfe670e4-3eea-49e5-834c-2d063847bd42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 e54c3a52-cd8f-43ba-8543-2d7bed9d657a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 46b39933-bb37-493c-bd7c-285e5e44c0ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 342a35d9-988f-4681-ab26-fa0a91f468b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 a678e47f-bb4a-4600-84fa-8ca0a7c09e08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 e2e6bd2a-e081-4692-a683-37657c0adb14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h72B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #193 b39c72e0-b9e7-45f0-a5fd-6b759cbcc670)");
unit.assert_eq16(16'hCC8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #193 b5e92eb9-bb7f-475b-862b-cc1664f9aaa5)");
unit.assert_eq16(16'h045F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #193 9bfc4154-cd2d-4013-8f39-a6bb2fc12c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 675b6d1a-4ed3-42d7-8a18-d006a4a1d9c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 a3b3af2b-b269-4ea0-8313-2e7c1ac000b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 7482af52-6c30-47fe-a0ed-0859206bd85d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 31771fd0-b260-443d-98bf-9365a4ba9a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 3c74796a-4139-44b5-b74e-aca538d6e67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 5103bac6-1685-4424-a397-e891daf09f75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCBAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF063;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h25C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #194 10733eab-50d9-4f95-8497-5d8d7ac96d92)");
unit.assert_eq16(16'hF063, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #194 c1b5420b-b336-497e-b497-d6ef7a9257e9)");
unit.assert_eq16(16'h04E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #194 72f2b996-16d3-47da-847c-30e724f6041e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 713176f1-0595-4253-a383-8ea7ce9d9028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 5454bef2-5ee5-414a-9b27-74f793a997f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 aba23dec-dc2a-4028-a0b8-76b9c21e6600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 0568a0e5-e1ba-49cf-8cab-939b9b812513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 c69cce1d-9073-4879-b7ed-2a18c868ccc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 8342cd29-0ef2-4759-be1b-ba29b6c55fa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6EF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF934;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'hF657, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #195 670c8c53-d847-4dee-a2ff-a83f2ecc2337)");
unit.assert_eq16(16'hF934, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #195 e3b780d3-623a-412c-8789-df25c20f0ac8)");
unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #195 327777a9-5877-4d6f-a731-d6100c330422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 c8a00920-ce9b-4b4b-b459-aeff24ff9b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 5d09b76d-7cd1-499e-9ec0-61efb9cbe47c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 40cc1585-ada2-464e-ae1e-1fdebc78872b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 60fe7cc7-800a-4991-b98a-9d694686a44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 e0883799-1665-4ae6-88cc-5586a68d2ffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 ecfd860a-8417-4d79-8555-1818a6e5986a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1944;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h694D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h99CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #196 d81eb026-6e82-4640-9d06-fce66ba19767)");
unit.assert_eq16(16'h694D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #196 25a0f9db-6559-4928-b21d-73171cf6c412)");
unit.assert_eq16(16'h0CB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #196 99663e08-8ca7-4db1-9ae1-774f6eadc5e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 e8304f1e-b9fc-4cfd-9e1c-3480b10558ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 edb42743-3cf1-4671-854b-6a0b6b630faa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 bd5fc2cc-ed96-41be-8a27-cad90c7a3cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 7b942996-546e-41f1-9e37-c7fc6ddda1ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 ca55ad03-870d-4125-ac84-698323c85c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 1699a8ff-604a-4cd5-8583-dd2957b7e0a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h475C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0797;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h7B2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #197 de02152a-4f24-4432-9fe3-5e77fd15ff81)");
unit.assert_eq16(16'h0797, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #197 c3794686-40ae-40d4-be35-53859101ec01)");
unit.assert_eq16(16'h0ABE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #197 c646fcb9-7ae1-402c-bf0a-0692f74d96ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 f6a7e49f-c47c-4bfe-916b-cc8522d299dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 8a813c95-18ab-4e9a-a831-9dd72b65a72e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 617ebb89-a74d-4091-8eff-981fd453fc15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 39e777e9-7cce-42ba-af37-224825d2d439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 07a81f8f-31f1-489f-8978-cfff4e7102e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 4bd3ad62-c434-4a8d-bfa4-0fee64a6b3a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h87BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF8A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0172;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h4FFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #198 815f4c3e-04d0-4070-85b4-02442ff2093a)");
unit.assert_eq16(16'hF8A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #198 c6bf86b8-5fa8-42cd-8bb9-5b17a0e788dd)");
unit.assert_eq16(16'h0174, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #198 42172dd1-0463-49f5-a359-b2dba2ce73fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 3806e4b9-3bb2-42cf-b6a9-85bb7d4f826c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 348fddd9-2167-478d-97ff-2f208e708f57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 8474689c-8007-4cc7-94c1-0eab3650141f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 9ded011e-e154-4218-b7f3-f9502b54f606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 cf8cc984-2d5b-4ff0-8500-2b062c23a962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 91ce3e9a-33a3-4c4f-a519-dde89b73403e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h643F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF442;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h5562, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #199 9136af57-5889-4d68-b7cb-f43cb3cdfbef)");
unit.assert_eq16(16'hF442, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #199 d9f68e6e-629f-4f59-aa52-2af0ab14336e)");
unit.assert_eq16(16'h01E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #199 44162dd6-84c6-43cc-ac7e-26635ce801c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 7cfa62d7-29b4-4aa1-b308-eaaaabdc4165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 7d1b5116-0350-4fc6-8a37-ac05e916f5f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 55953136-aebb-4292-9d55-01d2d2b63b0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 c05b8e7e-6cf2-45eb-a722-17526b0e7cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 38b92bb1-a77d-4f64-8e88-c1ec295e2d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 dee9fe2a-3954-4d4a-97ba-f7d0d8903852)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA864;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'hA855, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #200 c9317f0b-d802-4d8d-a187-c77da3cebb05)");
unit.assert_eq16(16'h7F92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #200 cd94bea0-028c-4f25-bdb0-f9ef124926d8)");
unit.assert_eq16(16'h09EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #200 6d370d00-a4e7-4bfd-88fa-c80a20105eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 aaf4809a-cee6-48a0-8ea3-5399c0b7a780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 d05a5d65-307d-4cc8-b2b8-14dee63927c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 d3a1d5b4-136e-4c7e-820b-330b140b23c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 99cc1bde-32f0-4ffa-8266-68b89903331e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 4806d37b-d907-48d6-a430-a48454748fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 ac98ff3e-bbe2-44aa-ae6d-0e60d3b35b31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0172;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h4FFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #201 6ff1424c-b7f9-40de-8c72-0e5ba3bd5f66)");
unit.assert_eq16(16'h1C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #201 e5547c95-d55f-44e0-a54a-db5233b7f611)");
unit.assert_eq16(16'h0174, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #201 dd2b3d74-5a9b-4b5f-bfcf-86c7011de4bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 510c1999-2fe1-4930-9255-5c7b9ac0cbe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 72ecc510-7d3c-4f5a-b514-9af16b2333f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 2a9a48bf-8a93-4d51-a6bb-fb268e5c9924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 157fcf77-0631-4ca8-acff-5b12741f6b6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 ff465abb-d0b6-4f42-882e-fdb7dc2fde09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 71e07e9c-e79c-4079-a1d7-b94e4bf8fbcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA04E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h94DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h47B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #202 f4724539-c4f9-4923-9e5f-d5c9105470d9)");
unit.assert_eq16(16'h94DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #202 c5f4636a-3d6a-468e-83b9-1663d1e27dba)");
unit.assert_eq16(16'h0735, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #202 5085e968-2ef1-439e-9e45-98737b544623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 4a439222-1d75-4fef-8eef-22574b07a6f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 b1fd14da-814f-4b20-bf94-5375854eb06a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 8089289e-9bba-4e5b-a68c-2b3973a444d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 57ea0f42-b007-405a-a2a0-7d369bd19ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 156ed30e-45b5-41fd-96f2-a5f8427c2ff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 ff1404c9-88a2-4276-9736-918923790da4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h632C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h084B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h95AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #203 a173d7ac-9767-484b-beea-354057f79d63)");
unit.assert_eq16(16'hA5E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #203 79f55234-8ad6-4866-939c-4217a0438292)");
unit.assert_eq16(16'h084D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #203 7806ed69-d66c-4ebd-a524-485cb69bf35e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 0dffb906-419b-4ebc-a492-30fdeea60d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 98a8a97f-8710-439a-ba28-f35852c27f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 c43e4b56-d403-4333-8b14-01e239b059d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 8634a4d7-ad44-47ba-a595-ec06e66b09c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 fa0c2800-c8e1-4935-a970-a387edb8d6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 70621e66-7f97-47eb-8e52-e761bba86fd0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9572;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0213;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'hAA39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #204 7205dc9c-c9da-4a62-bfb9-7f36bfba4bc0)");
unit.assert_eq16(16'h9572, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #204 8d912a7e-94b6-4d09-b4f2-c37b01f35419)");
unit.assert_eq16(16'h0215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #204 5bda0bcb-5bfa-4485-98f1-edf84a72948c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 826d78e2-5b66-4df3-8d2f-eb2994f696d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 e597cb09-310f-47f9-8269-dbd2881ec7ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 ff37b982-4e3e-4dfa-9838-c599b02bcd45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 0c78b029-3c14-4375-bcb9-c7472e5a8149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 c4a85f15-f121-43a8-aea6-45b3c6f5061c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 01f410bd-b431-4704-bb02-81b3b98109b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h0F22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #205 67df1235-969e-44cb-a2e4-34ccc1dd0b43)");
unit.assert_eq16(16'h92A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #205 b9efebb8-1dd5-43e8-b964-003afabd593a)");
unit.assert_eq16(16'h03F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #205 619f6e98-b4c9-4f20-8576-3c8f8eed1fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 ea2d23c0-f0b0-47b3-95b5-5081bcde4d3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 7783298e-d71c-480e-a69f-f4654a959941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 3c5a148a-3576-4146-9714-0e035649fe85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 7db6cf38-f170-4c4d-a9d1-c2ea1bc5f710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 d7533173-d976-4816-96ff-4a12a0fbcf89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 5082241b-439f-443b-a08a-dd60e9a8cf3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'hF9F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #206 d0a282cf-eae7-433e-9cf9-4efbd4f5a1a8)");
unit.assert_eq16(16'hBEDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #206 d8bfbe03-327e-4913-b5fa-c23b905aea4a)");
unit.assert_eq16(16'h0E39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #206 4b4bb819-4462-49db-9627-526b440cdb0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 295382e7-4ecf-4e40-908f-e7da6b2ab83c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 35cae4c0-5e1b-4144-a8af-e8b526504139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 d702d76f-8bf7-4a5d-8896-e3fd1ef710d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 08b3791c-8442-413b-a0d3-6ecaaa6282aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 a201edce-b308-4800-b792-89951d12791e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 4f303ee0-0230-4885-803d-3478cee7d932)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4DB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h038E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'h562F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #207 49833dd3-4d77-468c-9bc4-e6d691ee36a7)");
unit.assert_eq16(16'hAE4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #207 4284f50a-c127-4349-a89c-4f02703c0a04)");
unit.assert_eq16(16'h0390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #207 1296aabd-e7cb-4965-9e35-f761653c676c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 4571acc9-d100-4640-a76e-3cd3d39e53f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 85fa0566-a7a1-482b-8c4a-d495224edfb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 a39aede9-66e2-4d7c-8533-f06123ef4d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 21bbd3fc-cf9e-44cf-bd01-9b9691de601c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 f61442af-6e1b-43f4-9adc-4090703858a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 050ab3ce-ae01-4eb3-aa81-6be8899e88b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF130;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD857;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h81E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #208 9f93d960-74ad-4fa6-9062-ddde255e2d50)");
unit.assert_eq16(16'hD857, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #208 1391c357-fea8-4a2a-b0fe-959f8ddea874)");
unit.assert_eq16(16'h081D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #208 b79ceaac-2d93-496e-b584-ce340b15eac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 b17c392d-6a86-4779-95c4-952821bf7081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 62000cf9-b1c8-4d23-a39f-04252511b251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 8d1cafed-8840-4d05-8411-31e54ecfc4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 755b8d03-ae04-4874-a51a-64a5291b8818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 50a66a1e-4e75-4c36-8f63-3717cb38b02c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 4d917911-450a-4d49-b67e-ad5668900afc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h13E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h12E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h498F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #209 10b4a54e-35e6-4d24-9209-d717e5a0604c)");
unit.assert_eq16(16'h12E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #209 cecf5ddc-95c7-43c9-9566-accc9d4e12ec)");
unit.assert_eq16(16'h05AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #209 368838b9-1ef7-4190-8a63-a4eb9cc5ba6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 1b369bca-1405-48a7-bc15-f9bea74a608d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 b142dc62-4604-44cc-9b73-ea640d100615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 2e1caf4d-f0d4-4d50-88d7-b62227380cea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 0cc5bbe8-6177-49b8-bbf4-252e0a5f1390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 090e83e6-c7fc-43e8-a5f3-8ffdd26a7a76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 3b27e73c-be0d-41fe-8b7b-2c2b212840da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h800B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0588;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h4B2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #210 eaae5231-52bd-4b6b-bab8-2464a328d0c7)");
unit.assert_eq16(16'h0588, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #210 df11ebaf-b2d5-4d33-b049-a4a04c32d510)");
unit.assert_eq16(16'h016F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #210 d25af080-c67e-4770-9c70-ec63259fe64a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 93e531ec-f5fb-4d48-99f2-f1d8a94ef981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 d010ef38-7299-45ba-8cf1-b83d8adb0dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 6cc837ad-e678-4c64-83ed-c2be84427b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 93598550-cd9f-4797-a2cc-227d3dba814e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 5902466f-6a7d-4ec7-894c-065f83056d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 3117d535-c1c7-4ba7-b358-ab9ce6035a5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h993B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'hD68B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #211 25fdd1bd-2685-4d22-afd0-375e26dafaf1)");
unit.assert_eq16(16'h993B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #211 38d9bae2-6007-40b4-a6ca-c970aa8b58e0)");
unit.assert_eq16(16'h0AEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #211 a29a6e62-7e8a-41d2-bb5e-ceda485baca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 5b8e8b6f-1ca8-4df8-990c-9532175d4acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 c3e01aa0-d540-48c9-9e59-f3de244d9051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 bf7fab6e-60f8-43ef-b135-82358e27dc59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 4e494b7b-70f2-4309-8aa4-4003ba4a7549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 6f08a22b-eb5e-4796-a12e-41b7a75fd0d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 6a51150f-2d3f-4588-9b2a-5c9704d1a8a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h757C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0518;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'hF488, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #212 30a44f99-72c7-4a4f-96d1-845ba9b65888)");
unit.assert_eq16(16'h757C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #212 dcd0f514-1c10-4950-be96-0de701e8f3ed)");
unit.assert_eq16(16'h051A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #212 b194a953-7828-4a6c-ba11-e10887576e75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 fdf098ea-a573-4c47-aff2-2af68643f251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 efd0f434-1628-419c-838f-b81ec65681df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 939c9b20-eb3f-41e1-bde9-381c30ea4a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 8fb2f99f-232e-4182-aaf6-7fd4802ca17c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 8886a8ff-6bea-4275-9344-91fe631135a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 3a775c7d-b7f1-424b-8581-32ec0d627e95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5FD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h0FDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #213 66a5ae8e-d26c-4daf-a6ba-dd4758c7acd9)");
unit.assert_eq16(16'h9E44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #213 652e0cb0-e466-4be6-af45-4bbdd35d28e8)");
unit.assert_eq16(16'h0CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #213 3c98584f-397d-44a3-83db-26c4561e35ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 47b4b51e-1de7-4aed-bd5c-d37a04fb6158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 ddf07e9d-a30d-49b3-8ef5-624c083c8e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 3d59236f-3265-4d98-9dc7-9e0bafc24fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 f74771d1-5c5f-4df8-aa10-bde92740aeed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 aa7e1c6b-4293-430f-867e-e473b5ec16f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 0615e809-cf61-431e-9b9c-763c48f38e89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h657C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'hCE34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #214 ba18ae13-b5ad-4e3c-8778-5dbdc5d354b4)");
unit.assert_eq16(16'h54F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #214 526cca8a-e0be-4793-8176-d7c524ada76a)");
unit.assert_eq16(16'h0C1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #214 8f4e737f-e2dd-48e7-a0c7-9dbb47ef664d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 e3bbeac8-0359-4b83-933a-aa2c898748db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 8d6ea321-f518-4a3e-84f2-65c33ead50b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 fbd04cd5-a041-471b-8417-5552cfbae2e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 cb968834-6601-4613-8f84-f162acb4e6c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 658c84fb-09ee-4c53-a672-f72d4963a45f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 97679f16-0c34-41a8-96d4-e9da22a7c5a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFCA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD078;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'h85A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #215 86ecc857-3869-4678-bcff-6a2b3894716d)");
unit.assert_eq16(16'hD078, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #215 f06cb45b-e836-4690-b158-bd6590185106)");
unit.assert_eq16(16'h07E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #215 a114ae25-c36d-45cc-a707-3fcb03bcced6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 50fb064c-cb94-4106-97a1-31244ebdfaa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 f1f43d9f-8ca0-4317-a62b-2699f5dfdf09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 071495b3-f047-4a7c-8d0d-22352a3de95a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 2c028894-0907-49ca-98fc-5e7e2d5d22c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 a785c2dc-64c4-4cca-bdd2-2511203e4c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 d13c03cc-5324-4612-be74-168cb7ad039b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'h3F29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #216 aab59af4-1b94-4247-aeaf-204ed6abddd3)");
unit.assert_eq16(16'hA3A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #216 ec31bd7b-b4a2-482f-bae7-e4e2b3d7c3e9)");
unit.assert_eq16(16'h0CED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #216 9592e6d7-c960-4cb6-aa6f-bd5e2e90b001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 6a6657b6-e169-48cb-ba31-0655684fdf24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 ad4c0b7c-14e5-4377-b758-9cdee4a4d68f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 28c15e4e-d4c8-41d6-bd57-d0fd0bb69c39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 37142caa-e6d3-4101-bfd9-c521583210e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 a759e202-ea4b-4b51-9f7e-2a9e2b845c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 322a212e-6000-4da8-aab6-d20b3fe78021)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h076F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD18D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0329;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'hC4E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #217 7ec10510-d78b-47d7-a681-4cc4bf421960)");
unit.assert_eq16(16'hD18D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #217 f81399c5-b73b-49ce-970f-e3c2be23c576)");
unit.assert_eq16(16'h032B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #217 fb5db034-090e-401a-bfb4-c78c8189ae77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 3767728d-312c-4a47-a2b0-aa614537778a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 6f464548-ce62-4550-bab3-5667b1d7004d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 19898fb7-f0eb-4b32-a669-38582bc138a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 a78a53e0-afaf-472c-8fd8-41bd43f382a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 4a5de8b2-44d3-42fb-a6a8-4295f6bdeac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 96a83568-07a7-4210-a830-374c303e9b76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE317;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEBF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h81E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #218 03631adf-c9c6-4551-ae2c-cda2bd639d37)");
unit.assert_eq16(16'hEBF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #218 3f5089bc-0546-4893-9a2e-f333bf462955)");
unit.assert_eq16(16'h081D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #218 bc69aa0a-f3b1-4d4c-b4fe-b3e5a879231e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 8f607e23-6007-4228-b702-0e19f2013663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 b0c33280-f6a4-4fbe-951f-0d91431647a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 2bb3c516-245d-49a9-95a7-929be95ad4f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 d90da90e-d0b9-4323-9828-f47aacd9ff29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 30a08f33-0536-4e23-8db8-3e325129c31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 668602ef-933e-4150-adab-809f666f1c8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDBEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD232;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'hA5A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #219 5353e131-76e8-41a3-9eea-1bf9e955a2e6)");
unit.assert_eq16(16'hD232, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #219 bc378308-6ad0-44d3-9700-baea4e2933d7)");
unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #219 f208fb71-f302-4c42-8a6a-2abda9f2047b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 44075e23-56ed-4a61-b53a-08ab0a10b7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 6ec9613b-d718-4ebf-9a69-038656ea0160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 4152fb06-bda3-4c50-890d-974c286fa860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 846bdb3b-a92c-4217-900a-d597b21a0812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 d9194aef-cb2e-4780-b9c1-576e3092f50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 244e5bdd-3445-46bb-8028-4e8a8fe00521)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8851;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h5381, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #220 4df2996a-769c-4d43-a354-fa99ab9b2d36)");
unit.assert_eq16(16'hBE12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #220 bdc4a1eb-54ab-452f-abc9-d0f192078533)");
unit.assert_eq16(16'h09B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #220 21b38566-d931-4dd6-ad34-e91a2230a2ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 97c72c95-0993-441b-845c-31d9d4fb86ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 355b1179-5931-406d-b665-4d0307bf5b53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 216f4e8b-98a0-4521-8e95-61862f2384eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 1168ce40-59d7-4d81-ba80-007184178a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 93aab25b-306b-488d-b1b2-06e00663f2d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 faa54894-1871-4110-991e-1dd93fe8098b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2CB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h37CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h48D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #221 716ac98b-0280-460e-b49e-56f8ede0c5c7)");
unit.assert_eq16(16'h37CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #221 501e2a97-87be-4731-9c17-791f307242d0)");
unit.assert_eq16(16'h0B6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #221 dec146c4-9a13-475a-9c63-4d5c44db9296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 dbace5d7-8248-4ac6-93c1-d2df53735470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 25de4ce2-cc45-4e2d-91bf-6784d7c93a14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 fd7b5cce-6b2b-4290-a42d-7095a78ce315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 31462cef-3f3b-4a10-b5f8-5e988cb5ff33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 a2a7952c-b070-4c08-90bc-41704a868c3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 fb6f7704-c008-477b-8c77-b6c78e694df1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h972E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'hEC3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #222 b4469731-2080-4377-9ac1-3af885d674bf)");
unit.assert_eq16(16'h972E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #222 e6cea738-19ce-4340-8809-b5f4e079b3a3)");
unit.assert_eq16(16'h03B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #222 e0c0a568-0a94-461d-ab06-f9b3f1ac9b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 4fb9d9f4-3453-4ec3-b156-fc9f79014867)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 12b96bbe-bbd7-4e9f-b25e-38aa05d99dd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 2a843529-c11a-4a2a-9ade-0667eff5741d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 6f878a43-83e4-41f7-98b3-03f3f3efa96c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 a571741e-99a5-4095-9623-4c1d7445cd73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 1916a9a5-3df6-417b-af1f-389bc6e9843d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h120E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'hC565, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #223 350f973b-0b4c-4ec9-ad40-753d67a0c5fd)");
unit.assert_eq16(16'h120E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #223 af75bc8d-1be3-4693-998c-f2c4a7c92238)");
unit.assert_eq16(16'h0C9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #223 eedad9d5-fd75-416f-9d81-dd23dae49247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 d4d2ab8b-dc78-4c17-a1da-3dfb536c2088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 8cbd6bec-28bc-4e53-9260-1b6825ee308e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 ed8b8984-84eb-4dfe-8344-380535baa153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 46f5dc37-16a0-4f27-89ba-58b14454ae0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 63409c10-5581-4e0c-ada8-34d84d6de913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 b007cd7d-36bc-432a-bd62-29e3efd0fe1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB34F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'h84D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #224 fe7efa5f-6574-4f96-90f1-7453201fe361)");
unit.assert_eq16(16'hE6F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #224 ec572d29-35ce-4b48-8677-44910147bd4b)");
unit.assert_eq16(16'h0F0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #224 e6cf7e64-6065-4ecd-8f83-794e9d044072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 18407268-377b-4c03-bf17-e96685b2f87b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 0cc4a309-9731-41c6-8cab-ac8cef049be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 ec687c03-93e4-4b93-8b28-02a254e6cf80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 e5f364da-e69c-485e-a660-bd4ac813c29f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 223a995d-a10a-47b6-aa69-15a31c95c179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 2f47c963-6f16-4614-9cc3-039d1ffb9afe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'h84D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #225 01e735a4-5900-400e-8bf7-109af4e65825)");
unit.assert_eq16(16'h7BCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #225 fa20421c-96d4-47e1-b9f2-41bf7ce4fbf8)");
unit.assert_eq16(16'h03A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #225 2b35abb3-fbdc-4a27-9d28-ee092b33dce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 fe7d4858-506b-4352-9b6b-b1ebe0e9d476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 91d75395-02d8-4475-83f7-26dd0f69b0bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 e5cc0366-c6f0-408f-ae14-dc22e5444479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 171221a8-ed01-451d-8aa3-a4c1b078d5d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 906501c9-eb8d-4c92-9aec-cc22e22d2d2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 155be59f-83ce-4559-abd7-53fac54b1844)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h485F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h3B0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #226 9557caa7-a81c-4167-984c-1ea0fc2c0d34)");
unit.assert_eq16(16'h485F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #226 797caa03-51e4-453f-83f4-1899defeaeef)");
unit.assert_eq16(16'h01CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #226 3dc1f3c6-7441-4777-999c-4b3067d3c108)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 639a798a-e392-4274-b262-95b38a091350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 1b00c985-de9f-479b-90c2-870288a6ed90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 6dc9850d-505b-419b-9dc6-a72b0d91018d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 325c4563-3b66-477e-86b7-4ecd15f92f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 ed045e23-1df6-48ba-953a-23e9de09b10c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 11ff81d7-c901-4dbb-8bab-a9dac5183811)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h644B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'hC7BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #227 961508b2-6d5d-4e30-9ced-3a13802f7f95)");
unit.assert_eq16(16'h644B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #227 db96d77c-cb6d-41b6-a2aa-8d9a175f1abb)");
unit.assert_eq16(16'h0ABA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #227 dfa0bd87-75d5-46d2-bce1-149bbe70d538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 e5e26373-8c10-40b4-9ec1-aafeaaa8fb88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 774437b7-89f0-457a-9e71-f7c4d85c29a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 cc342e41-05d3-4a9d-bc88-1bc9f1bda28a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 958f1274-2fcd-43ac-97a8-be275d6c8f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 0b461e77-e68d-4ac0-b99e-4923f92bd8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 071e8c5d-2585-45c6-b541-55690566cb94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h58F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0943;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h8CF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #228 73087ca4-0bd7-4d00-9665-81a97e4efdc5)");
unit.assert_eq16(16'h58F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #228 227d9775-3b70-4e1c-bd2f-e8c823c6166c)");
unit.assert_eq16(16'h0945, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #228 4315abd4-080e-4a0d-8dd5-8e7ec8a7288c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 24affab9-ce7a-4077-b716-ee3eacc1ad93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 070787c1-86a9-48dd-8cde-71061f84d72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 fa287ed4-3ca7-4e78-b4f2-bbd6d35c029a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 a4c778ae-0c42-4c46-867d-a2cfc700a963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 3db80201-8c19-4cc4-897b-bf62362f1209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 0f4d9c92-648d-456a-b05c-50529479503e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB498;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h512F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0058;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'h22E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #229 9b501396-b65f-4bc1-8fb4-bd1fb4e6dde8)");
unit.assert_eq16(16'h512F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #229 2e1fe19f-5899-4514-882a-49178b2ca449)");
unit.assert_eq16(16'h005A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #229 d95a741a-be21-44c5-be40-ad0c81b1fce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 f91b86dc-00f1-4522-bd17-a77a17cdfb45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 a2dcbca7-5f62-4b61-8abc-cfe6feda9d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 26e05412-8dcb-4799-bf78-7b2fd15a2d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 f7278af5-25b4-48ab-956e-e09bd9e060e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 09550c4a-c6d9-410c-a6c2-bc3acd60823a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 9ac9d563-7e66-49da-9519-74b808220e9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h95D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8EE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h47D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #230 b42af29e-a32d-4914-baf7-947aa7c4fd9b)");
unit.assert_eq16(16'h8EE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #230 a36484cf-e041-4d1d-a247-e749f7371542)");
unit.assert_eq16(16'h08BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #230 fe2a5f61-5ae4-411b-8a07-0115d569e2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 62969867-9e92-4f80-9180-5ca0f71e4d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 58c87af4-f407-4596-9c08-573d5fcfe585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 3ebac7be-452b-4205-91f1-19fe39faf09a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 5f3dff34-e4d7-4526-a9fd-9bd59367573d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 778138f1-e48b-4fe2-82a7-c2b70a6f2e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 bca4df31-dd60-4f03-b836-4eeb08f17914)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9210;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4638;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h0C82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #231 62f0ba90-4a6e-41b8-9aa3-80678ad6a37d)");
unit.assert_eq16(16'h4638, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #231 2e019504-baf3-4163-a64f-5ed059b83273)");
unit.assert_eq16(16'h0420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #231 b68e03f2-13b5-436f-bc8d-dfc0966d10dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 fdebf399-e254-4fc1-84c2-b416db1c772d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 fbba884d-4934-4655-abfb-7786771fa9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 6d737ad0-f8a7-478e-88a3-7e7594dc459e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 10b6b2a4-1a78-40ff-9313-52e8fb5c5f50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 39a50289-7975-4d32-982d-d9145136fd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 fb1abc90-1770-4642-90d2-7c7be8e088d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB44A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA604;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'hE0DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #232 dd806e60-5b15-4d23-8f97-0365b6b77fd9)");
unit.assert_eq16(16'hA604, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #232 8d779d7a-0c00-40ed-a5e9-1953f57b92f7)");
unit.assert_eq16(16'h0D69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #232 bd63f70e-ba96-43cf-916c-586f2045b695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 2d247ba3-8e01-4830-b530-1029c7080fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 3a4d9980-cf2b-448f-97e1-05a830b47eaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 f5ca4a8d-1640-4348-bd9e-046ca7885490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 3b0e05da-be2c-4237-b113-4b0fa662b2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 b1e12f80-4971-40e0-8c30-36a309953bdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 57d73ad2-dc60-4a3e-a9b1-a44179b4beb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2752;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h9E65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #233 9dc81f1c-2874-42f6-971d-c887f6acb58e)");
unit.assert_eq16(16'h4FE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #233 11cef92a-087c-4395-9f9c-0fcf52f313aa)");
unit.assert_eq16(16'h0DBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #233 9cf3a342-3140-4eb1-8eb0-c7abb62154fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 f0ef53a3-03b3-4f95-86f5-fa9c25c64fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 1854fdc2-fda8-42ea-b783-c89c2bb03cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 3464641c-77d4-40ee-ac8e-20c0a63d9406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 9e7a13df-4754-48eb-be92-55cf9ccd3c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 c2bd9479-dd09-42f3-81c4-ccd74f25aef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 ef6d43de-09b5-4007-8fc5-5891fa3c30c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD670;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'hE5BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #234 044e2e23-4276-4b3b-a3af-b6e3e4ae21c9)");
unit.assert_eq16(16'hD670, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #234 b2fb278d-19e2-4bc9-a046-06e13999b3bf)");
unit.assert_eq16(16'h0A2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #234 ea2500b0-d446-4eba-91a0-e9ecd935e85f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 fc588334-0079-4a28-8cff-f79ca5a43ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 b43b15df-d8e4-4a1e-ab16-0fa230e10026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 2c709b84-189b-43b0-9832-6f6edccef51c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 5c4ce715-21a6-4c33-99e9-3cd4da4096cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 6b003e0f-1bf1-4955-8e7c-8d3b77db13e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 34ef884b-c9b3-41ed-82e3-56894451a7ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2053;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h055A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h309C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #235 9d2e7831-8d57-4ad2-8ddc-d8f7128b4897)");
unit.assert_eq16(16'h2053, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #235 014cfcc5-6057-4349-af80-f8a47fe7e643)");
unit.assert_eq16(16'h055C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #235 4200981f-0fb9-40a2-97f3-ad9c011ab909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 fa97d807-d422-4ed6-a618-4bdd2480ba3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 9a655fc7-40fe-484f-83b1-f3636e6ada56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 13c3f082-c6cd-4614-a78b-5cc72c520c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 00057d0c-24c0-4704-b7b5-ff7eb104a657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 e7b3e810-4ff6-4f09-904b-b885c0056530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 661d6b4f-c502-44cc-af59-47931663e2bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h888F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'h4338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #236 c57a496e-d014-46fd-9460-fd77d4981abd)");
unit.assert_eq16(16'h888F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #236 c28cfd2c-2d2e-4b8e-b4c3-e2af1fe95d4b)");
unit.assert_eq16(16'h0B59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #236 631974f8-984d-4090-85bd-bef32ebfca59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 8b55d969-9a56-4bda-ae43-1ce48dfad998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 806e7d7f-758b-42b1-800d-cc4093852027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 c4fa43dc-8be6-4b08-8758-3ed206746267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 550a1831-55f8-438b-beb6-5e1d389c229b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 e6df0666-adf3-4f26-85f3-c7caac3b004f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 eae2a706-8d48-46c8-ba7a-2eb925f4816b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h9DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #237 1bbf771c-8b0e-4376-889f-fe2cb427f1b4)");
unit.assert_eq16(16'h3D45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #237 af319274-e47a-4887-a805-9dd44b373577)");
unit.assert_eq16(16'h02C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #237 83936e82-e6d8-4211-95fe-119a96823f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 73a50280-53c6-43ab-a6dd-261e1d7465b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 da30938b-7679-4329-8899-433d581979a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 516da6e1-a29b-48ee-b618-5dbef5419c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 07b99599-f5c7-4468-bed2-11892703603e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 67dd40a3-0122-4b40-a2bc-65a5c0964235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 ed825913-f7b6-43d3-986f-ca731b6fc419)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h43E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h4F60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #238 f55aee73-46e6-4705-a2bb-6f1f89191c0d)");
unit.assert_eq16(16'h43E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #238 b3e26b27-ee57-4cfe-8cab-d46c7ddadafa)");
unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #238 944e1b62-384b-4e8a-8a2c-df213fe83300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 b44c4910-a734-49d9-b316-a22b2f234a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 2423e10b-762b-4631-ae25-061d2449dab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 b794b74a-1525-4375-9df9-6378752d9e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 7d2c9be8-1a7e-45b4-8906-9080c8efde8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 7549ea8e-6c03-4ce1-9404-c478af932e02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 908c5290-aadd-438e-b2c9-c5d69aa67dc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h793A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6132;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'hEC46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #239 1db7002f-31e5-4654-8734-f265ca091bac)");
unit.assert_eq16(16'h6132, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #239 4188c9c0-a573-4a87-a20f-21d3841bd806)");
unit.assert_eq16(16'h0310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #239 30063f32-f407-42b7-903c-02ec3fd6cbd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 47b82e50-0237-48d7-8adb-35b3930fe46c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 2b4743e4-03f9-4935-b12a-2447ffa6f282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 b95661a4-4ee2-4d81-ad6a-ff2a6cae1c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 02e75fe6-d32a-4321-b31d-b60848f500aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 ce7ec4a7-7ccb-4481-b5d9-67a5bee3c93d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 f71e4391-174d-4c5f-bea2-39477d5b1c35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6190;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC9E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'hC2B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #240 95c2a374-35e0-44d3-8fb3-1e1df9859e46)");
unit.assert_eq16(16'hC9E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #240 91f98664-26f2-4f51-9398-ee88ddece333)");
unit.assert_eq16(16'h04D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #240 e7252e68-fe37-4186-9a2c-3d31169afe13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 b47173f3-b71e-4572-8f20-4a74e638599b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 8db5d163-98bd-4f1f-b0ae-71a986b63d89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 fcbefe24-6dd0-499a-b733-c83e735eaaba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 d3a5161e-4789-49c2-89b5-9520794f47d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 d6025292-0430-4640-a887-7b4ef0756dba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 76cf1f76-5fad-4524-8f6e-13c2927efe03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC7F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'hB940, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #241 d617bc3d-5831-4a89-ad5f-c791038d6eaa)");
unit.assert_eq16(16'hC7F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #241 fa70b08c-9468-493d-a7e1-01011199b6ce)");
unit.assert_eq16(16'h0F32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #241 a4e8e7d3-7e02-4d1b-9e57-9c285842ec32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 d00bc869-ee8d-4d66-93c0-fbc958c10c59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 7c656125-8f1a-48b5-a05d-f4b0a53b6284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 156504d6-85ae-4d1e-b2f8-58f2f1c4a4fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 dd725615-6760-4904-8d70-2e5f2a3e7a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 15ed7164-58e0-4561-b145-f7669d88afe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 e38b96c4-8abd-479a-9748-5f5c86e49f47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBDF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h52AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #242 670d0ebb-35df-4ef7-87dc-a7033445fb7f)");
unit.assert_eq16(16'hBDF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #242 5a1eb622-5d25-4c57-8aed-f6617b344d5a)");
unit.assert_eq16(16'h06DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #242 79bc87a5-9305-4640-ae54-02db538b3c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 32727cf1-c864-44e1-86d3-4b0a21d8cd5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 dfee83cb-01fe-4d95-b3f2-334419d666da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 59d44ce5-4245-47cf-a584-29578654eaef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 5ba93a70-7f47-4ffd-b6b9-fbcbb6c42539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 e88a1761-30fe-4ad3-82f4-1e13fa8fd452)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 eace7ad0-c3b7-4091-addc-71076214f4b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h48E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0665;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h6FDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #243 2c0a9d4a-0c1b-48b5-b33b-fd0f2773ebe8)");
unit.assert_eq16(16'h5F68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #243 811f50c8-3806-4d4a-a00c-c1451058913d)");
unit.assert_eq16(16'h0667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #243 cb3a78a2-7576-48e7-be25-2d02e0dc22aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 695321ef-bc74-4f61-a5cf-a84d138b8601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 4ce08172-61fd-4737-bbf3-5bfe8dee21eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 515d17c9-af70-4d0e-b674-226399b62274)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 d2f0e1ce-e80e-4fda-ac27-311ee3909a21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 15acc187-04ca-45ba-b737-658092b5e73a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 e1435b2c-2ff9-4261-9abc-6f20109ea6c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF431;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h7D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #244 b634484e-16e3-4b23-ab7f-a8cd5b599bd5)");
unit.assert_eq16(16'hAB4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #244 7beacab7-1e45-45f7-9c62-83c01cee9665)");
unit.assert_eq16(16'h0BEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #244 d004a7a0-ed98-4736-b396-e997ba3d6faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 986691d6-263b-49b6-b240-d05ec3959ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 73d42620-8a64-42f7-92ef-e6e9e8e7108b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 33ae0198-2828-4a75-a20e-d351e5178445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 46f5fce3-daa4-48eb-be47-8b1e4bd00140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 a30236e2-c659-4c9e-a09f-a3c79b0be206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 721972b9-0638-428c-89ef-4d01588255df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF883;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6012;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'hE546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #245 5bd4ab39-0134-4be5-a022-330e89beca87)");
unit.assert_eq16(16'h6012, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #245 c604892e-5eb8-4fb0-86ad-ce99d8cdb5d3)");
unit.assert_eq16(16'h0140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #245 9a67419f-b615-4239-983b-6240d82ec652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 410fee1e-1479-4527-839d-5e0eecf7df17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 7bf09128-b931-4242-ba2c-6c0e23b2db58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 5f6a9fbb-d140-4b4e-9d25-9edcb909f708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 d7798b30-b793-432f-9503-4b6bdac0e4b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 2fe6b1a8-cc3f-41a5-9199-a2d7305ad91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 db4247b6-19ad-4a89-8455-3e01d3648532)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h77EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDB8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h831E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #246 a0474d4f-5bea-4015-b945-e37fd621ee34)");
unit.assert_eq16(16'hDB8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #246 39f76d8a-d161-41e4-b033-4ad8175da0dd)");
unit.assert_eq16(16'h0BF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #246 290c27e5-337e-448d-8a9c-233e8d51acd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 9601a3d5-489e-4a10-a97e-8aefadf448c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 f31e9dff-597c-4803-8214-d0032e5bc89c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 34bd0de4-3fd4-4b25-8c23-f11768525a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 0257f529-a2a6-4ccb-8b40-4d893fd1dfc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 344b9393-6a87-41b2-9ab0-ec2f1c62b791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 50e87768-efb5-4d46-8f1d-f6d6fbb20657)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h5022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #247 9c74bd51-9376-4b13-a5ba-3b6a1f29c1c7)");
unit.assert_eq16(16'h6F26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #247 568fdc00-4270-4dc7-91e2-7f16f90c0156)");
unit.assert_eq16(16'h0B48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #247 e03270f1-3020-4cdd-8843-501bf2d68bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 3e03a776-1bdb-4fb6-adb0-592cf97062ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 79d2ae45-4489-470f-b1c7-ab91c79d3ace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 6b36e28f-d8b2-450f-b671-24722a5148c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 c3307b53-4ecc-49cf-bf90-7ebf372ececa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 23d104fa-43e2-48ed-8a1f-ee499236becd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 5e2c59c1-cc6e-4199-9200-4364df76fbbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5365;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE65D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'hC648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #248 e7c0857f-f273-40a8-aa27-f686b684790a)");
unit.assert_eq16(16'hE65D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #248 ce20475f-a82d-4078-af39-8286041a7258)");
unit.assert_eq16(16'h0BC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #248 0534ccab-0e8b-4a4e-ae6b-1759f035ece0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 2f8bde43-6c0e-4ef2-ae8b-0b14ee8c6219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 c743b985-6b80-4232-a3e1-484c7a0cff65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 0ee574ad-ffaa-49d7-854d-1505b8626cfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 611f8b75-4221-415d-b777-b7a35fb67d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 3ca9208d-897b-4326-b84c-cfe63a617c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 bcd69b36-daa5-4c32-9360-a7173a47ca0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB45E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h5467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #249 cdc22911-c993-4121-8742-8e98ad2751aa)");
unit.assert_eq16(16'hB45E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #249 e689efcd-eb86-480a-992e-af9aa9334111)");
unit.assert_eq16(16'h0AAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #249 7bb538bf-4465-45cb-a90d-4117f104b64f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 5731d54c-b2e6-4baa-9bb8-ce56955046b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 a5da1536-28ff-4d43-842f-20dae27896af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 a0032857-767f-4d45-a94e-4d0d85ec30de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 0aa917fc-dca4-40da-b6e7-53a7f21de8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 3e495108-3eed-47ba-b1f0-bc9bc3dfb500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 3df5d424-ae07-44c7-aea9-5c9b286abc83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4775;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC03B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0619;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h727D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #250 59bf63f4-5ccf-4699-8bd0-acb790030b5b)");
unit.assert_eq16(16'hC03B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #250 ac8fa3ae-415e-4a60-9634-5a3899934942)");
unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #250 4247677a-e589-4ebc-8e39-c31f81ed5109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 953f90e2-aec6-407a-9da7-b382e0bbf31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 66aa4772-d52d-4483-9e60-5e3d468c33c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 484d0897-a152-4d34-bb59-39e307039665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 afbf5689-cf13-4802-9dba-3b25756d4402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 b77664ae-cc35-443c-95c2-0cb042e603d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 2989b187-7b98-467a-a53e-0f70447af369)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6209;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCFED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'hCF91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #251 18479937-c8bc-4b8b-b4b0-ae75bbe1cc1d)");
unit.assert_eq16(16'hCFED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #251 5459c1ec-4b4e-4f6c-8115-c196d8dae19e)");
unit.assert_eq16(16'h02FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #251 d2c1596f-c220-43cc-b85a-9a9853afe0db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 32ba1337-5a93-4631-b200-0bc645233e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 73fa29d0-1d4a-4838-8a4f-5e657b70dbe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 1fb12d89-17dd-49f0-8c5b-5554bfc7a101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 8a192cde-99d9-40be-aa8f-cf035eafa789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 47fe524e-fdcf-4baa-8d64-9a192025e336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 68a6262d-ada4-4f5c-9d93-f8f27369c988)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9381;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h0C1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #252 3cbb7fb6-ded3-4ce3-909d-2f70b9933ce4)");
unit.assert_eq16(16'h7A8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #252 b74b8317-30fc-4d3f-9e59-5866f2b400b8)");
unit.assert_eq16(16'h0E3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #252 f2f3c99f-9da1-46c3-9822-8742d6c6090e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 fc219148-a792-48c9-b53d-c48e9b842f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 5ba89d54-c86a-4395-9073-817530fa7589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 ff7b721f-4945-4d42-83cc-fba5a9fdb275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 72dea306-4485-4f77-a7ec-41b4ac7526a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 1639ee94-ca45-4e56-a268-204898ba8b31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 0f6a2048-20aa-473d-899f-95c2ef933ddd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC9C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'hD309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #253 44688d33-472d-411d-bd22-9348b45cb8b9)");
unit.assert_eq16(16'hC9C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #253 67f239d2-f957-4680-9d69-7ff737ae5b47)");
unit.assert_eq16(16'h0DE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #253 ae03056d-4e0f-4bb5-a656-2706f12fc305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 9cf958c9-64ce-4fd1-8f31-ce0666e78397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 66e7558e-744f-411d-9a88-7b4cad32abbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 3806495c-df4f-4994-aaa9-be6f71e48018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 bfe2449c-e313-484a-bb2e-f64462cf894f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 fa04918c-9e54-4d98-8822-886037c7d7f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 bb7724d4-229a-4920-bc82-36c048d122c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD810;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h811E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h4D9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #254 4b71fe68-2590-4cb6-af2f-d00b683605f2)");
unit.assert_eq16(16'h811E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #254 51939a6a-4056-4847-9536-b84e7752073a)");
unit.assert_eq16(16'h0F34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #254 078a3432-d3e0-49d4-af47-4212a8255708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 90fc9c21-a584-439b-8756-fafabfbf2826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 58862652-3104-4e6b-a445-d354786bb02e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 5d809926-d061-4e7e-9612-e2198da336de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 5c3f2df4-dbe4-493f-aba3-d20210375991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 c2e76603-c786-4322-b6e2-68c3fb42a996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 ccc85bad-7e0b-4e8a-afef-ec4ee596707d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD40E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h44F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #255 242569f9-cda0-41d8-88ae-a2aa6e1301b7)");
unit.assert_eq16(16'hFC60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #255 af845fb6-2af8-46bb-b52a-e40af366a8a4)");
unit.assert_eq16(16'h0FE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #255 b1def9e8-1deb-4d5c-aaad-8a5a570b5e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 490ffa08-1237-4d6f-8f47-ceec32cfab68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 779a82fe-e54a-42a2-9fe8-dd4a79aeb69e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 53258a2c-569f-4357-813d-94f4767a5c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 ab679aef-dfbf-4a92-8b4a-4a3c3a725b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 98dcb602-ca84-4639-8993-80ba8c86356d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 c5257a24-ccab-4f51-a9ad-a0588487f37b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h937A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE726;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0803;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h0FD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #256 99d4673f-170c-418d-84bc-11cafb86cc50)");
unit.assert_eq16(16'hE726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #256 8176e1a3-44c5-4ef5-9d2a-90ef67c0efde)");
unit.assert_eq16(16'h0805, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #256 9b3708e0-3ca0-4915-bc6f-c81e0c39e3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 509cd83b-3f37-4119-8409-8dfb21cc6053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 8965aa97-dd62-4579-a803-1f024f6ba19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 c43fb6c5-18ac-415e-9a24-ad4dbdc55821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 b1b098a4-9046-497c-b26d-53acc1e4d300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 861c6100-dd7c-4b89-a043-d4bba26bb6aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 dd3ca763-52e9-4ff1-bc12-08d1daeab416)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8138;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h4A87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #257 74bed006-cbbb-4d44-9aa0-5ba24c6afd46)");
unit.assert_eq16(16'h8138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #257 62de99be-7cc9-4bb0-ade9-b65f34faedbe)");
unit.assert_eq16(16'h06A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #257 5f6aa392-598d-4d73-adef-5fabc4e335fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 68028fff-bd3e-4170-8327-f3ffc6aad130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 caddc009-50fd-4d42-9aac-860bdfec117d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 f676c085-2834-4e4e-8155-8c0501c6c839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 b04b2ad8-fb4d-4ef0-9aa6-011599a79687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 8e63bb3d-a285-4ef8-b256-cfbbeccf9d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 76955a6d-5857-4a0d-a47d-ecc57bf71853)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA238;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h9E38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #258 6f02b64d-129c-48a9-850a-5491e05e084f)");
unit.assert_eq16(16'hA238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #258 6cccf1b1-c0b6-48f1-b225-d5eccfad79df)");
unit.assert_eq16(16'h0E41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #258 e408440d-e05f-4292-a216-db97f798f6ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 8d04a235-4bcb-4000-8336-3f4d73af709e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 14bd71d4-8d32-4fa0-9598-36cbc6e09d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 f3fda4ce-086a-4180-8f7b-9f42ec1e6833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 fba5710e-b1a9-404a-9b5f-85d8fb63c89e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 aa8c4c76-e914-422a-aa2e-bd5f6aafd5eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 d13d4e22-f365-4abf-bb60-231a5ef00846)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h82EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8F13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'hCF58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #259 cd90e605-0549-4b77-82d5-3d1548172345)");
unit.assert_eq16(16'h8F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #259 3db5cdda-b678-42c0-94a0-22611d63c490)");
unit.assert_eq16(16'h0CC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #259 5ee8f6d4-8e77-494f-8f1a-cbd2985169b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 a667f1e7-f124-4d1f-bb93-0a37b048af73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 fa628294-b4d2-4180-abac-578cb524da56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 2e3f90cd-5bfb-41fc-b4ef-58d94a5f27aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 f8978c17-e21d-4229-83bc-391ca442ae4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 4b73e687-dbcc-405e-8fab-0b119c0dfd6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 7dc289d5-2e9d-4fd5-81f9-052300601fe4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2373;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'hACE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #260 55638f99-1678-4139-8085-0d285926d83d)");
unit.assert_eq16(16'hE7E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #260 c8a5d8d0-545e-4dcc-a754-6342b7b7637f)");
unit.assert_eq16(16'h04B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #260 053978cf-bcea-477f-8bae-2887132cc164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 8b3a5e8c-16ce-4ed9-971d-dbc7efbcd674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 8c7bed38-d793-4ca2-a40f-3b4b9ee20ae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 5efa32d7-2e77-4105-a307-56a427a9f212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 baa0d0b0-b6c4-498e-9240-3daee3d71573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 fe84f82f-7d86-40e1-8ced-f6924670a537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 feca8ca9-9e64-4835-997f-354020918005)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h0AD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #261 f54f93d9-54df-4b6d-a495-ce58f17a1f65)");
unit.assert_eq16(16'h2BE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #261 a9d9ee7b-f470-440a-abe1-86b295f2bb23)");
unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #261 25b61881-63c5-4b76-bbcc-8fb757fc197d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 a5a52d00-b809-4820-a36a-f3f8805d621d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 8df19762-3910-4fca-865e-6436cc4f21fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 10fd7cb6-06b4-401e-98fa-312f27157f16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 099994bf-9848-4be1-9c96-7ed1a60b47a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 d4f1841d-febf-401c-9860-8251ef8da8fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 a287dde4-b7d4-4869-b34b-1ea7fa6f7924)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0788;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h5FE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #262 57003520-ac8b-4dd5-bf4b-d1d06b383043)");
unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #262 af80eb21-326a-4d84-9099-58d41b246f56)");
unit.assert_eq16(16'h078A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #262 1dfbd18b-3740-41c1-a98a-d29926b4c35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 f8decd18-2001-4c10-b51b-0ab6d4215673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 35b98d26-c566-4bc5-acd5-13b61cb110b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 004b9c09-ee76-4967-9dff-28fe5b5f45f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 d6f7fe2e-c116-41f2-b8b1-9369ffe3b41a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 08eaa080-2f43-4b0e-a154-39bd67d2dcef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 564181bc-67b6-41e7-b3b7-bbf974c63000)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6152;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9757;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0968;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'hF886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #263 89c0b13c-883b-4c93-9faf-07dfdfa14fbb)");
unit.assert_eq16(16'h9757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #263 a254b63e-8daf-44a9-bf84-06a03ac123c2)");
unit.assert_eq16(16'h096A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #263 9cfa3ee6-c1f9-4f74-9cc8-c5fc07f4dad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 fb45b9b0-2099-4d56-99cf-15c4d3217d5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 8bb0d57a-1b35-404d-b530-cc86d065f8e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 bc32983a-bfed-4841-92c2-c9ab310f431a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 2b42ce97-86e1-4392-80f1-ca37b744827c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 d736e8e5-b64f-4d3e-8435-e3eb803c50f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 e944243f-526b-40d1-b2bf-f8a56fa92bcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h385A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0257;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h12DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #264 d787f960-d0e4-412e-ad63-f2476dc338dd)");
unit.assert_eq16(16'h385A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #264 d5ded4fa-6456-4bf9-8fb7-b97cf2dcf476)");
unit.assert_eq16(16'h0259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #264 3d6b3e00-502e-4a0e-96fa-d081fef970ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 ed9ad9f0-57a0-4880-981e-cead3ce498d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 0f274dac-5317-4502-85e6-df9ddd4c3f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 191866d5-e4fe-49e4-b5a0-66a4edbb30d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 cd20e28e-e16a-4cd6-a22e-ce4981a9ee47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 47da1cb9-0d2d-48cb-8704-5433584f4274)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 5c17ad7b-9ebf-4bf3-83f6-1fee220f7143)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD9D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA334;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0547;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'hD5B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #265 b951aef6-2648-492a-962c-e1033e60ccc4)");
unit.assert_eq16(16'hA334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #265 80ed9f2c-9e83-4c65-99b9-e74a98e2f1f2)");
unit.assert_eq16(16'h0549, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #265 ca3b0500-1766-4e33-8325-63f319d22b1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 b09ddb0b-79c8-40f2-a599-1f12c97ad24a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 e0bb0e2e-0ab6-406d-bf80-7394c1df9884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 87e652c1-15cc-480e-8e5b-d45f711b1d19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 5e928e24-8985-4ee0-bfe4-ed5dd6b43493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 62bd8861-a3f5-49a7-99d1-3bcabdc0601c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 c23c2662-7610-4b86-ab1f-3bda755f57a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB187;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF62E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h91F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #266 672a75b5-14e6-49d4-a0b6-bfb790d78519)");
unit.assert_eq16(16'hF62E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #266 f6ed78e5-d263-4e91-8ea9-67d2e2be214e)");
unit.assert_eq16(16'h0E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #266 99b08093-0d87-46ed-9d5d-e0a84c88021a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 31d8391c-3bee-4eaf-911b-991e7ca9d264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 8e9a5654-09ac-43b1-aea4-c7c97ece83f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 d6ece9d3-6ab0-4d10-8225-c527de832172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 c7fb5e8a-93b1-4af5-96d4-018eb494cebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 021b2ca2-3d2e-488a-b9f8-9f6a3b896a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 db714270-5970-4383-b77e-16f7134b4ec9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h414B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE15E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'hDB56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #267 2782739f-822d-45f6-83a1-b59c5a2c107b)");
unit.assert_eq16(16'hE15E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #267 cacfecfd-a540-4f11-bd22-bda093419337)");
unit.assert_eq16(16'h03FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #267 3e7d1535-132a-47db-a41b-53a656893c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 c0cecd13-faef-41c4-8267-5b55e3101369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 366db02a-f564-43fe-ab55-6ccf7916c240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 0268cc04-051e-45d5-b636-dd6cd96adfa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 56d25a1a-765e-4627-8bef-3bc3071448a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 e5f9bf29-ab38-4246-b99e-21e457d42c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 fa95e250-ce84-4224-a0cf-b19fce2851a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6871;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h205C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h1D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #268 2f83afe5-957f-4ce6-9fcb-159464e15290)");
unit.assert_eq16(16'h205C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #268 b4609344-ee07-4b39-9f4f-45fe3ca18b07)");
unit.assert_eq16(16'h03DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #268 1850b0fb-5c85-433e-a706-436283bbc84b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 43a32539-a5a3-48c2-b599-98946b138c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 f5eb769d-ef0e-40dc-aa38-10d3043d7fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 fabd2f3e-456d-426e-aed5-f6025e71f425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 27376919-664c-4fdf-9dd0-52c37612acb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 5e523649-bb41-4706-be55-0c4bd77ee677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 61c088b1-0811-4b2a-af3f-e0d4526053dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8249;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h005B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'h34F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #269 5db67aed-88da-4a71-b168-9ce0713fb673)");
unit.assert_eq16(16'h8249, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #269 a6889f79-942c-48de-8378-d9117743541e)");
unit.assert_eq16(16'h005D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #269 8e940a3c-971b-4aad-8c27-6ed5eb756e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 9e0e9f98-c1e2-4341-9c43-6c0c0f835d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 ca359213-c6a5-431a-9beb-a0703f25ba51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 d512bc0e-b257-4ac3-be78-4d5506b731c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 237ba38e-52ad-435a-8ac2-efaad6cd604e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 ecb1f0c7-b5ce-42ba-b3f1-4c384ae9ca9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 0779b820-0cfd-42b3-ab9b-83be2cd0bccc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF189;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h678F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h04EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #270 f4917ebc-c1df-446c-a061-116d781543bc)");
unit.assert_eq16(16'h678F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #270 fe385bac-5778-4370-832e-7f45525066ec)");
unit.assert_eq16(16'h0801, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #270 1dc0613e-3bde-444f-9d57-e3e32f607c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 21f40244-79a3-49ef-9ca4-fc9a9950b3b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 c8754760-45ae-4bf7-b703-bf901996762e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 3dd45165-ed01-42de-ad41-45451ce3a742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 43fecb2e-9766-4e53-a3f3-04df20f4e1e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 d87aa4e4-f363-41a2-a5e3-cc5444781870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 d0535320-a7d1-4470-925e-54ba1ecc46d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h8439, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #271 6d935c94-d2f3-4e86-ac83-d4b50fa1f611)");
unit.assert_eq16(16'h80F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #271 536cbbd4-3495-42fa-9f68-8b7c1bda2d09)");
unit.assert_eq16(16'h08D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #271 9048ddf8-ee65-4c32-8c92-5b04395895a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 9a3e398a-113b-4a0c-ad66-8c0a963e57ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 7e39c9c8-63db-4d38-8772-a2338dad2ea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 3490d399-22a4-4832-849f-eef1a0b6eb7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 bda51873-db82-40bd-8969-56432a372c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 d6ee2458-65c7-44de-b7a7-869547eac846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 80797cc1-7542-49b9-a5f1-1928a9733bce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'hB71F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #272 25c50a99-73a0-4228-97d3-7e663f20e0fd)");
unit.assert_eq16(16'h5D35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #272 25d93e12-259d-4138-8036-862e1d78086a)");
unit.assert_eq16(16'h0613, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #272 ccd1c768-f66d-45f1-aa24-a6d6a93e04ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 6192fab0-86e5-41be-9604-a34b9761ff7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 6e546207-7f25-4c75-b4dc-73d61cd24348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 8c0e61b2-415b-4a33-9534-179519c487d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 748655b2-1aeb-44eb-b314-4c7f47a1e925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 5bf65182-6753-4453-862e-cbfa02a0be5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 dc8201f3-72c8-4777-bd51-6ee412d05c8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF2A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h53E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'hF5A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #273 f41e4b7e-6cf7-469c-9711-c71a7b6033b9)");
unit.assert_eq16(16'h53E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #273 1eeba92f-089c-4082-a6d4-e67f7e5c1959)");
unit.assert_eq16(16'h0FA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #273 7f281995-9cc0-46c4-a07c-4318a017722d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 2f05d261-d468-4511-87f5-a60c369ee666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 7119ab56-65f3-4154-ab17-1be19d1b5ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 4536055b-87f4-41c8-b50c-d7eba52f96c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 28ff7c14-f708-40b7-982b-371e67cad262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 9199aaf0-4742-4da1-bc5c-d8b6ae0373c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 9a031d53-239e-4258-958b-2f234eee8aa0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA8BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h782B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0430;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h281A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #274 c38e529b-8cfe-4348-84e8-96661676ab18)");
unit.assert_eq16(16'h782B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #274 a262fcf5-fcab-486b-b433-affaf96bb593)");
unit.assert_eq16(16'h0432, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #274 da5aa409-0b35-451d-b55c-f8c6acf06fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 30d5fa59-d58f-40b9-a324-98692234a051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 314a9a29-25ff-43c5-9407-ae913c616dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 bec3a4ac-03ab-4dcd-b8cb-515ea541875b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 1f3eb60a-c922-48df-873a-d77c937d482e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 9eaff773-16b7-4dab-b6af-829da344309c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 3e286048-272b-485b-8dbd-a3710077f9c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE44B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0181;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'hED55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #275 9c626400-6894-47ff-a7e4-df2cbab713ad)");
unit.assert_eq16(16'h6AC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #275 061318ab-8a12-4fa5-a851-502df543896c)");
unit.assert_eq16(16'h0183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #275 fe6722e6-8195-45c6-8e1d-f9375f0a071a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 7eec776e-07c1-4c60-9460-d575ebca3bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 013236c1-7606-4ab3-b6b8-7cf2f8c0163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 2446bfe2-18b8-4bee-a389-67019f2cebed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 45ac8453-0ef0-4e4d-a91d-83e13561469e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 9ae73b35-d077-4e35-9dcc-5bf16043f88f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 ca4d256e-a00a-4636-9b02-8238237e1189)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3AE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h500B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #276 eedf341f-7d71-4a5b-a399-6ab0c2291641)");
unit.assert_eq16(16'h3AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #276 c7adecf4-b0a5-4797-a5e4-77750e24b647)");
unit.assert_eq16(16'h03CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #276 c0e65d08-cc5f-4b5b-90f8-eb0c40025775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 925b3bdc-2a9b-421a-8e8f-c012c1b0c2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 74ac2582-b876-4e1f-83a6-7342b86e4ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 3e11bcc8-7bc6-4ab2-82dd-ae262eef4cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 55e94d1a-c8a3-4278-9d8e-b8c79fe286ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 ea6cec2f-dc32-428a-96c1-71b0392ad778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 635da162-6ccc-43d7-8312-feb952291533)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h58EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h65C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #277 ff3aa202-133d-45e0-8d7d-7d63e90f9277)");
unit.assert_eq16(16'h7C07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #277 17a27081-1706-4db6-991e-5897e6248da4)");
unit.assert_eq16(16'h0F76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #277 c1ca7170-05a4-4607-ba75-b993fc13abbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 f05f5196-edad-49ed-9ae8-b266550e9437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 679b2311-df80-490c-95d8-66f1d2c40b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 c99c9f19-9559-4d49-94cf-577546b5cc22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 644dd589-abc0-4438-b32e-3710ab3cc910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 04f3c707-89a0-4fa2-8e8e-e1149c54898f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 6e0330d5-635f-418c-9dfe-55bb5cf9e30d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0442;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h97C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #278 cdaf8919-6149-492e-99bc-11e9c4c30ee7)");
unit.assert_eq16(16'hDE0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #278 816be7ab-b08c-4534-9b07-7ccabd19aea3)");
unit.assert_eq16(16'h0444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #278 1898f531-e2aa-4492-b082-000262a5a0d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 e9d63ea4-9b72-4dfc-b73d-bc5a6225cf04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 900a452c-816a-41a4-9c6b-e46be7ed794c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 ca789f4e-e077-49f0-9f54-525629908e3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 5f3b0aa8-0af2-47c5-b3b8-33b217332ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 e9eb3d1a-bc4c-456d-816d-49c226e8ddc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 82eeb5bd-b8a3-4d29-9841-47526a7fc381)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h907A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0231;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h5E3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #279 5782386d-da05-4b31-8bb6-c3d6e5b39e7c)");
unit.assert_eq16(16'hAC49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #279 3ea22d3c-ebe0-4afb-8a56-b3f4409ac027)");
unit.assert_eq16(16'h0233, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #279 f3e4c00a-b36b-45aa-8d3f-18c83bbd4d24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 b4fb6521-0b8c-42a1-9062-a926f285aec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 025b12cf-956e-4117-8a4b-afd6c769585f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 97b93c8b-3166-402a-947c-2b5611cde64d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 91ecee77-56e9-4c95-a51b-95b8132bc598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 fb98e2d0-c3a6-4dbc-b932-b5a8a95214f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 3b0881c7-98d1-4866-adcb-bf69bea2cc1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h151E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE43F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'h9AD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #280 6f415dd9-feca-4069-9f83-9a852f59148d)");
unit.assert_eq16(16'hE43F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #280 007d05e8-a8d3-4b7c-bc93-928e3ce25b27)");
unit.assert_eq16(16'h05E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #280 026d3337-0f11-4bef-88d0-1a8862e47685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 ff720077-9082-4260-a23a-d581cb14163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 8b9a64d9-3012-4d10-b046-8de699d5f9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 57047939-b835-47ce-a40d-d686e587f934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 cb217c29-1439-4330-8f0a-2153fe9d2775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 db1ab99c-708c-4b84-bf73-f857475cf3b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 161914fc-527b-44eb-918d-62c132793b81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'hAC26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #281 b68a35d3-a5e6-4af4-b038-d07d869df8e4)");
unit.assert_eq16(16'hF9B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #281 c6ff41fd-374e-4fb1-8723-db40b10176ad)");
unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #281 f0e3511b-5214-4e00-9f9d-4c203ca5ea95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 ce0bb2c8-eca6-48d9-9f49-324cdb62bd48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 1a696509-b81f-425f-9ee0-be9610caf993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 472be99e-6008-44c0-b3ad-a6752b0d3c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 b83791b1-b748-4a17-a83c-89aee3fd738b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 cd6c6cb4-93ee-47a0-b063-9ed2caacdd2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 0ac5b814-354b-405f-8a84-be2718866326)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE039;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0286;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'hDC55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #282 ba1aad74-439d-4448-96bc-80e8064fe9d9)");
unit.assert_eq16(16'hE039, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #282 edf304f1-6de5-4491-9e7d-78f7c6362020)");
unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #282 e656d93d-fd5c-4ea5-814a-1322ee258566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 dc71136e-7a93-4599-8a2f-acb425e67547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 f7cff597-6ca8-466f-8c7f-92a76746ca38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 54c1db4d-c9ca-42df-a37f-114fd99e288f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 f58e2c8c-98c1-40b6-99d9-684a756e9a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 1cd52e5f-e4e3-4170-a17a-d03ba43cced5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 10846175-46ac-4f5f-88f4-be31d57f791b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9509;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h575A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #283 5fcd3b52-7254-4c43-9cfb-167c04070560)");
unit.assert_eq16(16'h9509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #283 1a05f952-5983-4435-944c-5293fa01fc20)");
unit.assert_eq16(16'h07CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #283 26d64c7a-f274-4631-887c-461dfb685d82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 72683c1e-46cd-469e-b260-945b51ecb938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 e6e597a5-6dd4-4cc1-a81d-ac933f712dde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 7f483c2b-d45d-4303-8a09-b38567eacebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 b89c0008-ab8e-4b12-92ed-02f7c938eb94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 c56584c0-6ef6-4199-8b31-4532c6d92e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 6c2670c1-a319-4352-ab0f-63c0c8d37a70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h234E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h31AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h009B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h3ECB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #284 b074bb82-3e6d-4bbc-ae7e-c49788af9dd5)");
unit.assert_eq16(16'h31AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #284 6e03a93e-d3f1-4b7b-8162-5d9d746b2d55)");
unit.assert_eq16(16'h009D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #284 9a90f674-05b1-40d8-96d6-5d36946803f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 4a56203c-ba42-484c-9141-e0770276cd10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 5b00f8a1-13a0-4801-b371-23538b2b21d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 076190c2-e60a-4e49-9fa0-3d311356dee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 cfd0e9a6-a405-477e-af16-c30ef2156a76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 3846daca-faaf-4f47-b6d3-b63bea12b64d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 d1f3b497-452f-45c9-aad8-5a1e4fda6fa9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h613E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'hDD5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #285 22fcc447-927e-41fa-a640-4cb56dd268b0)");
unit.assert_eq16(16'h613E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #285 1a9dbed5-c92d-4ef2-b258-191ec831e0b2)");
unit.assert_eq16(16'h0CC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #285 b9eda668-790f-4d54-b1ae-601d6ba6e862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 cc593160-ab50-4edc-95d8-ef8c7896abf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 f889b140-fceb-4351-adaf-3e21fc22ddbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 83ab9bfd-d295-490a-b114-d5c2849f9dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 3096263d-ae05-4d5d-9401-6679663fc425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 da4a8b73-948f-4b97-84ce-db992c403dd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 de54f4d6-c623-445d-a497-96525f4c9d90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8423;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6555;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'hC6DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #286 adae76e3-aaf4-4109-8137-0a23316ec388)");
unit.assert_eq16(16'h6555, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #286 60f45c9a-2579-4503-bf4f-9006b8fd5ac4)");
unit.assert_eq16(16'h0E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #286 d2d3c385-0c90-46e6-b49e-04bb663772c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 0476eb52-d47f-4b4a-8059-e66e1ee3717a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 4b00cc18-adbd-46f9-84b4-7421f486b466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 d3d5be1b-0255-4518-b0b9-0cc235e18a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 441ae14b-6dca-49b7-8386-e434e264f181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 e518d7b9-b604-41f6-9b09-78fe5b4ab49d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 31dc0c38-cef7-4037-a592-30201a7878cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9FFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h3636, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #287 acb71782-1efb-4e3a-94eb-c7737a02d362)");
unit.assert_eq16(16'h1B75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #287 007ff738-c2fb-4fd2-8539-c99714d9a479)");
unit.assert_eq16(16'h0FFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #287 834555fc-2721-46df-a335-38532bd4c9d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 8525725d-d093-4492-a106-01d9c42d4176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 988083c4-1bde-431d-9993-22089be2ea98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 f4654a00-b542-45d8-8b91-004efeb942b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 0690c5c1-5f98-42ed-9510-4285af6bae09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 5585404b-3312-4c57-a4cd-1b45b8e89d0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 71c75d00-503c-4b96-a91b-f1a144a12622)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE245;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h038E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h562F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #288 9ec0cdca-8996-422d-9271-a31421fc46b0)");
unit.assert_eq16(16'hCBAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #288 cfcc288c-d932-4708-9ff0-7b224a497dd1)");
unit.assert_eq16(16'h0390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #288 712d9780-855c-496e-8d0a-69b7d5b46c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 68aa6346-8ee2-43bc-a2b5-917fb213381a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 923425e2-809d-4c0c-99b3-6c0df5b62cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 8e9a20b5-2ac0-4f66-a8c7-0a2d86f7d5a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 e3e0c605-429a-4eed-9107-b4ed9f3dac01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 1a7a885a-0bc6-4296-8a40-6d2f65c8de8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 40fd3fd5-e9bf-4b38-addf-bc2f799f7921)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5885;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0102;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h38C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #289 ccd73db4-82ee-40a9-8c8e-626a9607c4eb)");
unit.assert_eq16(16'hBAC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #289 34f08fd9-778d-44c6-b2ab-1608af9174df)");
unit.assert_eq16(16'h0104, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #289 5cea5002-4cec-4549-bcf5-426538b4a3c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 4570dcbc-d34e-40b2-bcd9-8d900901cda2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 d7edd445-df77-4a1e-a127-702a47afdba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 7f7f2a20-f64b-423c-ac39-ee5870963ffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 cce0e8ba-4272-4c89-89be-4c362826022f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 1eb1e27e-c38f-45fd-afb7-07be6b3a0f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 584bcfc5-168f-409c-9bca-d59fac817d9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC101;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h39B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #290 b841877b-8050-4d25-84bb-4b8bfb7e7f2e)");
unit.assert_eq16(16'hC101, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #290 f0d8ea79-5f43-406d-b64e-6841283911a7)");
unit.assert_eq16(16'h0571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #290 c42c12e4-d6a3-456d-993f-b9e365167aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 4fee0f4a-9e5a-4706-a2cb-763c5b3a5212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 04d47b3c-61c1-499d-8917-46fe261eb33b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 ad303774-6a4f-45a5-8826-b2b177dfcd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 c34bccc9-3552-4332-9171-ab9f5ef4ebed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 dcd9d920-abb1-4765-9266-2214856ecad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 de269903-e175-432f-9347-543c2c5b1bd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC119;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'hB70E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #291 211413c1-47d3-4e44-bcbd-e4f975c4f48a)");
unit.assert_eq16(16'hC119, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #291 00b0f6cc-dcfa-4806-adb0-d505677cf46b)");
unit.assert_eq16(16'h0910, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #291 aaa94d1f-4fb3-456d-b5d3-390df9cf11d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 db3693a4-6748-4140-9b76-a9f1268fb2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 20080bfa-16d9-4d83-8325-d946a5c4c6f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 bf3d2b30-1c33-44ea-9022-4659ae473e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 0bb9e033-240a-49cd-ae65-77c6a9d8239e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 0f5cc5ab-e907-4185-81c6-8c159db50293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 f4d0cb37-da48-4ca5-a1f4-bb087f685bcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h294C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h848E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'h6143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #292 b2874808-1166-420c-9103-c92b408c4462)");
unit.assert_eq16(16'h848E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #292 1f689a6e-71d5-4a98-b933-c3c88cc9130e)");
unit.assert_eq16(16'h0FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #292 6aaf8646-f23c-46ec-b1a5-0d030bf249d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 767bba16-8662-4e74-b9d0-44b2ea1c742c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 a2dd8c4d-0bd5-447e-9f79-6efaa4714dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 22b0267e-080e-49e8-b61a-65a0be28c8fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 0283f258-fa77-471a-8f12-eea76560f718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 dac038e0-6bad-4d1d-afc9-64b330567aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 5a15898c-16b7-4075-82dd-6b9d0ee43afe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2657;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8954;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h5A0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #293 79acb02e-78a7-424d-936d-c84d0f7e5fcb)");
unit.assert_eq16(16'h8954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #293 72af843c-b6da-4e2d-be62-0d079b10e9af)");
unit.assert_eq16(16'h0FAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #293 1321c3a8-f9f2-4f47-8ca0-8c1f86910d89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 8038550f-ad28-4c03-a7a3-bf345b8c3f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 cca27f0d-0e42-40c0-8d0f-3f3f70f73b20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 efd885fb-79d8-405a-bb9b-a490fdfa806c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 bb5bd2ef-3ff1-4137-99e0-2f8c4c7b531f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 b38a7690-ce3e-4175-b7db-d2e9009c2a91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 e1007680-e2af-46bf-b306-1777e0db6fa1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9C2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h65DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #294 dcc888c7-031e-4afc-a8b9-db02e72352e0)");
unit.assert_eq16(16'h9C2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #294 bf3ee8c4-4ab2-40da-ab21-627896a723fe)");
unit.assert_eq16(16'h0C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #294 ddda0205-1e97-4aac-8b15-e2d077026e74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 cf828f8d-95ea-414a-b5d3-95a731bbc409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 17d4e400-d00a-4492-9aa1-7e052a83dffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 d40f62f4-95e7-41b9-98ea-fdd0ec5c8042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 903f40e3-faa9-441b-9792-6e5cc7abb49f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 e87a35d1-f174-4a57-9e00-52e853a10193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 ee296b77-86a8-4686-842e-d0ab37570282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h669C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9148;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'h0844, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #295 a6aabd77-926e-4be2-a930-df44742300fd)");
unit.assert_eq16(16'h9148, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #295 ef72933e-6c4b-4860-b8c2-3c311fd24ef4)");
unit.assert_eq16(16'h0F44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #295 9c20ae7a-2db5-44da-9f97-aba3dc92ec0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 36d7b009-808f-412f-987b-f060ccf58539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 1e9074c9-20d3-4320-ae0c-5fcf977a1abf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 d656a9b6-2821-4e7b-af7e-110b4feaa0fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 3a562545-4e6c-44da-ae24-813a29a52e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 d9d117c6-8f6a-4639-bbe2-f0d225b03269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 8b0ac0ad-03ad-44a5-a3f3-ffb566cd3a04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8892;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE9F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h3156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #296 6978a3d1-f2fc-4c5d-a059-d43482569faa)");
unit.assert_eq16(16'hE9F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #296 ee11cf7f-6d7a-4bbc-b655-c5b1d7c01014)");
unit.assert_eq16(16'h01F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #296 109f616d-cae5-4445-8355-49d028080de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 da03b6f3-1d7f-4bad-a0ee-f4fd72bdf3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 6997ceb9-5ac9-4cf7-8e01-327ecb5b0a97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 c9bcb527-47c0-46ee-8b2b-8665f9942ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 cdb6b1fe-0eab-4468-8801-bf3f11f8eb0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 5daa1bda-53d7-4672-befc-9b12d9abc7a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 75de9c27-de74-4faf-9ede-2f01ea7685e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h81E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7524;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0961;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h683B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #297 234a97d8-3584-4f31-870a-e5be6b2b1a33)");
unit.assert_eq16(16'h7524, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #297 3e8fb04a-c08f-4c43-a133-9dabb01dd78f)");
unit.assert_eq16(16'h0963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #297 a8edad44-a41b-470e-a1ec-d7f28a036415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 6535b28f-54f3-4eed-b04a-9fc67768a4bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 dbf1bdae-157f-47b0-8609-8ecd5ccb4662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 5da8e092-f84d-4a66-954c-622df6a37d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 d2b222e0-6d89-400d-a704-89c1d637a6fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 8983439d-2983-4c7c-945c-717b5be46a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 2e4196ab-807a-494d-8f77-1a04cb42650d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h24FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD707;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h4FC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #298 8d2dfd69-7195-45c3-88c0-6de5bb859f98)");
unit.assert_eq16(16'hD707, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #298 e24a7b0c-639b-482c-b686-e405c66d6964)");
unit.assert_eq16(16'h0240, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #298 352dee0c-2119-4703-a5ec-0b43508d86c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 e2e9ad33-35ae-49a7-8745-0a700b7c3f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 90ace202-ed59-445d-9eb2-4662dec12663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 44efe3fd-a35d-438b-bd68-5fcc040597e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 b04e8b9d-275c-4401-a4ed-2a384451da86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 00fe76f7-d108-4bf1-8060-06b314a49386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 c41242ec-c80c-4324-a04f-56a3c7ae281c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h523B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'hA43D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #299 4afa833e-4d09-43d4-96fc-68e96f8e846a)");
unit.assert_eq16(16'h523B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #299 f8a21fdc-34bd-4e41-9bdb-dae791699fe5)");
unit.assert_eq16(16'h04A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #299 7d2f110c-dca3-4ffe-a191-2d436a5bca50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 8d3e9198-d27e-468d-ade7-4938f2ca260d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 1e0acef1-3013-4fed-80e6-0e13670bf132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 67bf53ee-2a95-454b-bd9d-2ffe1ef217f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 ab48f84d-b2e8-433c-bc96-52f83fb8e8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 f93cf14f-85f0-4c25-8b17-9ce15d1d352f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 812d3aff-2659-4028-83d9-3ba397584485)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3191;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h55A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'hB154, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #300 df7de8d9-6c88-4b8b-a396-efc2c8e2b3fd)");
unit.assert_eq16(16'h55A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #300 b29dcd62-eaaa-4aa1-857c-44d99037d94b)");
unit.assert_eq16(16'h04BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #300 fef88422-ed76-4625-ba12-b3501eaffc31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 03733095-ec7a-4b0c-bfd6-f194a4a9dd77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 437bbf55-1c78-4f5e-8b58-7776b01d882d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 f282f529-8dd0-4059-89f3-ebd1529d9189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 0f01a221-e812-4132-a54e-9cf66e87896d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 76310383-cbf5-422c-8fd4-d3c5748a6860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 c49d4185-8fc3-4af4-b26b-d3d01f8c5f89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h308F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'hF657, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #301 738a155c-c7f9-4428-9ce7-8747efad9b9d)");
unit.assert_eq16(16'h308F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #301 131a3d95-776e-4168-98fd-f13ff165f8bf)");
unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #301 133bb218-4362-48af-804a-e8978c94bdf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 c471ee65-c7ba-4c28-9c91-88fa2fbac921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 b255edd2-6c71-4e9b-acda-0631a85c04d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 a64fc75f-752f-4683-bed0-8b59b3f2c4e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 615c5b22-8e96-40d5-b94b-a64e6a84ee3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 44284ad7-b36d-4d3d-b086-bd3dccd70d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 6f077f4f-e853-49f4-b859-c7175d50cafa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA80E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC07E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'h6384, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #302 6df18164-4cbf-4b32-9e48-27b76e01b8f5)");
unit.assert_eq16(16'hC07E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #302 a3d3a952-cdb6-4a6a-986a-62387f821383)");
unit.assert_eq16(16'h0E4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #302 6e3e3f75-7b9a-42e4-a3ab-445e12c8af19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 9ff63085-e29e-4398-8f6c-09d2baef779d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 77e5e798-aec5-4c17-97be-653aacacf1a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 1cbecbe1-3230-4f86-b7a5-11741f571698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 a11f0e38-1723-4dce-b929-435b4be1c9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 a5313c5d-2478-4a9b-b7d4-33aac787af7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 0835e1b0-80af-4f90-a628-6acf8441d5fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0177;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0999;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h0242, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #303 3019b672-7aeb-4e60-82b6-0468aa6f93b5)");
unit.assert_eq16(16'h1D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #303 8f9642bb-5bb8-42af-b955-9e3e850ec7db)");
unit.assert_eq16(16'h099B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #303 b4584eff-eacb-4b79-8fa7-c3c5acae030f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 acf3fc94-2b8e-4582-bf33-6588c31db195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 796b07fb-c5ca-45d4-b614-806116fe011b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 8af11895-d979-4adb-8f93-398e17db2fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 ea75b2c1-de18-47e4-bc5e-449bc1913cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 fabc4ee0-4358-4624-b41f-047e4bb03691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 3a55fbbf-6ee9-4cf3-89b3-ace2e4173f36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2118;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'hD1F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #304 b4b5b422-2ab7-437d-86ee-93a929df44ac)");
unit.assert_eq16(16'h2118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #304 164089f0-081c-44e9-996f-60373639d004)");
unit.assert_eq16(16'h07A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #304 12d75653-3a26-4b2c-ba59-8568035f666a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 4ec8078c-f2e5-4268-b486-7b37f3405b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 40a9e765-8ecb-4db8-b701-004e1d813459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 cfc69851-6aec-404c-9b4b-2cb2879ee48b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 5f6ecbf4-09eb-4ed8-a6a5-c71b5f8b5fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 9f4c1f00-3f51-4aff-85f8-3c62b6e93e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 c3ab5e2e-6183-46eb-a409-10e5b50901ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB867;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h17D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'hF281, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #305 f1961681-60d3-4596-a5eb-bd5e56c5ff59)");
unit.assert_eq16(16'h17D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #305 9fd8ded8-171b-4989-b6d0-1c9b1bb81426)");
unit.assert_eq16(16'h04A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #305 f8fa154b-632c-4151-b067-af38190ff899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 1e79b3ce-f3f2-45c3-a5e3-daa8a5a093dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 afdd9bc2-fb23-4596-86ba-71b0df4c98bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 d61e2bc9-bf20-4105-aa1b-02c58753751e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 abda085b-04e8-4059-a37d-2ca6a9c9a0dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 f7dd0f2c-0ae3-45cb-8dfd-97acc96732b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 5036f413-71f7-4096-bdcb-c1c19978c0ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE1BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h9813, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #306 c8fa8c02-2218-4190-912d-1bf2166a3227)");
unit.assert_eq16(16'hE1BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #306 a944967f-47b1-4266-b3e2-6434770e4462)");
unit.assert_eq16(16'h067D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #306 d1535da8-0222-4866-8462-8e0712de54c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 37464c66-3eea-456c-9881-c3a459a04e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 bfd0fca9-e36f-427d-8268-9e1f9b52879a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 96519adc-c5c2-4945-9d03-976a3f42c876)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 302a305b-ab56-41f6-8366-7d5301e04471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 9675098c-acb1-46d7-99a1-2a510f02fb44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 ff93de99-a262-42fc-ab86-6050a9081751)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA22C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'hFF1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #307 25ce7ef2-b136-411d-9f87-45c0652586a7)");
unit.assert_eq16(16'hA22C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #307 90de5ab0-ded0-49e9-8c18-34d54f0bb8f5)");
unit.assert_eq16(16'h06E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #307 53b91ff8-5789-48ca-9ee7-84a71b399115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 a8c53149-adda-4436-8998-0ce2cb5cfecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 d8c38ecc-55d7-49df-8eb8-c0cf5bacdaa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 6cf48ca0-ef0e-407e-87e8-fd885d9bd47b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 6626bff6-da07-49e5-8e1a-ecdc8aaff4f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 95f9dc96-684c-4874-afbe-d373bdb81def)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 b8c3e8a1-8c39-476c-8641-fc87450d473a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h980C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB223;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0063;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'hE6F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #308 44feedd9-4aad-4869-8ef7-e4de85e4fd5a)");
unit.assert_eq16(16'hB223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #308 b7fb17c1-3092-4665-8e04-9044befe7135)");
unit.assert_eq16(16'h0065, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #308 aee0ef92-99b7-48a5-b464-06152439cdc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 30d3a8b2-73bb-4643-9673-fc1f59ccc0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 230c5c4b-2e5c-40a1-9157-3ee6f87ac496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 7d4dac8e-a743-479a-9e91-3cc69595c008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 55caad9f-a83a-4567-b0fc-5976cf35f9ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 2f49912e-2760-4c5e-b378-8778cb64b0dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 8ba90b4a-3db5-4402-91f0-356d887d487a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'hF082, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #309 8224c8d6-d442-4e04-b86f-374d001c9d59)");
unit.assert_eq16(16'hD4A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #309 65aba40f-283c-434a-b2dd-5dffa2befc75)");
unit.assert_eq16(16'h00C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #309 d6e88ebf-acde-4c3c-ba4d-ceeb8e1cfbd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 30a79e90-5f5f-4b2e-a0bd-23c8893fcb99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 07d0d9c0-63e0-49a8-b4e9-51c3f0fc60aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 33fcc11c-bf79-4a5a-8058-7e14269c22bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 c3ddf7a8-0dbe-4ce1-af1b-1601773b6f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 0043d609-7ec9-47b7-8b39-65d801f6f2e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 7bfc2587-f051-4884-9c40-15475081da08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD3C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC993;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h6E1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #310 9c66f208-5ea8-461c-a721-9f6ff45c18c6)");
unit.assert_eq16(16'hC993, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #310 7bb91e7b-4636-4ced-85ca-28c6722b532b)");
unit.assert_eq16(16'h07BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #310 8e2072d2-0b86-4bfb-a5e2-548187ea5e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 688ec29c-4810-472d-b8e4-47e5215a864c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 45717dd6-c1a6-41da-be07-8d0096991901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 a92ac40d-70f1-4957-a9e3-87634e7f1da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 8cc4b283-2e6a-4db8-be43-b4abd01522e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 fbe76a7c-c0ff-4d84-a0e3-59c9ae4a7200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 95865217-8ba9-4b91-b829-3fe3018d88c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8179;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0662;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h337F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #311 9ef3346b-22d6-4aa4-b55f-15211159d71c)");
unit.assert_eq16(16'hAE70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #311 2e901295-ea27-4a57-8421-ea5dd79e32e5)");
unit.assert_eq16(16'h0664, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #311 8d798624-7412-4280-8716-50438ed01ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 c9b4ddd8-5d25-431b-b49e-ee04886d1701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 6f5bad63-a8c6-473b-a13f-e5c202337400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 f14ad66e-8282-468c-9389-a0dbbcc93be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 80a3d5b5-c6fd-463f-8abd-c2dc547255f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 24b057c1-c024-4676-8ee3-813170974e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 324b35e5-bfa0-4bae-85cc-e8c799d08bf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3394;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0058;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h22E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #312 77b44c10-f61f-4e31-91b5-5953095d055b)");
unit.assert_eq16(16'h5E42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #312 87c18e00-b1a1-4346-bc25-93976e308690)");
unit.assert_eq16(16'h005A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #312 94fdbb52-37b4-41a3-ad69-a32f0b60abb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 07df35e4-43b0-448b-bfc8-fed45149f8ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 dc80b443-355f-44d2-898a-d876af927a89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 37b5fcb4-b763-463b-a873-96f6e246cf8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 787a595a-49a7-42de-a6f2-4f07d4728e03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 0baefa5a-18b7-48da-a217-c63bbd96b762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 c239ada8-5483-4840-a9b2-983e12e3eb71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4FF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'h2F47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #313 0e963158-c561-4689-9189-ca27039b4b91)");
unit.assert_eq16(16'hF7F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #313 8684b9a9-35a1-4b8b-9147-7cc0bfa8aed4)");
unit.assert_eq16(16'h0F71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #313 51a13888-0126-46f8-b24b-ceb8c7da9c02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 19177a27-43db-4677-8b94-2fffbffc03a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 c7d65940-b56e-407c-9790-8330f273712b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 1111029a-9bc6-43b9-98a3-68489d7194f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 5659f40d-2764-4edc-9875-e96dfe6c19d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 0bafa5d4-f790-49e4-b79c-ccb1ad79e104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 1c894da7-3090-4402-872d-1f5793883014)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'hEF35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #314 6b5452d2-0c4d-46f4-bc5c-f5f54944f5b3)");
unit.assert_eq16(16'hB9C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #314 50858042-1488-4289-969b-ad372d34485e)");
unit.assert_eq16(16'h0D8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #314 62291381-defd-4285-b4da-f73e3ac2be5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 756c5d87-30d2-4a73-bcfa-05b82cfce31e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 c0966f17-b1a3-4d92-84ca-7725f46d331c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 90a96689-ec78-42f4-b04b-4176b8292511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 a29f9a46-3974-4009-a501-fc08c6c95a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 9b3251b3-14e3-453b-aa5f-aaf84222c3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 9d5e4969-0805-450a-a0cd-a5e9f605aa94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'hA5A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #315 0817afc5-b703-4e23-93a8-6c8635464a3a)");
unit.assert_eq16(16'hB8D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #315 3806b33a-8fb8-4b10-86e5-709dea44a479)");
unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #315 0aa87eb7-f9e1-4d8c-94c9-6c117d03e360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 9ed74b1e-ce97-4cde-8280-b4a158954937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 c15c7c75-99d2-48eb-b876-9a9876d2ff9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 d3db9d56-b21b-43b2-aa67-5aeb4ca4876f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 4e9642ad-810d-4645-a778-8a9b561101a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 18f98a96-0956-405c-88d2-2f87da5d06af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 b1029b67-b135-4285-bc0d-78ba45e7a2db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD066;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0390;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'hB867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #316 55c3505c-ddfc-4bca-aed4-3c173f6020c9)");
unit.assert_eq16(16'h7E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #316 307863c6-b28f-4f3f-bf78-c8c57522aae6)");
unit.assert_eq16(16'h0392, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #316 558212bd-ed10-4b59-b751-8682c0c8c2ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 a3b1091d-41ca-4872-8597-b254eea8621e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 d9d1e9db-a2d6-4add-8010-839f1f3349f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 4add5ed0-f669-485d-bb31-ebf167961192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 8c3a7b1d-53d2-4d11-b92b-bade0714dc72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 61e418a2-50e9-4c6f-aaf7-80d3fd07b1f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 227b20ea-708e-4e90-a6d8-5df9c4feb122)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC04B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5BAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h0C07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #317 3e53bad4-3d47-421a-ab3e-e074e162ae93)");
unit.assert_eq16(16'h5BAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #317 b7b4580d-6e62-47b9-8485-e57bd2ee93f4)");
unit.assert_eq16(16'h0EEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #317 32819402-5b6e-4508-bf79-f42d313129fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 fc269186-745c-4e24-a181-4377a748aa3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 a5b9bf5e-9599-4236-b54c-1ff35f3f1c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 b72eb35d-4bb5-43b3-96f8-60b302d181ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 d757cef6-b10d-4419-98af-dff717b07d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 ddba5eea-c6ee-4855-91cf-a02e64c2ec6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 ff572c03-29b0-4bf1-9a8f-c3123c0ea778)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'hA53C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #318 0c91750e-17e1-4662-9e7c-771727cfe581)");
unit.assert_eq16(16'hCAFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #318 d9e5ce58-e692-4383-95a1-7ff28e4bac58)");
unit.assert_eq16(16'h0F5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #318 701791c0-a907-4c53-b6a2-42260024d205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 b2e17313-e06d-4942-9d6e-284c206f0683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 33e50e59-a928-4a89-b2e8-c4c46fc0328f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 faa70561-ab53-41d3-ac89-9999a2fa0e5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 6f1a41bd-fe00-4d5f-b564-cf97d9fed44c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 de122c4b-bef5-46de-8dbc-46a6d107635a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 be0cda09-360c-4830-a08b-0246f22c2841)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h9B53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #319 92a65378-5c04-4b87-8f70-4cb178948a48)");
unit.assert_eq16(16'h02DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #319 6ffb2fc9-492a-46b2-9181-2297f8eb4942)");
unit.assert_eq16(16'h0550, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #319 da2a2d29-b39e-48e2-a264-7fa6597cd1ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 a60c99b7-74cc-4d77-93b4-2d707717f40b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 a7e7b678-285b-426f-8082-3fd5a98a7fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 5b4312bd-5190-4c0f-beee-c7e35e804ae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 2c2485ea-a979-4512-9d60-5185db04cab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 4b56f1cf-f45e-4642-a9eb-ac7d4f056b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 667b58c3-7ae8-41b6-adf8-fa035fef8545)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h6ED2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #320 209222cc-d4ee-42d5-aebb-70bcf03909b5)");
unit.assert_eq16(16'h7B8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #320 65f0aaf6-3c2f-450d-81dc-df3fc0f81863)");
unit.assert_eq16(16'h0FB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #320 5f08123a-09e7-43fd-b217-d85a14220c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 4d7fc13c-0bae-4f10-8be1-6ca4371318fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 6b92d7f1-6fe8-4bdc-b2ab-d6409f9be23e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 48d3b5a8-09b6-4fda-9237-8feb388a2e0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 03da6289-0677-4f8a-91dc-efda11ec14da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 d30a5c16-a6bf-4746-8873-bacbdeb3fc2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 c7a6cc21-c765-47bb-9f9d-a625f221eb23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB042;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1051;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0464;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h7795, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #321 6fbde64b-3853-42e1-8e0e-a39c31069eb1)");
unit.assert_eq16(16'h1051, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #321 101636e7-faaf-44e5-a4c4-f26fc5fa7467)");
unit.assert_eq16(16'h0466, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #321 c3671a26-f6ce-4234-af23-f2265d90460c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 5163d3a9-15c8-4f16-9b2f-548cd031e649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 3d7e07e1-247b-43ed-8fd9-8a96bbc38144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 1e94b9fd-2a01-498c-a3a3-e9e7b87ee3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 84b749e1-8259-4772-ba1d-c3638ed4d434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 35598926-cdad-4774-8857-3042c984ed43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 b99fc719-11b5-4eda-be59-f7cdc20cd977)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC530;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'h9017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #322 c836fbd3-f559-43c4-bb07-25bc4c02dded)");
unit.assert_eq16(16'hC530, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #322 cd5ecc5c-d266-457a-b835-f6f10fecbdc9)");
unit.assert_eq16(16'h04D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #322 2cc635f8-2451-4211-9691-8b9b2eb2c344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 fe8db687-e417-4e3c-a5f7-09a96f1a34b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 29abdfbc-9e15-43c4-ba38-938e84d6b63a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 ecf36d4e-6de6-49f7-94ce-bece4ea95b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 db0de87f-1c6f-41d6-96a8-3ed42b274bbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 a2709726-f367-418e-8897-1ac2688cc931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 fc3cdc2e-cfed-4db1-a984-aa6121d3615e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA05D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4BF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'hF35D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #323 0dfec40e-ebde-4d85-a426-186f2900feb2)");
unit.assert_eq16(16'h4BF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #323 6c08e57f-e5dd-4562-90c6-8a5fc191a0f3)");
unit.assert_eq16(16'h031C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #323 f925facb-ac08-482c-a77a-e18a1f1a2e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 d042b525-4429-49fe-8f13-311ea0251da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 bb6c8083-033e-438a-aefe-93da34fe70a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 8bbcbcb4-1dc4-4b4b-bb5e-e126b728ae6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 697a0524-f6d0-42ee-a245-e84ca9807422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 81a7e16a-b443-419e-9c13-25375ca3e9c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 1b0a115b-2a01-4384-9b81-125c4d11cb82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE79A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h864B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h62F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #324 97db7837-98f1-43a0-8c54-794a2dad0ec8)");
unit.assert_eq16(16'h864B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #324 9823a535-64bb-476b-9faa-b06550231567)");
unit.assert_eq16(16'h09CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #324 5dfd54c4-49d3-4436-abca-4a37f0a5e770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 ec1aa939-4818-41f7-b023-e372f8a3be63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 4ecef777-509d-4ea2-a434-71c443cf6513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 70441cba-fc5c-4e40-b90b-bd696461f1df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 77246fc3-012d-432f-a3f8-adfeb44b5d69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 df267918-25a2-4f93-85c5-a9dafe63e7ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 cb9d14ee-b389-4be9-98f3-52c98bae5ba3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h4B84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #325 394c3f75-6834-4fa1-86f5-d0ebc509fb6e)");
unit.assert_eq16(16'hFE47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #325 fd837d2c-4074-4e1f-a73c-fb7eadbab67e)");
unit.assert_eq16(16'h0DA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #325 88aa1e32-6c30-4744-8924-7cca9a3754dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 5116b89d-a542-483b-ae39-ea33872d7694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 263f11a3-9b70-48ea-9979-cdfc364a9ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 6e711d8a-bb6a-4c66-a876-6055f20021bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 5cc4aeaa-5efe-4d8f-93ad-8b109f618ca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 098c48e2-060e-4982-b52a-101ca1fef26a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 18bf16c1-c86e-4fdf-9284-5c859b13c6f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8259;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'hCF88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #326 490a4941-6ee3-4601-9e77-7f36860b3ff1)");
unit.assert_eq16(16'h8259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #326 83d24950-61dd-40c8-86cc-6821486b7f00)");
unit.assert_eq16(16'h0D78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #326 3c4a5284-aeba-4745-acf2-82ad9f22d5d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 99f27079-711d-4c62-853c-62e60644179b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 d41d2098-e879-4281-a6b0-0241e57acada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 7988507a-4a61-4f9b-9840-3fbafaf37967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 aa394ba2-acd8-4db2-9daa-c525d0c6aac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 4b065ab9-a4c5-4a74-86be-d875f60e2172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 f2ae03bc-f4a5-48ef-ad69-b7d098163003)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h12B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #327 d96b7843-2468-4f88-aea6-fc943603ace8)");
unit.assert_eq16(16'h1A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #327 fa717c34-97ff-431e-aa52-732e04e437d8)");
unit.assert_eq16(16'h0ECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #327 c6c90faa-8344-406d-8426-bf1e8a8cc29e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 cc8c9b55-f8dd-4058-98ba-ccf5772a954e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 a237a2ed-c8cf-4205-bd3c-ebf4cc6d28c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 8170b244-5060-435a-b8c8-be8deed4ba70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 6f5e7e97-4a6d-4207-b5ce-958aa42867a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 84d0d8a0-72f5-45c1-808a-b01058c89e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 96b1a0b6-957f-4de2-b0d0-4b1e399a554f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC189;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h070A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #328 0b53a61b-48ca-42bd-b388-977dc5e5b641)");
unit.assert_eq16(16'h67BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #328 9e264986-a7b8-4985-a53f-be47470b3d34)");
unit.assert_eq16(16'h0EEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #328 1f78352b-2fcb-4c88-b94d-db4fdb64de91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 7e4618eb-5602-4957-a5b5-4e98eec15b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 410863da-3dd7-4234-a0bb-402268923c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 fde711de-2baf-4e59-a63a-fd31e83609bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 03df16ad-75bf-47ff-a4b7-5f378c00bb7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 dabb4491-0052-4b65-926c-bacdd305f51f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 18ac2611-84fb-4bb1-bca0-b740cd97bee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h94A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h999D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'hED6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #329 e92e8716-6898-447d-a847-4485aec8da01)");
unit.assert_eq16(16'h999D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #329 abea90e3-23f5-4de0-8e70-1652f8b57a4e)");
unit.assert_eq16(16'h0DC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #329 c91491fd-99ce-4bbf-8f45-be8d178fd5f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 e8d22613-8fbd-4b55-985a-e09f5c3a4985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 63c4f3dd-d9f4-4394-bab0-ec5e37c3f854)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 9cf36f6c-2681-40a4-bd20-d593ac3ac719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 59491502-f740-420f-99fb-ed05cde5120f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 9df9d0d2-5f43-48c7-ad4b-e1c682cebef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 38003c8d-9352-40b7-a65f-689b6c3c4b09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF458;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE923;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h034E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #330 52fdbaf8-6f5a-4f8c-b8bd-51ab4b25bf15)");
unit.assert_eq16(16'hE923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #330 b861abd1-1532-40d7-92e2-78569da43228)");
unit.assert_eq16(16'h07CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #330 3cd6baee-6e33-47d2-b48e-20bbaa7b56e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 00597fd9-b26b-417a-ae7d-c5ed36509d2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 6cf133c0-9c55-48cc-8d3c-4621f2fb8428)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 ff7227d3-59c7-497d-a6a6-2cba6d296688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 0e274b0c-7ce5-46bb-a37b-18d3b35efde3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 120c318a-25a1-45d7-a51b-77ae64fe69ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 3938be30-b488-4ceb-9fcd-32c06f6409fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h18C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h3003, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #331 ce9535b6-7c18-436a-80bd-039a82d0fa20)");
unit.assert_eq16(16'hF6D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #331 466d55a4-9f4d-4c2b-9166-0ad45e7cb074)");
unit.assert_eq16(16'h06C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #331 61764aa2-450c-4762-bc88-d5e691afde29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 922a9cb1-a9bc-4887-9359-f655032b3bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 09f78ebf-4e54-4561-9b63-10b21e5c53be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 5d8f789e-0cf6-45e6-ae40-2f14980ba64a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 5625655b-f9f7-488c-99df-ff197fccb65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 5c6c98ec-87b2-4200-96ec-9d3824e0749d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 57400a8c-e84a-4e58-9744-9d50cd73ffb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h088D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'hFFDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #332 402cbab9-21e5-4fac-8d15-9b58d6a85246)");
unit.assert_eq16(16'h8E5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #332 6a604258-729c-49dd-bf3a-92ba1a5cc8ab)");
unit.assert_eq16(16'h088F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #332 4423b3c2-aec5-4258-a413-4447ed3cc330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 553fbb65-ce0b-4816-8c43-19034c87210b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 da0ae0e3-0374-4774-889f-2686505656cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 7413a3c6-2dd0-45b2-945d-83378d5a08a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 bbec3713-f564-47ec-b22f-c2b70aab516a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 2020b34d-f37b-45a7-ab2e-5b2ed8486d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 87e389da-44d2-4b1f-8cf2-270b05d04f2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h024F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h6ECC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #333 e25ca538-ad37-4328-aacd-a02b3b824052)");
unit.assert_eq16(16'h8DC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #333 dda244ca-edb7-4493-a3f3-7ec3915a3bbf)");
unit.assert_eq16(16'h0251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #333 43dcc409-25f2-44e7-a401-94bf1363a24e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 28727f81-1b67-434d-8b1d-ff2a31286575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 dc94fa92-0184-4421-bd18-5789cec39135)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 59ca7374-c77a-4f73-84f0-da386959612d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 01e3528a-b557-47fe-b131-ba5ceaa7059c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 ca79a9d0-732f-46d0-8c6a-53d6945c30f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 58b3a31f-af05-4117-86ee-28a82855c317)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA144;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0038;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'h4231, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #334 ec6fd52b-6c59-4c45-b51e-e06bbad3a4ce)");
unit.assert_eq16(16'hA144, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #334 f352741f-9d42-4fa2-8cb2-b28a05c1c54c)");
unit.assert_eq16(16'h003A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #334 6b7ffd42-56cb-4233-a8a4-4d9b6a20b08a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 3740d3ad-6119-4abc-acb6-60279a941ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 05574e22-08d2-4fe6-8e67-f1d7c226b895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 6d77206a-ecf9-4f45-a4c0-6658313955c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 34f7301b-5f9d-443f-aff9-9381c400a11b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 03d98263-2703-45f3-9d1f-0a9b46d1ffcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 b24dad09-3090-496a-a783-e9ea21292b55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD00E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h32E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #335 78f38b65-d28a-4b0c-b7cc-f420683644bb)");
unit.assert_eq16(16'h4D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #335 a2c40f17-9bc6-48ac-ba05-c9380fdcbef8)");
unit.assert_eq16(16'h0A2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #335 58e597ea-ccec-4dc5-9519-be2f395c3790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 c84b4088-4686-4408-90e8-3e82bfbd7e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 9696e778-a386-4427-b6f3-ff8397b740a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 3428d36a-b905-49c5-be2d-295a47c4edbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 20adc090-7a21-4919-901b-f3ba6ef34998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 fc257154-17dd-40c9-b2ff-ba4538ec3e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 ba4a5ede-68e2-4104-80e7-6e50c95dde91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6505;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA899;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h81E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #336 d6ddbb2b-16a8-4f3b-a21b-9f2c7b4b6913)");
unit.assert_eq16(16'hA899, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #336 b29e4079-f16c-4145-b44d-11d84c9cf594)");
unit.assert_eq16(16'h081D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #336 0b943e74-0301-485b-b563-10f55fc67498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 8def7d17-092b-43c6-b696-3933534686a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 7ad25e73-ec11-4e28-a9b5-ee7d125742a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 30551698-8acb-426f-a3b1-f2b66e83be3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 fb65596c-c199-4a18-9b79-f44b9b6f7a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 37e42537-4b2a-415f-a900-17101c779abb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 bee0ce22-8332-44be-b36a-ee2e2f02153c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h558A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h40FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #337 4100e291-561d-414a-8a73-7aa4095c4c61)");
unit.assert_eq16(16'h558A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #337 35e49294-d00a-4ddb-90ce-61cdb07f5fcd)");
unit.assert_eq16(16'h0E66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #337 d5b520df-3b40-43f7-8a98-488f0df3450a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 c37c447d-03e6-4340-a730-2ae7e27b7fa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 d3ea300c-e15c-4866-a52a-ba958103a152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 03436273-99a9-4c64-9da9-55054aa52757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 63787fb0-f486-4943-958e-9726ef2d7d5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 c9518be4-9408-4170-896f-af58bb257331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 ba547f16-296b-4101-95f1-3fc9749c5a4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF57B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'hACA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #338 ffafabf9-234d-482c-90b2-263cc7b2d0b7)");
unit.assert_eq16(16'hF57B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #338 1bb33913-c592-4f0c-87db-c69f7ba4e88c)");
unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #338 dd473711-0482-44c6-9468-7850528eb7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 6688f97b-7877-4a72-b81a-6ef48dbcea83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 037e16a6-80b9-458f-8134-408df13634f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 b998af64-a5d7-4494-8a6e-212647b2cd94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 25d5fa1f-95ac-4c68-8b6a-6ca7f01efbb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 c992f0b8-3272-4fee-89d0-2bf891f78006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 1beaef35-53f0-414a-8cad-30911d0b45d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h393E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'hD275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #339 33fea095-cf12-4698-9b54-dbe82bdf51dd)");
unit.assert_eq16(16'hE7DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #339 fcab41c1-866a-4d2e-9a26-24276d4a3767)");
unit.assert_eq16(16'h039F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #339 d036d932-8c9a-483e-a1ca-47fcd04b10fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 e366765d-0987-4e2e-8866-7386b122d1ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 fbc9ea03-7f87-4bcd-9bd3-a2ec4d2af3e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 383eee80-02d0-4dcf-b35a-88711abc511c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 21c88812-40a4-412f-9dbf-2a35e501f302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 617773f3-05fd-4af5-91fc-5442c0135bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 a5d709ce-3ce0-4d3b-935a-cc513d3a02f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h47CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0794;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h81BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #340 c2eb2125-6a16-4923-9aa7-35d9d8b9199f)");
unit.assert_eq16(16'h4B97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #340 c2cc084e-d78f-4acf-86af-bb8691470470)");
unit.assert_eq16(16'h0796, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #340 cf2d9bb6-d891-439e-afa1-6cf3b93c8f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 257cd26f-03c2-4fc6-b374-ca5779b1c393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 94e68c0e-8d6e-4152-85b2-e794e853c0e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 714cca44-6395-497d-98af-49e3d3307349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 50df6fec-caf2-44ce-b8e6-74cdaea438be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 27a30b9e-1a6b-4c6c-a9ce-f4413825ef7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 27daf9b2-f425-4dfb-9728-b01b242d23d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'hC6A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #341 db5b6eb0-3b22-4a8b-beca-29434df8ef34)");
unit.assert_eq16(16'h2F2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #341 bd59a0c5-db65-4df6-b765-102458e5baa3)");
unit.assert_eq16(16'h0E74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #341 7a0d6c7a-448e-4201-bea8-0050c37f1bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 376ec59a-a0f5-4e2f-8e47-395efc6b3ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 66d7c9d2-eca8-44cb-bf81-4b134073f0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 8a9f62db-bacc-4a09-8f76-23909cb80f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 96246fb8-c8f0-4c8f-9885-21f2a5aafc85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 c27f795d-ecbd-4282-8dae-02bee50f6d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 c5235d77-8cfe-4986-8e68-d1283b6258ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h8E76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #342 0873d313-fe21-4495-aa41-00b6f4be4529)");
unit.assert_eq16(16'hF4A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #342 b0c43e10-1c90-43b6-b70b-4a6b0b2b8b47)");
unit.assert_eq16(16'h08EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #342 22817150-b7d8-4232-8f26-38842d791766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 0a5837d5-2a66-424a-86d4-68e5f71c2c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 4928fa58-e641-467c-8d8d-9e93ceb6c6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 78d65940-9a67-4e1c-9066-af447e1fcad3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 fd540e00-72a6-47cf-ae56-cf0efc18d67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 18dc13b7-07ee-40f1-826b-4f20696e5245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 fcecd623-b461-4deb-8619-3b1e185c8a50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'hD6C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #343 de2861f8-bf74-4df1-af56-4a4b083b698d)");
unit.assert_eq16(16'hDE10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #343 54640807-c311-44f5-b224-aa0ea5acc988)");
unit.assert_eq16(16'h02EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #343 901a6f09-58c0-4b01-8311-5ce5a4b552f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 7d6174b1-593c-44a0-b5b7-27ee8f38e94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 f36671b6-4810-4ade-81fc-45d3504555d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 ddbf9c0a-782c-472d-ab0a-9f4dbe36ad4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 c4ccd3f9-f9fc-405f-9e8d-ca4fa9206108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 c3306265-a93d-40e2-97ba-30baa339a8c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 7d72f00c-8bb5-44e8-9a0c-038aa29693b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9BB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1836;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0830;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'hA311, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #344 2d613722-459f-4d89-af9d-72ed69eea069)");
unit.assert_eq16(16'h1836, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #344 d2218ea2-1cfc-48c4-9b03-4a40a1c279ae)");
unit.assert_eq16(16'h0832, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #344 b48d3622-d8e9-4b66-bfb2-5ddaeb3df40c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 2aad4503-a6d3-4680-a39f-028d5ba58086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 353b8c68-889b-4a1d-96a0-7766930d7ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 86fb98a3-73c8-4703-af99-7b5f4214ae8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 6baee5e6-87e7-4a91-95ae-c3496e94e3ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 d1a4b732-bfe1-4720-b8a2-ee36e7b4c187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 af7ee2c9-3448-4aff-91ac-fb65e3c52d6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0356;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h018C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #345 2486ae2d-791e-4be0-94cf-ef954264b6f8)");
unit.assert_eq16(16'h4E2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #345 214b8600-696d-4a4e-9cc5-c1fbea124278)");
unit.assert_eq16(16'h0358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #345 72182b7d-1a77-4ae1-8ed5-a6dc4e3c5a15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 81341fc6-a303-4a8b-a374-26bea3b816ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 2fb686a6-72ad-4883-8262-cfd39db0df52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 2bdba7d2-140a-4103-b903-6e68118f697e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 3e771d7a-7bbb-4b05-8701-517ccd91f194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 12b7b228-a586-42e7-856a-2da2576112e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 4457bee6-2fec-4a5c-a462-7e3758642348)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE094;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h9D96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #346 c650146b-7b93-4d60-a739-2e527d3e3971)");
unit.assert_eq16(16'hE7F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #346 b45ce5fd-b65b-47ba-9d6b-34596f3e17a5)");
unit.assert_eq16(16'h05CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #346 ac60b29a-2d34-4421-bd43-222355c0f2a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 3700bff3-7ca4-47ce-8cee-413366d1d8d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 240b0c10-e29f-414d-bc82-671ddec32f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 28d343a0-e782-4060-a0b5-26cf5360bb37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 b63b37d3-0355-4520-9cc1-7eaf05d7ad03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 5c2de70c-4c94-43e4-b904-b0e7f193ec1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 95afdd0c-3f5c-42b3-8d50-821be85a4c77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'h8218, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #347 3dd6df11-ac22-4abd-86ce-623f1e7c6da0)");
unit.assert_eq16(16'hBE9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #347 76e91b88-99e2-4932-bfc0-8df28cfb5021)");
unit.assert_eq16(16'h0B3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #347 18ee922a-e548-46e2-b4a9-fabeed408de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 d702c000-c0bd-4f59-9feb-6981a3cd9e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 3121e6c8-e053-4562-9f32-6f06a74d7359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 3b7946c4-f9f5-4173-a34b-331feb4e0e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 e929515c-fc2e-4c84-a0c3-f64547198e32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 228f7cdf-a42d-4b1c-8d9e-6d64202f3d25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 f59c1e5f-97eb-46da-96b3-edf9e707b162)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6672;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'h1744, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #348 cc83edcf-4082-404d-9abc-02800f4c8d1b)");
unit.assert_eq16(16'h6672, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #348 bb4763e0-81b0-4571-87a2-5274fae206c4)");
unit.assert_eq16(16'h09F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #348 68cd2f78-54ac-4e09-9e2c-84d589dbc11e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 45c289da-e10b-44c4-a3e2-74810f26723e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 3ed9109a-cb34-4d19-aef2-e1da3082d53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 70d6d787-daaf-4a70-b4f6-8e3c8a7f4d41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 ca0ea746-9543-4b40-9786-ce42295f7041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 8c06018b-2455-4e7a-91c1-a537c644c729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 d8b68532-abf7-476d-96c8-f28747c009e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2662;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0233;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h09EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #349 e0f0fc66-03e6-4113-9013-a9281770a46b)");
unit.assert_eq16(16'h043D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #349 f4541fe0-3b0b-4cea-a248-854119b46bd1)");
unit.assert_eq16(16'h0235, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #349 2329369b-26ac-4157-b89a-775afd8c6250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 4726931c-de6f-4776-8849-2a8cb6134d0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 8efe2238-e81a-4aa9-bee6-a818e8248f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 ea72fbe2-fc63-4b1a-8b51-528bd2c4641c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 7590687a-47b0-457b-9e81-7ab84e6254f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 678d39a7-c5b3-40f6-90ef-fa00fa7a983f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 6b2095c0-6e61-46c7-ba43-d3cffde38849)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEBBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2035;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0105;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'hE439, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #350 ccfe3dbb-02c2-4d5f-93bb-aaa71e3476eb)");
unit.assert_eq16(16'h2035, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #350 a07f7f29-c709-4a1d-ae77-05968c6f8990)");
unit.assert_eq16(16'h0107, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #350 dc5732de-f259-43d7-8a50-106abee03158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 c5206aa5-6da5-4371-8159-2a683c6d7663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 4ba9bea9-f0cb-44bd-8dfe-6b4660988d85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 1c825c85-dccb-4a3a-977c-e0051dfaafb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 32388139-976c-49d5-b3a0-3b1f88dbc680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 b3370555-5618-4403-b3a8-34afc31e64d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 5f201ce4-603f-4fbc-b712-0e743327a917)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7275;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h09E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #351 f6479e7b-c59a-48b7-bd87-dd7125c42894)");
unit.assert_eq16(16'h50DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #351 1defb8a2-6fb1-4eba-a00c-45431edf4995)");
unit.assert_eq16(16'h0DE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #351 3837f888-0433-466b-9b65-bce290da0e9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 34d0ddce-7c03-46f8-9adf-c6290299520c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 f0ae6ffa-4ce3-425b-a6ee-ccd1520f4fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 a52ed58e-f246-4bd5-ba62-765f9feb78a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 818e7ee5-dd39-465f-bdae-d36a1cd9f17c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 445d9c8b-0656-456c-be9d-36c925f2a429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 007ff2ee-7adf-411e-9b0a-85dca2e1a508)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h46B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'hDC5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #352 0faca0a2-b0b3-40a0-9f7d-6f76d96c7cdf)");
unit.assert_eq16(16'hCF67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #352 856193b0-9f7a-44ca-8454-e6756dbb2d04)");
unit.assert_eq16(16'h0F18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #352 515324fc-ad72-463a-bfd4-b4682c0a0c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 32bf7d93-8fe5-4c3a-8f14-c82472aa0e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 292bed39-bdc5-4374-9304-2653e1cee2bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 df9762b9-9a91-47d0-880d-b4f44bd0adc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 fdc075d8-06c5-4f13-b47d-f1b475b716d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 55d8fff0-39f4-4926-afcc-e08109d77620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 a7185435-10de-4106-ba30-03ed85efa11f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB666;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h98CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h4BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #353 07af07eb-9d0f-4219-aa2f-ff9328918ea9)");
unit.assert_eq16(16'h98CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #353 9435dd21-840f-4486-b9b8-22b4b548ba5e)");
unit.assert_eq16(16'h0A73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #353 6eef235e-99fe-4510-a127-2d2694643943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 8d4fbc39-26b9-4080-a516-fa8073b2c0f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 0127ea20-01d9-4d00-9b79-35c505a0c7bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 7466cea4-df42-463e-8ef1-37d96eb19abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 f05db773-71df-41cb-b643-892f93f14390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 a894e537-6d6b-456a-81b7-7a24c524c190)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 a9a32604-8761-4940-ae20-79ff81d1c9dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h6367, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #354 53273748-c882-4c5a-a678-89895a0cbe17)");
unit.assert_eq16(16'h65AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #354 4e0f99a3-4265-4d60-aba6-cf2d50511362)");
unit.assert_eq16(16'h0EDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #354 ba370bce-c8b5-4f0f-acfa-fe2d399713c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 08f19c41-d764-4a23-9a28-8ddee3202d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 a58dfc82-3a38-4405-bb8d-2fd671b21997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 cfa5dd2b-7e9b-49fc-8fc5-dd423c223144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 a70d5c89-1e8d-4cc9-a98e-6bc7a7a688a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 5db1b728-f546-4f50-819d-bdc7ba550621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 cb1e6d4d-7e01-437d-8f6b-74f1baff2dd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8893;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0719;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h2F3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #355 4d56a861-7036-490a-b583-cdb1113fb3ea)");
unit.assert_eq16(16'h8893, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #355 4b77cff5-f671-49f4-98be-44850daea692)");
unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #355 404811ae-d80d-4341-a084-b5b2b75bfeb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 23c7ebab-b6a8-4cc4-b9d6-1953ab38b84a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 0b7076fd-eea2-46d9-a967-b58adbf59884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 e20e921d-68f1-4a28-9251-257a0e80626a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 6eadd73d-09e5-49ce-a784-37bd2879ea4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 53432fd0-346e-4387-8752-f91b3ce0d405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 7e45cded-6ab6-4884-8981-91bb8d0b2212)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB530;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5EFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0093;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'hE55C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #356 64f90db9-b83b-443d-8cd3-2a8822d89fec)");
unit.assert_eq16(16'h5EFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #356 6099c533-9312-4881-ad8a-dff18e8928b7)");
unit.assert_eq16(16'h0095, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #356 f088b768-b0a3-45f8-be3d-21eaa93edcc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 579c8256-b586-494a-9c04-4852e5cd7702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 de2bfff9-e3b0-456d-9215-3bff64ec8daa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 5300febd-9769-4b21-9585-215f56b6a544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 2eba98f9-a475-4e5e-a9c5-b2712a9a9abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 edcd1ed4-23b3-4d3d-9867-ead0cb5b6649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 130651e7-b92b-4245-b38d-a94ef4e4d251)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5293;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h003B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h5553, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #357 e3eeb743-8a08-439b-8d16-fddca3ceae40)");
unit.assert_eq16(16'h5293, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #357 112b6fed-8d92-4ac2-91d5-67de4a4e1d5c)");
unit.assert_eq16(16'h003D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #357 335b509c-b8a8-4a96-8160-58ea88927226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 e72ddac6-bf4d-4555-a55b-1abce50fe0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 c10ed685-c7f1-41b2-a345-a0ede3b1bdc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 48a593f8-f2d4-4617-be7c-44365a252f4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 bc026dde-d5ab-4182-b14e-ad8a474fa213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 ae9074f6-0894-4cd8-bf39-02e8cae6c715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 e1395166-2577-4ec2-a55a-c8e574e46822)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCDB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'hB020, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #358 df28cb59-8aeb-48f5-a063-ba404712723c)");
unit.assert_eq16(16'hCDB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #358 00526deb-d19e-4ec2-bd29-0d8ce1b3c839)");
unit.assert_eq16(16'h03F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #358 5dd2ff03-424a-4005-8d29-8130b5bd87e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 d2789aec-63a7-422e-a7ea-188176e97b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 3537ae40-3a26-45e4-b0a4-34668f83f474)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 eff41584-1ae2-4fb5-9f1a-73d4db8a3fa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 e2c00567-30f1-4168-949e-d64d018465ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 30315122-2c0d-4ef8-bd80-444d48cfa89f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 c1bcc850-6957-474c-b78b-25ed52c94d71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1324;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD863;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'hC359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #359 6ae8d2bf-dfa5-4187-a5f3-5cc984abbca7)");
unit.assert_eq16(16'hD863, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #359 588fafcf-2c8d-4330-b476-45a9f6cc0172)");
unit.assert_eq16(16'h0D44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #359 669e75e7-9ce8-4def-8836-fbbd985e5b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 102428d0-230d-44d6-85f3-511dcf96fcb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 bad812fc-9bec-4e7a-9706-f3637a21ae26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 5e213bd4-17ef-4e9f-ae11-b75d8952b1b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 a3c788b4-2ca2-4d7f-8445-5fb6fea4942f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 278df483-2660-4a5c-b341-bcfd4b444438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 014cf44c-a694-487a-8bd8-e7db54e1d9e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7760;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'h5381, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #360 8d4c6910-cedf-4854-97bb-8c80f2d29170)");
unit.assert_eq16(16'hFBB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #360 221594d9-a65c-4d24-be42-5e42d06cbddc)");
unit.assert_eq16(16'h09B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #360 251197c2-5c1a-4bb4-bdd0-fc3974ba532f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 499c89ae-a968-4ff9-ad95-e505065d5256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 d3ca22c8-d014-42b8-a986-ff5a998202be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 bb4262a5-d12d-4f6c-b2e7-9d50db898362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 e869ac38-1a5d-42d5-ac87-ff9a0507e957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 beeac4dc-b888-44ec-b4a0-d5bf26c9bb95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 8769d0bd-9d1a-4235-8cbf-f00a1df346d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h63A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'hFEAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #361 08d1c938-05c9-4326-b4e1-9b556cf546cb)");
unit.assert_eq16(16'hCCBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #361 b4b3852b-cfb5-4707-840f-4a8344c4d418)");
unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #361 851c6ff0-6f0b-46fe-b138-3d29969ae839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 45165731-f370-46f8-a8ec-fdf68985ec15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 9c271edb-e3ed-4bf7-8d69-c39cb236dc54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 9c8100ee-5a90-4083-ba6e-91cec3a7b4e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 9374f295-be79-4656-a6eb-8d3833dc5404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 284d278a-557b-4b25-b2e8-c12e8f5401a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 d25bc91a-ce46-445a-9ecc-64e29efce3b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8498;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h009F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h2BED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #362 9cdd0d7e-a1d6-43b6-8218-e3777d55c717)");
unit.assert_eq16(16'h9DA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #362 6e28d8f6-1110-415c-8a7f-debdd0870a44)");
unit.assert_eq16(16'h00A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #362 eba642af-3f76-4d9c-a446-8ca0e0db545f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 2fdd7247-7854-4b2f-b2ff-f5d0c0d91358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 b49500ab-d5ff-4026-9c9a-1aeb9ada8770)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 df042327-f039-443b-8e47-e351636dddc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 c72e2002-d197-40f6-bb18-ca48645aaf25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 353b7663-9c31-4add-ba0e-ced4e1bc86cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 f2c4f331-c3a7-4456-ac36-46071d0b9059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hADBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h32E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #363 fe660585-0dd0-458b-bfd9-d4a74033008e)");
unit.assert_eq16(16'hADBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #363 83738357-dfe0-446d-8002-040195a52335)");
unit.assert_eq16(16'h0A2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #363 058d8e86-7a5a-4dea-bae8-89ed91f5c8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 48cb7506-a334-44af-a52e-1cc2f087b58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 06d178cf-819c-46b4-83da-db4ca3839591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 ab91f930-644e-42c1-8908-93273ce4ba37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 6f0986b1-1bb0-4a79-9637-7ad3d6270908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 6942a36f-673e-4058-b221-d278ce9463ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 3e28b2ad-fc6c-41c0-90aa-15d27e72c0dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h47B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h23CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #364 2ec9ef91-c870-492a-af1a-070f44fc8b1c)");
unit.assert_eq16(16'h47B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #364 a146142e-192b-4461-8e0e-24a3e6d2182f)");
unit.assert_eq16(16'h0A40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #364 e74a2baa-1ba4-4d66-8bb6-edef2a4a7dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 d9dcac6e-f501-4d26-b059-02009264bb7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 0c19629b-7777-44a2-a7b3-6479dd861907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 7b8a2ed0-ca65-47e5-9e77-a74118c2f9c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 3904f6bd-32c2-423b-aa51-b94ee39ff4eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 28ab0b60-12d6-4242-899f-ce2029c605b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 6f810060-c585-4a26-b5e2-c249ef93bf79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0402;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h057C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h1A1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #365 c95500ec-c972-497a-bdfb-cf4d8e0cd408)");
unit.assert_eq16(16'h0402, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #365 a753a8c8-3471-4915-a33a-d648e38c2474)");
unit.assert_eq16(16'h057E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #365 a996d5be-90f8-45f7-8192-bdf22d38f8db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 1be93abe-fca1-454b-936d-b49b98ea3667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 7eaf4464-9649-4455-b521-b2d8e5aa32f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 d39edadd-3a21-430e-bfe6-57bfb73deafd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 7d7f08e6-13a4-4736-8902-d49ffb0cfd1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 05ebdf3c-b7d5-406d-9c28-af19113f7698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 db37fd31-fa75-409f-bb07-9f93e8420aac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7555;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9923;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'hF499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #366 ecb5ac9c-ecae-4fc1-98a5-dcd74d2b3c8f)");
unit.assert_eq16(16'h9923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #366 f2d723dd-74aa-40c5-bb5d-1cfacd478977)");
unit.assert_eq16(16'h09D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #366 55bbbf01-b2af-4b55-8f4d-1e44deeb1600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 6e77ab3e-c3d6-40d0-96cb-5058c0fa79d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 7809e26b-125d-45e6-a7d4-906b66baed17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 7337d045-6ca6-4c99-89bb-4db68cdfeb2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 c76b897a-abbd-49c4-9da4-ed35aabcc973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 8171921e-7098-4fec-8642-1c9630c6856f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 c6c67917-1fbb-4c85-84a8-76549e2a073b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB4EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0036;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'hE8FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #367 58e0bee4-3c37-49ea-8dc0-9abbb9f51eff)");
unit.assert_eq16(16'hB4EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #367 5ae1cc22-fe03-4b06-ab72-d393d8e8c529)");
unit.assert_eq16(16'h0038, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #367 80757520-2920-4e01-98c3-b58348fccaf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 b5a6701d-eaf9-4f30-b9d5-db9e15ad46f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 0ccb225b-cd1f-4340-ae37-df692d6760d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 96c173af-b77b-45bf-888f-13092812bc6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 b1191daa-bddb-4a99-bf14-849f6dc61f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 0b3ba09b-04bc-4372-a6c8-7319f83f82cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 54e521f7-239b-4a2d-8e81-05e4477d6062)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0278;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h1752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #368 ce828492-30c0-4cc8-95b8-acc725e7f53d)");
unit.assert_eq16(16'h03C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #368 59d3b77f-8e02-40b1-89ef-2adb40636dcf)");
unit.assert_eq16(16'h027A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #368 5f48cc4e-c129-4057-a79e-8c36b9282505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 78ab9e15-3f00-4e89-b2f6-1ebbf2f75546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 78274b4e-0d5b-4487-b4c3-6ad5ca989da1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 f9de2538-ded9-43eb-8cbc-93a6ac3fea88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 f63ebc4b-57c4-484c-ba19-c75518c7e5e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 c2b43866-7af0-46c9-95bb-71c6e03e1f6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 e202c887-e7c7-4e06-8d05-c147a48a8b82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6815;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'hDD6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #369 af72e299-46b7-4378-94f2-4d142415be02)");
unit.assert_eq16(16'h6815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #369 a61169cf-842a-4747-b442-c2ecc1828cb0)");
unit.assert_eq16(16'h0FBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #369 53eb4a67-6ef9-428b-9ef5-ebd509bccdb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 09a20c6a-4bf7-4e2f-ad21-0bcc3c8d39b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 07ffc220-4d7c-4038-b038-0f5d622f35e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 857f6c9c-bf70-4d84-ab74-37372267347b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 a2711df1-34b6-4873-a952-d43555a7e28e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 36748ee5-f464-42c5-9454-0bf71a638152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 b9d806f4-670b-4172-bb54-07e2fe193d88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h160F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'hFA6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #370 79957d03-3ded-4540-87ed-b4225ce7c261)");
unit.assert_eq16(16'h4E30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #370 1fedf7c6-5737-497d-bb52-6c1a356347ed)");
unit.assert_eq16(16'h0E11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #370 10f9ee44-f088-4821-abaf-195ad0776f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 ba93a02e-39b3-409d-930a-c1aedc1da262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 2cf4ea95-5da7-4d94-ac2d-0f0e9545689f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 826ec0cc-5f08-4b9f-b418-bbe0d4fa7c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 3597af3a-309b-4f9e-b175-04c43c9b2d64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 8cfe69c7-9a15-4883-80a2-06918df407b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 5cbf1cf8-cc87-40b2-a0fa-f43d3c727b30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4224;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h4395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #371 590f5ca4-586c-403d-9ac4-c37e1516f8df)");
unit.assert_eq16(16'h4224, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #371 d98ac199-2c7e-4670-a685-94ea55a3e45b)");
unit.assert_eq16(16'h0FCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #371 14c2a979-3616-4a94-bbb1-12666bcd0e50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 ffaddb0b-f117-41db-aaf2-6106a74f18ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 0bc194fa-ea8d-4795-bf8f-7ad69021db16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 a09dc1d9-47e9-4ef4-8e45-d7913ab71030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 ab5675c8-be31-4d3d-8f99-01d35500faa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 559ac1a9-b8d7-4634-ba00-98c1ffb1e491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 c0922a80-9adc-4764-9223-3c2766861a8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA306;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF59E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h6EBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #372 f1acf5e8-76fe-4df1-a961-d4f85032a010)");
unit.assert_eq16(16'hF59E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #372 818e4517-24ec-41e7-8949-eb1a11972d8c)");
unit.assert_eq16(16'h00E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #372 c624881a-204c-426a-a3c0-3be2a8166548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 192dba58-2f82-476c-9d0b-e52114de49e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 63f37456-a62c-4135-a8d9-a9e62723e2b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 8e120c5a-f607-4ad5-bf2a-5171ea870a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 254edf95-9475-4012-9446-4ebdb6fe2348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 00340b88-110e-4623-826b-55b6dd899a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 7f05b54a-2dca-4c00-abdf-160de1d50bc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2815;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE418;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h3401, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #373 3688f99b-97df-431b-b7c6-866a60ea8ad6)");
unit.assert_eq16(16'hE418, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #373 745666ef-7d28-4cf3-9607-2b4352e43a7d)");
unit.assert_eq16(16'h0E17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #373 cbd779ff-2afe-430c-b320-58d68ce77226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 8be70ddd-cde8-4292-8578-21a0c3655613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 fc75b030-c8b4-4dc0-8a67-36c55996dbc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 8653f334-fe53-4143-9de1-763b8ddad4bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 cc18541d-354d-4b86-a7ff-027545cf2933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 9077d398-49da-443e-8207-80d5422f77de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 41ce12ab-663c-4b66-80bc-a6dfa05ed04a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1FB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEBFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0021;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h5BD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #374 d9c61fa2-5c8f-4168-97ec-7b02a9d70680)");
unit.assert_eq16(16'hEBFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #374 032ed8af-78b7-4893-ba62-9f0dada1cdf2)");
unit.assert_eq16(16'h0023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #374 f937c6d6-bdde-4905-8ffb-a26064095e4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 bdc8778a-ce7c-4aef-b742-d370edc3a5bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 9a9b770f-fb0d-4c3e-8bc1-5b9f39135f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 0065e0cc-c464-4ceb-a257-81a180cc86fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 daa72dd7-8851-456b-b278-d4795423c681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 4003d6d6-6e6b-4207-aa1e-d919128cfdfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 61d1c2d7-3591-440f-aea2-089ee0056ef7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'hA1D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #375 6a16b82c-a86a-47fa-83b8-d5ed5df996e5)");
unit.assert_eq16(16'hB8CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #375 fb86262b-9d77-46eb-b27e-79d7d5ed6adc)");
unit.assert_eq16(16'h03BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #375 a99a1b70-b090-43ba-a06f-fa2a2379d5b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 644c5f84-b175-477c-b872-7afb152ec4cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 07b2f238-39cf-448e-a17a-01ba5483d045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 a4bb6ca5-bbed-481e-a8c0-01700e1fd0d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 d297005a-1ed8-4b2b-a871-2b5373692caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 5f2586f2-90ae-4353-8702-a6ee81ad8fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 f7988b2e-ca2d-4a54-ab71-96685b7deed2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h28EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h483F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #376 78362d02-36de-483c-b2b0-28d3680a9757)");
unit.assert_eq16(16'h1B51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #376 3e1d38da-4b1c-4b0f-9c34-d2b4c4f17a93)");
unit.assert_eq16(16'h0D72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #376 969991dd-b67d-47ba-a7c7-cc738b3525f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 c3e9fd8e-b602-498d-b3fb-86d41968598d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 d519f966-c502-42d1-b806-d64692f8044b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 b62dc4ab-b8fa-4281-8b8b-c12fe871734c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 0c177202-de6b-43f1-871e-003e255a81cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 270219cd-0bb4-4c02-89f6-0e716b3dbc16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 7763fe7b-86ba-4cbe-bc23-deb7ad194131)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8109;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'hE9A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #377 4d61af3b-edcb-40fc-bdf7-4223890cd44f)");
unit.assert_eq16(16'h8109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #377 dfcf959e-96c7-4710-a5b2-66a465c5c371)");
unit.assert_eq16(16'h0D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #377 2c2d2f33-4adc-4c00-84fa-1a9268311c46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 96356a1e-404e-4cca-99c6-f2086238bd8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 d17d8212-5503-4eff-8932-52a86c473b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 39b0fd70-133f-4fde-8228-391da34d6aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 da287225-b740-4713-be84-77dc19a8f308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 2a3db873-faca-428b-8242-77ed3b7f0caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 88da4c7f-ae23-466a-993c-b03cba925edc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'h581A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #378 70295c36-977b-40cd-acb3-06a52c26f52a)");
unit.assert_eq16(16'hBAF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #378 bcb43ea7-ea32-41b5-8b9f-ed619a2692d3)");
unit.assert_eq16(16'h08E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #378 1dcc44ee-e0df-4e5a-8c27-5112b0e0064e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 52c4d8a2-5185-463d-9fbb-8842649c776f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 9dc9da18-f4c2-4273-ab66-5a31f92be1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 aba2a4f0-92ff-4a3c-aa73-05f4319b375b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 7c4ea911-0f52-48e2-b539-9883ff9c4585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 6dfde37e-7697-47e1-90d6-8ef2c0e94973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 47373590-92e8-4621-8d20-94681410419e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0950;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'hFD7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #379 dab1a383-f0f6-4fea-94b3-d1994c6b4b6f)");
unit.assert_eq16(16'hE069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #379 510cff15-b704-46ac-b5ab-60aeb0bf3349)");
unit.assert_eq16(16'h0952, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #379 a9f5c460-50b2-43e5-8e8b-32b27db343f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 7ab08e34-40b2-4a75-bff2-16de11026770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 8ef6a1dc-70e7-448b-9a1c-82a4947f8ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 b66f4726-93aa-428e-a75a-7a86e075bfc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 5cf80e17-0d86-45ba-9803-8fb2395c8b70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 949fce7b-ffb7-4774-a8e4-4a88e66d0642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 f0326ef0-b1cb-48bf-bedc-8a8d5d3115fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h8BD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #380 0cf555c0-a405-4232-ab73-923bf7b833ce)");
unit.assert_eq16(16'h6F3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #380 00dc4804-7182-4c0a-aecc-8e7e0ebd1765)");
unit.assert_eq16(16'h06F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #380 8b4d5184-856d-4870-9193-dfbea8bf8979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 494fb407-c099-4b71-9a68-e8be67d3c75f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 54bc947a-cfc4-4079-bd0c-ddc3aab8f07a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 65b3041d-03d6-4e6a-8020-1c31c547ce63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 985abc11-5a3c-43a8-8f31-060098316af5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 8fbf1473-8ad7-47af-ab43-b77f0141b119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 f8b68cb4-1fb2-4404-8efb-f8364b5fb0ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1372;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0138;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'hA7C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #381 fdcabcb5-3557-437a-a9f7-36756518cb10)");
unit.assert_eq16(16'h1372, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #381 d96f0d6e-0fa1-480f-83b1-3fdd6f190400)");
unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #381 fccdd572-2dd7-4eae-ba74-19fb84dd7115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 4f02e9f6-08f8-41ad-be7a-c8d358dafae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 f5871e08-5a1c-49bf-9c8f-c39800ff3992)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 f1acd587-c128-40db-b211-18c19489b5ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 c9e5cf0c-bb91-4815-9239-abeb92a7f8a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 d90dc432-65e6-4116-9e51-41ad42e980ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 934bac46-7944-4624-8654-9fca2832aad8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h398D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0622;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'hD599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #382 30158d04-258e-4dc2-86c0-365ca1f00a5e)");
unit.assert_eq16(16'h5D21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #382 0391ce50-8fc9-44d9-a3a4-99ba1677bcd2)");
unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #382 285480e7-75ea-41b3-b2d2-b568203f55ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 5b738f58-6f41-4242-8bf0-f58c092f0a51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 c348fe08-8ffc-4cab-9e08-afebcf4354fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 17e7b61f-99da-438a-ae94-25afd12a9ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 79bf84f4-a7e5-47e3-a88f-6f5bdea9d6e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 9341c9c3-9946-411a-b5e4-29c7edbaaba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 276e26ad-c3ac-46bc-a7e7-0331c551eb4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3CE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h080F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h6E6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #383 4d67556e-82c5-43eb-b3d6-3821de13c664)");
unit.assert_eq16(16'hBD9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #383 527087eb-67f6-42f6-8b92-eb39a29f8c8f)");
unit.assert_eq16(16'h0811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #383 d40df754-32b6-40ca-ad99-f112970ff443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 c2026465-6b36-45e4-8d36-088bebf3544f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 a4cdf2d8-610c-4d90-b657-36887ebdba15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 c4fc19b9-76b2-41a1-990d-1191b03fa549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 140f368d-74df-4840-ac97-093a21df0ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 4bd1af4b-dc75-4ca5-8dd5-f9ac67219114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 3979cc84-0c3d-422c-8b32-9b444b0fa0cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE9B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'hE444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #384 41eafe58-b3dc-430d-8d13-3b068cb43470)");
unit.assert_eq16(16'hE9B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #384 8f00b8a7-2639-4be1-b5ab-2512e8793a57)");
unit.assert_eq16(16'h0B94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #384 d2af8ada-1161-4e55-a961-3529cd19f324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 63e833cd-a38f-498b-8ec3-bf0e5f402e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 64c8d1aa-26d5-4333-81be-10c8e91daa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 8cea9081-ec04-48d3-81de-aef9982d1e14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 3e667737-4b61-4fe5-a5ab-74fba44af659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 7b39fbab-0e31-4af7-8973-c016fbfc3364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 2e75340d-86c7-4191-9ba2-0d204113db92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4345;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h096E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h242E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #385 e524bd5a-8efa-48df-b934-69c2ea5696d4)");
unit.assert_eq16(16'h4345, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #385 2fe7101d-1da3-4f26-a2d1-f57d31bc0512)");
unit.assert_eq16(16'h0970, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #385 66a56faf-aa74-4bad-a804-73fccc2abe55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 ea46fbf1-2371-4c1e-9620-cc9bc4807ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 aa6c637b-5d7c-406f-b5fa-bf5c83f070c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 d8fbdc2d-efc3-46aa-a84d-ceaef63fa2cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 8572be4d-c993-495c-b060-9f15013ac8f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 0f570579-02ac-4fef-9134-da406ab0a225)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 e4b2990a-ca83-4cd6-94d4-5b37f2e49d80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1193;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h57F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #386 d25305c8-2b14-467d-a2aa-f9af7b6696c0)");
unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #386 acc78df2-aee7-47cc-9a11-3fbcf02d0b9d)");
unit.assert_eq16(16'h07A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #386 12aceb8c-eca9-4660-95c7-d4b9c225c89a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 986ef267-9708-4c14-be52-e962ab67783d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 2d9a6c93-ff1b-4d99-a23a-6269376abad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 3286bd2c-bd51-4198-89eb-0e462254faec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 6c3e6718-6c2c-4b27-b460-5e84c8cea644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 e46ac304-c6e8-44c8-9be7-a3c03769429b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 40e35844-4160-44df-a939-296e150cea29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5772;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'hF48E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #387 e0ac2932-9f24-4fe8-9bb8-3615579d9b2b)");
unit.assert_eq16(16'h5772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #387 73b03b62-03d9-41af-9f8d-10e6e12a9100)");
unit.assert_eq16(16'h0EC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #387 56434e30-7c33-4b69-b2c2-8658f580668a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 ba78b3f1-6ba7-48ce-943f-07dd2b8e7b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 400bc952-8300-41a5-92f6-feb75c302b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 30192292-f092-4c66-83f2-7b9c5fc47485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 0860cb61-7d3a-49f3-8b0b-672fdd4008f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 2294c112-7dfc-43c0-9df4-5613cc9820e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 91c1d198-5578-4c5b-8e80-c016477affc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h045F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9EA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h8264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #388 3d6e2bba-dcd7-4b19-aec2-90bb43f70e6a)");
unit.assert_eq16(16'h9EA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #388 ee14bc62-8059-455c-b753-7082a52986a1)");
unit.assert_eq16(16'h016C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #388 450d07e8-6ba5-43d7-acc6-60cf19809668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 6780a9ef-d6f8-44a7-91b9-e585652dc1ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 04bbfbf6-d5a6-4c02-b271-369b0c06981a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 0a3eb6d6-888a-4adf-aac9-b9917cc0a7e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 792dd6f8-6580-47d0-85d6-7bba9f60bf95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 230a0109-22dd-4997-b245-9fec415bb61c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 c4424140-5635-4d07-a508-56f2ab705035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB661;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h2995, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #389 82671428-98dd-4ab6-8656-4136a224aa3a)");
unit.assert_eq16(16'hB661, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #389 6589fbdd-e8a6-4c02-a0f1-68a184fcb08b)");
unit.assert_eq16(16'h02A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #389 be2a2d09-a396-4a41-b58e-1abc86c7b509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 c949d6ff-7ff2-4e16-bb08-232c06bf9402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 388803db-34bb-47d2-8890-9ca73e49855d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 b7aae629-e708-4cbf-8299-dc7c8047109b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 fc0ba1aa-7ea7-430e-9d4a-a2ecc78b1d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 ff45b67e-d39e-4f2b-966e-fdddcea04d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 1afb967f-35b2-49b1-8ab4-1c69792cb8a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9852;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0187;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'hDAC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #390 5511019d-688a-4acd-96f9-187c5ce9129b)");
unit.assert_eq16(16'hD2B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #390 2d8855f8-0b20-4f4c-8241-afd30690a1a9)");
unit.assert_eq16(16'h0189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #390 e4b1e251-5932-4aed-a51f-41fec65db0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 d47aae24-afde-4b09-a464-33af856733eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 ebc1a1d5-91ed-4661-b59b-955e1a8bc6c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 759e8ce9-e1fa-4c16-a6a9-678ba24b0cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 5fec02dc-f094-47ca-819d-6f85ce721a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 8e07f6ee-97f4-4cc1-bfa5-f21dbc0e6072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 c9b62045-fbf3-48e7-9b74-4daf51fe0afe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF4FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF956;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'h53B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #391 d43ce1a9-30ca-467f-8392-94d643724bbe)");
unit.assert_eq16(16'hF956, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #391 2246682e-7598-4d34-a9fa-85eb56ab936a)");
unit.assert_eq16(16'h0AC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #391 17a465b4-c66b-4044-a803-6cff9308d8cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 38dff353-a858-4085-8c9e-c01a2fb2ec51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 08bef4cc-0fba-469c-869d-3d9fe5a88db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 c99c1c96-44d1-4ac2-8129-6e02483bfea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 cf06adb8-3ee1-4d45-9a61-db25cbf97608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 05346bfd-3855-4160-b6f9-09a4c2331513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 041cf965-602a-4fa5-a5a3-5c8161240a39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC127;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h1672, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #392 30acca8a-0c5a-4840-9502-4f6bea46f962)");
unit.assert_eq16(16'h0AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #392 7c53d073-e409-4305-858c-f9ea07cfb940)");
unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #392 93964c26-6408-47e6-84f1-e8d20121c26c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 881dafe3-0c8b-4e04-8f6f-8b7b9ef869be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 6664fa0a-726e-4a3c-bf01-cfb8fd9ed684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 94a8cebc-1e6b-43f5-ac0d-a9d31f4847b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 1779ac1d-e222-47d5-a8e9-bc2932189967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 8ce69177-357a-44d8-a560-79049c3f8db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 0c9a1efe-7fb4-4a18-8eab-da80fe926cf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h15AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h39B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #393 15b87fa1-55e0-4de6-862d-fdb4869b2d1c)");
unit.assert_eq16(16'hDA9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #393 84ba26f2-afc1-4532-959f-ca53a7b9bfa1)");
unit.assert_eq16(16'h0571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #393 405c4657-230c-4d33-9c30-d06c1fea0f76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 5f0dd913-033c-41da-a03d-869266196cfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 d693f06a-9935-4a6a-824d-bc19e61acad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 6b9ef4c9-9590-45c5-939e-f17f006fdf29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 2865579f-4fc3-4d68-a6f8-9525d6a7e8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 c875b3d0-b72e-4b23-92a3-3bb69bf6ae55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 29f9dd7c-30d4-4bcb-88d5-e7b37ab67330)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB172;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE8D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0109;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'hAE06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #394 f0184a04-351f-4591-80ed-d52f162aaac7)");
unit.assert_eq16(16'hE8D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #394 55615d17-53e5-46fd-a54c-1801cd9584d2)");
unit.assert_eq16(16'h010B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #394 dc3944a9-6071-484c-9261-636aa177fa17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 199e3236-872c-463d-af4f-840ea8e6a580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 de79b5cc-67e8-4cf0-a6e1-e998b208181d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 2a60e887-5eda-4363-b535-492317cc1829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 aaa63124-adf6-4a7a-b15e-b416ff3cd293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 594b934e-2a95-41ad-8b9f-8150691f0a00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 596febe5-4d1b-4982-b0fb-bec294651e5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h969B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h986C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0181;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'hED55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #395 c8ba9149-c1f5-4e69-ba5a-40eb5072fa16)");
unit.assert_eq16(16'h986C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #395 a5f01fe7-23b6-4de8-9165-1baf11c376d8)");
unit.assert_eq16(16'h0183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #395 0dd5f3d0-4a6d-4923-a25d-35dc2cde29a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 ef6e73db-5765-47f1-bc2d-ee976f9e1645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 84da6210-65b4-495f-bb26-3c0ec9d5f002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 aabacbb0-8ec9-42e7-817d-68b937ba83f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 98df5d52-1830-4382-a140-914cb0f92397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 3e0bd262-e0cf-4724-ac1c-464c780acae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 19e9e47e-49bb-4cb2-bbda-19391b045243)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h298B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h9229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #396 2bd42910-9418-4f9e-a7c0-f13ae3833d77)");
unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #396 201d545d-6a7b-49b9-ad8a-d128e1b6263c)");
unit.assert_eq16(16'h090C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #396 4ac1c4d7-e203-465f-8761-3a513b184f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 1b1a0dd6-83e4-4137-a5f6-1770b7b99b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 8f69fc63-7cb0-4539-a8f1-f6c6e240f3a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 996f6c3b-8761-4f3c-800c-552c7f7c3364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 c0fdde03-e9d7-4954-8e40-acf8402b8f22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 0005a959-890e-45b5-bd49-632f6eb654c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 efaeb266-0481-41e6-a41b-4fbc68cbf406)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE265;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h1BB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #397 034b7dea-6bc1-495e-9e52-4b7d9a8fdf8b)");
unit.assert_eq16(16'h41D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #397 2f6ec48b-733f-48fa-9690-5641b07a5701)");
unit.assert_eq16(16'h08A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #397 a04f532f-4aac-4fb6-bfd9-31b37b9ad021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 40cbf1bd-ef2a-4c9d-b26a-0bd5eb24d22d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 4cd3e80f-71e6-4165-910b-68bd05bcd720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 48294bb2-4bdf-4bad-8bdd-5f96f9b23d51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 cacbb22c-9286-46dd-bc41-6a0ccf0c7bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 8adebfcb-43c0-4474-ab92-759f5550f1f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 17b7d493-742c-4c04-b590-e27f924cffef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h70F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4692;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'hE30C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #398 60299297-45db-4be6-ba86-ed0303d74565)");
unit.assert_eq16(16'h4692, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #398 e2df575e-f789-4456-be7e-19c581c4a9f9)");
unit.assert_eq16(16'h0F64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #398 b6a85237-e466-44b4-b929-9819abf2d8c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 f69fd0c8-a1df-4a9e-bb43-2f8276fb62d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 9839000b-48cd-455c-b0a8-f5c1fe5c7753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 b72bc9f3-8ee4-4a1e-9e74-4300cf47198e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 e750e5b5-3f50-4799-b48f-1fe809a686ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 13284cae-294f-425a-a8af-18a8b3339409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 8ecc02dd-f21f-4af0-9a24-5e778c37fc44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8CE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8705;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h81AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #399 8f44299d-4ad1-4b9d-ae2f-82637aba5ac8)");
unit.assert_eq16(16'h8705, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #399 ec3cbe6d-6e47-483d-88f8-65f7baa0f809)");
unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #399 35f35605-7177-422c-ab1a-c40f07f1d703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 30839c5d-76bd-4f7d-a16a-fcaec5e7048c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 f910509e-792f-4bb7-bd14-cc09ad905f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 2b9e2f27-45c7-486d-9137-8ad808033051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 7926ca8c-0270-4798-9a51-08a747c8c2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 6a40bfec-7888-4419-99e4-f49d1dc59a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 3c15b0f3-21e8-48b8-be9a-6078688a9f79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2ED7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'h7758, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #400 7be9647e-d82a-4d06-b8a1-e1c89b61d53a)");
unit.assert_eq16(16'h2ED7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #400 7509bdfe-9a72-4ec5-ac72-8a0d77973781)");
unit.assert_eq16(16'h0F23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #400 5f82d55a-3ed1-4e28-8fac-1d1ed25a3974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 a7066224-f816-488c-a2f3-5bfbf698c1a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 6f7e2e33-5149-49b4-b5f8-7b248101d33a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 22b2ca09-d9cf-48c3-8864-1f6fccadb445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 2757a2a2-e173-4784-b19c-2b1e55afbab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 fce3f5c4-d49e-4ff2-8713-3ccb1c154ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 9b18ae6d-adc9-4a3f-9392-65b86301b222)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA729;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h6396, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #401 e41e1124-a185-41f8-8302-879b6496d662)");
unit.assert_eq16(16'h3B2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #401 a7f598b9-041e-48e7-8268-b56c1dcacc27)");
unit.assert_eq16(16'h0EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #401 d333535a-588d-46ee-ba57-a9b6bb6266a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 3bf1228b-99f5-40c2-b388-463584cc9083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 5c772a4d-2b3d-4376-89a4-c1e03ad4929f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 154b435a-e944-406f-96e5-9cf082e2673b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 654d785c-20d2-435a-b0c3-720973f7792e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 db3cca0d-b76e-49bf-b86f-698002609b75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 88a0e471-a5c2-4f23-bfe5-8e74ea3bd468)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA4AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0076;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'hFE51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #402 4ff9e0bd-799c-4f09-9191-bba57d4da516)");
unit.assert_eq16(16'hA4AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #402 bfdcb011-7ab7-49cb-a2ba-7cd065d0de9f)");
unit.assert_eq16(16'h0078, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #402 5c3972a6-f8e5-4ee6-866b-be165bcb44dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 eafadfcf-8c01-4f98-8a06-a4ced225f3fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 3f72b356-2bed-46a1-a994-799a0fb26214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 bc23d2fd-54b7-46b7-baad-c0e3d95b8748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 d4054c9a-319c-472e-b7fa-79525ceb8ba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 b03ef7b2-b359-4691-b055-5ab36040d6d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 301d95a1-7538-4848-9c0d-5f369603e21d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF84B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h489A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h1ECB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #403 66504045-6074-4393-a1f4-e5795ad8f6e0)");
unit.assert_eq16(16'h489A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #403 db9c3e86-9af9-4c64-94f7-3ba19db179f5)");
unit.assert_eq16(16'h0F9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #403 27e912da-b1ac-4fbe-b29e-3cab1d7533e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 9b795ff6-6c25-44cd-8f25-1b79244468f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 f97fff8b-2ed6-4a48-a042-61e62c6bee2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 6df7e2da-48a0-4ad3-a608-6ade5bd20106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 6b3ea7b2-dc5a-4be7-86e6-9d786ab1b27a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 e6c75cac-5d3c-4a7f-93a7-0215135617a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 1236b1c2-89e5-471d-830f-64569e3f2cf9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h120C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6272;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0625;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'hA98F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #404 65b77c63-c377-4e49-8f1b-13afb003331c)");
unit.assert_eq16(16'h6272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #404 aba75db2-e827-4cba-8986-0184628f766d)");
unit.assert_eq16(16'h0627, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #404 f64d1d98-de3b-4791-b892-48781940ae13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 0b50bd40-24db-474b-b56a-0f370f239d69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 d40ffa6b-7fdc-4295-960a-064195ce0fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 4ac00d95-1e06-4782-ad72-4c38c60536d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 3da88b3f-581b-47de-b48f-24d8ed0e5bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 dc3766ff-e032-48c6-8ea9-ed533088b989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 e595c307-3967-45c0-8660-da9cb5aa46c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'h0143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #405 633a9751-7211-441d-8241-197e60cbe723)");
unit.assert_eq16(16'h0F32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #405 45674183-0dfc-4c5a-a01c-feb85cf9fbc1)");
unit.assert_eq16(16'h0B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #405 bbb1ba67-1df9-4fa7-8f01-733ac7724467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 4dfbb977-2c09-4450-b956-6625389487c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 05752142-0487-4e67-a41c-cc2910ddd3c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 fb1b6d6a-fe6f-47f0-a100-ddc07ea72c11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 2cc5b713-4d66-4f2f-9525-dc95c1ffb6c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 fd87c9d3-a8f5-4c4d-ab7a-d6360f0e326f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 d7b1dd4f-a338-44f0-90e2-b1aaaee3f94b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD203;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF25D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'h0006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #406 c48917a6-15b0-42e4-aa5c-e6fabb46b12f)");
unit.assert_eq16(16'hF25D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #406 a575d1e8-0681-4df5-9f61-f09d8fd92d44)");
unit.assert_eq16(16'h0B2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #406 0d8e3ae9-a917-4a46-8b5a-f987a4b3f936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 a8fc3675-e0df-4f0e-bf1f-631919dfd106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 4e070330-65ab-4076-b2aa-f17f9ce206dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 443339dc-0d65-4e61-bfc7-b9d59792856d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 fb3d02f3-9895-425b-9a3d-e5637874eba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 6af22b1f-b673-47d3-a4d0-d1277454e414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 b66b5083-7dc8-4a2a-a243-b20387b38216)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA4D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h77CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0336;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'hD98B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #407 fa5349f8-117f-4115-ab01-b850d643bc2d)");
unit.assert_eq16(16'h77CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #407 86e39199-f19c-40f8-bca5-0ed8cefc94a3)");
unit.assert_eq16(16'h0338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #407 546a495f-4012-4388-bf45-8c83dca9a980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 4a1904c2-509b-4be3-81fb-454441f44610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 0366c09b-a00a-494f-9cbd-e3b348b5ee79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 8cae5d10-6dcc-4df9-840d-7c7d3e2f4ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 ed6a0e67-a209-4e64-88b7-95935c80c877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 63f54955-baf0-4793-ae1b-9bb540b60c12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 c1c2a9c3-3963-45cf-a92b-838a90793e92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCED8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8541;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'hBF12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #408 ec24d926-7006-4ed5-9479-cfc1a985ac30)");
unit.assert_eq16(16'h8541, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #408 119fd694-ce50-4957-baaa-e8a0b46f1442)");
unit.assert_eq16(16'h0EF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #408 d735cd92-6f59-4ee3-9317-64a4dcf69509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 8a8da315-34a0-4fda-9b2c-51d88bf676fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 7f135e72-dfb5-4663-9c28-ddc5452d599b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 45fb4f1a-671e-427e-99ad-8955863eedd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 3b73fda0-178d-4941-85d7-12db20838fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 24f595c0-a305-4575-8ce6-0eae66312ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 b264ad30-d0fb-4ac6-8215-aa193bd61331)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC261;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0097;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h4479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #409 9a676d1b-0604-4ab8-a666-79b8916ce826)");
unit.assert_eq16(16'h68E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #409 21b24256-5066-4e25-b3e4-cd9865dbd2c6)");
unit.assert_eq16(16'h0099, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #409 05035201-a0fe-4413-af1b-959293ab9dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 0fa7e652-f53d-4c6c-a6cb-0510a9f5ca10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 3e391e66-1c76-45c7-95f8-38edbb3d5fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 b7664b38-eecd-468e-81ce-e868bf279f04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 c8d0f9c3-c4ef-4566-aa7a-904749a157c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 80c189c2-4eea-406b-b1d8-8071772d0dcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 1b373475-08b7-43a6-9455-ca348b6826fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'hE55B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #410 c8625ea2-9f4a-4ce6-9b66-dd7e40004a4f)");
unit.assert_eq16(16'h9CA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #410 be284de5-eac4-43af-9ecc-c897ef8529d6)");
unit.assert_eq16(16'h0D12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #410 aaa388e8-497c-4c82-b7a2-29b09ce8bb14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 49bae2a1-f2f9-474e-9d6e-890cfed43f69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 03fe686e-cd49-4814-8d03-83c7a3b9b057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 15e8e922-b0db-48f2-86d9-c96312fb9a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 80a65e89-098b-4c27-843a-bc407f771734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 76f2230f-0c01-4647-a52e-9d8d24d9e9d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 74a1c3a4-fd65-4f36-adda-98fdf6407a8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE288;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h047F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'hBD06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #411 a84c9cee-d0d3-42bb-a01d-cbc5e89f64f9)");
unit.assert_eq16(16'hE288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #411 01631a80-b865-4e20-a200-1427c6b7e05a)");
unit.assert_eq16(16'h0481, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #411 3b5d4439-24c9-439b-a475-9458da0167c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 888fe837-f240-4692-b54a-487853487537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 943fbee7-75c6-49fa-b335-117c230578ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 12613b6a-7137-44a3-9cbc-b93b6f90f0f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 5fe8ee8c-774a-437c-afff-bf733ee8b9b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 4121678b-5fd3-4401-b77b-8dc98cbf0587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 4fd4fe6a-8563-460f-988f-e03f125def3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5948;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0268;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'h5843, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #412 63aebe5f-69d3-489b-be65-9b0057941a52)");
unit.assert_eq16(16'h10B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #412 c4ef292a-525d-4c60-a71c-5baf488fb6fe)");
unit.assert_eq16(16'h026A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #412 451e912e-198a-4c08-aa68-12eef0c0e7f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 5ff2d04e-c3f5-4be1-baac-89d1f8e7f074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 befc6c71-9518-4b08-b169-d5dcfc91c535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 052a4222-2e26-427e-a3a3-23c969408b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 63b15752-f297-4068-a8f3-878ae7de67f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 420fec4d-f413-42cc-ae1a-0646af8ebb0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 16780ef5-8b84-4def-abb1-2bd838bbff67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h74A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0762;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h5F6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #413 20d61926-b0ca-45d9-aa19-3c93af02ff57)");
unit.assert_eq16(16'h87BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #413 54e5bff1-4899-4a22-b8cf-85db2bef960d)");
unit.assert_eq16(16'h0764, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #413 ad424918-578e-4325-a261-8231e71be592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 6b70a061-8a7f-4028-a0cf-e79f421e7cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 5e6b2757-9541-40f2-95ab-c68145aab2d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 7a495b16-c847-4833-b90a-9a8b417fc1fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 c24acee5-7521-4d9f-bc25-b49ebe3c6cc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 c76f2fe4-a530-4979-a9c6-a0b3bb679c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 55265766-82b2-4544-bb10-718ae5e3291c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD534;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'h9B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #414 46a0b3d1-b743-445a-95d9-c335b482ddc3)");
unit.assert_eq16(16'h83DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #414 f21c7314-fc75-4006-ab86-cbf9631c0fd2)");
unit.assert_eq16(16'h0D36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #414 d9686eb3-3f39-401b-b64e-1e347a3cff8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 698a673f-e831-4c22-b63b-5450940894ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 55169a45-d510-433e-83bd-8cd3206decc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 dc8d5d57-0abe-4403-97da-2847fd6d7d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 2da07a42-7bba-4270-90d2-8b6f6c0e4cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 c678acd5-5cb6-4b5a-a85a-6e31a6317619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 b5449c80-df0d-4302-8e5f-3c55763a278a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8506;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'hD4F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #415 dd78a191-9fc3-42ea-ac23-38e90e56c62a)");
unit.assert_eq16(16'h8506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #415 44d5513d-6fc7-40de-a712-4007257af8f7)");
unit.assert_eq16(16'h02C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #415 48d927cb-8614-4955-a2a9-a4a4983fd011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 b148a534-348a-4850-b4cd-f759e88c3e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 2412e7f3-f2c9-4ebc-b8b1-1dc30334b13d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 94c29d2a-c34b-4f65-abfa-853303a0d5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 810fe068-c6c9-470c-afc6-17786457f313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 a3f208b6-1827-4df6-bfd2-26c01a46d94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 52a0a5a4-9a5f-4c71-935b-5c429be7a58d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h569C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'hB377, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #416 dfa13008-07bd-4d28-acb1-d6b9654b0fb7)");
unit.assert_eq16(16'h569C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #416 a37436eb-d545-4ebe-abd0-45ac37f2fc52)");
unit.assert_eq16(16'h0F24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #416 ef28f977-603a-48a4-96f2-7d2f97be1217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 c34ef713-c681-4e3b-9fad-43232a96ada5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 47d3110d-7c32-4478-b138-34d33f776e4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 f71348e3-f916-44c2-adea-5c464ceb5c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 e91fdc7d-6c27-490e-a38f-dc57bbfd2545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 3c57684b-e9eb-4e59-9203-f36113fae29e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 35b8042a-e1c5-4c39-9b5f-ef8aabbfbbe4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE742;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF418;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'hA8A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #417 f6da2390-ef58-4cfa-b767-1a179c21f084)");
unit.assert_eq16(16'hF418, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #417 4616bc85-a0ed-4f9c-acb6-957a1ffce67c)");
unit.assert_eq16(16'h070E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #417 bd7d0f6c-e418-4098-ab52-1539b8ae8a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 dd98b598-b605-4c9f-809d-8098b3828f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 5071223c-5c45-429a-b328-cd611e50f07f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 9c9fdd77-1b80-4255-8254-d686e0f174bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 1c22dad9-c6de-4516-b1bd-c02c83c2dbfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 56c600da-a736-4ad2-8ee4-cd9bb6bf3b01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 6b6d0dfe-9d2b-4a82-b266-a5d5f53674ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h974D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h014B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'hDA17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #418 bde82a26-4bae-480d-8a8e-eecbfb454da7)");
unit.assert_eq16(16'h974D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #418 5e36b4ff-e2d7-4eac-ae11-b3af73dff6f7)");
unit.assert_eq16(16'h014D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #418 ce1deeaf-6388-44a3-aad2-ef698286ca3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 018b4fc7-f232-4ab2-b590-02521c94648a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 52f6a35b-985c-4106-b5db-a7632d43907f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 4d3d9e23-5dcf-4737-95d8-ea743615eaa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 1e0a53fc-6bf2-409a-a2e4-fab1376a2541)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 eee92c46-8a06-446b-b67a-db1ea7966515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 53aceabb-fcd3-4f8b-8994-ade213ee424c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE895;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0670;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'h5DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #419 05d6980c-8fbc-44df-a087-821b1e3861a6)");
unit.assert_eq16(16'h0670, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #419 846ef097-1e08-4505-87c5-22e5920c1d9c)");
unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #419 481be3e9-f457-48bd-ba16-ae09b6af265e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 2326eee0-5121-48a7-a7d7-cd5879ff8db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 9855477a-52a5-4ff0-887c-20abe2f50a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 12f9e20a-6afc-4905-831e-030500744590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 27d706fb-8306-41e5-b81f-4f140c0a938b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 c07efe38-9325-4c4c-aa93-8f0090ed760d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 297f462a-f121-49d1-8441-60383205c31b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB93A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0925;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'hB6CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #420 0022d82e-81fb-49e5-ab5b-db8316f08e04)");
unit.assert_eq16(16'hB93A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #420 631f7727-065b-432b-997d-c5aa6d5f46bd)");
unit.assert_eq16(16'h0927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #420 b7a2370e-b78b-4500-a7c8-d9ec7866b860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 f67659ca-6338-4b98-81a5-cd2a2ef52a1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 f3b3130f-ac73-4ad3-918e-dabccfbb99cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 6ede8f35-cad1-4241-961a-4d9033b29e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 a02d04b5-bc18-4152-adc7-17dedfaa9289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 2eaf40b1-d1e6-419a-bff0-20e36bb93b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 4ab28894-367c-41e2-b4ba-876bdb00ba07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0500;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'h553D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #421 d0777a1d-e078-4489-a13a-89e874669077)");
unit.assert_eq16(16'h0500, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #421 d00ccc6a-7b7e-49c1-9152-7def923282a5)");
unit.assert_eq16(16'h09E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #421 ae2512fd-97f0-4707-a34c-646fe88fc442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 f523806e-ff75-4b11-9eb8-bb27cdf31743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 ac91255d-0966-495e-ae85-40099291e594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 0507b33c-f3b9-42b0-a714-a9548bf34222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 02137f86-8585-4e9e-9a4c-2cccedf2f524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 571299a5-c89a-40fc-afa6-89a6473d45cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 48423165-6656-40d5-889d-f3f2252876ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAEDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'h9C50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #422 14513fe7-473e-40ee-9176-62d901609d00)");
unit.assert_eq16(16'hAEDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #422 d64994db-8ac9-42d6-b03f-bf91a9589667)");
unit.assert_eq16(16'h0E95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #422 1694ec9f-177b-4183-abff-2157e2d3bfa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 1c660d2e-fac1-4fa2-a6ec-416fb713e71e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 a2c843eb-0e85-48c2-94cc-a5d43dcbdcd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 23102730-5d08-4650-aef8-4ad1bb0a84e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 66165d81-362d-4d0f-9270-ea7043707f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 d475fe38-5880-439b-9261-5725c757e4d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 f93e918d-1e3f-4c01-a1cb-32e7f018566e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB1BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h0A84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #423 dbd84fdd-a6f7-41a0-b44f-4a0249dc98f5)");
unit.assert_eq16(16'hBFE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #423 ff72cc38-f6aa-4c6c-bad0-c7431cc16b81)");
unit.assert_eq16(16'h036C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #423 e2c61e0f-6b83-4977-9ad6-f5b1aac0c32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 b63f5965-87a9-450d-b06b-33e899fafaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 3b027478-70b3-4cd2-9c9e-510b6c82fc4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 143c5f22-4583-484f-88ec-542254b5f1be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 6fe1c43d-fa00-43b9-9378-f8816cc0ccf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 2d88aaa6-8433-4357-9427-5025b0995c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 1fbe2ac0-b36e-4d6e-8a1d-9cc2889207d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'hB922, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #424 e9ca01c4-509b-4e3f-a267-81124b1aa4ab)");
unit.assert_eq16(16'h49D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #424 38bae9d2-2aab-4ce5-a58a-d02c9517e2ec)");
unit.assert_eq16(16'h05A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #424 06fa4ee3-2440-4717-a83f-42df3530587d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 8019482e-1c6e-4cb8-8a8d-5f5ffb1ada8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 47bb3686-87bd-4b07-82eb-f1f96a732656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 0f4b7482-c6a6-4637-9784-b406a4065f29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 80ac3e9c-0911-4955-9ff8-34d2de93d69e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 18a59b00-6dbe-47cc-9511-de8e3ee12357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 7099d53e-a516-475a-8161-858da696233b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3629;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'hFEAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #425 c4260ec1-aad7-43ee-a5ec-c4bde8f05766)");
unit.assert_eq16(16'h5E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #425 d0b42f70-ad84-4437-8be1-bbaf16af3909)");
unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #425 f7bda89c-eb1a-4be6-bad2-4a0f5ed5c5d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 e6dfee9d-84d9-411c-9848-001d57bd5c82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 9afdd36f-7343-4185-be53-621d4887390a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 6e0b4bde-a660-48be-b343-c53ba3f09e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 97143354-c0f8-4ee7-9e59-b352707bb393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 6f33ef08-2d6e-4c62-a2f4-3adf1ebd2678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 817dd800-269f-4c5b-becd-9ee981f43612)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4848;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'h6F62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #426 18b5f3c8-407c-493a-af02-3781d74ef7b7)");
unit.assert_eq16(16'hFC27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #426 abd126b0-95dd-467f-b0c7-b04ca6219c38)");
unit.assert_eq16(16'h09CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #426 eef54296-be8e-4847-aec7-3bfb8910a66c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 b55866dd-fd7a-4a99-8859-e4ead108ecc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 174e6391-ead0-4cb7-b389-cfc1150d6dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 9f741f8e-e480-4f80-b301-9ca0a140d150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 b97a2075-1a75-4edf-baf9-0ed1e8568f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 f0207c98-a896-44a1-aa21-a3f58f53f198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 910004b4-503d-4529-a733-65b9c273e039)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hABB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h107B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #427 13da7ad2-9f56-45ae-8001-f20ae92fc861)");
unit.assert_eq16(16'h89ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #427 537be32e-746c-49ae-a2bc-9ce9db19307e)");
unit.assert_eq16(16'h09BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #427 08af60ff-3654-4bd1-b6ca-66f0b458843b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 41932062-ffc3-4fa4-8354-0acf3b503e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 e6f191ae-958a-4827-a35c-b3bb62614ab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 0433b6bc-1ffc-4b96-bfe2-20a7bf8ba466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 62511d15-5149-45d6-a1c0-84b1c4c901a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 b99fcea8-48c2-4663-889f-386b58908521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 5640afdd-7495-4d59-bde0-886bea154229)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9976;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBDFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'hBA78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #428 fe7b2e66-e63f-451a-80d1-cad7e0384b64)");
unit.assert_eq16(16'hBDFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #428 60bfca12-7f68-4ef2-9ef8-6158f571c8c1)");
unit.assert_eq16(16'h0160, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #428 d66bc040-4646-4885-ac89-3927bd45798c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 afa1660c-03b8-4ad2-abd1-6d599df80c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 d13ce3d3-f7d0-45c0-920c-9294dca6ba3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 4f8ccaf1-e372-4298-95a4-6170348d2e09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 04f52060-db30-48d4-b4a5-d1bb0fbdafb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 56f4324a-5b32-4208-ae74-06f60e46f27f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 9d4a341a-64c1-42f8-808d-4eae829fb6c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0674;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9803;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h072B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'h1699, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #429 2d8d61a8-5d42-44d8-b68b-d160af95a03f)");
unit.assert_eq16(16'h9803, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #429 21e3f619-15b3-4360-a83e-a9fe4c46188d)");
unit.assert_eq16(16'h072D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #429 81c95c59-73fa-4d09-8e6a-e81ed98bd0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 1504c9a6-91f9-44fd-946b-92c64d9771e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 14eed233-31fb-46f9-a1a3-52aa41201b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 ec82ed3a-4c71-493f-912d-46b0b50fe249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 a8b06393-c7d1-4aff-901c-c63ea623b88a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 1de8bb92-c4db-496b-b294-3e59384ef660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 7966d071-c991-4936-909d-c78999aee8af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1027;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h88DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #430 9df968f6-1e05-44bb-9d2f-6f78c3600626)");
unit.assert_eq16(16'h1027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #430 dd799498-7873-47ca-88d6-b55a2e611fe5)");
unit.assert_eq16(16'h03FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #430 1dba506a-8556-4e0a-b9ae-9ff68ed01a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 da3ded92-27da-4304-af85-e4190fac93cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 d9726f94-81b0-4dfd-b3ae-1c0a41335729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 59b8c21d-1923-4b15-95fd-ba9cb8c91aa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 f716fe97-d8c2-41be-98fa-9fa7b9bbe013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 65a4b5a2-c7a2-4070-8f2b-17ad9d9de708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 f9a25f21-ce5b-47c5-96c4-078a5ac39599)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7AF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0771;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h2D22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #431 20b6d413-9c4f-4e5d-9356-dfee9744f730)");
unit.assert_eq16(16'h0771, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #431 13bbb15d-b226-47ee-88be-85f81195fe49)");
unit.assert_eq16(16'h0EF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #431 adc3ebe6-b943-45e1-a902-ce156a506272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 ef7f9bdc-3469-428d-94b0-4e0889354d4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 1d809f42-5776-4052-85ad-d19376603488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 aba8eba3-4167-45bc-845e-46e5fab0b9a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 7bc4cf66-a121-47e2-bbdc-fbd29b5f5d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 0376caba-2f10-47a4-b438-814eeb6b9428)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 b7f87653-04e0-4009-89f2-0e9c5ec40cf9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0291;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h025C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h3FD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #432 07cfca57-0f5b-4bc4-bf2e-fccccbd59306)");
unit.assert_eq16(16'h9DB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #432 0f0951ec-a9d8-4877-8525-e4c09d29d00a)");
unit.assert_eq16(16'h025E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #432 3d937b81-7fd4-467f-aa6a-3a523d5210ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 c7ef3ddd-01a5-4102-9079-eecc41af32f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 0f351307-5587-47dc-af78-5507ad2ee3f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 91e7968c-2fe2-4694-92b0-d2cfe0eebfa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 227a649c-df30-49ec-944f-f87bd73273aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 11ae08e0-be04-4abe-ab75-9a77094b2376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 26702b74-2dcf-46ba-a557-b8e0af2cb764)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h926C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h431E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h44F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #433 b09b066f-8fd1-4bb9-ae77-6c19482c07ec)");
unit.assert_eq16(16'h431E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #433 979c6880-92a4-470c-a676-c1c18d5dd135)");
unit.assert_eq16(16'h0CA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #433 01ffe680-b3ee-404c-8968-f946e40d7508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 2c2bfaeb-6c69-43bf-8fd9-0e8b7bdcb182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 545577e9-52f1-4f4e-92db-75debbc21c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 48e1d0ab-56a3-40f0-9e64-8fb393673610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 be53888c-8f70-49f7-82c4-1ef990692ab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 edbc0104-d787-4d92-aa4d-5be5ebd272c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 d5374079-c163-4e90-b996-8fb24bd3a5bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC9CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'hAA12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #434 d0ffe7c5-e92d-4019-b051-f82d668ba093)");
unit.assert_eq16(16'hC9CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #434 40e631f5-807c-4fef-99f0-17ca18c55ac4)");
unit.assert_eq16(16'h063E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #434 1ad4dbac-6302-4132-b473-afb90cc1d1ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 d0058a13-0a9a-41d5-80fd-92f654963cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 58f69c84-30ce-4e1b-955e-e0c30e0300c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 a167b420-3783-4c9c-a8c5-6fcbe2fcfa3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 7a98029d-f355-493d-b347-7e43c0629257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 21cbd87d-5a7d-40bf-ba56-43cd698b3245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 902a1075-40df-4f30-a78a-4523be9618bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB139;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0108;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h0637, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #435 81e698e2-5049-4693-9d9c-8a611d77f5e0)");
unit.assert_eq16(16'h40B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #435 a413866d-2bd7-45cc-9782-e2b7a26d6a3f)");
unit.assert_eq16(16'h010A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #435 1eed440b-d131-4782-a7fb-bede8dd2998c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 f42f74a1-a8ab-4c0c-b3cf-31b38b26f6aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 2c6c1085-3e95-41f1-8185-5982866b30cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 4d966811-7bdc-4d9f-8900-5e873f9eef47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 790afd79-49f9-4231-8f77-c144ba14463d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 415d8009-5093-4c8e-8541-2c950b4409d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 bb2753ec-fcc1-4890-bd39-3e1c67af8a7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9735;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h738E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h2CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #436 e41bde9c-6c75-458e-aa08-a1475477fe37)");
unit.assert_eq16(16'h738E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #436 3d7cf46f-d65b-41a0-b646-299dac310b51)");
unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #436 fcb40c04-6ad8-4dfa-b0fe-9e5600e63a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 a040a0d1-3add-46f6-9e13-893903f2dccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 9492a196-577b-4ab1-8d58-f7ef1780eeaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 5013ead9-b98d-4cb8-814b-d36e54e6ef48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 0b4a1d86-fcde-46fd-ab29-50f6d4dfe827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 91bf0160-c858-4dd5-838d-8b3ee104d138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 1d8fc057-49ec-41fd-8862-d8bfcc8870a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7977;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'hCA1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #437 ef2c6d10-9dd0-479e-bd7c-26903d4cdf9d)");
unit.assert_eq16(16'h7977, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #437 0a3dac0a-ff56-46b3-bd86-57fea0c34ef8)");
unit.assert_eq16(16'h07AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #437 af138cf0-af53-4b42-8d41-c884b9df1a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 fb8f3733-0567-4209-9329-dcc10385571e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 19cb802f-55e3-48d8-9f2b-8bb2f2c41ec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 a1a23e87-e5b1-415b-841d-e41b85d5bc13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 a15f8555-340f-4f6a-9cbe-406be660fd86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 a17f011c-16a4-41f7-8ee1-6bccf2eeffa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 ee6822b7-183d-4367-9233-2e05749dc437)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB90B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h548A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'h3B03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #438 aeacc199-dc7c-45b7-9d42-8c7d3392e150)");
unit.assert_eq16(16'h548A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #438 77882cc6-6061-475a-aaed-9d5ed54ca548)");
unit.assert_eq16(16'h04FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #438 db5e3442-9a40-4d75-96df-c47919a74255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 13ab065d-5d8a-4da2-bfbe-a9be49ccdfb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 abe29e69-7d5c-4649-87a9-cb5719c90978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 6a6f4448-c1fb-41f3-81bc-8641dc204731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 6f0426b3-1a41-49b7-8e78-e3acad4a2661)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 af62d195-14f9-472d-8876-a63575110d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 96405702-12fa-4fdf-93c1-ee5440780994)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE138;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0970;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'h60F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #439 372ae848-6c9f-4396-adad-02406be08487)");
unit.assert_eq16(16'hE138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #439 431402e0-4059-499e-aaf0-db9cd283e957)");
unit.assert_eq16(16'h0972, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #439 de7d7d24-a89e-43f2-9bca-cee4aacc4f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 fb1e07d3-1445-40f5-9e54-8efa3bed6fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 ccecd15b-4ab1-41f0-9a58-353a8396b85b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 46d8df58-3f0c-4163-a96f-255c71d9150e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 4cf0803d-2400-4711-9c22-4a9f38c62c3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 504f9e50-e61f-4553-8fc5-4e073bf18f62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 56e36a30-6914-4266-9bf7-7e1d587f0e3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h11AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h020F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'hFB2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #440 aae01934-5382-425c-9eed-995bbba9dada)");
unit.assert_eq16(16'h11AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #440 7240b37c-fe84-4eb8-b682-b49acbe2bb86)");
unit.assert_eq16(16'h0211, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #440 0fd4a0d3-6f8a-41ee-8105-c7741eada27f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 d8a24222-da45-4eff-b802-1e0719955569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 c3feb9a3-69ac-4ae5-b1d4-cd515aa6d162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 80ae706c-b8ad-421b-aa66-869c17238076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 bd377626-f85b-421d-8e85-87e08f45f658)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 3a4436c3-83bd-4253-a7ec-b82627273c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 96dfee5a-8eca-45b2-ab57-6c9c392426e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2619;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFACA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h2595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #441 8d0c0b92-bf8c-4ae7-bfbd-d45572b421ab)");
unit.assert_eq16(16'hFACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #441 dd9a4ad2-086b-4438-b7f0-240685757e5e)");
unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #441 6c7e11a3-3b63-4f75-b128-556aedc5d992)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 a18d8e83-657a-431b-8cc3-465acc909d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 79055c9c-5c16-4463-aea5-45b4ced9542a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 f00b223d-8b51-4182-9966-deebd0e31d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 9bb135c8-b889-46eb-8d14-fc160fc003e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 dce0ba38-7955-44fc-97a1-054a23454a4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 765df0d8-b5cb-431b-b8a8-253c9b5dd61b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1AFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h84AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #442 1fcb0a92-fff4-4c9f-865f-41e164e08e3f)");
unit.assert_eq16(16'hD9F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #442 12317c50-3629-400a-ae84-ef5ce9ad802f)");
unit.assert_eq16(16'h0A5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #442 ed8180d4-da92-45cb-aa30-52357c49668a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 12207145-3c4d-4691-ac41-9adde004adda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 998ce06e-8d79-4e94-97c0-e0455405cb30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 b6df309e-f9a8-4df3-b0af-4130de4ea359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 5f4b9c6f-961d-4cce-9c97-ba314a0b85f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 7ab655a3-5838-446d-8991-0d91f6ace362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 952e8a1c-2aad-4afd-948c-7832dd4ad7de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h388C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0967;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h86F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #443 6dda5934-158b-467f-917f-ff34a5f0517e)");
unit.assert_eq16(16'h388C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #443 f8547922-1637-4dc2-bd5d-1fe27373e822)");
unit.assert_eq16(16'h0969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #443 1fe2a09d-8078-468d-b14a-da9d65677137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 a37a9e2c-cd96-4331-8300-d295bf121b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 a4c947e8-80c1-4bec-94b1-cc062ee2964b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 d831217d-68ef-49ec-9ae4-6b7f8a5d30f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 950ae40d-3bfe-4695-a5ef-23e6e23c3df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 47e4a648-aa13-4e79-af04-987a5036d7a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 8745c1a9-4eb1-4f19-a966-dcbc133c88fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9440;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0542;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'hC056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #444 6000d770-3955-4a88-9e41-cc6c9c070d0d)");
unit.assert_eq16(16'h9440, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #444 6e6b1982-6160-4286-9a5a-d294f5a846a1)");
unit.assert_eq16(16'h0544, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #444 a2cbe784-ff8d-47bf-8aaa-81a57ac82db8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 83667025-26c2-47df-889c-fcc0395a9f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 2db51962-36c4-47ba-9329-8bb24318b429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 bfc454a2-a337-468e-818f-24425500bce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 d28723df-fb9f-4ad4-8baf-9056e4eb8d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 ffc5f68b-5796-4aa3-9cdc-2039be56b270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 cec92303-2622-49b5-a1a1-1e128e857dcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h131D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h986E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h5F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #445 48b51034-bbd1-4724-9be8-29bd44971bbc)");
unit.assert_eq16(16'h986E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #445 89036283-cbe0-4c9c-ad56-17e5c2261919)");
unit.assert_eq16(16'h0F16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #445 fdd8b5bf-89c9-48bd-a8ef-88e0316aaa9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 52badd4b-6ddb-452a-a035-a84e6f868c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 c5ae80a6-b513-4088-97da-f310e455c9c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 d30a6d9f-b570-47a7-9114-22a19c0ca231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 4a6340a0-1381-481c-bc6f-1babbba1cf8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 38a73e90-031f-4dc5-8135-d285aa0f8f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 a5ba9634-95fa-4863-a87a-c1c8964c955d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8952;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0212;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h39C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #446 0f64eb60-582e-4de8-85b6-447926e421b9)");
unit.assert_eq16(16'h8952, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #446 4ee95426-09b1-4e6c-ab68-be62de04fc4e)");
unit.assert_eq16(16'h0214, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #446 b7f192c2-d180-4e43-b601-4d53948b7ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 bd0c1cc2-3c49-4417-bb6f-5652e4a13a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 b44369f3-0f1c-49ab-8324-7008d6609fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 3c5a01be-79fd-49f5-89e5-1cdc2ecc52de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 dc2ec216-0012-41fe-985f-11be05164052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 9b2137a6-ee6f-4f91-90b6-90f62ef83b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 f221abe4-6629-4831-bd6d-ed01ad2a19b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hADE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h7ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #447 7b332729-c5bf-4c0c-b157-db185fccc29c)");
unit.assert_eq16(16'hADE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #447 6b646b4b-53d5-470c-9ff5-f7c4632cf5d1)");
unit.assert_eq16(16'h06A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #447 7af14712-ab1a-473b-b3d9-a1c9ea6f774b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 1fe20717-2783-4c2a-9b04-3348e01cbad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 7920f369-0afe-4f4e-b43d-c796b3f9e87e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 1bb4b24d-d075-4d26-813a-e824132c6e91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 555de3bf-f55a-4941-b5f1-ffd8d70e743e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 19d72d5b-4e0d-495a-b30d-40399d0fd916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 b2a12b2b-f5b0-40fe-9a7d-cbc8ff30fbd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3270;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ADC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h64D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #448 33a77731-a568-4caf-9fee-2c0f697026b4)");
unit.assert_eq16(16'h0AD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #448 ec7f3d36-dc02-4960-bda3-6d34024cf1fa)");
unit.assert_eq16(16'h0ADE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #448 4febfb3b-893c-4a37-9c49-e6dff19423d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 f9da1e93-e8dc-4628-97b8-ca9bf8486856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 cd3cf421-2795-4ceb-8a94-65521a4cf110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 de7c5b72-a77e-4c7b-9445-63a2e4dcd11b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 94fa6037-4fa8-455b-b29b-c1cb98a9e136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 bf2c0884-7db9-49bb-b381-cd303310f700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 a322c0d5-f3f3-43cb-8147-325fc66cc2a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5400;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h540A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #449 738a5987-22b0-423c-9f05-d2dec7cbf1df)");
unit.assert_eq16(16'h5400, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #449 1ba36205-e72c-4c5d-a98e-e3329450932f)");
unit.assert_eq16(16'h0FEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #449 436bb5b1-dc05-4612-9379-7bc108d3ab6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 8fa0656a-a85b-41f4-a2e7-ad3915e26e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 28c6d1de-784e-4701-b732-6e0b2f7954d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 9e4f5f71-a289-4d5f-857a-0b51c1af2305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 bf901aa2-875e-444a-a683-ac7996b2ea6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 67d5231b-977e-4f51-b605-2aa089b200d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 ecc4282e-b114-4805-9e02-eb0f022f3fa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE4D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h2F47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #450 b43e28f8-6373-4f83-91e1-21b233605468)");
unit.assert_eq16(16'h42FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #450 9937dacc-a8f2-4ec0-8b22-57242c2117fe)");
unit.assert_eq16(16'h0F71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #450 b5771a0c-f4bd-4728-937f-a4ec190c0016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 7ddd9863-fe3f-4fc7-9b02-5affb136eda7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 bbb881a2-1311-459c-a3be-8e30311e70c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 15ad8e5b-b1a5-4da7-b071-3ebec7f3d57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 00832ad0-fdeb-45f7-be1a-f30f9c7237f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 fa065bf3-1f92-4b36-b6ef-0c079dfc6684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 5e7cd547-e42a-4370-b9eb-37651de05f2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h5AA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #451 c17ed5f4-bb1f-40de-9873-cf39205d7c19)");
unit.assert_eq16(16'h0DF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #451 96d557b1-b99b-40d7-a46a-e502e0333551)");
unit.assert_eq16(16'h07CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #451 92575e15-ca5e-42a4-a5cf-e56579d5831e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 1a5d88b3-a841-4f5a-8b34-5ffc57adb57b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 6b4316c3-c3af-47ae-9cf0-b3f80f2abc78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 934cdaf4-e330-4d8d-a382-36d125c5c36c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 46ad2fd8-ca53-4dd0-8b62-2d8c443b35a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 31f30fd7-c999-4839-a928-a0d2099ea90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 8c9a074a-0585-479d-805f-463828100626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'h18F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #452 4779f78d-5c26-402d-a74c-b672326a8fac)");
unit.assert_eq16(16'h84FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #452 a7cd6a0c-5116-4dfc-8f79-8fd9db9777ce)");
unit.assert_eq16(16'h0F6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #452 591773b3-edab-4685-a87d-004d55d212c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 fc2087c5-de70-4ebc-86be-d58cfc318d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 5edc879e-62e4-45f8-beac-e05995bae1db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 e4c4013d-c229-4b8a-bb3e-75e3cc64a6b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 d3df7d15-414b-462c-b485-5210636c6a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 0efcd1a8-217a-4321-b99b-2de38a2f0e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 bf3ea58a-d4e5-44a5-ae8f-298c2455eb91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB9EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'hFD84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #453 cd1560b4-45be-411b-a350-5bc3dd5cc48c)");
unit.assert_eq16(16'h2E02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #453 8dc19371-1eed-40de-a3ec-83abb3e55744)");
unit.assert_eq16(16'h0C4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #453 e372579c-b3da-4d1c-bb7d-ea9480806181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 a54f94a2-4562-4b19-a4fa-a026ecd19480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 82798b2f-21ae-482b-936e-dc80ad4bf14b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 9203c36f-2752-4906-ad45-d5820d649cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 de9bf91e-8df4-453b-b416-a35b90bed48a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 95c7527a-0fbf-4d51-b638-8a15f9207b75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 14611f1e-a506-46f5-9d5d-dbf77cffa6f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0871;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0448;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h333C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #454 015a0b49-43af-426c-8654-0ca15f506159)");
unit.assert_eq16(16'h0871, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #454 8956a4ce-f72b-4131-be60-805beeaf50af)");
unit.assert_eq16(16'h044A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #454 c90a5ba0-d012-4df6-a855-c1f3bc5e064f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 804665ec-920b-4025-913f-4e3f2a33638d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 916353b8-8fbf-4f52-a56e-67d73d2af5bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 1c86f81c-3a73-4bea-a252-c47198f5f8a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 7570b984-7483-480b-8cf5-84318ecb94f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 9e31ea01-2955-4663-a5e1-e9e4f2a33e98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 49f58a50-db1b-48f3-a543-4b8e943b86d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4796;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h2E32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #455 99cefc7e-b004-473b-9f86-c302081b3708)");
unit.assert_eq16(16'hEC3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #455 63b3fa48-454f-49ff-9cf8-4dfb29a178dc)");
unit.assert_eq16(16'h0BB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #455 aa012b81-1a6d-479c-87de-dc8fefae7290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 cfc5148b-38e1-4991-9029-a9bf24fc6891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 c089efb3-8747-4eb5-b7a3-0e2de56ebcdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 b4f3cd4b-1cb1-41ab-8fb9-1154d9ea4fb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 1d3a56ea-dbb5-4063-9458-199165c54fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 60ebe9df-9711-4510-929d-f8b4cafdd40d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 0a00a181-a402-4ac8-bc3a-b13f90c59349)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2157;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'hA3E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #456 a5422209-65e4-488b-90b9-4d73e7a7f429)");
unit.assert_eq16(16'h2157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #456 69f7b4f8-4af7-4f82-befb-f70e8881765f)");
unit.assert_eq16(16'h0DEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #456 36300141-92a3-40e7-aa11-52baf88bab97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 950509b2-5338-4df9-bfa4-cc07bbf84113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 287c0ea8-acde-4e46-857b-215ae7d2bb6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 05852686-e78a-4c53-a9ea-db8ba1d39ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 599c2e1a-5c79-4b30-8896-01f1536c483f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 adf2aac8-4878-4b3c-a8d7-19929f6c6908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 b910b13c-d893-4e72-a1d9-8be52bb5ecb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3091;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9550;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h064D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h5F33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #457 2670d827-606e-4e08-baf9-a95f42cf1695)");
unit.assert_eq16(16'h9550, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #457 cff1de96-ed7b-46c0-8d4e-fe8931f62276)");
unit.assert_eq16(16'h064F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #457 0f301e0b-1b3e-40b4-8afd-d9ee28c2720c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 9da925d7-616a-49a1-8dd0-a255e93d4e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 97bd019f-49aa-4bc9-a778-73c7506fd2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 60209f4a-d4d1-4fdc-9d51-65b170848971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 922b4c79-921e-4a78-b93d-487415d15be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 38c4ef84-66d2-4ca9-9b12-258b6903b85d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 3092ea91-b8ee-4799-80c6-1d4f8d87bc28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7DD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h7E22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #458 ca772935-09a5-4fe2-8cd6-aa2100111a0a)");
unit.assert_eq16(16'h7DD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #458 3f457214-0fa7-48b9-a19c-62ae38a7a568)");
unit.assert_eq16(16'h09B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #458 2366a4fd-b296-45d7-bfc0-3470824844d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 77f0311a-3dcd-4854-9430-4418ff62abce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 ddaf9641-47d4-4585-9460-576f38b01125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 ac8fd21f-807d-4730-9509-68fea9b876f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 2278dbf9-7614-4ac6-bc8a-ca5c5c391634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 548c70ce-42b4-4f4c-859d-a5195855e07f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 1d21d618-e3fe-4b67-9c6c-f2753166ba10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4856;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7195;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h70E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #459 844aeeca-0c85-4e34-8aee-08bd4576f8c9)");
unit.assert_eq16(16'h7195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #459 d75c0934-1c61-4284-8340-f67de6d9930b)");
unit.assert_eq16(16'h0C6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #459 de493e0e-dc6e-4b6c-ba6b-5437327689a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 dad7cff0-b337-478b-87fa-12dc819e61fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 730c8b7c-3bb0-41e4-bcbf-e5718fd54d63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 8b9488b9-3888-406d-a88b-2d0f701a8f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 2d203c81-03df-4f10-a564-e833badcb875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 524779a2-16fa-4d00-a06f-c49bce38eaef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 db0bdf78-3277-4342-97e9-35cb2754cdd0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFC49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA138;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'hA5AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #460 4714b1ac-62c2-4f37-9ffa-a3b67e5ba1c6)");
unit.assert_eq16(16'hA138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #460 7e193029-eb33-43a3-a5d5-6aaaba719226)");
unit.assert_eq16(16'h0DF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #460 e4894a10-07f0-477c-a1b9-344ab94ba55f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 016c6b1c-a165-4011-83c0-614fe2830188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 6e7df0a3-c7cf-4d09-be2d-645adeea0ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 1336e27d-6c6e-4b7c-92c0-49830d896646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 f2628c80-d6b3-4c64-a5be-4716169ae509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 1b432ff5-787e-4824-8833-9038b5c12b38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 59494776-bcd0-4e84-b0c4-ff313a6cf3c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB769;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0903;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h693E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #461 06d6bd36-8273-4f25-bb52-ab2b0bf36473)");
unit.assert_eq16(16'h2C88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #461 b9926613-94bf-4a1f-b1b5-995537fb0fa9)");
unit.assert_eq16(16'h0905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #461 2dab1fd7-0c6a-4fdf-b1de-f8ab0df8117a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 e8a791c7-6f2d-4da5-8194-014ad9a9093f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 6dfc2b72-8134-46df-b725-1ead0435e4ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 07b63589-fa44-4760-879e-a30b8294ee8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 6cbf6969-30e5-400f-bf50-b97d94c136cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 bcb1be56-5e7e-4fc8-8601-b5201849aee2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 28c313d2-7657-437d-a4a8-32433e6804d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0215;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h4EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #462 85e3b7e3-b9ea-43ca-b9af-db1278444305)");
unit.assert_eq16(16'h0215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #462 00b7b301-03bb-4156-86b7-773619fa2467)");
unit.assert_eq16(16'h065F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #462 724d720d-066c-481c-ac9c-429c8874b518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 f3e530a1-3041-41fe-b7d5-108cb9d331be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 773ce467-a8a6-4c89-bb68-5e9865a02826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 847771fa-5143-4cc0-8e76-6ec869c31f1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 a4c8e6a2-7ad9-48f6-a0d5-ff57f1f3bf64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 80be03e1-05fe-4ca7-8b3b-0a1e8cecafd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 befafc3e-da98-42fa-ba64-5adedc968721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h28A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h088D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'hFFDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #463 0f7059cb-764c-4a5c-8e3e-31b97d10e30f)");
unit.assert_eq16(16'h28A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #463 24f9249d-abb5-466a-86c0-8a927b850f37)");
unit.assert_eq16(16'h088F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #463 d235b1d6-461e-45c9-bfb5-d97dc34107db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 fa6ff97d-e08f-42cc-9e21-c1811d9ccf8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 1e354837-b894-4216-8bcd-21af518bc664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 028a7e4a-c0ef-4360-a93a-104a69bb1e58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 8154e585-e314-49df-a674-c81f7eec5001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 02156dbc-a7e3-4d83-aede-f364a7b0f245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 5b83676e-9cfb-431d-90cc-c11af4fae5eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8075;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'h2595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #464 a5ae4e73-01c6-4c48-a0e0-43732308e673)");
unit.assert_eq16(16'h67DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #464 e0e600bc-4fdc-49c6-ae8c-08e00daf83cf)");
unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #464 70d344d6-e5c7-4a0a-8a71-063d3238d665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 0d19e29f-887a-440c-b880-e8a8fcd3a3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 7e49bfec-f75b-4f20-9a5a-7be07373350c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 1efe17f7-9b07-476a-b64f-63bc2f784950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 6038fd73-2bde-44e0-9475-c251e747c004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 00e94d33-01a4-4f9a-ab20-1b4a12c6dfd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 2d6dcd85-e8d5-4d1f-bd25-4d5c2d12b041)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA7F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h81E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #465 1abcd034-5475-4ec6-9305-71d65f57f593)");
unit.assert_eq16(16'hA7F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #465 af22a33c-73b6-410c-82f3-0c7b5ded71b7)");
unit.assert_eq16(16'h081D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #465 1a8a73fc-98e0-4332-8793-c5ea02cfd740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 b3eca4ef-2c76-417a-98d8-886ffd3732c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 4c1112ff-aa86-4300-9e0b-98642cb79150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 e335e0c8-c7d7-4141-a078-1efc386b15d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 38e7177c-2429-4264-a278-bc9f66ee85f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 d3938970-62aa-4ab0-98af-81628c491d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 29dcf497-dad2-468d-b5d4-9a1afa722432)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA93B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h25D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #466 517a9f80-b36c-4ec2-8205-09a3d924ede6)");
unit.assert_eq16(16'h6A07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #466 5fea2f9e-3b27-4b6a-8bad-2b9610b98970)");
unit.assert_eq16(16'h0B56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #466 ea6e9d72-6248-45be-b4ea-c97b2f7d993c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 a84d4f13-c79c-4ecc-8d18-902fee2dfb14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 8b379080-a3b9-4cb4-b854-c65adf2153c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 edcb4cfc-7ba1-4308-b559-47dd60b44229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 e54c709c-cfba-4208-8ae1-a02a12bebf16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 e13e8dbb-e1e2-4b30-b87f-0165be55bf5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 a378f21f-42b2-4b78-9e03-5a60b68b1654)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h4EF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #467 a7213171-d622-4a51-9a5b-a10ce110ff8e)");
unit.assert_eq16(16'hF7B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #467 71349013-c0f5-46e5-811d-36d6d1a625df)");
unit.assert_eq16(16'h05CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #467 2e4fb122-e583-4179-bf37-ef3ac3fbfdd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 3aa72613-3b7d-47e4-893d-b94a835e270f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 91369703-1d8c-40b5-9efa-a6175be802e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 54fecb13-e8ef-426d-a17b-fc37d2c79141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 a3325b39-94ca-4e93-bdfc-cb0415a92334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 2e92c69a-8a38-4ef0-b1bf-a0d639e84ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 f00674d6-d77d-425e-81d2-032fe557e67c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDF11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF527;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h3144, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #468 6f46e04b-89f2-4f00-b344-d223c84217c7)");
unit.assert_eq16(16'hF527, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #468 e31aec84-f1cd-490e-ae2d-79207e0d83f2)");
unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #468 749250dc-42a2-46d7-90d2-69d80e894485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 27ad6ad9-bc48-4bcd-8eca-a1c46312cb33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 3739ec24-c37c-4abc-8612-df1cfdf6f591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 0c8da3b6-36b7-462e-bf05-98fbbe435d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 39ceee75-4528-4977-b772-01e5708ad560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 eda1c48c-04a8-4177-a0c0-db10fcbab98d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 4f9dc98d-53bf-4b6c-bf84-5c30f144d92c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h7E42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #469 f3ffc7ba-db2a-4667-b24a-9cee18f84166)");
unit.assert_eq16(16'hAC7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #469 705a12bb-a950-4fa1-91d7-7b2b9559e52a)");
unit.assert_eq16(16'h027C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #469 277eb0e7-e593-4379-a932-2386158bd725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 1db60908-4691-4cd8-a8da-dd65c5893538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 aa57a2be-2e1c-434a-a2fa-0301ba8b5a05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 6a70ffe0-ecce-4efe-b0f3-a068e8fd16cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 6a50c7d7-8acc-42e5-b0e2-6b0eaec342f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 ebcd8d54-6d7c-4b31-9c06-76f8717ac484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 2d5a0c3c-017a-4320-90ee-e5e94092b114)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h55EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h86DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'hD78A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #470 7f6875a1-6120-469c-a38a-aeb75ae76ead)");
unit.assert_eq16(16'h86DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #470 547e87cb-a3b1-4079-ab10-727d7839ca50)");
unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #470 a7dbc36f-43b3-435c-a284-bc7df606a192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 0b844101-a5bd-4ecd-a201-d0b2e679b0a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 ba05505f-eddb-4b87-bc84-492d7a32d21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 0f5d80ed-27ef-49af-bbc0-38eaeac3f65f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 4a8d3506-efdf-4bbf-8f12-b127671312f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 813b7cca-49ee-42a9-89e8-e20fc0a2d59b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 a949b59d-2bfd-46ad-8507-949bc6900a2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'h684B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #471 daa01eea-01d2-4d76-baa7-d7515e428f12)");
unit.assert_eq16(16'h4CAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #471 860bcc7e-2781-4662-bbf5-f59c3223c4e6)");
unit.assert_eq16(16'h0D7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #471 72647060-8644-4f81-8c18-bd554b850aae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 ba26c484-1f9d-47e5-84b4-0b4f1f7b80fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 50cdbe85-7574-40fe-82f5-32f10014de5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 8fe42905-8392-46ec-abeb-89e1a80575a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 3dc27bcf-ab8d-40ad-b435-2dc3b2be3efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 70faa0b5-aa5c-437c-9573-7ee7d2cede11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 24ebd7b4-5421-4a4e-b88a-20bb24e7f974)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD82F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0848;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h8A1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #472 2a9dd7a2-8206-42b4-a90c-9dac47f61664)");
unit.assert_eq16(16'hD82F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #472 67bee4b0-4ff0-47a6-8191-72c0b2238c59)");
unit.assert_eq16(16'h084A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #472 a166ee67-b96b-4392-8e1b-986fb585d2c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 a821d34b-c44e-49c0-924f-13ff04e54c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 24fb6dbe-51b3-4667-8203-7de3414113e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 ba281e69-e215-4e41-8684-c904edb507f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 66b6bc40-9972-4b25-b275-2c0ff3206758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 46ecf0d4-6f77-4526-8f89-4d562d088a3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 079b92a8-e066-43e1-b9d5-fb4fee7daf7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'hA68D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #473 549ab77a-7770-4a56-8413-25619195a46a)");
unit.assert_eq16(16'h9FDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #473 e1e184ca-004e-4c5b-b243-12c2adbbcd44)");
unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #473 603b8ab6-550b-4dab-a06d-f3f82eeeff19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 39e444d1-a1ba-492a-8909-51d457b359ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 fa3feba6-18d8-49d4-a9c3-0037a1166f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 bdf36f7d-76ac-4bff-80ec-e28e18a8d21c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 8210f8bb-c3d7-4237-93f8-c889d431a0d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 1bf536de-0499-4f57-845a-1520159f2e65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 cf1356aa-f0a0-436d-9d7d-207782852caa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0788;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h5FE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #474 5f7e65ee-13ed-41c4-a593-f77f2a4c9699)");
unit.assert_eq16(16'hF3AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #474 8c16a47a-b1bc-4446-870b-d9dd3339700a)");
unit.assert_eq16(16'h078A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #474 7703dc09-540d-4a3d-9ae8-e7581334c65c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 e98d27b9-647c-441f-88f0-bdb8a1276339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 7417dcc8-01fd-4159-b310-d7136af047e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 6563987c-7486-47eb-b043-1fda1f53d23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 38330cf0-c9be-47c3-957e-10402d428b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 5c2143c4-23e6-4d43-9c20-cd4b8af6f039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 6ed2a40c-81ff-4288-89a8-9f31e6cf3739)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'hD78A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #475 35c32e61-25bb-4f53-b4cf-c1282a213114)");
unit.assert_eq16(16'hAFEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #475 d0736f06-b4e1-413d-a26b-1479965f5fdf)");
unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #475 70de712e-31db-49a7-828c-b5f394b64b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 d4d335dd-2aa1-4c4c-8f20-7eea5b7a8b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 e23b9c6f-8d38-4463-a3df-7f67274930dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 b864da32-2b91-49f9-b29a-2e8521f4bac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 f4087264-d50e-457c-bbf4-50e1ea673c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 29fcef6c-c69c-49ac-bc53-ae052dfa5f83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 55b6d185-2833-4748-aa6b-18fefcd22d47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5864;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h9EC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #476 d41f8c3e-b24c-44aa-b447-642fc804ceb7)");
unit.assert_eq16(16'h5864, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #476 f3138713-9468-461f-80df-fefcec909827)");
unit.assert_eq16(16'h0E46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #476 373e9199-885c-4db4-98df-3ae5258765d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 635e3d26-a704-443a-bbe4-f940c648d5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 16351a25-42e0-4879-aa58-f26d3a81acb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 32450f08-e4ef-4ea5-b42d-6d480d15106f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 aa39f29f-d78e-41cb-8b94-5ad4965eb149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 22e5cb9f-152b-4b39-bb42-47a26b3bbe6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 76d7348c-2838-4abd-8640-04fdd3eb4915)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h7186, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #477 5d065ad2-efe0-4447-9d6e-afca75399b2f)");
unit.assert_eq16(16'h90F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #477 a5e7d414-9f6b-458c-85f3-c819551fd83f)");
unit.assert_eq16(16'h07D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #477 fc42d693-1b97-4e43-8d33-0c274ed2253c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 fb908e6c-16c7-4af0-89b9-e7356f0a10a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 3e63cf41-ae03-47a7-a940-082b021dd86a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 0a2706cb-29f8-4df9-a9ea-919ba50e8b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 afc561b7-feae-4ee1-851b-a048365c445b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 662903dc-a083-4389-bca0-76a7a7639e0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 9d9e2255-f733-47fe-b196-a27ef2c58080)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h962B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'hDF25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #478 67b3ba7a-75db-4508-a02f-156604a84c99)");
unit.assert_eq16(16'h962B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #478 0992d872-dd6c-45ac-8d81-69e04af01468)");
unit.assert_eq16(16'h0EA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #478 3023b582-c5cf-432d-af9f-144fbf1fac49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 60c98c0f-f6d9-492a-ad03-536bfaa6ffb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 96a5caab-1a4a-40c8-bced-b9523752f682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 5e74aeea-fe36-4fc9-b378-e2c468ac1ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 ad0fa428-2447-4318-8776-d4a5f54f4786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 eaf4aeb6-40d5-4ee0-8adc-40a20147f4ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 b69238d7-223b-4518-bc3f-40a2ca2b3f62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'hB6DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #479 1dcd07b0-0b57-4fe7-b7ec-159e7632d172)");
unit.assert_eq16(16'h6A4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #479 821471e9-2990-484e-9aae-d850d9f66a06)");
unit.assert_eq16(16'h0D31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #479 8dccb369-d2a9-4b33-a338-db4f706f2638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 8b08727c-e4c0-493e-846d-efa3f47442a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 6074039f-b887-4202-8f4f-064a0cadcd59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 f3df675c-b4c2-432e-afc1-74f3b6228336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 9e9a360b-2f4d-4cd0-a0bb-00455ce5f99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 b2da9ad2-28a8-4ba6-8f4e-fb3a64a0b777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 07b9f865-45fb-48dc-9590-3ad88a709216)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1494;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'hEF00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #480 3d06440e-bb34-441b-9eda-9bc424bd3604)");
unit.assert_eq16(16'h24AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #480 7f4da110-48fc-43a7-8e0f-e87729aa60e2)");
unit.assert_eq16(16'h065C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #480 04398783-4dee-4aef-bfcc-102f6ecdce87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 5ed85edd-284d-4705-a2df-827d7fe61e73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 7b1ce3e6-8c23-474e-8121-ceca51013ac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 c4eabc6b-33f4-419b-a479-d05b7ecb2444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 a533e37b-11ef-4fae-b6f2-236a6a3674fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 58eb2322-7a74-4e1a-8303-7e9e1f790513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 61fe849c-1cf4-4891-84f0-1ce37c11069d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'hD492, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #481 a79cf89b-c7f8-45dc-a0e2-068bcec2efca)");
unit.assert_eq16(16'h6B8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #481 f6a35bd1-e37e-4c07-acba-6a584c96ab60)");
unit.assert_eq16(16'h0F08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #481 64f65258-cda2-448c-923a-84272ed2dc60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 51a62353-18a3-46d7-a705-50facc79a441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 a9dac0db-b52f-43f5-ae43-7336503865a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 f69a858f-91a8-490b-8bbc-a87bca483e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 8b6cab21-8954-40f2-bb74-a358a857b72f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 1785e6b8-3a9c-4dac-91fc-db155799a082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 6826ba9e-b4e8-4a0f-98e5-6ee968956916)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h45D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #482 4fa432a9-8144-427b-80c1-24989aad1eeb)");
unit.assert_eq16(16'hEF52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #482 28a2a93b-b55e-4c13-9797-4c5753b576fe)");
unit.assert_eq16(16'h0EC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #482 48f64f4b-e406-40ee-9df9-c32ee3afbfa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 d0480671-1ccb-4483-89c3-8971e428e675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 c1fe1364-f1cf-4dbc-a6de-ac609533d1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 098557c3-2e6a-40ad-af86-2547cdc09c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 88b22cd5-8aa5-45ca-a716-e4fbaa7f228f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 0e67402f-ee24-4b8d-b076-485f96b9e17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 355dff19-c4aa-4e6e-ac83-be87f56c9f9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8721;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0158;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'hC4CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #483 ab6b91b6-b1a9-4b89-945a-20710f692a7d)");
unit.assert_eq16(16'hFC5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #483 1245ad70-d00a-41ba-a4c2-1d6cb1809580)");
unit.assert_eq16(16'h015A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #483 15b47d69-8d9c-48ba-877f-d849d16c1875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 65f87c53-9471-443b-aa69-acc4908c64f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 d3eceaf2-587e-443e-ae33-091419b0ab26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 5e363b58-ff5b-428b-9406-da4b99056934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 c81dbec7-773c-4097-9cfb-aa25192b2e82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 f68fe5cf-375e-4de7-b169-de76a6b082d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 e1e25231-3cbb-4fd4-908e-31d7aaf65dc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD61F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'hEF80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #484 27120f71-6106-4730-9882-f3d7d94cd506)");
unit.assert_eq16(16'h4B78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #484 479fe00b-da60-4036-8af2-4b50b811daa6)");
unit.assert_eq16(16'h0F5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #484 6d925a98-1d69-4dcc-b26c-968301dbf687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 e384ccd2-c55a-4c1c-8a0c-eaeff419e689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 0fbf3107-db65-4230-8a33-f9f2a29fd9a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 78700a57-6eaf-478e-955c-4099606ae064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 8d0ea877-93a3-4146-b20d-c76aa81a2ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 417674a5-ad0d-467d-9181-48e1143c9d43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 e9733ea3-92f7-4891-a823-c6ae361d01b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB7EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0318;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h0E78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #485 dd0f0f00-ef97-4666-946f-d91aec935cdd)");
unit.assert_eq16(16'hB7EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #485 7cd2c829-63e4-468d-98e0-4141da37a78c)");
unit.assert_eq16(16'h031A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #485 8cb0d844-157a-4a79-8433-a5d188c3f1fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 6879dac3-21bb-41d6-9ff5-2e0dcd7ba735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 73edb801-d6c8-432d-b347-e02ecefb8b34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 bf7d60b3-af72-4478-b7d3-a710cda1565e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 e3176a74-fc3d-47b0-b913-a85c26d602e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 fcc52894-f339-4985-8e13-b9311e31a9e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 e1934be4-0206-4786-b659-d68e4ab4b552)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB805;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h7D16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #486 93c232c8-8aba-412e-9d47-0a015bb57dc4)");
unit.assert_eq16(16'h4B4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #486 708b899f-e667-4680-b841-8b481e486bd0)");
unit.assert_eq16(16'h043F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #486 8fa9748b-0b0c-494e-a1a4-fb7aa6fa97f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 ac379a06-57c0-433e-9a30-4c489042b41e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 1c13f4d0-7a5c-476b-91c4-8ddb201247af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 07e340a8-986e-47a2-a11e-9c81b62c133f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 f6401ab6-96e0-4d7c-9a95-6393e9395579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 08fe144b-f98f-4e45-bfbe-0a99d0220b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 1f97fcc2-1866-46eb-8f7a-d9fd68646267)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7868;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0973;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'hE91E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #487 ba8bd90c-6994-4f6d-b911-d247d380a034)");
unit.assert_eq16(16'h7868, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #487 25b55c1b-ca6e-4cd7-a2fa-f0b6de8b276e)");
unit.assert_eq16(16'h0975, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #487 22977519-5758-4d6c-9604-78a32013b947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 8057ed03-7923-45fc-958a-86e4ddf3f4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 44c7cee3-8c01-41ca-9ccd-e7243e9a084b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 51e5f190-c755-4a33-8920-5a30e4bacac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 bc633394-7598-474a-b470-1742917dea10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 8ec7cdc9-2550-444a-a244-c71e2cd3de65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 1c3b255e-8933-4bab-a8e3-be5763c0a4b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7526;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h739B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0286;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'hDC55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #488 498f5401-e9a6-4a17-8510-87316da44cdf)");
unit.assert_eq16(16'h739B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #488 4aff68a6-dcd9-414a-a4d6-cc1ee11f3df1)");
unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #488 f346c8b5-e06f-4cf0-962c-7b22d6c5e30b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 8c32d106-5ead-4917-a716-0d764abbc62c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 7ac24503-0d73-4b37-9510-46dbbcb01f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 8e887fef-d72b-40c6-acb4-ff2111b81167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 0bf75aa7-0dcb-419c-8610-65a4e7cb50d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 bbdda8df-3a2b-45e7-85e9-0875604ec303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 5dd243cd-9ef1-4157-8751-396d459d3ab7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h991C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA8DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'h3179, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #489 ab50d360-4d65-461d-8ff7-dc1637718de9)");
unit.assert_eq16(16'hA8DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #489 6f52b81f-ad6c-4add-ad82-11c12c6d2bf1)");
unit.assert_eq16(16'h06C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #489 dbf9876e-d363-4335-815a-aacd275e9a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 33b871da-e250-4423-a90f-926582d449a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 d2502704-9669-43d3-9af6-76a38414a7c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 492f7dd7-fe27-47db-a562-b260f416c487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 33b16c70-0f59-4ccd-892e-637cb4b6ebd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 39e35e76-3360-47e1-9f0e-3d3056bf8f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 85a31ab0-fbe7-4b35-aeca-bcb7acfc170c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC88A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'hF0FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #490 244bd38c-da6c-4a80-b346-258fbb9d9383)");
unit.assert_eq16(16'h05BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #490 77b0d663-352c-471b-ae50-b14b00e7a78a)");
unit.assert_eq16(16'h0FE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #490 2e55cd40-26b6-4a62-989f-6331effb11bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 86651a60-4441-4417-ba13-0f80308ca1e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 6dcbe7d0-4664-434d-a0a5-7a0ec24e42a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 2047c4c2-5355-4241-908a-65b35ffa8de1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 c66aa8e3-db64-40eb-8f3d-16902f5f82e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 beb821c3-7deb-4ab4-ad3e-237d27c788ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 d9ab9b21-8d69-464d-9619-67742a806691)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h2938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #491 abf002d1-975e-4cc8-b95f-a98b9e599d64)");
unit.assert_eq16(16'hDD0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #491 fda40cd2-15ce-4610-8fef-29adf3dd741c)");
unit.assert_eq16(16'h0CEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #491 bf7eea47-542b-4082-8079-3f41fd07b8d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 bd04b894-49cf-4986-846e-cb23879a534a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 6768c0a4-5c19-4ba0-ae01-5baa82d58e02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 30828a81-8387-4c91-98b9-f5d3dcabf007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 67642135-5bb2-48d7-b3ef-d33f5d6d5ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 e4bab2ad-11d1-4d65-9d50-cf3dc42a6e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 e2076285-553e-42ec-8b67-ea6eaa53633c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h005D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'hF347, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #492 be64dc86-14f9-497f-aa16-58af325a7b3a)");
unit.assert_eq16(16'hAF12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #492 e4e6f922-28e7-4974-99a3-17122ca1394b)");
unit.assert_eq16(16'h005F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #492 c97a1818-3482-485f-a0e5-6deec02b6d39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 084c8b55-d5be-404f-92c6-a56fc35143ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 54925c8f-d0ff-474b-8452-d99f5fe1a13b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 141ed08e-8f4a-4154-bcf8-f6c467efd96f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 5f7dc713-ccc4-4037-90dd-ce585bb94194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 57cb40d4-3a5d-496e-ba4b-d6e12c14beee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 148dd713-7410-4226-a1f2-1b4ad838ce6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBDB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h179F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0408;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'hC085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #493 8160b7bd-6c18-4040-b9dd-df73bd21f956)");
unit.assert_eq16(16'h179F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #493 035366bd-7b32-46ef-8a75-dd5db86e10f0)");
unit.assert_eq16(16'h040A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #493 45385128-ae96-4452-a287-e96bc6e82617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 46d07758-1ab3-436e-88dc-b914f47c6df0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 fcb3b7d6-62e8-4715-951f-f523575825d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 d686f6b7-1083-4f22-b9ca-8464c2167842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 82ff9b04-3d4a-4c83-a655-6da6f0313a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 6732bde2-b87b-4eed-9b52-bda0df016a6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 2038ea37-0ebe-41bf-9f2d-15ded7e9121b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3CE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'hF530, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #494 ccd95848-905c-482e-8a10-98745cfcbbce)");
unit.assert_eq16(16'h3CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #494 ca1e9a48-f3ff-4914-bbe2-a333c51b53dc)");
unit.assert_eq16(16'h0C97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #494 e3f9572d-6763-4fe2-988b-0b6970dc0ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 e4ef53c6-85df-4d3b-b83f-5c5de08c7153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 8b11359f-b47b-4824-86d6-10267bd32bf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 d887198f-9ea3-44a9-a51d-26939718df59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 b4d061c4-5554-4bfe-97cc-2596e345fd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 5b943ce1-28e0-406e-a459-91d558a03262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 644f1c74-7e1c-45ce-9192-1b091af2c9ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h148E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h3CB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #495 1c7e4f07-e92e-4d3e-a10c-e258a7a22d31)");
unit.assert_eq16(16'h148E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #495 03e80e40-84c5-421b-ae51-cb31a9a04dbe)");
unit.assert_eq16(16'h0B5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #495 6d4edd9b-c486-490f-91d8-ef0a5fffbc18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 82f21253-4340-43e5-acee-3c8fa7acd8b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 b3c10e0f-6d96-4d9c-b4c2-fe55843bfc14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 d97c3948-434e-41b8-a0fa-622ade7d0154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 3e828f1b-718d-49cc-b7b6-0bcac3cdb5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 16eaddc2-c5f6-4138-a45e-548ddc97b1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 5e2d4719-b594-443a-88a7-75b41f3791d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h6A0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #496 6c205c01-3bd7-4adc-aa0e-42ed9b309109)");
unit.assert_eq16(16'hDF4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #496 912e5d22-e269-4b6f-85bb-f8233d47118d)");
unit.assert_eq16(16'h033D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #496 2bf8880b-a83d-4e2a-a1ea-d5c879e22fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 578a35ed-4e8d-4b3a-bb5a-02d2f46df39d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 3b9e4114-281a-4773-aedf-7ff21797132a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 f91bed70-1ad7-49f2-99e1-a8b0203bc55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 21bdbbdf-b9f2-47d3-97db-615bd3f8089a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 3c9fd7d3-4159-4b44-9458-c95f0fe74dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 0a739df0-2bc8-4b30-b903-9bc00d352646)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC03C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0279;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h4217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #497 8340d30c-caac-48a9-892f-969cb4cc0584)");
unit.assert_eq16(16'h50A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #497 5a3c0a04-10cf-4c48-9e51-987a7edee19a)");
unit.assert_eq16(16'h027B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #497 080120e0-c144-40d9-8ac6-9ce37210137a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 7375de23-5c0d-4362-90e5-e9d695d8b1af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 e144b3d2-547d-4dd6-9899-71dcbcd07b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 0e5d95af-d6c5-4fa9-abfe-ba358fb7cccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 7fa2c24a-9d9f-423e-853b-5171ec80f74a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 45b5e9b1-106c-452c-8d83-ed53db3e6209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 7d4f1476-5d18-4e75-b58b-3954058e5947)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'h8142, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #498 9a4151cf-a1c5-4243-9c7a-a8f418a7ec74)");
unit.assert_eq16(16'h0D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #498 d3531972-1472-4c6d-9bd1-ed1a20a219e4)");
unit.assert_eq16(16'h09B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #498 263ae4fd-68bc-4d65-be5c-5411fa8b5c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 c79f69c4-f7e2-43c5-b0db-a4eed9369cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 908c530d-011c-412e-99cd-62f1edbedf1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 435a0507-a9f4-446f-9a25-5b036d7d0ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 317def69-041d-488e-b15e-9baffc790a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 0d19bcd4-c0d6-43bc-ba65-3de681f9cbc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 7ba8e54a-60ff-47b4-b166-e228e5b8eb4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3810;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0228;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h63B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #499 50138108-c672-47cd-a916-6ff0f511eafa)");
unit.assert_eq16(16'h3810, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #499 a426af02-e323-4fc1-8b1a-a5c2859eea66)");
unit.assert_eq16(16'h022A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #499 0e88ee31-2968-4b62-a39f-571223515e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 f9f83674-1799-49ea-9a27-95709a1e3a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 916c8686-bb61-43e5-a077-a5da308d1aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 22bac4b8-9f58-4c0a-a89b-3cce810e75b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 7e63372d-4072-4f26-9977-2c732654d595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 0aac53c1-6f6b-4231-83c4-57a222fef63b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 5db7c9b1-cd2d-40a3-96fe-c8b308f6d7c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7CB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h9BCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #500 ec0f28fa-0c31-408a-b450-62ff0b3bb635)");
unit.assert_eq16(16'h7CB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #500 f5b7e58a-5f72-4fbb-b151-f612ddc55787)");
unit.assert_eq16(16'h0CF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #500 7d555a3e-4eba-438e-af88-b6071a1dd933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 3d8aeddd-cefb-490b-9a61-efe6ce857219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 9f4e4b5f-2a64-45e3-91f8-278834702f8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 f15f6bcc-162b-4ff1-b938-b411e4f59f51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 53d9bfe2-acc5-4be1-996e-3ec9dac1b67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 dadff806-2549-430d-b664-df5fe9b3842a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 253b5649-1edc-4e56-b4c0-535d1c1ad4e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h947D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h96DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #501 578f06f4-9663-4a31-9856-c6604eec20da)");
unit.assert_eq16(16'h947D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #501 55ecc403-71d5-4a6b-acc4-4e114aa029a6)");
unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #501 1ab94f0b-ae9e-44f4-95a5-63f42c5b1b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 62037fcd-4548-4b59-95b6-7a0909782902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 061fa567-71dc-4a3e-972c-cea0df7de3c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 d964ac91-6502-4e73-9362-dd897f5ff883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 a7a1f939-8b9f-423d-b57a-b38075c66842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 193a89b6-2da7-493e-8c75-9cc8a5255dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 59c9ce65-26ab-4a1f-9da5-209adff4e9fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1122;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h0654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #502 cf9c4903-1f5f-4b3b-97c0-6b71c4cdef3f)");
unit.assert_eq16(16'hA9AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #502 71a52779-8e89-4897-b397-00772b364bed)");
unit.assert_eq16(16'h0B7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #502 e9e1c967-8128-4634-bc9c-849ec2c5797d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 12730f1f-dfbb-466c-8a94-8fc229eee28a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 a1046e3b-e18d-4ca4-88e5-52f602badcfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 9994ecf1-e9cc-42de-8872-2cce0f13e74e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 218330b9-c4cc-4c6b-bc21-0ca0f7d65961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 bf215737-5d0c-4f18-873e-14fdfcc67763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 11493dff-af2a-4591-aa78-0e57c57b8b9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBFF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h7550, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #503 b31d9a71-b87a-4eb7-b24f-4d9e2ab16642)");
unit.assert_eq16(16'hFBE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #503 3439ec91-60dd-4c32-a028-5707d02d09c2)");
unit.assert_eq16(16'h0CE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #503 45b2a4f0-660a-45a1-9b91-34eff9842568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 5d42d11e-5298-48a5-8844-04f9c5461f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 f8e01992-c2c8-4ecf-b113-49d84b689d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 ef87dfab-10a1-41d8-9324-6cc66859bcda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 ed8b77df-e2d9-40b7-abe5-a5023ea6da77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 6ef6f753-f1ad-44ed-819a-9490ca9f79d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 ed7cee8e-dc63-4def-b82c-37583fb2f555)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h28B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h99CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #504 53686c3a-61ce-4384-a1b5-70c58f7f70e6)");
unit.assert_eq16(16'h61EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #504 94fbff1e-c82b-4b88-aee4-e4d023bcdc29)");
unit.assert_eq16(16'h0CB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #504 d7df2f19-df1f-41e8-a1c9-1314120f40d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 5d6b2f60-2fcd-4e77-9739-ceb0d495bda8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 7cc8d8dd-dac3-4ffe-9f28-75634333c550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 1ab1b8b2-387b-4740-84b7-c6006e1b3f76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 622653f8-b013-4be2-9347-b05c845735e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 ce235a8d-267e-4126-88e0-7a9faa23b20c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 f1117189-ff9a-45f0-9c38-097a441bda5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF6A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h6039, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #505 78cf751a-888a-43e4-9095-3c0bbf3c5af8)");
unit.assert_eq16(16'h03D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #505 54e0315a-bca5-44f2-b6bc-6a3b37eea958)");
unit.assert_eq16(16'h01C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #505 d5aa5ac6-edf4-4caf-af76-a079fbeeffdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 16822eed-a63b-4f06-aa7b-7d644d1e9b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 d3aa1080-c6de-4138-b1ad-8e94381dc916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 310d6ee0-e4be-4d0a-99eb-2de70ad5367d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 0cdde4c4-3b17-4de7-933c-95bfce0a780e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 4242476f-0aa7-483d-b574-506f16899015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 03067bc3-817f-404e-b2ae-0607fb9a10ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h068E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0661;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'h7F3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #506 beea2618-e5e6-45ca-ab05-39b758e300a0)");
unit.assert_eq16(16'h068E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #506 43e6b689-614d-4941-850a-c275db88bae0)");
unit.assert_eq16(16'h0663, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #506 23c28000-9da3-4997-acf4-734532d365e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 43631f2c-8cd2-4a6b-987a-985202386fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 41dce671-2e91-4b8e-b48d-e8b0fab47afb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 6571304e-f582-4275-924c-f0fc5eac703e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 c318a242-ba46-4877-82e4-efe2134be326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 964446a4-483c-4a28-b346-2382c0b96e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 b33641e1-ffbd-40af-83d4-8ca2bde965d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB787;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h2DDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #507 6fa6bdfb-20da-4781-b6bc-9d185d8a59ea)");
unit.assert_eq16(16'hB787, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #507 eaa54cef-6c83-431b-ad6b-ed21206debd0)");
unit.assert_eq16(16'h07E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #507 5c3e29eb-44a3-4621-a5c0-801f9d58066b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 c8893196-f909-4bb7-9e56-26764c474985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 259386d3-27a4-40e8-ada8-6a8cfaa737a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 539186aa-6c2a-40cd-95ba-41f487e2402e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 dcbf3c08-d1c6-4310-b3f9-a126e645fa06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 4e12c836-6dcb-4021-8805-ea3f39b2ccdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 169f34f7-681e-4f34-ae19-5cd772b0750c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC125;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h9DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #508 20a591ed-1e86-4d7b-91a2-e9e66df0a7ed)");
unit.assert_eq16(16'h30AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #508 dbbddbd1-22b3-4bb8-8530-48c09657535f)");
unit.assert_eq16(16'h0A0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #508 7fd039ff-1dec-47fe-8b2d-5f0228655dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 b6c7abb1-e875-47bb-b699-3b5c8a0209d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 8619ddf7-ec32-4549-9778-7fdfb265be47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 3d4217cd-3f56-4238-bfbf-bf44c14f2dbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 9090e88b-8812-4259-80de-e06239f51034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 4996f978-a512-482c-bf7a-a5581446ef7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 6bc261ea-51e8-40e2-a36d-1b1a52781a7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2878;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'hA30F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #509 68e7aa06-4f8e-4ac1-9199-0526b3b7c155)");
unit.assert_eq16(16'h2878, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #509 ce1c2406-0f4c-46e3-8dbd-4745040c7695)");
unit.assert_eq16(16'h00D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #509 b611aad3-855a-48a7-a970-11fe189c2c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 6bf2661e-64da-4eaf-bd06-8c1ec6520e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 b90c03fd-647d-40d4-8570-cde4df7625a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 1fe8bde9-d864-42ea-9b23-153ca620e8bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 43c4c490-6400-49d1-8368-81d3d156a907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 8cbbc058-cf93-4d5d-99df-d7534f4889cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 a167a7d5-3e55-4d1a-9d01-5f20b556256b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0480;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h60BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #510 a84bb3ac-2af7-4afe-aecf-cd2dfbd67e67)");
unit.assert_eq16(16'hB8F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #510 422fc91e-52db-419a-b47d-dc2836feaf8b)");
unit.assert_eq16(16'h0482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #510 561d2de8-e9e6-4b8c-8bc1-6b91145b0035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 0ea9c4da-744a-454f-9cc5-0b5b15049575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 f63a1bed-fb8f-4fff-be0d-f4033884a1de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 edd1acef-6fec-41ac-93c3-722d41786997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 714ba970-6c23-40cf-bbb7-22b7b9839444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 329c3eab-d649-434b-b3d1-f0da9fa3f70f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 35c63679-41fd-4da7-8c30-ca3679ff12bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB98C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0303;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h11A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #511 7bfdba8e-ef0e-40e4-bfcf-26ad14b7441f)");
unit.assert_eq16(16'h9A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #511 7f5e2cc4-5d01-4797-8038-e94c345bd81d)");
unit.assert_eq16(16'h0305, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #511 4cc5696f-5075-4b04-9dee-bc8098d9ffe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 1a610fbe-df69-4bd1-856c-533771e25054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 c7b447ef-b033-4af8-bf1a-ef61fab2e1ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 4aa605dd-a01c-4002-8e81-b9983d553cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 194770ff-f992-442b-a93a-e6ca8abdf1a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 79ca1800-40a1-4c7e-9f27-eb6bec8ce8cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 4076d146-9113-4e8d-81e1-e9f85fa10d53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7CCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h7DB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #512 916008b2-c473-4420-9aac-2054bec87892)");
unit.assert_eq16(16'h05E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #512 6656ebda-73d5-4910-91a3-1357f835d795)");
unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #512 3ccfb6de-2f94-45a2-8b02-4dbc647f14fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 7ed03385-9697-4c28-99d2-1ab3777466c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 0d2e35b7-eb4a-4294-8cb3-d2ae5f767802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 7ec414cc-529e-45db-bf47-dda8614dbbac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 5bf4f1ac-d5ba-46b1-9a73-228c41c22ad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 a24b29da-3ca9-4015-b5a3-24d4128c4604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 88148676-0dd7-4212-9e22-51f6e0130abf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h69EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0188;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h69EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #513 e6d492ec-9b7e-4882-8602-c96ee4c8894a)");
unit.assert_eq16(16'h4BDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #513 565e2aef-7b15-43f3-b3b3-4e5c1fcfa381)");
unit.assert_eq16(16'h018A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #513 c3d93f55-06e3-4e4e-91e7-b002fc169090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 d23b67f3-6c16-43a1-a1f3-210f7bf15d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 c8c9b9ac-6ebe-43a3-9108-6a7dc011876b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 9d8ebe71-6b9b-4727-a1ef-f381e10f7000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 3bdae72e-87ed-43ae-b1db-822775a88f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 ae502002-68b7-4e09-a169-88007e4f5cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 509cdff7-8722-4e40-801a-34ab7518374b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h055F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h9B72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #514 43204f8c-6dd1-4906-bce5-86c6a60b9c55)");
unit.assert_eq16(16'h57A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #514 01c7d06c-ba16-4272-8356-b4aba4fb6ea3)");
unit.assert_eq16(16'h00EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #514 9119ede4-4d9c-446d-93b8-e7e4c1cdb007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 175d453a-0949-4000-be33-a0b399e93706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 4cc39c1c-f892-47f9-a7c4-95595ccce5bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 4007e848-d829-4cef-973d-f7bb0c7f6fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 871585bd-e51a-4af9-b950-a1277642db2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 21c4d18e-a99b-40c3-b544-b3a8f72cdb67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 20f1f7cf-bf0e-40bb-b2fa-882275b7bda4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC615;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h2F48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #515 8493d27f-fdfd-4a60-8e85-9e57462feb82)");
unit.assert_eq16(16'hAD6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #515 1a094d82-3e6e-43f6-8275-253fc6281497)");
unit.assert_eq16(16'h0340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #515 93d7ed43-b3cf-45a0-9ed7-55a652a54826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 c13eb381-cb11-43e3-9b3e-78f05e605d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 a4eca6a2-54e5-4876-bb42-3367acd9e6ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 5ad3dbda-e6a3-4c58-879f-40e83063f1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 5eda7e8c-07ba-428c-83d4-dd06342336fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 6077bd18-66fa-4988-958e-624eed735db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 8cfbda13-7e71-4f0f-8c1c-7af7f242aa33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0472;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'hEB3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #516 3db4bbd6-01c7-473e-993e-ca9f121413cc)");
unit.assert_eq16(16'h1597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #516 c7a20d64-6c9f-4bd7-a16b-cdeadd257a82)");
unit.assert_eq16(16'h0474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #516 6fbd4e4f-ed93-4cde-9ae6-e35ceb1482f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 0d30a187-6234-480e-84d2-ad39cf528784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 584c4826-b47d-4c48-aa5d-978993a341f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 5912ecdc-8bd0-4c9e-adb6-22afe652c12e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 0fe99016-5d2d-46ad-8d0d-41ed356490f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 b4616cd3-8856-4bb8-899f-5067cc9d30ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 bc4b4496-2e1b-4163-8c3f-a1f5f1101410)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h397A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD952;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h397A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #517 d6143770-af2e-4759-a7ef-32eb9e26bff7)");
unit.assert_eq16(16'h6958, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #517 91517e79-7b4d-41fa-90a2-f39ab3260662)");
unit.assert_eq16(16'h08E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #517 11fe16f6-3598-40cc-9fc9-4bdbc79aeb80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 f6180aff-91ef-4660-8032-8a7fe6d32af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 5564a65f-88d0-47d8-97c0-a484665505b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 7c2e200c-ff95-42ed-ac97-15e0a299f10a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 0fdd8783-914f-4cd8-b7a6-b8813348d445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 978bbc45-a0c9-40b8-9251-72530671628d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 f1a678a0-a6f6-48e3-9953-05bac43a8642)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0391;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h2B25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #518 0416a28a-a21d-4aa7-85a4-da37250a7159)");
unit.assert_eq16(16'h73B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #518 af100965-5e40-43ac-b8bf-2aa314c37b7b)");
unit.assert_eq16(16'h0393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #518 037a53af-b5de-4a41-b284-a1193e3f0306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 395c2f79-40a5-4044-823b-30e2ed3f9e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 99e2396c-8d8e-47c1-94d3-b37e28592c37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 5201188b-5ee9-4896-9bbc-5692559e0ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 bf35f082-baaf-49b9-a8ce-d95cc63de1fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 8445fb0e-522d-48c6-8edd-80e9266cb495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 01eedbc8-01aa-4b6d-ad0c-6ce9262fd942)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6BD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0889;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'hAA2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #519 aa28bd11-d403-4503-bcdb-ab670b9d4cbe)");
unit.assert_eq16(16'h773B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #519 48b2f9b2-3aa1-4237-bd78-d442319f964b)");
unit.assert_eq16(16'h088B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #519 36807681-423e-4f32-aaca-b9e0d14e5596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 dd1369ed-e49f-4ade-9bda-95f56c64bf6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 20085356-ea45-46d3-ba32-ef9ae466b123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 eba91ff6-aa75-4e48-95c8-0f7d3f493e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 02902c4f-5dd3-49cd-ad4d-0c5727c904a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 c0a6109c-4841-4f32-a69c-39805ff95d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 252b5871-fe0a-4ca8-a590-75d188807cc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h95A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'hFB7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #520 00338106-bf2a-486d-8d8e-ff58d81b40a0)");
unit.assert_eq16(16'h09E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #520 8141a596-f610-4601-8c97-656dc389fea5)");
unit.assert_eq16(16'h0D6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #520 1dccda5d-72c5-4ffd-80d8-322d45cbfe0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 0d87682d-caf7-4c2a-886c-89242927c60f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 456b2fe4-7f89-4da4-a18e-c9c763549331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 edf3d379-2411-459a-b190-f6a17996671f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 fd391f97-4688-4e0a-b5cf-0d4fed7e286c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 a4f2412a-a91a-4d8e-8b39-46b688308053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 b2d5d8de-0483-4db1-ab57-616deaba262b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'hE6C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #521 42b6b7f6-4cb1-4fc9-b278-05ef77b9fc25)");
unit.assert_eq16(16'h9CD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #521 6b4e3f70-4382-4322-a4b4-84ed87ff9918)");
unit.assert_eq16(16'h02C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #521 1a657556-8cd8-432f-a897-ef849ce3849a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 19812a76-9b14-4c00-9622-59a586700ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 21e5a3d2-ecc8-472d-aaec-348fe5c6a9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 145e9cd0-72ba-4229-9a7e-414f9ed3af1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 4ae01db1-bfb5-4f44-b95c-326c499828a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 c94ab2ad-0acc-47cf-8f73-df1355bf5077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 438fd69f-4a37-4250-bba5-4ae401222d0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h42B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9689;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0802;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h42B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #522 5fa63cb0-ef2a-4be0-b319-4ffb263a3937)");
unit.assert_eq16(16'hD4A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #522 b726f94c-150c-4ba4-b69a-c98388d98bac)");
unit.assert_eq16(16'h0804, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #522 21939825-23b4-46c3-bcbb-a26e6ef30386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 42cb06eb-6d22-4023-9229-faff1f7743d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 8d8dfe4c-2af7-4530-81b3-66b0ca7be932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 ff2fa8f6-9b29-44dc-9587-b619ee79be48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 17139308-1586-47ee-96d0-6a1be3e7eca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 615ea429-e8d1-49eb-9b24-840867fd477b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 4d8c0836-9921-437e-a413-f2313f56865a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD95A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'hD95A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #523 cbfe8bec-983f-43a7-8340-fba428accb30)");
unit.assert_eq16(16'hC0E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #523 fa69492d-2232-48f0-abef-323bc9f1b6c8)");
unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #523 9c39fe1f-6283-4f09-9d10-1e32d4ef65dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 6d618c3a-6d42-49c4-a73e-fa28bfc9db0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 afa32a08-3fc2-438c-b570-34dd42977f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 37ce33a5-6737-4bd8-8e7e-274f665c42ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 61d6bd04-1ce3-4613-9554-bdbf5f60c94c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 c6973c26-f1a0-464b-8b64-8393e0ad0aa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 27e214b7-1587-49e3-8a4b-8ebea35279fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4998;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h4998, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #524 c4fcb7ac-1b42-48b3-8f32-558f6b09f7b2)");
unit.assert_eq16(16'h449C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #524 6684812b-681e-474e-bf75-072031282044)");
unit.assert_eq16(16'h09FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #524 0e5d3fc8-2a25-4c3d-81d2-14befc7539bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 1897591c-7de4-48ae-bf20-e65342799ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 17832472-6327-4f13-8ede-44dcb07cb0bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 80bd2902-1a36-4f75-bcd6-20f7b1695ce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 ded58461-2038-489e-983d-e13b93a126fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 fdf65269-9185-4946-9df9-3a975544862c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 119b2a10-8af9-4995-83ec-44b3c3a51d1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD7A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'h8A63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #525 a6a028d7-53a0-4072-a5cd-a541fcf93c6e)");
unit.assert_eq16(16'h899F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #525 6a15aad3-03ee-4f74-89b4-6c9de1d4263a)");
unit.assert_eq16(16'h05E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #525 29179ad6-6a73-4414-94fa-5df3ca3829fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 2b80a7f2-c4aa-45eb-8a7a-0752d81f00c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 07cb9e3c-bb8a-417b-bfa6-9df536a1009c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 a4c57548-db6e-44d3-b45f-b78dd61ce734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 959f4b27-cffa-492b-bbb4-71dc866d4c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 c8422744-2e9e-4d14-8570-5c25e1b2cff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 15886d69-6862-45ed-96c2-4003686c3ccd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h800A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0369;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'h3D82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #526 765782ea-6c15-4f1d-8af5-5f1e31f027e1)");
unit.assert_eq16(16'h84AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #526 77e4fdec-840c-49e6-bcf5-b4225df7f6a8)");
unit.assert_eq16(16'h036B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #526 71ff0dcb-c3ec-4a70-8d08-c86374d418cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 a993c42d-b12a-45a2-90dd-d1cce3fb979f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 5911fd9e-e445-4947-84bf-f18eef3ba38e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 21e2c46d-cfb8-4088-96ab-56e9b0856cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 80308c4c-cc0c-43ad-9070-92b3394ee139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 bee866dd-1119-4616-9109-57f4283b329c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 2cde28f5-9169-4c5c-a04a-e1045c6572f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9138;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h9138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #527 8208db5a-648c-478b-869e-de3bb124756b)");
unit.assert_eq16(16'h1404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #527 73d57a62-6858-42c4-931c-befe162608e5)");
unit.assert_eq16(16'h07BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #527 fc93e761-1fb3-4af7-b4c0-46d69cae537d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 59909289-a8bc-4c81-bd5b-1b5a05706c49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 1a409e26-c951-4363-b51d-23e9450b1ae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 5cf43dd6-e5a1-4f9f-bded-b0fae92a7230)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 34c73a52-ed11-4fbf-9a61-1599c30fbad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 d0ce1919-d637-4562-9ad7-b56ae41a546e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 c5c79d11-9cce-4155-84f7-e04d249032cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2AD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h059F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'hCB4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #528 70f8a05c-da28-45c8-8e4f-5cc246c058fc)");
unit.assert_eq16(16'h2203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #528 afd58a2c-6ef7-4b82-847c-bd51d5943462)");
unit.assert_eq16(16'h05A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #528 cd4ad616-8bd4-4a5a-9660-33b07d92f3ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 b983ef79-e840-4c65-bb31-cba980dd8f14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 bf3a6504-9124-4ee7-aae0-6568501aa0a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 0375f7a0-2490-4f49-890d-a2d924642414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 cae5b913-b7b6-4fbd-a3ea-8363d76ba969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 873cf995-0b04-49f2-8aaf-31276ac5d6d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 8fe5566e-46d1-411f-a9ee-e28ee3819862)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0217;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h10E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #529 b9e9a485-4814-42e1-a10c-23b631eea775)");
unit.assert_eq16(16'h8A17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #529 8905c0b8-8f73-42a3-8701-8cf3420a58ad)");
unit.assert_eq16(16'h0219, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #529 5389cdd1-fb2e-4141-a37a-a6ee7e876646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 c84891e0-f3df-4fac-ba98-0c30f3ce2388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 90d795c7-4eb9-45bd-a083-a4210c342316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 8f528ed1-3992-4f18-aa70-084ce9c0939a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 7208fc05-94f7-40c9-b463-ec32be1e4a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 83dde007-a6b1-4d0a-aad4-3f9d1ddd96d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 72d6fe07-5ab4-4d4e-b071-ee671cd40c09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h41C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #530 53085aa0-119b-46a6-a62e-9afaa4085a7b)");
unit.assert_eq16(16'h5CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #530 1d4747eb-b463-4fe5-81be-d679db862a96)");
unit.assert_eq16(16'h0B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #530 a1dfab06-02a3-4310-85a3-aa2b1a1f7db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 ab9a2d77-9b71-492c-a076-f3acbefeea35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 9cb0fe99-4033-4e4f-bdec-c59519f00cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 28901bc7-a9d3-4cac-a9f3-6c7586dc9474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 6c7d6dec-949e-437a-ad07-54d42039c15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 0c0d76e0-e220-449a-836e-bdc3bed20831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 775cadab-9edf-40b3-b712-8fd2fbf586a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9641;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h78AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #531 4b19ac76-ff86-4e3b-9ca5-a8733ba3fb8b)");
unit.assert_eq16(16'h68EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #531 70ea6fe1-0f38-4a88-81cd-463f86bde9c8)");
unit.assert_eq16(16'h0FE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #531 d271ee95-ed20-4d42-9f5c-401770b687c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 2446e81a-befd-49f0-9438-c1a839a62700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 a9c64da4-ca7c-404a-803f-10c0fc2550b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 fccc49af-0af3-46c1-9b57-79fcb04dada4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 7544d102-84ec-45fc-99d4-bddd78afd2a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 aec65fbe-4862-45b3-888c-99f2675d3e68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 78baa27f-54e0-40aa-9afa-2c3d973be927)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA8F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'hBAAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #532 2f978e28-6e3c-4231-a410-e9893b321e25)");
unit.assert_eq16(16'h5DC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #532 51d08301-67c8-48a8-9c9c-94fe7e60709d)");
unit.assert_eq16(16'h0B52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #532 8b915aa4-6627-4095-bacb-380133a88aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 2783eff5-e854-4333-bb86-29be99a788f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 64ffe746-756f-4588-9fa6-2159108328aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 1f5f79a6-0ba4-4e8b-8854-f5c3da317040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 ca711598-54a0-478f-8cd0-1436edd43388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 e0ba362a-7961-48e7-95f2-c3afd20d2b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 89fd4a51-cdf9-4287-874d-28f4d61d7bfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'hC0D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #533 c96501be-6920-45a3-9051-06df5a9af79f)");
unit.assert_eq16(16'h3116, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #533 2f074915-25c2-41bb-9cc0-1727b7782943)");
unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #533 d5ea53c7-d740-4d02-86f8-d3e7e570bb1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 5a0a4276-0746-4652-bc41-ea3750339ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 17230730-17de-471d-be59-fa4f506c3160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 9840d4b7-eeb2-4c89-a4bf-c6738eea0c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 13071946-a0c0-4556-8012-31e9ca3a829b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 82e90c7f-f45c-459f-aae7-d1942ad53b4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 a6a794d4-37a4-4308-ae8e-3ced2c3f0bfd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD60D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h075F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'hD60D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #534 7872f8a4-719d-4aed-bd84-1af10c750731)");
unit.assert_eq16(16'h3DFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #534 20505ae0-d02e-4b86-b45d-4fb1f958d39e)");
unit.assert_eq16(16'h0761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #534 b3d966c7-d600-4414-9853-1c756ae60304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 8bb368b8-6009-4269-8ce2-4d97bd2d7239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 1b55befc-d687-4ff2-ad3b-be9f26486670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 b181188f-11db-48c4-bd20-2f931ed2a7bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 6843a505-e881-42b6-bdf4-48b9907cf1e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 f122d0d4-bf76-44a4-a276-e462082b74b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 9681e5d2-f9b1-4a54-8f99-ff897a10dc47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0085;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'hCD79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #535 ec1bcc8b-f041-4bcb-bcbb-075bf52a417a)");
unit.assert_eq16(16'h0356, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #535 bc05da07-61c2-4c20-b7c4-1dc5fc2f3851)");
unit.assert_eq16(16'h0087, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #535 55a831f0-11d9-4219-84fd-05cb6af8866f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 b3e8df86-7090-430c-91ed-cfb27dbe6809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 84ffb555-2919-4903-9329-e6eeadd41736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 1ee789c0-85d2-413f-a383-9bbce7198b49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 b5903e12-79e0-4f5d-a92a-7acdbcc09c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 1ea29b1a-f462-49a4-ba02-c462a47a987e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 fa4898ed-42c2-42a6-8424-3519ed5e2621)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h470E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE216;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'h470E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #536 c422f96c-4f20-4892-81d0-06a85843e546)");
unit.assert_eq16(16'h1C61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #536 1e25d40b-64ad-4988-83e0-f89a49f072e4)");
unit.assert_eq16(16'h0C7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #536 5b5e6e2d-805d-462c-bc33-61d1e5201d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 cc98b356-e97e-4d7b-9cab-154a0f25af74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 fc0115bf-a113-417d-9418-1308543ffd55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 ab52f82e-c1e6-4b49-8b87-888ca63abef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 325b3a3c-a325-4133-8ad1-b38ce561bfd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 0f0d4723-5de9-406c-803a-9308193ed46f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 5666fe80-7cfa-41c8-b477-e4437b587ea1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0595;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h5B78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #537 4b5bbdd0-2443-48e9-b39d-c43987f289e2)");
unit.assert_eq16(16'h3577, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #537 6c1b2631-9556-41bf-a90e-1806e8f161a4)");
unit.assert_eq16(16'h0597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #537 92e85a9d-dcca-4789-85be-e98f362bd58d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 065b5c88-5469-4375-b2b0-485d12709343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 1f22fdb8-dc42-4f6a-b8b9-14b44e8a5f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 0bb3680b-6987-4c07-ad79-8ec1ee9cd4da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 d7333882-227d-4b1c-a96a-ee2cf617f996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 b2b9ca0f-620c-4eaa-963e-8de991fd1120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 c529f372-5396-4947-96a9-ee269c681b0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'hD7F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #538 33adb083-6d6f-47d4-b0e8-13b5910eb95d)");
unit.assert_eq16(16'hF3AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #538 d8b272c8-d815-4c4d-a37c-99a1f5fa8134)");
unit.assert_eq16(16'h0341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #538 d8d3869f-fb71-48c1-9591-f45d956df40d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 6d93186e-c598-4d34-95bc-8ed16c4f230f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 e675859e-3af5-4353-b4b6-f6d26211b7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 863914a3-ea1a-4d0c-ac93-9d2d0bdaa199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 33235b82-5e22-49fc-bd05-389e19690e84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 5c05e822-b7c5-482d-8306-1c34372969ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 b9490123-7f0d-4734-9b26-f366af159555)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9785;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'h7FA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #539 21ff8fdf-e9b7-4755-8f83-d94b38a23f20)");
unit.assert_eq16(16'h8B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #539 617b167d-d409-4556-a4f2-d41b1cc4ea20)");
unit.assert_eq16(16'h0A8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #539 528bc968-35cd-4648-ab61-f733507f96f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 92855703-ef13-427f-a4cc-ad77ee01ce32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 80712a4a-38ac-4e8f-ab6f-1243b0df016e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 0ed08ac9-b04e-4b59-b007-c9af7b48b318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 20e8b56c-c885-4c49-81de-53ea27d38f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 e6e6c0dc-2e24-4739-8fa5-bb6be4a0abf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 f1656ca5-9d92-4d11-bf52-beb1b47c0793)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE4B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0754;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'hBEC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #540 5187e352-3b3a-4863-9dde-e9447464cb05)");
unit.assert_eq16(16'h1BB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #540 e777e723-a414-4f78-8ba5-907b1a5f52b7)");
unit.assert_eq16(16'h0756, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #540 6d2a6b82-756e-4fb1-a722-35c800f5e238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 833a132f-eec8-4664-b4d2-77c834b2b801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 3d99255f-9b81-48b8-ad93-b8691f4a3976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 9a1d1d3b-61a5-4c2c-9b7f-fd0435a571fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 d83a4c45-096a-4b4c-a630-77b6c8d99c2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 d4a82012-8ffb-40fd-9f37-18a15772e5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 3ac97c9e-147d-4fdc-ba0f-e4eb079357af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h35F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0563;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h35F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #541 139a097f-1286-4e4d-8c43-66f4ecc07948)");
unit.assert_eq16(16'h4A11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #541 f293ab0b-99ad-4c2d-b643-ed8e65c4320b)");
unit.assert_eq16(16'h0565, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #541 58c147d8-e2c5-4e69-b02e-77ca6c0f5d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 8a8c39c4-7927-45a9-a344-545e3c9616fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 1590bbb3-cf4d-4e8a-a052-539e71619247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 faedea02-8a86-4e8e-a289-e3a8e361895b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 8f8ec179-9ce8-4262-ada5-0297a7a85ed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 e1c8e261-b11e-4c21-acb2-d81475d580c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 5acb2c26-71e3-40a1-af05-aa071a672aa9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBFF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'hBFF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #542 0d086eef-ba48-4007-b995-6503a5a9f970)");
unit.assert_eq16(16'h9A93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #542 7f43942a-b712-4ccf-a6cf-4c5a54781523)");
unit.assert_eq16(16'h0F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #542 0e1d1ef5-3196-4078-8fe9-ebf0a2daa51d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 3d63c79f-3bde-4d2e-9a49-c7f9351e5054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 37e9e31f-ef25-4cf0-8828-db043318d87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 8b435ab5-0f52-4263-a9af-45cded627bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 543eb201-625c-4d83-aa72-69b3a51eab98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 52d0fe69-364e-4144-ab09-27de1146207b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 9b8a0a0f-6d81-4ee4-8bdd-cd6418781d14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5730;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h050D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h5730, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #543 61a6d3c6-c3f5-49a8-bf0e-f7124ab01908)");
unit.assert_eq16(16'h0AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #543 a4db966a-9c8f-49e8-b8d0-249eb36b6ed6)");
unit.assert_eq16(16'h050F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #543 fc48302d-eaca-4619-b2c6-aa2da192cc4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 8edddf7e-1f41-4eeb-bc0a-7d96fb3dfe2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 c106fdf8-64d1-4e5a-8834-3489ab2b7bb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 7b730645-002a-4d8f-9b21-8d2ae7119805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 8db32971-5f3b-464e-8ee6-5173a7c2e36a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 6e12a8b7-0751-49cf-82a4-c47b3caf95aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 ac7029fc-1644-44fc-8350-d799df4dfbdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB293;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'hB293, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #544 b4f28fa2-daf8-461e-b842-8999be1df0a1)");
unit.assert_eq16(16'hD492, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #544 ed10ee41-744a-4249-a498-ef1574db4f27)");
unit.assert_eq16(16'h0F08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #544 a49f9e29-2fb7-431a-bd3c-3458d615ab62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 7a239b31-0a7a-4047-995f-d75a58808829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 b3a64972-0597-4286-9c4b-e3b366d75c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 baf72b69-a1a9-4583-8e9b-34fe9e2d23e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 663a1c1b-8e1a-419b-829e-517d34a3bfb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 e0b9bc12-cdf0-4f82-97c0-90bb835f550c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 25609280-22de-4b73-972d-e514e8541847)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5AC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0195;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'hCD48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #545 c815441c-e0bc-44f6-8fe2-26b12d14c3f9)");
unit.assert_eq16(16'hA56C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #545 bb44d9db-2ae1-434f-9458-5a9c17fbc13f)");
unit.assert_eq16(16'h0197, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #545 33bb613a-1f72-4f20-9e5a-e47272d5747d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 c3dd7e01-04d1-44ba-a728-58e597830337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 1600b9c7-b83e-4eca-9730-42595bb6d07a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 5d6bfeaa-fc06-418d-bf20-5702b5aee794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 943a175e-c0dd-423f-a3ee-0be5d5d43efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 f3fed7a4-9de7-4c79-9c8a-7e5bfb3c1149)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 1ed45ae2-83f3-4b89-8f01-d7a6f4cf6b84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7AD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h7AD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #546 1601c916-8d40-4b32-b0dd-03512360f4c2)");
unit.assert_eq16(16'h5CF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #546 24b31e86-50cb-4cc6-8a27-3b3ed614dc91)");
unit.assert_eq16(16'h0C59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #546 37651299-840a-440c-9c00-f783616c12ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 e4dbc0d7-c52a-4af8-9d76-696ad5145764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 0bf350da-0b14-4563-bcbb-efb310992fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 1989703a-9318-45ce-bdc6-e29c7e421105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 1d6fd158-dedc-4523-a26b-487ca287d4ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 03552216-5e9b-4be9-a1e8-166d35d452cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 f2ac8800-27e8-446f-b715-d9fab2a6be72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8331;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7FF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h8331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #547 e3bf08ca-7eb4-4af6-8b4a-063225ffb3e9)");
unit.assert_eq16(16'h8186, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #547 62d9483c-43a1-4675-97f6-8deebb4b521c)");
unit.assert_eq16(16'h0DA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #547 5c943dda-8d99-4eca-8282-0303a35dd47d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 494eafb6-781d-47af-92ed-61cff6bbcbf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 11d1a5d4-7332-4851-9494-e588103b9411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 425348b0-cd6f-42c9-b522-5a801e5d3eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 3fe64440-7c55-4542-99f3-a4cf548af2ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 a88b6519-f17d-405c-ab32-4243fa1e1540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 b8799e96-5a70-4498-901a-2389bfdab0d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4587;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB7C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h4587, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #548 00ae2077-71eb-4c62-9235-ebf2ec628a84)");
unit.assert_eq16(16'hCD0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #548 0b52dec5-aec3-4b0b-83c4-5f66ad4468b3)");
unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #548 c38ddf32-4eb8-4bc1-bf74-f5b6fd37dc24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 d63333d3-f03d-43e9-ad00-af405f13767a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 91f92230-db8d-49ca-8c52-b0d7d53053bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 f874d989-4d03-4fba-83ef-f9a6af093341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 2a304df8-ccbc-403f-97b7-b2ed97be89ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 a2e508c1-9daf-45ed-b21b-581599a93423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 7d5d4df6-21fa-4c50-b7ed-334a78ab70d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCC58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h800B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'hCC58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #549 f4864fa3-5826-4a9f-80b6-00cfa950d6a0)");
unit.assert_eq16(16'h7150, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #549 2d541e96-0550-483a-a2b9-841d6db3bc9f)");
unit.assert_eq16(16'h0AB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #549 6edbd8eb-9c32-4206-8926-729b1e54c0fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 25e96434-0302-4314-8385-c6390a282e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 ede99a50-31dc-46be-b1b0-96931444df39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 38e78375-450c-454b-b586-fb149db1d9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 ffd79b1b-8a10-43f2-8178-b799f7413433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 7b088813-bc75-4c9a-aa8f-54e8f95c58c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 c6abe43e-30a4-47a7-8897-61fbab81d599)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0557;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h2C79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #550 3fb180cf-ea5a-4381-bc97-bf3b609cf788)");
unit.assert_eq16(16'h4159, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #550 b857c7c9-9d1e-4785-b44e-3b125d7fe529)");
unit.assert_eq16(16'h0559, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #550 88773bdc-76ed-40a2-b132-51060d366635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 884e67ca-26dd-4e92-bfa4-e6c630ff71b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 dc6c5e6e-f28f-4bf5-9c47-7bc465c9a393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 4de3892f-f7e5-441b-a514-eebf2d18e28f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 3adfc824-32a4-44eb-b4c8-14e3489431ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 985f3aae-62e2-4fb5-ab4b-ac94037f44ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 e2f9cc24-1cb4-4730-a683-be2eb9080524)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8AC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h0A8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #551 ef6f10c6-e7b0-4bc4-95e0-6db4e4df6f15)");
unit.assert_eq16(16'hBCB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #551 e8cca4ab-1dfe-4418-b315-5932fd245dca)");
unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #551 5425b126-9ee8-49ea-9d2e-4f90ec8be9d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 83abeed6-0817-435a-85cc-ce047ef8f7cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 5ce00941-37dc-47d6-99dc-4fe6c04e58f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 ea99d4aa-9903-42e0-b320-28ca146c0f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 4df07112-30a6-4350-ac06-e36f8c5933a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 d362d98a-ecfd-44e8-bef8-08001b66ae2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 31b43a09-13ff-422f-bf83-e7249143d0a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF6D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'hF6D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #552 50f36b7c-4331-460d-b44a-496816398bb7)");
unit.assert_eq16(16'hC3E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #552 ca722c02-5b13-4058-9344-72b2569a618b)");
unit.assert_eq16(16'h08CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #552 af132a79-f24b-429e-b567-0651c9f1cdc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 2814f379-7fdf-4862-b71c-424eb03ca0f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 24023dcf-dbb2-4b41-bbed-2fc24265ad36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 fcb90198-c7e3-48f7-b640-63950dd950bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 dc255b66-5db1-4037-9c7b-7d17016275f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 53398f8d-fbb9-4c3c-87c9-4cc748867260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 1a438609-b8aa-4fd1-a1d7-c591ccbaf4c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h683D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'h3FA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #553 5ae4f016-a44e-483a-80d0-cce96c930158)");
unit.assert_eq16(16'hFF2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #553 479a23bf-043b-40aa-aaeb-244fb7e3cb19)");
unit.assert_eq16(16'h0EF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #553 6d9b00e7-e1e9-40cf-bac0-0d465c8f6616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 ed4b3d1c-97d4-459a-882f-32b3f684156e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 47fd05ee-2d50-47f1-9c29-e8ccb445094a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 1cd9039f-4970-4058-b9c5-f6bfcd5065cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 8fefaaad-b26b-453c-9a4d-607708d667fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 8d1dca7c-506f-45a9-b5b7-e5399fce97eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 59ef86ac-f786-4b48-96fb-7daf571a10bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h501E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h7B82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #554 11cb8a1e-e6e7-47ed-99f0-c0b68925d69b)");
unit.assert_eq16(16'hD3CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #554 9555a67a-1699-4be3-bb42-f675cedc0352)");
unit.assert_eq16(16'h06A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #554 4e4a69c2-57f9-4a2c-a4a0-89ac92ff8a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 98696c97-5736-4990-9efc-2a9cb0ffd852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 e338d638-f7a0-4b6c-bdf6-e3fc372f3b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 5e00e78b-4584-4a0d-b7ff-3b50f6be7319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 b4366f9c-3071-4411-bd02-8f1f5f7b8efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 0792fd18-573d-498e-94a5-f175828a5381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 27ed8b60-7dc7-4ed1-a740-71a08c0ebd95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h35DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h455E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0905;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'h35DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #555 8ddc6e39-fc27-4ba4-9f8c-42cb10c0f770)");
unit.assert_eq16(16'h4729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #555 12a47ede-ae86-4e03-822d-c99ea413cb23)");
unit.assert_eq16(16'h0907, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #555 5a429b09-7043-4f8f-92d3-33febe5bf11f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 4d07b5f4-76ed-4607-96d4-277113c8091b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 873d59f4-df32-4e5a-89ba-90defcd90fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 5c8831dc-47e7-4e0a-960c-400de527af8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 dfbc1d7e-394f-4fa4-8b1b-62620cec1424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 34eb1333-07ac-409c-9522-e82c760dada7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 98a80c8c-aaef-41f9-808f-6e5dd697c09f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8774;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h58AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0608;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h8774, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #556 b1c3abbb-c3c2-431f-9d8d-95c4f12bcea1)");
unit.assert_eq16(16'h1CC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #556 45ca448d-73e7-4f70-b969-3de996e89f35)");
unit.assert_eq16(16'h060A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #556 1614d86e-195f-4bac-88ac-f5f41902e273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 cc323287-2017-4c67-9af4-4d751ceb7512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 904722c7-f222-4f5e-b739-ebcff13a982a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 51e67e3d-8d5e-4c5f-bbc0-38d48c411bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 2113c02f-c318-49b7-ad9c-94cbe15f6374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 3c2b8305-ec9c-418b-9996-83ee9310297c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 f76ab352-8b60-49d1-99e1-b5375864c9b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1186;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'hB7A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #557 ddc071ba-719e-415a-9139-f7c0ec299df7)");
unit.assert_eq16(16'hE9A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #557 10978be2-ada7-4b4a-8bef-170cf1c6f8d3)");
unit.assert_eq16(16'h0D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #557 c4b07c81-fcbd-4d58-a49e-1039f1f6d12b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 2cbc5917-0f43-4136-b554-db67a52c4e7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 8c632621-fa59-485d-a9ef-b3878b48adf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 924fe5f5-c211-4c15-9727-a7858eb26023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 f98b9ae1-8b2a-410b-a95b-c9f390a8644d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 fd2f12cd-be7c-4281-99ae-15a8ddf45c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 3accf670-e63f-4983-ac14-97a27e30dfea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h63ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'hDFF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #558 1dac11ec-9fcd-4b20-bd2b-0fd62e4150ef)");
unit.assert_eq16(16'h8264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #558 2a2a8d51-106e-432c-bd87-2f56a1e1518c)");
unit.assert_eq16(16'h016C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #558 dfd42de3-ba8f-4a55-8bc8-09964fb201a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 f1a373fd-e482-4591-87ab-8a3f1fb5bf8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 2075bbad-f8d1-4688-a5f8-eb0c8042faeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 1ef5e4c9-b36a-4e39-82cb-090c26ad0133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 6a64733b-3d75-4f72-8ab5-5062617312ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 351160d7-2c47-4c6f-90d4-4f218cb1f5b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 d377159d-8d5a-40ed-8cdb-dafbf836671a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC214;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h2D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #559 04135894-d43e-49ab-a8fd-bea3857dd5f0)");
unit.assert_eq16(16'h6792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #559 01c1536d-df2d-400d-9607-336fc3946053)");
unit.assert_eq16(16'h0E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #559 1c070538-df30-48b8-a25c-2e8b8383098d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 5fa64e02-6dd5-48a4-8578-7ef288113398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 cbce8a8e-d933-4187-a6cf-66c71cd2a067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 0b9649e9-10e9-43d6-998f-89d44fb4b71f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 382e779e-e99f-42d1-857d-e4a2f51b97da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 4a115b88-bc79-437c-8cc3-c9456cfd13ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 b76ccff3-470b-4566-a355-108e59f86fb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3828;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0578;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'h40AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #560 3da3e457-cf6c-43da-bb1e-407360dea7d3)");
unit.assert_eq16(16'hF078, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #560 3a711d93-0a4f-4301-81f4-97fa58ab1ae4)");
unit.assert_eq16(16'h057A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #560 b76aaf24-728d-4cc1-b65d-e174b07cba52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 bcf4791f-9b9d-4ed1-9fb5-aa6b8900d02e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 95a4e4b1-7545-4eba-bc21-83bcfd4f8086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 76ec7fcd-0896-45bb-bdff-ff952f9e41e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 d4e666dc-aedb-4bfe-929b-d571db6dd819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 6dddd353-ae3a-479e-abf6-74276bceb03f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 f38b61c7-4d00-4984-8de3-f1f7e206a43f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF448;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE574;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'hF448, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #561 3d118b37-fc24-454b-804a-3abd400f6c91)");
unit.assert_eq16(16'hC0D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #561 71491be6-7979-4f90-a09a-7216ca821718)");
unit.assert_eq16(16'h0FC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #561 450bd710-661e-40e4-a55e-4d6c70955e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 9ada9ec9-6174-463d-9ff1-6900ba305073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 c064789f-441a-4242-a5cf-1562ccf3447b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 49c79042-095b-4ddd-91e1-c48897d6c21d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 e3805f7f-1e7b-4157-9d46-86cf67a50b31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 07e54cee-e7e9-43cd-96ce-09ce532656c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 c514097c-9645-4ca9-8388-8f28db2f202f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hACC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'hBD4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #562 2623ee54-a06c-4dcd-92e0-1f96246e99e8)");
unit.assert_eq16(16'h3318, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #562 a7ec743a-16f1-49de-a68d-a073a79b781f)");
unit.assert_eq16(16'h00AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #562 b2014df1-e8cd-4c85-87c0-4e40f6c7b474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 f1313db6-1d33-4f16-8c46-6c0082a67f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 20f27cc8-808c-47fa-8e5b-a32b24bd3fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 c0abb75d-fedd-4004-b091-b809da75fa48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 65b17733-ba95-4591-9cb2-b273880c0691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 76b17af6-700f-4ac2-ba46-694afeb0724f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 441a2e90-b7ca-4171-9702-2e1eb492201f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h285F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h2B39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #563 2d800984-c12e-4c98-9a0f-922b3250148d)");
unit.assert_eq16(16'h9289, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #563 98893f06-22a4-4564-9a53-9af266bfee86)");
unit.assert_eq16(16'h0700, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #563 20f62750-3b65-4811-ac61-a0bdb2ccdfff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 5d4b42b2-f20d-4edb-abbf-dcb23d92da85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 64be6345-c82d-4a13-baa8-d2b9d9670fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 e171f2c1-a216-47e3-b326-e20215d4c780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 e1b4d43a-e6a7-430e-a4b2-4e837f164eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 dc7ec473-7a10-41a3-acde-f13165b3608b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 dd4827d1-9b50-4671-b8c3-6aaa2ecd7e35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h62D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0717;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'hAC31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #564 f5dc6c54-2b8e-43c6-b54d-3168573529f7)");
unit.assert_eq16(16'h9073, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #564 62a52e73-8e40-4879-a208-cb95af8967ff)");
unit.assert_eq16(16'h0719, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #564 699183f1-df98-48f2-9184-cf4700b456f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 a5393d86-b50e-493a-88ba-ce2fedb2ec6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 a6147687-8166-47e0-9b7d-37fc3ae2c8d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 2b45f184-e391-431c-a662-8506cf6f825b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 af65b54f-bade-4718-aca4-6ca77cf47720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 5eaed89c-6cb3-4ab7-ab81-22c04ffe9c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 d8315d18-767b-4825-8e8e-00de9f61d822)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h988F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1959;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h988F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #565 5ae01c33-e1c0-485d-9418-7624e2d38626)");
unit.assert_eq16(16'hD151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #565 55598248-efd9-4a0d-b7fb-4b72d2d40624)");
unit.assert_eq16(16'h00DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #565 d9a13423-eaaa-42db-9a6d-5850d7047e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 7312ba20-afab-48dc-a3d5-ace8dfc1e65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 484d8dd2-b89d-4b10-a14d-6fff84dbf9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 a97d8d7d-b8bb-4737-8043-fa61b1636ffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 03f136b9-7f19-4040-996e-b03ba8ad1d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 b9111f69-b2a1-4204-8a60-725677c804e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 52ee7658-c15e-4a48-8cf5-bec415cbc39a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0408;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h90C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #566 17d2b7d4-2b23-46bc-8cb4-1db70d4c135c)");
unit.assert_eq16(16'hC085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #566 b2e98d26-b441-4134-a090-2c54d65a31f1)");
unit.assert_eq16(16'h040A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #566 4e5f9a47-620a-4fc8-b38d-a9a1ea82c7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 f9ad6240-1ccd-4071-bf13-d5143dcda6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 7bb0d80e-5496-481a-8cfc-75232384a536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 9934adb2-ff61-467d-9ab5-06a3b0b82bc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 e84ca961-7f1f-4684-9e6f-7d306eeb04c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 589845f3-1bff-4826-9d5a-9777c2a1d572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 50f02aea-5d28-4f13-8995-f2fe97ffe856)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h70C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0667;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h0E79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #567 208604e4-be30-4e2b-bc28-02ea3423c54f)");
unit.assert_eq16(16'h8C5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #567 1ef864f2-99c4-4410-8aa6-dbb99cd3aca8)");
unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #567 2111295f-5e7e-4914-b480-c57c9319afeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 c2bd9550-bf20-4a33-b6a2-dcbc745c3952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 5c76f88a-2fce-4e63-b5b1-1c2b58757b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 7c8ae8d1-8247-44d0-a1c2-aafd901386bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 00deecfe-3ebf-400d-a1f0-0f0b03e02853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 da20bba1-4b66-40a6-a8dc-c2da360e0477)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 88af1d73-5a88-44cc-8f05-de48a28f6e84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0418;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h6647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #568 de945132-8224-4323-8a55-28fc0521c80d)");
unit.assert_eq16(16'h377B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #568 278b306d-ee5a-42b2-bf00-b2f4ce9923b6)");
unit.assert_eq16(16'h041A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #568 4080b772-b40d-4515-bbf6-fe523c96cb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 74cfc48d-f84a-42f9-9149-408128987640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 7f047e54-652d-474d-9d92-f8a3d59c3562)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 cfe9193c-64f9-4a97-b884-d9ab8a40f6f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 775d5cac-bc33-4d4a-a831-9f9afa4b2e9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 ba213f58-bc6c-4b1b-84e4-63e2f66cf484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 3c86d0a6-80e7-47ae-8d8f-84ff44f58b3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE95D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'hE95D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #569 0398a29a-185f-48d9-a68f-91b28e4be38e)");
unit.assert_eq16(16'hB239, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #569 911938d5-25d9-4073-8a6a-a34d1e4604ac)");
unit.assert_eq16(16'h0541, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #569 f9fa9bad-7899-44b0-b034-cdb0db1a782b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 6f73588c-3c3f-46e7-9bc2-23f4b6ef9f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 e7e2a316-63e3-4527-bb2d-406076fc0dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 fc934a98-3527-4b6a-a621-3d3998335ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 7e7b97c7-c179-4725-8374-b2288097e72f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 3dc8a5fb-54a0-4f4f-a386-5a23a65a0f6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 f64a71da-bcbc-4d35-af64-20fa3b0ee0d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'hB3FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #570 28f67290-dc77-47c2-a3d7-3a04d2a13e25)");
unit.assert_eq16(16'hFC70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #570 ac5d78d5-308d-4b8c-bf57-c7cf290b54ec)");
unit.assert_eq16(16'h0A21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #570 233f4f5e-1dd3-42f3-b964-bf61b89f8f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 82e3b946-4f08-4260-9329-78ebf5f1482f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 1a1dc5f6-bbdb-4dda-94cd-253d473995be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 a3d1631a-7019-4b24-bafb-265be4d7289f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 a3bb6d3e-382e-41f8-a065-a36ad2db25cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 d8670d0d-435f-4840-b476-a96773f63d38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 f615b12e-7e59-4227-a44b-284a3bc1f91b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4ACB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA29D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h4ACB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #571 80eaaa5a-8b28-41d4-8094-b12fae6396fd)");
unit.assert_eq16(16'h2CD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #571 f1d78f97-a44b-4895-a9c5-3496116402fc)");
unit.assert_eq16(16'h0ABD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #571 0b98252e-50b3-4ec6-aaf8-b54e1dddb480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 22652495-bd58-4278-b312-57fa40e967b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 4dce7073-bf3b-4c4a-92ef-815cc2819f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 05eb2d91-9fee-4cbc-a1ca-159086176854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 8bc7ea0b-6f48-40fb-9c76-565f9f7916a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 c250a883-9803-44da-9931-d0e2d17ea1f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 849c4b56-22e7-42a4-90fe-3c008c47c178)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA15F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h001C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h7DED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #572 c704fc4b-9acd-4917-b859-2784f7e303a7)");
unit.assert_eq16(16'hBC79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #572 b222210a-1830-4543-bf46-34137daf3327)");
unit.assert_eq16(16'h001E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #572 33857e4e-176a-42d1-a0c8-6ea936c4438f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 44364edc-1e3c-43c6-b685-48021cc58518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 2c540dfc-80f3-48a1-99fb-a049dad9495f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 b2bf2cdf-64bf-4e28-8092-1a291f4d884f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 030a510f-d303-4b0a-b38c-4ca05d8a1f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 2e8115a4-4e3e-477c-9ddc-ca9cbd7c18ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 e26a0b45-b9eb-4534-a567-95ed80991ce6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h70EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h70EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #573 085e4558-8f34-4533-b975-e927da5d23ae)");
unit.assert_eq16(16'hA731, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #573 8692d33c-0fec-475d-8fd6-2b6cedf85221)");
unit.assert_eq16(16'h0A65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #573 36accb1d-3484-4900-b6dc-93a5e8e5ed93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 57a9f986-e004-4d47-b784-d5b3be77ca4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 a7a5989a-2853-492c-89f8-2089a7d5e429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 b375a1cf-c3bc-4344-b8ed-4dbde973be84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 cbcc59ec-dd27-493b-8e01-c4bd3818c4b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 c728e642-ced7-461d-b3c5-185706be3ab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 1c1a69a6-bfce-483b-8e4c-7b021a217fc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7CFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1CBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h7CFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #574 539abaf0-0626-447b-ae5a-a37f0f06694b)");
unit.assert_eq16(16'h8409, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #574 dc318e22-d423-4cdc-917e-3d612709b2d6)");
unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #574 afc2b9ed-5b19-4ddd-bc41-9683208dc659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 4df8dab1-03ed-4a90-80fe-ef9774247b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 35ba8829-9b50-4daa-ae34-102cfe556667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 9a6fc77e-913e-4596-a223-301c4c20d552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 f407ea01-357e-4bdb-bb39-05674df2c9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 aff04d47-1ad7-4999-92fe-c5013010407f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 d2ad8a00-d714-41bf-8508-6e80afcdb311)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD36A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'hC183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #575 5a715000-2dfe-49fc-99ab-6e89dc3b86cc)");
unit.assert_eq16(16'h3427, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #575 3d2664c7-4ba4-4451-b890-fc2aa1a0d630)");
unit.assert_eq16(16'h04C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #575 08c6d7d2-d9af-4966-9c4e-a2babb830a93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 728ba17a-31ef-4a7f-a113-c9ac836e5098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 bd2fa9d7-2b21-48c4-a5b2-99697dc7c206)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 376b75d5-f5e8-4b70-80b6-850bec2d6610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 9637b8b5-34aa-40c7-9c36-d84214a00aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 fa87bff5-4174-4b4b-81fe-d69ea80df19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 2de03dd2-5363-4a4c-bfca-e0bfb622e97e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8619;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h8619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #576 1e1a3606-4578-406e-a883-82fb5deae6cb)");
unit.assert_eq16(16'hACA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #576 66035bdb-af29-41d4-87eb-5dfec2a40c5d)");
unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #576 1f9b8a36-382c-4742-aaac-538af58aca7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 dd1e6f3e-c2fa-45c7-a14f-e4a4a597b489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 1d8530f5-4ee7-4764-8a5d-70e4084e988e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 a38ef0c6-e512-42c0-88d9-1857b600a27c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 244722cd-5e6c-45f9-880a-0372c4787781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 95e18b59-bc35-4f93-83b3-b9f41f2c364d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 7757d9d0-8a9d-43c3-ae02-7636fd9cd8a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'hCD82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #577 fcceac0d-1925-4c1b-af58-65d091fe9124)");
unit.assert_eq16(16'h614A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #577 27fc14ff-6057-4a80-be8e-871e0f72b75c)");
unit.assert_eq16(16'h0A52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #577 94c90cff-b03a-41a0-b504-512ba1031ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 1954775c-7029-45ae-a6fd-f30c5c3b5aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 bd89cb4b-f991-48cd-ae70-3610c423a2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 1196603f-4ffc-4fba-9c8f-513f85357de2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 b8a74a77-de32-45af-906f-dd5117835e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 2a8d3060-7cb1-4cb3-82e8-50a2b563079b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 e628dd8f-353c-4283-949e-c62c208cb44a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC67E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'hC67E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #578 23f402ca-a0e1-4571-b61c-53617c747c14)");
unit.assert_eq16(16'h9FF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #578 fe1c28b7-045e-400b-ab38-7a5fa0ec642f)");
unit.assert_eq16(16'h08D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #578 a3751a37-55b9-433f-aa0f-016facb23c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 ee26542d-4099-497e-a605-bd482813b662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 35271e5f-9450-4384-bc12-e0e6715e7560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 9666b8fc-a0e4-44aa-8cab-169b5b435358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 21a87e4a-3de7-40f3-9f46-b27693d9cf82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 4b99e592-744e-4ac4-b517-403966f5fa8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 3b6df099-d2e2-4d45-b722-83decb8c5b1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE184;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'hE184, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #579 52cef023-ac7f-4e5b-b046-ad3cc0dd5b28)");
unit.assert_eq16(16'h8402, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #579 7f4ee2b5-757a-42e3-a487-df15e860e3eb)");
unit.assert_eq16(16'h04E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #579 14fb8cb2-0bf4-494b-bf48-56268f17dfe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 98256bb1-cab1-4ccf-9716-e3817c2389cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 863313f4-5145-4689-948e-6c0e3b19ab8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 0b91ab73-3753-4fa2-ab64-de818d1361c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 4ac895b3-cae4-44f2-b604-2f039ce87d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 db444762-1e45-492f-9629-a5a1131d2bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 e97a6b85-fec3-438a-b973-9c58b3d5a9d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h1B01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #580 1e3e7d99-5097-4d54-90f0-f8164abfd4f0)");
unit.assert_eq16(16'hF1E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #580 1e5e1fde-3485-4203-b569-59d1fccd0637)");
unit.assert_eq16(16'h0CA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #580 3c09b773-c92a-4f90-b13b-aea97dd8137d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 cd29528e-0fc2-4cf0-9969-2117316dde5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 eb7f5cbe-9cdb-4d3a-9d3d-8c9f4525e7a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 253e8344-3566-4275-885b-584b3bdda7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 5ec38589-84b2-4653-ab64-191deb6c55aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 9586b4e0-68bd-4f68-ba57-ca32b011abf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 7fbe500c-4db3-4c9f-90c0-586510528834)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8514;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h8514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #581 3766a0a2-e6b2-4eb9-8715-cf42a47ee24a)");
unit.assert_eq16(16'h94EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #581 33226d52-7638-465a-af96-7f91dd287b54)");
unit.assert_eq16(16'h0DF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #581 a059d44a-57ef-4117-8baf-1c2b56ca877b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 d2c24c33-994a-4ce8-9565-f775c3dbd338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 372c8f6c-9dda-4bf0-9bc4-d8d5a1193459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 9fd36563-a100-4841-9af9-636ab761fcfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 bf31d7fc-5fe3-441d-a226-7b65e2ad69c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 0bbd1291-2b46-4eab-a852-ae5871c3f693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 a430ea0d-1f89-4c32-b2d5-77d973ec9a3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3917;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2745;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h3917, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #582 373d2957-8d19-411b-8868-9ab54685f6d8)");
unit.assert_eq16(16'h4694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #582 c338da70-a60f-4bf9-9c0b-0f05ec0cedb6)");
unit.assert_eq16(16'h013F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #582 46ac05ca-28a5-4715-b0a9-e714a5024abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 abe3debe-af66-436a-8b76-6a7fc06fa10f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 f0f8d0d7-5226-4bae-bbd1-10a2eb7b535a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 73d937b0-6baf-4026-af12-a93437568af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 626358d2-31ba-4808-b210-30740beb8531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 b2f55ffb-035e-4d90-8b4c-5b0301912653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 e65e9fa1-66ee-43ac-8d4e-3c40371dd600)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h30FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7806;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h30FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #583 7217e066-6867-40f8-808c-027a780cbf90)");
unit.assert_eq16(16'hB6C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #583 b3f01813-dc7b-4d01-9df6-c61f2e391244)");
unit.assert_eq16(16'h0C92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #583 f17a5250-fe02-498a-aabe-37d0549ef889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 00993aaf-b981-4009-9031-5838c536b389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 8c2f5578-d1cb-4b2c-b2df-6c5137d1144b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 b2bd52fd-d894-4b3c-8756-46892fdf9143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 048515f8-7312-4dda-9ab1-35a53c748649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 741eda61-84b9-4cd6-a0e8-10e53fb567b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 ffa5a32a-303a-4ad6-84e4-4e62aa3426a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0408;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h931A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h0408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #584 8136f598-d004-4baa-9fff-7989a6305939)");
unit.assert_eq16(16'h3CDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #584 635e2ff0-cf74-4dff-a8d5-a91642b78008)");
unit.assert_eq16(16'h00ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #584 45ce05db-a5fb-43ae-94bf-1c2ff01ffaf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 899df294-daa7-4e44-a02b-bb9b3d5564eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 917873a0-3ddc-4c2f-982b-a6822031bdcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 c4b41082-912d-4f12-b20a-43bb947b0cfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 cdc08385-5ec6-4e36-9122-294274b64014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 acbbf6bf-08c1-46a8-a8c5-1c0f2f77713e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 46151e94-855b-4164-9d27-3d1b02a10e0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF236;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'hF236, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #585 a3fb6f30-1cd4-4689-9cd1-7ced442c1cb1)");
unit.assert_eq16(16'hD0AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #585 ad5a3671-7a09-4f89-91a7-4521f42049d4)");
unit.assert_eq16(16'h0872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #585 06d29d81-a326-495b-ac07-2598d951a41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 8df3e9b2-8c8d-40c3-b2c0-969fd10258c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 7aa761e0-b9fa-48f6-92ff-6b3b7989a9fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 5cf47a0b-ba0e-4952-aded-c1b4682066f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 67bc5fb0-03cc-4c7a-a521-4616df1f8431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 082fe953-47c2-44bb-960f-b270e5ab2edb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 f9d987fa-f5fd-4709-bd39-b0fb672067e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h13E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'h71B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #586 0c7541b3-5401-423a-8f43-3c72deff43bc)");
unit.assert_eq16(16'hFA45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #586 92d9d9fb-794f-4034-a67d-b07f07e10060)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #586 03590a06-eb9f-4724-8e50-ba33574cfa39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 27fa4e6d-f33a-4d7d-9992-b5b299abde45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 56307fa4-f521-4bde-a399-3bd1d122fcad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 08bf852f-985f-4436-b52a-4dffc0bfb533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 38a0a858-bd8c-4a2f-9c76-2b6ae1742be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 1f7c8a1a-91ed-4689-a926-dba2b727d08c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 9463c2e2-f0be-49db-a83d-6854d69fc75a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h63A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8865;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h63A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #587 20a44263-56da-4a7b-bb95-0eb80b170508)");
unit.assert_eq16(16'h3047, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #587 dfbcd2b8-232f-40e0-9931-86f49976768a)");
unit.assert_eq16(16'h0C96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #587 ebfd7574-de32-45a8-bbfb-93e5368b15b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 169311e7-88e2-4c91-825c-5514b2b1cffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 0099d42e-de63-4f9f-acc3-9d9300d07d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 70558231-fd93-4ae6-ba53-bb24b890ab70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 82db9590-b708-4b94-b36f-2f3871e035f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 ee4182ab-eeb0-44e4-90cf-cbb1354228c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 fe390f37-aafb-4619-acd5-e8db6dd9a9f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0404;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h61E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #588 28c3093f-c385-4895-a3f1-72579655d095)");
unit.assert_eq16(16'hDB43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #588 b9ec37e2-f32c-41e2-8d57-44957bc4b012)");
unit.assert_eq16(16'h0406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #588 f10767a2-a0cb-4e8a-a052-320d61dc8711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 c1a6ebf3-3a56-4109-8b4e-4ee77521bfc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 bd463c9a-0a54-4e46-b9f0-e11c97ace3a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 0a2d116e-786a-4369-a267-852f44081f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 5b2084fc-5444-4ad1-9773-1a98791c2a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 fd147d10-ffa8-4aa0-b45c-be3293e6f856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 cf5d5050-0209-4501-9dc7-390a8b59d25e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5945;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'h75CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #589 a5b9fabf-cdd2-450a-a5d2-419b7c6013a9)");
unit.assert_eq16(16'h7359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #589 5c53f59e-a2f6-4a10-b2e6-ab8e886a1485)");
unit.assert_eq16(16'h0F3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #589 aa5f252c-30e5-47d3-b133-853ea496d0de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 841f3c6e-769b-43a0-bef2-16d9ab54bb33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 e7b4dfda-f6b6-4e3d-ad27-7fcdb55906a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 55941def-43ce-43d1-9e5b-4e99cab3aa6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 727eeb38-1a23-4c6f-98ee-b1dc31a23e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 a24a0cf5-ee19-4c9c-88e0-e1cef9d12eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 c2c05961-fcd8-42d7-aae8-fe3a7bd43698)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'hC0FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #590 992ac43f-b4a8-4023-a67d-43d4908a24e3)");
unit.assert_eq16(16'hF790, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #590 a74b5757-0675-4584-9a9b-67de62fdb174)");
unit.assert_eq16(16'h0C38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #590 c8edd0fd-8bd3-43cc-80fb-a93498091418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 a9f2acb9-1094-4604-99a2-5de356677863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 27f7c9ba-c44a-4e5e-9fde-cd8c9b56f1e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 31833f23-873c-4b40-85e3-62828f199227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 be09ad5f-fd62-4f37-bcfe-d5acf28daa62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 2fa19aae-07c9-4f47-8699-a59cb59928dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 1e65031f-cfb2-4c1f-9046-b0a340d78cf1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD637;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0167;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'hD637, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #591 24b6f757-1c19-4988-9703-d86e560c15b7)");
unit.assert_eq16(16'h1ABD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #591 b7109a4f-f024-47a1-9f40-376f73c56770)");
unit.assert_eq16(16'h0169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #591 b98f5644-0c38-4537-9790-cf7fe5f05889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 f2676c72-5ffe-4e3b-8dcf-1b5f4dd7ad2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 514be7af-9159-4c5b-871d-76623c4620ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 a0355ab2-9c19-474c-9646-8292f4211164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 02fcb8b0-cea1-4a54-969e-a821fe6a21d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 bdcc87d0-1fa5-4ad2-b364-fa7cc0c3a43e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 9a217314-9c1f-48d7-8220-b7c03592b537)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD325;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'hD325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #592 08c134dd-1266-4e6b-9d77-622e718c8e3d)");
unit.assert_eq16(16'h40D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #592 bef835ae-ef34-4181-b8eb-178189d1c61f)");
unit.assert_eq16(16'h0F52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #592 2350d7d0-70b3-4676-8c6d-ea2f97b2827b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 5bdf2e64-8573-492e-9722-21268c3cc89a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 acb63459-b792-4866-8cf2-879be3ccf0d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 23daad2a-956f-4d54-97e9-87994cb4d913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 38052caf-b1ec-4149-8bb8-7349cee1839a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 f4c7d5f6-0e75-43d6-8a84-cf69fb35fd32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 411bcfaa-3f1f-4e68-9074-68c2f45c8cf9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h095A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h3C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #593 452c3b87-0beb-4333-8faf-514c5eb7911c)");
unit.assert_eq16(16'h4EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #593 342d1b11-6116-4c5a-b58f-da78c46ddd48)");
unit.assert_eq16(16'h095C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #593 ed495cd9-c55d-4944-9d6a-7cef478386d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 26d1ae39-0870-4e46-ac00-f122a992b0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 ff28dbc6-2018-4b71-bf76-2ac84a113db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 a98cca31-d252-4d94-b6a0-d3ac67029b92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 f68a4d38-312f-4466-9e6c-db8a237eda33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 82e0b3df-f3f9-49ab-bbf5-382e28e83321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 ec91a3a2-ffe6-42f0-ae00-b077c1678bca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1531;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h1531, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #594 a2cc9f6c-9e3f-4495-a550-573e1acb866d)");
unit.assert_eq16(16'hEA36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #594 d58862bc-88d1-4d79-898b-9f43e40c3c7e)");
unit.assert_eq16(16'h0D0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #594 b1889e3e-2038-4a8a-9442-78e31412a9e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 f4a85bb2-9abd-4672-b8da-f63fc6bd2708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 01480197-bc2b-410d-a7f1-9a55e4e8077f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 0ef3ebf7-03bd-4039-9b63-ca5e4d5ee680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 ad8f7a97-3ab2-4615-a263-f0cfb7e468d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 0a9c1ad7-9c0e-49c0-93ab-8edf4edd7e94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 74885ee2-27a1-41ba-beff-cdcbca034e9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9773;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD181;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'h9773, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #595 3cceddcd-0ba7-48cf-b65c-5c2faa6c3dc9)");
unit.assert_eq16(16'h2F77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #595 c2530d37-67c4-4c47-a427-8cf51d3f6de7)");
unit.assert_eq16(16'h09E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #595 502654bd-e720-434e-9e5d-d0232517f281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 f34a8654-c80d-4412-93a1-749127e8a42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 ff73539a-1df5-41e9-8206-85cf1e2da9e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 39fac684-40ee-467e-9e6c-4f61b6018bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 3fb3d034-47c9-4717-b44f-dd6522ca9ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 fcd84e9c-e0bb-4f1c-872e-6754010109ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 193cd271-5757-406e-b70d-00aecd8a6b07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h610D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h610D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #596 fc90c773-bf4c-49c4-9186-337c462209e3)");
unit.assert_eq16(16'h9F4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #596 e713b401-0e5c-4631-84da-7758da71695c)");
unit.assert_eq16(16'h0D96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #596 a6999977-9801-4abf-9a34-a4195f0be85f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 458bc375-792b-4d57-b713-5774f79b46d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 80eee483-090f-40b1-b88c-b569bad1b392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 38d9d9a2-5b1a-481c-8f9d-0ad184bd91b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 8dbb0b7c-9c8e-497d-9885-fbcd82dec8df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 bd156286-973a-414c-84a1-a9ce31c4ab32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 5e01ffda-166f-4c35-842d-8cd1988bb254)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h645E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFEA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0412;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'h645E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #597 59a68725-d131-4f25-9081-982076f15246)");
unit.assert_eq16(16'h037E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #597 88de9236-76e9-46d1-9b8c-5af5b942a6d4)");
unit.assert_eq16(16'h0414, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #597 96bc2fb1-abed-4655-868f-93d78b301cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 e1f908be-362c-471a-83a6-7d9664c58478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 716081b0-1275-4a9f-98f3-b90d752730f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 74fd1b3f-928b-4285-9ab3-24cfe418f69a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 395b3b74-8d6c-495c-98c7-3c16b89ee6b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 2daaf04c-800f-4829-adbd-2b9910e5ae65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 f6662f39-f13a-478a-9075-5477f4df2284)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8529;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h8529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #598 22dbfa5d-bc3b-47f9-955d-10799cf0f59b)");
unit.assert_eq16(16'hBA82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #598 87ab275c-5a47-4eb7-8b4b-b2a9b275c3ae)");
unit.assert_eq16(16'h015E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #598 3001fdd1-14fe-4222-a2c9-3ed8405bb133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 b21a9abd-3155-4f9f-8d07-0a9ee00053e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 736b6bba-0fb5-416e-921e-561c7b8f447c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 4b3dd32e-d652-4f3a-b001-e4abee00104c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 7653f8ae-e744-4441-9df7-7ea4abc54d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 78d2d5da-5b0b-4215-b42a-080a87964425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 ee99f2c6-d497-4316-b402-de20303f05b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3216;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3259;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0630;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h3216, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #599 9d969141-1552-4e29-935c-1030c5d59257)");
unit.assert_eq16(16'h5164, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #599 5279a127-b0c5-4992-aeb9-a5a90d686b38)");
unit.assert_eq16(16'h0632, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #599 078b5c74-2de2-437b-80af-12511a1dfcc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 5d55adec-dd56-44b6-b333-f393fbad0413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 fff16b28-29f9-42e4-9c40-524e705fe6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 c2d8ab76-78cb-47bd-935c-997b3dbd1786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 a813f61e-5226-4a46-9839-85ae84bcc1d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 c9f5c667-8ca0-45e0-9d70-3cab48a25db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 f94dca04-0331-49f5-9f9e-f2eb4cc82b24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h005E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h250E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0278;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h005E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #600 1c54ed85-407b-46c4-bd90-b29b08cc4b42)");
unit.assert_eq16(16'h1752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #600 7f8a4194-b737-4021-b913-f339f621cbc2)");
unit.assert_eq16(16'h027A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #600 760c3770-228a-4f12-8980-59d54e59ca4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 b644b486-a757-4eee-b973-b8113ff8c157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 96b2324f-e6fc-410e-9611-ee6488e9170c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 9d4fe03b-a562-4742-b12e-5ec474d43e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 5723ad66-7778-44b1-a86e-407991036cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 9294d58a-f5b3-4f86-a7db-2cda4eeaa6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 47bf738d-0b79-4a29-825b-6308f06c9288)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD853;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h711B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0446;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'hD853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #601 61d220de-da75-484e-b379-3d8d5afc6e0e)");
unit.assert_eq16(16'hDF2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #601 14de74d8-9d7e-4b0a-b9b8-2d65af3fc83b)");
unit.assert_eq16(16'h0448, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #601 78a89f06-bfa9-4220-9cb7-93b4ec33cf5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 2c2bec1a-566e-4be2-a57c-e6e8cd811c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 3226834f-06e3-4f0d-84eb-3aba44eee7e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 be7f42ef-bbb1-4ea7-9de8-c5bdac21f86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 7e358c02-7915-4eaf-9b91-b8443fd3475d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 400c32ca-3d49-42fd-bc05-4cc6007f899b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 71bc84b1-6bae-4d90-b6ac-891f36169390)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDECF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0904;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'h7F52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #602 d018d769-c530-405a-9301-7f87370660b7)");
unit.assert_eq16(16'h2969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #602 569239c6-0b62-45f8-acc2-69afa508ba29)");
unit.assert_eq16(16'h0906, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #602 2fbe68a7-294f-4c7d-8f32-817bcc283ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 f51f6e96-478f-411e-a602-fdc90b78100a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 1b03b579-6a95-4116-ac6c-50eca10ea6eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 978be6c5-305a-4a65-b5bf-aa0a1d0e36f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 15acbc74-2e53-4897-a0ee-f6b30f7a7c2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 2f35a421-c0bc-4701-a601-408fa3f90f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 8256faa9-dafa-4758-a612-7322f01abe1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'hF5BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #603 f71d3cce-ce90-49f0-bf43-6c552b5a3af5)");
unit.assert_eq16(16'h9F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #603 6442d8c8-e032-45b0-9259-388bc281e9ae)");
unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #603 1ae775b3-efe7-4e51-a837-bd3dbc4f82b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 44a4a90d-4834-45c0-9137-b1b28ecf1d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 b34a8335-522a-401a-a828-c0024c42f7c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 271e3ec5-46ac-4f3a-868a-1526a5674672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 b1b43a5d-6839-457f-bffb-6ff3952ef4b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 daa07a03-7388-485d-82a8-0aa47b5808b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 06b42fde-bda6-4022-b572-4aade92bb37c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h048A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'h6D52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #604 af533e6f-eb5a-411e-807a-276c78dd5509)");
unit.assert_eq16(16'h2389, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #604 63a04027-6ec5-4f59-841a-f2fe6f405f60)");
unit.assert_eq16(16'h048C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #604 1f962f63-c24a-4534-a948-03f7c81d07b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 7a28697c-3337-4f55-af3a-e9cb63360671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 9547d07a-6b19-4880-ae89-3ee47cac805f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 467c2ad5-fff4-4c5f-aaa2-57fded3aaae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 48e0b9bb-9c9f-4395-89d2-614fb2f628a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 1f2fb851-848a-4afb-af17-597ef149dd40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 ac08c3a3-b6c5-40d0-963a-d03ac74086a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1212;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'hCD6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #605 15c65a4c-d561-4152-881d-bd53dd6815b8)");
unit.assert_eq16(16'hC6B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #605 60eae366-ec17-4637-aa31-be780c8ab93b)");
unit.assert_eq16(16'h0A01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #605 90fe8835-1b84-49cc-9ce1-c37e5612e4ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 28e35aa1-9d35-46a3-88a8-21d36dfd4861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 56adba4d-2264-40ab-88e9-06f0756ae9e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 c7b30e0b-0d8b-4684-a5d7-85b4dbe2b345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 076b8b0d-798b-404e-a0d7-912ebde0de23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 4033f311-cda3-426c-a8d0-a700ce83662d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 17d944a2-9fce-4f7f-8e8b-14457703e9e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h2D52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #606 729f4daf-42b5-4615-91c3-cb7a8401dcab)");
unit.assert_eq16(16'h580F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #606 067b3e26-8034-4c09-9bef-e6d0485ae579)");
unit.assert_eq16(16'h0CC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #606 5a040838-4d96-4ae3-8fae-495fa2e4dfb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 80262762-2ad9-4280-8ebf-fc413966ea07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 9f8a4c8c-84da-4035-9747-d78992e7e22a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 e90ee77a-e863-440c-b01c-f3fb52b06e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 071e3018-4426-400d-8ce2-8dc5b00c815a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 654cda34-caa4-4dbb-a090-c672ac8790cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 479730d6-a7d4-4a42-9695-4854208cfc19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'hAB23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #607 7d9337f3-4c70-40a2-b960-12fb99a97765)");
unit.assert_eq16(16'h7A12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #607 de0cab86-f236-4a75-ad73-4584c87ff755)");
unit.assert_eq16(16'h0B79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #607 0a5beb35-2c90-4c51-9cfc-c70369cd7d9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 32bcc204-d4d0-4c62-b19e-04c5dfaae9f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 da566e6f-a001-4c13-8674-b1a93efba45b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 4d1cae75-33cf-4ee0-98e2-962a8a0fd6c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 be4bd39f-e536-4f3e-90f3-1a122d7a3341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 1fdb7239-337c-4087-bbd0-90ead5a01384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 8f3e98c0-adc2-4a8c-8b0c-a3f8c9a45255)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF71E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h2C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #608 96cf47f4-2d2e-484b-80e0-a41151851863)");
unit.assert_eq16(16'hE033, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #608 3f3656d1-9590-409a-8acc-74d3ebeb4c74)");
unit.assert_eq16(16'h0EBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #608 9f5efaa2-23ed-4d5d-b48b-fa36804bd096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 e3efb0b4-aa2f-4796-b226-5b79deb08e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 1f6e327e-88d6-4dbc-9e59-b677ddfcc77b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 c442b473-aa42-484f-a50a-b30f910f513b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 8f22f010-eb1d-4c24-975c-c90c6d68f3f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 f9823a8d-fb2d-4509-b22d-a7fb722ff461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 a3b3cafd-51a0-45d2-acc6-76ab871d853c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0225;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'hFDA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #609 4beab326-f92b-42fe-afb7-056dcffe18da)");
unit.assert_eq16(16'h9CA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #609 1540fa67-84ba-41ed-8551-d9a89ff93923)");
unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #609 e547bf09-ae3a-430b-bd3c-946a8d1688af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 cd628baa-c43f-44ce-86a6-e9e3bcd39189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 0a2509b4-e57c-4b9f-82b1-982419c632c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 b823cc28-cc9a-42d2-9605-fe7feb0ff60b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 495f17e9-61a5-4003-b04d-aacf4fff2a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 7bce90cb-d2ef-4cce-a303-e3a49efba40a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 572e1d1b-e975-4b24-aaf1-2c6a2eb2c548)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h514E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0568;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'hA7C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #610 92be92a6-f6a0-4fa9-a480-140f97710f25)");
unit.assert_eq16(16'hB9A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #610 7c9ca80e-fd8f-42cf-a775-e56f0685b701)");
unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #610 9c2d54ed-7716-418f-a06f-3140f996ada7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 9e9292a0-9d93-4c27-b996-4b26a45db917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 b7599ae0-900c-4aa5-af74-97b0608e1615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 6ecbb2a2-7483-4228-9ef0-b3f627321078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 09e1d177-13c9-468e-826d-db0a62f8af30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 09b848bb-2b96-495b-9efb-145f44df3cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 aeb9939c-83dd-4140-979e-8d0fd8dd52d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA33C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDEDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'hA33C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #611 e5496ef3-d35a-4e1b-b03d-5edf85401e70)");
unit.assert_eq16(16'hC6B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #611 6ea3fbe4-960b-4ec6-9b9d-bfc478701895)");
unit.assert_eq16(16'h0A01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #611 efc30f14-4a08-4ccb-adb2-25ac323e699a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 4242bab3-8f41-4663-9613-5e9ec99e180e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 d5cce432-996a-402c-9ea6-ffac606aa953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 76a5e35c-42d9-4b9e-8690-23d0ad58abfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 4372761c-2f69-4aec-8b12-6eefe26f6e27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 43617669-93dd-4423-b936-9946f12a71f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 a5631afe-7db6-4c2d-b631-539aec0c4b81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'h1C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #612 b51a1712-7bdb-4cb2-85c5-459106eea0be)");
unit.assert_eq16(16'h7E49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #612 ce431ca5-1fb3-4171-997b-f9820fd26a59)");
unit.assert_eq16(16'h0FE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #612 e961b66c-f11c-44a9-9684-418960d7c487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 5ae60075-60d6-4eb0-84bb-982779163881)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 c145accb-30f2-4c1f-bd28-128084ffbfcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 7de77166-854a-4fdb-b4d4-c1c69423ad70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 58ee6847-f8da-4d95-bb6e-4637ad621321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 c9957c44-e47b-43d1-8393-fda02c608de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 62d8add3-3b2c-499f-b210-37d066a22427)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h3A79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #613 3c8e3f9b-7f4d-4bd3-b34e-1474019abdd4)");
unit.assert_eq16(16'h03FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #613 fbcc200f-548c-4c03-956a-f0933840165e)");
unit.assert_eq16(16'h0A39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #613 1a5e71a9-a5ec-45d7-8bae-4e4d84622f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 bd04b859-e529-4e83-bc15-aeb59162bd68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 812f3a4b-cf9c-468b-a571-67d02bdfa3f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 61adba56-3497-450e-8293-83b04d329f2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 03463a60-9763-41b7-a7f9-7b92048e389b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 20973f79-bcfa-4c1c-94ad-cc7c96b3a912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 0a38fcc6-ee32-4a6c-9f9d-93e884928d62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC55B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFAC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'hC55B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #614 7368cbbd-4e5b-43a3-8d91-c9809312878e)");
unit.assert_eq16(16'h610C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #614 cd960ed9-af55-44f6-b281-aedd25198e7b)");
unit.assert_eq16(16'h0EEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #614 280ebd5e-2080-4c44-96b9-e2b7db6c4462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 91e061d5-bb7d-49e8-85df-adb1fb941914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 f2d28575-30f9-44aa-a581-b15120812ca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 22c692d7-f6c5-4425-8279-b1978079b6dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 73d8aafd-26e2-4f33-87ce-5d9d0db2bc1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 a2eefe5f-8ab0-4ce5-8b32-5a09aecffc84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 682f1aad-8e6e-482d-8f78-06a9ef10f7dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA90C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h7C4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #615 8452519b-178a-42ce-910e-6061602ce10f)");
unit.assert_eq16(16'hAD4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #615 0c89f5ed-362a-4a23-b74d-559064945e28)");
unit.assert_eq16(16'h0F50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #615 8b914358-14d0-49ca-9709-d4f386864ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 c456f782-0d39-40ba-a57e-86f6db4bacdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 82247952-c048-4c4f-9d6f-0d90b1100d18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 dcdc8c29-3531-4fce-b5da-c2e41511830b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 fdf68fca-6291-4a9c-9c37-4ac99fa3b54c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 8387a7e0-aae3-489e-83ce-2446bd4eb539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 a9993385-fd46-4551-83c6-2d4e52f4a2f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1134;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1804;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0594;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h1134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #616 bad7a98b-2aa2-4f84-9c0e-c259fd4ab101)");
unit.assert_eq16(16'h7780, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #616 ca30176f-135e-4b42-b0f3-cb65a83f2b86)");
unit.assert_eq16(16'h0596, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #616 d3493503-aebe-4f1f-85fd-767da77d79f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 500a75c8-326e-479e-9b6c-5fbfb1489d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 fe848b3b-5d87-4565-888a-c947a07497f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 ea9a90ff-32cb-4aaa-9ce4-ef7acc5cd447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 d0d4c3ec-c6c7-40f1-aeee-e88c7c9ad5b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 b81d5fa5-e3b0-4a93-ae28-5b6dbdbc310f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 3ae7a2c7-848b-40a0-b996-39b544a7583a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h635D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD450;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h635D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #617 e5e45354-cd98-48af-80f6-41eb85810ad5)");
unit.assert_eq16(16'hF81D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #617 3d405920-4612-4bb1-bc05-421ad392c971)");
unit.assert_eq16(16'h0CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #617 14c199c6-3075-4753-ad54-5f56d7f2d1ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 2778e019-501a-4866-ac75-01dd1aff9fe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 3e5f460f-1378-415d-bdd9-016709829d3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 378124d6-18a5-419c-afee-b7af8d76815e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 35a76f19-d1db-4d87-9b40-3729adc012d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 26608a0c-deb0-4ced-ab53-c6b866c72840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 4fe9cc9c-a87b-4462-bdb6-f3789ecf440c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h7FCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #618 869cd523-db74-4d95-ac75-c778f85f7de7)");
unit.assert_eq16(16'h0095, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #618 9d75621a-5414-419c-ab42-75d8fac993f5)");
unit.assert_eq16(16'h0A83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #618 17f5da65-aea9-4cf0-80b1-a11f43c65d8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 420af6b2-d858-4fac-9b3e-f0eec024f65c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 4aaaa256-9592-414e-bca9-280765a9ac5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 7bb06a33-611e-4c96-b9cc-4cbe74f4ac93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 fdef61c6-546d-4bda-873b-fc0416adf6e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 cd794a42-9b0d-4895-8a53-ce6620aada9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 1f4bc25e-1582-4e17-9964-56d9f928eb26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0111;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'hE6AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #619 62ae2a8c-addc-44c5-9f93-14a7a7905f1e)");
unit.assert_eq16(16'h957A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #619 27fd5ca0-7f22-414d-895f-1dd4dd54b5aa)");
unit.assert_eq16(16'h0113, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #619 79bc74d2-2c83-4332-8eba-af6bead2bedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 859cda63-0842-478f-8020-aea519b146cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 616a8572-0fb6-4a6e-b05c-f552ea9c2491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 0689aad2-5ad6-4575-942e-6794ecbe9337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 87c6b263-6846-4cdd-830f-50bcfa79e59d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 b9de962d-54d1-41e4-b953-3dd4c02d577a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 c1401a3f-5b5f-4275-8a0a-3d78a807b9c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDEE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0899;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'hDEE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #620 5f1be44b-c35f-4bdf-bfac-abba7a08551a)");
unit.assert_eq16(16'hC50C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #620 9f2008e6-eecf-4e86-ac7d-be0063eb108d)");
unit.assert_eq16(16'h089B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #620 d251fd20-987e-4343-aa30-2b0dd9a65346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 42ede5f5-903b-4c1b-89ef-ddec6abe7595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 4e82ba04-2db3-4791-929d-48001404419d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 02ca849a-b924-470d-9554-68b3570c94d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 b825a6c5-8c67-45a1-8875-0ab17fed1039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 fcb52cf0-54fe-4175-8ec1-cc865fecfafd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 bf8f8ec0-6b80-4d0d-8ac9-51304db7fc22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5247;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h5247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #621 4daf6208-9359-430f-a510-69023f27aea3)");
unit.assert_eq16(16'h3C8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #621 3e3ff20e-be58-407e-b80b-68fc7527a534)");
unit.assert_eq16(16'h0F9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #621 1c2758b3-bc7e-4684-97c8-6f0a4cc8beb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 41f1398d-eece-42c6-bcd5-64012a3c7faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 41e8206f-f2df-47fc-86eb-4bf46ce4f7a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 106e878f-819b-472f-b02a-7526d7477c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 11c6461d-209e-4e02-8d53-24ad03e49048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 c9cdd165-bd8b-43b5-b65a-2d74b0aaf9de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 10db04da-0e09-4646-aa15-2db65319f7f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA03C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h1F6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #622 6f8b0a73-d873-43c9-b58e-a3646794ee42)");
unit.assert_eq16(16'h3D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #622 a9c8a360-0454-4eb3-840d-798e9f6fb7ba)");
unit.assert_eq16(16'h029C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #622 09c8cde5-7a3a-4bc5-b8af-ace2f676971c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 f1b18f6e-cae7-4fbb-9cbc-05881e80a078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 23219d0f-39b5-4e83-ba87-88d13a5fb399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 d56b374a-aa56-45cb-8aed-47a615cd5aca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 2ff4424a-fc13-48a9-a2c4-276dda5a969d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 748f55a5-d751-4a18-9a90-44c065eda085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 e6d2bcfa-8a28-41a1-b8f2-2178f531298d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9302;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h9302, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #623 1517332f-a3bc-4acf-abb8-1ada6f62dc1c)");
unit.assert_eq16(16'h3AD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #623 07d3d9c5-77a5-4cc3-a767-ef53485e981f)");
unit.assert_eq16(16'h0D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #623 59c982f4-c305-4c03-ab8e-c0eabc88c9da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 6440a3db-c5f4-40a6-979b-5fc0437bea97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 a1f4b9e6-5cf0-4d2f-aa6e-b1d538e8e064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 a35d1eb0-6e49-4491-b279-004ad8798955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 cf51a323-a031-426c-a47c-eac857daeae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 adafe2f9-1f2b-4efb-9356-312d56452937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 0f854b6e-6efd-417f-af58-ac4817b7569b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0667;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB051;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'h0667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #624 5b37f6aa-6334-4219-9c1a-97b906eb1073)");
unit.assert_eq16(16'h3D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #624 15a2ce26-fdd0-4940-b386-82c80d70b68b)");
unit.assert_eq16(16'h029C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #624 a3424a3f-9eca-428d-8556-f6d4eb1ce71e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 602f52b8-d9ce-4cdf-afd9-937de4c53e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 22cc80c1-436d-4014-98ab-e5c1e8a46427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 79fd1d71-df54-4f06-9588-24f7ec19a726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 72145b14-dc8b-4a6d-a328-a4562323c3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 17e10fb3-11d4-4e30-95fe-f06ac9af855e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 bcffb32a-383e-4da4-b789-04964b7909f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3910;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEAE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h3910, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #625 6fb90582-66ff-43fe-bc60-b26d6352b851)");
unit.assert_eq16(16'h6496, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #625 03d7b133-a74e-4b3c-9ec3-51f062e335f1)");
unit.assert_eq16(16'h0A03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #625 d5f2fc5f-2d08-45a2-9665-6a6b16a72e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 d72e60c3-c627-474b-a54a-fdbc60c15248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 d5cbee9b-335c-49d1-a2d0-3d0eb7f92bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 8ba78fad-24fe-4ed4-83dd-f26c1c467559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 1c9f9b93-a4cd-467f-ad4e-36f42d26d7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 f04af4f7-cd17-4497-8e5c-0036dcedf755)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 70f605fd-eef2-41be-831a-c8df4d0cd7aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0501;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0810;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'hDFC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #626 b96529f4-d405-402a-a2f2-33bd714eb905)");
unit.assert_eq16(16'h7B6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #626 9991e3d6-816d-4d86-ab55-a8242757cc8e)");
unit.assert_eq16(16'h0812, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #626 50cb8f2c-a21a-47db-b003-3f13fa69a013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 473d715b-9e44-4b58-9fb9-e136a94b97ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 89f643f1-ad67-41c9-845d-dd25565f1b36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 9beef2e9-5f61-4172-8b28-6734df2b64f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 59f50a13-696a-4503-8ed2-e606939af60b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 085a8dd2-09a6-40cc-8ab2-7546a05d737a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 a6941f55-8de4-4289-8b5d-35c03c982316)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA1E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'hA1E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #627 cd7414b4-c0f7-4596-a3f7-c5ae687d9683)");
unit.assert_eq16(16'h5C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #627 052e456d-38b0-4d0a-8e94-f8361e678b2b)");
unit.assert_eq16(16'h07A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #627 3391f059-a4e0-4de2-9046-940d5c05ad5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 97b86e11-6170-4bc5-b086-a14b7fee1fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 abaafc0c-cea7-47c0-b459-cd4fc0d3d3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 53a017f7-b870-4264-af94-f48416930932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 d3f6a331-7903-470f-8704-cde4ee5d2172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 34005890-4bdf-43bb-b172-042e28991052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 32f73f49-952e-4751-85b2-30eedc28ad02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h08CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #628 c865d857-1a9d-45da-afb7-377c2b1f0336)");
unit.assert_eq16(16'h809C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #628 ecf48026-9c03-45f3-ba55-e96f007a6e98)");
unit.assert_eq16(16'h0F2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #628 3f1cbc64-af93-40a4-97ce-10a9ac240393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 7e6f2ae7-4cb5-463b-b4a8-0ec6a2e7e997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 13ebd7dd-4b37-40e3-87fa-29939f99c319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 5e14cdeb-18fd-4d8b-9dc5-a8a17a25e0a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 127c7775-0842-4f58-9404-75730f860827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 fd753ad9-f4e7-4488-8c17-9c8368af9138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 a78b25b7-025c-4a28-8575-b3c95958a75f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD3BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0858;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'hD3BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #629 8de64110-a04b-4890-8937-19255a277b89)");
unit.assert_eq16(16'h15FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #629 3ad641bd-ed9d-467b-9501-fb9b85f4cca5)");
unit.assert_eq16(16'h085A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #629 7868f624-e0f4-4570-bce2-0485cc7bb65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 b7d73fd6-c3be-4049-8cc7-4f616b0b056f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 c10fcc72-dbef-4cf3-915d-6d720953d431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 0468bd20-575f-4a36-b7e5-7c0d2906f6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 8e42e18a-6e0e-425e-826e-0b90c38ea0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 4a655f26-a63e-48b6-aa82-ecd74eac49e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 961f4d46-836b-43c1-9750-e1439ca8140b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2505;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0921;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h2505, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #630 bf8153a2-01fa-4dda-80ab-56632846dd10)");
unit.assert_eq16(16'h4FB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #630 a845d9f5-dd18-4e32-9856-113d7bea0bb8)");
unit.assert_eq16(16'h0923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #630 0259f4c9-2b84-4b44-97d4-dd034034d55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 89c8d3da-ea07-49dd-8a67-d4b2bcb2ba4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 1fea8c08-1260-4aef-a0e2-b5e585d665eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 0770b610-3327-4a97-9c52-da290ea35e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 b66becd3-be8a-482e-8f4c-344374ed6c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 13aaade3-4dd8-4052-b4df-08fdd28c8211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 1a925c05-8787-4c32-90b4-c67883476a79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF49A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0794;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'h3C96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #631 7960067f-a2d0-4429-b3c3-f493b5fa929a)");
unit.assert_eq16(16'h81BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #631 822985bf-21ee-4d82-a287-2be56f771f4b)");
unit.assert_eq16(16'h0796, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #631 543902b2-cc81-4552-9a07-74a326daced4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 9567a0cd-33ef-47e8-b7f9-96c69f444a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 ab279dd3-5279-4e2b-a4ee-f47477e5c24a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 babe1879-1229-4cad-8b67-2e23e483c8a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 672ba52d-099f-47c5-b0c6-0060c94cea3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 7bdee2d8-1806-4fbd-8907-afe27fe08de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 f2264f35-8698-47c4-ba1b-1b6dfbb7b668)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5234;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h8A47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #632 305aab77-ca7c-4a8f-8fde-2fed90bd7568)");
unit.assert_eq16(16'h399A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #632 352af1fc-ec3b-43bd-b73d-6d6de35a1e06)");
unit.assert_eq16(16'h0540, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #632 ee6622fa-7dc0-4a49-b841-57567e58c67a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 e17aea5b-18b3-486d-9deb-e3abb31687a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 b64f45ba-d36f-4787-873f-48a2912cc6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 389aba93-2713-45ef-94eb-8b49518d7032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 c74c46ab-7870-45e4-a5f8-2eec348e162c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 941e10a0-265d-4353-b91f-2b03c8ee845c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 207dbbfd-2639-49a7-893c-459f3ada5c3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6843;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0731;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'hFFBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #633 bfee798d-86c0-4d0e-b326-2da8b8235ba8)");
unit.assert_eq16(16'hF93F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #633 80428d01-8f60-4cf3-a25a-08d3b0c03425)");
unit.assert_eq16(16'h0733, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #633 3c12b594-b47f-4433-9273-27af32387fa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 c3241b9e-068c-42fa-96e7-0710a7f3fa6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 8cba8677-97ac-47d8-884b-373b94517a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 bdc8c52b-664b-42e6-b1a9-7fcec3bec30b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 340468b5-17ef-4e0f-820f-fd0ebf3e4289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 59aa1d7e-c137-45e1-9fa2-a95a3e45acf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 f7877c0b-79c3-4dc6-bf68-1478ec834380)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h2C40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #634 0d62b0bc-aeb0-4661-8b76-a26e8ed7a1c2)");
unit.assert_eq16(16'h168C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #634 94650a30-6930-4784-a92b-9d777746a0e1)");
unit.assert_eq16(16'h0C8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #634 44df3aab-218d-4c46-9ba1-d315759c4105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 e6925d8b-0079-471f-a7c2-a6812422f23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 a3ef25f6-f2f6-42da-b7db-5b048d104a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 6cdb675b-627f-4493-a668-e96325a6e37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 1640bf3f-e27f-4590-bffa-811a5ba4d38e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 4c813df5-2f0f-40c4-b3ca-8e3bf7e6a5ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 15555f9f-ecf4-492f-863c-6b0a9f86a6dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h87A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h87A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #635 0da7b4cf-aa93-4fbf-8528-849c0a49c651)");
unit.assert_eq16(16'h9B86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #635 a0ab734a-c5dd-42b4-b25f-7d1cfd728cf8)");
unit.assert_eq16(16'h0DBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #635 05c11360-8758-429f-857d-68583dca68f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 41430ee3-a528-48d9-91be-082e538c651b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 05ff84b9-5639-40e8-b57b-699bfb0ac843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 8d0e6b37-419e-4935-a6d2-af40f0606fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 639f67d0-9642-40ba-bd65-b2d3eb74fce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 cdaa3f9d-6bbf-487d-91a9-689c9fc52549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 211300ff-7bab-42c7-997a-8d28aa41c0dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA045;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0727;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'hE7C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #636 d9b976e4-82a3-429f-aeb3-79a39aec68b7)");
unit.assert_eq16(16'hB2CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #636 0f8e5174-1d88-42a4-9545-ba18cb46cc4f)");
unit.assert_eq16(16'h0729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #636 886e9066-6c82-40d1-9f27-1de323a75120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 f7a61dfb-e8ad-4133-94ac-902227049ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 5832fd97-206c-4205-b4ec-cf043ac028fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 f2320e58-5c58-46fb-bbbb-bc535325ed79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 c4c7f3a4-3442-48cb-af6c-0baa1693f931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 9c49f0d7-aca4-43c6-ba79-cb004126b67e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 821aca9a-18ce-40ba-9eec-2e71e96a7d5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF0E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8389;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'hF0E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #637 c0b53825-7189-4979-9b88-acc7213036a4)");
unit.assert_eq16(16'hB900, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #637 4483d814-2562-4002-aaa4-eca1e1cb7e9d)");
unit.assert_eq16(16'h0B92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #637 3e688cc6-c66a-44b6-9698-21f73d61b7d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 fdb79c6b-f208-430d-af1d-67e238b4b437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 0379fb7f-7b77-4f3d-9b3f-06fab2bb6110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 3b6505c8-7a32-4a78-82e6-19b42d3bd046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 d4a34ba1-5aad-4728-8407-43b88bcf86a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 da7a9123-b0fb-4dcb-ad39-fabd0e3296a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 b04a1d86-bf67-42f1-b1ab-18e3a3f46d16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h128F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF8C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h097E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'h128F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #638 efb28d4e-1c53-447c-9cc4-86f04a203260)");
unit.assert_eq16(16'h0192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #638 8299e3da-9f64-41bd-8fb4-c0a33b62d8be)");
unit.assert_eq16(16'h0980, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #638 f0874b3f-6c15-451e-8acd-0866eee15f59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 bfe55f24-2e66-46a0-88ff-b004c820bf2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 de2d4756-e41d-4490-b489-6c13d9e4020e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 667a6b99-5d13-407e-b4f4-2168572464f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 8ccb3962-b26a-465d-9824-58b8b8fa223c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 87581e00-acf3-4021-b631-fce27f39bd6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 7a1941ab-933e-4a4d-bb9d-f26f8d1b1db2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h171C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5883;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h171C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #639 ee4a5870-59ce-48a1-9021-7e1c2fb6ba73)");
unit.assert_eq16(16'hE62A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #639 534a7502-4688-4848-a2d8-2aa4b9fd5215)");
unit.assert_eq16(16'h0B81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #639 f75d0397-e7b9-40a3-87a2-cde00aa00680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 64380d26-dbf7-4938-bc4f-00f145585784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 3388f549-23ff-47f7-9588-4da333830275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 150a0938-d691-4d16-997d-45964f2e0794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 32deaf03-ae1f-4c55-837f-a3dc281fd317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 9370c135-4d18-4817-b6a6-f2e76fd07584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 d51f9e60-6230-4748-b6c9-7f5d5a2b30bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0286;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8305;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0146;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h0286, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #640 41f30900-8016-46fe-819f-a620af99e767)");
unit.assert_eq16(16'h50B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #640 21df575d-55a4-4c2d-9e3d-36a53ca66b7e)");
unit.assert_eq16(16'h0148, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #640 990facc2-3b44-466a-963e-bf7b77b580f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 80e45a1d-c3ba-4d13-a160-bcad6735b150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 c9397fa7-50ea-4632-8985-f8fe928bf8f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 b2c63472-8d92-47b1-b3b4-da1a4f472734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 3d505488-0b5c-4e41-a2ef-47e38d26d25b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 a7819b84-a5df-4296-a68e-096346241ee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 fe9b1f10-4e40-4b52-bf35-f3c69a8ac1d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAD06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h7A30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #641 b22b81a7-96ae-4b4b-9bf9-f2d2f16d1712)");
unit.assert_eq16(16'h22EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #641 96a9457c-f3bf-4643-911b-1cb7d4f909e4)");
unit.assert_eq16(16'h0EF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #641 ecd1dcf7-edfa-428d-9c98-7f1c6e4f7384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 5e5dcccc-1e93-4d65-b16e-e04b24ee0c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 2bc07eee-2808-4cec-9750-ceab6aa68f07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 c34812b4-9508-464d-a3fe-5a60f118be28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 fceed2f7-8896-46c6-83b9-c371d724461c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 303edea9-d4d4-49b0-b0ef-1067479164a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 57a152a7-7c74-43fb-8cdd-28cae7e3ad61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h38A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #642 77f5f6a4-f04e-4822-95c8-60f450d3ab23)");
unit.assert_eq16(16'hCBEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #642 be2637b8-894d-4198-b22c-1380f7ca4547)");
unit.assert_eq16(16'h0E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #642 f8c17440-ec68-4af3-ac7d-eea54485ba2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 b6d89f26-7aae-4bc3-b3c9-fe88a9396daa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 ec5b7fa1-4157-4612-9f58-d7eda371775d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 1b00993f-fdd8-4c06-b823-42ea2fefb0a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 282498ae-35e8-417e-a439-c45e4012f88c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 ddaf6c22-911d-48f0-b7ce-3f85a3e0d5c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 2e228f0b-e926-4065-8b13-bb2dab062ebc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD83A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h498D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0662;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'hD83A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #643 cc758890-f45a-4d00-8984-5d4b2df676d2)");
unit.assert_eq16(16'h337F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #643 19264584-c3ba-4542-a9cf-05cc09ee8404)");
unit.assert_eq16(16'h0664, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #643 afaad91a-7915-40e6-9afc-40b81b725c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 0385a9ad-e3fc-463f-9f8d-01992dca6ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 3155008b-6e77-42a7-848a-65943310cede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 63751e31-8d86-4566-988e-c4a09b7368bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 3d0c6e15-7d6e-4354-8567-cb395e399f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 6dfbe4fa-fd94-4143-a14d-8738efd5a9bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 c85a6552-c8c7-49f8-bbd4-e9975df8d833)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4977;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0539;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h4977, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #644 b4641d39-fa0a-44f1-accf-afc374f2cbfd)");
unit.assert_eq16(16'h0249, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #644 739ec25a-6942-45bb-b1b5-b9beda16d101)");
unit.assert_eq16(16'h053B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #644 fc210aec-e2b5-4cd4-be18-b993df6c19ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 a8139af4-3cf7-434d-9161-78df77419cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 196ed7d3-b70b-4fba-a452-f2fdbe675ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 13d69f92-ad62-4c67-9862-a53fa6c1d2b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 24ab7d80-6b82-41cb-bb44-82a439e17945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 ae598838-827f-4c54-87ea-507c8056377c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 68883d30-3366-45b8-8d5c-389bb571239d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8AC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6DBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'h8AC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #645 7d4f37f3-7541-4d9d-bc3a-fe5b580c482a)");
unit.assert_eq16(16'h7F9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #645 fe755932-bbcc-42de-9a2a-35905a923ee1)");
unit.assert_eq16(16'h02B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #645 f7500aa0-cf7e-460a-a640-ea9e999a1fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 e436d566-1938-4838-9c6f-48ede3c0076e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 898de6fb-daa9-4d5a-87c4-a1a30eccaff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 1d7ee163-6ec8-46ba-b232-e0caa871ed5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 ca05f908-99b6-4337-8d83-199764edfa18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 4b5aa452-bccb-41f9-86c5-f1f89bc4e43c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 1b464335-2b68-4975-b2d3-793db7330c25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD40B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'hD40B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #646 e7bde0d5-3d92-4aa7-9fbb-3ab5577803f2)");
unit.assert_eq16(16'h366E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #646 d4c3f1a9-12cc-4c94-813a-4bc6441620b0)");
unit.assert_eq16(16'h07BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #646 9b524c9a-1b77-46be-80d7-8523625476f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 a44a4971-1c9e-43cc-85f2-0e924583841e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 f7ba3c74-e8be-45d1-93ce-f2e5458f41cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 627daf3d-cb01-4199-a3ea-eff09f0094a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 b7e5ffd4-925a-4e75-9f3c-29dd1be09523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 c1d78274-26f5-422f-a881-cea0b8d9b9c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 30758288-7367-40f8-b97b-9f1f35fd9b95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0034;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFAC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h0034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #647 ce25e2f9-31cf-4af3-b946-b115517b5af9)");
unit.assert_eq16(16'h8C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #647 0200f78b-546f-4fa0-9064-711866221d18)");
unit.assert_eq16(16'h079E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #647 34697a43-c340-4410-8680-579810ec365e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 2bda0a9c-fcfc-4fe0-a909-5a4f180fbb6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 e450d25c-5a44-4dca-9275-37ad6a066acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 b025ba89-8302-475f-a863-f8080d281e82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 916cbb0a-6ab5-46e3-b602-52907bfded6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 aea9015c-4c6f-4011-a23a-4541c0b513a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 fce9c86f-50b3-42d5-8790-b397e50da814)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5920;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h5920, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #648 454d4b02-7295-45c7-acd8-d29568b8c831)");
unit.assert_eq16(16'hB3EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #648 34c79040-dfff-4a3e-a558-2818fc2ead97)");
unit.assert_eq16(16'h0EBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #648 55bb3b2e-cef9-4787-a667-991dfe6f631e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 e44c3961-105d-4512-8ef6-730479929f6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 aaf24e7d-ff53-4176-9801-a31bf8d9f0e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 898936c3-ba76-47b2-a0bd-74deff2420be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 b99abc77-905c-4cad-96df-156c6c7de974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 af86d59a-1500-4b0b-9190-344fcfc8ee96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 36458a09-6263-4027-ad2d-e294cdf59125)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h436C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h38D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #649 d893627a-bc8b-4308-b869-f1b003af0624)");
unit.assert_eq16(16'hD046, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #649 2364184b-8909-41d5-81a8-9bb67c8685f8)");
unit.assert_eq16(16'h04EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #649 fc395b49-ce7b-420b-bbe4-3ac8e9ef0cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 74d429c8-c44c-4a93-a555-6b3390ca8a69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 ab1e2341-ab15-4bf9-8558-ee3d80250113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 ffaac9d4-bafa-4ac0-8413-04f7b7e529a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 4eac0220-c81c-468f-8954-ec4e23d76fc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 e4000967-6b60-4d7e-9004-a49bef20840d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 ad3bc213-1290-423e-b345-87c29e15f7c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0560;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1EF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h0560, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #650 3c9c8bd8-35b3-4577-ac67-c08d040875b8)");
unit.assert_eq16(16'h87B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #650 e0b0a79e-a89f-4734-93b7-18ef4cb98e63)");
unit.assert_eq16(16'h0A7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #650 749d33b1-6acd-47b4-bd68-a080a4afd825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 595c24d5-7845-4be3-9b53-2ec49787bbef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 b1f339f4-27a6-48c0-902c-437319e017b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 9c434d75-9cfe-4951-9d59-e52df2e7c5b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 333987ef-d0fa-4699-8181-45457dda8b99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 d22ee0d1-b38e-4532-8ea1-b1c4e7950254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 e28f2a19-eaa1-4cc7-b340-76df3e218463)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE95E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE82C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'hE95E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #651 7e3c4af7-3db1-4bc7-ab7c-f57af3f3e5d5)");
unit.assert_eq16(16'h5CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #651 b2142a46-fb6d-400b-99ba-bf1c952edae4)");
unit.assert_eq16(16'h0B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #651 892858d5-62c2-4a90-9c55-b760e186fd88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 1be9c9e4-401e-41f0-9ec3-a58e8ca972c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 ec2e6689-69cd-4bfd-be4a-d982df9fac9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 a3387809-9150-4ac3-9126-4b865e3ab473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 3a4280e9-2b1b-429d-b212-e1e871f95730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 8b0e20ca-519f-40a4-b04f-3f1491bb914a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 d815e961-2752-4e39-9304-f14b8d752551)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF0AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h0D6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #652 0d318f8d-0a24-4a8b-9aef-5d294827238a)");
unit.assert_eq16(16'h7865, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #652 459bc5c8-a2eb-4a16-973f-0e0e0dcc96db)");
unit.assert_eq16(16'h0C57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #652 d3ce8e64-0f57-490e-a9e2-160b5b421902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 b45005ab-8ab5-4e94-b154-b54e7e2d3041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 a987ab13-4c49-435e-ab17-fe72e0edac05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 393686b8-1d6a-4ade-8699-afb6ade928e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 d96b0736-0702-43fe-bea2-23a05c37f647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 1a5072db-8f04-4b65-8a40-0233e67e97d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 997c6b04-5378-47f4-8581-badd3c1f608f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'hEDCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #653 66d9a9b0-ad43-48e9-8292-83685fa7d0e8)");
unit.assert_eq16(16'h402B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #653 1a16f98d-a410-41fa-8703-727605fda983)");
unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #653 e74ca712-c7c3-45d9-bf82-194df69e41f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 7fca6b09-6c5f-4693-ae62-883acd7efeba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 479b4ed3-584c-4826-9b2f-19c1ad96dc70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 86ec9fc5-726a-4022-9fa2-5bd77be1b915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 60b33022-0d2e-4182-9a77-5f4f47dd559f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 f2496cf3-4d83-4335-97f2-3793cd26dcaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 675abd68-a1ae-4614-a392-75af0ad34896)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h927E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h927E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #654 4d427209-72d1-458e-b197-ebe47fa4d6c6)");
unit.assert_eq16(16'h2BC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #654 7310e590-74f3-4db7-83f9-b3e322f28c86)");
unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #654 a005fd3c-f5aa-49bb-b88e-fc2adc139250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 1a2ce703-10fd-4345-9110-0edefa4baf2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 cd477a47-7484-4e17-88ec-ac4935b6a176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 b81430bf-c438-4553-adfb-4cb4a89b2df6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 094d1314-719c-4399-a8f4-9997a5ae3c90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 3603cdc2-7156-486e-a6d1-c9b0af6ad878)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 d4b7994c-4ac6-47ac-93a9-4aa99a3e515b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h264A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h264A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #655 dc83b173-b49f-4faf-9ec3-21ffb5eb884e)");
unit.assert_eq16(16'h087F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #655 6ea49776-5528-4e26-a562-94abced344c1)");
unit.assert_eq16(16'h07D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #655 c0bda3a0-5a36-4295-8594-ad91a76e26b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 c9b69921-403f-4eae-b0ce-fa693c47b286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 d8f333c2-7897-4d22-a451-b2c5836ed24b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 4ec5ee5f-65c9-4650-96e6-d29e47b6e440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 cdfe7bc6-9994-46c2-9e8e-065f4e0c44e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 6c9c3327-8eb2-496c-b42b-d7f2358236ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 609bbbfe-cecd-4cbd-b24e-d93c82db7061)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE68E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0930;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'hE68E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #656 05ce27d8-cc78-4bbf-8b19-12e564058da4)");
unit.assert_eq16(16'hE772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #656 e3ed5f28-e710-4d4e-81e0-aceb18406c5e)");
unit.assert_eq16(16'h0932, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #656 a03c41ad-506c-4ef3-85a1-a8cb3e88b19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 16cb1a22-934c-4190-b2ad-3de4beb59141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 ae461585-3c96-4053-9e28-a5880c9eb04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 22aa8bbf-2a70-4418-b380-ed5e4d654dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 1cef7cb1-6b89-4bf3-988b-eb16c0229aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 d0cde8d7-d1fb-44a6-b0ea-fc16d178d468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 ace5e43d-bf31-4618-a46b-ce2e17f48bf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5193;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h028B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h5193, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #657 e75a8044-7ca4-4584-b217-1126dde82539)");
unit.assert_eq16(16'h29C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #657 a96c1a09-d9a4-4209-b3e2-0bf8665d3965)");
unit.assert_eq16(16'h028D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #657 10afdce1-0138-45a1-b737-e73db2296824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 e178eb47-02bf-40dc-b735-bcf2b8a29e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 6ebc40b9-1969-4753-8605-1fd44b2bb1e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 b220c1e6-ac1b-4203-8514-a6c02434121f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 c45997c3-5651-48f9-8fb8-c6177444400a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 89536887-1709-40e6-af59-fb762a4b2c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 ed7344f9-2690-4c88-8d14-a364bb7f6812)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'hAD6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #658 bbf04970-1b47-40ba-ac77-f44f77fdfa0e)");
unit.assert_eq16(16'hFB29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #658 c60f4dab-3d0d-4ab6-8cf2-f7161586fa7f)");
unit.assert_eq16(16'h0DB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #658 4d8bb897-4a54-4741-a678-d392479e7829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 5bc1190b-644b-4fef-ad53-50e736164bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 3cdd9751-1ece-41df-991d-c7cbdac7fc6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 28bb4955-3789-4455-b924-b4dafe0d9179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 15773a64-c313-44ad-a399-a5c95399dda9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 ab320cff-9272-4a63-9924-e79e944c2a86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 360a9ad5-7ce7-4ca4-92e9-945aa22961b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1841;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE4AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h018D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h1841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #659 dbbb7e3e-99b5-4c0d-8c11-fd6983ea853d)");
unit.assert_eq16(16'hFFA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #659 4e4a20d6-4d3c-465a-b2b5-741c72b911f6)");
unit.assert_eq16(16'h018F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #659 69eaace9-94cb-40a2-9012-fbf2b2676117)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 4defb6e8-163b-489c-b02d-d976eef5fee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 18e2d14f-320c-44c6-a859-4f84dcc07450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 3ade3cac-3b6e-4037-861a-ab42f646e5a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 a8bfe6b9-e148-4e66-85c6-5faf5ed9797d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 c6224221-1d91-46fe-b375-96cf322029a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 3b800bd1-54e3-4dd8-b03d-f7516576f1aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8712;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h8712, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #660 4f104b99-2125-4f53-b57c-970b53c53581)");
unit.assert_eq16(16'hA43D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #660 7c0434a7-0280-43d8-a86a-5c0f206852af)");
unit.assert_eq16(16'h04A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #660 ea22689e-ce0f-4b02-aa1b-47243abfd66a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 09ffc131-9df3-4bba-93fa-ef9324c2d559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 a40174f7-4821-4a54-826d-aef68aefd46f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 8dff2544-51f1-4860-b312-83268636b099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 d8292687-5a7b-406d-98ae-75271ae68868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 fd5806a2-9d04-462b-95c1-6d5343619859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 c63affe4-ff4c-4fdd-914d-e11535b0bded)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0204;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'hBE26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #661 de762096-e2ec-40f5-b57f-27fe3f6e0436)");
unit.assert_eq16(16'h8ADD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #661 14587cc5-8af2-4945-9c2f-a0e997b23f99)");
unit.assert_eq16(16'h0206, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #661 a4249a5e-9864-491e-a946-b49c348baa6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 47184c24-a477-4ca1-bc93-ec2446b0d6ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 56dc7ade-b1af-40fa-8e70-d4d87bc8f498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 b290c7c3-7d6a-4824-b6b3-5362f6eabbdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 4262db7e-3728-426c-ba97-c508b6d288b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 1d6e2d26-34be-42cf-84ef-158a781c2753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 399b8a63-7282-4e60-87c0-6abdb1abfc52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h366D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h4C38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #662 1d250fef-0fe4-4537-9d68-c0c4f8a9d3e7)");
unit.assert_eq16(16'h5379, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #662 11fa7be7-8684-42b8-8dcd-bcd036f9d574)");
unit.assert_eq16(16'h06CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #662 8d12f7d5-7ca0-4b49-a613-cbb00b9eadeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 17b42b64-ea36-4df5-afb7-8a06f6c4cabe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 7976da73-2d8c-48a2-a9ca-0b3a7a2f373d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 dfa2bb9a-00d3-478a-bab8-6752b9ed5060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 6b083334-60d3-447a-bf5b-caaec539c638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 312acafa-6a9b-4cf2-a256-364f6130c78b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 138019a7-2dc8-401f-a454-72538c0a79ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h43AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #663 6d5249bf-0a73-4bda-a9f3-0cc57389c6af)");
unit.assert_eq16(16'h63B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #663 7e5b5f68-a415-47cc-8817-e705720bd49d)");
unit.assert_eq16(16'h0BA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #663 9b3a4b9d-fa3a-4a70-a1d5-1de3dda219dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 a4c6bfa7-966b-4bb0-bb29-e3ea16a10c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 45ef154c-6877-4d7c-86cc-804a0e5e76b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 f66c13d7-a2e8-41e6-bfe4-8b715a3962d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 67dc50a3-d886-4aed-98b4-603c475b45be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 448094f5-ccb2-4bda-903b-8dffca17709b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 fdc9a12a-b49c-49ec-a4cd-fb3de314c8ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3265;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h3265, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #664 14f4d175-001e-4789-b1b7-9a2cc3bce14f)");
unit.assert_eq16(16'h8A6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #664 febe054b-ed8d-428f-8210-d4ee4fb424b4)");
unit.assert_eq16(16'h0B60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #664 4f7bd89c-b21d-4c5c-902b-125d78f1f1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 e15b71cb-c818-4603-90a6-6d53982b10f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 5bc53fff-a4ad-4500-9979-0429224294f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 4f4e7a8f-2f0c-4036-a6e4-27308f74981d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 db814684-d368-43fd-8bfe-20a67c04d271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 aaadfb4f-1425-4bbb-9a4e-ea3a3d03f9ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 c0f2755e-cce5-48c2-a7b2-f5a28344e73e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA712;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'hDC9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #665 4bc190f9-e602-4fa5-93c4-7aac4b09b2d7)");
unit.assert_eq16(16'hD00E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #665 320ecca1-3cd2-4909-a189-25e7f364de1d)");
unit.assert_eq16(16'h0459, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #665 cc05d22f-c226-4aeb-b739-4102d79e56c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 8757bbdb-5c40-40d8-9c1f-235a93a35bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 1c3914f9-cd2d-4077-90dd-45d5e0747baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 cbc4188e-250b-4da2-9803-e724e2b65141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 7be8dff7-c362-4da0-bc84-73a26d690ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 bbe01ce6-bea0-41e3-b607-d23d38a02b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 1887f138-61ee-43bc-bddb-1453fea2af8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC15B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0536;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'hC15B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #666 ac472b09-825b-4bc2-a704-e99ef0f1200d)");
unit.assert_eq16(16'h4C3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #666 0f97ac82-f6a2-4d13-bff3-3f1ec15cfb65)");
unit.assert_eq16(16'h0538, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #666 1386d34f-ca37-474f-9e31-86d6d8750d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 b399478a-5921-433a-b2e0-cfe9a02282ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 e27fb675-fced-482d-8d1f-4d486e08bf43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 8ccf52dd-03f3-42c6-b0ba-887432d946ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 51163d75-32d3-42d8-851b-c4f2018a9a6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 e68a7a56-130e-4f38-894a-efb079a1e46e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 2b093cde-9d6d-435c-98ad-3d46e83489ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h517E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h517E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #667 d57fc4da-2a02-4a99-bc86-167fa247422e)");
unit.assert_eq16(16'h75FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #667 7b666a2d-d5cc-4b09-9152-080df27228a8)");
unit.assert_eq16(16'h039E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #667 0caac821-2485-42a7-a4cd-650aaf84d40f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 4c57264f-99b8-4018-9ba7-850a54ed145b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 5eb2eddb-5edd-4bc1-b843-10ede989d1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 f4985435-ed6d-4f01-a6aa-6263b0ae19c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 862c53d9-dbaf-4f35-96a9-cd98463730fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 5b15c857-d167-45e1-a550-1182c567ba09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 b6479955-8de8-4225-8612-92b82b9fe63f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0141;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0242;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h7DCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #668 f19babdf-70c5-403e-bc18-74ab1c083296)");
unit.assert_eq16(16'h42F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #668 21eb0d66-7278-4aec-b436-7906046bc17d)");
unit.assert_eq16(16'h0244, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #668 d8861869-64b5-4c52-b4e0-6a3a179ef50d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 3330fb75-c422-49c9-8caf-9562202437ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 ecffdca6-940e-44e9-9fb5-c6c5512ca012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 1155904c-3dfe-4246-90d1-0ea177bb9268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 f97d9ea8-5bf0-4897-b589-2717cd14a65d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 1fe176a4-5f30-41a6-9312-a72285f109d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 dd82e0fc-22f4-4d70-b1b1-ea0f91bbfd13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h93CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h314B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0824;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h93CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #669 61fb7add-70db-4ad8-a34b-3f72867e1098)");
unit.assert_eq16(16'hCCFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #669 717c51b8-ec5a-4ffc-b724-ccb1671ae6bc)");
unit.assert_eq16(16'h0826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #669 b1294977-f353-4cdd-ae77-9d336f073156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 1d83d951-cfa9-492e-ac90-0ce0145b0644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 811ab82e-a2c6-4c9e-82f2-ec7a965409db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 66d4b186-81d2-4fc8-a018-7d1ba793dacf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 632d37e9-8861-40fe-b118-b9077cfce500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 76ae683d-445c-4d9a-82ce-3fb48628df9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 0f7054a7-7206-4624-a824-0bf808d4a043)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0211;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h33BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #670 8a71b6c0-b7e0-4c81-a282-95b2e0d32d8d)");
unit.assert_eq16(16'hC362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #670 d43c394d-cba4-4be5-9647-4ac30889e8ea)");
unit.assert_eq16(16'h0213, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #670 fd01fb53-664b-468d-882a-274f4215c0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 e4d075bf-bf98-4c07-bcca-a79b125ffe8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 c71ffaa1-dc00-4321-b15e-0aa452c9555e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 ae3ac68f-d58e-4a49-8807-cae7764eeef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 461daa51-f17c-411b-9d1f-303363545b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 aecd3462-4341-4da6-bfa1-f72375018ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 8ae4d6c8-d30c-4cbb-ad40-4eb83d9f43f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4330;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'h26BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #671 b65d58aa-03da-4f64-9929-5df9e0248fc9)");
unit.assert_eq16(16'h001C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #671 be8c16c0-44ce-4a3b-bf1f-6cc11ab174df)");
unit.assert_eq16(16'h0C7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #671 a096ada6-9d3f-4e8b-ba13-25c68a81c41e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 1abc4275-a0f6-4cd9-a80f-21177c6bb9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 b5e8a7ed-2f6a-4052-bd36-6c0925329674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 1ee537cc-1243-4b84-a2b4-93a24ee08c9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 f1d55eb0-18f1-4997-994f-56c606e5ff1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 961cf7d9-4385-471e-9521-e9d20048aa86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 62ce9f35-652b-4bfd-8c28-3562bf168ff6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC73F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0838;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h3E3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #672 d0df9459-0cc3-4a85-a570-5378fb8b9e6d)");
unit.assert_eq16(16'hE3EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #672 f6f0875d-f587-445f-8d57-85668a9a9f37)");
unit.assert_eq16(16'h083A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #672 4b295961-e177-47f7-a021-43afdfa06719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 3f068453-bb8d-424c-9127-64ac47562514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 3a75fa04-2bea-4511-b85f-e9b04f772891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 02512185-df23-471e-9665-605f0db91de4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 92c4b66c-9469-4b7a-8a25-eb15440c61fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 441c8d55-c5a5-48b5-a4cd-9e1e809c078b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 545e33d3-4aca-41a7-a1eb-af15b663b7c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2DC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h2DC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #673 7ac88230-2407-404f-a4b0-90b84b4b75b7)");
unit.assert_eq16(16'h4BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #673 0fb94adb-e526-44ed-8bc3-92fedcc2853c)");
unit.assert_eq16(16'h013C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #673 130aeda4-59ac-4645-bb38-96945e387ae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 da219b33-cb7b-408c-ad48-57d9a905f1f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 7e6dec19-5208-4632-9f04-f786a956d76d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 515048dd-c951-4ac7-8e01-a94fd28e5747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 900424df-e61c-433d-9ba3-e3b2b6ed89e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 5dd20ddf-20e3-464d-a473-b481d059b965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 afd4eea0-860a-4a5c-a9e7-99033e1c947e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h3D3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #674 a5bc0ba4-6107-488d-ad40-337641107fd4)");
unit.assert_eq16(16'h5630, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #674 c64a4046-1ecf-454d-862a-fe000a9e478e)");
unit.assert_eq16(16'h0B6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #674 18ebfc38-875c-43d1-b093-c488b81ffe8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 7503efb4-fa9d-49d3-b284-f905b8986d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 8011bbab-d92c-420a-a449-07e42e1cb9c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 9690b707-86c2-47bb-b929-e2afc61463bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 7decc334-a6dc-41da-86e9-5b57c275327f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 79d64698-c28f-46da-b6a5-398f1b64b838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 1093a925-54a1-4467-83b8-0a855c813e00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2979;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0768;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'hFE49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #675 bfbca15f-bf28-4b82-8f76-6b54f473eebf)");
unit.assert_eq16(16'h510C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #675 3629bbea-63aa-4cd7-81f0-35873be83bc0)");
unit.assert_eq16(16'h076A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #675 bacec2ed-01f8-4f98-a7cc-10903fcd984c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 e8d8260d-cdc3-471b-9215-688c4bec09bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 f5665bf6-6377-4716-8b5c-8ddb931aa9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 92125729-1ef1-4162-a500-dbc20d799000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 b6a3fdb5-4f7b-4235-be1f-f0d543156955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 1cd764fd-8fbb-469e-a9cd-db7f7a087945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 af434d25-9262-4d66-a391-3612984b719a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2440;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'hDD52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #676 09027940-8b2d-4b9c-899d-131bd1cd16e4)");
unit.assert_eq16(16'h3960, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #676 b311ea40-5988-40c4-8090-b43af2e74634)");
unit.assert_eq16(16'h00E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #676 57987799-fc28-4e8d-9b2e-860725a4259d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 6e4104d9-a8fb-4be7-9083-7ea5f22f02ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 ee1e43d0-fa4e-4270-a5ad-5592307306e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 cf303cd9-54b8-40bd-b8bd-5914d42cbad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 0bd6e74f-0acd-4ad4-b627-1364af0279b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 58f28134-5f25-45e8-be3c-248e80273ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 807a17bd-a009-4968-8353-9b9c403a3b9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h14D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #677 eaacc035-460f-4615-abab-1de5b73340c5)");
unit.assert_eq16(16'h3C93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #677 e3a1b60c-7191-42c6-9e88-ffaa089c8d00)");
unit.assert_eq16(16'h006D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #677 a5100f43-30fe-467b-9548-f143be1ec9f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 abb7d7a5-fc2b-4bc9-b263-e7c11af0bfd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 c7788c11-967b-4318-b264-a568bbbd83e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 363eda37-d288-41ce-bc9b-1ea2aa159e50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 d7cf5cb8-8976-4e81-85d2-6a874a22b191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 ceb58572-6be4-41e7-abd9-4b4409e026f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 d764897e-b540-472c-a69b-b12450ef6474)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC31C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA253;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'hC31C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #678 f8abc162-ca4b-44cd-9e07-602bb4cda481)");
unit.assert_eq16(16'h5CBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #678 0a64ed07-deca-4609-bb3c-1cda038aa52a)");
unit.assert_eq16(16'h01B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #678 658f9233-9888-4f64-b478-fd798dc361c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 18d70bca-686d-4473-a3ef-4c72e887b552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 42110449-4c42-4ac5-8550-13e685c0dc1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 4807e387-8991-422e-8dee-b9df2d94a14f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 01959f36-3d2f-4958-b537-2f9e0aae6166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 7b527de5-7860-4fc2-9e20-d06c0105f71b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 26d7efb2-a359-4464-856d-bd05ff0eafc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'hBEDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #679 ea9def56-7091-425d-9e79-ddc09689b0ad)");
unit.assert_eq16(16'h05E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #679 3f1abc36-b74b-41a4-9bed-23ac3cfdfd6c)");
unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #679 7d322b68-ceec-49e8-90ef-89f8898ee323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 9c1de152-28f1-44e5-a4ba-dcdf75909fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 a03fe1ab-710c-4351-9837-622d45a58074)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 1b8e74b6-a70d-4a37-9738-02fc61f5d46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 ba8c5b2d-568b-474a-ae86-845663c32d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 c7581e55-2e5b-4125-91ab-3354a2070d27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 9f74e3b3-b533-4f67-86ad-1a736b721073)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0331;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h0331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #680 6660a7e4-a34d-4507-8040-9c3139185f37)");
unit.assert_eq16(16'h6E7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #680 3c84e2ed-4f09-4830-a807-9219726cf2ab)");
unit.assert_eq16(16'h0E10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #680 2f176099-8114-4bd4-8891-c943f8584bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 e56caec7-0beb-4e36-8539-ab12f83118c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 13f197de-dc02-4432-b7a5-0ec76ef330b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 553720e4-c256-48f9-84e5-39c33b331bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 2ebb6771-bbdc-4035-872a-3b81761d779a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 2ba9c78a-f952-4d0f-b3cf-8fe4a9de93be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 caf28616-6d03-4653-92af-792c6f4bf798)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'hEDF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #681 e4eb4e4e-656c-4498-8ab5-e83662629cac)");
unit.assert_eq16(16'h601E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #681 7f543791-f92a-4c8a-87f4-afdc3f9b619f)");
unit.assert_eq16(16'h08A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #681 111a8d55-81ec-4f30-acda-dc2d355e8988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 77d9444d-4661-401b-a428-0f72b07efeda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 a91ff2ac-dea3-40d1-a136-dc6baa855385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 b4608f33-daf0-41ad-875e-298bff280a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 4e5abe5f-7553-4b0e-b4dd-5e7afd3e0773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 91cc828a-3af1-4aa6-b534-48d4377b2012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 e2d26f11-b7d6-43e5-bc1b-d501a2e42299)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h97AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2315;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h97AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #682 22bc832e-50d7-496d-8b81-9a7b256eeede)");
unit.assert_eq16(16'h886B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #682 a3f10269-c74f-40e7-a9f3-b3c7944dd7c0)");
unit.assert_eq16(16'h0BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #682 d500c786-8b2d-4dc4-90c0-fc1cdd832152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 c1bf00af-2225-48dd-969c-72b10fe6d2d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 2bb4c114-6a20-4c0e-bb4c-9a7d97c2407b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 3d44d8a1-9b9f-48b9-9098-64862f3b87a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 14340ee5-1650-444b-b934-f08cf7292c12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 b816c04e-da9a-4456-82d3-97f5f927ecb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 b745bc0a-8c90-4e34-bdcf-2623f0510e48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB449;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4244;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'hB449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #683 8e5ead9f-6d60-412b-8f30-24fa37ee3138)");
unit.assert_eq16(16'h9F8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #683 352daca4-a5fc-40c4-9cd4-a2ced9b59d8e)");
unit.assert_eq16(16'h0E92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #683 81891b3d-78e4-4c94-bd01-4315982c7a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 8b83e108-6582-4c2d-8390-15885f40171a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 799be206-0d3b-4474-807c-418d1dc77108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 8e7ea3de-86fe-4cc8-93b2-817524a9f25d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 833fd273-652d-437f-96b5-9721dd73d511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 2c69ef89-7d2b-4970-81f2-6b14c6e02936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 ad2ca451-df61-48cb-b4cb-42e508141b75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'hE1B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #684 6eb5e75d-d08e-4939-9aa1-098e867419f7)");
unit.assert_eq16(16'hC909, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #684 e272d324-4837-464e-a5f3-2415e8c3c35b)");
unit.assert_eq16(16'h0C3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #684 b2565c7f-4571-4206-8c19-9f2e5339bdc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 faf19d33-a96b-4240-ae8b-84dd47153b4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 8200c87f-51f1-48f9-85a8-1d87ef73a2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 6aa773d3-511d-4cd8-a013-d8cd7aeeac75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 c5a06823-1a1b-4aba-a14b-b4c28680c7b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 dd6aa89b-d5f3-4433-938e-c5e5df84eb21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 0eeb225c-92b1-4b18-b626-ee80d7745897)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE621;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA454;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'hE621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #685 8263f419-8b3e-4b6e-9798-9fa450f7e1bb)");
unit.assert_eq16(16'hEC07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #685 2cf24d38-8b3c-4db5-b447-357ae5c87f79)");
unit.assert_eq16(16'h0B13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #685 a06da25a-1a70-48be-a05e-23965708883e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 56ec1b41-10e5-4d07-96a5-2f280e37467e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 a0e1d664-ba4c-4c95-90a9-8b119fcd9691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 9822eefd-6151-48b8-a5a7-329fc3d55916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 04c5b116-0e73-4152-84aa-f8285e4d378c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 005f7038-0c58-4ab4-a69b-ade245fd2cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 b686f080-c61b-4182-81ab-6736a0c5e732)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1823;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h4B7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #686 a5ae43fd-3e93-4db4-aa71-c33bd979d332)");
unit.assert_eq16(16'h6161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #686 915bb116-eed1-449f-904e-6551113e8ced)");
unit.assert_eq16(16'h0C23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #686 c26efb23-73b0-45fe-94c8-740b48723978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 0030665d-c6cb-4e64-ad90-833ecfe64a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 adff0116-8787-41f3-8d23-69d4783c1c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 fdde84b4-a6de-4120-812e-d5c526333a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 c0f7ed61-08d8-4dba-aea0-096c9ab0d08a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 55c18a32-8fcd-4994-bc19-bcf1d2726a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 ba128d7d-5840-4f9b-8fc9-847c52d63863)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h630D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h630D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #687 b2a12871-ab49-4737-ab75-b1bad0027d0a)");
unit.assert_eq16(16'hBA64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #687 7252aca2-7894-420c-81d9-c4e7a2583422)");
unit.assert_eq16(16'h0C52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #687 87f45442-bb85-4595-938a-3a5f8fac534e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 5ab49536-b26d-48a3-845d-a3125cbcc5b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 f410a118-bfd6-4bfb-b45c-c14d9c3eab3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 90adf58e-96b8-4b36-bd12-e991ecc1275c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 44ffc91c-b1c7-46a4-88fd-d1880f2b3f94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 ffc230e5-f5ea-4e8f-add0-c3d9eb8709a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 deda8392-1d93-4859-9910-e2980270eaa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h60A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5918;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h60A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #688 9aae78a0-b9df-4555-94fd-0d1f537e9a6c)");
unit.assert_eq16(16'h2CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #688 435dd547-0da8-46bc-8170-d04ea81bb830)");
unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #688 49958514-5fcd-4fb6-826b-c89bca8b756d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 0971e126-f1aa-4575-8634-d65182904bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 3c2c26d2-1771-4c0f-a095-380699372170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 c3a3da48-1ac1-4bc9-9093-c032a51675de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 604398ce-098e-497e-ac02-a503d8df499f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 497fe757-ba5e-41b5-9c56-e00de820e9fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 53a90b2e-c8c1-42db-8fe0-504a4dc80057)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2487;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h068D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h53B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #689 eda0eafa-cfd8-4fd9-8796-5290f84c87ba)");
unit.assert_eq16(16'h698B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #689 fa33fb33-ba08-46c4-bdc1-9f588788f263)");
unit.assert_eq16(16'h068F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #689 e3685455-76a2-4206-a374-041dea109346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 35bb6d40-c7dc-414f-8172-9ff34fbfe5d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 6b2f91ba-074a-4e1a-848d-ca3d8394927f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 a43597ba-507f-4eb9-8296-7d1e32020717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 75ba0fd6-c6f9-4e6b-88f5-65cc0b58cbe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 4562ea26-b5d2-431a-ab03-86979f4d818c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 6556f2ec-ca34-4999-9b3c-d64b936dd0f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4915;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h4915, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #690 18315f51-bc20-4c53-88af-5fc514f4100a)");
unit.assert_eq16(16'h8C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #690 34965c73-bfa0-40b0-8d68-8d32baee4371)");
unit.assert_eq16(16'h0B04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #690 c97aa74a-3896-4944-bbec-0b0b3dfb5d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 884d3c9e-f97a-4bff-8145-fe5712045274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 df835322-0283-4657-8d52-1100f176845a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 2bac7a6e-5503-458c-ba84-2d7c1f3a2500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 827615f6-7e99-4cb2-b4fd-ddc855e82401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 6cd9054d-a797-417e-9a47-0e102e6c9f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 db1a3deb-b4e9-45d2-b52c-823c08ea4fc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEBFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0654;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h51F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #691 e8df5612-ab64-4965-908c-ff1784969a9a)");
unit.assert_eq16(16'hAA67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #691 3ff91f4e-38d3-46a3-a09b-df6daf5b6548)");
unit.assert_eq16(16'h0656, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #691 c367a8f0-f66e-4793-b0ca-e1debaa7872f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 268367a3-7187-47b9-b80d-1f7804c2a70e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 a49919d6-552c-4fab-a815-5a0dec2db4a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 91b6650b-b263-4f1a-a276-845d279b5424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 53da66a8-1441-46f4-ad9b-8e24bcacb74f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 243a9b13-e911-455e-bd9c-7467f51e6637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 8c13cddd-2458-4a79-aa5c-efab1eb320ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4101;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h4101, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #692 ac9227a8-a010-40c3-934f-7b76d7a5b313)");
unit.assert_eq16(16'h35EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #692 c9da17ac-e50a-4304-823b-b68328742cdb)");
unit.assert_eq16(16'h0E7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #692 dafc67ec-a293-48c9-a3ae-a1ec96c6115e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 ae35c700-5468-42b9-9eba-3e5ffa4ab575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 1af7b7e0-0d1d-4b78-917b-0f2824446152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 f4082b7e-9f3c-44ee-988a-7fa4cecb2a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 c7d1cb48-0e59-43ca-b8ed-59d2506ac7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 508957cd-4e26-4e30-95d4-f651cdb36ca3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 3d713691-d039-4452-a53b-8d45685aff11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h135E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h0C3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #693 e2d320f4-c1fd-45df-9730-3ff7a69af1be)");
unit.assert_eq16(16'h631A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #693 832c2e37-d052-45c2-89f9-8e5eae4ffa0b)");
unit.assert_eq16(16'h0BB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #693 9719226a-9121-4d12-b808-1de50448bc2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 bb558e4f-36b9-4ec6-97e9-98407e6cf355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 a4f8b1eb-6a8d-4f08-8aca-dc003dcfc00a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 c5943358-a042-4348-b3db-cc04f520dcf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 0df0621b-9571-4409-832a-8709f8da6b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 7b7aa327-ec09-4966-8432-699de2ce3bea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 a684bf3b-c446-4a94-aee6-4e1ec09047d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD10D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7107;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0131;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'hD10D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #694 bba6083c-499b-4ef4-bdeb-5002b11fb1fc)");
unit.assert_eq16(16'hA0AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #694 7ea6d45e-5b2a-47ec-8fcd-b8b89d7d7d5a)");
unit.assert_eq16(16'h0133, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #694 3f8c4224-1514-46fa-baaf-69b4e071402f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 5c04bb05-a08f-4d1b-ad32-c926826ac27b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 e91f44d2-6372-4870-8944-933f2080d65c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 6764f987-f915-4bac-8038-4b5576551b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 3002b8eb-2834-4f88-8cc0-2e7de510062c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 997de9e9-e36e-4666-a00c-8eb981de25bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 794c8942-5cb1-4893-9658-a23a3219bb4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h512F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0095;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'hCB5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #695 b1192fc4-f202-4343-8bc0-4c3184d4a887)");
unit.assert_eq16(16'hFE7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #695 c49204cf-56a6-4440-a2bf-2ac62bb45cce)");
unit.assert_eq16(16'h0097, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #695 a1672b73-ce1e-4d89-b0c7-15a111fcb6d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 155c458e-8b73-4e53-a04d-1e159e35a17e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 803000cc-f533-4c42-9638-663678f6f863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 9baa91a7-0200-471b-a726-9c02bc8d5111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 69d1232c-3808-4701-9f37-5a8560d3fe66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 3a64f3dc-0dcf-4a8d-82bf-6cd61d44dfc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 e0f03bb7-056a-41a7-88a4-1285508fd428)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA278;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h02DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #696 917cb9f8-1b25-456f-81d8-d19f01eeacc2)");
unit.assert_eq16(16'h04C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #696 932f4339-b9fe-48e0-b77f-4b6fda8d1438)");
unit.assert_eq16(16'h0D5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #696 b043c774-f700-4214-8dbc-8cc6fd105202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 00db5dec-2515-4cda-a44c-5c7d6dd56b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 ed9c0e5a-3126-433b-89bb-86ddb7b4d8ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 e592c3e1-71c9-46c3-89a9-cb5a9483343b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 026218cb-85e8-4225-9213-ebe93d98cf2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 93fca120-aa4e-4fb9-bffc-591a6363834a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 4f8babdf-96dc-41c7-957f-53cd3c02a913)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'hC0ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #697 8a7231ee-12a1-47f6-af41-f056e2cba3e0)");
unit.assert_eq16(16'hA6DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #697 261c8753-744b-4e75-af9a-40304c5ccc36)");
unit.assert_eq16(16'h087B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #697 f1e919ed-901b-4c52-8c24-f002e59c8383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 c4018f52-376b-4e6b-bf39-6df7505e2e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 92999457-ab99-4209-a6ba-897e2ed40544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 11bc1344-5ce4-4bfc-86af-6ccaaa9a8e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 d1f481a0-b687-4d2e-a29a-508ef90ab2b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 201451a5-0e32-4bd0-a619-7894d22e30e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 ae80a730-fdbb-4bc8-ba8b-71815cc4192b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF087;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h7B77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #698 e87ea27e-c454-4997-8976-25b1bd67964d)");
unit.assert_eq16(16'hDF0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #698 01190cbb-f85d-4865-8dc9-d50eb10b0911)");
unit.assert_eq16(16'h0421, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #698 a0fc2b32-7066-43c2-8816-dce54b3bf9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 63645b66-e56a-4293-95f5-0d9050058944)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 e7a876db-1a9d-40eb-9f9f-48336a7bca1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 fc7a8991-1a7c-4562-82cf-e88d9bdfe735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 e4dcff10-de25-4871-b7e1-061eeba47d75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 e71294af-dc97-468d-bb12-2c6e115b28e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 09efc931-b8c8-4233-8b95-284c9ee25eab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8222;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'hE7A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #699 2dcba2fb-fb57-4729-b41e-39d5dcc7d5f3)");
unit.assert_eq16(16'hC0EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #699 008a4f55-8468-45b2-84e8-8f193ba1adc7)");
unit.assert_eq16(16'h0A48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #699 2fe4eca3-ac69-4f6e-84d7-2a68426df2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 65ad616f-1048-4df4-ae31-bfb79c34a09a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 c8e4106e-4dcb-40ce-b55a-ae7fd4027ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 c038e99c-bada-4500-8608-3190c255d679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 8797e3fa-83eb-4cc3-af44-3bf8d7f387cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 9056cac9-7557-452d-8022-11a929cfb840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 8afc0918-39ee-4b23-972d-2049c24b3498)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4AF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5782;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h4AF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #700 e73a8cf4-724b-45e5-b7e2-3fc0819d246d)");
unit.assert_eq16(16'h3116, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #700 9e27f6fc-485d-4264-a630-651e5b289dd3)");
unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #700 4d23d109-0bd8-43f2-ad73-9282414a9af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 2b6e32f9-4485-4fc8-abb0-89f6636bdde4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 2d9887bf-c417-4e1e-a713-b2f9aed9cf1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 402c9832-36ea-4da8-beaa-ab6b32f869ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 20575dba-8839-4c18-b8b7-21573ced5a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 882d6389-2319-4300-a253-30f8d89c5026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 7ffca213-0525-4168-b575-6b78dfbdee84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC482;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h569A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'hC482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #701 a57e3a16-862d-45f2-85a7-c0f2b1a282c4)");
unit.assert_eq16(16'h5B53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #701 8265623c-c7c7-4d62-86ff-51a5f95ab220)");
unit.assert_eq16(16'h09A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #701 04d31901-8ffd-4d89-b21d-af71055bc70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 8bb5113f-7e18-483e-adde-0179e35f3ddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 26abd4b5-b4ed-4b38-b237-40252a688475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 72267679-d497-4859-b78c-2494f786ba78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 8c8990b2-419f-47b4-8f75-5d29fcb706b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 5807c429-3f82-4eb8-9b49-ee910feb20eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 0671ef0b-3386-4eda-9d22-25d3474befae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC12C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9198;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0795;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'hC12C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #702 092dbebe-ae7d-4e11-80aa-355b2c971293)");
unit.assert_eq16(16'h0081, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #702 3bc1916f-550a-4ca5-8fc0-f9d13adba8be)");
unit.assert_eq16(16'h0797, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #702 1597dcc1-cf14-4a3b-99b3-a5a6931b39ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 e258067e-26ca-4bf8-ad1c-464aec956caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 82d1ace0-9e00-4d63-8a39-b1e1552de0cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 a1c82ca8-8dea-4521-b81d-20a9db427cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 689ad510-77b7-4a84-b818-c03daff03a1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 8bd1b518-c4b0-4eda-b3a5-d89d52fb9fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 a8d24d1c-24ad-49ce-be7f-ae8dc72d455a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h98B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE2E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h98B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #703 ff29b922-911c-497f-863e-e7d58d79fa15)");
unit.assert_eq16(16'h96CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #703 508e9b43-46a4-4b6f-a6a8-f47620fc46b2)");
unit.assert_eq16(16'h0EAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #703 894a1376-2fb2-4022-bc27-315340dd6533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 b894d65e-0529-4e5c-9a36-1e839f18d419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 b2c251c8-ccc4-408b-9e46-ba3b358171dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 9ba51f06-6fce-4a9c-b34d-baf820b90883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 dee1fd61-99ca-46b1-b1ef-a5b596b1a0dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 6569c6e1-edda-4959-b806-be2f1040d24a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 54380f76-b6b6-41fd-8da8-e411b4d47546)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h0A0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #704 ea7c3441-0c92-46dd-9301-861ad74a65e8)");
unit.assert_eq16(16'hB844, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #704 7171e26f-bfe4-418e-9332-8c959e8ad2fd)");
unit.assert_eq16(16'h0E97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #704 ab7ce2e7-e61f-4a03-b4a4-5f72b59464a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 8b052279-f7e8-4559-810f-766b1fd1e344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 ab67d9cb-0e7e-471a-b39c-267367e8193e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 4d8e37a3-24ea-4ccb-bce1-61011dbf4698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 1808b4df-fa3a-4545-adc1-637a4bda988c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 c1c7ab92-cb1b-496a-be0f-f68996a7402f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 ceae55eb-5fcc-400f-9189-5a63cac3f6cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h4EB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #705 c9c14a06-211c-4c2c-a8de-cafae4a0b423)");
unit.assert_eq16(16'h259D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #705 69e7d7a7-4234-4b41-a4e9-726e2b2aad67)");
unit.assert_eq16(16'h07AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #705 62074b19-9193-43f2-82e6-a4c085376ed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 2808244e-bd40-47f6-9f8c-c3ab03706e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 2c31cbbb-e7c9-4ba0-89bd-83469c83d464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 3591edf0-41da-4435-b04a-d342cdbabea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 3945e47e-e6ee-4a0e-bf38-e27e063bab01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 77b92304-df0b-449c-920c-54db1ba429e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 673e2f41-e77e-4f70-8576-880ab8845b9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h23C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEE22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h23C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #706 484e8f80-3248-4a43-b5d6-4ec0a93d9ded)");
unit.assert_eq16(16'h6E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #706 093885b2-766b-4866-9500-4dc7fe1357a2)");
unit.assert_eq16(16'h01D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #706 95dc974b-69eb-496f-b4c8-95c34f2396be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 b4694cd0-d919-4498-8ae3-b7f9ce671007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 a4b20ac5-5009-4320-9383-854af3eb9464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 525d731b-f55c-45f6-80a1-a78ed897ba8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 46d560c0-7dce-4f41-b668-c71fffaa0428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 91ca3095-db38-48f6-915a-66c460b75fd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 e7964467-e7d5-4e3c-82f8-e735abe2f755)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h141D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h141D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #707 b4c988c7-e632-4a96-ad26-2002c36a0a02)");
unit.assert_eq16(16'h30B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #707 02c64511-0969-484c-9240-88093af4dc52)");
unit.assert_eq16(16'h06AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #707 58fbb4fc-ebf1-4723-80af-f090a546d808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 e027f30c-05a0-4bd2-89de-699873fb621c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 c5c48c2b-d0b0-403b-9a5a-e45063c6f0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 da131f36-4bce-4563-b91b-e0507cf9e837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 c7712732-f572-4164-ba8c-88f7850ca62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 8e3fa76f-94c6-4706-9c73-86a0fe9ad656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 42d44cf9-0e21-48a1-8a1f-932950b0e319)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h190C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'h190C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #708 8432240e-4916-46dc-abab-d9a50fcad632)");
unit.assert_eq16(16'h6D5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #708 0ce033ed-7036-492c-82ec-e1682bee8d90)");
unit.assert_eq16(16'h0DC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #708 b58b7941-81ea-4517-a920-a62d4af3f354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 41064299-d107-4834-877e-50485aa2ff61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 86bac772-d4d4-4ed9-abf8-f155846f29ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 d37be04a-1d48-40c1-a4e7-a23bc543533a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 73505618-3096-42d9-9deb-0f5d8279190d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 116e578b-8ebd-4e77-8f68-2252d6dd9f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 15ede3a3-b2c8-4f62-aed2-ea2714c70e8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h566E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h020F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'h6F53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #709 3708dce5-6a65-42e5-9201-efc65a6764d2)");
unit.assert_eq16(16'hFB2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #709 9cc43bb2-caa3-44a0-8581-556d83eece4c)");
unit.assert_eq16(16'h0211, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #709 abd55511-596b-45c4-a47f-fbeb895c266d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 c290827b-89fd-46b7-bec1-bc672b8f1dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 951e648b-0ac2-4501-afb9-ceaf6e31d9aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 d11fe271-f176-438c-8638-f8729c966b19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 67368a65-f527-4de6-9df3-da990c045088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 34087e08-2f75-4c03-b5e9-d2cae4fdbf76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 64319107-5b54-4691-a34a-5263d9bb781f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h98FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h22DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0430;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h98FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #710 c1dddd97-3fe0-499b-aa97-2e392ae80c0d)");
unit.assert_eq16(16'h281A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #710 e9224238-a71e-429c-9d8a-033de149e893)");
unit.assert_eq16(16'h0432, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #710 511e0e07-9a27-4d06-88ac-f3cbcbe066ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 a43ce371-c9c0-4fef-999c-53a8d0d119df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 47a23e1f-b1d6-4e74-bcf1-ca54f5c1488a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 41aaeb93-96a2-493c-a26e-211a0cd5c5de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 0091cf8a-92e4-45f4-8352-fdc8c3768bc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 4bbc2311-fd16-42be-a2d5-a439cb4b5e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 e53d44e0-6121-4ec0-a118-a8eabc135ab3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE093;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'hE1F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #711 30f17233-26d5-4200-9af7-612a748a16dc)");
unit.assert_eq16(16'hACCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #711 29751b37-dd72-4933-a23e-9e9d0142d39b)");
unit.assert_eq16(16'h02D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #711 4c460f93-d2f0-441c-9521-46a63940f162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 6598ac78-5704-4544-b1d2-43dae33fd65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 a9e402bb-15be-4099-9bf2-7cd6f4fa6323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 7d3925e5-2c53-43d9-b588-a0d74a03f833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 1a62b2fd-9b2f-4066-b6e8-3859d4db3dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 8f1a02cd-4917-4dcd-818a-87d4fd989734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 3d073d3e-564d-4ce6-9bba-a8a4f6dd8011)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h326B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'hBC07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #712 aa78879e-280f-4eee-bc33-606bc40239d3)");
unit.assert_eq16(16'h67DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #712 a16fde49-d7f5-49bc-8567-ef6567ceaf45)");
unit.assert_eq16(16'h00B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #712 79ed08dd-420b-4889-a6da-32beba4e4eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 64235fb4-0cc9-4674-a863-6d6e588f5142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 26485f36-338a-4f8a-a4db-0f7492ec24f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 c4b2951f-e139-4df1-9792-9be8f473b4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 aeb6f0dd-04ec-4d92-a2c1-1e2e412f7dae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 d8e0e220-f75c-4ca3-bf4f-e9565c722ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 810d560b-e359-401b-af15-da876c15b01e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7369;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h54AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #713 295bfda6-bf3a-4ae4-82bb-f6cd02baf8ec)");
unit.assert_eq16(16'h1307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #713 c01af860-b8e7-4cce-8de3-d22d1206048d)");
unit.assert_eq16(16'h0790, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #713 d835a6fa-1fa6-4a9d-89ea-41922b19cfa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 2416cb6a-dbc1-49a1-8168-661ed269a593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 1b35e12a-024b-4fa4-8dfa-08f811736158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 ae5ef6c4-9f38-4bcb-a67f-47c49d089da7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 6bc6c120-e473-4cbb-ac81-a89d6718b4cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 b523ba2d-a334-4212-9c2b-d42ae8418b46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 72bad2d2-fe84-43b5-bc25-0e83c4cf93d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5719;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h3BCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #714 0bbd04c3-0574-48e4-922f-aeffae0fbb70)");
unit.assert_eq16(16'h4F5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #714 0694b2fd-a103-4d3b-803c-c7ebe26ac099)");
unit.assert_eq16(16'h0FDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #714 42d852ed-bc79-4ac0-9fed-dc7b15739e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 f6a3193c-8b40-4e49-a7ae-4970bf21b340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 74778235-1ba1-4a15-be5d-ab66bd13a1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 49871197-c530-4925-9dae-46c27e09bd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 06d05e03-2c74-4e10-aed7-b36f8c70dc02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 ee731041-3548-48cb-b6f8-f3044eb39fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 3346d174-90a5-496c-9a15-4310f8b8789f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1072;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0630;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h1072, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #715 7759568e-f3f7-4add-b422-d5faa4427c44)");
unit.assert_eq16(16'h5164, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #715 cfc7a083-92bb-4f66-9247-789b169b8df2)");
unit.assert_eq16(16'h0632, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #715 fb5ba758-04da-4845-ba26-276b957cf15f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 0d451533-45d2-4a31-b1bf-726a8e5f2e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 d2f43fcc-7084-4293-a3ab-e68d04e89887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 ed93a942-cdb1-45cd-ab7c-4d6b869fad08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 6b0f1cc6-2909-4de9-b1ca-0560868ffc59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 dbe35ac2-2b71-4601-a63f-d2595d9fadf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 9e2c30d3-63e7-40bc-92bf-74d2ea262798)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h595A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h3FF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #716 b925d1a1-9757-471d-8a20-bfcc807b3b98)");
unit.assert_eq16(16'h0C1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #716 b5f110c4-ed3d-400e-b93d-ff910c6097f0)");
unit.assert_eq16(16'h0E3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #716 e2694cd0-2ec5-4af0-9d11-4baacf390f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 775395fa-0391-42d0-a446-f6ee3fadcc39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 b29a720f-dbdc-48d0-b686-d3e0851dd80e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 89c8c0dd-1a14-4e9d-8196-6e4795e8c80d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 1d63589a-f330-4d22-ad6e-ee71fb1af415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 74354e43-a249-4c52-8d68-c96154c57e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 d561d8ee-2227-438a-a49b-d5e27b460cab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h84CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0954;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h84CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #717 ad4602a3-41ed-4b45-97e7-23d50097d595)");
unit.assert_eq16(16'hF079, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #717 8c3d0984-0117-4b1c-b1fd-9baa904603c4)");
unit.assert_eq16(16'h0956, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #717 c55dbcbc-9d1d-463d-afa8-eefa48b12772)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 020bbb9f-546b-4b09-8d2e-5fd3c050b83d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 0dd80698-266a-4985-ae67-da54d8c39f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 13e8ad44-063d-4c69-8b1d-d38f46d06b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 9534e816-f587-43d5-830e-05e5a96aa476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 716ad223-9329-48e8-94a2-cc86a632b2ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 fcf7b37e-72fe-4e23-ac3f-2ccf54e826a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7AE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h618B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h7AE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #718 928d3eb3-b3aa-4731-9e11-055bb5c7b550)");
unit.assert_eq16(16'hBDF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #718 a65d8f95-20c5-478e-a6cb-7b32771e2bbb)");
unit.assert_eq16(16'h03B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #718 e275ccb9-0c0f-4cf4-9cfd-91f5a7c82261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 8c914de4-66ac-4482-a252-980c28de1778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 86ff44db-cc0b-4b8f-8441-75d7c49209c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 0dcc806d-ed51-4985-8205-17ad8bd07bce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 7bf0eea2-caf3-4f65-a460-bda7a497de28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 5b1df630-6377-4153-b01a-7dc8c67fb850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 46ac46f6-1c22-476f-815b-dd68b8ecd89a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h21C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE06D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h011D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h21C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #719 2cab273f-59c6-4dba-900b-ce5291c53ddb)");
unit.assert_eq16(16'h585C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #719 40e6c760-9050-492c-9857-e966cb0230b7)");
unit.assert_eq16(16'h011F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #719 7e25044e-3d8b-48f9-8358-a0478ea04427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 d8aeaef9-8907-4d69-8046-dbb125f869ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 36c22d60-3114-4fdb-b7ed-a41eba49c555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 6f9fb69a-5ebe-4076-b798-410acb4041c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 a70ebdb8-3602-4ffc-8a7c-99ba3744cb46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 d3b5775b-c903-4a59-ae76-e857521fd06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 11bc2abb-9156-4e34-b48b-f523110d1b3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h134D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'hBCF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #720 ba2f2926-4515-496a-9851-d85b204e9acc)");
unit.assert_eq16(16'h0924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #720 9f787168-9ee6-4c7b-b088-65efd7ea5dea)");
unit.assert_eq16(16'h0DAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #720 a5f883e6-3302-4c35-88d6-5d2e0ac7e190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 bfe763dc-6bc8-4436-8c5c-5d2a312799f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 98863246-03a8-4f5f-b51c-5d7d6794ca1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 b85a0a5f-a18a-4cb0-8482-df651a3920eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 b9af8464-c147-48d6-8f7b-6584b5831141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 8733c03a-a56c-44f1-a24b-f94495cd6950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 d8e66e6f-5ad8-444c-9116-91ace134cb81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h016F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0297;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h5D81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #721 6ffd1e8d-9254-4568-9346-a21d21c24cef)");
unit.assert_eq16(16'h93ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #721 e91015b1-f20c-43db-9075-e066e912888a)");
unit.assert_eq16(16'h0299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #721 3e819c77-db2a-460b-b593-1fbb194f6ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 1de5cdfc-8462-49f2-b2e3-ccdbf925ee82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 86573774-6dae-43b8-ab2c-eaf0c514ffc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 fe26fc18-6c1c-40ce-9f34-da3faebb784f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 55f2bf31-071f-45eb-ac05-f2bcd302bace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 6d3767aa-a5b3-4b79-ba4f-cbf94ec590aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 20a5b230-f9ed-4d5e-a105-0322b7076e6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC851;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0569;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'hC851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #722 3e8d20b7-fa73-461b-b581-c57fbf5a2b33)");
unit.assert_eq16(16'hC2B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #722 d2bba9fb-c7b0-4601-9438-3dcd0498d155)");
unit.assert_eq16(16'h056B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #722 febb4649-e352-4b93-aed2-0b96281e506d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 5133a972-c242-4926-9f77-1779166f11d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 01e19e88-048a-4e94-9c4f-fa280caf0e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 fbbe189c-b936-497b-8586-9677dd718052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 f217806c-bb46-4820-967c-cf666680fc01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 b33e1277-eae8-45e9-a77d-c4ffe0804855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 a7594863-b169-4e27-b990-9881a65a6214)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2051;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEE46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h2051, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #723 18b2a6df-8c04-41ee-8800-657c5ddb93a8)");
unit.assert_eq16(16'hBFC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #723 e3fa3219-1d55-4591-879a-b143942718ad)");
unit.assert_eq16(16'h05E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #723 90c738ea-aaa1-4398-88ab-7f5a83bf2ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 5abf177f-0a02-4e2d-8e6c-439801e0cc64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 25989bca-c603-42cc-af8b-8b3c7d293c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 8b4c7f73-2796-4394-81b3-3d93ed1e9b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 2b3dc3fd-3aa4-4693-8e18-52648cfbd06a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 fb0c01f9-6797-4d08-8af5-ebdaf23aa2a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 dba0cc10-6551-4370-8de4-56d8058b9e72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h636E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0183;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h636E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #724 69fa36f3-4ea0-428d-a48c-cf4db4442670)");
unit.assert_eq16(16'h47BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #724 d79ce3af-3727-4fe7-b6d4-b9954d97555d)");
unit.assert_eq16(16'h0185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #724 ace48372-b169-468e-bfaa-6f8d4ae98273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 b54091fd-4283-4f81-ac20-3d5a9b94a301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 077fb517-2549-48e8-8405-220fd69ba0a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 b6fd8967-ac26-471a-9a56-ba7a055a7573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 05e99dd2-a10e-4b4c-bd61-4d630711d390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 c2fe614f-2973-4486-a526-eb64a72e71be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 5ac8611e-954a-4f68-a24f-e14cf57c6878)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h47F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h47F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #725 14c0f609-a8ee-41c1-b84b-8ab567e0bd72)");
unit.assert_eq16(16'hA18D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #725 6dd21dbb-740c-4b12-86aa-b9e42ae5667e)");
unit.assert_eq16(16'h0A97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #725 d855c862-61b5-40d5-8449-ada7c452329e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 aba32330-4a44-4d45-84b5-79741ca63add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 91cf7c19-7f8b-49bc-a68c-7b7b1fe41c02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 7c592631-fc0a-4a93-b4ad-265f620f43af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 9fea2021-451f-4269-adb1-84cbf969712f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 fa850873-a5cc-4f39-9d92-53836fcae6f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 acc054ca-5086-405f-aef7-067bc82d8b3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB407;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC8ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0663;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'hB407, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #726 9ea0f0b4-ee55-4920-91a4-20c8aff1c19c)");
unit.assert_eq16(16'hB433, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #726 4e417469-b8e1-4c9a-b8fd-2a9effad28b9)");
unit.assert_eq16(16'h0665, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #726 1e2369c8-4b4b-4261-b100-919d21850fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 e3f974da-1b84-4a31-a469-6a054bb568f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 9ed9ab44-ff47-4446-a742-f0d8a257fec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 270fe646-1973-4390-8de3-0f0dca9c3be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 0bdb07bc-288f-41cb-96eb-2efe0c53d0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 dc0e5354-af65-47fd-8d75-e82f74556841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 e84d1cec-423e-4ef2-ab56-18108fb7a4b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h25CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #727 0da05796-6372-4326-84eb-8be7cd257536)");
unit.assert_eq16(16'hFA67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #727 f5b838c8-f4ea-4830-a8eb-3dac5f917472)");
unit.assert_eq16(16'h03B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #727 020c4949-7fa0-40b3-8d7c-4463189c7a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 9abccc87-ed7b-4a2b-90ea-8f9d45fb8f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 adcfd0a0-962a-4160-aac2-0962e43b84c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 7a574871-57bf-4790-a93b-f5af32359100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 747e9597-3a7e-44b6-af43-8994f6c39f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 26323cbc-a427-4343-adeb-75239abe8f74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 c184444d-b427-4b49-be47-0016ffce2fe3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9DA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCDA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h9DA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #728 0536a1de-c82a-4ed2-a10d-ee398d87ee19)");
unit.assert_eq16(16'h472B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #728 f0d1f562-d3ea-44b4-b103-ff09b7f2db63)");
unit.assert_eq16(16'h0D84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #728 b0963cc9-8a67-48f5-8388-35a6f0d45ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 b05341b8-d3e4-4631-81b0-5cfaeaeee56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 935f1c82-f61f-41f6-88b0-4e066dbef7d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 a8314a9a-e361-434e-914e-464e4b6b992b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 01e7514e-5d10-46e3-9d81-ceba224dc198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 6d6f586e-3449-4565-baa4-d63de580f4a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 8c4fdb96-6c9e-45a7-a905-924565554d29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCFCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6410;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'hCFCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #729 cfd1cdc1-ba32-45de-8f50-4ea2a341f25e)");
unit.assert_eq16(16'h9E4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #729 7fa475ee-e058-4cce-af6a-230733578ddc)");
unit.assert_eq16(16'h0B43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #729 8d96a797-ba36-4de5-90c1-09557e84f784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 aee75f88-3876-4e1f-86d2-66e93ac387be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 8275463a-0299-49d6-862f-56ba550f6b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 507f5436-04dc-4f5c-8c6a-da453435da4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 dd0f54e1-a2f5-4716-b2ea-905b976fe581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 4d7755c3-5155-474b-94a5-5ad5fa0a113f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 00ca860f-d636-423f-a0ba-78cd5ac7756e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5704;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB34D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h5704, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #730 1ef92c04-1110-4029-8f6a-c225330d1194)");
unit.assert_eq16(16'hA37B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #730 5c5a1683-e1dc-4bc6-894d-761d44faddad)");
unit.assert_eq16(16'h0D1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #730 9a110859-b6c2-4333-96ae-296eb83d799e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 b0faa533-92bc-4dc3-af02-174da628a48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 4f39176f-f192-409c-a511-ac175700d92a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 f57b22c0-f000-42fd-8b5e-ffff1c955cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 cfc3488c-0303-41f0-ad0f-536576557767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 6c712aac-d8f0-4447-8972-f3c3b93b2ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 fecd3b9a-1c92-4bf5-9528-aae5fe62a3b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h23CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h00FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #731 381275cd-d240-49e7-9f7c-63f57cd9c829)");
unit.assert_eq16(16'h04EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #731 5224ded8-8f43-4238-bf4c-8f960f9d878b)");
unit.assert_eq16(16'h01D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #731 440fcdac-df8d-416f-9652-77bd8b8ee556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 74bafe86-dc45-4a37-b0dc-c0282a7d5ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 9d642e9f-c74c-4661-8261-1b5d6ba7f9e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 384000fd-17f6-48f8-a1b4-b08fb6904180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 fa064325-91d3-489d-a37e-bd490bc8fff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 0df4c934-1ab2-40e3-97dc-5c3ebfb0a374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 d12e87de-65fc-4de1-9c7e-67fbc830b7cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC69D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8646;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'hC69D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #732 fe390a96-4d81-48f1-840b-54c8345f238e)");
unit.assert_eq16(16'h5BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #732 b251f4d3-4ed5-47f8-a7fb-09b16e989d60)");
unit.assert_eq16(16'h092E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #732 b233ce83-3732-4b66-9b22-4dea1299429c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 70cc898c-c942-4506-809a-152113b086d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 7803c200-15af-464e-893c-c7162b12530e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 0751efab-32a2-4fb7-a4b8-87d3e3964d19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 ed678014-bdfa-421e-bdf6-8c6d8669ae7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 e170cd76-66c9-4813-be7d-c330f66f8954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 6e57693c-db6a-4842-8a4e-2f9b25696660)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'hBB5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #733 31bd798c-55e2-49c4-92fa-4009f7465061)");
unit.assert_eq16(16'h8110, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #733 5537f763-f20d-47d7-b05e-823ab64a8859)");
unit.assert_eq16(16'h04A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #733 d94d7f53-bdbb-484d-a346-b0f1b888125c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 022b21cf-5c55-4c0f-b5aa-f5b9f7cd36fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 4296e861-6660-4eb1-ad65-6cede3512f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 4d3dc08d-579e-40e8-af94-3472d1ad12b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 3f62e26e-4efe-4d0f-b6ff-d58544ecc3f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 127617cd-d654-4337-b90a-0bd63f703166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 3dbb1d84-7602-4da7-9713-2cd3ac914d86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h176C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h176C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #734 9721a092-d31d-4883-b1db-9dbf32693786)");
unit.assert_eq16(16'h84CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #734 ba48c5da-2e24-476f-a397-2a05765a02c1)");
unit.assert_eq16(16'h0DC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #734 049eb367-d922-4e63-bbba-a3594bbb8523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 3e9f2c62-4edb-48d4-8387-46c6c0ee6ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 d311d5f4-bf86-43f3-8242-4da4818a3232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 d01bd5fd-37c0-422d-b73f-d5c1f884953c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 87d4b43c-7b7b-400a-b17a-b45593bdd482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 0034b00d-1d59-41f7-93ce-be3c389f9d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 2e6a58a9-d035-428d-b53e-b61a22bce3ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF2B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0515;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'hF2B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #735 e602f96e-105a-401b-9aa4-dec1fa1fd733)");
unit.assert_eq16(16'hA612, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #735 5603a73f-21c1-4e06-9dfe-be1ec53772b7)");
unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #735 ac85f19e-4255-4b9f-a40f-969802b948fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 a97e0881-92ae-42bb-af1c-21cb714abc27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 7375dff6-92c3-4773-b422-d09394a35c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 59101e75-2279-447f-9274-c4990002ab13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 78eb814f-d7cf-49b3-98f7-5c9860e0dfdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 ee57dcf3-4365-44fe-94f7-3521fece0f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 a9806f47-df18-4f0e-abb3-8caba51351ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF884;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF91C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'hF884, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #736 8c52f13a-d06c-4096-bae4-165c5d2beee5)");
unit.assert_eq16(16'hBA13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #736 59dad9be-284b-473a-8183-9b81bcef875b)");
unit.assert_eq16(16'h01C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #736 955ba362-95b6-42d7-b508-af26f4233cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 1d3f2e7d-3b37-438b-aa44-437eccf329ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 48765de9-90da-4887-af39-823a28539146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 a7dc1d0b-5b0b-4b44-8fc7-75b3888a4fbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 5134e434-2a3a-44af-b059-3e2a4bf6d5e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 5a3a8257-c2b8-4dd2-99fa-d31a17531e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 5227a176-3003-4002-b2d5-5d929a294f3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h884E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0785;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h884E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #737 d8351a5e-f22c-47f9-8159-e5c690f53756)");
unit.assert_eq16(16'h62DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #737 8e27eb6b-8af1-4aed-9ee3-547912684486)");
unit.assert_eq16(16'h0787, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #737 c0f97d6b-fc07-46fc-a017-8631c65f4ece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 91c5f039-c9ff-462d-841a-9c0fe97b1dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 fce437a6-171e-4127-98bb-61194032ee03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 46320368-5e14-455e-8efa-8016f98b5d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 e039c673-4210-4967-9c45-686a122e1039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 2590e7a8-423f-45a2-bce6-743efe6548fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 7f11ae9f-c6c7-4ef5-a6cc-7821bfbd23cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7ABE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h8D45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #738 528a4437-296d-41ff-8d23-90f22f942ebe)");
unit.assert_eq16(16'hEFB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #738 7bc6c614-07bf-49e4-a3a5-f81a11adcac9)");
unit.assert_eq16(16'h0E14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #738 49d33ddb-16e8-41e7-a021-619486c2c414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 85afd0f4-5fe2-4de8-81c4-be135dc36c35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 482cde43-d3ee-4e06-988b-bd83010de38e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 0e636fa3-b0c2-424c-afee-ac173f97ceea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 63194341-fa25-44b7-92c8-50d47d7e6775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 d5a9ff5b-60bb-4142-a891-e3c3fd496014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 fc0cbda6-6693-4ae1-a21f-fb37a19fe07f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0215;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'h3C42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #739 08197ad3-92d4-47e3-9af5-9baa65c5dfda)");
unit.assert_eq16(16'h116A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #739 1f0c513f-5b51-4404-aaeb-640994c8cd45)");
unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #739 fba8b62e-edce-4708-9319-103885ee706a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 e3edc4df-6763-4190-8a15-4f8597f6cdb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 ade71b3e-3490-446f-adf3-2247925c49d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 9bcfde30-f246-4045-b102-67f1abcf0215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 e390a14d-6335-420c-a756-1777df8a40c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 81e73b97-baa0-4bd1-a180-183fb54f14ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 3e3f4fc2-264a-4f41-9935-5681cbed0b5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1857;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8211;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0967;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h1857, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #740 b39cc75e-cd6d-4a8d-912f-505e70a26182)");
unit.assert_eq16(16'h86F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #740 204a756e-6f9b-4a80-af67-9be7163be196)");
unit.assert_eq16(16'h0969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #740 f32e5274-4f7c-4f01-852a-f35965efbb7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 148c73ed-9590-4dfc-ba01-d7e186a28e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 2f3c99c1-c039-4fa6-98b5-0250da464897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 a5949956-d4c9-48d5-9622-801da25ea118)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 bd989609-853d-4a2b-8118-f52ee092323e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 fd5cee69-1b29-4555-b7bc-ca1804d53921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 04edf0a0-b920-4d4a-8d17-82c5dc891be4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h84FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h400C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h84FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #741 029106d3-5eb9-4062-8dcc-b8575c8cc221)");
unit.assert_eq16(16'h48C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #741 7582bac0-841f-447f-a252-3e8ef5a0e5d9)");
unit.assert_eq16(16'h06C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #741 6820984f-1e94-44e4-9ce5-fe74720bbc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 940c6bbb-d1ee-484a-a330-1287224c0c2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 16ca0b9c-0afb-403e-b505-e3eb1ecb00d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 25e5aff2-0b00-4a01-9cc5-217fd7a06590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 23ce5068-e871-4e0f-b973-7d0f3de882c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 dbb18c01-7507-411c-8aa4-f3048d421389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 3f150b97-577d-4c8d-9aa8-cbd3555b3a32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h34BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4ADB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0058;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h34BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #742 eae5b37b-9ae2-4514-a008-d1028e7acd31)");
unit.assert_eq16(16'h22E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #742 c767c486-6344-4138-85c3-4f8533835ca7)");
unit.assert_eq16(16'h005A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #742 5e451618-cf48-4cab-89b3-6c8e981b4be1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 2f52171e-0f2e-4959-b3fb-1276f41d61b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 923f567e-f5ca-48dc-bb5b-447a1827abbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 df2eb90a-61a9-4ee1-857d-d009abed40fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 ec622fa1-bb27-47f2-aba6-8c4f4b611f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 962cc42a-55e9-45ef-ad58-7aa894582c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 6ea8ec1f-31df-4e37-9992-3fbbccb67ca3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD46E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h060A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'hD46E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #743 4f8a7ebf-6760-4a09-9658-521106806583)");
unit.assert_eq16(16'h01EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #743 6eb69b35-5e01-4f45-9caf-d9b50dcdb2ad)");
unit.assert_eq16(16'h0311, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #743 1760b0e1-13b0-4753-837b-982787d2d08a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 508a342b-92a5-4fa2-9a2c-fa38643583fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 22a0543b-a3cd-4316-aa76-71c2fc8f7b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 46e9f713-60c3-4e10-8e14-8ede32eef9f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 18b38211-40c3-4532-9b59-0859dcb5a02a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 ab7968d3-a901-40c5-9fbb-1a2d4c1facea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 97fde1b6-ad0f-43e4-868f-e4e643c5cd78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3525;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h3525, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #744 fd816aa5-48d2-46e9-8f44-bd28c70e54b0)");
unit.assert_eq16(16'hA754, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #744 53f555c3-9f04-4163-8ab7-7cb724de3c82)");
unit.assert_eq16(16'h05F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #744 feada4a0-722e-46a1-a788-f88b9bdc65cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 6a55b332-2cae-4294-b160-5090a9adc9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 373db6f0-2be4-492c-af70-77e4b25c9a08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 8bc0589c-f0c5-49e5-b54c-b122b5681592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 31bbab72-7c16-47ee-9a04-39ed639d7ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 6306f16c-8d01-4034-a432-ad9d27f0acca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 072742d6-bb7e-4023-b821-6a4dc8863953)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h309D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h309D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #745 a417428e-826a-450e-a794-20f94f9e95ea)");
unit.assert_eq16(16'hAA94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #745 bcc58b46-6816-4436-a279-c46b54afea82)");
unit.assert_eq16(16'h021C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #745 cf073081-79bc-4744-93eb-8484b8c7999e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 dc789027-1ab8-4e1b-8102-b3fcfe4c6455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 8bd68785-93e8-4aa5-8959-710295eb564d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 2984f39f-f012-49c3-9df2-f01c90e69e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 5e2e584b-f564-4538-8dee-6403bb80a5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 085fee20-9183-47c9-aba1-a602b1372624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 20842fd3-ab53-44d0-a962-94a1e2f99240)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0795;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'hEA2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #746 d936b19c-9be8-46f3-ab22-a8953c323db7)");
unit.assert_eq16(16'h0081, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #746 1b9e2ad7-1815-40ee-8e8c-d4f4dca858b2)");
unit.assert_eq16(16'h0797, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #746 786db08e-d791-4cfb-b8d8-3ae9abaf7cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 0118067f-6fe2-49a1-b9ab-3d3ce926bdc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 e914d471-7b99-4a4f-96a6-4b62bde1aac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 64361bc1-4108-4f08-9d3b-55ab5e7a30e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 8b4bfdc4-7b1d-4180-bae5-e340367465c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 a9195699-d50f-43df-b5d9-f4107c02a8e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 98a27943-94be-41a9-827c-fa1f9212f7ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1448;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0161;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'hBC85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #747 fb21c4b2-af61-49d8-baf6-e9d526806ab3)");
unit.assert_eq16(16'hF7B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #747 45006dfb-48bd-4f64-be53-1bbd6efa998a)");
unit.assert_eq16(16'h0163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #747 6231a9bb-20e6-4cd5-afcd-601f12079094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 a810e5d3-42ab-4c61-94e0-44d5a30a3c87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 e0d08ac2-6115-4f6f-bfe8-64245d2b32f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 d2e85b68-a85e-46d4-941a-5375708fddfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 62e55f6b-6f78-4ec8-9966-9ab8432aea41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 924f1d73-445b-4162-94b9-0b9b53c0038d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 88c567b7-d3bd-4896-99a6-2e81e0f3826c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h889F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h37B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h889F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #748 56687539-4735-4f79-aa9f-48c15dfcf485)");
unit.assert_eq16(16'h4441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #748 050b456a-af33-4e0a-af06-2bc91643245f)");
unit.assert_eq16(16'h0F43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #748 f0fa3a7e-bb35-4518-ae85-be261d38028f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 26bdd1c0-ef77-4bbf-9ad9-2fb43ade8e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 3868c7f3-9b54-440c-968a-b48e3125a0a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 10205f36-462a-42e0-bbb2-32cbd74c650d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 15ae3c8a-af51-4540-a6b2-dab2400e0b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 d8bd4ef0-6572-4041-8a4b-e511419d2568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 fc7a8cb2-3fee-428d-bf71-71898715c1ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h659F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC4F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h088B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h659F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #749 5bdbd1ec-429c-4082-94b7-3e8a8f05948e)");
unit.assert_eq16(16'h2166, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #749 e12b80ef-bfa1-4ead-8e68-5e91f31d9276)");
unit.assert_eq16(16'h088D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #749 a670f734-c07f-4aaa-905f-3795f51864aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 a20f4db6-5354-45de-879f-57a827bbde23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 cf5378ca-c9be-4d2a-a24f-f151d2e5380b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 88b80a7d-ebc9-4e96-8278-63c97ffff7c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 f1e7ed40-d71d-4c0e-a55c-d5f090384c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 f3f0c900-1c23-4dd1-ba67-c8dbac904e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 d1be2181-ef14-4831-864d-eaf14274abbe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h507E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA699;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h507E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #750 9def27e6-db61-4daa-b799-09f8d3b7b6a0)");
unit.assert_eq16(16'hCE4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #750 5a006045-426e-4502-91bd-737b88cb6469)");
unit.assert_eq16(16'h0EAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #750 9c204295-eea8-405b-8da8-f8a3ebfd38ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 eebd1147-0cd2-4a22-a4e0-31818335f3ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 dd18c4a7-af82-49be-a70e-e4a510d6fce0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 95de1b08-12df-44cf-8e84-fea9dcfee97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 85d243be-ba46-4bc4-a0c0-e85cb93b743f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 21794b87-9a61-4503-b7a2-e6c38270fb4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 36a765d0-b8b0-4814-97c8-ae3e7f3f4a89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h26E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #751 ea421594-2e04-441c-8b0e-c333bddc562e)");
unit.assert_eq16(16'h0952, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #751 b3007b0b-278e-468c-beaa-6d7d6512d905)");
unit.assert_eq16(16'h06E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #751 74e3f53f-a068-40a1-b5fe-e3848997ffdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 54a58169-f3b7-4848-8bde-16b4dfbbc41c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 248d160c-56c7-4d2d-82a1-4c0841759c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 c6bf2e90-7f85-47c4-aacd-6e360f915068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 64623f89-abd4-4115-9a35-7330fe607724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 d66b9b2b-5e86-47a5-bd8b-5c11a791ba9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 ca8dc675-c675-4004-9858-1cec139bcaac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9839;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h9839, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #752 1de1b2fa-2f7d-400c-8294-57e2e06a9020)");
unit.assert_eq16(16'h9567, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #752 ffaadc17-f378-403d-85bf-1fcba7df977a)");
unit.assert_eq16(16'h0E1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #752 668a3275-0102-4769-9208-bcac1a4aebf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 b561bb2f-2be1-47b5-9fac-ed25281f7e66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 ea2329b1-7db1-436f-86ab-60a9eee745e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 40671866-9f64-448d-a68a-bc3cfd6008ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 3368f82a-f0f3-4f50-b66f-84c9b55280e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 b6590f5b-afec-46a4-8785-a41bdfff80ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 0f1e1f04-50a1-4ebd-b67d-5f4f30ec026e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0886;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'hAB7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #753 d7dffb1f-1376-41b0-817c-c9131fa82fdc)");
unit.assert_eq16(16'hD675, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #753 b0d33a34-0c0d-40a0-91fb-6230e3021729)");
unit.assert_eq16(16'h0888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #753 0d1e29c8-2014-4fec-a78d-7ab485d181b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 804af48b-3f04-46a7-a643-155bbcf5ae29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 67c898ae-9178-45b7-aa2a-ec1c829fecd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 a81913b3-f69c-4643-b0e7-76686539104b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 4be8f0eb-1b3d-4de6-94be-6fb581577163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 203eaee3-36ec-4afe-9c77-936efecdd859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 ac427e09-fa40-4f6b-ba53-a7df076cc383)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF742;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE886;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0773;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'hF742, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #754 a1d2e080-dc9e-4dbb-900f-c6bddf63ced7)");
unit.assert_eq16(16'h50CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #754 9b78f04f-0be9-40d7-a083-9d5ffcad1f2c)");
unit.assert_eq16(16'h0775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #754 59245fa7-c382-4114-96c5-2f068ab86e64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 9b03b10a-d3ad-4b49-ab75-2248431c6e58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 48a41965-ab04-4ad7-9f53-3eedfea61a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 7983643d-9f13-45af-9709-41d740c1d3ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 39787c6a-6d8a-4593-a2d5-d21b63553340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 11eb997f-f46e-4245-8b47-5844f50c6b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 eb8179ac-86fa-4194-b47f-4b322d645a27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD97A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h4F49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #755 878cd8aa-7a9a-4c07-be1e-1fc188264cb1)");
unit.assert_eq16(16'hE989, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #755 b970d139-235f-426e-84f9-95f6ecd1bfe1)");
unit.assert_eq16(16'h04E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #755 ba835dcd-cd3c-4420-b6e8-e1177bcacd10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 1137a1e1-5017-4f63-8efe-c08c5b69d3ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 c711b243-7f60-4445-9f2b-02865509bdc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 829ad806-ffd6-49c9-b83b-40e54a0c8080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 8e6733df-9333-4a0f-8247-c2dac88a472f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 d7b910c5-797c-4fb2-b5f3-c8f3bb29a3a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 02785106-87c1-4016-b4fe-f53a03fd2687)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h7F86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #756 b432b5c4-334b-47a4-b628-fdd7dec8ce2f)");
unit.assert_eq16(16'hB676, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #756 c0c043d2-a3fe-4fe9-9525-87702ee88034)");
unit.assert_eq16(16'h0DC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #756 6cea704e-6b60-49ab-9a3b-7899a73a5a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 864678e0-caf7-4ed3-a0c5-199c5602481a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 3f2d834a-bae9-4291-a2f0-8890e72ea42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 a6b4d234-ca83-477c-abc1-6276ed4bb2c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 b9f81db9-521e-477d-82bf-0a4e3facd720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 1838b707-31ee-4d56-be37-087698d379b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 3b4f7369-bc5f-4bd2-8470-89fdae2aa5a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h708B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h708B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #757 1eb44dab-0f03-457b-ad5e-e76c835acce3)");
unit.assert_eq16(16'hA74E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #757 8961df4a-6c62-4344-94bf-f84527ba989f)");
unit.assert_eq16(16'h0C4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #757 129baaab-45a2-410d-95ba-0893a62f4359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 59baa46f-4e5e-49a6-b960-77f98e9de9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 98430a19-6197-4ecb-accf-b5e606b627b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 c5b03f3a-041d-4726-9a44-9fc2fe53ea70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 7497612f-2e46-4086-98f9-b37bb1089a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 fe4b668e-1075-469b-9527-31f8186d3194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 cb0f1023-2bb7-42ba-a124-da3b84fce38f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h445E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h445E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #758 53906244-1989-49f3-8a80-607fe42663b8)");
unit.assert_eq16(16'hE1F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #758 c1e65eb3-0b34-4839-89da-c2e6447f11d5)");
unit.assert_eq16(16'h0B3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #758 4afd54f0-4ba2-4fdb-9d83-376be92263e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 b5a2e204-e354-4dfb-a1f4-b180d2cd830f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 668c45c3-3742-4d9d-b3ab-047fe9d6756f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 6f0d79e2-fb36-46a0-826a-bfdd507142b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 79315492-d6c3-4a2b-9c99-2254057b0967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 cf144116-4f6b-42ed-bc7a-f4dfa70fb9e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 856c9263-6e61-4aaf-90b7-49c777a3c35f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9902;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'hF647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #759 6580bf18-5b36-408a-949f-f96e2318eddf)");
unit.assert_eq16(16'h590F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #759 846beea5-f1bf-4df9-837d-c71ee2f75f86)");
unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #759 656d243b-f9ca-421c-998d-51fb59ab651b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 0ca03920-f789-4d88-8a44-b6ddd840217e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 17002053-a775-4f26-a1c8-ecfc2a8121e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 3804c6d0-f575-4173-b154-88e5cd72813c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 2c9e0a98-f74a-4184-9e7d-67527b34f61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 4bac330a-3962-4d84-a6fb-6b1600713302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 f6e1b745-1d94-4135-9fe8-74b18a4a41df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA863;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'hFA6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #760 ddb7daaa-0892-4e14-9907-c7c14786fa1c)");
unit.assert_eq16(16'hEB60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #760 229a562c-aa64-4e68-a130-b9f648624f53)");
unit.assert_eq16(16'h0E23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #760 831e005b-8e8b-440b-b19a-9534e852c624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 cd09a5bd-5dcd-43f1-8c07-0633179c2611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 332ab739-8a04-4e20-8156-e0f92c62fc53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 ff9fcbe8-de8b-4a4d-9728-10ef05e58a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 78ad3a3b-b070-4301-8bbd-4dea7bb21963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 7b11d862-a75d-4f48-bb42-fd73db592254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 f9085eeb-8c53-4aa4-b217-f8ce9a12c33d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h408D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7225;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h408D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #761 3984d615-bc47-4245-a7d5-57ec1a2e33cf)");
unit.assert_eq16(16'h67BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #761 05d3dabf-86f9-41a7-a7bc-41f244402df9)");
unit.assert_eq16(16'h06FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #761 d74154c1-60f7-4a63-a6cf-6f8d9f78c16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 9cb42dd1-d2e2-4801-90d8-cdf61263059b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 d6326a10-49fe-4ad0-9031-761d8c098991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 9bced45e-6244-4217-93ee-bf3e2a21228d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 4a80f16b-96f9-48a8-b86a-f27a31ef62ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 fb8c2238-bbcb-4f20-90c4-f6b3511e35c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 dd3fed6e-6c28-43ac-98c7-76c4b5c9ca1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF309;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'hF309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #762 4402a698-ac4d-42d8-908f-f024106ccf6f)");
unit.assert_eq16(16'h92FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #762 ff390733-bdb1-4817-b15e-1fb0e6a07a1d)");
unit.assert_eq16(16'h04B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #762 80855568-4c66-4e11-8e55-265233a933da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 8058e7c2-ff0e-42d9-8fdf-537fcad7b330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 8352e93d-4de7-456e-aecd-cee5f45caaa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 8ff8bd53-fad0-4ac1-98fe-8861bdf4484d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 ef11c0cc-ce4a-4681-9a0b-2c3be132e2ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 f94c962e-f319-408f-88c4-470aaced22c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 5b5b598f-3f44-4c15-8ac9-45c8d2f000f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4032;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'hC8D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #763 4f888d9f-b6c6-473b-86a2-fd7870a07d59)");
unit.assert_eq16(16'h8A80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #763 d1b5d49e-9b14-4727-96c8-49e03561471c)");
unit.assert_eq16(16'h0ED8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #763 2cfae4e7-1d25-4292-9049-5652d0c4741e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 de24aa72-dfff-4895-8200-47285acb7d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 4832ffdc-8179-4685-92cf-73d844714578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 c1283ee5-e06f-4f84-b096-971208fb5334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 1e66a73b-17b4-48cd-a5b3-95c00f5e560c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 a2b8ee9a-8fd2-4595-83f3-14420bf0a167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 f252277a-54ec-4049-99c2-99db60f00e06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF06D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0185;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'hF06D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #764 b6464d19-9181-4d82-bd5f-bd31ca2cd71a)");
unit.assert_eq16(16'h1EBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #764 8634f5ac-8bfa-4c94-9a79-7838121ebeb2)");
unit.assert_eq16(16'h0187, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #764 75f79796-6f65-45ab-b7d8-0e16b2d516e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 82d7457c-f717-4380-aee3-6d9952eabf83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 f99e5e46-6a8b-4b7a-b23b-0c359bcb2915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 815b73d0-2a5b-4694-ba31-404115025b41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 f975f934-bfa9-4ff0-a064-bc3c305cb57e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 934ba374-e2d2-4d0e-b31e-049e4e4db227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 66fade1d-883f-41d1-bd8f-d49573b0a78b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h315A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0235;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h315A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #765 16f35d11-9c34-4008-b68e-e4773ff0b02f)");
unit.assert_eq16(16'hB67E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #765 1035ba4a-0738-4e61-8c5f-205cc542a660)");
unit.assert_eq16(16'h00B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #765 a08d87e7-2ebf-4211-b642-87f0cd5c7815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 dc1c22d9-6e19-4da9-8d2d-c17406a13af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 e587f1c2-66ff-41e0-ac79-6677b6b2bdc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 4f1d772c-8b1f-4724-84a7-21ff88a11448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 67b029de-ff35-4d57-b2b5-56bed7af0c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 bb1f92ac-aa6b-429c-a9c9-249295578452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 0a66bb4f-9062-449a-9e5c-fed3b1a4242b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'hE6DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #766 c0054863-3c15-4562-8905-5d384a943f00)");
unit.assert_eq16(16'hB5A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #766 7bb0cf30-6501-459b-b6d8-e58d813ead43)");
unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #766 94d9ed1f-98f7-4d06-9947-0f92aadf86dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 1d1eea95-d5f3-4f6b-a08c-d539f52c68dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 ed887a84-8bef-4b41-aa10-420f8082af61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 b4fb57bb-093a-43b3-9f93-8185579da9a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 3d1c2f7f-e772-49c8-848d-116f29ee8b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 a9b38999-50bb-4af8-8233-acae14dd922d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 7ad74375-e044-4202-8ec9-8b8e344c70f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB66D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'hB66D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #767 b713f333-fa50-4862-9df0-28f7076358c8)");
unit.assert_eq16(16'h507B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #767 467eb94c-d2d6-4df1-a672-db0f4bf4dce2)");
unit.assert_eq16(16'h0E94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #767 bd3be026-0fa3-4113-b376-ec1f581e9122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 2ef92c18-7f44-4207-b25b-10e471f56ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 3f883ab3-e4d2-493a-aa33-8f34606a0ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 cc5345b7-6bb5-4f9c-ae94-31460a50e458)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 038f8e64-d26d-429b-8876-a6150e619120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 99062ccd-fde8-47c7-b152-a80a2160c2c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 c0a17b46-33ec-4c93-bb38-98a3ce5859dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h086F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h71E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #768 127fc3a1-89db-4688-bce6-b98e9aa35d38)");
unit.assert_eq16(16'hAF3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #768 ab6bd3e1-099b-4f8a-aa12-3fcce9022d90)");
unit.assert_eq16(16'h0871, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #768 12a1c225-a4ec-4add-bef3-f09104483fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 01c7bf45-5889-4fdf-a218-66d489aeea19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 3b52c1c7-bace-4cef-a146-7ac5f0268ed4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 0d5abe8a-e6f3-4b7c-8b1e-3a1562b2f872)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 0859a0ef-a0cf-41b6-96a3-cc950d9f44fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 871bdb5a-43aa-4ef2-97b0-bb1a8f85ddac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 24af00de-b3b0-47f7-86a5-19433c97866c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1BDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h1BDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #769 534c44a4-6bf1-4d2c-9d98-a8b2856b3250)");
unit.assert_eq16(16'hF2CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #769 00e0cb61-625a-450e-b10a-9b42d177027d)");
unit.assert_eq16(16'h02FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #769 27b2ddc3-af37-4a6d-bb29-0393ede37ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 0b583308-fc58-4526-ab8f-f440532b100a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 a1b5dec7-86d0-4464-92d8-e0efe1c6a142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 617c5754-0bf4-4864-9b97-e58c12f830ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 ccf539f5-43ea-4109-8125-34228f0acb17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 d013d998-a3fe-4560-9a16-6a7a660ac138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 5d4b488d-41cb-4f12-8345-f0ea014cfd1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'hFB7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #770 8ad76c28-4033-44d3-b3be-a5779ae909cc)");
unit.assert_eq16(16'h94B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #770 95699214-3e01-4bcd-a984-c837e8d4be69)");
unit.assert_eq16(16'h0AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #770 bd2f7f8b-4e69-472d-9f0c-a3912e81f467)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 a3d3f17a-a284-4f4d-bf61-55e04635d4b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 165afd0e-e371-4ab8-b42a-093392809e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 4951b96e-6b8a-4dba-8bb1-0c2adf942f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 a4d8de9a-401b-4fc0-8205-0729e7fbb42b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 bc29a7a0-3886-4e32-a2b5-a2722d8f4a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 2db72d3f-6761-45da-b717-c63acd626d74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB07B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'hB07B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #771 3091ddd1-f1d3-4515-8978-38595674fb7c)");
unit.assert_eq16(16'h4718, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #771 087bd1d7-35ae-4fa0-96e1-77eb66d8a885)");
unit.assert_eq16(16'h0F70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #771 dad8f3c1-3a38-44ee-81da-9f0c9fa979bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 f2431526-956e-45a0-ba48-133dd3e18ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 ca1c5325-0e02-4346-94e1-034c70b868ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 e621174a-c391-453e-80bb-3d64f816bb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 b06bf5d5-7062-4057-8c47-c67fd33bee3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 689f5bac-27fc-46de-8d9c-9be8452632e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 5bc5cb07-e096-4210-9740-9f2ae3dd3649)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h364D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5564;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h364D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #772 584a4ba5-6083-4503-9d4f-c284b5471602)");
unit.assert_eq16(16'h6689, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #772 f3c5ca54-1439-476b-9fdc-719c828522e5)");
unit.assert_eq16(16'h05E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #772 d79f4c7e-dbae-4349-bafc-637b5a1e220b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 e8fee6a1-d656-4f8a-ad17-9ed71130ff5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 a05130f5-7336-484e-b4f7-beef50c98fc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 09ebdd79-e575-4b48-ab41-0f5548fc325f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 fc291f13-547c-4d47-a26f-6875e0f9cb55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 c6a6e189-d748-4e32-bca2-66b4da341c91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 2ae5f021-2a1e-41a1-b6ed-0f6760b426f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h2F0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #773 df91b1a4-8ed2-43f4-b902-35bd1112e082)");
unit.assert_eq16(16'h6712, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #773 6894286b-01d7-4608-b938-10a91a8c19d2)");
unit.assert_eq16(16'h0F69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #773 39d82325-ebb2-4921-b224-23e7fc602b02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 8788536f-2bf8-46af-a6e9-8ce2ebd175c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 b20ec460-feec-4c61-b97a-09bcac6de00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 68a2b702-bd94-4cf2-9678-bdb72d4831ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 5e6d7b2c-648c-4722-890e-6d800632e283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 34f53f27-1762-4382-a867-af72f989a12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 ab42b66a-b6e5-4e9f-b72d-e80b217546ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB88B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4481;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0968;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'hB88B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #774 0844098b-fd76-49f0-94a8-a9ebce54cce1)");
unit.assert_eq16(16'hF886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #774 f13d34a4-d1f1-4179-9e96-0091fe7f5548)");
unit.assert_eq16(16'h096A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #774 911f495c-b287-4e86-b4f1-021f8cd851d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 c6b83147-9e30-44e7-b40d-3ca32f6a8852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 cc6eb727-cd54-49d6-916f-593899d1040a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 602ce76a-9484-41bb-9ef3-514608b59739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 d892c8b6-1c53-4a89-a16e-533a5d6ccc17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 cf8361aa-036a-4515-bd4b-8c96a66a7082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 25e8d2f0-2f87-45b6-8198-68f9bd1bb5e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9610;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h7E99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #775 5c05759b-e9c4-4912-ba34-2bce704f0c89)");
unit.assert_eq16(16'h5969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #775 62f84821-a8b6-4b61-a793-415ef7553a2c)");
unit.assert_eq16(16'h08B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #775 4fd5f736-da52-4944-8289-4da249aca4a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 8cf14062-49e8-40dc-939f-288324b2650b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 5fd91998-2de5-4b2d-93cf-0dadda4e15b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 c3f3829a-50fa-4a90-9a8b-a49661ba9c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 26ce3d71-2b31-47ce-9fdf-4a9322622c80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 edb6bf9f-c7d9-4787-a97e-0df0abceaefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 005d2b0b-515c-4e95-a11c-9a2522098bf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2751;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0741;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h2751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #776 8a9a7f69-9daf-4599-8e14-2f91f0aef619)");
unit.assert_eq16(16'hA763, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #776 ac02f08d-9573-4ed6-bbcd-53cb6c4fedde)");
unit.assert_eq16(16'h0743, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #776 b942224f-8814-419f-b4f5-3b9ed3bf60e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 fcc5d14a-6e65-421f-a433-d6084a22355c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 7a7fda9e-fcea-4ea1-a10b-fba8514fb2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 b3ec9dc1-8889-4157-8eac-680a8016be7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 e1f64475-62cf-47f1-b5cf-afa75f7e8db4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 3531e352-06d2-4b49-99d1-e808429ab739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 8a1cceb9-78e7-4589-9438-5655d2b4b725)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE40E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h8C7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #777 b7bee41d-d242-4eb4-a11c-d6e78d62d036)");
unit.assert_eq16(16'h196D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #777 81bd98ae-5ce2-4d02-bcb1-4cb428bcc922)");
unit.assert_eq16(16'h02D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #777 96b99115-f562-4ceb-bebc-e4df450fdb36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 cbaffd04-3c9d-4e1a-9a20-8f60f7f2eecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 6947d9bb-ada0-44e2-81a1-66d8ade0528f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 8e404786-aa40-4f27-89ad-9d842bff57b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 df6da19c-3e31-4943-babd-dab958291e78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 3189b9d5-ad5b-4372-adab-d4d6b9619bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 beaa3c69-1a20-49b9-8b87-0fdcd11e673c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6DA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h208E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'h6DA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #778 6bfd2552-a3e8-4cb7-aeee-1644b4b5972e)");
unit.assert_eq16(16'hF82F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #778 1653968b-0330-4d04-bab7-0d1f76e40cec)");
unit.assert_eq16(16'h0E38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #778 1803e032-5689-46c7-b0e1-9e744fa698ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 f3b293aa-9467-4851-ad04-9c1d3dcf0f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 a275c3c9-c138-45c5-bd72-cad31ea718c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 f5a86b76-8d9a-4b87-94d5-33ad0fe0c8fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 c5ae0ada-9e08-4ba7-9679-b817267545ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 d0163ca3-afb8-46b4-ba0a-0dedf9091cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 cc6823af-fb4e-43e7-81df-ff8ddbcd398a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0418;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'hDFD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #779 9f94a01a-fd95-4d79-9d73-9af4b4ea3b6e)");
unit.assert_eq16(16'h377B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #779 008d56ad-8603-436b-890a-f65a45648686)");
unit.assert_eq16(16'h041A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #779 9fa23b33-c374-4def-83de-4fef05ba49e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 c5b77b93-3c6e-4479-a300-e9bfe530a0df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 d67606c2-0738-4890-8e93-41cd5d545d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 dd271e4e-5373-445b-b79f-0f5f5e94b387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 0fcba845-330f-4c8e-801d-54833fd1a63d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 f73a61fa-de63-4324-a39f-7ddccdf2cf16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 54331314-33f3-4e4e-b1f9-e05280276b68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h053F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'h053F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #780 91bbe57a-9ad3-4e08-9878-5e904adf9539)");
unit.assert_eq16(16'h6256, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #780 ac5235dd-e2dd-486b-8abd-35e4f9138b72)");
unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #780 73cade0f-b2e9-4cfb-8236-c7f746f21578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 d61a33f5-c7ab-40cb-adad-9a6144809f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 5f3034a6-0ab7-46db-b515-9db879303d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 e340cd89-c7f8-42b3-96fe-82fc64404bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 9cbef24d-9313-4147-824f-4b2470a7b871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 6609e878-ef97-4a28-87bc-920a33becd17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 0772f4b7-093b-4da0-93d0-e81d01f5b341)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h076C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'hBE60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #781 61601c91-8f8f-49a8-afeb-dae240b69caf)");
unit.assert_eq16(16'h7E00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #781 6fcea2d2-09b8-45fd-a7aa-fee33ecaa343)");
unit.assert_eq16(16'h076E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #781 6f47dcc1-2543-42cf-81f5-a3201040a8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 ff716bc1-2196-4abd-86e9-ad655941eedf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 1760ed80-5f4f-47a1-8f93-902299342ef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 931097dc-aaf4-4c80-a264-d02729d6d7c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 0982420f-0a2f-4d8c-878a-ec8778091475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 cfe28b51-a96c-4ab2-88b3-efaa306e2455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 962a6ea8-d7a6-48bb-929d-dba8e33503e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9FB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9517;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h9FB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #782 c52e5098-b0eb-4cb3-a173-8ed25d6b52ba)");
unit.assert_eq16(16'h8DF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #782 6c61a45a-c11a-4c8a-8016-25a71f5176fe)");
unit.assert_eq16(16'h0E3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #782 60a74f6e-1d64-4b9c-bdcf-8e9b5ee1ba43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 24416141-b102-410b-a73d-d48bcffbae69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 0a019848-ac03-4cf7-ae4b-4183714aaccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 0ab7d2f2-80d8-45a2-916d-f3127478b973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 01ee847a-84f7-4b88-bf61-a0b28c64b576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 3744806d-c1e3-45aa-9877-9dad0e1f41eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 cc878126-0fbe-4f17-92cb-17ba92d0197a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0708;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'hFE88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #783 34495948-dd7d-4558-b1a2-5d375a7f6216)");
unit.assert_eq16(16'h5C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #783 70ac3135-1ab7-4255-8956-2aaf3fc9475a)");
unit.assert_eq16(16'h070A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #783 c2101fc1-323e-49b5-89bc-084b0600b720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 aa27b488-49d6-42a8-9855-e3ae7c4bc472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 482d1c0e-6184-4e76-ab4e-8c14969c3a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 02929cf6-9e53-4f70-9f9b-6799bee721f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 a1aa0863-cd18-4588-8897-5ce09a84ebe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 fb3e5892-8453-49a9-a314-be267fa9315d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 c9f7d8c7-9adb-426a-b6de-3458fca7a0ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC049;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0415;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'hC049, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #784 a498085b-8ce2-40ab-9920-871a3ce49db9)");
unit.assert_eq16(16'h1C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #784 7ede3bf5-4470-460d-8409-c3fa46355a2b)");
unit.assert_eq16(16'h0417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #784 ae7c6b15-a388-4070-8333-13d3e3653f2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 e24e693c-ba8e-404e-8efb-c2462e975b14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 b1bb6e3a-8779-4823-9809-adf3b2e57f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 c5b8b593-9c43-4947-b708-a4a62edc472c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 4b8fc026-d839-4e8e-bceb-f3ef3bde18c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 4077e458-0c19-4c6c-8e7a-35efc616e86c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 f37e9b53-578a-4e35-a0e5-301548a11f9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h50D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h50D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #785 eac80edf-d23e-40fd-bcf9-7a915e383162)");
unit.assert_eq16(16'h94B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #785 ca5620ee-9ce2-4898-888c-1a291bb96df3)");
unit.assert_eq16(16'h0AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #785 2654f71e-bb44-408a-b745-8eb94274d982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 f18826c1-04fe-41df-8c6b-b5c4be129f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 6194e754-80b9-40fb-a364-6d4e17312a41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 6ef166f5-2fed-44f9-83a0-9cf5fd631757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 7bf59364-8956-473b-86ef-dae3e48ab2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 dd48fac1-98e3-4ef5-b270-3b6607fe09d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 f8bfcb18-6f08-4bf8-8593-a62b878d8aa7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h679C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h096A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'hAD9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #786 59ff9ff8-de39-40ba-84e2-d8c8b4fcb8bc)");
unit.assert_eq16(16'hE7BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #786 661b7c8d-afdb-4248-9c67-11ae4cda2e68)");
unit.assert_eq16(16'h096C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #786 41931f06-bb37-43a3-8701-8d92ce00921e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 335acc56-0bcf-4bf4-8112-4734f0d371a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 054ad2fe-7dfb-444c-88db-a60a55d45183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 116848ee-f0d6-42cf-9812-5fde2985b57d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 7dee586c-072f-439b-92b3-a928f5d18ea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 b5e1ea3c-58de-41ff-bb4a-4a4884d3a0f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 40e423c0-0f38-432c-aedf-1adf5009f4b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE694;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h70E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'hE694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #787 66216af9-ad0c-43ed-b1ae-5371add60490)");
unit.assert_eq16(16'h0727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #787 f9a7efb1-f1c6-41e8-99c1-7f99d552a74e)");
unit.assert_eq16(16'h0F03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #787 7291c278-76e0-4dba-bce4-7e79f56081e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 828ba713-3a50-4b1e-9f49-45dd883fd2ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 b6f58c39-0d0b-4b81-b4cc-a0fc60f00c11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 1d793b31-1af1-4e94-b4c8-e6f20bb19c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 4b4cb2e0-a144-4eea-81b5-56137c1de3ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 498216cf-d7d4-4ced-aa27-bdd1ef166cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 6a6f71b5-4a7e-4196-864a-4b7baa00482e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h6C2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #788 5700d9b0-f0d4-43fe-a3c8-db92a26bae03)");
unit.assert_eq16(16'h5D5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #788 9ec4b697-b0a8-4a79-9a89-3a38ecf63ff1)");
unit.assert_eq16(16'h0DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #788 fe140fd9-85e9-4baa-887d-fb3136835ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 0f8490f2-9702-4bb4-a1b8-410125614c11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 8932d4ed-5cbc-400e-9892-c5fc3b0f71a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 db659eee-600e-4e6a-9ed8-0c65f11298e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 24c40725-6655-4f9d-8a21-53d6e1b602cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 b42d25b2-39ef-476a-885e-ba7c2cd0226d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 765c81a6-dba4-420b-a6a9-6d0348789d58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6ADE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7594;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h6ADE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #789 acf5dfc2-af38-4dde-be27-ea4009fc88d6)");
unit.assert_eq16(16'hA946, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #789 4264586c-15a0-448a-91c5-b4945a0b3cf5)");
unit.assert_eq16(16'h072B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #789 23b58d19-f026-4c67-b826-d6e88792d2c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 40506711-15e6-4d3e-8bcd-859801732b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 919370a5-c1d2-4512-a383-8955d6fcc012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 9c96687e-1fe2-4f7a-9acf-9f923d3c8c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 86251050-9fed-4573-93da-302a365c51b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 2c5d6409-357c-4e3a-a129-bf2c03799bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 15ed40c5-9e9b-4505-acbc-bde3b6ff1610)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h130F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA95D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h085C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h130F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #790 5b9b77b7-7efe-4231-bad3-24e708a3a0c7)");
unit.assert_eq16(16'h05C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #790 c9ad436b-dbf0-4cca-a7bc-2e7ec50c3856)");
unit.assert_eq16(16'h085E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #790 b68300a2-47d4-4627-b11d-2e5e03eee362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 7669499d-092f-48e1-b796-747c68f25b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 d8214c19-25ab-4f32-99dc-79677f2114e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 803e8122-eddf-40b1-b2fc-2e428d55c6a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 ce158e07-40df-4dcd-aba0-247f3c99f776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 8edd616b-9996-412c-bea3-9004bb58a6c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 10d93db8-1648-4578-babb-dab78052807b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h964E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4160;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h964E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #791 ed8c4531-02ae-4272-aa7d-56ec6ee866ed)");
unit.assert_eq16(16'h2504, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #791 2191be88-25fd-4aa6-a7fe-f5e6f8521df1)");
unit.assert_eq16(16'h0EA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #791 5a3354c2-b34b-4fb3-99db-456424f18189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 1af5bd54-2489-49f0-bcf2-83eba1f2531c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 5a467afe-b524-4f39-ae1c-722f17bdb694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 9a43f2d9-78bd-496a-b13d-2888dfaed416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 cec0c6cc-5e8a-401f-836b-4ba7105a977f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 323ce367-6d17-4b2f-bc72-ae5c64b90128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 b74f44d4-17ae-4565-aa6e-7de40ab9df8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC506;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC6A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0331;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'hC506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #792 fda45c93-5b35-4118-bf91-9f9701d0f789)");
unit.assert_eq16(16'hA076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #792 d71f24b5-e6ec-4adc-a102-514ca06dec5d)");
unit.assert_eq16(16'h0333, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #792 0c57d648-6b01-49f2-9809-08998f6a82f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 ff362662-bf3f-4742-90dd-b0382f4c6019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 711b6991-33d7-42fd-bcd3-56ba5d78b0e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 bca24cd5-3cb3-4067-8816-f4c39ee1e563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 87356094-1d0f-42a7-8e73-00ce742e3199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 004c30f1-9473-473f-8c75-f2ee96ac1432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 44a47231-b160-4a33-a4b2-db9897e933dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7CD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h11B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #793 82d97f44-eed9-4abe-bdb7-909c24e22cde)");
unit.assert_eq16(16'hF29D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #793 e99bb269-a088-44b8-94c1-2ff493ee05a2)");
unit.assert_eq16(16'h05CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #793 ca7477c2-8f3f-41c2-ae4a-005cbcd0d4cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 3fd51967-b1f0-4698-b061-4b013729bc03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 9d35d8c2-63a1-485c-8eab-45d902f8398c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 09c4fe68-2d17-4795-84b9-ed8fe94b6066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 1bae2c4f-6511-444b-afd6-6430e54e66be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 c9a6c2f0-b92c-4dec-b55d-a8322bf2e381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 3138de91-fa66-4f18-843a-816bdbe9d6bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0894;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h1C1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #794 aaddf0d7-7e64-47ed-a5a8-5e7cee067b5e)");
unit.assert_eq16(16'h0682, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #794 5228fac8-80f0-4b53-8c08-a5faba0df640)");
unit.assert_eq16(16'h0896, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #794 b453d65e-6668-4a87-8edc-f56c92d8ff80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 14992008-78d1-4dbc-b4fc-7c9e55bbff6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 774333a2-bd1e-485b-936d-1b47a8f9358a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 fa8108ae-ce68-4755-ab8f-e7b77e03fd0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 8d41d9cf-69b3-4dce-bccb-0a31ae57f7b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 6e55b96e-1069-4030-83d8-215a8b8bd46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 829b4bc4-145b-4ee4-be34-134c13ccb061)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0932;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h47D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'h0932, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #795 0aa0c0c9-0581-48c5-a41b-a549f4dfe9db)");
unit.assert_eq16(16'hA68D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #795 60d488f3-ff22-45e4-a838-9b604b4f9b92)");
unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #795 88a81d37-2e9a-4a12-af43-ad0af39d7551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 67ed95c6-5603-45b6-9821-9daf7a2276e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 a790a26a-e976-4435-8790-6f4180a9cea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 30994318-3c0e-40bf-a8c9-25ee427170e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 ffcbb0bd-c223-4dee-8c2c-5d34f2c00596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 e318a7f9-2095-49df-b8b4-d67561ae7c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 2307ec63-efad-4078-bedf-4b5716da8665)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h831D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB402;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'h831D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #796 9ee6376e-4b1b-4be1-b89a-2f643d616b9b)");
unit.assert_eq16(16'h6B0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #796 d76d7299-fd1e-43ad-a93b-8e48428efeee)");
unit.assert_eq16(16'h0D76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #796 c6557236-888f-47bc-ac1e-1c88eda0ac4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 d6ba151c-7395-4e56-8718-8bb34f80a35e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 e5c3375d-148c-4b6e-9954-ebd4d6692db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 a76ba161-1cdc-4fb8-a1a0-369cb4865256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 1d5759a2-fe60-4d03-8f8c-64d41f63531b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 7f518be9-8c4d-4ad3-b457-f4034680ecff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 0270190c-c356-4dca-be2d-d2a5b7d322aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF264;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h044F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'hAD00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #797 f216c17f-1a2a-4752-b849-fa4041776b30)");
unit.assert_eq16(16'h06B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #797 6a411ee3-e602-4061-9593-9a0cefe1fd50)");
unit.assert_eq16(16'h0451, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #797 03343be0-2f56-4da0-942f-eb0c08d166c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 717311cd-364c-44f2-abf4-0767b64dd2e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 176a79d2-283f-4686-8c53-cd0f34ba5fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 f31f057b-e74a-450f-8a7c-ff820b95f41b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 fb812b39-a54b-44c2-a67a-82599311923d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 77736246-acf5-492f-b9b1-22532ce81d82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 be0cbe74-2d07-47e2-a8bd-c9559204becf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'hED9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #798 c031b50e-ab69-4996-8486-07ca3866dda8)");
unit.assert_eq16(16'h7C20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #798 59bb704e-178f-44e6-88e1-6e1db484a415)");
unit.assert_eq16(16'h0FD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #798 2edc0eda-c9e1-44be-933f-0b548d0c8f48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 e5cf1b54-3113-4d2c-99e5-c6e7d65c240e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 d53487a3-9b3d-4977-926b-ac853738a0ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 17047408-e5ff-41bd-8e43-415fedaddd35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 cbf31126-23c2-4871-aa54-07f4a2b81286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 fa0a6fa3-e5a0-45aa-9773-4f1ecf20e668)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 3d179c90-a37e-453f-8079-1e2a0515f56c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4880;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF20C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h4880, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #799 3648b4b4-2aa4-4894-b3dd-9f7ec2fbbeaf)");
unit.assert_eq16(16'hFEAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #799 da0898bd-d2fb-4be0-9bd2-646e8bb05dde)");
unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #799 a39f34d7-21e1-4dc5-bcdb-46fee1579344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 e4b1b282-0618-483f-804d-f98d9643bcb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 1df75465-8963-42af-9bb1-99196ffe8cd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 1f7d3556-80fb-4ef2-b0ca-db196fd4589c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 320da329-64a7-4f83-aea9-2f17da842e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 65ed8290-c82d-40cf-8c5e-a3a2578c957c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 5cbe1263-fac8-43b7-a73f-e5091464de55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h048D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD70E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h089C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'h048D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #800 f57a62e5-3e10-4b60-a3dd-e929b7dd69e7)");
unit.assert_eq16(16'hADDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #800 5e233ae2-67a2-4f02-a4df-5b0c166299be)");
unit.assert_eq16(16'h089E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #800 b870a2f8-3203-41fe-81a5-55b814431e31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 963e4046-7796-44a7-922d-7fcbeaace4da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 3eded9de-fe83-4834-9bf3-7af671623952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 feaf4d5a-381f-49ec-aad1-75a79db587eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 a4bc6498-3bbc-425a-b709-07c332f1b135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 e446ddba-7aa4-43c0-81a2-18b97f13e070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 0da1576e-04bc-444e-8900-2b27e7a17142)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA2E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC7D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'hA2E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #801 6e47de08-012f-4deb-a8d7-486660378ba7)");
unit.assert_eq16(16'hAEC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #801 2728e49a-9628-4ec1-a856-e070766e1fd1)");
unit.assert_eq16(16'h0BF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #801 46423d50-0283-4a71-8861-9d29aea1f614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 21247765-d365-40a5-b096-1bbc686fd0eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 b626e506-bc7d-460b-b9b7-0dc079c7ef28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 dc18151c-654e-4e59-9089-0f31edb394f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 afb771a8-9029-478f-af34-8755fc511dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 e71f92be-6513-463b-a78b-e449a175d14e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 e950dbf5-6807-4f6b-958f-1e903a86a49a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5093;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAAF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h5093, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #802 ef9384d6-f45b-4de6-a1ef-0294f670dc09)");
unit.assert_eq16(16'h8C8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #802 fdea1601-5a4c-4492-a0e1-344b23134a3d)");
unit.assert_eq16(16'h0E59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #802 3674544e-563c-4334-9b71-631f935ee24a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 9587b63a-626c-4fb2-b6cb-97c5ab4c8208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 9db32bc1-cb16-4d99-b5ed-cd994f7c7000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 d58fdb96-88cb-4e35-a63e-f1332b2e3d6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 9e96ae5f-aab2-4c6f-b31b-7f501ff149a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 1cd2cda2-6b6e-434e-9c6f-8904eabec087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 f182835a-ed2a-436c-a10e-9a85f6ce0e5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h208F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h208F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #803 2647867a-92fd-407c-9bf5-68ab0249f436)");
unit.assert_eq16(16'h9B08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #803 7e197729-a23d-4773-a06b-d9991621b23f)");
unit.assert_eq16(16'h0F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #803 42cb29cc-bdb8-49cd-b9a2-0a22ae64c59a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 3a6e9b0d-60ea-40df-96aa-de6cc7f9d0bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 63b2bc64-4a48-4587-b391-18d924b89e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 636318b4-8f4d-429a-b63a-9b80112ede35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 25c03844-665d-4522-a3ba-f0775b90a082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 5343254d-b532-4c30-aaef-a7ec75103cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 d17a0705-4d2f-451b-91a9-c4925d9b548b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6BB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0067;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'h6BB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #804 8a80b072-a765-4636-b42e-62e66e859938)");
unit.assert_eq16(16'h3223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #804 e23c2609-f789-4fab-b0be-84a830cf49ee)");
unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #804 6943952e-e23a-4e21-9189-5fd49c429eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 1003824f-9ffa-4703-873b-ae9db006a9e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 fd276832-a6d2-4ee2-b57c-cbc3f210986c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 4fc2b787-d344-4b5c-91c3-7504a6d35d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 e268728c-299e-4814-a8ec-683a0af200fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 33c9f6b9-8867-4b62-b2da-3ddf08530205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 ca0d5e2a-850a-4f67-be84-afa1295bf8e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h7D29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #805 eae9170c-a154-4be5-bff1-d6a101b8c7ab)");
unit.assert_eq16(16'hC756, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #805 dafd0add-f73c-4140-9d13-2addf8102fd0)");
unit.assert_eq16(16'h09C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #805 3ce62693-3315-4c30-bce8-7100a16b6ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 afa30378-832d-4fd5-9939-74839ed8c0f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 b8168c8f-eb00-4b7d-a0f2-3c844a98431b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 f980a445-f7ce-4a13-946c-ee75629c8ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 39d3827a-3a72-466b-b3aa-66b01898ee68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 b6704a20-6c66-460e-9ffe-f221339d2d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 09449f30-2e01-4956-aadb-a837a3995bab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'hBAD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #806 6f8e0db7-a93f-488c-be27-ec185344f5fe)");
unit.assert_eq16(16'h7746, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #806 8e4df6bf-7f7b-4389-9b18-234952cbd56f)");
unit.assert_eq16(16'h0B06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #806 2beb7ea3-3470-4a3e-8ead-4182adacc9c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 bb78d7fd-215a-4b3d-bd1a-36e8c8e42bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 8bf34ed5-0aea-4ea2-938c-5609172f4eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 d063df47-6076-4301-a6c6-e083f28b9b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 79e73d81-9b19-4d16-9cdd-4d1140395a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 6d0f19eb-c96b-47c0-afca-6230b78bb535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 971ad41b-cf7e-4e7f-8204-585f349d5fb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB446;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'hB446, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #807 cfb85ad7-e0a7-4916-b66d-27390ff46c7d)");
unit.assert_eq16(16'h9D96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #807 46093b4b-fd99-4437-b1f3-cb4e6974f59b)");
unit.assert_eq16(16'h05CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #807 ed86b01d-92f4-40cb-ab52-2e1356480c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 0f9d511f-e78b-4af8-b1ab-bb4935b21d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 e45482f2-d874-4f50-bde7-b760e9292ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 45e0fb7a-96e1-447c-b770-1eeca5042d7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 5591d02c-79f4-4d95-aaac-a5ced77fde0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 da1c76de-1f28-49ae-b4ee-3276fa0320d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 cc912664-8ca3-4e65-91ab-3088edc3787f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0477;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'hBE0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #808 f2fd3204-2b73-4c9d-a31a-6e9d8d7621e9)");
unit.assert_eq16(16'h9FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #808 1a134df3-e91f-402d-9cf1-e138648d464f)");
unit.assert_eq16(16'h0479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #808 799d1f69-7381-4629-aa1c-2166c20034c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 1c8d2f03-e208-4f28-901b-506845eacc7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 b58aac90-5e9b-4482-8a7a-891eb5781690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 b35cf237-b9a6-4726-bad1-86875f392ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 87b4e673-79b3-49fa-ab2a-27de47f6e49b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 e8d48ddf-9b4f-41ac-9d76-b617bf91142b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 2f701ee0-f96d-4730-b909-d48f9a7ff4c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8972;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h8972, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #809 8c5f9ca0-45ea-406b-89e9-187ea96eed6f)");
unit.assert_eq16(16'hB35A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #809 2bdc2f32-32dc-451e-b78c-8db31d405513)");
unit.assert_eq16(16'h0AC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #809 0e35d664-b04d-48f7-99d5-4e568a91a17a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 e6591c55-0dca-4070-a4f7-fe0630a765ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 c2f1a968-ca15-496d-8a22-2c4db73a5098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 4620abc7-4e91-45bf-be1f-d92a4a264dcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 df5de2f9-a022-429c-81ae-f754d0f7a3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 10b66532-87cb-42c4-99ee-e1cd99853f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 5dd1a215-2379-440b-949c-317fc12cdd84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h424E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h424E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #810 e62cd947-c312-4e28-8dbe-47c3da025555)");
unit.assert_eq16(16'hAA11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #810 f595807b-4fb6-4504-a06b-b0e103a8c04f)");
unit.assert_eq16(16'h0A87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #810 804dd42d-1ca5-4b56-ad4e-4617cc33a36a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 edcda902-6219-49f9-bda2-19a12c173141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 d468b804-594d-4565-a3d4-5a77e0f0e10c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 5c154094-5a88-40e7-b660-f2eecaee53db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 660e5a64-75a4-4647-9a7d-45e83582c0ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 ad22dd32-4fba-413e-803c-e075ead84da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 de2beb41-885e-46d1-8c18-5b7c64721027)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6CA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h6CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #811 785b3017-2ccb-48a5-8e3c-0f1d592e05a9)");
unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #811 cdb3f6de-76f4-4859-8e5c-71f537a61168)");
unit.assert_eq16(16'h0E21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #811 8254b5b2-890b-465a-9aab-e1ab7695c564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 921af90b-d4d1-40ab-ae0b-39ca5ed74e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 b357e2cb-f0b2-4b9f-929a-31825d8a01ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 ef607755-73cc-43c9-8c4b-88b3234c7e72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 6808db28-ee8c-40a7-858c-f40582a0a1b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 ebee284c-669a-498e-b9c9-c510cd0cece4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 3e6f0ef9-2d80-49d6-9ee3-75bd23dd8a41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6281;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h336F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h6281, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #812 37869e80-d256-4027-9bae-2f28c50334b5)");
unit.assert_eq16(16'h3C92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #812 e7e266cc-85cc-4304-9bf6-8e9e421818e3)");
unit.assert_eq16(16'h090D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #812 8859fbf2-0679-416c-b8c8-c36981a3e9a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 38ec6b75-bff5-4e1e-8d5a-74a9243af967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 37b155ec-645f-4bb7-a66d-6900043a095b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 66aacff1-b03c-4810-9efe-2a2d9bf74231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 0032d174-b910-4d48-b1fa-60ecca40f4d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 1cbc203c-4f2b-4748-ad71-4063ded75f44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 9e56c4b1-97ca-41aa-9272-f015a35e6898)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h276D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h276D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #813 db2bd45c-f6f3-48ee-85a0-ac077519266a)");
unit.assert_eq16(16'h1B80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #813 6876c1c9-5f1f-45c3-bd64-17828b2ed96d)");
unit.assert_eq16(16'h0F2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #813 35967ff0-c87e-4859-8587-ffcab7ed534b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 05ca44db-2ac0-4b35-807e-e5794910c882)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 2c792223-a2b7-4295-9b07-f12af58205d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 355eabdc-a6ce-49e1-b74b-56941e5b0a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 0d17cf2e-c147-45cb-bde4-1842113ae090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 075f9f94-2d1c-476f-988c-418de3abe8ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 95d7a3f0-29f5-49ba-a2d4-a3e27d77b203)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h80FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #814 dc81bb6f-ade4-4fde-9b49-4fcd7a3fc6c4)");
unit.assert_eq16(16'h4911, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #814 ce08f323-ebcf-4924-a1f8-5841cb3ab0fc)");
unit.assert_eq16(16'h08C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #814 028783ea-3081-41ca-9b92-0de493da2050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 34786569-0f14-4e9a-92ca-29a9e1b619bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 3314392e-58af-49fb-80b8-d0d9abe63fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 7e29d40c-6ab8-4330-8a60-4f45dad810bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 d0a27e50-e033-4819-9b3d-37e44b4ec0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 08c47291-5f71-4551-a824-35cbef2543b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 704ee164-c653-4e5b-b707-95743563ca34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE5EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'hE5EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #815 4f209ee7-cfb6-43bf-b640-d2a21ab8c4f3)");
unit.assert_eq16(16'h5172, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #815 7eea848c-817c-40ef-aff6-7fe5738fc2a5)");
unit.assert_eq16(16'h061C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #815 40e2dcaf-cba5-45bc-adeb-e7e00dbbf48f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 aad62f7c-5b94-46ac-9d6d-edfac0f8023c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 a18c74b4-baf1-42e2-a72f-0871e7956d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 12d60c01-b6c5-465f-a4da-3468d41ef279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 d087075c-6a84-4227-83bf-5bcff3fae133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 af85ad73-4540-4746-8aab-b2a9c18fb909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 095f48d3-37f3-4af4-b788-d6129a2b84fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h7BCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #816 9b745ad4-8b3f-435b-83c5-a85e9a019a6d)");
unit.assert_eq16(16'h1761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #816 7f79cd1b-0a1c-4c45-b7f7-e241db1c718c)");
unit.assert_eq16(16'h099D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #816 298717c2-b40d-4680-8253-50ec48a55dc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 b234a301-904f-47a9-a6c4-9ffec1d254b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 ffda6109-65d8-40da-87c3-f8571fc79524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 2e0f1cb9-0a3d-44a8-9597-acf6a392062d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 abfb16ae-d031-4d1c-a2b6-8691df556cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 af328642-3426-4d5f-8d06-9483ab94f290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 9419b8d3-36ae-4e69-ae45-0fe0cd8d11bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFCF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0006;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'hFCF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #817 1cf2f4a1-f517-4672-b70c-f55eb4ccb8a9)");
unit.assert_eq16(16'hEA84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #817 9b6f5919-b231-48b7-a150-7a3b7e03a52e)");
unit.assert_eq16(16'h0008, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #817 dde92815-2c89-4539-b8ee-288f8a28c9ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 5e00c79c-f504-4a92-b542-064968c46a08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 b3322675-98cf-4221-a487-d39be8568525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 de43e72e-73fa-4604-a98f-078ce4146d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 7465386b-164d-4281-972e-06c468dfab32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 ad2714f8-1543-4efe-8f09-20dbf8537ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 f10c8677-330a-4543-8c26-b1ca6fc611d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h805A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0249;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h7DE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #818 1dfb00b9-75e2-449e-bee8-074d00a05e3f)");
unit.assert_eq16(16'h3F42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #818 2900519d-c953-4eef-be11-23a6b604bc47)");
unit.assert_eq16(16'h024B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #818 0ff022f7-b821-432a-9624-94ca7af580b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 c9bae588-5791-44d3-a6a6-8ea002f16859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 58ea8040-6e39-4394-a03d-96cf2e74cf87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 8606e94b-6dce-4257-9a58-4dbe39b123f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 4ea41bc4-8206-444c-88fb-54043fac4aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 0894844e-a964-469f-964f-d2ef0e36146f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 322ea3af-79b6-4c79-8757-ea40b1c37342)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h25D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #819 e18c2902-0dd8-43db-96dc-efbe55d5a066)");
unit.assert_eq16(16'hBA78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #819 5fd95a3c-8f68-47d5-bb0d-0f1849d0e040)");
unit.assert_eq16(16'h0160, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #819 1f9f694a-11eb-4b19-8c5a-6375dee06d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 4b82b5ab-44cc-4ad9-a86e-78e3455a8b78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 1f720a27-5e4c-47eb-8a6c-6a08d64cc707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 efc1d703-fd86-4063-bbe7-71c13899a2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 bf09393f-8189-4aa5-9b43-347db55095f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 c13cc724-9886-4f4c-9861-f945f606b91d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 853a1938-72d2-42c3-a8e4-73c5c11e1905)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h3BA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #820 5f9a8860-6e3e-4360-abd9-de3f8715d760)");
unit.assert_eq16(16'hD899, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #820 78115172-423b-4f90-a500-92c5e4d5ae51)");
unit.assert_eq16(16'h052B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #820 17af38d6-05c1-4ef0-9199-e4f5bc77bb58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 445a6ce9-6467-4205-ad76-49aa70ff5c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 71306d76-fccc-431a-aeb1-e00b0b49d899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 84a86b2a-a116-4172-a017-944212b7e2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 142ef161-f57e-4d8c-bf4c-e6cdf90aa29e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 60063940-3411-46ca-a52b-23aaee2ed789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 18061f2e-252f-4ce7-a87a-d3d92e77983a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3155;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB20C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0113;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h3155, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #821 fad7e1a7-f25b-452c-89c6-df2a60e5f2fc)");
unit.assert_eq16(16'hC860, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #821 f2e7d8a1-af54-40fe-9794-3611a890ca75)");
unit.assert_eq16(16'h0115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #821 88154720-f7e9-45ec-9c34-d8df13d9bbe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 4f9363a8-d6a0-4a49-83dd-fc8d900b4e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 6c849ba8-c3df-42e6-ade8-9e882e09cef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 6916c890-1a70-49c8-8894-f08c95f76a3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 3aeb4911-28a7-4163-90bc-e75c4d110ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 7f5beac9-b6f7-41db-987e-7af53f15eccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 de165b9a-249a-4f42-9ff3-e23e905cf132)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0345;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h0345, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #822 0cf60c01-920b-4db4-8a1a-4ddf6b32744f)");
unit.assert_eq16(16'hCEE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #822 c84dfc17-7b31-4ef1-adc1-223cc7968aa4)");
unit.assert_eq16(16'h0100, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #822 ed3035d7-a97d-41f7-bc1c-f171303756d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 1c5330af-4891-48bf-ae92-b776eca9d84e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 96b94b19-d895-4bb4-9acd-95c129f6d083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 e8dad544-272c-49ad-96bc-ad3012bd9294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 e09863d2-75f6-4917-a976-6c1679ab973c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 a7539c9f-a13f-4862-9c29-8d3f63cb965f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 a6deb4f8-f735-446b-908c-e20e0616c12e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1EA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h1EA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #823 43bcdf82-03a6-478d-b91a-a98097a39131)");
unit.assert_eq16(16'hF7E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #823 22c3a82e-37b9-47cb-b693-8c686c476a0f)");
unit.assert_eq16(16'h0DC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #823 05d08a7a-2274-4e07-a114-3ece1ad68618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 9e5bb63f-e2e0-48ee-a0d7-306f48ffbed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 0b45cf3a-734c-4f87-af38-d76891252484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 c41baef7-929e-4ed2-870b-a91ed1565acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 db07cc4c-706f-47e8-9da0-d32d5e908464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 b4a4c1d4-69ce-4c42-b7c0-e9e373aec1f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 342c2517-b32b-45d4-ac2a-182ee1b6d7d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA6EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3013;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'hA6EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #824 12350b87-15e4-4bdb-8a2e-d4b77edb86ba)");
unit.assert_eq16(16'h6F14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #824 2ffb426b-4253-4e07-bede-5004034db0a5)");
unit.assert_eq16(16'h0BF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #824 211af6e3-274e-4155-b31a-46ca73fe7967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 813fc9a2-01ba-455a-98bc-e80b821a8d4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 7a0922d5-0e77-4bcb-8b97-e2327eae964a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 f63384f4-1065-49dd-a02f-cc3dc9bc9017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 2853f1ad-fd0d-4393-b24d-6a28e97d0a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 77279225-5073-4e25-ba68-03b034f63268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 27bdc543-429d-4d3f-9633-dc4b88e2dc8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h742C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD49C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h742C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #825 ee8f1426-dacc-44c0-b325-88196a5f4c92)");
unit.assert_eq16(16'hD309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #825 4e358881-ded8-4fed-bf06-d5652cca099b)");
unit.assert_eq16(16'h0DE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #825 e9dccc32-7ad7-4ebe-8aaa-3a70a2239d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 79f78d35-fbb2-4f46-807c-7f11fa40ae03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 f9538a83-5bbe-42c1-af44-09e3e793fa7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 2bdf21a9-b830-4be1-bc59-ae93b13572a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 f4da0c26-4898-4551-98cc-e4e20ba1e250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 04cfeac8-d910-4cac-b3c2-3111987dcef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 eb11a340-c354-434c-a501-6f4c6deda9ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5ED3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8347;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h5ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #826 7a9713fb-8b70-4dc2-90f2-8636e0ae5bfb)");
unit.assert_eq16(16'h021A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #826 891b0361-02d1-46e9-acbc-26d4c2a1bc13)");
unit.assert_eq16(16'h01B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #826 a84ba79c-e9aa-486d-9414-c88cfe968e27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 47f2f3e1-53bf-447b-b7ed-ad9d95898ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 d1ce323a-39e8-4ab1-b949-78ba51178ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 c641422c-0604-49f4-a47b-bf7f31caaf5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 0d44132f-9919-4d31-a2bd-8619682420ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 9310feef-8b95-4e57-98ed-fec83f71435e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 75d4aff7-c23f-42a2-8827-b6d1e2f78b2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h245C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'h245C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #827 c1190ac6-48cf-466b-a2a3-709d1cf8fad0)");
unit.assert_eq16(16'hF9C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #827 01d37210-0643-45cc-808c-28d7bba7a59c)");
unit.assert_eq16(16'h0D01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #827 1f77ad8b-caaa-4201-a770-64154caa067e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 8229a12e-d46f-4810-92d4-432e1b3f30b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 89f59102-4567-489e-a90d-fec533b5d347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 5ef817fb-7d7a-4b0c-a1e6-eadfd688f28f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 ec3954af-85ae-4238-9a80-0e12bd5ea64a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 fa3e655a-f485-4482-9165-429376f0d6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 cf808d6d-f086-4744-a243-d20914b750ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h088A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h26B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #828 ba162a0b-b665-4ecd-b0c3-f2d48d587711)");
unit.assert_eq16(16'h6677, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #828 249d0aab-91d9-4e24-8e82-8bd942b9cd91)");
unit.assert_eq16(16'h088C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #828 02f9d0df-7f25-42b5-83c1-c019eb9255c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 9a45ffd6-3773-411e-a213-d25d7e910265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 1ae6c70f-c2a7-48e3-825e-1f40341c36dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 a147233c-41c1-4ff4-85b3-3abf00c645bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 40f98343-46ca-4d0e-9f49-9462d2a0895b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 41357ac5-036c-4b5c-afa1-212fd7b07a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 ddb0471b-5a88-4a85-a808-ab7dddffccdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC562;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h00C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #829 6fe90248-38ea-4418-8dea-6dcb9d726087)");
unit.assert_eq16(16'h258D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #829 87279cb0-da83-48a2-9aaa-c2625f6f8ce5)");
unit.assert_eq16(16'h0A27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #829 c3d55f4c-07ad-4312-90ce-6f8ec6fd89bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 fd3b8c66-f378-449b-9f2f-ca439bba6efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 c93bde11-0908-4a35-8db6-b3480630b2af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 7a24a22e-2116-4279-80a6-ba0c411bf3b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 f8c34224-f6d0-4f2c-9c7e-e43502ab85a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 8d977c56-ba21-44b0-9271-0890d61d1478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 d093fea2-fe82-449d-b802-b41b34d8b626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDB92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h095C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h0D33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #830 91fa0692-9fa6-4e3b-a045-07644dce9e3c)");
unit.assert_eq16(16'hEEC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #830 0c4a0f5b-0a2a-442f-83c3-524290a7ad73)");
unit.assert_eq16(16'h095E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #830 f3414aef-e90e-45d0-9294-89f8723eb877)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 12cb4048-0c11-41ee-b98f-5e5a5606ad73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 d75c93ef-a706-4f0a-8d09-3bc1b6196cb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 98a6dc40-fbd6-4f51-8f2a-3d57e4ea697f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 fa0a6078-b90e-420b-b2da-3c8ef1e0737d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 696aab01-e86a-424b-adc0-012bbd8ce149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 04cce83e-15d9-48f5-a994-20d70c7f0975)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h0EB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #831 a5d56e41-bfc9-4b03-91cf-7bc80580e0ee)");
unit.assert_eq16(16'h58E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #831 ea529ede-5762-4e6a-ad94-df0d061816f6)");
unit.assert_eq16(16'h062C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #831 f86d34cd-0ab5-4dc0-910d-27608a5f4ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 56eb9b51-adfa-42a6-9d99-0e1245fee151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 3d4b88ce-cfcc-477f-b87e-0a6c67a1927f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 532042e8-245e-4d93-9784-332af4f94e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 226fc550-71a1-42fa-8d8d-c4d7a642ecc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 e04b9c13-5924-43d2-a999-af0113f1d67b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 80c7cbe6-f032-46b7-a7ee-0d1d5de0aba2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE083;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0410;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'h00B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #832 ed4175a4-21db-4c45-bc0b-09b927f07d49)");
unit.assert_eq16(16'h3FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #832 36f9c333-f636-4e57-8332-73c76eb02392)");
unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #832 cf6e6a95-f99e-4ff3-8b46-aa5d6b5cec73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 d485f395-9c64-422a-ba96-5fdde2cf358b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 17af2e41-f34e-4529-8aa0-f332fd521ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 d018bc06-5b59-4b20-8c9d-5ea98c3b2a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 2c635656-e938-411a-8033-cd6ab3695f33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 bcd1a61d-9699-45ec-bb87-b40e0c7c6e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 7cb8d9f0-fef5-4d63-add2-19375b6ccaa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'hED5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #833 49f87f60-c8a9-4848-a148-ca36e1e42602)");
unit.assert_eq16(16'h7E22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #833 8c7afaae-da5f-4913-873d-148b25d03b00)");
unit.assert_eq16(16'h09B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #833 d3070bc7-e777-481d-a7f5-d9da45dad8b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 ce0cf1d0-b158-49df-a081-d7ef8616a841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 9275851b-0655-4b9c-8c25-71eaf983a0cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 ce91a69f-3446-4723-8144-89ba3c550477)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 94efeb88-f979-43ef-904e-4f7dce446b0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 c0a8b141-4d12-4d64-bef0-9d1c1aecd0f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 ba32cd2e-71b2-4852-a768-4c3dfb736f4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0680;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h11E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #834 28c5b6bd-73e7-4e02-9295-9a3fea00c486)");
unit.assert_eq16(16'h4B08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #834 2b43c07f-a4f1-4f6d-aaff-ba6bb1435060)");
unit.assert_eq16(16'h0682, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #834 ba406e67-e5fc-423a-b67c-de671c27e734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 db8bfc53-59f9-4e42-8c6f-2b1b69d03646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 74afec6b-18ea-4422-9d8a-dcb2db95f1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 756b752b-bce4-4f8b-8a1a-f8c5a7c5c346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 9ad09359-cb4a-4867-b46a-e3abbca99bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 451e27d3-cdb8-487a-acf0-577a41e0786f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 e51ed982-8250-4794-8d34-d4e8b685ba78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h65EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8388;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h65EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #835 c7461ce1-9d72-4ac2-9d8d-b1bd50131679)");
unit.assert_eq16(16'hAEC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #835 2624d08b-51c1-4e0d-a768-f9bbea1df9c3)");
unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #835 788cb8a0-8096-4ea9-9dfb-8232fdba727d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 2febda80-a376-441a-b00b-ee55d1d794a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 82ff2fb9-0850-44ba-a512-cb157e6d0623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 90759ac1-6142-4bab-a4ea-023cf051dfd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 7a1efdd5-4981-4243-b2f7-5f866fb6106d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 cc5886e5-199f-44e1-bd16-07848ce6e179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 f2540852-f9d3-4354-b7ab-0ca674ee09dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h55BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h55BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #836 e99f901f-13e4-4ebb-b440-6ccc2d767511)");
unit.assert_eq16(16'h467F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #836 4380e199-5f12-4d66-a683-8c9a3706f508)");
unit.assert_eq16(16'h07D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #836 c15a4122-88d8-47fe-a3fb-c85c1c3d9664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 b2335e62-7710-4d6a-8898-2236b864fcea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 acfc48d4-8528-4773-8f2e-4552f30e6a52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 3486c0aa-b778-49ae-9ade-9e0aa7fb554c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 3885073e-ca09-4e41-afcf-684f1599470e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 68fbf21b-2b31-48e1-9caa-b141a31c029a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 83bba71b-48d5-4db4-8ebe-5ff95ecb28e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF32A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h78BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #837 4d273100-4579-4e5f-8043-d9d7dd811833)");
unit.assert_eq16(16'h2D56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #837 caea31e1-3b29-4e6d-8997-ede9378fd609)");
unit.assert_eq16(16'h06E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #837 ec574600-fd5d-4bf7-acd9-0f0f24f1e53f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 d1f8c538-f647-4896-9b1a-72004ace2928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 a24bd8f4-1bc9-416a-a371-c97cde6700c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 c115d762-02b3-424c-8a3b-826efa184370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 f469a0fe-9b51-4b2f-b8b5-2569375c88c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 8d1de305-b422-4bb9-a670-c25a63e9b96b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 876f0136-2fe9-45c7-aa2d-594b30bf618e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'hC8BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #838 465297eb-b815-4d37-972c-4e538450d025)");
unit.assert_eq16(16'h5729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #838 392df622-f199-48b0-8633-eaa35eded186)");
unit.assert_eq16(16'h0BAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #838 7674d41c-db36-4541-9aa5-5065f8fd86fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 2409bf8e-bb3e-458c-906b-8a95bd27a8f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 b3dfb4c4-f012-4d07-9659-7191072e0c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 49810ec3-a589-4ceb-9d22-5215c4fd7dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 e3893373-d96d-47ec-9a99-8384ba27ee37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 02759fac-74f7-4e25-87c9-28d8498f9f4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 ac0638b7-9a49-42c2-8f5b-aa9d0c14acb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h581A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h5A8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #839 d79d428e-c717-4ebe-a95e-5cd4bd52f0d8)");
unit.assert_eq16(16'h2995, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #839 f390a4dc-8b03-4939-835b-06d90732470c)");
unit.assert_eq16(16'h02A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #839 bc3b224d-896a-442f-b888-5fecfcfc5fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 405b5e10-e79f-44f3-806c-7a7d9368beee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 483269a1-c7b1-4e85-a599-782932c13f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 421a9241-7b5d-47ca-a503-402078a7f331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 ed0e2b19-50d6-4d03-befe-cbedca92440f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 291a3dbd-d6fb-49f0-af0e-02a6a00aef08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 d6b831c1-d757-4cde-af26-b972adfa3bf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2630;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'hDDED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #840 94e50e46-60af-49f8-a429-b70ecac655d8)");
unit.assert_eq16(16'h4060, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #840 efa934dd-1c22-4934-bff5-fa1176f585f1)");
unit.assert_eq16(16'h0CCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #840 735ea577-9ae7-4a3d-9daf-64669d132524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 4c3ee45c-6d4a-45b3-9cd2-a306eeb5c3d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 87b5c6aa-a96b-4ebd-8125-8c67fb13913f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 ca4095a9-45cf-4a23-95e4-1afb42281af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 26a85d89-2041-41f1-a69a-fa89f2fb7f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 5f464b69-4553-42cb-82fd-195a61f97e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 0a0fa476-34a5-4933-bd9c-d85d99c9652b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'h2F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #841 8d53e42f-8c23-4741-9146-050900c05e24)");
unit.assert_eq16(16'h44D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #841 397e4ed8-869c-48e2-b34c-5ca1169d9608)");
unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #841 3c3eb26c-dc92-41f2-897f-5c9df7190949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 a6c8d695-4c52-4a18-87c3-a67c55401632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 e6e3764c-d7f6-475e-8619-22c3084b8cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 04838def-3af6-4530-8c63-ce144ed21849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 5195679c-6873-41ca-b0e6-8a576dfd4387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 da46a034-f5d1-4bbf-8288-67a6298ec524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 7ae5d178-1b39-4adf-a68d-ca29c972c7b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h688F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h688F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #842 a7993375-e56d-46e3-82f5-8c7f9c773fff)");
unit.assert_eq16(16'hC89A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #842 917ca6d0-35c4-43f8-a538-8015d8dddccb)");
unit.assert_eq16(16'h05E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #842 327b496e-0514-4f30-a9cf-e744fc991fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 c7cfd088-d039-400b-b12e-4b8a8b0485d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 a6e45c88-84fd-43de-8874-56a6f521abe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 bc721a50-cdf4-4fe1-8726-7746fb9dfa67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 c9c35ed0-e8bd-41ee-9b4d-72ded0cc9235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 662f21f8-32ae-4de6-9d35-c2346b7d4347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 d3dad31d-192c-47cd-9afb-24ca5b2f4c18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7330;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h7330, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #843 df9b40a2-e378-4eee-816a-e6875794d029)");
unit.assert_eq16(16'h6A7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #843 4141b6c0-9ac8-4682-924b-18774b47e895)");
unit.assert_eq16(16'h0BE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #843 bc61e6ed-7d0c-4d45-919d-9ef44aadfdc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 0fdcf75a-a451-4d4e-9c83-86847b946e3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 f71e170b-2f36-4bf4-969c-2298b314b00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 8e31320a-51f7-4946-a521-8ec8c4f6cc89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 6da005b9-d0c0-41a2-8ade-8d35cc15d4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 9f11b699-635e-45fc-9ce5-34e321d55c39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 25f734b8-68d0-4293-ba3a-e56f89608f2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0750;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'hD5FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #844 e58fdb0f-7772-4f2a-8b79-2114d2b96d19)");
unit.assert_eq16(16'h46AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #844 e5c1e58f-b173-4261-a08d-bf110238b433)");
unit.assert_eq16(16'h0752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #844 e9198ce1-9a51-4ad7-a89c-1ef90a571f3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 d9261d41-5da0-4ff2-83d8-9304dae218b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 5ff0a186-cb77-4da4-8700-3db11cd648a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 7e3a64a0-28a6-4b52-9354-e50d701e9d10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 0710a0cc-f1b3-4a7f-a85b-2f87f1a01d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 f6d16540-141b-4387-8ae3-18c9968b85b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 1fad4731-7e7d-4f1e-9d74-18b71c7cd6c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3621;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'hDE33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #845 37bb82ed-3a32-4509-aeb0-9aaf2996c7e1)");
unit.assert_eq16(16'hC919, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #845 a1bcef32-3713-4126-9471-60361b6ddfd8)");
unit.assert_eq16(16'h006F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #845 104c2b2a-1ce9-44c0-bf3b-2d2c630f0738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 d9692826-46f8-427f-87bb-b97a1c41aedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 39555309-aa8b-4fa3-8b59-bc5a193a9395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 9332c0f1-9b5c-40c8-b98e-eb54a61382b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 3da2e239-6a4f-43c2-a98c-8ea86d354703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 12ddaf7f-a332-45a3-bf5e-35a645aeabe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 43013dcf-98d2-4f0a-bc74-177cf7c4e98e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7405;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1BFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h7405, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #846 4184e279-e1ad-47d3-9135-7d6f3e57f4b6)");
unit.assert_eq16(16'h517F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #846 e48397fb-fb88-4873-b00e-2c04ed9923b3)");
unit.assert_eq16(16'h00F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #846 b1aa9bb1-b837-4aac-891a-86171fe4837f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 11e7fa44-e588-4928-bc5a-f2c0a8f1bdf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 6bb39813-16c7-4151-93bd-d38cca543277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 de53b8de-9911-4987-b143-ad7496f8625d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 4968fb7c-acd7-4fbe-9619-0af9a066f043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 2270a68b-ddd4-423d-88a8-3af7e3ac4ce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 7ae6780e-54b0-4647-b79a-1c18fe1be9f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBDE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'hBDE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #847 652cd2fa-d030-499d-98d9-aa5260653df7)");
unit.assert_eq16(16'h87E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #847 c1bb872b-ccb6-499e-b1ac-3668dff0c847)");
unit.assert_eq16(16'h021E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #847 64d96aa6-78ab-4043-adef-848faadca29b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 ad643c90-0b8e-4d5b-bd43-f65c7a902955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 21775bec-efa7-4f66-a0dd-c46b08801de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 785512d5-8514-4ebf-afb5-8c1b05161128)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 163f7bbc-1819-4469-94cb-6c42b112dfaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 22a55b02-9ca6-41be-be02-db05fe4c6884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 7e68aaa3-88fd-4d98-bc90-7d3da57384ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD547;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h1A63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #848 2bb03132-87ff-4faa-89b0-2df41e7c39d5)");
unit.assert_eq16(16'h9F4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #848 46530462-f93b-4430-92f3-65ea19845fd1)");
unit.assert_eq16(16'h0D96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #848 0da8ec7a-181c-404d-964e-17fe5e1102d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 ad5a010c-526f-4a85-aca8-b170089f8f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 52251dba-1448-459f-be53-d659c7891265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 59a4bbc0-024a-4b8e-8121-567988657866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 a5b06929-8f20-49fb-a377-d15daab66ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 760aea71-baf2-4c25-a8e8-73c731e01f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 7563f5fe-5394-4f7e-8af5-e585019178fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0224;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h5AD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #849 d8f33a0f-b8b1-4fe1-b52c-be66c4491448)");
unit.assert_eq16(16'hA2B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #849 fb19efff-6a82-456e-8144-d3e2e23354ca)");
unit.assert_eq16(16'h0226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #849 073ecef7-5bbc-49df-9185-966e21a94a8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 6917f69f-1274-47f0-9b85-4e864e1f62c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 ec825fc4-273f-4338-8839-1ca8937f4dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 b67c24d9-5fba-496a-bfef-ed3a9c04064e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 c3231f21-abeb-4c17-8dee-422ad10e8085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 f2ae8a33-0bc6-4bcb-9653-795bc3e519a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 0145a803-91c1-4777-85fe-be73faa5ed39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC445;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1BFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'hC445, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #850 d8fea0ce-8778-4825-9af4-b3cc578e522b)");
unit.assert_eq16(16'h0ADB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #850 16600d2c-ad11-4034-9c3a-38aa6c324e38)");
unit.assert_eq16(16'h0EE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #850 a251be14-a604-4e0a-ba0c-08596cf4b4bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 0b814035-a5f7-481e-96b5-f4ea09e87e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 e2256b2f-c10d-44ad-93e7-55f221268404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 8aec3f67-b70b-47a8-b97e-7ec891390ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 dff5e586-f35a-4134-9326-5567ff495495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 3001e7ac-6fad-4fb9-8feb-3ddcd383dbe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 d2950e87-bc7a-4f82-893c-362912d87191)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0916;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h3D25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #851 f4f86cf5-11df-45e2-a646-e901d72a9dca)");
unit.assert_eq16(16'hDB08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #851 0f8ee929-1007-4bdc-8e8c-70d437a96208)");
unit.assert_eq16(16'h0918, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #851 8f0f434c-2f2f-42bb-adee-b817390ae769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 e6b1354e-063a-4899-b3a0-230587cf9661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 0bf1529e-551d-4329-9c3d-3ce4faeaa30f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 3f5ea3d0-5ee5-424c-a678-f10e3865f264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 fef05df4-8361-4ae8-8d91-48085ceb2266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 a188e7dc-07a0-410b-9240-ef60993c5bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 b880bb5d-d334-4968-a0c6-f5b62469ad85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB43E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'hB43E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #852 6a7b029e-be72-4934-99a1-e9edd9b40ac6)");
unit.assert_eq16(16'h380C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #852 1e5609d7-93ac-4d3c-b8fb-b653fa075021)");
unit.assert_eq16(16'h0E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #852 52155fb2-4839-4cce-82ea-4baf2fe78a5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 92b5d7f9-bff9-415c-9c53-92ae2d82f51b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 302785ac-f2ba-4bfb-ae3d-2445ff43424e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 4720a53c-e5e3-4bcc-83c9-6088903f53ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 ef5bb2b5-792c-460f-9985-46dc680e9092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 f994d3dd-726f-436d-8bb9-e2d186662fea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 37d1af6c-9629-4d35-bc1a-cfdc84249c3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9388;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h0B3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #853 006abcf6-6afd-4108-bca5-eaf17750878e)");
unit.assert_eq16(16'h1174, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #853 9cfeadac-ef75-4281-a0c4-2dc54ce73a39)");
unit.assert_eq16(16'h08C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #853 02de0b3d-794c-40e2-bf25-1c4139bdcf5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 d3a2f9d4-77e8-41ca-9931-46d642a1b910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 33f52b97-8f54-4432-95b3-d2a96cea3007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 1c1b8d18-b3f6-4a28-8c9a-96fe8a8dfdcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 13b09421-9f7e-4d7b-a9fc-f7cf6f470bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 fb3b22b3-d28b-4e31-8106-1ec9dfa8cbdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 ce351fa1-6b25-4ebe-8b0d-b9af5f302bac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h1DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #854 7aea6aec-6d1c-4ee0-81ce-7119807b827c)");
unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #854 58b16c30-e388-41f2-ad1d-c30bd76375a1)");
unit.assert_eq16(16'h0EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #854 78147589-72c5-4231-8fe2-1ff73afe39bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 0e405795-44fe-46a3-9137-afe9931901c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 24b3803d-4afa-42a7-89ab-66a3a7a80f3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 1bf76baf-bf46-48da-97bb-13fbeb3b60a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 4ca264de-fc8d-4688-b854-8de29e9425af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 53e0beed-7f56-4634-921e-8ce24a5a7394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 f4e6b474-9f87-4f1f-bc02-97c94172ddc6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h09B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #855 23807e0c-3c4c-4dd5-ae85-7ecf46e0245b)");
unit.assert_eq16(16'h37E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #855 8aaadc72-f20c-4b58-b555-e36e7755120d)");
unit.assert_eq16(16'h0B95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #855 2b15c215-6438-4e3a-aace-1cb5c64ec889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 3e0c3e3c-19b1-4428-bab5-f987e6aa8aa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 16389c20-d0e0-47d2-b6e4-b2ccc849e622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 de3d3efa-3abc-42ee-be75-441e08d05da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 fb906c8c-b85c-446e-a4e9-0440b841d5ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 0968478a-6bd4-4152-89ae-31438d31eb8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 f061c9f0-8133-409b-aad5-d250e8aad759)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE175;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h14BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #856 b256d25c-0423-4279-b6e8-502acf67a560)");
unit.assert_eq16(16'h47B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #856 820a1539-1249-4f2f-8f43-93c18cbb3ba4)");
unit.assert_eq16(16'h0735, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #856 2d36843e-86c1-4907-9102-3f3949416c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 b1897e81-fbff-462f-b919-b6b329662640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 89a31917-cdd4-4061-b9be-2f11f0e8ecab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 60d47637-3ad2-430e-aec1-ebd4310f5a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 dfb3953d-60af-40a1-9520-ae4c3e897a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 7cc57d49-812b-42b0-8408-79c4c4e648ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 79b0382b-78c5-4e72-b8f6-ad2a41c3b6ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h149F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h346C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h149F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #857 af3c63b6-4ff9-46f5-996e-d69c661684ca)");
unit.assert_eq16(16'h7BE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #857 60efa908-5747-4089-91cc-571600dff73c)");
unit.assert_eq16(16'h0FDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #857 cf308e9f-62c7-456e-96ee-89d628af5286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 f135d7dd-4b74-47dd-b3b9-da1b02b499c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 2ef23305-bede-495c-ae74-5d67d3c8f86d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 54e6a2b8-e2de-4a1e-a6f3-ba1d97652456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 f51889fe-8061-4880-bd86-01482c723fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 27dfe057-833e-40d7-8fde-cc539341a146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 54861828-b5ab-422a-9eca-e83b66b73119)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h032A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'hCA7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #858 45b99294-4919-487c-a545-8c08277cb8e8)");
unit.assert_eq16(16'hF4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #858 b918b867-6167-4969-aad7-61394b531524)");
unit.assert_eq16(16'h032C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #858 022d427e-0c7c-4d42-936b-66049627a334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 f59e4d18-dc38-44dd-ab0d-00081c5e1fbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 db93d0d2-7225-487e-bb5a-a8e570a01b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 e38fc758-11ba-4bbc-980e-ffd9ffc1c141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 d3c2f12b-1aa6-4416-a049-69d27160b424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 5cd83aed-3ae5-4250-8e09-5f664156ae27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 939600e0-9096-4200-8e3d-ee27578edb21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'hF7AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #859 7f3abc07-3ca3-4db4-90dd-7e94372ab9e7)");
unit.assert_eq16(16'h93F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #859 03724a7c-b5f9-4aec-8059-f83b4640f370)");
unit.assert_eq16(16'h0D33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #859 251e6ea3-0748-4c29-87f9-ac7ebb3e29da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 3993f91b-9bf3-45e9-b3ce-d951d5a10e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 8898467e-4874-47ba-8f24-bea3706e5493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 b2524d9c-f271-4612-bc74-37d8adcfcc8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 75c64fa2-7bae-4663-894e-62df218fd3c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 f09e6f2b-44ee-497e-8306-cbe25c0c710d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 830e8b2d-763a-4413-ab0e-33fa28e8ccee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC669;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0679;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'hC669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #860 d9be02a4-7ad0-47aa-af51-7173a30fae09)");
unit.assert_eq16(16'h15F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #860 8d725b58-2f60-44a7-9683-d16ef1bdaa2e)");
unit.assert_eq16(16'h067B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #860 63a819f3-e3b5-4e79-baee-d385aba9fdfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 43647394-2604-4ba8-a2ae-dfd7e6f5a261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 994986a1-2091-477f-8010-dde9fb39dfe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 8fe0855d-c455-41a4-8826-5f26da9f1b93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 f543bf8f-0e18-414e-b6a8-6de78f9bf70e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 ba313da0-cb19-4106-ab32-a6e5fff64da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 2ea68d9d-5ca2-4325-9d50-7bbe2d5eef49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE4D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'hE4D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #861 80b8ae27-9701-4692-a744-a6a002d3684e)");
unit.assert_eq16(16'h3468, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #861 6383c185-93e8-4215-b352-d5d3afbfe740)");
unit.assert_eq16(16'h0D80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #861 f8c98cd5-c1f9-469f-9a8c-f5df7e5a8728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 e8cebaf7-c8c3-40e0-b698-398a56a36667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 6f0f1b13-4053-4d6b-b9a2-f394c6a73bdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 c4239be3-6f61-4d7e-85d7-3d92e814fa5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 e666874d-5fe5-4a35-a7cb-a56aeb8ddf40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 d6c0504a-3413-4a74-b4a4-b983c3d734fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 8bb1cc91-14f7-47ae-b7e3-00300fba3294)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h989B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h989B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #862 c876c8c4-a53c-47f1-a9ca-8678ebd82dad)");
unit.assert_eq16(16'hBDF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #862 7ce2bd83-1b1c-4bca-ad1e-1538cde9dc8c)");
unit.assert_eq16(16'h08F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #862 9994b6c7-a61d-408c-929b-c0a356d565f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 476dd7ac-dc5e-46b7-a697-77367c043103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 b7bbd937-abfe-4802-b56c-5c7fddce2050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 fc69edee-989c-41aa-ad02-b556cdfcb53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 72512f7a-cf6b-4569-94b5-717596318bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 e04ad58a-f9b3-4d0a-8b79-3b7b471a02fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 5fcdbd66-1653-485a-b075-32cbf862ae97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h98F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h17B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #863 c8bc4902-06a9-4140-9800-c66acb95744e)");
unit.assert_eq16(16'hA5A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #863 46685f42-c758-444d-9ac6-99e9749a10cc)");
unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #863 513e423e-7120-4241-b125-793927d916d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 401131c5-bf14-4b0a-b497-a31d32c17abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 31c810c6-7516-4f67-ad6e-b562c0d942f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 82e503f8-93e4-49b6-82d7-ee067b9c4b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 d0d63155-9a85-467f-ad5f-2fe08278acc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 54a7285d-40ec-4460-a967-e8e13c8d2a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 cad4a100-bbe2-40de-b2d2-b91638a7e32e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7061;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5522;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'h7061, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #864 01f694a9-503d-4673-a424-959649f710f9)");
unit.assert_eq16(16'hCE8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #864 88875084-e16e-4ffc-a970-9d2002e9b002)");
unit.assert_eq16(16'h0FD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #864 f97c07fe-cf80-4719-9637-84fea24ab9b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 de0eb6c5-4449-40ba-838a-ef3b3394c4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 3bd92c9b-ab29-4147-99fe-a6aaa140cdde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 de231927-f1eb-431e-bfbd-9b8d346ecf01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 ca9cc274-4feb-4fec-8cb6-6101c26d99fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 13fbc16a-f6a5-4d5a-84c3-6ad15ca6a021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 664a53be-4f03-45e5-8151-89ba9e5f9aa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h94BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'hDA85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #865 0e94ce54-1499-489a-b682-90e9a8f59912)");
unit.assert_eq16(16'hDB7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #865 5972444b-cce5-41f1-aba5-7d13126e7bbb)");
unit.assert_eq16(16'h0A0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #865 779daa3d-9ad5-4bc1-95ca-2f7c0e2d5210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 de67790e-63f5-4a82-91ce-774dbc46be80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 c99d3db2-04ba-44aa-9de0-c3198671f5a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 8d5bff83-efcb-4055-bd00-d6b0e1173e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 cbb578fe-711e-46ae-916c-8e66d929b1cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 ac532111-a4be-4739-b68c-1e877c78128d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 ac5421e3-682d-4546-b4ce-5abd241631bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h1DCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #866 0b81a9ec-6184-40f2-9516-27ccdd892682)");
unit.assert_eq16(16'hA0BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #866 c04b4546-5648-449e-97b0-b8a5d198d26a)");
unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #866 1f4c347a-243f-4f84-b932-ca5d3bee5f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 8b39ce09-27ea-410f-b47a-c23c9dbfd8d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 fe6d56c5-fdb1-40ec-9ca2-cb825b0e147d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 9c52281c-0dfd-4108-aefd-088d3b2d553c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 cbbb119e-3c5a-453b-a781-bb5cc0e5ead9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 c2c3b6ed-c89d-4bc3-b001-26a63895128b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 9de51bd1-0ae9-4378-8bdb-775957635eaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h68F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h68F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #867 18efbcbf-6018-4366-a0a9-64ad077ab629)");
unit.assert_eq16(16'h7049, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #867 55eebabf-7bcc-431f-91bf-cc823819d0f6)");
unit.assert_eq16(16'h08C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #867 d9536d57-1f41-4b0f-8299-a116f25c524c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 d6ef19bd-aecc-45cf-acd6-a754c49652cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 07faf431-5346-4adf-a9ae-e6d7b85cc29f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 862ec821-2df6-433d-b2b5-9a99d76f3060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 cb37b1e8-76ca-4f14-87bd-0e54c68d9485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 040b3e11-d777-4ff0-bdf0-a54984e35a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 23853dd6-26dd-4bd6-9506-c137682e34f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE24A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'hE24A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #868 e7705bfc-4421-4107-96e7-8df7e5dcdf7a)");
unit.assert_eq16(16'h60A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #868 cf0f1e48-0b3a-43a4-ac5d-2382782d578c)");
unit.assert_eq16(16'h0A4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #868 cfb6e4ce-7582-40ef-83ba-cb6de50081fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 9b7034b0-4e15-4512-8195-f230dd24edc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 ee182d0b-4d1d-4a44-8121-57dfeb3b304a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 1b2a2480-8393-4060-9fc0-f3a3a199e445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 2c413854-a618-439e-8bdc-f9eae5ee351e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 da16db74-ca5e-43dc-b3b1-f411c319577f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 7eea4610-29d8-44f1-8758-cef5472f6768)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5901;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'hE6E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #869 27752593-eb7e-4345-b44e-65ac3c319225)");
unit.assert_eq16(16'h28B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #869 200f97ae-5067-4b8e-a6f8-adb255d16ff4)");
unit.assert_eq16(16'h0EF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #869 11380808-ffc7-42d6-a697-002fe0cefa0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 97ed7344-f607-4097-8898-1fce003e7e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 856858a8-8974-4669-a5b0-9a78100a2e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 aa1a3ba2-5fbe-40e0-ae9b-073af88e10e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 02fb19d3-5108-42b3-b16b-4f732565b27d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 ca453968-a6ff-4e0e-bc38-1cea65bde396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 65377ad5-0ec2-459e-95a0-e92ec3ccaafc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'hEF47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #870 90084c04-914b-430e-b728-8b4a607d8d08)");
unit.assert_eq16(16'hE170, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #870 da17ba17-fe23-411e-890e-701dfa74253b)");
unit.assert_eq16(16'h04AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #870 bef5d21e-615b-4eca-9939-cfad9c2c660a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 9fb09388-2f9a-448d-84a3-4752c7115550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 b1ea9110-a485-4693-8e63-6b38891ef084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 ab9e9677-bbac-4b9c-bbbb-338c7f395912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 8dc24612-44a2-4e7e-94fe-de57fd1f7f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 80cfd255-ff4d-4796-a381-93b9d4f3ad77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 178d123a-4fd5-4078-985e-68a5844c31e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h919B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFABF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'h919B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #871 125eb7a2-b336-49e1-8af5-92733ded7045)");
unit.assert_eq16(16'h7E22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #871 e9e4b30f-b75a-466d-a728-8748f70762cc)");
unit.assert_eq16(16'h09B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #871 4b02c3f7-8d6c-4ceb-ac5a-1106bc29a386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 04a8b33f-de51-44b1-91b3-4eb4f1a16be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 f4117ccb-5831-47ae-b6e9-55fa675b41d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 f9b5d3fb-e555-4d1f-ba80-9f6abd21cf27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 385ff69c-dd21-4310-83e2-ba717de552c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 8ca1b03d-42dd-4670-81a2-653169fddeaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 fc4e38bb-3fd5-4b0b-a270-f71db14fac4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD648;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF637;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'hD648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #872 2f405c26-7d0a-4774-b118-6c6dd1f8b10d)");
unit.assert_eq16(16'h85A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #872 6eda2728-422a-4b2f-93ec-8aa81de934f0)");
unit.assert_eq16(16'h06D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #872 1358a63b-4328-4ce8-be2e-fd93ebc14c0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 f6790747-16e9-47b8-af32-0a04a3c1424c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 8daa56b6-e7e5-477d-bc22-a60f01bcec5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 c45a489d-c898-4fe5-b26e-dadae4a5e014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 5787e27b-bd34-41d7-b33b-3f1713941dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 4304d5ab-617d-4ad8-b001-e3fa0a6ec665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 e89a4fee-2c6a-4ef2-b0f4-0d1c78189ca0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE07F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'hE07F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #873 d96d4e4f-8b8b-4534-8143-cf668b39cdd8)");
unit.assert_eq16(16'h1292, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #873 38e6fbd5-3382-463e-b97e-e2a023d7c3c0)");
unit.assert_eq16(16'h0F68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #873 30b8d862-0567-4aa8-91a4-b5a7c97a0716)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 cb507f28-f4ff-4ff7-a66b-b9c11438a7ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 85a25848-1f1f-4c9f-b2ae-b9079498c75a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 a18ad1b7-7af1-4778-9185-1fb399e237f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 9174e55d-ad1b-4572-9cd8-6a69a577d9d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 88fe3645-9372-405a-b706-a9e2ae805107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 d162c609-c477-4e82-9578-99132bc6ce97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC306;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'hC306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #874 d41fe8ed-5f32-42cf-8272-b59c1b361ce4)");
unit.assert_eq16(16'h8D6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #874 5a0da86d-7cd4-40ef-abf9-cff18670390c)");
unit.assert_eq16(16'h0FD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #874 dc7d28f0-ba04-4544-9588-6d267a23050c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 e7a9d84d-7a5a-4d1a-a77c-f0ca4faa900a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 b263f988-14c2-493d-8130-1821fc8e1803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 827f1c57-ae1a-4de6-a711-d3ac8096bc3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 d92cdd5a-1f8b-42fe-8f47-76ecfa60e5d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 5837622d-bf9d-47bf-9322-f6f576169761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 099d0969-0eac-49a3-ab5b-4cbb30f2ebc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h66B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD3E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0539;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'h66B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #875 abb835d5-29b9-4bd2-b2c7-f20f033156ae)");
unit.assert_eq16(16'h0249, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #875 1c270635-5c38-483f-a78d-8f9841dd80c5)");
unit.assert_eq16(16'h053B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #875 f361cc8f-c5bf-427c-9106-e61585bdc1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 1283acb5-526d-4f0e-b7fb-8a40696a3316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 e557f00a-b6f2-4ee9-8716-a291f3e58e2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 1048225c-a11d-4f89-a52f-f80d5324ccba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 5dfd8f68-d5eb-4abc-bbc4-5499f5413d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 dd79f478-14d6-4111-b6ab-e10e1b89b4f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 8a83409f-8471-4daf-89b2-65a08152a7f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h5090, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #876 1eab9015-2ed9-4e76-a7f4-fa7d7ebe4d49)");
unit.assert_eq16(16'hBA64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #876 d81dc689-1493-494e-88be-4d29ba8adc29)");
unit.assert_eq16(16'h0C52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #876 6cd551a0-d7c1-440b-861e-68479bcc94b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 f7a37af1-3256-4f6a-9cd9-2c488d4d1a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 8b773f08-5c61-488a-8091-7366c19b80ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 9bd5b8a3-d690-4bdd-9292-222003452a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 9f24625d-3b3f-48cc-9039-54c9a1fd9654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 6bfe84fb-334f-487a-9ba8-a4648fccf26f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 26167e0d-776d-40f5-8090-5cb0be1b1e11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0213;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'hCD98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #877 e4f0ef57-39a7-4939-9c1f-8367f5ccff4a)");
unit.assert_eq16(16'hAA39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #877 8016de22-7088-49ef-a889-d9a9da0c151f)");
unit.assert_eq16(16'h0215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #877 8e0b4b19-c7a7-4113-b6d4-e8b8361573be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 3bf92891-eae5-4392-adf2-65a4a8344789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 0169a3f6-4d13-4714-a869-aad7b0ea3964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 43cf101d-7ef9-435d-b949-36ac23c82546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 70387d16-8cb7-49e9-8bc2-a30813c9c637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 74827daf-14d1-4f01-a29f-972646ef8a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 75aa1a11-886b-41f9-b53f-e696a69926e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h598E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h6F2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #878 41f632eb-956e-4e71-94f5-5a07b0c6a8c4)");
unit.assert_eq16(16'h1BAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #878 34516d4e-37e9-4409-9356-e1bb7a13610b)");
unit.assert_eq16(16'h02D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #878 e2f2295b-c89c-4768-9bf0-df360951c308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 520b47f2-f734-487a-ab50-150328c39ebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 9ce6c3e9-a785-4b99-9452-fec9a6081fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 030b19aa-14b8-4907-abad-0d52960f823f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 f8ee4ec6-3b02-4126-a58c-b86b287db697)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 3a01a949-84fb-4930-9930-e6a1067c9b87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 d47c5b16-8957-46f3-bfda-531028377cdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6498;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h6498, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #879 dcb58790-e085-473e-ad45-bb5466d615eb)");
unit.assert_eq16(16'h446D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #879 4d1a3da5-b6f7-4712-8782-d61d4045d560)");
unit.assert_eq16(16'h03F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #879 db15d0d1-2f87-4bf9-9964-15b0b5a57f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 8654aa13-d74e-438f-8610-e42a56177caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 59dc5a11-9516-4714-8db1-7b5fa001c237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 e957a081-9923-4b9e-9f38-98d80b789221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 e790d73f-8570-4f1b-b601-e17a6b9eaf97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 a40bab74-a781-44f7-b1f9-c8fc15e6a30e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 9b596211-dd10-4cf1-8649-a43503960280)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8A5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h4D42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #880 7c07a531-8edf-4938-96f9-bec41737a28e)");
unit.assert_eq16(16'hD7D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #880 833d5c78-493b-4049-976e-c2431e9f0e02)");
unit.assert_eq16(16'h0BBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #880 adef02e4-2834-430d-9ec8-fb251636010c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 2214beb1-4c7f-42c9-95e7-18c54ffe5337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 56f62e26-ff30-4674-b369-17d00549a60d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 17602c8e-44aa-426d-9e6a-36124fbf457e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 e2fd5986-470d-4236-ae67-281cd5d7b517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 b8ad123a-d2dc-4498-b112-9af962bd2584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 f7434239-18e0-43a4-aa7c-22ffe54cd12b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF51C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB21A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0967;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'hF51C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #881 e3338014-557e-4d9c-be32-e3a977425a1a)");
unit.assert_eq16(16'h86F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #881 f9772b2f-ef74-4013-8fe1-2660468c7c28)");
unit.assert_eq16(16'h0969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #881 cfcd512f-f697-44c1-a716-c2ae92f61f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 ff1a8b3c-0bb4-4366-a64d-b717dcbaa4c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 92a239aa-d10d-4056-91a6-7c735444b8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 41ba7b3d-f5bc-4d77-99f8-d881e6cf5b70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 584b9491-644c-4b76-a0fc-d051980170b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 9e247c06-5269-4bdd-84ff-2cc8f9545258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 50414b5c-156b-41f6-b370-2c9e80e177f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7867;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'h7867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #882 a0a86134-0006-4f95-880a-09ccba9a1188)");
unit.assert_eq16(16'h0064, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #882 d7e03be2-9c6c-462c-9571-a4dafda616c7)");
unit.assert_eq16(16'h07BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #882 de4dca8a-0531-4ffa-ac23-fed7c1b26508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 f40d5c10-e22c-44b3-aa4b-4a438d386850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 2a7e6db9-83ab-49af-8a6f-0104993f9406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 0bcda1f2-9d02-4ba4-b0cd-27000c206330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 0ced7af5-b0e0-45f0-9ad8-ed7942274b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 976aac79-7b08-43d8-b99a-c6e89d007cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 e487c88b-8b22-4875-9ce1-cd5997a681e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA432;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h0BEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #883 9f0934f3-1275-428d-9950-3b555556a49c)");
unit.assert_eq16(16'h886B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #883 d9eb64b8-afa2-4ffc-aa45-46a4e24e1a58)");
unit.assert_eq16(16'h0D77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #883 9a5ceb23-5cf4-4a99-96db-dc1dd2e543f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 cb726313-9925-44cd-a44c-5bef06a51b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 6eeed809-435b-4aa4-9195-35a3aa46371a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 fae245c4-c906-4eb4-a983-6fed2c63f0bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 68cb0bf8-e3aa-451b-999e-3b980e4a7e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 cea6d9fb-fa10-44bd-ad25-7bb28c826829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 52d5d4b5-4e60-44f0-9512-6149e0a822c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h638C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'hAB84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #884 04cf698b-a823-43d0-a46f-e3c5bc91278a)");
unit.assert_eq16(16'h03FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #884 305c1647-8ba3-425c-8f1e-909ebbb7eb35)");
unit.assert_eq16(16'h0A39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #884 3ecfa075-c5d0-4c5f-8b40-71deb77e0883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 7f42c489-6ba7-44c4-920e-cd3f1216cd18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 8f554a11-ec62-4b1a-aa91-118856553e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 7e4f51a4-558e-4d6a-b041-e3e4189213c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 d0c1ff6b-413c-4107-8169-214a6dba72ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 5b23a53b-627e-48b4-a178-32d8c6b49711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 5c6c52e6-e285-470c-bb82-dc5fbe9e82cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA290;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'hA290, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #885 c2ad04df-b968-41f1-8994-28617f5f1fb2)");
unit.assert_eq16(16'h9944, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #885 45a65874-193d-432d-9d43-a4007e6c9535)");
unit.assert_eq16(16'h09FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #885 485b4e94-b74c-4d08-9223-a9d40617c572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 2a35eb4b-3c69-40c5-b632-0167e8c4cf29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 484ce65b-20a9-4915-95b8-b2d3f680aa63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 50d60d04-8634-4d16-8245-273c84d44ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 d9ad2758-7512-4f25-a18e-5775f1372eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 cb582d4e-97d2-4748-b76e-160b63460b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 f2eb9a76-ad34-45fa-8782-88c97a17bcde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF564;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'hF564, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #886 e45e569c-c0c6-4c4e-9abf-dfab62e66f19)");
unit.assert_eq16(16'h68BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #886 497b9f7a-9e58-42eb-bc87-be34c8b2049a)");
unit.assert_eq16(16'h0BDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #886 e8b3def3-41d3-4c02-8fb0-7d1fdf066b30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 e60359cf-7e2e-45e0-a5aa-6daa90e95c31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 f3fbcb52-4ee1-42f7-b66d-ce9ee6a2f9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 d07dca0b-493a-4bc8-8cbd-e10ec25d896b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 9d0b2813-26ec-45e0-a0a4-48c006746248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 fec2ef08-f0d9-4371-b431-62d9d20fdaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 f81643ca-0ef3-4e4d-9cb0-15a4cee18c64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9AFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h9AFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #887 fd9e49be-87ad-4161-93da-4c8980dbdca6)");
unit.assert_eq16(16'hBF8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #887 d25ffa8c-fc9a-4d93-b4fe-bdccca9614c4)");
unit.assert_eq16(16'h09D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #887 5734f0ba-f0d0-4531-828f-70f110abda09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 6848930c-aabb-40b5-9123-5f9c57f912fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 91973ac0-6de5-4dea-a07d-29724e4daee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 e46db391-b6b9-42ab-af37-5eb126511979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 00f12f05-1750-4f43-b25e-fd0e9353f7f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 c464d383-af95-42f9-bdc2-6d6319d3f3f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 08e3a93d-1062-4f3b-ad94-127a21b0f63c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB304;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'hB304, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #888 7ab059ba-d4ab-4e1a-a461-4fd11bff7cb8)");
unit.assert_eq16(16'h55B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #888 ca387d70-c56b-4c0e-8c94-5bc175244147)");
unit.assert_eq16(16'h0B0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #888 fcd8beff-a0f1-4526-a9e0-bce920ed3fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 00f8b914-e3b9-4e4b-a4c5-7ff31155ae9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 5098921c-fb58-4c9c-948d-5399c5f062a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 198e9ea3-c6c6-433f-b514-073830a41033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 fa005f3a-ea1f-4775-8011-bd68aa66f2be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 4967bfd9-9dbb-4cee-b7dc-7914ed91a82b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 3269acc3-6854-4ea2-9f47-18827db632e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h228E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h228E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #889 d55ee6da-d2a6-486e-8386-5e5930b348a4)");
unit.assert_eq16(16'hAACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #889 98683aa1-76ff-4b66-8e65-93a2fd869972)");
unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #889 7aa349ff-4912-41e7-b4cb-66e90db46534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 97a4cb04-39a8-40c3-95a2-771f98c90c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 9a5946f1-4f0b-4db8-88aa-f0d9ab0b3f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 204dcbdd-2475-442c-8198-056b39a222c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 b6c1cc52-b406-4c12-b44c-56eec1e1223b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 42364285-b71e-4497-8518-2303e3fec12c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 5e8b60fc-488e-457e-8e25-3835d7943c58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'hCA9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #890 a8352083-7c6b-41f4-b0f8-1f7b347bc4b6)");
unit.assert_eq16(16'h492C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #890 65d8aaa1-48c9-4f9e-aad3-14c93fd81289)");
unit.assert_eq16(16'h03FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #890 56599fc1-8469-4660-a6bd-bcb60c9f0a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 b1cb26f9-780c-470c-bf74-beb0363ca81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 4df62bf1-0eb6-4756-95e1-971724db7ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 b7ad3731-d72a-4dfe-945c-044691c82fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 714838a5-fe81-4a48-b103-f7c0cf9a089b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 036acbeb-78d6-42d3-93b5-6bcacbfab9d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 b3220539-3c9a-441b-9f57-2ab74413beab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h507C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'h507C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #891 81faab6c-ef93-4f92-9b65-de7cdfcfc607)");
unit.assert_eq16(16'h4EF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #891 635593f7-1c9c-474a-bdf7-14f8b26f256d)");
unit.assert_eq16(16'h05CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #891 82d7c607-22ca-41ac-9420-1eaf83d40907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 299c7aeb-5c9a-4743-83b7-a5f383d3879a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 db137e8d-d5bf-452c-b2bf-5e7069229ffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 e320a61b-7df6-48e7-815c-a773a91fcf48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 5b6b8122-60e3-479f-b44b-47600a60c677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 1885e955-c075-493d-b605-049c979700a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 19c03b14-452b-41c1-8ee3-c37a3a3621cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9956;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h9956, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #892 7fa7475c-0e58-4609-bc25-b2dcfab40509)");
unit.assert_eq16(16'h1174, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #892 90305329-0352-4f67-af1d-0d3679403a72)");
unit.assert_eq16(16'h08C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #892 f4696dcf-aa94-49fa-97cf-81eccd237f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 5d85bed8-7958-480d-9185-3d26e14f0102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 ac573cac-4468-40b6-b1b6-83f9c69f250a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 a85c629c-85a1-4b6f-a508-620342ac3b7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 a426d474-a340-4cac-8623-8bd4ed2ed285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 629eb9f7-3bc2-4b60-9e9d-a64ba1baae58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 c0e3b368-322a-4a11-9af2-dc86c993752a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9AC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h9AC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #893 73d20cdf-3b89-4373-832c-f14b49c62b68)");
unit.assert_eq16(16'h7DC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #893 a5d72fd2-004f-42c9-8d77-044832ad27e4)");
unit.assert_eq16(16'h07F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #893 f9089487-589c-4f33-aa46-6c5252b343ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 6be779c8-841f-4122-8ce1-851740d4b7b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 d2a77387-8e06-4e85-a937-f99afb188e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 bc7493ad-b83c-4841-a320-b97718eae35a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 f2a34f3d-837f-4a12-ba01-70f22753159e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 8e1af443-b701-40ee-b938-c44400d87d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 afd5c5a5-fa2f-4048-bf77-3d85f47fe09f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'h6B30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #894 96d4fd26-9cc9-42e6-8a7f-1cde4e144a70)");
unit.assert_eq16(16'h90C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #894 d18a13e1-993e-494b-b4ba-0d6f8449d575)");
unit.assert_eq16(16'h0F82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #894 fbc80930-82e8-4cf9-a624-37e9c887d3ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 9c0ff877-3e88-46f0-b434-83902455dd5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 7036ad1d-016d-4b42-8139-cbf327b6df00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 e843e56a-be7f-4071-82d2-2a7348f48417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 f2930ff2-89d6-441f-8b81-6491c01c0172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 484ba1f1-fd00-497a-9921-a53fa4b3c202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 c3867bdb-fbcf-48d3-b201-438ee82df7cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h034C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7821;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h034C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #895 2be6fc82-e33d-48aa-aa5b-2f5f1448939f)");
unit.assert_eq16(16'h1BF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #895 dbe67ec8-bdc6-4448-8d96-0c15762dfad0)");
unit.assert_eq16(16'h0E0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #895 739a3310-e898-4745-b49c-4048b0cf5dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 320b44fc-35f2-4b37-83bb-2e88cdce1fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 e976d8c0-8c7b-40cc-9afb-c9d0736f87cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 587275a7-e680-41da-8cec-8d28c699a1da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 84ebebca-602d-4dfc-a23e-e764776e481a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 cc3c822b-15f2-4c2d-9141-9eb7d08ab395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 d0d2e4fc-b212-447f-af5f-3657f2581cca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD3B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB107;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'hD3B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #896 b854ae4a-f2ab-4e16-a8c3-4579678b7fd1)");
unit.assert_eq16(16'h4441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #896 0841588d-2594-4efd-823d-6f2ca1023705)");
unit.assert_eq16(16'h0F43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #896 7f3ffb6e-11cf-4618-a21c-20c48928bb1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 51df4c9e-8ef7-4fef-8b82-08295357b399)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 7c1816c1-bbc3-4e8c-9f25-be375ed49f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 e34807c7-b3dc-4f36-891e-a7502f390935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 b3a58bea-31de-43cd-9631-571640b3d86b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 ee5177ba-8699-4912-8eb4-bd3b0f42306d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 06133fc9-b69c-4e1a-9675-86229f86ebf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1181;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h1181, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #897 1ee465a6-a84e-4b28-a224-471ad2b71686)");
unit.assert_eq16(16'hB78B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #897 f62dd8f3-369d-41a9-ba67-d1b38530d845)");
unit.assert_eq16(16'h0B36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #897 a6eb40a6-2b9d-46b2-8cd2-ed411ed5cbbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 3c6a3b7c-ddcb-4b51-962f-be7a9a1ec3f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 724f4cd4-701b-4eed-8a3f-4744a1cd2237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 18d05a5c-654e-4806-ae24-11d5569c9f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 32e9f1ad-9e69-4848-b4eb-77bb473efb2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 e282f803-58d4-45c6-893e-52414e5c8ab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 31f3f6ab-533c-40f8-b8f2-1288bab19895)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD82F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0331;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #898 7275d84e-1cc7-4168-868d-8836d4668e66)");
unit.assert_eq16(16'hA076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #898 e627167e-510a-408b-a293-6ae792b2d9ff)");
unit.assert_eq16(16'h0333, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #898 27c86028-14eb-47ba-a293-f5982a8918f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 151fdddd-8ed7-454f-8e64-d828632d7f57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 08e07234-4ecd-4d24-a0a8-2483ee95e4a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 632d4bf2-d53c-4c38-99c3-66184fda5412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 bbe5a3e3-ee98-4820-bbf3-04e1ae949962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 ac82671b-cfd8-44de-b375-be55f068987a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 e99777b2-dfbd-4ea1-8396-0a53ebe84d4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1EBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'h1EBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #899 3fced629-9bce-40af-9929-1bc213b6e638)");
unit.assert_eq16(16'h67C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #899 4ba876c0-41c5-4dd2-99cd-1a2e6697b6b3)");
unit.assert_eq16(16'h02A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #899 577462de-8b7a-4901-a168-b4d63ba3e505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 9081229f-4fc2-4265-961e-910f95efc020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 251a9a1c-8ef9-42fb-9a0b-29c565abea5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 1f17ec49-3156-4dd8-8357-fdca3c53c009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 d334749b-1fe8-48cd-b3ea-bb6160f11970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 33e826b8-7837-4ff5-9635-dd6366dae467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 b52dbe7a-c3da-44e8-a829-fb6b74660843)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7490;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h000F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'h6D7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #900 e7363d18-b718-4fe3-9ab3-ca46cf6e1007)");
unit.assert_eq16(16'h3006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #900 05bfe0da-2ef5-4f61-aab2-fbf1bb3c56b8)");
unit.assert_eq16(16'h0011, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #900 30400c75-26ef-4061-baf9-089be65812f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 d0020912-ca86-4344-af34-a7effc5b7cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 b6189b36-d6fc-42c2-b290-b0091e419612)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 10de9935-40dd-4a27-9e29-5396d7adb63a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 dd521b00-75ab-4b4e-b81e-135c685a10f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 3ba1d640-9e5d-4227-9163-fa9b37d60c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 0527e86e-5440-4112-8c79-2f90488e3315)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC839;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hADBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'hC839, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #901 a9a10190-eb0b-40b4-9f66-b20623826642)");
unit.assert_eq16(16'h62A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #901 af4f7088-e7ec-4d27-a599-406d415397b6)");
unit.assert_eq16(16'h0A6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #901 5c32ae8e-aff3-4623-9073-86bbab2bd8f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 8b31208d-007e-495c-a3f9-5a979f68c3bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 2354b855-350e-468b-9c64-f3b4db8570db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 30999999-e885-4e34-aaa6-b270a86df9b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 b7afad27-40c8-4eec-8e9a-ba0aadb2189a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 c7ba8ce3-0ef3-4574-848d-4ae3c5b1ef57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 e419d6c7-6da8-4bfb-a390-01ca49b7c5e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA076;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD41A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0802;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'hA076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #902 3d7fb908-0913-49df-8ac8-bf17590746b3)");
unit.assert_eq16(16'hD4A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #902 2d06ce65-3d13-4a28-aa26-d55323ad931c)");
unit.assert_eq16(16'h0804, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #902 8bd09b2c-3fec-44cc-b1ef-a56b18f4c62a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 f1724721-e776-47df-aa89-8b918a54a82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 73232a70-1753-44bb-8bff-cfddb2c5168f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 4cb6014e-66ae-4239-809b-9b99c51281fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 447c8efd-4736-4258-aed8-385def5993e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 5f6fccf9-77b1-4e68-9f74-5a29cb1a3d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 e8b232ee-0ba9-4c1f-a6b9-7fb2fc37886e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3885;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h3885, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #903 1ece12d9-66f5-408e-b03b-44c1c1a4757b)");
unit.assert_eq16(16'hFCA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #903 9a7e9b83-ef57-41eb-96da-fcc0d3872e48)");
unit.assert_eq16(16'h023E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #903 68775e95-a80b-4827-8e9a-1f8e99a1903c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 2ca58c21-c487-4485-b209-10a973541b69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 d621e0ee-2981-49be-8ac8-5b6a95d6ccbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 3aa043a3-04e3-4c4e-a92b-2dfde47e0d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 8e35807e-40e7-412f-89de-341af0be1d2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 edd986eb-3c07-47a5-987c-73e32280b0b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 c7a956d1-8580-45b0-a21d-4eee11c32ec9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'hCA3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #904 98e963f4-31f9-4d5a-9139-4a3fa17a196e)");
unit.assert_eq16(16'h6367, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #904 0fc72997-5fd4-4a32-a85d-72d485e27b2f)");
unit.assert_eq16(16'h0EDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #904 9f6c98c7-634e-4139-b836-48be113f8d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 e367e11e-bea7-4bf7-9c33-389cc368faaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 fc06274d-eee4-4c0c-a86d-d8676ad3604f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 4a428db5-9f0c-4a41-b0f0-f1c32b6cbef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 d1f75efd-a906-4960-94ab-c3e04e5e500d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 26b52052-c8a2-4e29-9891-e687294b5ef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 e0d41dbe-969b-443d-bde8-bfc771909936)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6AC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD978;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'h6AC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #905 670043ee-1e51-437b-97d3-6733d9de16db)");
unit.assert_eq16(16'hD668, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #905 bd19b991-3016-40c7-8bec-52b889dacf3c)");
unit.assert_eq16(16'h092D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #905 0fc8ed64-1edd-4e68-ab16-9d68f4f92949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 500c04e7-6493-472c-becf-03c64d0f897e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 e506f1df-4f57-437f-aa34-b7e202f77c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 546e298d-fff3-45de-a473-dfa4d363d7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 504e54a7-7cfb-479b-b836-f29d4a2ce22c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 40e0ff88-df26-49e0-aecd-f86acdc661e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 ead564a4-b693-45e8-934a-8c170486d4fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6505;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8673;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h6505, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #906 51b64264-bdb9-44d2-b1e8-a980d8d6c949)");
unit.assert_eq16(16'h8D74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #906 aaac6c37-f358-474a-b6bc-dd2e16c6755e)");
unit.assert_eq16(16'h03CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #906 100f7b32-0d47-42f5-9c0b-87553ffd90d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 44623dfb-e816-4ab4-9538-91042a9cb016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 a6b8bce9-de6b-4d87-978a-2b4a16afd7c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 0c7c0875-493a-4823-92ef-44fa60f40332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 63aab8f7-89a2-4258-baf1-1fe82b9cca9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 86c33145-9843-4c28-a5ed-a0e26b184e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 e6eca822-8823-4e4d-8268-a6311ae45258)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h0F8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #907 8cab2a27-cb7c-49e6-9e17-df5954a3d609)");
unit.assert_eq16(16'h1ECB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #907 0b99edaf-8fde-4edf-9d2a-6c21d994860e)");
unit.assert_eq16(16'h0F9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #907 1c76a93d-7c72-43d5-8553-d7a0af332e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 5e880f1f-9bf2-4ca4-a17d-caba3827d4a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 7ed1f7d3-7e4f-4a79-9195-5cc91449e231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 7d0c618f-1854-43f6-84de-6b826ed6e9ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 0e47e8b1-8b77-40a5-a65e-9cdab6045521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 15f7be81-5a06-46bc-846d-bdc0993a9988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 51ceab72-047b-4cc4-85ea-77b2a563727b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0448;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'hF7D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #908 b8210b46-6f46-4242-9791-cd845c6c71d3)");
unit.assert_eq16(16'h333C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #908 1bde4840-5805-4c56-9a28-dd4497506f19)");
unit.assert_eq16(16'h044A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #908 3d808d31-8401-485a-8e0f-e4ace4da7284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 65202cb6-5c87-4f61-b604-b2f178aaf13d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 30d38e08-ed2a-4389-aa4f-741e991ae570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 684dbe51-e343-47d9-aa45-b6f961a14008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 ee6f44df-51b3-497b-b6af-f9898fbfb30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 db99080f-f5cd-434a-8166-ae371295d7ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 a5755ce4-da0f-47d0-9251-4c530a1cc016)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'h07EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #909 872df4f8-1c40-4de5-9e49-512e83585aca)");
unit.assert_eq16(16'h04C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #909 fe8d9c98-8b52-492c-8cbd-59b011d65f1f)");
unit.assert_eq16(16'h0D5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #909 61c3ce75-444e-4c24-a09c-dc59d3ac3e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 99497bd3-0a30-4645-a267-04f8ecd02120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 8f7bdd3d-f4b6-48b4-a72e-f3dd724cd980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 3a6cbe8c-e74d-40ba-b823-cf8f28af1a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 e53ccf24-8347-41ae-a57b-e90bb79eb2a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 aec01886-47f1-4805-a56b-04d3caf00c3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 822d9422-6137-4936-959b-f00c92f2cd13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'hFB2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #910 cc2df71f-09d4-45d1-973d-972c08f92dbb)");
unit.assert_eq16(16'h5EBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #910 e622aa99-0473-49ce-bd02-29683b7dc8e7)");
unit.assert_eq16(16'h04A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #910 18a4f6ca-8458-4bf9-a416-8c486102cba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 d44f5788-af95-4eef-a447-92dbfd45ceae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 f6465a5b-be59-4d12-bfee-785e99c470fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 8f671294-efc3-447c-a8d9-a01835862a4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 d5cad436-8487-4674-8985-b9aae6a2b5b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 6f97d5e0-9862-42c8-8f17-777d73d89f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 ffdfe7da-b047-421a-b4fa-f4d883e45bde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF00B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA665;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'hF00B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #911 192a10e2-c5a2-4187-af78-18570d080b9a)");
unit.assert_eq16(16'hF1F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #911 eb4eaa71-1d8e-45bd-8bdd-b436b9e46de7)");
unit.assert_eq16(16'h07CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #911 dbb1f254-2da4-4b0b-b26e-b1e8ecf88334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 22106a78-8105-4263-a0d0-187266a0f264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 2ac618fe-292d-4a82-af89-ff81aecabae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 800aa81a-1bcf-484b-9d35-2116b9a9ce15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 c13e8ae0-e33c-48eb-be9a-524afe814758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 7be38c71-fce5-4810-a0f3-ec2bcf3941c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 312e4e2c-0a15-41d5-8369-e5f8f266ea4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD3B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'h92A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #912 7bf55c43-fb84-46f9-89dc-8397aeeddb2c)");
unit.assert_eq16(16'hAC64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #912 affd7408-abb5-431d-b4f1-9e51464a5871)");
unit.assert_eq16(16'h0DD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #912 8987a802-eb0f-42df-9a9b-d8f9749c1512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 609b4514-4344-47fb-aff5-fa3686c2cc2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 f0489345-ede3-4fff-9173-c2876b7586f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 6a8034c7-096f-44ea-8035-7108cd945b2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 d154f5aa-3daa-43ed-afd8-f846a6a4fbd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 50491bd9-00f4-4874-a895-91b8298f1d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 622f8775-d63b-4253-87d6-1ddcffdf87d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h966E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h044D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'h966E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #913 875741f3-e8b4-4dc6-8c76-c678c2ca48b8)");
unit.assert_eq16(16'hD0F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #913 62b32a95-69d5-4667-aaf9-5318b61ec2ac)");
unit.assert_eq16(16'h044F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #913 e5682841-3d61-49ef-928d-5d730de0c73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 05fdf36b-7772-40dc-aa7c-8bdd8f8ebc77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 abc3bc33-85aa-48d0-937a-7abdbd349dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 99fd1ac5-f71c-4c3e-bf3b-6a16263d33de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 52460072-1cd6-4d33-890a-2442a664f206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 b1af571d-da7c-4a8e-9e9f-af71bd4d54d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 3ea85b7d-136f-46c0-beb9-0b057025a4fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'hC0DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #914 b89f97c7-daca-4347-9448-e4be84e2f297)");
unit.assert_eq16(16'h7663, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #914 a1bb1ee4-6e5d-4b47-9d24-7c930ead27c7)");
unit.assert_eq16(16'h0C0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #914 aa0a7d0d-c0c7-40b2-9f5e-79f76ec7c434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 d5b8c7ad-9413-48a7-9e34-0eb721b5165f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 7d87667e-6ff9-479a-b448-2dc804ada5bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 0ffff007-5de1-465a-a1c2-b5eb2a085b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 1a6b91b4-e368-4c13-9542-4d3de77d30ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 e9eb6632-bc5f-4ddb-be8c-7bc389cc6890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 a385a19d-c374-4071-b34e-fc4fb1aaaf12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9856;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h9856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #915 00c46e72-58d7-4130-b189-4a60581a44b9)");
unit.assert_eq16(16'h6220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #915 5d6a316e-8f5a-48aa-b582-c834dae691a5)");
unit.assert_eq16(16'h0EB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #915 ba1a733e-ff15-4916-b60d-f848a7561fdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 3def838f-0cb2-4cc4-8cdf-e164ecb1f81a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 666012e5-bcd4-4151-a3e4-aad36ad1526c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 60778a31-567d-4a85-b665-da8902123c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 5b344f7c-14ce-4c49-be48-5b400d13fcc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 ca51e14f-f29e-42e2-94d8-54a4682df04b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 db53a13d-68a6-4661-baf9-52d3d180f310)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6086;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h7A58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #916 3812579d-07ca-4de5-b8cc-eff2d7f763e5)");
unit.assert_eq16(16'h07B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #916 7657011a-24c7-477d-a73e-79a55e87a38c)");
unit.assert_eq16(16'h0CB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #916 4c45f16b-590e-4c5b-97e6-c3490239bc88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 f442bc86-bc12-4e10-8ce3-6cd20798454e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 81d8f867-91f7-4ed2-97d8-b2d672d238cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 1242787d-eb66-45d2-85d9-e0f9c8a58c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 a718ad5f-4587-4e96-92d8-ff04c6ec1eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 8f20ef0c-c442-48cf-bd51-02f2c1bbb95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 273ae1f7-4053-4923-a5b8-ecd0dc226afd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9719;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'hEE5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #917 df3d0ddd-e8e6-4ccd-9fbe-5bba3e36b5d6)");
unit.assert_eq16(16'h60B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #917 97ff3e78-e26a-45b2-8b86-58b4d27db150)");
unit.assert_eq16(16'h0FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #917 c50341de-d74a-4442-82dd-63ce2447d410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 3b3ed35a-7c31-4a13-b02a-39ea35701c16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 8f85852d-24bf-43b2-a1ff-2515fdf867a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 da9d3731-8309-4339-a608-9ec9dafa0ef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 b16391d8-a039-4c2b-b2fe-2a3a32d19bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 7e3cd094-fd83-45a7-9369-53ecafc7ee73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 f3266879-f904-445d-8783-5448eab7795a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA98A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0453;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'hA98A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #918 0c307326-62ed-45a6-a088-bf2d0a12db7d)");
unit.assert_eq16(16'hF410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #918 3db9436f-ed93-4549-ada9-417fb138fca1)");
unit.assert_eq16(16'h0455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #918 106db0bf-a676-498b-81e0-516edff3b471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 e79cda67-0132-44d7-bf4b-24041bbe86f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 02d7125b-a94c-409e-be35-95b66abccc55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 db8dca0f-0cb8-4fbb-b117-dd0446eafd78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 0239ff5f-c41f-48f6-b45c-b68d4cbb8899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 b7acc401-1e21-4122-9d3f-40dc8b203920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 22248ee9-41a5-4a9a-bf9b-31123dd6c3df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA81B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'hEE23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #919 b49c2887-cf90-4ec7-9641-5025d77eef48)");
unit.assert_eq16(16'h4238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #919 ea6df5f5-d080-47b6-8790-dbad9b435ddf)");
unit.assert_eq16(16'h0E9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #919 6e9af2b7-5888-424b-8f5a-d71abe8a115e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 d10011ac-dec3-4253-88fd-6b33b622c718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 a81c3646-7a84-4bd1-8c58-23f8f9188fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 8eff6b28-e31f-4cf4-9ae4-6675431288c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 149717b7-6359-4f13-834e-5a782dfa7af3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 2c8507da-319a-434c-a666-4bbb37f61269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 d22cfe0a-3d49-42e0-936b-5b2f1537b46a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h911A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'hFA1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #920 6b339928-6675-4be2-8c4f-0da54102f5ee)");
unit.assert_eq16(16'h846B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #920 d9b302de-deea-4be0-8291-1c96617aa80f)");
unit.assert_eq16(16'h0C4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #920 c3e2c292-9d12-48c2-af15-45d288131628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 30799add-a380-4be7-8ea5-e0df44fb17a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 4a9b2c2e-c875-4caf-9873-2d2746977386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 eab959d0-d612-4a2e-9234-1423e607762a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 f7205bed-a69a-4f99-a173-bc22cc1620c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 2b9efe9a-2564-4673-9835-e04658380652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 87947374-ccb5-4f05-a774-87eda00af756)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1FC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h23F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h019E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h1FC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #921 5cb3cc0e-4f55-4055-b2b0-93cf5e2fb3d9)");
unit.assert_eq16(16'h0305, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #921 c3383a5f-5d0f-4636-bfd1-ab40ae7de270)");
unit.assert_eq16(16'h01A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #921 dad6ed9c-caac-4b25-8464-4cdd447a827b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 f8eaf8f2-8897-4a00-8279-827811d3bbbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 2458da52-eb43-4701-b506-e2beb40c4c57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 52e493f3-8434-45b2-a58b-229144860f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 4ec2a98f-5f86-45fb-b144-4517beec20ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 d4777c72-f096-48b0-8f98-9dd7b85fd2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 8b9bd774-d14b-45d4-93ea-215fffe6469c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h65D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0948;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'h65D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #922 71f4404e-1926-4df7-a7a2-47804b80cdb8)");
unit.assert_eq16(16'h176C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #922 263492cd-87fa-453a-a0fb-c5999a57ad21)");
unit.assert_eq16(16'h094A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #922 81aa1026-58ff-45c7-9681-0e3930ed0f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 d4c00695-715f-4b8f-8433-a06174919a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 9847315a-023f-4e2a-9896-8c986cd7e24d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 5ab74826-05b2-42c7-a257-a31e018b511e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 ba401191-9884-421c-ae69-a935ff241be7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 3648844e-409d-4c42-ae23-1804f176066b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 eba040b6-4ef5-47ff-9bfe-cb2cc5ec8bc6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3333;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'hBF94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #923 b9f9e328-7b7f-4f21-b159-598e41a0bd6c)");
unit.assert_eq16(16'h8C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #923 e371c054-bc4e-4a9c-96b5-eccf9f559b4e)");
unit.assert_eq16(16'h079E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #923 9dfc69b8-734f-4e8e-a465-802852fae728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 c33f95f1-9043-4f52-9275-331d34f90cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 cee814af-3bf6-441a-8dcb-1c857373fac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 4952fa2a-5a99-4be9-8689-d9e83e401dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 343ff991-c3c9-4de2-a26b-cc7ab24caddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 49ce756b-d1af-4b57-8a10-d99cb3c1f076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 31a82af8-9ebc-49d1-bc4d-aafdd4c95644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h396E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h396E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #924 97b4afdb-dd20-4fbf-9a46-35833b7b8b94)");
unit.assert_eq16(16'h740C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #924 e3a3e5b2-da27-4a16-a711-f9171470d7d9)");
unit.assert_eq16(16'h0FF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #924 8ccbca87-4dbe-41c0-9c91-700c697e731e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 ad674416-8020-4177-bacf-28d1e869e9d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 9ad06127-1a48-419b-919f-fb329025ad28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 13cd8022-9957-44fb-84b0-766e2720b03b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 8b406d17-d275-41a8-8689-1193e73cf2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 36b99755-ac86-4d6b-babf-a15d8d5957f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 1f49743b-28e1-4433-8321-13c81ed15419)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h698E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'h3375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #925 d8e61b38-9899-40a9-b4b7-e3920db18814)");
unit.assert_eq16(16'h258D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #925 25513af1-2889-44f4-9550-e102d5879ad4)");
unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #925 f94fb3b4-cb2c-4516-9900-bebe841ae334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 82125e15-6ed8-4108-a997-68b40cc92c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 60413db4-d7d9-46f3-b6d8-b93477374aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 f14eedbd-7e0a-4728-b11b-3fb360091764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 8d3092b6-15ce-43fd-80fe-38631d6c6dfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 f4e5e0d2-4c9b-482f-88cb-015ac6cf4756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 5f574d1b-1513-42d5-a1bd-5b7bb00b9a30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB5B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h7C2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #926 1613d598-823e-44f9-a184-c50af07c51fc)");
unit.assert_eq16(16'hE2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #926 85ced838-8fe8-44a9-99a1-c63ffe38ba60)");
unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #926 947ed9bd-387d-4d49-9096-a4806d0c7dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 0b1d0189-ed07-4ab3-9059-d0b674ef03ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 6a780df6-dd4a-4f6e-81c0-4a664dc76b83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 0a438db7-9cfd-4f68-aa5d-cea0410bd72c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 08a915d0-8dd1-435f-8fe6-9d11634881e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 3726b7e8-1114-4591-afa1-0c24d506caae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 2fa3dea5-bb9e-4d87-b9c1-04a4f45da77c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF657;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0977;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'hF657, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #927 097b9235-2b17-4f95-8030-6ee9ac0b7341)");
unit.assert_eq16(16'hF983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #927 746ffc3a-62c5-4479-8a64-b17d76a614e7)");
unit.assert_eq16(16'h0979, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #927 83506047-ce3f-458e-835a-b2df0a2c0cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 8fc5157b-3a41-44ce-bc9a-7f942eca4bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 7e68a698-3672-4d60-a8ef-2bbf4d5b1874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 9ce09fd4-482c-45ef-b474-a6c3f62204da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 f4fb291a-3d04-4a61-8530-c2462d03a745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 cda4e92e-662f-4936-b485-b6a52d6c5e3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 508d47c2-69a2-4d3e-a767-bc1f866e32d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h397F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'h397F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #928 cb32493f-7fa2-4ee8-aacb-a04447619f66)");
unit.assert_eq16(16'h708C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #928 3f97cff7-8292-4920-938e-2ea72add039a)");
unit.assert_eq16(16'h04C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #928 bb98999d-b39a-4f98-a6ec-881ec8abe2b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 d89f1e29-7faf-40af-8803-b31b5796739d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 3635ed93-fa51-4794-b337-af107e23a8e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 24587fc4-8427-4cd9-9348-43c3d7ab410d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 c27fa2fb-fbd2-4fbb-9d94-820626569d63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 972645e8-0686-4381-8995-a17d2097ad82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 ea576f75-6169-4ed2-ae06-e465c8fdff99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h55F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'hBBD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #929 6e8eb5aa-6e6e-4558-b181-3e8ce163562b)");
unit.assert_eq16(16'h6256, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #929 48c5c64c-6c1a-4231-abca-8038e23c7fd8)");
unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #929 17391b7a-1045-49af-a74f-dc1ec1704dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 f2241734-32b5-4f74-bb8a-7c18a9f1b7f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 c25929a2-82aa-4185-85f4-8cc238788b4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 86f3f9e2-bc3a-4960-8fcf-c4b9d13d19e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 67361ecc-0ea0-49cf-a2fc-b78e563faba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 14f3167e-dfbb-43ba-a336-2e31bcbb5df2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 76f484f5-c8a9-470e-8f9c-726a6c86cd2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0682;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'h4A4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #930 962dfa2a-f8fd-4313-b313-c8fed5e3117e)");
unit.assert_eq16(16'h164A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #930 d80130b4-13a0-44da-a2d6-4a348f3119de)");
unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #930 10fb27b2-de38-4c52-8086-5c150a9ddad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 520801ac-9a78-4d53-ba88-66b15d0dffa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 e876828e-dc3f-4653-a97e-b3ff4f4902d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 152f4a22-b9b4-4ee3-8184-98d2dae6f9d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 c0fe6600-aea1-4571-917b-841fdcc97ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 663fdfed-4d2c-4608-8abf-cd0867ab918a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 9c24ed4d-86ea-492f-83bb-caefc3d4e806)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCDA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0238;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'hE684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #931 fc5958ca-a2a6-4fe9-8864-d273069e055b)");
unit.assert_eq16(16'hC1A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #931 de68ea83-a908-40ce-ab60-86365f1d02ba)");
unit.assert_eq16(16'h023A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #931 77ef8aac-068d-407f-ac28-0d8a1ed1d135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 2ffe7190-c836-46a0-b228-dc6530aeb12e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 24da8249-f520-410e-b216-4130ef0b1671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 eae09135-0fbb-4fd7-b373-a16663bfc1bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 ab4517bd-571d-428b-8e94-fbbdb6d76ace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 7b07bf1e-5110-4193-8be3-b317ba884914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 5c1ab907-9271-4681-a591-d590b5e6d23e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2283;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'h2283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #932 c87ecd2d-c73b-4146-ac94-117c0d4eb603)");
unit.assert_eq16(16'h5CFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #932 e850ebd6-9254-4049-8beb-693e36a29170)");
unit.assert_eq16(16'h0C34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #932 80cdd4fc-90c6-4539-bbd4-a746f09f7352)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 6ce7108a-200b-450d-bc44-9f81536da77b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 95c2b053-5bc2-48c1-8312-5257a54536eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 7552c00c-c66d-4295-a2b1-27162ff77038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 1801dc14-9115-464b-bc19-713f6f2eb7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 4fefcf60-eccf-4d73-a046-ab256acc285d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 12dac767-bc63-4a9a-bd3e-91271c34f330)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA880;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'hA880, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #933 9566ad32-d816-4705-a3e7-dd02e00b105d)");
unit.assert_eq16(16'hBF1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #933 18d6832f-6ad5-44c4-88c5-fee8fdde043e)");
unit.assert_eq16(16'h09C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #933 5af8170d-0435-484d-9e65-2bc848c0fa64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 9178fd7d-80a0-464b-b1ab-7cd816be936e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 8d366950-d006-4b06-b456-41e8cf598e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 ab375edb-1974-4462-9465-e16686bd22f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 92f358c0-c246-4031-883c-80e1dc7a820f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 67bb7afd-7002-48de-bdbb-2d0bd45b4d16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 13e46221-704e-4bfd-afa8-1353a205caa4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'hA5F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #934 ea28a446-5f59-4337-b308-435c6396b9fc)");
unit.assert_eq16(16'hB6DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #934 4e2f85ce-291a-4250-b350-52aee88b3902)");
unit.assert_eq16(16'h0D31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #934 6e77627c-c406-47ba-a4cc-df0c4ac82c39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 bebbcd7c-9a68-4090-a4af-126c0c200a8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 e389fdc1-22c8-4069-b833-a76b0f2de1c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 19d551ee-9e1c-4af5-a652-d5af56c4654b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 0c1cfefe-8bca-461f-9f34-97b09c4f5bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 9124dc0d-fc37-400a-bb2d-1978c48faf00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 9ccfdf41-5528-4a2a-b974-de56be428c23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h68F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA559;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0430;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h68F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #935 da322010-3a6d-4d7b-873d-69755d76dd00)");
unit.assert_eq16(16'h281A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #935 6e083f68-b2d1-45ad-92e7-47781089e86e)");
unit.assert_eq16(16'h0432, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #935 a3e9b51b-36dd-42e4-b153-33ba81c8a30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 029cd667-2793-4615-bd24-20461d9e6a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 bd0920b0-7183-415d-bcc1-46a6e62052ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 b6e8ddb9-efd1-4ba1-aa9e-d63d543332e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 7e4656f8-bf16-493c-bfa2-85b673055503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 3abb5793-d6e2-401a-b907-1346877512ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 450af326-4d1d-48cd-8ebd-d533209c8d6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1165;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'h1165, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #936 2ce55395-b4cb-4ff8-ab43-47252e946b7c)");
unit.assert_eq16(16'h8924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #936 d52fd0e2-dd00-4757-82dd-53172f1089e6)");
unit.assert_eq16(16'h0AA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #936 fcf4fbd6-218d-4bd4-aeef-a95a1e5eb5ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 5445770f-bfef-4b2c-b303-c41a3d06d69b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 93ebef8d-a7cb-40eb-a38d-3fbf568b3c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 ea434895-1eff-4ae2-bc66-1eba0203c237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 4cba311f-f228-4333-ae0a-46b731fb2fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 3526f9ab-5ccf-48a4-b325-bffc115fa072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 2698835b-77bc-4220-8cba-66f4924a6ae3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF940;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'hF940, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #937 3b697390-d1a2-441d-93eb-d58f5b11176e)");
unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #937 0225365c-022e-4d65-a388-58ec590aba82)");
unit.assert_eq16(16'h06F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #937 852b94b6-6f17-4eff-8a3f-dcb71041fff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 d323ff68-32c7-4c18-b169-ec2dff0014f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 15dc9873-d072-44cc-a9cf-fdd239e71fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 f831f23f-cc46-48b5-8b06-808a177f5188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 628e7bd0-7186-47fb-a338-2db3ce5725e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 53579310-3f7d-4cd6-9086-7066aa9632bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 72e9857d-6193-4853-9130-90b08d7704b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF2C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'hC1D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #938 75f3e476-d51d-4f16-943c-5a0eea60b09a)");
unit.assert_eq16(16'h24C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #938 22697646-aa85-494b-a197-4388e1dbc175)");
unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #938 2988fa6a-8e6b-4699-98a1-af9964ff2ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 83d1fbcd-1d8b-4e25-a5df-644f355207df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 2de9c8a5-7b59-4f77-8b92-bf9dfafa5c83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 ed8b67cf-6d25-487c-9b9e-7d415d9ee0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 e8be3e08-c91e-43e4-b43a-d90e1d5490e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 68e60b3a-a2bf-4f75-bf19-e989d4829a97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 693c3c08-c082-44a4-84b9-06a23b632a93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h500E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h500E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #939 8162bd06-8449-4f92-a024-913b0312816c)");
unit.assert_eq16(16'h95C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #939 97ef721d-b80a-4da0-9372-c5fd868b48a1)");
unit.assert_eq16(16'h02A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #939 9eb3fe7c-0ceb-40d2-8412-9815fa5e803f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 ffdfae1e-3f88-4539-a492-935aae2dc071)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 0f4732c2-27c2-417e-9205-10d0ae7ad661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 f414b676-d31d-46f9-958a-6ac2e4655065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 a60bb901-b2a8-46a5-a7ec-47c9d37beb86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 a96318ec-e46c-43cb-b667-792814dbb731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 2660a1ed-1dfb-43d5-a877-a16fcbd61540)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0039;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE27A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'h0039, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #940 e04c5ef1-02f4-43d7-99fd-dd118e64d501)");
unit.assert_eq16(16'h8C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #940 dbac437a-6230-4a35-8e64-1dedc0af0698)");
unit.assert_eq16(16'h079E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #940 4e0b71d1-6507-4834-8d5d-6075210a9e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 228e7d33-b0dc-4ae0-bc11-a18ab6135922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 713aa26d-9956-4def-b2db-b746d5fa7761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 a640c9a3-691f-4bc5-ad3c-a45da49d8002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 ccaf9068-42dd-43bb-92b0-4086acf8088c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 be90cd5d-4240-4f3e-a406-5ef6106b5858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 413d8c3b-7449-489e-946c-0041e8429458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE435;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'hE435, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #941 9f23d859-83eb-47c5-8656-ad23f9888611)");
unit.assert_eq16(16'h2CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #941 ea65b511-f446-4088-a8cd-4c35420a07c4)");
unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #941 ce72a3ac-5ab3-4d58-a4d6-2871a73b4968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 22a96d43-ded9-4149-831c-e53b6e379f4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 dfdb5dfd-4b40-4465-8c9c-5f907147f765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 6578725a-9d92-4070-8762-391cb6aa3a31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 318811d6-73e6-4643-b7b6-cf7d7d34d6d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 8ec469c0-4f43-46cf-868e-ff8b3020ac26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 b7f907c0-ca12-402c-a3c1-6e890a03f4fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h053D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0339;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'h053D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #942 0c0ea8a0-1608-4ad8-857a-a02c3d16e508)");
unit.assert_eq16(16'hDBA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #942 709b926a-8d40-4cbb-9a01-5aaf15332157)");
unit.assert_eq16(16'h033B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #942 4ed399b2-071c-43ea-a9a1-f06b48dc0c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 879b60d7-ee73-44ff-a36c-c6553b471cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 5541f20a-5141-4a10-b6af-07837b3a7281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 e4e6b647-8ca9-4683-a871-0b59e086bf90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 a1152146-ae2f-45e4-ae59-6d1b2e491a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 30a74920-4039-4b0f-b553-0d9288eccdb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 1698a0f6-f7e1-469c-9134-6f05c86bd8ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h455F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0176;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'h455F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #943 aa5667b3-0d8b-4640-820d-8c669bc14642)");
unit.assert_eq16(16'h1E09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #943 c092a9b7-9bf0-4f3d-b956-bfb92ca62d76)");
unit.assert_eq16(16'h0178, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #943 073ec689-ff3c-4219-931c-2b5eefbf84ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 6abaa685-1200-4078-9364-289f5b3e88aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 3c44c38a-4baf-4603-a7d2-d4b088f85f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 1d3acf19-8b87-48f1-a9c9-d7e9e5a0eb04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 592c14ec-3a78-476b-94b4-2b20a656083a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 c6f060f9-fef4-4305-ac69-6db3de96a1bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 1e16ffa5-a482-44ee-be6e-9bc8f4891aa9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE40B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'hE40B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #944 bba534fb-0f26-4c86-9f04-5ec11306c9d5)");
unit.assert_eq16(16'h3FF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #944 6536467f-eebf-4b66-9bb3-4a9fc4dbfc06)");
unit.assert_eq16(16'h0E6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #944 94e68633-52f2-45b3-9fa8-b2c2f76b1a74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 d7ef0ffc-1334-4c61-91c9-b1fad7cba647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 32bfff61-b7fa-439f-8f2d-6055fbb15847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 f8feb6c8-9fde-4792-8492-3efbda40410c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 9162062b-e6c3-4452-a67d-d22f1c8b5b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 b21dc60c-9421-4aa6-a124-36ad7a113f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 45c46b21-6aa1-4866-a4e5-d5eaf7f5c868)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD63E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'hD63E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #945 85e3f822-013b-4d56-9815-f984b37aba5a)");
unit.assert_eq16(16'h5AF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #945 a9ec8cf4-d717-49a7-aad5-fe4258800e0a)");
unit.assert_eq16(16'h00FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #945 64f19440-0ea2-4dfd-a9d9-5adb571511e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 3ccc8eb1-252c-411d-8c75-9ad4a00c2c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 f237f01a-c071-4478-8c06-000550371a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 4dc0bab6-a878-4480-896d-ea7ff3876774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 9759eb2c-4d00-42f5-a422-e9bf8864683c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 af5ed634-cc1f-403f-87e8-3af2961fb200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 9fc82047-2f52-47d1-bb24-cf2a2040fe06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7011;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2512;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0949;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h7011, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #946 3b9f9e6a-74a9-4002-a1a7-db1454e7e54f)");
unit.assert_eq16(16'h6617, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #946 a852a0a5-a3b5-428f-8535-6ee5fe253e6f)");
unit.assert_eq16(16'h094B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #946 098a4355-64a9-47c9-b3b9-728e25f61bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 2d31d721-9ab9-47ad-9f76-4c2d0a5b0688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 46d7c26e-0e30-44eb-8d1e-23c12b67bdbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 5635c833-3933-4216-9b71-351ec3a01ab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 72af4f16-d4d3-42bf-a29c-7fc14c19570b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 3c0b6714-4bdd-4753-a7dd-7224a4aaeff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 9f476d14-144f-43a8-ab28-20a4451b44ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0746;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'h29C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #947 647da17d-a162-49f3-96a6-17858f31c70f)");
unit.assert_eq16(16'hB228, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #947 c113dfad-9a63-4fcf-a784-108b4c448d94)");
unit.assert_eq16(16'h0748, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #947 78c4b76f-553c-40e2-8703-7e739af28234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 895b3ac4-4c14-4dd6-a826-1d0063d5a77f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 95ee434d-2514-4fec-a50d-e7b7d74f71bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 0d6c315b-6031-4b06-8376-60a5e1648715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 42a65b58-6aef-4722-b4d1-b052976f29a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 52dae0d0-cbca-4f0d-9fe5-3f0a9e6e1585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 36f1a5fc-f266-4149-8146-bf6ccad0a2f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'h40DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #948 33d83ad9-9155-41b9-bbfd-0e843d96e188)");
unit.assert_eq16(16'h74D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #948 fccb4432-c085-436c-8de5-7893358b8479)");
unit.assert_eq16(16'h06E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #948 6e660d99-c6ea-49f5-b035-98684d725c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 9257510c-fe98-454a-9d66-09d06c6fe981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 37e99a27-9c77-40be-8484-6b04e61ce91b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 80ab850a-9d6a-4dba-92e5-655a015fffb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 376c9dd2-8d9a-4c03-ba4d-2833b23458a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 8a15f77d-f8d3-4e39-a29a-e73a13e38390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 54eebb6f-6683-403b-8ff7-73611763c429)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0425;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0241;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h0425, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #949 086cb9a5-1a74-447a-983e-6117ade6fb33)");
unit.assert_eq16(16'hF4A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #949 06e337c3-9835-4291-9738-7bb2d4cdfa10)");
unit.assert_eq16(16'h0243, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #949 e77039c3-1801-4d43-971b-f7e16c23b829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 2cab9d22-e3cf-4899-94b0-263a9276bcb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 ad754ab4-0fa0-4490-858a-c9b3de8c6ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 1563fadb-5a35-4662-94de-9ea520483e2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 a7012c1f-ab86-41b2-8971-70a1961cc729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 f96d0a4e-48cc-40fe-9312-cf977b5d3ad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 f4027067-60d4-416e-b19f-b918f10daf26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9AFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h406C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h9AFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #950 5713d23f-9b07-4ff1-8cbe-dfd7cd658fef)");
unit.assert_eq16(16'hEEB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #950 9288c743-0858-4e20-a5bb-0a39a9309f41)");
unit.assert_eq16(16'h0C21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #950 5f42db31-3ea4-4b51-b3d1-5a5c34d3bf39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 aceacdea-d415-4a2f-b489-48269d1cd2c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 65fc0726-e8a6-48f2-9e23-4f8b32d32f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 732a78cb-809e-46b9-a159-4d0a25746d87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 28552520-764b-4f6f-993e-b5ba3ee99a32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 7a38511f-99cb-43c5-8114-c1c4682da8d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 a649d9cc-e3ad-44f7-b10f-27611d60f758)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC83B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'hC83B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #951 351070ab-d62f-431a-be2f-3660837abf6c)");
unit.assert_eq16(16'h687C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #951 5e62acf1-d9e4-4d62-a2ea-a1f838be1193)");
unit.assert_eq16(16'h0F54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #951 67035601-bb13-46f5-8332-c1a64c8e6341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 f22ceceb-7113-4b4a-ae52-a7943ce9421c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 7d0639a3-a0ca-411f-8a49-a28da1846399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 3f4e1850-ea0e-4411-b0db-f753ed238fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 7626507f-9a0b-426b-9b1d-8c1932aa06a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 09ac38cb-4f96-4169-a19b-27e3af964749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 d4c921a7-1f1a-45a0-beb9-f002de632a83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h832D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'hA0A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #952 61c60574-6a67-4717-a7ab-c0d1899f506e)");
unit.assert_eq16(16'hC63C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #952 3342831a-1bc9-4668-b287-a7ec92015343)");
unit.assert_eq16(16'h07E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #952 85351efd-c3a3-42f3-afa4-5a8d70507dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 3d95790c-9801-478b-aa39-df7f01c4ce77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 a987dd31-ca8e-4872-9711-02e72c4c1100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 d5cbd464-12fd-4e66-bc9a-9a6b875119f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 9348c6b7-aae6-41dc-9faf-39c971c7ebac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 d29bc1d5-2c51-4397-9d05-96a1b656cb2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 c059df53-668e-43c8-8b2e-ac9f141777df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'hAD8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #953 eeae1c40-bdf3-41ac-b091-19e4face17e8)");
unit.assert_eq16(16'h493A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #953 08d94d31-0835-441e-bc42-c80babced563)");
unit.assert_eq16(16'h0AA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #953 a888b1a4-3056-41dd-bafb-7cae7970c209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 ae982923-0706-4a36-825a-87b4a7d825f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 90813c63-5bbe-4d25-932f-4b63b7b5a1e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 c39e6f11-c09c-45a8-b0c3-e3e6c45d957c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 718ef9d0-a0e5-438f-8d93-86573dc2f4ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 8699866d-2d92-48ba-9603-eccf3e1f417d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 3c8ff2c7-824e-479c-9a32-5398a1895f42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8AB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB743;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0402;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'h8AB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #954 5035e9a6-6440-4830-b4d0-8bcb5b61d4fb)");
unit.assert_eq16(16'hAEA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #954 76ddc07f-b08f-4841-81c2-42805ae05b60)");
unit.assert_eq16(16'h0404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #954 5305481e-1206-4320-9e49-fc755f7031b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 78459509-c2ab-4de4-9065-0dc9d5371840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 dbeccde5-64d3-483e-9b72-fe34acb6dc0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 f1785bcb-619c-4b9e-801f-806bd17d3619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 dbb77f4c-bfef-4cb2-afd4-55769e209cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 2cc7fb55-3926-43f5-aace-31598b5e2e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 a55aec25-fe5f-4989-82e3-ecf0f02aac94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h19E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #955 eaf80f95-8106-45cf-b94b-38bb4df80a29)");
unit.assert_eq16(16'hEE52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #955 9d30110d-43e9-416b-a52f-b30a76659c04)");
unit.assert_eq16(16'h01DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #955 fd3becdc-3425-4f10-b834-bf2bea242869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 c798b3b7-f206-4ff0-8972-9b0e61da1620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 b835c573-d072-4499-84df-a0fb32a424fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 5e4e57c2-2f50-4ccd-8094-dc43f5abce68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 9ef8da6c-5311-43cb-a4ef-0c566af9d982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 1b466ea3-934a-41f8-a735-c55dcb68eee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 cebb577b-0477-4e3a-9267-54d44632c45e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6CAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h27BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #956 abb6bc92-d2ce-474a-ab23-c1af8ae29912)");
unit.assert_eq16(16'h6ED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #956 476c442c-fdfb-4074-b79a-bc8695df9614)");
unit.assert_eq16(16'h02D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #956 ed061eb9-9575-4c3c-a1f4-9ff4c9f8d8d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 b0ef4bab-e7e4-424c-8602-0ac33904e63e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 9632c6b9-1115-490c-9ff1-947ba6642e83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 4cb8b524-7392-446c-8ca0-5b8fa19ec70f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 98e1b6fb-f0d0-478f-adbe-45b2d2ba557b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 3d0396d6-348f-4101-a122-64853e2fb343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 040e90c9-0d70-49d1-b94c-de48fd86903f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC827;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'hC827, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #957 01ba9945-4886-43d7-881a-a569326654fe)");
unit.assert_eq16(16'h04CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #957 1037b152-6291-4746-aa68-be8ba5b03ca5)");
unit.assert_eq16(16'h0C2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #957 d4f722a4-2f4e-4f24-89c8-7baa06f26224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 051560ec-9362-457c-913f-f124a38c9235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 4ec4755f-b22b-4d3b-b515-e0d5f42fbeea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 3af20e11-7705-4633-aeb0-3d8675ebadaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 cc5d311a-0193-492a-a209-49999d897f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 4f2d0c09-56f3-4af0-b743-d433689d259c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 3b4ed17d-a751-4962-a862-4b796a52caf1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h676B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h8E04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #958 83eb1898-5890-4846-af27-e3648cd04908)");
unit.assert_eq16(16'h3BBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #958 19ebe39a-4546-42a0-b1b6-91221e367e0e)");
unit.assert_eq16(16'h0BA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #958 41934a7d-3627-4de1-90c3-e936406f3a47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 69bc76c6-8804-43e8-893f-b63aa8901369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 db94a340-f9ee-40de-843d-2768f55e7d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 34a8c11e-7107-410e-866c-c537760bdb8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 d4281708-9806-4332-b610-b9e35e661c5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 49ed8b2f-3384-42d9-8718-aee4193b3ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 b9076a71-7fa9-4700-9822-df743efc2010)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA22B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h17B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0969;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'hA22B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #959 54c497c7-3266-452e-86e2-45923a02aeeb)");
unit.assert_eq16(16'hBAF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #959 a318d0c6-b4c5-4171-90b5-b6853e75d008)");
unit.assert_eq16(16'h096B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #959 0b995fc9-6f50-4302-a0e0-aecc92076441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 75cd1183-2c8c-4e40-b7ed-e8d22b5e8196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 c4195d3b-823a-45e5-8954-253a3e6151d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 b243fe48-1296-4350-a805-96edde809d50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 1c8c213d-b539-493a-bd03-87f7199152b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 9f7a6533-2e3e-419a-972e-b3b9c81868ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 653de2d2-b2b9-4489-9d7a-7facdc5d22eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h703D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'hF1FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #960 8abcba32-5ed7-4515-a08a-aedb7ab1e8cd)");
unit.assert_eq16(16'hB9C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #960 1a2b6bc8-c5ce-48d1-ab6e-3bd7fcc26327)");
unit.assert_eq16(16'h0C0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #960 5f235852-a053-452e-b796-163a4092f0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 a730f888-7f57-4e2f-a045-3e13838afcbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 30f1bafc-3da5-43f4-99b5-61ffa42c8005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 0776f84a-b053-4f3c-8aa3-2e9777449960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 0ca9c913-0760-4606-8179-ad51135288a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 9e79cbac-940f-458c-bf59-e474978bd4d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 432d1bd7-a53c-46b7-a1c3-78d65f7db621)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEFE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h747F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'hEFE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #961 db3fa7ab-f072-4f48-a115-2a0e0847b450)");
unit.assert_eq16(16'hCD0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #961 f5de32b6-2d13-4e44-91a6-52dd49b95113)");
unit.assert_eq16(16'h036D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #961 4fe3d304-fa41-495d-9873-4deba0975838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 3dc9dda1-00c6-482d-b56f-146bce26ede5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 51c1a5fc-ebe6-41a4-9765-3d535260b017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 230588a0-16cd-4338-b55c-2be7d1352a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 b055df26-5de0-45ff-b8c9-8b2ad6a8e46d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 db0abbe2-cc10-45c8-a073-31182cd4102b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 11d38239-b9c8-4d18-9119-6c1633fe1da2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0160;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'hBBF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #962 928c627f-4937-44ba-b40f-718117ded080)");
unit.assert_eq16(16'hB85B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #962 1056b186-3981-4d91-886f-3cb961bb1b83)");
unit.assert_eq16(16'h0162, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #962 1998a310-8a04-4496-af2e-2f33930dc99f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 0b773941-b063-42be-bcf1-03d91ca06570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 dcf69094-396f-4632-b7c3-60a68482abb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 50d72a3e-e9e8-444c-92b7-b586a0e25a08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 5fceec79-bec4-49a4-9e29-18d77ddc3f5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 d6a5f8b5-2d45-4f91-9dc2-1500a3efb02b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 d9bc4e16-148f-4b17-b07d-aa90eae27089)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h073E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'h5B50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #963 8e9681df-3367-4e44-8136-f4b7e439b054)");
unit.assert_eq16(16'h226B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #963 f428b9c2-c44f-4059-978f-d95f336f0c21)");
unit.assert_eq16(16'h0740, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #963 d1466884-8979-42d3-8ba8-85f73c59367f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 b34abf11-0eb3-450e-9504-04f2ebb1d36f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 514fd76c-5cb2-4178-9035-25aefd59dfe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 0322001d-4f80-4c68-a3bc-47fe7e3553a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 e0d50590-a985-4e44-a737-6b32c05aee0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 724dac27-ea12-4973-956c-e4f579bd440b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 1daa92d9-80ef-42b5-9553-95cccc8ed78e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD497;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB6E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'hD497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #964 4ccaf6b8-481e-4332-b377-84b20464ce7f)");
unit.assert_eq16(16'h14CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #964 dc6dfdd0-8078-4f37-97fe-268adf6a786a)");
unit.assert_eq16(16'h0220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #964 2b721dfd-1b5a-4da7-bb36-b3228b215941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 49aaa9e0-fab8-465a-a1e4-1fc92913d59e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 9baa2e56-045f-4978-9f95-ffe49a7ed148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 30d24cb4-56f4-4e22-aff5-dee1cb70b27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 e7e52f2a-6304-4d70-a6ca-3d7036238706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 b594483c-bd32-40ee-97d2-bb562e5f97c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 433f38b0-63ab-4d16-a509-4878aed9e495)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h780D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h017B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h8E2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #965 4e17c570-2b9e-42dd-9006-e274014f4ed9)");
unit.assert_eq16(16'hB631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #965 e5fc7f0a-79f3-4a5a-8fab-3b43db50186e)");
unit.assert_eq16(16'h017D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #965 cb519f8b-852c-426e-bbdf-b95907fb2634)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 d7bf7322-f95d-46b1-9779-8168cddd7e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 9fd4f1aa-52fa-4a6e-b279-0c97d83eb92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 c4d98dd4-2eed-4a7a-9716-7123114fdcb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 b9d24c2f-f5a6-4242-861b-f16592385a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 fb94aef1-0484-4824-ba97-45ebb9c3d133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 90241f18-1f4a-4d9d-baa3-a5bf8b620f68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h502F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h321E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h502F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #966 5746151f-d64b-49dd-87a8-3c744ec1351e)");
unit.assert_eq16(16'h1D04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #966 71f19d0f-44d2-43e6-b45d-6299d33a5c7f)");
unit.assert_eq16(16'h06FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #966 96f7e782-7003-4295-8bb1-06f9b37b74c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 a5cdae54-c307-4e5e-9afb-c1096dc1414a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 f58c8934-3a79-4abd-82ca-e9b171279cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 aab5db18-4a39-420b-b857-04d79015ec9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 e58c6d56-723b-4611-80f6-6af9a3566a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 d26c7d81-db80-478a-b748-dc6e8200dd61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 551fd688-1e12-4777-a76d-887235d26520)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h60A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h60A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #967 161ff81e-e886-46b1-a001-64d2e69556b0)");
unit.assert_eq16(16'hE3C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #967 9b96c5c4-8b52-4836-862e-0e79e92f90a8)");
unit.assert_eq16(16'h0DD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #967 3a20f663-be80-439d-acf6-04f6b713863b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 1c202c7b-a7a5-49cc-b779-a5fcd49bfaf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 78233168-acce-43ce-a575-e9d37b351102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 35a415ba-ee5b-476d-8152-52b11c794ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 45320a18-ecff-48af-9eca-e8da31c9ee80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 e2d7794d-0911-406d-84d1-79bdf84a92ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 b2ba7651-62c0-42af-830c-dde8a881c149)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'hCE47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #968 c0dfd0e6-3162-4f7e-b5a9-3c409bb78ebc)");
unit.assert_eq16(16'h2B39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #968 375c34db-baf2-4b0e-ab26-4950331c8c69)");
unit.assert_eq16(16'h0D6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #968 c743c051-4b10-4c35-82ee-1ce23935d35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 126fa2d2-f64b-4083-b7f2-00064ffd257a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 b87efb85-e409-4ae8-bfa7-12b7784d9866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 edf4130c-2b5e-4bb4-a0a3-7e3a1dad7787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 c7c7c04e-2b4c-4bfc-982d-6afbd43365dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 5bccbb3f-1751-4cbf-a934-1ebad4589cac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 81ba44aa-b259-47a4-a2ad-bcfece0da18f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8BCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h62CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h8BCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #969 8b333a69-0c11-4cff-b640-d7d2a3c7503b)");
unit.assert_eq16(16'h0501, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #969 3d25a153-a517-4d07-a6b3-91797fd24bfd)");
unit.assert_eq16(16'h0B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #969 ea9de8c4-ffab-4655-9768-5271baf1b774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 843ff81f-28a7-41ca-b1d2-391cdf12f3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 12aaae90-4ca0-4786-b6e2-440e7a83816d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 7fc96297-e70f-4122-b6e9-d30330097b13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 d66d9385-d931-4933-b29c-33fc6bd9baec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 cb013f8d-9202-4b63-a849-12708f648af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 bcf7f907-5dcf-4498-9730-10e4ef4baee0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'hDFD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #970 049113e8-1e16-4913-9673-cc023d107bb3)");
unit.assert_eq16(16'h2D67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #970 b6f8f3ef-3bf8-4e0c-aee8-cbb201899f22)");
unit.assert_eq16(16'h0F39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #970 3cc8c467-3ba3-466e-8fbf-577c2c48fe57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 8a1d358e-3ded-45a9-a1b8-20be0e559b7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 3d86f6b4-bf1d-45d4-93a9-a708a8b1cfce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 67db57b8-d837-4d80-b84c-aeb6526efa36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 622395fe-80a2-44ce-8336-aea328c4423f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 9eccaf8f-54ff-4a74-8aba-900c558178dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 d940c83d-680c-4c11-9089-a4968ddcfb20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC554;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'hC554, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #971 596a320a-c841-4f1d-a3b8-2797db149028)");
unit.assert_eq16(16'h708F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #971 a263d7f0-520d-4bf2-a928-a651013cc748)");
unit.assert_eq16(16'h00D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #971 789e78a1-1e35-418d-8b3c-7024a9279445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 bdee175f-aa12-429a-9a7f-e233980e9572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 43b4ce45-e5d1-424f-ad1e-7bdacd8adb14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 9cea3a07-f776-4d39-8dad-610605184c4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 34cf8120-c101-473b-8cd3-573ae0d81866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 b76d7489-7fbc-4e82-9a5d-ddf51a37d0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 7278f2bb-6061-4aa3-8d35-fd5570117538)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h41DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #972 8f5e12b7-2e11-43b8-b700-fdc9a3276064)");
unit.assert_eq16(16'h84BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #972 95feec02-818b-4aa8-90d3-ae2568ef0951)");
unit.assert_eq16(16'h067F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #972 620b1b00-63fd-42e2-880e-9e64b127b463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 c3f62910-1449-470e-be49-d4a95d45c07f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 6da0cc24-25b2-4cac-895f-869f58d19fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 1f9b900b-6f1d-4c74-8ade-d2f981fb08c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 7afdd34e-1050-4292-b219-a9de7f20167b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 2b9ad34b-843b-4da9-8a05-e58a8f48acdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 be751016-20ee-4981-baed-1aa11fb1bcd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6813;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0010;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h6813, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #973 24948912-7025-4009-a961-cb029f3198f3)");
unit.assert_eq16(16'h7830, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #973 2ffbe136-c0d7-4862-a81b-7bf399d8b8dc)");
unit.assert_eq16(16'h0012, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #973 0997bae6-f241-4c24-b917-63e1e281bf81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 44afa59e-3135-41c9-9f17-5a1c36ffe441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 a5b25f0b-3c35-4507-9227-8481d0465015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 af65d18f-853d-45c6-a37a-4765eade11cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 4b870582-ec6f-49b6-9a02-3e93ae1dea5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 c12b40c3-a183-481e-9419-92b436ffe1e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 6907b689-3544-45b1-8b37-fe1875938be4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'hD5E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #974 a508fc51-f6fe-4e03-ba2a-5f26ad41246b)");
unit.assert_eq16(16'h5630, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #974 16071d65-2f2b-4ff7-bd7e-2c8230d01363)");
unit.assert_eq16(16'h0B6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #974 2145ded7-9282-48eb-b1bf-1dec50bef534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 a62f68f4-cacd-4bad-8f3b-c7d77097346b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 b6c71f16-c8e3-4c1d-90e8-e5015fe3663f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 cb28e9fb-b90a-4878-87c2-83bd11675055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 c4d01876-a090-4a2c-a4b1-b9e367397025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 85e6685c-45fd-4790-a439-e8d8b1e1adca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 a8c0219d-e36f-4198-acc9-e25d7dddee65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0858;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'h9D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #975 98e24a36-854c-4915-8978-0e2ec3be20d8)");
unit.assert_eq16(16'h15FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #975 2861c898-ba1d-4d69-a232-6db6aff18e23)");
unit.assert_eq16(16'h085A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #975 aeac9e75-717e-4e90-b94f-fdfc3a91ad21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 2e201368-f2c0-4caa-81c6-210395f22fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 e048c960-1f00-4cf1-b3b5-9b5df841066c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 3b1ae135-9e2c-429f-bca7-e31e51062d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 025a9a45-73e2-42cb-8e9b-dfb031044ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 808a7050-363d-47f6-b7f1-e28015e800ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 a85c67b8-ea20-41f6-a2aa-92c4141f9674)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC5A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0699;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'hC5A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #976 03b693b9-5c33-4462-a3b6-6f9cf63b627e)");
unit.assert_eq16(16'hBD97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #976 8a239093-cafd-465f-8aa5-b386d3214fff)");
unit.assert_eq16(16'h069B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #976 8461a98c-e90b-430d-ab59-b6b4c8ba4c81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 8ce26bc9-b5e9-4f00-96c5-7f758ce4a1bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 0b3843e7-a8c1-4797-90bc-9674b2a01c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 652c0463-96f9-478b-9f80-85fdd3293b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 ed1e3053-5c01-4300-b344-59bce3fc4a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 73a40c8f-3100-4496-a82e-e70d7228e594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 d9475d80-f997-448e-8e3f-dfadbb578afa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE11C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'h6B45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #977 e110c1a1-4be6-414e-82cb-cdd75666f421)");
unit.assert_eq16(16'h64F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #977 ddb71137-04a2-4c67-8c7f-dc6ad5c85894)");
unit.assert_eq16(16'h0631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #977 3e752a6c-84eb-4776-a8d8-7f3da84b8fce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 e11facc1-a5e2-4f25-ac7f-4701daecbbcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 3a5f34bf-6aa5-42ba-993e-5f111fc0ebe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 5824a545-0c90-4249-90e5-349b24bdb5d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 2bb8c816-046a-413d-a817-27ea9be7425d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 60abb6b8-f82b-449d-87f8-ad70f151f32e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 6298b613-3741-4b10-bd52-6459b8463f78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0588;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'h4C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #978 db8c3be4-39d6-4599-9b54-4e58081c2221)");
unit.assert_eq16(16'hCE8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #978 99b43596-83f1-46b6-a6bb-80a79ee69cff)");
unit.assert_eq16(16'h0FD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #978 e51dda90-cdc9-45f5-8da2-8e17092b297f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 bdfe1bae-fa9e-485f-b0a9-9a9c3775cbed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 efa52415-b3d5-4a53-9875-729bcab4477f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 36172399-cb3a-41b6-a113-6b064047093e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 45d29471-89dd-4014-9efe-870b748356bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 e73bc78d-f474-4f3b-b5c5-b1a515cb8013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 ed6d75a1-cb06-4ec3-9182-8fd3d0ac904a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF113;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF8EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h025B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'hF113, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #979 d85a8e5b-c591-4526-b7e8-2824631a7f34)");
unit.assert_eq16(16'hD342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #979 0c717449-5a52-4adb-bd0e-97757939aefb)");
unit.assert_eq16(16'h025D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #979 1c89cb9c-3435-4964-9343-9ea8cdb04d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 6edcafea-477a-483e-9c0a-d9e53aafb232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 5d881229-4e3e-406d-8877-f5d76fcc74c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 92ba55bb-1cf1-4827-ae0b-6da637f4893e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 bc3663a6-890a-4a1e-aea1-c1dba770500c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 00221cbd-b44f-4f03-b78b-a2ab671fc884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 a45d0b40-2085-4963-b7d2-54c056011b67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h680F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE82A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0484;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h680F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #980 37394e43-cc91-4439-85f3-d3e39a912c20)");
unit.assert_eq16(16'h571A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #980 9894edb9-e273-4a57-bc76-f91d2ff6879c)");
unit.assert_eq16(16'h0486, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #980 d9b61984-db23-4433-988a-78293e2cba8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 73795e01-35ed-4d9a-b375-0dc3de1124a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 b997ca3f-55d8-4a8c-bd68-6f349f95d9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 fb4cc8b4-3a8d-4324-a1fd-80d56f0580db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 e65c5538-d3dc-4286-8f2e-c4fdd5445b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 523ed4ee-1685-43de-bae7-848b9b4dbb67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 c6a2b66b-46b1-4acd-a818-0f0f1d1239ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0500;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h0500, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #981 94af79b4-c856-4fe1-a1df-d2beff15c899)");
unit.assert_eq16(16'hB4B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #981 2bf270d4-d2c2-4fba-9a4a-7196cacb2e6e)");
unit.assert_eq16(16'h0FC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #981 4b8c18ed-1e63-41c5-a6d1-fe477b6d661d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 3f86ccb3-04f0-492a-9fad-086751f4c3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 e46299cf-00ab-4c9d-b3d9-9c8ba6189e0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 d36df786-8e18-4a8c-96d1-5432768aa39d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 af78a997-d0a0-4b1b-9020-666022c4ebd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 9c03f185-cd13-43ea-a73e-a6a3a8bed45e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 c3df6910-8582-4b14-b346-555d6d3db982)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC03E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h26CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #982 caccd3be-5644-4f9a-8d96-2f6d9ecdf9d3)");
unit.assert_eq16(16'h0E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #982 2b1ad604-a859-4c54-852a-66c0597a3be4)");
unit.assert_eq16(16'h06F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #982 2a1cd2eb-969d-47dc-8578-b3852ed951ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 0c74e563-15d4-4d2c-811c-377b85c8d7c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 78dfd0bb-cca7-4c91-be88-362d1d876c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 3ca4276d-a2df-451d-ac20-1a1f1f7bbf8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 72309020-2041-4351-ac72-3948056aba52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 5f9a7681-a64f-430c-a062-f17ff0d65a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 c49e21d7-dd0b-4c61-8b7e-f4d5b637f644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF562;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h7EDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #983 36dfa967-d341-43c7-8ba4-39feba9cdaaf)");
unit.assert_eq16(16'h0A1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #983 6f25ebdb-0a2d-40bb-bef4-d58f45ac3156)");
unit.assert_eq16(16'h0071, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #983 8bd1d636-78f5-4933-879e-0e0c062f2ab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 d5d0c4c6-02b6-4a0d-abdc-6939058632e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 d16adfb0-7d57-4d9c-8b65-833b7a03532a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 2f582e31-9b48-45e2-a585-40fc4602e26a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 9c9b4e73-d0d2-4dbe-82df-d7e11069408d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 1752c16c-86b0-4d6c-900b-392335d72277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 37423c93-0b2d-482b-831e-5aa9b32d493e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h931D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'hB3B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #984 b9e07c53-f938-4a78-bd54-e0ba66b18973)");
unit.assert_eq16(16'h4E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #984 10eccfed-323d-4fb3-b5d7-60308cd26b04)");
unit.assert_eq16(16'h0DF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #984 834a413f-2efa-4c40-bf1d-5f888e6d6171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 cc75beb6-91ef-4803-aabf-699e74099f8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 9ecfa09b-9df5-4cfb-8609-abc91154a6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 f8032847-316a-4135-a9ce-bbc38662d3b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 2306de54-788e-4ef0-a4a6-0c8c5c81f06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 11406e33-ab0b-426e-a464-838b66f8b3c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 0f920369-239d-4a99-9f59-71e9789bfd92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h359D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h359D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #985 5358eb34-e0f7-431c-8627-7f4ef8107b4c)");
unit.assert_eq16(16'hF868, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #985 ba25dbe6-e863-4951-805a-a34db330f28b)");
unit.assert_eq16(16'h0FE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #985 2c55ce08-79aa-48b1-9f5c-ae5ed5e5ae48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 cfd7cc48-00ae-4a60-87ec-656fc38a97dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 21416f51-e09f-4a25-98af-fde8e3fd81d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 03acb8a3-8598-4fec-b9c3-1d71f74cc0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 22a7563d-053b-4217-be96-16a7467de9bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 84b04a29-58df-45b1-8981-41a358f2d632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 356815d8-d516-493e-922b-bb8030f527a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0973;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h13CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h0973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #986 7236f756-6cbc-4c88-8f5d-838520c879dd)");
unit.assert_eq16(16'h64F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #986 1a75a4ee-0321-41bf-84a0-14339022821d)");
unit.assert_eq16(16'h0631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #986 3822fa6a-e301-4848-a263-023c44e4d9f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 9db029db-c9c9-4dc5-a819-c9f428062461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 e900597c-6810-4377-b892-293666112654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 6bb5822b-66b3-4bbb-9b3d-9803badbc2ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 58139928-edc2-47d1-ab78-f78fb186aed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 5b9158cf-ab09-439b-8918-a60a395cd9f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 1c14d73e-0661-4193-ab46-d9640aea6477)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0885;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0959;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h0885, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #987 ae6ecc3f-bd5d-4cc6-bc5d-b40324277d45)");
unit.assert_eq16(16'hBA94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #987 5f4c38d7-743e-4b8f-a335-93f65e68a510)");
unit.assert_eq16(16'h0DF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #987 af0542db-d5cf-4013-8bcf-41418240928c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 3a5aa12c-a450-4724-a248-4a30c4328a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 a21f4017-6b9f-43f0-966a-eb603f2ce430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 41593a44-6e32-4221-861c-bd6f5958d686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 b14641f7-f43c-4e6c-80ec-3e18834fbbf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 924bcc8f-37fe-4609-a496-f26d8fe84e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 feb137bf-9213-4bac-9860-4ecd7fcf6f42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB074;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEDA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0453;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'hB074, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #988 0a1343b7-0ac5-4160-9769-41a233e1c8d8)");
unit.assert_eq16(16'hF410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #988 a39c1c08-9bcc-4d1a-b047-2c8b0d43158a)");
unit.assert_eq16(16'h0455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #988 5d6c0add-dc3e-4a7b-bb65-e7d1c4b5e082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 26f5a48a-6adf-43ea-92de-c9c4ea69a8c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 73de5587-0bc5-4183-9074-1f3a21bb4deb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 fbbf372d-baa7-4e66-9d00-a42ac092bbda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 7beb0190-eb61-4930-ab1b-6ba227a1e63d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 5263398c-ba2d-4292-9453-25c35f4e4d31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 9a847696-2bc8-43b5-b3e7-2f75067a1d7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC095;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h7EE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #989 cf73a641-0f93-4347-bcf1-1d443a0999d6)");
unit.assert_eq16(16'h7915, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #989 75a3e84b-52ce-4538-83a5-e964cd02cd17)");
unit.assert_eq16(16'h0CDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #989 6b9a3ce1-2b24-473f-b1ac-a4571cde36e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 4d57e950-4a1a-4f45-9058-f17a9fc39bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 dba623b8-9286-4384-a6bf-7496effc4d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 36ab91ce-a410-4584-847a-85df5cbe9a3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 293d00c3-dc0c-4fad-83bf-2285a88a2da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 eb2fa61c-1089-4b80-8ed9-98f44d6679cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 583f8b51-7ec2-4137-aac8-85fc53a0f4aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3CD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE2D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h3CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #990 9dd9f817-30c0-41b7-91e9-da966b4aea16)");
unit.assert_eq16(16'hF007, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #990 eadff8ab-c687-45df-8dfa-bc077c2f562f)");
unit.assert_eq16(16'h01B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #990 2e321e52-9e56-43f3-a06a-1a627edba8ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 115ca79e-5b4c-47fc-ad02-11fc3be9c51f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 e3c6a547-c902-47aa-b7cd-a59319a5c315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 73d29c02-39f6-4415-9cb9-dab8cdb5a2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 28d09e06-9543-431f-987d-67a6a06dc9b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 b796bb2c-70c3-487f-8ebd-af92e820444f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 536bb5f7-4990-4778-8a07-0e8d72d4e6e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE598;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'hC6E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #991 a5f8ee48-c928-4d77-aabe-fc3268b3aa12)");
unit.assert_eq16(16'hE9A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #991 92d4067c-8e68-4cd3-ac24-c2ba4722dfe7)");
unit.assert_eq16(16'h0D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #991 d26d478c-bad6-43de-854c-bfaeb20160dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 e9b5f226-8f6d-4de1-8e11-f83ba7ab91ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 4dba9b6d-1665-43a5-99eb-b78e8b0809cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 77806932-3515-4901-86e9-9ce9047a0076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 511c60f6-7e34-4ba6-bfcf-5c23ba8e0668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 03edecec-d308-4b8a-ba1d-030379b270d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 ce5a2b8e-36af-48e5-b670-56f30c57f762)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'hCDAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #992 6233ee4c-ad5e-46d4-bf09-3dd5854d78a1)");
unit.assert_eq16(16'h7C43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #992 573f93d7-7aef-4e7f-9928-7f2f2f7e6b6b)");
unit.assert_eq16(16'h08BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #992 f5db81a2-79d1-4e2b-a443-7abf5ef5b71f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 0224c047-a428-4664-ad86-b989fb407e72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 1f288590-3631-4421-9f84-0d1e8dc835e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 18278431-ee50-4f0b-a2c0-1cbc09818fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 1b276f75-6e14-4b9b-b504-44843d1f4e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 d292bf24-d238-4d05-aa16-461db315ce14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 138b1138-8071-4030-b506-41c4ca7b3f30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2095;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0415;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h2095, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #993 734fbf9d-a930-4b2a-a232-72be944df8de)");
unit.assert_eq16(16'h1C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #993 4a5587ce-21a4-4283-b14f-b8ba7f16f99b)");
unit.assert_eq16(16'h0417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #993 6ca40708-14fb-4960-b86d-6d981d82c9d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 d5a7d5c0-d510-47c7-8b3c-2e4fa7ae4bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 d818f24e-5e50-4d4c-b2fc-38418a39f45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 03a36d23-9f46-4120-b72f-99c12abf1e21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 fb776f47-c9dd-41f3-98ad-22eccaecfc72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 d7467602-4f5c-45e5-b3ba-2bc9cd8f2704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 9dfd7027-79f0-47c0-827a-baf4926f4279)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'hAFAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #994 ee39c0a5-df0a-4c53-bf34-ec33c4cf7107)");
unit.assert_eq16(16'h1B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #994 de521a42-6a88-4dfd-933d-9adfd1f930e6)");
unit.assert_eq16(16'h082D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #994 7c55cc56-3caf-4729-bb8f-759765844860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 8cd60255-a23a-42f5-9704-80c6c9c9fdb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 09af1856-4865-4a14-8b2b-f66d89759df9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 d56b5821-f2eb-4a13-b9e0-5261bd08e268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 fba72e44-f33c-4588-b1f0-73ca84a563bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 4ed4288c-961f-43dc-a8e8-a5978b7552d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 89d710c8-0a22-4a1a-80be-774926a23199)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB551;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'hB551, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #995 2f1fe21e-d6b6-4544-adcf-c85dcaa9d657)");
unit.assert_eq16(16'hDD02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #995 1e033d90-c02b-4f3c-a811-01fcc9b909ee)");
unit.assert_eq16(16'h05FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #995 a1af308d-0119-40e5-9be3-df977f810acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 0136a979-db41-4479-8ecd-aec805828e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 6aed59fc-45c9-48ab-ba1a-2891034be5ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 5e8c4fbb-855c-44a9-b32c-c928fa2f72fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 592de16f-1785-4ba1-8e74-3b4006665c0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 9285ad5b-9745-4972-b4f2-46d7bf0a7cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 cf59e61c-b907-41da-bf79-0de7313ba6fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC02D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC1C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'hC02D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #996 36b8445d-acf3-4fd3-9453-6c4b842abdd3)");
unit.assert_eq16(16'h96EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #996 96242253-f61b-46e9-bbd7-8ee78061efab)");
unit.assert_eq16(16'h06EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #996 7a873116-4942-4758-bb6d-eb5108c5e54f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 aad7e1dd-a83a-4ca8-a147-e2659a012794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 1cee8c6d-0bf3-4c32-87fd-21fcca54e72b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 c1fc8f5a-c375-4332-b22f-f3fb23be7e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 496d1e27-3e68-4753-84ef-400f6c484a52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 7c53d5da-6431-48db-bd37-7e6c12eec15a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 2f673c7f-a009-405a-b4ea-23af586619b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0490;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h4D0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #997 7263c945-5756-4213-9b7a-13317e6b5364)");
unit.assert_eq16(16'hB140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #997 4c647d59-718a-47d1-9009-4e324e028419)");
unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #997 ae503ddc-72ba-4b56-9ee2-4ff776e95949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 ef9b4e64-7400-49b7-b459-5cff16908684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 3b52d70c-2ed5-418b-9a0a-9f7d9122d890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 6afcaaa0-477e-4fa0-ab3a-62fdfb296ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 66923d9a-ea67-4357-9305-b8ce061e5301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 4adcffc7-1a71-455e-b569-f7399f936326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 fe910f7b-fa4e-4c55-b15b-b7d81cab424a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h790D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h61EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #998 c426f95d-7faf-4f88-aeb9-a1c78e680d5a)");
unit.assert_eq16(16'h532D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #998 5694ea5b-5804-42c3-acc9-fac1e5cdefdb)");
unit.assert_eq16(16'h099F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #998 a884ab2c-d4ed-4e9e-9b9a-764805b4b415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 abd586ec-3cdf-4337-a684-2fa849328fb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 9ee21185-2b9e-4f57-be4f-27bd5e7e673c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 05103dcb-6e76-4505-957d-386e8c5c8d0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 11902bfe-af5a-43f3-97da-31a7db930df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 8190fc04-bc21-4157-8480-b9aa1360742b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 de3e70f5-68d8-461e-b98b-1599d70c1b3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6780;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9B39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h6780, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #999 1e6b1387-481e-4e1f-968d-e944d543dc7a)");
unit.assert_eq16(16'hACD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #999 05306520-edb7-4c8b-829e-8cf5605a90ce)");
unit.assert_eq16(16'h0034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #999 4695db55-9cfb-4304-8771-47911f156417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 2e277711-f66a-4da2-b762-47ea48fc0d89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 1015c9c2-6f0d-4cdc-8f62-30cc60af63fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 09f59905-3c24-4251-98a9-8a59d23f0f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 d6b4b626-344a-4c33-99d8-49c62095145e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 5a4ddcd1-9465-465d-98ac-598d8ffec301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 25463ee6-01b9-4ae9-964c-0faaaa4875e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7CF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h7CF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1000 1a135ba3-a331-44d4-8844-d75565bdc420)");
unit.assert_eq16(16'hA68D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1000 b8208dd3-a063-4045-a33d-ccd3ddece4cb)");
unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1000 5c0c724a-da4e-4173-8779-498c092f1bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 9132e1a1-65cd-4de0-9ae9-4f4f985d6dc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 5c6659c5-de26-43b8-a4d7-cc111208613f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 c31d9506-e4f7-4167-aa0e-f0e1a9eea41e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 5643dc81-7d80-4891-8a59-831f2e202ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 aab0cb89-3a64-4614-8408-dfdb801f24c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 358d6772-54ca-415f-9c06-1c6f5988f35c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h643C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h12D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h643C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1001 135535a6-2da1-4873-a3e4-d7ac8f5e9ac7)");
unit.assert_eq16(16'h8A80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1001 6f1c06e9-4891-4fbf-bb6b-034ee5664076)");
unit.assert_eq16(16'h0ED8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1001 43b58deb-2e6f-4570-801a-bea21befe9d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 eeea0beb-55d1-4978-b467-3e43467f1dc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 0f667855-cd58-4665-a358-f62b15645ab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 8c66b14e-d8df-440f-863f-14d6ea15d928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 1cf3279a-61e0-4338-87bd-7c410b952220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 49d58d57-58e4-408f-9471-784bc49428a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 1bd8291e-9d24-402d-b1bc-c5af340dbfb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h304C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h098C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h304C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1002 16835524-a238-40b5-b320-c38495e8c0b0)");
unit.assert_eq16(16'hABB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1002 e33f2ffd-4549-481e-bb7f-0a3426413424)");
unit.assert_eq16(16'h098E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1002 2fd8dbd2-c99a-4593-b45e-aa1d0e22c4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 65c446ba-bbe3-405d-947f-ed4810622946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 46a3af8c-44c2-49dc-ab0f-d0375b4ed20d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 91c72659-0d47-47c3-b924-6887ebc0d170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 58006e37-b370-43e8-8355-0131c90cff04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 8ac075ff-db5f-408b-ae86-34315556fc5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 279d9aa9-60ac-4598-9c54-4ecaf2dbab86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE126;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h86E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'hE126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1003 e821045d-a292-453d-9762-f1af1f085b61)");
unit.assert_eq16(16'hA603, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1003 97f92b82-895f-4ed6-b6b9-0dd593ce730d)");
unit.assert_eq16(16'h07CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1003 70a1779e-cce2-41d6-b265-2d440db75733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 032c9aff-4e9a-4615-9be3-d0b250aac81f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 287ba7d2-19e8-4b9e-9ba4-b57c7d5d518e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 d6290db7-a3cf-4791-997c-00daedbdb14c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 4bd569f1-ba25-40e6-a371-7c06de537bd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 4887fb77-0559-4bda-a433-5fbc41396380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 c518aeba-7c54-465c-a503-ede6c1ad63aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1838;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h042F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h1838, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1004 2156bda0-fcfb-4532-98c0-9c69bd348d44)");
unit.assert_eq16(16'h1A7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1004 a6f09fe4-51ad-4a5d-b107-c5776c4d41df)");
unit.assert_eq16(16'h0431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1004 dd27b0d6-dd83-47bd-88c1-9f1a815bbd58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 e2bdc4f0-52ea-4b08-912e-9596ab52a8ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 b1e2a537-a6bb-4e09-bf65-e1c996e48d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 c9f9316e-c46d-43e4-b685-7820de975376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 3fa96d25-b524-480a-817a-ec2bafe05c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 c4182181-736e-4f4e-8aff-26b67094df2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 8a668228-81d3-44f0-955b-acf031574059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6635;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h022C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'hCA67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1005 9cc45bc8-820b-4a5b-8e12-aec0caf44dba)");
unit.assert_eq16(16'hB95B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1005 6d0d1218-b3fb-4af7-a76c-8da6115ac359)");
unit.assert_eq16(16'h022E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1005 94111407-c612-4894-86e1-3ad46b88a60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 f6658a26-c4e9-4124-8c13-cec5bc3f5cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 f3ba8f44-bf7b-4fe4-a4a8-59744d6f5173)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 0a3c074c-b7bc-4ef1-adfa-1236358e396a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 f2ef9ef6-d291-4dc2-bebe-57f3aceacbaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 06755190-2d92-47d8-a0d8-10e380893e56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 8df830f0-40ef-4b18-a78d-2383d59a6077)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h5E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1006 32e9389c-0611-43ab-baa6-fa4268347d60)");
unit.assert_eq16(16'hDC4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1006 d5fc410b-2fa4-4127-8eb4-97b339d27339)");
unit.assert_eq16(16'h0DD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1006 77473e0d-bdb5-460e-9705-21fcb3505a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 25b10bc5-fb0a-4966-9a1f-fd428b6eaefd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 2d3f723f-7be9-4887-bbf9-122f561e6c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 919846b3-48bc-40a7-acc1-0d325dc444f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 7a64d6cc-e0d2-49f3-9ac7-63a4d8821aec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 2443baaa-6257-4234-a12d-49245ae1dda8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 8f05fec2-78ce-42fe-908b-30231aaa8a9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h16AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h092C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h16AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1007 04808e00-763c-4e38-bc78-0320d17562e8)");
unit.assert_eq16(16'hA390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1007 24ad68cb-8d8f-4684-97f0-135f984e4ce6)");
unit.assert_eq16(16'h036F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1007 77571e41-584e-4676-91a3-ab3e3b8688ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 43683303-5ef1-4d20-b315-741ec91b9d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 e7303bc4-3dea-42da-b344-230b1580c570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 7ec09fbb-11e1-4f69-a059-8960b3100558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 5f8a2d45-e911-4add-8a9a-9a9c3416dde4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 34274336-4f2b-4e56-b1c3-c05bb1d4164a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 54e18009-2f56-47ee-bcb3-0f1420e6efcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEEC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'hEEC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1008 fdeefae3-5af2-48e4-a732-c79ea103ceab)");
unit.assert_eq16(16'hB023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1008 8aaa5986-4d4d-4a13-9d1c-fd20f13acb3a)");
unit.assert_eq16(16'h0EA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1008 4475869f-c672-4fcb-85a6-cef515868e38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 ee52af6e-bdb9-4805-9200-a0d54bd6c49d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 ea0f881a-9d4f-405f-b0ed-c66e31bddd19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 04d353bf-5656-45cc-89e6-77a13485b7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 99a2c7be-276a-46e4-8cb2-87cabeaab582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 10c6246d-79d7-4ec9-8323-f9c1d962d9b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 e66932e0-591d-43fc-8a10-77f311f49fc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h314E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAEF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h314E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1009 8eb8cc6d-5656-4fca-9162-7a2d468012de)");
unit.assert_eq16(16'h7943, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1009 2f6d5521-f1eb-45c1-8b86-ec8460e72780)");
unit.assert_eq16(16'h03B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1009 149d42b1-f38f-4d15-a535-82389eb30e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 5eb50d0b-0936-4b51-807a-e00d4646d16a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 575a8b06-5d82-4a71-b87c-f232cc2f2da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 bf925d18-9815-4f93-813b-6c64967d0db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 1c8c85d4-e9b8-48e2-a07b-4a337462f922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 6f231d58-05e4-4589-adf1-215738bab552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 b331de1b-6ed7-4c86-8a15-35c8b3fe3ff9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7EBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h4C12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1010 b4e209a9-0619-433f-a17f-664b8402ea63)");
unit.assert_eq16(16'h3116, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1010 e9794d1a-cd59-45c0-9d96-5a88c1801513)");
unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1010 47b2dcf7-21a4-4b62-9f98-e734c8733478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 a185766a-0357-4054-ad90-737eef9bd0ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 91a950f4-2f99-43c2-a9d1-2348499f4ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 6e900c01-b31f-4f83-b7ee-dcdb7a57cfd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 17d8a73b-2e7f-40be-989f-116603229808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 a5acf3c9-9361-429c-81af-92a10dad9aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 032268ba-8e6f-4895-980d-f9e40bebc873)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC198;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h12BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'hC198, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1011 cdbd6fcb-4bf8-41e7-9464-2bb6489d4861)");
unit.assert_eq16(16'h3930, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1011 cb76ce7f-48f4-4861-9d65-cc78c518ca9e)");
unit.assert_eq16(16'h06CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1011 284f9976-e8fb-4fd9-acbc-3f4cf0db9ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 06a49cbd-fd65-43dd-a469-b35cf97c209f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 7339b37c-4545-4aae-a273-a2fa64fe3b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 2f5b1e78-b571-4a99-819e-d7fbfa776dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 730bd8cc-beee-4928-a0cb-3fe805dc1d1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 cc5bd70b-3bad-4339-8349-262642ebaf65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 30b44382-c6d1-4ec3-918b-9bf41061e178)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0248;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h5B32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1012 fe849d8a-e943-445e-a6d9-a9d81b622469)");
unit.assert_eq16(16'h42E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1012 e636d428-9649-4c92-818b-fda65b1f7f1f)");
unit.assert_eq16(16'h024A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1012 6f69feff-90e3-472c-b319-6780a657e288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 88d36971-dc76-485e-ae2c-b6aebb1f2bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 fb03c26b-0139-4372-b69e-533b392e233a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 a933fde2-616d-4389-b27d-f9cbcf7d5966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 07937b54-de42-4bc4-9e7e-e49fd8bd1fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 8d69861b-e328-4fdd-b145-db9d59fbae92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 7a1f3a89-3a54-409f-a0c1-24d6d93b5387)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h2EC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1013 905555d8-0c5d-41e7-8ff6-adf9725f90e9)");
unit.assert_eq16(16'h10BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1013 61a67cf2-77ed-4aa8-b871-cff18ab63587)");
unit.assert_eq16(16'h0BD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1013 650fb8f7-1587-42fa-b837-e9c561d39ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 20ed0943-1dcc-472f-bc1c-8b16a7352e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 3ad4864b-edc3-4144-ac0b-cf1c31544be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 72b53d65-bef8-45c4-b4ac-cfd3c07a3293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 4a5aa892-a091-498c-b226-1503eb33db5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 c65ae0ac-2c98-44bf-a124-050b7a9eb8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 0459fbf7-0b36-4252-85ae-28f8bea48c1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1CB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h5F2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1014 c0e9e211-db5e-4d85-a906-04a60fe06f9b)");
unit.assert_eq16(16'h43A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1014 5c84d4e1-2a0a-4826-a3f4-8f41d3b9234f)");
unit.assert_eq16(16'h0FF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1014 b3d7506a-725b-4a0a-8dd3-8dcc2019bcb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 f3e3eec7-6723-4587-a202-05fdc6aaac59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 26ceea7c-b499-432e-9704-96b6c743109f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 9512baac-9d38-40d8-8567-fb90a1e01d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 165023da-65fa-47bc-8437-308a3099453b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 b84cc232-21da-4116-9508-2ca3c90a8d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 8df070c1-d57c-4cab-9de5-41ede4cc6856)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5062;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB056;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h5062, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1015 9339b12a-0269-4bd4-a418-2e0a37016ab8)");
unit.assert_eq16(16'h5327, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1015 661531d7-f7ae-49be-a4eb-f0d230dca25e)");
unit.assert_eq16(16'h054F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1015 1d8312f9-0bf2-453f-9301-7d28ccc74f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 26133887-7921-4c0e-81dd-d0f6436158c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 c4729b35-8b2e-4b58-9163-eac80cf121f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 db1b6cdd-6a86-42e0-bc8f-dbe824e055b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 37f6bd83-9384-4123-854e-949aeaec9a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 a3fba7ea-9cf1-4d49-b9d0-b68616e3098e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 8b73fcc8-aff6-4083-a407-f92796090676)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hACD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC54B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'hACD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1016 21363dd5-248c-4f45-9d20-be28934f877d)");
unit.assert_eq16(16'h0317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1016 2327bc05-ddf6-4b82-a813-01bf299f4dba)");
unit.assert_eq16(16'h0280, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1016 03cc911e-d1ac-4fd0-9821-3a214f5b80fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 1817c558-e411-4fb2-ae0c-750270dab393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 b19c9411-5c23-4980-84a3-3128e1a0c96c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 a393cef5-6142-4f9a-9fa9-0a8bbd4435c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 5c45e424-aadb-4065-b7be-c01721f8076d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 d04b059c-52b3-4bb8-b88c-d6e1215186a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 fe44c4ca-7c1b-4672-833d-5d235c128345)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF4A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2437;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'hF4A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1017 6ca0b776-7eb2-452a-ad32-c4996af2a615)");
unit.assert_eq16(16'h6CDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1017 f7a339c3-c882-4553-9e77-99d1f6e2e655)");
unit.assert_eq16(16'h05FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1017 99d2f956-914a-449d-a9a1-4a2e28b956a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 824e936a-2639-4671-b330-49623c433e72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 851dbffc-6470-4cc9-b627-05037ad74988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 ce54462c-9046-4ab0-a8c7-cf2aa5e31fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 bd6d3159-429a-4878-aa51-623b46957d59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 5a1954e2-1f12-4379-922a-a089e1fc2243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 d592e802-54f0-4f50-84ba-f50fa1ed1a13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA29C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'hA29C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1018 82e5eea8-037d-47d6-b21f-d8fa5aba7695)");
unit.assert_eq16(16'h6F62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1018 b19d3f14-e0a8-497e-aaab-a853eb2f484c)");
unit.assert_eq16(16'h09CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1018 9fbad734-1586-457d-9233-37e4a7540fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 3d6b50ae-7cc1-4f8b-a04e-f74e254dc122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 d99c1ca9-9d2d-4011-b47f-db8b2e8a6f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 ff990c6e-785c-407e-b7fb-ff4219a70efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 10608755-8dbb-43a9-9073-dcd07f72a95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 343d4ada-ac61-4425-9a7a-04e2f31f0fb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 c7713250-e2e8-44c1-9e30-9cfa0a88eb77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h2E5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1019 d0e11e85-2b37-46c5-a824-50d2111e2bea)");
unit.assert_eq16(16'h82AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1019 3e1b09b5-bf74-4341-9d6b-135ac731c9a7)");
unit.assert_eq16(16'h0E86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1019 7d1c79fd-e6b6-4c3e-bd73-d3311a46dcbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 e9efcbdb-6320-4c0b-a4db-62bce02f6972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 69f10fc1-4d9d-4f73-bbdb-94e1c34793c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 588590e4-41da-4eb7-af49-d175f1d2a734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 a392d008-0cb7-4f7c-a5bc-f2ab14db8dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 96f9f8dd-9775-45a5-8d15-fbba98a31993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 800cf165-2af2-4d69-a81b-37ea512944ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC09B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0188;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h1D5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1020 ef6b3068-0deb-43cf-8d74-435fc6928146)");
unit.assert_eq16(16'h4BDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1020 5ca6184c-cbd2-4845-bad7-e6dc7af98da6)");
unit.assert_eq16(16'h018A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1020 c88ce635-2800-41e3-813a-924acbc39f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 b58984ca-fedd-44ab-b656-0697e9560705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 c623c29d-fe59-47f0-802c-91f71f036ffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 2fb648c5-06dc-46de-98d8-32c586a0221a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 cb4b618f-88a9-4e5e-af36-62972ea2f462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 8153ce3f-58cd-446b-bf2c-e064c48cbe11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 50704278-694d-4630-aa20-2db4c949401b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4043;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE9FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'h4043, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1021 8e131657-0773-439d-9f9f-5b6f721fc673)");
unit.assert_eq16(16'h1AAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1021 24c8a725-7e8f-4b69-bca7-bda204a913d5)");
unit.assert_eq16(16'h0B2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1021 e0fedca6-9507-4c5e-9f59-999f339b28de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 fac28bb9-636b-442d-9a43-f279e8c6908a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 fef7546f-2b31-4a00-9554-a2104346483f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 219b0219-764e-4e31-be8d-7f1ed1192b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 8769533d-45e6-4192-b3a0-52f768003ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 d5c664cf-eb07-4743-93af-3cc234a9b650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 92826b1f-0cb2-42c8-9515-8c1cc499ba46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD3F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h33F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'hD3F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1022 245e1e10-ab2a-49a0-be13-6bf20bf9b531)");
unit.assert_eq16(16'hA976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1022 ee778ba9-b50f-4e12-a1f5-5a31c96a8afe)");
unit.assert_eq16(16'h0A13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1022 fce1e9bc-5afa-4c21-9723-f30e37f7b833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 2def43c7-30ad-413e-b1bc-76518d5a49ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 53d89579-bcfa-4d6f-b063-0e01fe04485a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 53b540c1-0d88-44b4-a906-73000381173f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 a5792fe3-023a-49e0-ac14-ab651c8b6ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 30c0b8be-bf67-499b-93a2-0dda1ab6ff8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 d3515c43-d0e0-445c-88bb-2154936e7701)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD860;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'hBF16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1023 ddcd813f-f923-43a6-80f6-a490149dffb4)");
unit.assert_eq16(16'hE546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1023 e06a17a3-0e04-4186-be63-140ea5558149)");
unit.assert_eq16(16'h0140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1023 e38f49bb-0ba9-4126-aaf0-623088e14202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 dfd31c36-a3e1-4b9a-8da3-fbc0c4b6576c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 64bb8019-ce1f-453e-a2e3-f75ad35744ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 012daaa0-a2ec-4258-a3c5-12afea414d54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 0853ec70-008e-4109-830b-c8b0841df59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 d87fc9ea-9c5f-4ca6-83c6-67aed8be5f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 e6956684-b4f5-41ee-9fcd-becd314058af)");

#(CLKPERIOD / 4);

unit.finish("ld16popixiy ('POP (IX|IY)')");
