unit.start("alu16incdecixiy ('(INC|DEC) (IX|IY)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEBAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'hEBB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #0 2b2be1b8-f216-464d-92c8-13c2f6dd62e8)");
unit.assert_eq16(16'hD2BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #0 469c37c3-ae9a-4d12-bfa7-245b22a98d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 805060ab-5048-4569-bb90-990112c208ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 9bf0b2ca-6bb2-46b2-8562-735768dcea55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 dc381be7-22dd-4bc7-b60f-d95a950fb32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 36a472aa-23d1-4ff9-97d4-b796ed39402e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 2c73392c-b79a-4215-a073-e1bd612d2323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 e154abb6-a036-4899-bcf6-0469abe2c3ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'hDB46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1 73bea87e-3411-4546-a104-464b7366f9e2)");
unit.assert_eq16(16'h8D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1 2565dc6f-00d5-4484-b5f1-15fd02a06ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 c7127d38-797e-41e1-8989-9673a53ff19d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 56bb384c-bdbc-437c-914f-5fb54c6b0e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 5c9a1c71-7bbc-4a1f-bc9a-235c0e207599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 5c5ae304-0c65-4792-9ff5-7d3700603010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 fad53fa0-d7c6-4474-9f7d-84cf4a1586b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 e67d3f85-817f-40c0-a5c7-6d945f2ca43c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8348;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'h8349, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2 b6e6ee43-d78f-4c60-a687-e9425331c8ef)");
unit.assert_eq16(16'h3EC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2 f089d77f-de38-4cf8-9a47-6f158e66451b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 b57ca838-b5dc-4742-80e0-be382effe954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 a81edb7e-720d-44b0-bb67-73b07c71085c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 ef3ca610-b44f-477e-8d44-203e7c6acab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 5abdbc8c-6c7d-4afe-a50f-76dcb47e699f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 62454203-2867-491e-ab76-2d2115336897)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 cec1411f-4c43-43b2-839f-ba44e3d7633b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h77B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'hA7CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #3 26198af6-2ead-46cb-bd58-f79e8e396ce7)");
unit.assert_eq16(16'h77B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #3 4924fcb9-37b4-4471-a391-ad98c57a5032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 1a5f27cc-7a77-4d20-9e0a-0b62bd5717e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 5a801d5b-99ae-4770-ab60-38846ec40ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 6fe81230-5b59-4cd0-a06d-9b3fa5dda0aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 2f264157-541d-470a-8d63-afea9ebb5eac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 78875e6f-79d1-4d16-9b12-d7b7710b4501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 657120d5-0a00-4b78-9407-d59cd0686e49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h59AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #4 8758680e-9540-47ff-bcae-a29329d47cf8)");
unit.assert_eq16(16'hE7D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #4 45e9e459-1f0a-4cd0-a5ed-ce6a1d0dcb94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 3aba2997-8b97-45cc-8d67-4607288e6fca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 e7fe31fa-60ca-4239-86b2-3d4078213669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 34c2a57e-7c9e-4d72-9cf1-1617b98eff0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 3168675c-1a65-4753-842b-d7dceca7c413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 a1391419-07f6-4b5e-963d-0f3b5720ae95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 49000f30-573c-4e41-8170-9caebd9929dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD778;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'hFB16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #5 fb5917c9-acf8-4f43-bc85-e7e3488974bf)");
unit.assert_eq16(16'hD778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #5 3d3bd40a-932b-413f-902e-66eabbe12b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 893ae6ad-0a6f-4a07-8dc4-5b2daaace30a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 8581e2ad-f1ff-4e09-ba31-45ff1a64e18f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 2f1153c0-4e3d-40af-ac1f-546d7aafceae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 ff779063-d377-4b8c-8965-aae833b245a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 1aa0a5ff-911a-4d9a-ac7a-7858c9b5fbc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 22d81951-bb8f-4ddf-aca7-88ec8aa6863e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA00A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'hA00B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #6 62c3d257-b3be-42e8-8f21-7a0560292b84)");
unit.assert_eq16(16'hCB98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #6 c96e41bf-c378-499f-8788-77a0f391f718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 267d8934-6866-4539-bc88-d20b48797251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 e46b55c1-c2a6-4208-b2cf-1c8d0bf5a2af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 09cf6c67-2946-4e01-855f-5534e6eac948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 ca7f1594-11ce-40b6-b2db-a836994d9b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 bfd123ad-46d6-47a5-a3a5-b4ee48e79a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 f29861e8-ffe6-4a04-99ca-03f5ed07e8c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5385;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'hBF98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #7 1c9dea77-3a23-4d6c-9007-f3f60bd2c66f)");
unit.assert_eq16(16'h5385, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #7 1ca01d6e-ba9e-44bb-90ea-c624e41acf2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 14204abc-1d87-4494-9960-6bb5c6b02fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 07f4b53a-c80a-4aaa-8ac7-e43b02dae4c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 f500094f-663a-48bf-abeb-85b71443fa19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 cd0ccaac-9557-45e5-baae-81c6df7ee3f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 62dd6fd7-7c93-49e1-b602-112d080b7bff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 49bb4208-c8a7-4f12-b488-208328ab9df3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB5E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4371;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'hB5E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #8 1ae9f92e-0dc5-484c-bd79-79ca863cd50b)");
unit.assert_eq16(16'h4371, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #8 e6aaed67-f875-4395-8631-72c78901ba1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 e09a6973-f9a3-4699-882e-9d235e81761c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 2a374073-a9da-4974-8b5f-f3deec701b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 58adee1f-e387-42bf-ab2e-abf8a51ee874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 653fec43-d1ee-4d8a-a8c3-64893b51b66c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 3261bccd-a299-4576-950c-ebb1b515d6b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 d6100420-d673-4ac6-a1ce-55e33f9d120d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1176;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1151;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'h1177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #9 2308d019-1489-4233-8347-e4b702ad9ac6)");
unit.assert_eq16(16'h1151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #9 34f60210-e38d-4376-8994-d28206b0a643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 5e02d734-a785-43f0-afdc-94decdadfbc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 0cd6468d-7b02-4b83-b66c-5700c27e7aca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 6eeb16c3-5689-4bdb-ae96-005ed07ac8c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 3c8f193f-7d61-4c37-80a5-fc97276a7592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 a2db6703-392f-4b98-9bbf-947d04e55abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 d2c5edde-3cd6-46b9-b902-2b8fa6a11ab4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'hAFFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #10 e674e343-26c0-4686-ad67-256f1a02646c)");
unit.assert_eq16(16'h5F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #10 bbe6b5a9-46af-49ae-8978-dee8ebaf1455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 a421954d-e7cb-4bf5-9566-5cbfe821d1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 9058c50d-b97c-4471-9805-e485b4a7f0e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 106c70a7-5222-44cd-9179-d150fb8251f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 1abdc7ec-dc6b-4c20-9ac6-f91be0579351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 270139d3-9a73-426a-b0ad-f87a64b1ea01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 a29fa4b7-6528-44f9-ab96-01ddd0e98834)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h27D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h3A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #11 30448368-d62b-4f8a-92e4-4834f57883e0)");
unit.assert_eq16(16'h27D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #11 e90ae9a7-fade-417c-8604-d525868ca985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 6cac2875-4629-4b9a-807b-607fc60032ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 564fa85b-ca2d-4578-befb-d7b21dadbdeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 f463adb0-ce47-40d5-bafb-1099212be6b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 e414f389-4385-4654-b36c-fac54ee3ee23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 559f1312-cf0d-453e-a922-7c9a702023e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 acfa7375-e961-47d7-9286-0b1806f67429)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h500E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h758B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h500F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #12 8f010d9f-e5c1-42b8-a417-9febe0516f2f)");
unit.assert_eq16(16'h758B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #12 b1ae1bb7-b4ae-44cd-8288-430b615d6894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 84afbb18-59eb-44f5-af93-248ba7bfd646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 2decb9f3-d16d-499e-a968-505655f3361d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 b5b1beca-c3ec-4aee-a8e1-4483a2fff226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 29d55564-705a-44f6-ac96-80de856da44a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 f77c8d0f-0ffc-49dd-bd36-0fdc32bc55b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 6b768307-c4eb-4b0b-a62e-b1aa0453ad2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8ECD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h8ECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #13 c6761c3b-519c-4572-8bf4-3f1dff02a166)");
unit.assert_eq16(16'h9F7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #13 8f98de58-7fdc-4424-84fb-0a8905193732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 f1e70ec1-398a-4e32-b9f9-cae12c8c077f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 00b6fe92-95d6-484a-8fc0-756f33ee291d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 1db3a608-545f-4863-9105-8b2ba8ea1678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 8df32520-6710-4618-a6a3-b39f91a60915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 adf83d07-6173-4cef-9ad2-9b2b4936c81c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 a28d74f7-cf03-47c9-a064-aec34c6d431b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3666;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h13E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h3667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #14 09282c76-1b05-43a6-a09c-9d866de28422)");
unit.assert_eq16(16'h13E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #14 b655b72c-6761-4604-a360-b9a3f525dab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 21299781-e567-4358-8e01-e1e6229bc08d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 922dd524-01d7-489a-8604-413e8cad5278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 c5e88783-c7c5-4998-b5b3-c5de009ebadf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 641066ff-24fd-4d26-a19c-2978e3861cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 403cc171-9fe2-4471-a718-d38875f858b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 07df71b9-5314-44e1-b298-5718227ca016)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC99C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC138;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'hC99D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #15 0280d178-0ac8-458e-ac63-495e91934301)");
unit.assert_eq16(16'hC138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #15 dd448851-f63d-4f9d-bc4b-e7929962ade3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 f6c0bf9f-1d75-4736-9abc-cd067fedd0f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 3e0576f2-6ebf-4d44-a33b-7bd218f105a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 558b622a-d826-47f2-8461-f6011036ad01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 b1c2a18a-4334-4303-ab4f-30b14958bccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 f345bf6d-dbc6-434e-ba49-86fbc79244de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 b0887256-a998-48f5-904e-d4ffb665e83a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h180C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'h180D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #16 4e438203-877b-4190-84f8-dacd64c59783)");
unit.assert_eq16(16'h50BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #16 2eb3244c-a998-452f-8ce1-2e7705843314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 887cdf2a-e0f6-43fe-a1e8-f6779db1e8ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 3e4d0d82-3ee3-4514-afac-762259791f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 2ea52fee-9380-462c-a8be-974c3e87860d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 b7e09bf2-a012-491c-a175-85bb7825b034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 ee6df4f2-eb4a-4190-badc-57a047f25447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 fb5ea8c2-4ad6-43c6-8bf4-9c26b0906ca4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDCF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h6FB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #17 eb88fe6c-3d12-46b2-9b60-cabd8b28f101)");
unit.assert_eq16(16'hDCF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #17 b0044219-57f3-4fd3-8863-bb9434e2652f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 a41e35e0-e105-4c87-84c1-887e22168a6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 f36d3436-13b0-40f8-88ee-c70f986a2a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 a292dcdb-bdf8-4cac-a9af-3d4218ff7a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 31623329-166c-4b1b-9637-6973c9a42e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 bdf842d1-3577-4038-b10f-1693797783c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 bbbe1e9e-c89c-4a39-8ae8-f8b7267bd251)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE27A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'hE27B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #18 5c0c25ad-32c0-454b-8615-740838300571)");
unit.assert_eq16(16'h4DED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #18 41fdcb5c-1ad8-4085-b3d9-a2b76580f74d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 5d0a478b-86e9-4b77-9376-c1f4ff9a2f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 ab0356aa-981e-44ad-bf46-2317b1fbef84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 131b97da-5252-495f-8746-0604ff670ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 b26228c8-b37c-484c-af41-cccdc003d128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 6eb094f7-1fbe-47bb-8656-4738e7eea66d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 2e8a60f1-8434-4d2b-af07-df3018e88108)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h871A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h59C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #19 d00881ea-88d9-4eb5-8566-35699231cdcf)");
unit.assert_eq16(16'h871A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #19 4cc68721-a9af-4874-bea9-0879e1e72a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 9f9f2bad-f83e-4903-aad4-e53c29c5fbbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 45952411-60ee-4f6a-b609-a2cd55b656af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 fda0e179-812b-4cb2-81aa-fe6ac538c028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 04b83067-e47b-4f16-9349-76e54f0fc66a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 f63d581a-4693-43d9-9123-37a210b67b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 6adbebaa-dae0-430d-a19c-55b1f36ef30a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8324;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF98B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'h8325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #20 c2cef2c5-825e-49d1-b4d8-1d852631bf5d)");
unit.assert_eq16(16'hF98B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #20 2693124b-ebd3-4316-ad9e-4f9dc114265c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 2896db8e-a8b5-47b0-8398-ceb2691ba97e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 32173c7e-b7de-4b4b-803e-a6a4645cc034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 dc9a0485-94fa-41e9-8e42-8363295b3ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 24aebe1a-f611-448e-8b83-658a12998510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 80c10cbf-c128-4f34-8d9c-39027f89f7fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 15c83548-9979-4167-a13c-268d8ef0bee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9128;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'hCF81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #21 ff3db96e-78b6-4068-9489-343f24bbfd67)");
unit.assert_eq16(16'h9128, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #21 016eb0ca-10bf-416f-971e-0c4f1b3e29c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 b1f398fd-d75b-441d-8fdf-f20323a4ca00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 fbc0f56d-e117-43fb-927d-beb41b59c273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 46254ea9-40c6-4a2c-9152-d1627bbb62fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 7986f970-65ef-4519-ba77-0b5d0be5af9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 7f4085dd-e66a-45a6-903f-93a0fbd244ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 1b495830-039a-4fd9-aa92-ee8da9d79667)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE539;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'hE53A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #22 eb98928e-06c3-44e6-a185-52c161287663)");
unit.assert_eq16(16'h3B37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #22 7c1f66bc-de1a-4b64-af7f-08b8e72698d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 57275343-18a6-4a6e-be66-ddfecdf8a269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 3fb624e2-fe94-4802-93fc-aa21cb1f4dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 18b22193-916e-43bc-b2ef-8411c19c0144)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 7fbe736f-0072-49e1-b149-615bd0d66266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 84a14811-cbf6-4e1a-a534-1bf3820147c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 658a1a28-449b-4f23-a88c-f0b092d90fcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA409;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'hA40A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #23 4b8997b9-22bb-43da-aa4f-9493d254a537)");
unit.assert_eq16(16'hF9F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #23 e9f885fc-ea62-4401-9302-a8e82a7a1d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 264b188d-386e-4148-9f6d-b7ffe9db50df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 d5b98c01-c849-4981-90fd-4773fd3ae21c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 b9544279-054b-445f-954d-37c06a4a3a48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 0341f211-946b-4151-9a67-ec39807622a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 29310bf9-04b4-4715-89e8-201edd4b479c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 24350cc5-fd04-4dda-997a-fb61ebfe8f57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'h0B2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #24 f7cca9fb-3f9c-48a9-a01f-5375130ee99e)");
unit.assert_eq16(16'h90EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #24 5f58410b-893d-447f-a51f-dbfc37434c7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 7e399593-5481-4553-be0c-0342e77e5d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 db8e50be-0554-4f18-8ce5-cfd925ba15a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 4c976b88-4a53-4c05-80c7-cca8af7dd7db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 a74f43ff-4991-4263-9ded-994e1f63e411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 4bd00dc2-ba39-4842-8190-64e40b0f5928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 e0702802-d362-4434-ae77-9a1af256cc52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'h7D22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #25 b343fe30-a5cf-4f59-9689-3d620a76584e)");
unit.assert_eq16(16'h36C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #25 76c48c6d-14f1-446c-9b17-968178b991e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 df6aab1b-c079-4993-a42d-167bbeaff9b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 fec64853-b171-4b26-b6a5-02bea666bb35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 33cd58ad-57ef-4a03-9464-78d5aa5708e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 68bb594c-49e4-4762-9cf4-68c46e5225d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 ea2bfb49-f7ab-495f-9911-347029a99d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 3abb1709-20f9-42c5-bea5-1261616bafb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h812D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h812E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #26 97de945f-34c1-44d7-a7bf-f22330f54513)");
unit.assert_eq16(16'h6C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #26 73ba21b7-9607-4284-8fdb-d5a403c5a06e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 c61363df-6a1d-4d26-92df-ea22f0c65352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 cb40ef23-6c3a-4a9d-8607-bca1e37dd44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 bec2b9bb-7663-418d-86a8-4af3e8343946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 3d30f0d1-259d-4abc-8f00-d8f042c96634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 81493f6f-1b26-4ba8-b4eb-edfb9138df4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 b69c3999-25aa-4267-a9d6-50cb1ced5b79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5BFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAAB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'h5BFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #27 94142faa-ce03-4425-a7a2-690d0a20219f)");
unit.assert_eq16(16'hAAB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #27 97e527fd-62e0-4f12-ab4e-005927a55981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 20f75bad-c731-45ec-ba3e-641e35555a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 eab38269-1b18-483e-b6e1-52754eafb44b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 4ed1e4e8-b366-455f-8cc2-88a4b4034cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 f174651b-fd00-4e52-b700-987d8b7eedc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 31ff2ba1-811c-4737-bc2b-c6d7f8f93f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 5addfa16-94f7-4bda-b2ca-1fd905615000)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE459;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'hE45A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #28 4ae1122c-cb23-488b-94c8-63e7b0364f40)");
unit.assert_eq16(16'hBAE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #28 c27f3b1f-c155-4b46-b9a1-517a2947b33a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 117464ff-dde8-46f5-83e7-1d1d44eee79e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 25276312-bcbc-4645-a4b3-658385ce543c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 d6320bab-bf8b-4b05-93cc-569018cdcaf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 cd3ae813-5902-46a8-9daf-9cf93163e49f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 ab7c83dd-ead9-46ad-bf98-d4b1aa862955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 101e0a28-c977-45c3-9992-e0017803aebe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h23A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h23A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #29 bd48550d-8f8b-404f-8f81-52f9661cf588)");
unit.assert_eq16(16'hDE6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #29 41a40cb7-9d0a-44b5-99dd-21c041213cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 77691fc5-a845-449e-ac08-09b50137f2a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 584fb51e-7f4a-43e5-b129-27451d45e0a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 8fb8fec8-02b9-469d-a039-c747c6c14a01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 a2570300-acc9-458c-85c9-39fd8ab6656b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 390c6055-bb29-4810-9e7f-05957b955480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 a6d43f0a-63f5-4b66-ae25-a6b3f0616572)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'hA9A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #30 b4b1beb4-ede1-430f-a80f-329018e22ab0)");
unit.assert_eq16(16'h1D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #30 4a34e7a6-a5ae-49d3-b4cd-c4776d7ae636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 93a0c845-4068-4007-bfd5-f60a5b826782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 dd7514fb-4def-4d22-9b0e-70cce85e177b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 b7c77d04-3769-4a83-a9cf-b306b1626314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 840d9381-c3d7-431c-b80b-9ad19c296338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 c97a3571-b7db-4717-9af4-ed5ee6740d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 5cb2e86b-0609-4289-a596-cc4482a1dadd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB7AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'h06DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #31 91e32d3f-218f-4d5e-81fd-07473cadde30)");
unit.assert_eq16(16'hB7AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #31 0f439b9e-36cc-4a06-8d68-054f0ae98642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 a5c7a264-9e71-4440-80fa-41f5261dfd2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 f3d9d31f-5832-4217-80c3-b3604799587c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 e09dcc32-95ca-45e0-a708-38adcabb582f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 20a37394-00a8-4c37-8761-116d2b426e42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 ba3ad31c-b8d5-44b5-9f70-9c1d650c8cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 00755f6a-0867-4698-b118-0decabccab37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF689;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'hEA52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #32 5d75cd89-63a9-4ce0-8e8b-01c34da8852a)");
unit.assert_eq16(16'hF689, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #32 1f44a473-bc46-4413-8d6f-bee8892a3f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 decbc437-9046-4492-b990-71cbce8873e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 71036578-9a3c-40ef-b19c-25fe71fe9356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 22755295-dbf6-46f9-a158-cffbd60502a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 908afc15-6e2f-4340-b794-236f76acb72f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 45454e55-3772-4b71-ba31-999a380163a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 cba3c69f-3d97-486a-a11b-88272a911bb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h4F5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #33 41b95542-d94c-4644-8885-b977c721fef6)");
unit.assert_eq16(16'h3B0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #33 3d8fe6c5-3e20-46db-b05f-0d59d1a18afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 3614901c-c4ca-425f-b8ca-9132efdd1282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 02cdbb3a-dcb1-4a7d-bbe6-540a33771d5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 40c8a540-b94f-4d40-bd49-2478dc920998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 cf6e0884-dbbe-4951-b1ff-650c50021088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 79f7dd3a-5fb8-460e-8a4e-e8cb3369448d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 1b128d7c-c481-4273-a44d-37b1a5b3c793)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD78C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'hD78D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #34 038001ce-4583-4008-8e51-c313d7767b80)");
unit.assert_eq16(16'h6A0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #34 662eff7d-8654-4053-a8a2-87b442804534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 a10252d4-b308-4b8d-8cf6-e6991fb95d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 017092c1-5909-47cb-a0b0-6a9628847a86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 4ef66232-f50d-4d53-8587-b9e7c87302f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 32ad1776-9ae8-4e84-9d7e-632cb3fbeced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 a9725109-008f-4478-857b-75398fd07eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 b74c37c9-d0fa-471e-a823-780fa082b4f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h710E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h7C98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #35 3c3effac-ec5f-497c-a397-3c51cf0fa126)");
unit.assert_eq16(16'h710E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #35 3bea4516-c8c5-4100-9780-9366ac4a8fe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 e50f988b-decd-493b-b844-06064f9a29c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 0a0faddf-a2bf-4ac8-86bf-51015d9aa31a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 5d5e9217-0dc6-45b6-ab6e-3118e7ccbc17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 8d7c5339-c44a-4f82-a32e-631623841d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 5df6136b-4714-4af9-9aad-a004e6e67b12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 5c69cd2f-54f1-44e7-86d6-930665cf31cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB974;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'hB975, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #36 36b171ff-68f1-41d0-8540-44bc46c25efc)");
unit.assert_eq16(16'h0DD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #36 dd3b71d7-2721-4d1c-b537-e3d45b32ca74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 e644c751-697e-493d-a140-1ae1aa867f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 b205a0c2-9cb0-4f01-bcd3-4bcae6e71475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 c3aa22ee-8c55-4c31-82dd-44342c46e20d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 b040d61f-2ed8-4908-84a0-5821f243f7de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 1d484f06-2108-44af-a831-391653c90e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 f00da629-cbe0-4273-838a-911b54e83878)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB269;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5477;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'hB26A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #37 91377e35-ca6c-4630-b44a-1e29b995c888)");
unit.assert_eq16(16'h5477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #37 e36035e8-e52f-4bac-b779-cd642b039eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 5d01f7a7-dfbf-4e26-9340-afdbe0f55a7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 7f732f1e-8924-4235-8868-c676f9b956b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 af93ae14-c23c-402c-9faa-7c3008a17738)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 aae25687-f8b2-499b-9e04-ac0ce59a194f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 45ac8eaa-ab25-4477-96e7-5fbb175bcb9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 9ea20c99-c2ee-4172-8506-0a9f307fe8f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h912D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5830;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'h912E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #38 8b6d4e03-439e-4404-9f58-75b1300effe8)");
unit.assert_eq16(16'h5830, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #38 f4861ea2-9504-4401-961c-b7d140ca140f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 a00bc79c-7534-4e39-a014-6ace1b74c83e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 50733f6f-5398-4054-ac50-415933f8c569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 463c3171-2a7c-4036-98bb-c106f62b426a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 9198fe64-6f43-4ba7-a676-44934409b72c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 54ff303e-a99a-4199-afd0-c5e1bf45ae4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 4402e1c1-c803-4fcd-b497-7342de9747c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4AB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h4AB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #39 ca6d0ac7-4fe8-427b-bf1a-8a730d72e449)");
unit.assert_eq16(16'h34AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #39 671457f2-3448-449f-9eb2-795de1ef5630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 ae2f20f3-537e-4ea8-a6ab-64d762b6168b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 99c6decd-f438-44f9-acbd-f429d7d80d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 b8c2897d-4254-47d3-9b2e-7d3a2dd31621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 25a9fb39-cf49-49ab-bd1f-c4df2bcd0ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 8a8ae1ca-6d11-4553-95c0-16e09cc289e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 3d90afba-5a60-4380-80f0-62a54e8f8fff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h4C52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #40 bbf4d1da-3f75-493f-87ce-0a02e34467e3)");
unit.assert_eq16(16'hAB52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #40 4ac5e9df-1159-44cf-9112-516d9ee2c71b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 3efc79e7-b56c-47c9-a64b-08ea21b022bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 821d2a37-f635-4007-bd43-f9e7d3b2d7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 3ca60534-6e02-42b1-bcc0-daba66ed7cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 db66f3ef-d9f5-4341-9adf-52965aebda2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 15f63915-ccdc-4166-a0bd-00dc09dc395d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 edfc5cc0-d1da-405c-9ffb-dcada0e9a451)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h06A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #41 7438369b-f8f4-466a-8d3a-53b8dab65b69)");
unit.assert_eq16(16'h8B97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #41 949f2515-6393-4784-a573-c3d910cf44a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 e0e03feb-f9b0-42a6-80d0-7e438aafea64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 72323f54-c77b-4e91-9d31-da6394406c23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 2dc68dcf-7af6-4010-b37d-f24a452ced2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 998584e8-43b5-40c4-8668-072271fbf913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 b287692c-cf85-4294-933b-292c90eb5331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 d5aaa68c-4d47-4284-a74b-2ec7b99568a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEDF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'hAA18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #42 d999aeff-7341-40b7-9daa-327aa8e808ae)");
unit.assert_eq16(16'hEDF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #42 46c2110a-9f7f-4e3a-87d6-e8d41610c030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 f916547b-95a2-4089-942b-e9454d32b200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 ee2e1722-bfdf-489d-beab-608d532538d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 2485c86d-5ca9-4324-a056-55b9a71b21ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 33c36fb4-beab-4d11-aae6-97e22a4c12bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 d9b13b39-27c5-45cd-8dba-3c4fdf1d6c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 393b4b0f-85af-4ef9-ac32-7354943244db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE3FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6131;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'hE3FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #43 7db03f93-1b60-4ac3-8575-1f6ac9a7b2c4)");
unit.assert_eq16(16'h6131, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #43 f6369a8b-faea-4873-83c0-2a4b7b4a3e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 69e14fa1-8627-4460-812f-1de703c52d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 ecc23230-2dde-4653-b465-9d3fe7e2a34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 f49babc6-3c72-46fe-b578-1e9d9ad6246f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 fee27eb1-3e9e-4780-8581-4ea636f234a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 ee76dea8-3a01-4062-a251-a0add8706eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 99570b99-3696-44bd-8d92-fb42acbfd6d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3198;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h3199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #44 2ebecb95-1fc3-49e8-9f36-c88cb93e860d)");
unit.assert_eq16(16'h08FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #44 4973ee15-7c4b-40b4-bec6-bbf7a5670c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 2eb130d4-459c-42a7-93e9-6eb0376d728b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 fb4386f6-ab81-4766-b2a0-85b753e68bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 a0836fd5-01df-412a-9c28-1fb825feaf22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 9f99352d-178b-4f36-8e37-e6dad8c51a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 789d80f1-376c-4aa1-8c72-a0b6e58c1bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 58fcfabb-d7b3-4cb1-9afc-5cc18545f43a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h19C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #45 bdc2a904-1c69-4fbe-bd7a-49dfc9fc89ae)");
unit.assert_eq16(16'h7BF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #45 a824fc08-c4fa-4c39-a57b-825a1df01514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 09ae49f9-d428-45a9-a8f9-3e507f765ca2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 312af670-5cba-4221-9984-01be8ea08da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 85de9a4c-bef8-4bc3-9e03-9bd91b60f394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 6fe57490-023c-4659-9494-c02a1668874d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 0ff54d5f-869a-47f0-b8c2-80385e0195ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 71c1434a-d953-4cb4-b9a3-8ee7e8b2a7da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h62A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h306A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h62A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #46 e7989000-2192-442f-a647-90a25405c6b5)");
unit.assert_eq16(16'h306A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #46 ebccfad5-bbd6-48ab-944d-e73ac50f4670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 b074bd6c-41da-44f6-a3dc-ce925ca6214e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 193414d9-85c9-4bc5-b41b-76bd6997cdbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 3aa9cd0a-0486-449c-95db-9c56739b1dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 36cfbe37-5fc0-48ce-b786-107a1f29c11d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 fa4951af-379d-41b2-bf87-df649c1781dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 f014343b-baf6-45fd-8463-5b00afdbf069)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE683;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'hE684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #47 1709c197-6da8-444b-9131-136954128912)");
unit.assert_eq16(16'h9D74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #47 06116c7a-d400-456a-82ba-46813fbc158e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 3c3ff9cf-498d-4206-a3cd-18e4011fb80c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 afc11976-7338-4e1e-91c5-d877b157eed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 c6ac07ad-dee3-43fc-8d7a-a8339a75f49a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 a368d41a-2aa7-492d-9a94-0bb9e6b13afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 5ffec461-8b4b-46af-bcc5-0a73c00456fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 46fd862f-b5aa-4665-98b1-7709bdca789b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7264;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'hADA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #48 1ec36b44-f55b-4dea-8f00-443b5beb7016)");
unit.assert_eq16(16'h7264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #48 7d02dbbf-bb4f-411d-9559-1a889e3c110d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 d16d7ea3-96a8-4c80-92ac-82750f4b100d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 ac948eed-b5a4-4942-945b-7e0c9ec5db33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 86fbe7ae-a3e8-4c79-8597-997fe2f83b75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 43e79d87-dba0-432e-a3f6-eaa5a69728df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 8072c593-2a35-4094-b2f5-aea14faf2cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 71c76428-3b59-4d0d-badd-6eed26b544fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h886F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'h6B9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #49 00a0593f-6b74-40bb-a9b4-69e49cb3fbcd)");
unit.assert_eq16(16'h886F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #49 f5e68b73-d3b1-493c-8870-0ef3e7629b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 80439ca2-287c-4044-91b4-7d33294fd861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 1529eeae-30a5-4a51-be8c-838592843643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 ff58e53a-c68a-49dc-be2c-a1463f7d0c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 90bb07b7-85d2-4be0-8b1d-c31566cd1c3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 4e87aec9-7226-4ab9-b118-05718b307405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 4fce3b16-acd5-4b75-a006-8fa410d84d2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD235;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'hD236, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #50 f509d7e8-b8a5-49d0-8685-80e565ad4d91)");
unit.assert_eq16(16'h78A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #50 bd44073d-245b-47b3-b020-3c73d31dc737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 dec6e398-2f20-4b7c-a8d4-3edb3c73b4b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 c2616f47-e082-44e8-bb5c-7d4ec309bb8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 664eb93d-ae4b-4264-9f2f-8b9ef24e7e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 7607f79c-8e57-429f-823f-c7ad0cb385fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 54d908ce-8ea0-4d67-a020-665d0c10036b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 515dbcc4-b217-407a-98f4-770ca2935943)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h7E2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #51 57c18bac-639e-4f88-b42d-662285ea212d)");
unit.assert_eq16(16'h61E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #51 18a12215-7fad-49d9-97fd-d2731bde9102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 67cb1b7b-921d-43a4-843c-50d1b526c825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 2f4c82cb-badc-4d3c-b54e-933b80522284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 dfe0e38c-50f1-4238-961d-1bdeca36e6f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 7c7ef2b8-b59d-44b2-b4af-a2d36931d6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 aa5155b9-3e00-400e-86dc-e08803366f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 800f4fcc-9a5d-4bf8-b775-374fbb6f233a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h55ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h677D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h55EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #52 9fb25dfd-38eb-4c64-8d2b-aa0d14dadb20)");
unit.assert_eq16(16'h677D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #52 5bd59f8f-4b1a-422f-96ae-f1efca13739f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 e8f6d213-0a7b-40d5-816d-fe2acee14644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 cb935f33-929b-41fc-8b80-a832896dd396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 9dc788b9-f54d-4f83-affc-3d557bf6f4bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 f80e0b2d-8579-4dab-bff4-1d59ecc900a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 8a594f62-923a-4d3a-a3ed-4931fbe5859c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 b67efee9-3e89-4b4b-a9a3-3aebd8028881)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC381;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'hBD5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #53 fb537b2b-8eca-4bf4-8d44-4784db7c010c)");
unit.assert_eq16(16'hC381, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #53 ea61d086-9017-404a-b2df-03190cf67bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 b3060926-6ae5-46de-8c8c-29b22924782f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 69c2ab48-d371-44de-b23c-25a29c14fd97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 98ca565b-1f78-430f-a3aa-e2de60830acb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 7376e147-5ff5-4846-9cc8-0aa8e6e25896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 4c05f8d5-db10-4010-a0f8-2260ce133e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 dd133639-c8f1-4602-a90d-656acbf776d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'hCCAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #54 4285888d-f8dc-4af9-9c32-400af62d9f8f)");
unit.assert_eq16(16'h03D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #54 a65b5942-8240-4390-b647-e29ccdbdd61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 67bf44cc-c6d9-4f78-b3d3-2e804524a86b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 497dab93-2b19-4672-93af-c3cc1f59e68c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 4a469944-a51f-41e2-8a8f-ee8f83719464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 c1d22355-85be-4597-bdfc-652cf71ec2ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 e626097b-cfa7-48a7-96b4-38fa25382320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 a290ad60-c260-44ba-9552-52378f9077cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4932;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h098D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h4933, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #55 4f27e603-cc5c-4adb-9a86-69981b5330da)");
unit.assert_eq16(16'h098D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #55 b08a2cd4-0e94-4d52-bcb5-cb2e19bda95b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 7be45567-eed5-45e4-aa93-aa25c3d7dd92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 eafa1890-4555-49c3-a0ad-24246dd75170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 67b195cf-2d1c-4f50-8812-c1b607deac33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 6515c59f-a69a-47c9-8045-c843d2a52cab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 9b36bf76-d6e4-4e94-8e8d-f5088a55b084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 b5c44d3d-cb62-40fd-8e3f-a0f65806d29c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3CAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'hBEBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #56 7b88b73b-e0b4-4fa4-9b06-33e209ea7239)");
unit.assert_eq16(16'h3CAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #56 103ff25e-4c0d-478e-90cf-c9853405d17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 9a608259-9261-4877-974a-8bdf77d5a2cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 04756018-3574-445a-89ec-7ed5930cc685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 4eeae478-4088-4da7-9d90-6fd28834191b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 476baccc-7ef6-4378-a996-d4c046dcb5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 7cd7d785-5c9e-4d1f-882e-25eab9540f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 9a30beb2-7075-46f7-b0a6-15bbe07c119f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF383;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h720A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'hF384, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #57 e6ed38b2-a80b-4333-90c6-9136d013e35d)");
unit.assert_eq16(16'h720A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #57 e26d3528-0fd2-4c14-9240-5018464e68da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 dc145cea-65d4-4eba-b018-1971401731e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 ec983dc3-b401-46d7-a8d2-375450811892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 7cb8416e-6c6b-43d6-bfe1-9ac4b4b770d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 9519c10a-42c2-4709-8ae9-d90c849a31a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 70b7df5d-05d8-4ae1-a9c0-7faf8a42f00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 59686432-617a-4a7c-bc12-73c4f4e4bcb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5CF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4792;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h5CF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #58 95fe9279-da6a-43d1-adad-ddb9652963f4)");
unit.assert_eq16(16'h4792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #58 c12aa4ea-6941-4ea0-aab2-4fa12ed2ee21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 40851b11-be25-4cec-84c8-4613b7c16f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 b96c36b1-397a-4c7a-8430-522243f4eeca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 7ce61ad5-033e-40d3-9c9d-9c5ab599a498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 138629da-96e8-4d21-99fb-a718c2a047d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 1fde1174-c573-4ce4-af4f-732f2bb2c1b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 5df98189-9cb9-4d96-bfd0-2c3d98a0eb34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCBF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB5B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'hCBFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #59 653dafdd-2d90-49b3-87af-74a7a933a537)");
unit.assert_eq16(16'hB5B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #59 bd1b42b1-90ed-44ee-b6fd-8bb32b97bbc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 5caefe2e-8521-4993-b8c0-c30a0e67fdcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 d195f84b-ef5b-4cea-8289-c7f106273073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 2db854c9-100f-4378-9781-8f0c7926e690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 932887da-d6fb-49fb-b081-9ebe176c2d73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 f220cb6b-a4a2-42b2-a084-fafc35307738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 309f662f-37b9-4994-a09d-fc7f5763bcdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF253;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'hF254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #60 cbb4c797-b516-4ef4-8191-a39af64118a7)");
unit.assert_eq16(16'hCAB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #60 846d37ab-6597-43ba-ab47-7d5060cd8852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 f5bcf8e0-19b1-4a2a-98dd-fbbdeb5bd355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 6d1b52ab-d49f-4932-907a-41ce811122f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 91f75be7-f55c-485e-a133-da1d990f8874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 3976e4f6-a912-4985-bdb9-8c6b5d7765b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 407cc1b5-84d5-494c-8dc4-5092b9110369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 52eb32f3-4ae0-4e87-becb-322dd735be33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB844;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3239;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'hB845, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #61 8547ef39-340b-400f-a0c0-97fe38ce3429)");
unit.assert_eq16(16'h3239, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #61 5b4a29fc-bad2-404c-a9e8-88b29d0a0d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 7baf4566-d00c-4c59-8dd0-3b21d31fc9c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 571fa7f1-10e6-462d-b580-686429f48390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 454c7614-ff32-49e3-8a2f-ebf5bcefc519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 682d9bcb-7361-44c3-bdee-8913e9a06dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 71c62f6d-00d1-4844-a7e9-3d3246aeb07a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 d7ece12a-a55f-47e8-8ef0-31e52199c463)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC425;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h3BD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #62 fc99eac7-a92c-4471-9f5e-03e457f7a5e6)");
unit.assert_eq16(16'hC425, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #62 8c29bce8-44a4-40b4-bf6d-49c2f5f7f339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 2de051d6-1665-4321-922f-14101995b616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 114fbbc7-3582-4a91-9c63-dfc2bd8e29ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 bae96c35-a3df-43c1-b3dc-6b0e7898191e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 bf521137-ad15-4b98-aa5c-cd795fb288b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 d194a1b6-fe68-4bb1-bd54-b85b3097a716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 b7057b62-c184-4013-8ad4-c87f029732db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h565D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'hBE95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #63 5c74f713-a83d-46e2-b8a0-46cdc7a77e0d)");
unit.assert_eq16(16'h565D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #63 0804d0c0-d8f5-4718-a565-15b1850467a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 7410ef82-7460-42e9-bd8b-48e0fad2f991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 9ab49ff9-b766-42a4-8a56-30644a9febf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 45e1cef1-d386-4584-ba9c-d39863c5756f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 31e6322a-24f2-4523-be06-b502f1b2a623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 2b0fbc0a-f4f5-418d-960c-a7330269dc2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 ea27bc13-d30f-4ae4-93d6-59f54d935951)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7065;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h7066, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #64 0f932595-0b71-467a-8dd0-3a68eb195a3c)");
unit.assert_eq16(16'h5B9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #64 a881fc26-d0d8-430e-bab0-fe896a2d9b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 7f2137c0-89ed-41a0-add1-0143a0524ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 c923a9e6-624d-4779-924b-3ebaaffe4739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 e45211ea-ef7a-4706-bb9c-a48ab093421b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 24f0c744-c593-4171-88d8-2e7ff0e7784e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 7cbbde3a-69d3-41b1-8146-8bef789569cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 59d7393d-d9e7-4dd5-83c9-c0ca8dec3d32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ED3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3898;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'h0ED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #65 e972d8c0-58b7-48f0-9e1d-31f31c0ea0e8)");
unit.assert_eq16(16'h3898, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #65 f045e0ae-0866-4c4e-aded-e111173ee5aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 33733918-8c9c-4588-8206-fe697e785880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 5cdb1df1-57d9-41e4-87d7-6ba54ea8cee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 375c9218-e028-4129-8a20-ca29f81da068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 b33798a6-227c-4e75-9d79-4c30cc723de7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 a94f71e6-e310-410d-99b6-61879fd26c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 9060021c-2ffe-49e8-9eb5-a44d6ec61058)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8217;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h8218, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #66 e8a1e320-0510-4fc2-8450-bab74d10f541)");
unit.assert_eq16(16'h7F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #66 1ed0a2da-fc52-49af-96f3-f09957e51e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 9e4b7a32-03f1-4213-8c9a-c59518d66470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 e32f867b-951e-4deb-8ace-a194e318fd82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 2cf0d49f-38e2-4c49-bf66-36397dda6f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 c38138e8-d0bb-4c68-a7e7-bd0164d9c5b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 5934e314-df7c-46ac-82d5-9db6657f2443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 2be3ebab-2960-4380-a798-af30165cd4c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0229;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h37E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'h022A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #67 42cbeca1-2e0b-4176-bab1-b269860841aa)");
unit.assert_eq16(16'h37E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #67 e928ed4f-5112-4e16-bd46-e9dadd3c8093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 36c444d5-e6ea-4a7f-85eb-941960008c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 efaf8206-b6b4-4e17-b8ea-698c8f7a0a35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 fd62f2aa-e0bb-42d4-8a62-8bad6e48d5fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 68c3c5ec-bbcf-4fdc-b8ee-d1916a1621c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 c97fa6cd-ad10-40fe-9b9b-64e7fe6f8326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 ca1f5daf-f80f-4ff1-a33f-cce1f920ca6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8219;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4103;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'h821A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #68 a3c0e0d7-e7bf-4b7a-ad39-c22da8f0df51)");
unit.assert_eq16(16'h4103, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #68 83926347-fa46-45f3-94e4-2067ecf9102e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 f7acc4ac-e28d-4de1-8ba5-ad9e2e93cad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 f16819ee-c72b-4ad8-98ef-0d1cdf10f7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 bd4abe10-0807-4a44-9d1e-153142aa8086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 f143d847-bdea-477a-91fd-e504c7a6142c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 c4bde5e0-a372-427b-9a0c-fa0e2ef9c31a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 d94471a9-0e54-494d-88c5-15d17abc5305)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h4E57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #69 687d3a93-0d31-4e83-b378-e7e838e8a944)");
unit.assert_eq16(16'h4DA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #69 ea40c4a7-8678-4c81-9a35-6d6110611176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 85794888-c20b-42cd-b32a-d9a513369219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 f476b834-abcd-43ee-a58b-82fd3f9fb3db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 2f3f7c2d-6d93-4d76-9181-8bc69666d0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 e1e868c8-962c-4161-8543-a24da9cd1860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 93c4e112-6cc0-463c-be35-4c72191b4ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 06c00413-841e-47a5-a63c-80126b3a7e89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'h4A38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #70 7d8374fa-2b2c-41e3-af2e-f4426b3db23e)");
unit.assert_eq16(16'h7D51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #70 4be09688-9360-40f0-9419-fd4678b854c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 654ba58c-84d1-4b52-8d1b-f590e2b393df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 af94ea73-00b1-46f0-810f-aa175e390983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 455d75c1-1de8-4763-8480-1a33e35a0291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 8ee261b9-a025-4c08-b52a-16cc740f401b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 9fae88f6-bbc6-457b-9aec-c357b645c74e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 337182e5-aa78-46a0-a8e4-36b9655fb2b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h52CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #71 5789b1ad-d390-435a-8431-be7e6e6b4e18)");
unit.assert_eq16(16'h81F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #71 562baa96-2c0e-4eb1-be6d-5776a9320b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 22b99f29-322c-4e41-aac9-f29ed86b5bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 e5fbb89b-511d-4069-ac11-039162a01e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 87f94940-8dc0-4212-aed5-b75ddd144b04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 4a45db75-5785-4684-8133-d6646282829b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 11d59011-3b3f-410e-b8b4-2dbf6a6a46f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 fae1e266-bf9c-481c-ad0d-e56f82a58d44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1EEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h6FDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #72 2c85dd7c-b493-4817-b008-a6d4fde22c5c)");
unit.assert_eq16(16'h1EEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #72 8bd5c6fe-9141-4e7c-9ce1-687fee73ec9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 8c36bb55-b658-4db8-a942-a824266be704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 0f8f7305-991c-482f-bdd4-f4a2d236137a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 549bd0fb-fcd6-4c35-84db-82de99bcb424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 ec955e4b-ca19-48ea-839f-682807552b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 7a0e56af-0456-4e69-a0f9-1a3e9ce75169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 477a24b5-d783-4d4d-bd5f-a18289de8db4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0680;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h714C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h0681, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #73 e60fb59e-4b06-4a2c-8e1f-b8440f418804)");
unit.assert_eq16(16'h714C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #73 262366c1-86e3-40b8-bc1c-e8736756d53e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 6bd8357e-bb6c-42a4-90d3-50c338351042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 a759f92c-a13f-4e95-ad19-3056af8664c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 481f2103-da93-4da9-8624-2b097466b8d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 bcbb3a95-2c6b-45a6-828f-386e28561ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 374e8da3-5160-4be0-861e-387879a4b8ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 dd2d6dd5-1a01-4919-9948-ff010174246e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE060;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'hE061, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #74 3c777735-94ba-4930-bf7e-09afe0fa124a)");
unit.assert_eq16(16'h18CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #74 aef02adc-37c1-4dac-83e2-f578bdee9b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 3aef3b19-ca19-44cc-a6ad-7497a5f48952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 5335c827-38f9-4979-83ab-0b0acab4535c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 9c34a962-0fa6-42c5-928d-ceb6ead3e5bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 8bd85647-e61b-4e7c-a40d-fdca0cd3d209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 9eadfef5-ee13-47d0-ae35-fee420d6843d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 72bdaaec-dfb5-4310-86e3-48c9226a73b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h375B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'hC8EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #75 63451698-34ea-4051-bc57-500388aaf698)");
unit.assert_eq16(16'h375B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #75 094c986a-480f-4710-b003-4db0d3871a95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 6f29423e-edae-40cb-9a9d-81d6818530fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 7bf90fdd-ad66-4ebb-a1ad-2174eafe5d94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 91d74641-5c5c-4985-bb3a-10f18b24e72b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 38455557-f370-4201-8cf1-e9775c20e487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 fa8bbac4-bed9-4b5d-a6f0-8a8a8f392806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 3ad222ec-7cd4-4847-aea4-30752620c3a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h3D4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #76 c14ebd5a-16bd-404a-9625-dacfb3a082ba)");
unit.assert_eq16(16'h45D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #76 38407a1d-e2e6-4713-9126-5459426c2b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 c737279d-6eee-40d9-89a8-dc6401595e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 9f7cd81e-9cde-42ae-93e3-2cbbfa81b974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 54b03d80-386d-4113-9b7e-157d99167739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 c6a860c6-04ff-49be-a490-98e61a36fa67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 cefeedd1-d133-4170-a9f9-873048f09172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 5281003c-dced-49e8-9331-e0f17cd04c31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h0F64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #77 5599aa48-f661-473f-81f6-8d5ef8f9b917)");
unit.assert_eq16(16'hBF1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #77 5ac35290-cfbc-4ee8-862a-1b5d4f2da33a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 e0a60ab1-301d-4d53-bdb3-090dc2f5e9fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 bd400229-79fd-4213-90e0-c2ac591c1f7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 1e55ece8-25b7-42ff-a107-badb38f389b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 91b90e70-ef61-4a34-95c7-a5086a213611)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 cf579a80-ef93-44b5-88cb-1683dda67a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 b4cf5b32-74bb-4b7c-b28e-fc92efdee835)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h31FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #78 0aa715f1-dbec-4323-9553-6551b8ef2fbb)");
unit.assert_eq16(16'h1A99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #78 2cf46990-b3bd-409c-8190-594ff2734954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 be272522-88ab-47bb-a85f-07fce66ac39f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 abecb020-0686-4c04-9e86-17bca6ce3084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 001a647d-967d-47df-8c9d-9f0cceb0bb98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 4a52b811-8ba3-4573-9c9a-036f679b91ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 a876e010-a828-4f8e-9a45-cab45e6a7b16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 6012fdf3-e45f-4f1e-9d1b-a49dae26301f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC81F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6931;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'hC820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #79 e9306652-de41-4b86-b741-ca04252e4351)");
unit.assert_eq16(16'h6931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #79 3610d474-6d2b-4b7d-bd03-a09a5aa12ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 dce3e724-3c1b-4056-80b5-5e1ff96bd746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 8936a8d4-ec0f-4cab-9008-721681a0a019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 ae36498d-ec61-4b6f-ad1d-283c8232342e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 f469de27-308f-445b-8ffb-b98c019ed70f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 bd50bba9-62b6-4f94-aaa8-db155230aa09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 8ebaf4dd-4c57-4e99-a076-d520cc081a3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h54A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #80 0ab9613f-4754-4347-9cf2-76a448bd9f9f)");
unit.assert_eq16(16'h0BC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #80 e7a44f4a-caa8-4455-8ac7-74b6c7168545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 9f5bd155-142b-4468-a49f-6ee4cdb75f54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 39033469-e07d-45d3-8dcc-3aa841ca4d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 70443f90-81d6-4f02-b1b8-156cdaf209b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 f2f412ca-d2d8-465b-9ea9-0adaf1afbbd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 c9c5f67b-6c3b-4523-a81f-02bd724e57f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 f293e1d3-b7f8-4d29-9768-e9837cc8d207)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'hFFF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #81 78d3d328-3a83-4e93-95a0-6507e3937e95)");
unit.assert_eq16(16'h6FC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #81 c25eb892-055d-48e2-b0d4-777165a88eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 608d9bc5-57ce-4ca1-af0c-4c6c5c709301)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 060af832-7e72-4487-9e03-2232e80e1c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 4340ebc7-38e1-4f3e-8e0b-b124d669b194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 0c863e68-14c2-4592-b810-4bf95d6b77b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 a1d2b45c-b0a6-4a74-ac42-43994fc33f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 147938a7-d31d-40e9-bc43-7e479287af41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8358;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1CB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h8359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #82 84f0f2b7-9110-485b-ac16-da572e80a168)");
unit.assert_eq16(16'h1CB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #82 6a260cb8-510b-4340-b04f-0050aeb3a070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 debfa3d7-050b-4f31-a0ca-96aaf24f40ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 32c4a8af-c03b-4117-a424-85ab29a51b41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 13e2008d-54c4-46a2-9657-ac901f2d4c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 f1d0b15c-832e-4d9d-b63e-3e7846dcb58c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 c127e91e-8a22-4da5-a208-6d07e9095dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 3d62da08-82e7-426a-ba7c-85c7b4e5a589)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'h7F32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #83 0eddaac3-1737-4b51-919f-8e2d60efcc44)");
unit.assert_eq16(16'h4CE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #83 67c30d1a-3ed2-44eb-bf88-269e7b84712b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 b52d9f8c-fd31-4447-8876-7d9a203264ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 ce10b25c-6b7f-4941-9022-a3ad046c9c94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 161bfc38-eab1-4225-b208-7423a2beafda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 32dec5e5-c5d0-4629-8e3d-4e6c6f780d45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 d071fb8f-71e1-4acc-888c-429e5fb9d763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 3f1af4a2-7d22-4a0b-ac00-cde5a49e759a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h39AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h55F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h39AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #84 be9cb8dd-7725-4302-9766-a867f5ae6f70)");
unit.assert_eq16(16'h55F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #84 0658a5dc-859c-442b-af43-a8fa94ae1c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 a189edcf-6e63-46e7-a4b8-f9df086fb8df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 c50ad97c-dea6-4dca-ab98-0dc9be04cbf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 f7a82d47-affb-47e2-9fc0-64915a6d96bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 245f34ab-f6da-4edc-8b3d-c223e551c615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 5584f87d-1a96-45d8-ab9c-c3f627e2e595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 3a293117-8895-451b-90ad-9e5d95242174)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9937;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h9938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #85 88d53a95-3245-4e64-bee2-e489731ff571)");
unit.assert_eq16(16'h6B52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #85 76efe024-2461-48fb-b8e2-43e00075485f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 936a4d7a-0da5-4744-a01b-c447e1809f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 3fb43eea-fd38-46bf-a727-c48d2475e959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 8884bb5a-7816-43ec-a27d-42bd1eb5c036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 d265047c-59c6-4ec7-98bd-ef941998695f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 474e2b19-da35-4cf2-8162-d14778847cca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 807af3d9-3398-49c5-9329-05c2d20bbcc4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7766;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h25C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'h7767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #86 467a57fc-549c-4a2d-ab93-6720a50a09c8)");
unit.assert_eq16(16'h25C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #86 93ab04f8-3087-4397-93f8-0b121b1058a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 f7056907-c2ed-458c-bf0d-2933957186ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 fca27e80-5c27-451a-8803-076b7daed8d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 f5bd9e19-a1bb-4e57-9928-e60d8adabfad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 6cffcf87-ae0d-4438-8bb9-0aff5bea7dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 f239730a-af7c-4ebf-9817-ad5ac6ea8c22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 ca1a22f2-663b-4f6b-afda-829a30dbe9fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'h89D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #87 ecd9bb37-0c4f-4740-8572-25037f310c42)");
unit.assert_eq16(16'h0CD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #87 da1517d0-fb9c-4f3b-9761-1832a78f0f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 c5ea5748-0d58-4991-be4b-e812505bf05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 221d179b-65ce-4e85-8b8d-fa505d64bf00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 e10266ee-e633-4a06-99c3-ae965fdd1eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 3bf94497-aa46-488e-b5e4-8cea3e613986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 277a5f1d-ecb3-4dbb-ad70-4df1791c4822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 f03174fe-addf-4484-a388-a86cb0f4b3ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h7E83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #88 42beeaf7-cdad-4b9c-914b-5db2c2b8b0b0)");
unit.assert_eq16(16'h3C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #88 32ef7751-cb53-45bd-9025-f71b6a966489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 75fb3fef-fc6a-4d4d-9306-2a59d44feb18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 88e6e6dd-da95-43db-81d6-5d0e1f26465e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 f0595e80-2a0e-40d8-ad1e-f7aa048d9306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 74b358e9-be46-464e-bac5-343383ae34c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 ccac5cba-3819-42cc-9880-01cb00afffff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 4ac27d98-2f33-45db-b1c7-613c4becd0da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6DFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h8C97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #89 4968f74b-2ceb-44f1-b9f8-9d2241bac17e)");
unit.assert_eq16(16'h6DFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #89 b14d08ad-fb46-4c6a-9651-f78cdbc93215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 c0581915-7ba6-47f6-b6cd-b6f448034439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 8a5a2650-ed90-4ff2-bfc4-08db1ee165b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 b05d55c0-4bc0-4180-8894-610dbaf2e444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 57d35d80-c623-4af3-91d0-d51bd523fa3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 c80c2754-347a-4c64-9a9a-c482108afa34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 67f5f6b6-d426-4cb6-af80-a008c4a967a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4976;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'hC2FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #90 20e628c2-e304-42e1-b823-faaf5ed1009a)");
unit.assert_eq16(16'h4976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #90 1f1a35de-8c00-4b0d-b519-c9eb4c323d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 d8201aba-2ed1-4c3d-9f72-758fc46a1abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 449d0259-49f2-4bcb-845a-a4b53871a62b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 0ae582ce-5374-4890-a757-e3050f3857c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 37ebc87f-14cb-4efb-be1b-c8e79a0609ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 7cf52eee-410b-4a30-b987-375a43db63b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 38e896a2-4f80-4a3f-a43d-74c5857ff78c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h259F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h33B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #91 8b74d2c5-325c-4f6b-8637-fd6bfdfd80b5)");
unit.assert_eq16(16'h259F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #91 feda309b-5b68-46b1-bc5e-6bdc9c2451d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 839e6451-2fdd-4530-9e13-f760c14530fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 4ed22352-8bc3-406b-bd5f-59083f6fefc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 2a37552c-e31b-4f9b-baab-8271afee4c8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 bd258702-e6cd-4654-998e-8ae4ccc4c9f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 5e5ab01f-ca51-4c32-9e68-ca86095837e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 bf255996-c24f-4ecb-9510-19fdfcc2bae9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1492;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9443;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h1493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #92 9c00c414-f296-49ce-9b94-fcb9297de400)");
unit.assert_eq16(16'h9443, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #92 e2ac1f35-e5c5-4d5f-9fa4-23cf324ca6c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 134fddb1-3218-44b3-8be4-76f0aa84d826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 5a64f4b0-deeb-492b-aac4-0b306beaa4b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 ea78df9e-33cb-47a8-aeb9-44789d88531b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 967565f8-9a71-4704-8fca-082ef4a3d450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 a2f78c97-7453-4f23-9386-15da279f330c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 c43350b5-9b14-47ee-8a05-7ff4115b87b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h533B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h29AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h533C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #93 7b72a429-51f7-4053-8580-68b3f8c134ce)");
unit.assert_eq16(16'h29AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #93 452277ce-19c6-4012-9c9a-86d84d9736f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 842e5055-8a56-49f8-ae11-02b1e90119c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 3c4c090a-1dcb-43e3-bb17-6101c2d880c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 7be6ba63-dab4-4c44-aa43-abd3f983d582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 c6147d8d-2830-4eab-8480-18bb908d4c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 6e6a9e27-fddd-4ee6-8bcf-825884e20814)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 5ad9357d-cee9-4754-b42a-33959aa89799)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0813;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h0814, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #94 d717df2a-8996-4ef0-9898-a50e6ee0fdde)");
unit.assert_eq16(16'hA9BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #94 a60c621f-1a63-4059-a237-c5a12e0b5e90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 d80de497-d7c7-474a-835d-83b50bceede7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 af4f3f66-d70c-46c4-8e77-ec3d00457745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 a173db88-3d00-4782-a5fa-552023eccf67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 44de4727-7b09-46c3-bf25-17621ffac0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 e6777cf2-f725-40b1-92d3-5adbf44b8dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 a3082adc-b5cc-4fc0-a523-5a7887bc7f1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6691;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h495D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h6692, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #95 77024734-717e-4c84-8c6e-1dbe96ad0a42)");
unit.assert_eq16(16'h495D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #95 501206f2-5a7e-4aa0-afbc-f6901bd84763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 ae094176-26dc-4023-984a-39c6a1864345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 181ad3f0-86e4-499d-a51e-da5d58348a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 9d746440-0c60-4040-b6c2-f38ca34ade1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 6b9c8180-cd7e-4b7d-8ed6-c599ab51a741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 785e2fad-b5c7-465c-be2d-e03e39e88beb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 37eac7ac-4032-45ce-8b9b-587093038935)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h633E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h4A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #96 bb1ab3df-33f1-4b5d-bf4b-9ac00b208741)");
unit.assert_eq16(16'h633E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #96 c394d1c5-093b-4440-9096-cd5cf94330df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 7c64f7eb-b30f-4b1f-b30f-71444504ee43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 44f7df85-a7d0-4b19-bc45-2f6d3517719c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 489d6804-5da4-441e-9992-a0f9d55fedfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 9181f708-bc7d-4ca9-b2c8-3862b26d72df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 b55789d7-e432-4f91-b459-be4ab09b56cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 c9affd85-d34e-4444-8ea2-4e5f0275af0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h322A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h1F72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #97 92e22242-ca55-4ec8-afb1-5a1272119d87)");
unit.assert_eq16(16'h322A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #97 ba1409c0-b16d-4021-b71b-cdce0dc9439a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 d461d7ad-e709-41ba-8861-bfa14b23b434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 654c922b-ec6d-496b-bf00-3af2beebea4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 b73fc217-f565-4aa8-8f22-a0fe199b53da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 6d3d807e-6904-473d-80f1-ab86ff3a9ebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 771715d4-40d9-425b-abe2-a5149a438fb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 0378f57b-94a1-4f24-9bc3-97ec879e33ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h124F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h1250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #98 dc8880ae-6cbd-467e-b5b4-19f747938034)");
unit.assert_eq16(16'h7BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #98 44027161-6330-4de3-923d-b019eb2dd6f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 2b411f86-292a-4a6c-8afb-b33a10ffff8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 aecb7b1b-3b8b-441d-8f8f-4c4e051bc3b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 ebb75365-3ffb-488e-a279-08bc4619b205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 a6f41ce1-d5ba-4ffe-b679-390d73be73a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 f6a7c6eb-4c46-4da5-a3e6-a15015e9b756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 04403306-90a9-4749-9080-672f5fedba53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h34B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'h34B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #99 4f94d6ac-50d8-416f-8398-b46e732df390)");
unit.assert_eq16(16'h80CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #99 83d20117-5508-4869-80f6-885844bc3f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 d83bfb78-d899-430f-866b-6d469300effd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 585aac18-01f0-4740-a9c7-d2ed4c6b4639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 93f0a8d3-7735-4699-9827-7851573e749d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 f6e7c92e-aace-4dab-acda-efd66d96310c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 6606dcdd-a771-4df0-a475-02aa7594eb6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 b8177d4c-d5d1-49e7-b7c4-29d2be25ffb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE662;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h01E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #100 cd9584fe-0c89-4b06-a66a-94b276bb818b)");
unit.assert_eq16(16'hE662, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #100 76a7e6a6-2e2d-4075-a073-01e359dbb8e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 c03a5650-ebfb-4bef-8c46-0811d808c62c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 0ef9c7fd-2ccf-451d-b49f-4e0c2c4dc107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 9bbeb22a-3241-43ab-a3b4-bde15c0c7328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 5ece7de9-b52c-4459-86c6-9811e22e2265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 5e7f47e1-0503-48e9-ae3c-23d0f24ad129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 08abcccb-2f0c-4ced-8e1c-b67914358f4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF02C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h6E6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #101 b369e05c-ba44-4574-87ec-6571a1483ac1)");
unit.assert_eq16(16'hF02C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #101 fa18508b-235f-4ab8-af9a-6c20d20bdfae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 731c1926-3659-4256-b688-a0ceca24df97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 0fda5a4b-fdb5-407c-b518-d9de4d4671b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 01398209-ab5f-4be9-b027-840046b3eea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 9ff10f7e-2bf7-4223-8e8c-07f984c21913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 da0f4d43-c075-4fa3-8c92-b91b3d5a9d2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 847936b9-ee18-40bd-b28a-d37bea3b43dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h088D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h05B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #102 f962889e-d093-4780-825e-f9922d08a2e2)");
unit.assert_eq16(16'h088D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #102 57a18db4-ad9b-4ce0-ac52-197ad059c606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 c82ded75-b0db-4ae3-b0f7-5d98970e6659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 e62a2ebd-9170-4e22-a56d-967803f606cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 33c713bc-c872-4b00-81bf-8d93e09c68ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 23aae90c-f689-4562-bc1b-792d4dfc1e0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 1447abb4-848a-4a3f-8ee4-2190196e2f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 7ef9f9a8-4b30-4ded-a4f7-bc4c0a6b5f5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h30EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB77C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h30EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #103 f0679cb7-466e-49ab-af5d-afa409c9d121)");
unit.assert_eq16(16'hB77C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #103 04723acc-b7a4-4bf2-a865-3366068ed728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 82d24bf7-f145-4372-9dd1-492848f58061)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 a1774ec5-4c8c-4cdd-ba83-3763fb844ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 64e5c148-c675-4b8e-9989-f098467469da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 148aa3c3-5a66-4fa0-ac1f-b207ab42b036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 8a84862b-92c7-4d1e-9785-63992793a85e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 150ae4e2-cdac-49eb-b7a9-27d4bd3a8ad6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h7E7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #104 fcdf84de-9862-4d5f-b965-14b209522251)");
unit.assert_eq16(16'h3B7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #104 777709cf-6a30-41ee-9be1-3044e3ede6e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 a92f145e-be57-4f27-a642-d20fed4918ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 bad96a06-6626-4068-bb81-a11c1dd0a38e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 ad078843-75e1-4500-bb7a-54531ebf5777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 7813e376-c8ec-40ac-9990-4f38eced9d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 82cd6aa4-bb7f-490a-b154-02e50482e99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 1683f91d-6465-4384-af53-e831ac2edc7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF162;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD89D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'hF163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #105 b2911bd4-46ef-4ba7-9fd4-1bc12bc08aaf)");
unit.assert_eq16(16'hD89D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #105 83237360-565b-4ccc-9cac-e1a87433b65a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 372a0c36-04b7-4332-8036-b282e763de2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 67294da9-b051-49bb-b05e-88720aa4a437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 5f1e115a-8565-4d62-a109-717135c1ebb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 2d6f9ade-55b0-4649-ab3c-477303d5e20d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 6158e6a0-207d-4f67-8b1e-03354f9e3ed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 89f7191e-e551-4cd5-99aa-81bb3336405b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'hCE6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #106 085c54e6-71ea-4524-b9b8-eb38e0aac11d)");
unit.assert_eq16(16'h6EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #106 3e0d7fd8-644d-49d7-9068-f619811a6028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 72005d46-4654-41ce-844d-a3c3814c7620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 c82b327e-d94f-4ceb-b993-0a1b555bad15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 2e89d99f-05e9-404e-b2dc-10a644965c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 e9a79ab6-cbb4-445f-a381-0dd4e947f393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 c2564b86-7b21-4dab-8ad2-52f95c680967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 1c5638f5-3cc5-433e-849a-38663321361e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD8EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'hD8EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #107 109e6072-13fa-43de-8494-b4af893e448a)");
unit.assert_eq16(16'hECC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #107 c167e473-f8d0-48a3-b517-75d09fe317a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 719fe7ad-0f9c-4285-b096-efd6bcfa7926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 bef6eff1-4b64-4681-a626-8eb039d6fa59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 0bbcb6f6-ef19-40d4-8bea-5e45ac37d30d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 65cb2cfc-8e93-4dfc-b2de-c8d0bb5e4094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 982fa00c-f92a-431e-9f9c-821ad563b98d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 2d800e88-fe66-4a4b-a7cc-87923010ab7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3237;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h3238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #108 306beea8-6ca9-48db-9968-d02e9ac30608)");
unit.assert_eq16(16'h3EE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #108 844143b1-b178-40f0-80fb-300a5597a82f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 ae1e2738-4168-43eb-b312-45512ff2dff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 d231ad6f-af02-4610-a20a-4fe4b88dfdb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 eea634d8-70f2-4734-8ec0-b95f0f669957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 d8a95346-2924-42e0-8d3a-6eaa4dadc195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 57f67654-9b5f-4db9-90e9-74ce068dbcb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 a87d8040-b224-4114-8ee6-ccd1d5ef59ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA8FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'hA8FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #109 6753581b-49ee-4624-80a7-f9c41241363d)");
unit.assert_eq16(16'h4A8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #109 73dff19d-6c23-419b-8664-94e50f759c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 74b4f960-5ace-41fd-a605-a485a02c6a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 c0743979-bf73-4970-b39b-039027640814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 2a085201-78b2-4b09-8644-e444fc339a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 5aff24e0-c7a8-4669-ad9d-be0c9318bd2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 2a1ad640-8230-4dac-8d7c-10a9bfb3309f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 035e9a0b-9792-46fa-88cc-dbe07208f76a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'hDDFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #110 ec02fcc4-6c5c-4cd5-8426-a7a3303b203d)");
unit.assert_eq16(16'h0DCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #110 24bf7dfc-b895-40bb-9193-814461f3e203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 9886c7d2-15b2-4daf-8411-f1a82a43da77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 7adc169f-6beb-47b6-9272-09ff14de565e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 83935f31-7b1f-4da3-8141-c37691f45c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 509e3552-c01c-4351-b091-28ea406bcc25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 63e42da1-60ff-4d6a-a2a0-8b7d8ed348c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 076c8265-4094-4500-820e-39af2562cdaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'hA7B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #111 a2180401-2144-44dc-9306-6faead06ead4)");
unit.assert_eq16(16'hBAB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #111 37192a07-e4d2-46e5-90e6-9e5edf3aa5a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 813a38c4-07ed-45df-82e6-20a874d69606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 502e164e-23af-47e3-ad1d-2e6673cc377f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 5df163f7-f2cd-439f-8b2a-7f3656dacc60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 e115d0b5-3f06-4b86-b318-f713c4711933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 a52a894c-998f-461c-b83e-67e00a7c6f3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 fe45eb2d-4664-4707-adcf-b26e8a5db999)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h694C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h748C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h694D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #112 6fc4cdfb-ca2f-47a7-9d5b-8643a6dda2e4)");
unit.assert_eq16(16'h748C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #112 9264112f-e8f0-4e56-89ff-4368a196db10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 e6a3fff2-dc14-4a17-aec7-9f8e4183819b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 89d06b9b-505c-4489-8c49-bced670de50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 6962b7d6-4794-4f88-a012-ce28c5339bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 23e7fc4a-dcb6-4a31-a275-b73c4ca0cc22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 2d07a0e7-ed5c-4841-8e42-5938d60cf8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 2b7906da-fa78-434f-9c3c-d6135e21fb32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9C0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'h9C0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #113 c4f3205e-c222-42af-8f07-3ac249945a04)");
unit.assert_eq16(16'h69A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #113 85cbe509-e9d5-4587-8426-30009adb1fe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 d6689c15-9ab1-4678-a370-50972220b406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 964c17a2-0dfd-4dff-9620-bb59c4fc30d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 75187fc0-91dd-48a0-9fc2-79498d028bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 9783c516-f865-42d6-aac9-16a7286b174a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 c35554fc-3ce4-4b06-996e-28eddfb2c5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 87660bed-cf26-4016-aa2d-850a8433d112)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC546;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'hC547, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #114 3e8089da-de53-4fb0-9ac2-071f1ac3748d)");
unit.assert_eq16(16'h9DC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #114 8131b5a6-a7e2-4ad0-a875-ff172b2b89ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 bc9fdf0d-97f2-40a8-ae92-b78ee1cb4d31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 20fcfc96-7ade-43ae-afba-a597adc3c4ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 e7f5a0ff-6043-4578-b643-d613884463f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 9d112be0-f4d9-48d1-a9d2-c895d2ceb4d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 c40a5216-99ad-41c4-be86-c41797d2b933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 e571753d-4e89-4497-881a-9fc3f4fdaba7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA316;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7446;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'hA317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #115 a359cefd-2cd3-45a5-83a2-4eb9d3eccac1)");
unit.assert_eq16(16'h7446, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #115 981d9b49-843b-492b-bc44-855309bc26f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 a6463047-0795-4a2b-9eaf-5d4a0e20db3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 970b62d3-3a15-42fa-9607-739710265f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 dc5abeb8-6a34-44df-9f9e-52020a602639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 424a2c2e-7d78-444e-8a13-087a47c75bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 3cbf3c1d-c356-47f9-b289-ba9449fa8406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 feac3678-192b-45e3-9433-27356b7518e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h228F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h2290, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #116 787c4dd4-67c6-49b8-bd5f-7636af332e62)");
unit.assert_eq16(16'hF9C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #116 af160bbe-1be5-4eeb-938f-54276c46ec16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 56d4ea12-9cde-4ca5-851c-4b408697c5ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 8348b421-1587-4c5f-9ba6-1a9124d48bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 10fdd3fa-49e9-4b23-800b-8715f56616d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 0befd42f-9906-4163-be04-c0f4ae0aef96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 d6368f8e-1d09-46cc-a698-e715f99b3464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 e9c6d74d-8fa5-4311-a1a5-255d4e3591df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA20C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h44F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #117 23f58502-4a0e-4bc5-93c3-c50883ccbcd0)");
unit.assert_eq16(16'hA20C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #117 e84bf577-bd8d-40f7-8204-1e4fc8f03a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 1efff44b-55c7-43d2-b72b-c31fa3c34bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 85a482ae-3311-40a2-a8ce-c3c71af30065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 aeec13f2-6841-445e-88eb-4a5d2cd51baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 47cabe87-0e19-4edb-85fa-ddc602edcb41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 955b386a-cefc-4ecb-b7fe-77cca281cd0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 6c2d6ad9-3485-4628-93bc-46cf8ade0ded)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC250;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'h4091, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #118 cbaffb8f-6fbb-4657-88c3-be0943e16443)");
unit.assert_eq16(16'hC250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #118 aa1faf11-a4f8-4b31-9f52-ecf7a2b54ea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 c15efd32-cb21-44dd-9728-0bfa01fb6000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 57aa8ad0-9be7-485e-ae4a-18781e09cc70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 f8460188-0204-4720-ad53-4475a19b1c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 42819ec6-78e9-4429-9c30-9a1bc4837e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 ccb07389-5212-49c4-9bb8-bbc9e7dc8c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 ea95905a-423b-49b9-8528-8dec58337f81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h11C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #119 7069f4e4-7529-4c83-9ffe-23347abf1ec4)");
unit.assert_eq16(16'h9DC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #119 f0869a5a-cc1b-46e0-a805-ee05c2a72054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 b7ed3b05-926e-4dfc-bb91-4e0a463da8b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 074de381-1cf2-444e-b309-3a4eb2e89989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 53b8373b-0694-40ed-9a2c-b7ab040baa34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 188fb91a-1c9b-4905-9b14-205a5b88c7d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 87ccc5a5-728b-4de8-a863-19e7e092a1e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 8e756866-35e6-435b-a694-b93802db66b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h112B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAEC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h112C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #120 717eb205-9209-4c2c-8a54-ce9467a61ba0)");
unit.assert_eq16(16'hAEC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #120 9083e3dc-ab2d-413b-aa0f-fc66d0c87e3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 e5488e98-cbc8-48bf-9191-732c397c0de1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 defa65c6-dc88-424a-9897-ee6d898a9c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 58c015ba-9b54-42cc-80ab-923f2256839e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 7785ca6c-2e03-4ebf-9937-de556561f334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 69a51aa3-a776-4dd6-a2c4-8f83fc57aedc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 ff8ab67c-ec6f-4a49-9f25-ebfe78e29da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3158;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h3159, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #121 0cc56286-2922-481b-923a-2ffc3e0f5dc6)");
unit.assert_eq16(16'h66B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #121 e484bdf8-b7c9-4028-acd9-6ba34967fcfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 e442d141-4567-41d9-9794-303c4b7376fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 fa7b2e0c-00f0-429d-b54c-9bca9ab3ec04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 95258dfc-2c2c-432f-bbe9-75f9a67b675b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 71409fa3-e123-42d4-af16-d0f9de85a25c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 fa6b3cbb-63d5-422b-85f0-60df64f04e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 c2e6c20d-a351-41c0-b84c-f23bbf4ad753)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB5B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7741;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'hB5B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #122 d1096dc3-3d50-4e64-8786-f66d69bc41fb)");
unit.assert_eq16(16'h7741, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #122 d1cf12cb-84c7-4c7c-971f-89cb806ef657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 d367664d-5994-4370-a6c8-31cf90c9892e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 7248fd78-5b33-402f-bdde-9e278cda9986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 abd6f238-9ef0-4f42-875b-c28686cf2510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 bc233227-d4be-41af-92e1-334a61d34407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 70937cf1-11dd-4501-bc20-cb4b208f2ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 defd5611-3450-489c-aeb0-642cab34fd66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h92EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #123 d4618005-dd83-493e-bafb-44fb2e62a349)");
unit.assert_eq16(16'h2BB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #123 4fa8ed75-c251-4e0e-aaba-87be3a2ae0ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 729bbe69-9818-49fd-9fee-d4a7e9491172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 576897a5-cea2-41e0-ad7e-2cd43c7bda19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 e6b5f233-c35c-4950-ba00-c31fded655bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 872fe9ca-9d8d-40c9-8102-9108c6884cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 38032d60-882d-4148-b80f-18ef9e0a6d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 7efa37b0-7bff-414a-a5c5-e6c7b238b78f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3821;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD973;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h3822, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #124 d50bab61-6bf8-400f-9744-13d669642bd2)");
unit.assert_eq16(16'hD973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #124 719aa6af-9a29-45cd-a5e5-957cb5592e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 041e0c1d-a3e5-4afb-bc5e-2e27a04a41b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 8b78e82f-e5fb-4796-85b0-96954bd4115b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 1b0f8183-0cfd-4f6a-9669-1de31f741b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 6933aafb-c94f-4afb-9f35-f1325c8fc7b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 4347a2bb-31da-486c-9c7c-ee7e330b4970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 805a2dc6-06c6-4c33-b499-2f1f992d229c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h2BF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #125 a6be711d-004b-4665-a725-5b434715b66d)");
unit.assert_eq16(16'hDA54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #125 43fe4145-1d9a-4451-9a6b-97232df8acf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 e02bf015-c974-41b6-9098-91027a0eefac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 d14fc780-51e1-455b-a1bb-30156023070c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 7d0d34ef-361b-42bf-a99a-cabdfb1955ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 04586fbe-4c08-4644-bba1-ddeb2b74b520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 48c2d381-64ea-45de-bddc-c94852900026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 7ba8e055-f03c-41df-a57b-f097695a8e34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA886;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'hA887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #126 d407673d-99b4-49b3-9553-ade2a3ed52ee)");
unit.assert_eq16(16'h1B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #126 f7730a95-4b3e-4d3f-80bb-e9e9f1f24151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 01480288-7952-4cab-9526-c29fdd1209dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 137d2fbf-128d-49b2-9f2e-40e4ccde49a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 a9482495-f3cb-49db-b4cc-f76ff30e79ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 472114d2-6f13-43db-a6a6-f0d93815f6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 ffa6be4c-8f3b-4560-81d2-07506388e91d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 e334c351-4706-4dea-972f-87f68f1c6559)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1215;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h6E05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #127 f59268e5-d0c0-4ca1-9b0f-6e11751d03e4)");
unit.assert_eq16(16'h1215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #127 f2780365-ad22-4194-bc44-795073c8f527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 6e80c30c-9b62-4f5f-aca0-bda21a758002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 1a47d9c0-2be9-4589-b2d3-eef14fdd52bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 b946b929-7a97-4bd9-b274-0e80e215829c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 8cdb1b83-d8cd-4df8-b795-c466d4190161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 5b43e131-3656-4ccc-8b11-d6082253a85e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 71f13a78-887b-493d-aff3-9357c5b5a349)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4832;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h4833, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #128 0b435992-653c-48a5-a74a-a3d1083cea97)");
unit.assert_eq16(16'h03BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #128 c212a996-d77f-4eb4-b411-6df1002a3b8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 d55ab8fa-2b30-43b2-8bc0-b033b90f9cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 17167143-5f7f-4e26-b61e-a41856b19ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 30ad9beb-3fd8-4de0-92ca-4faa29086316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 7b47ed8b-076d-470c-95bd-a00c2c06e212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 e99c14cb-0ac7-44d1-b710-70d84a40fe30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 590a38f0-b250-4f2a-a7e1-b0b9e4cf7ad2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC503;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'hDDD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #129 1724ff68-d7b4-480d-aa92-1ebb4db15d2a)");
unit.assert_eq16(16'hC503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #129 e1dbb516-beb0-4783-839c-692397d70781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 5f7247c4-bb12-4d81-8ada-edbdd5e464cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 ec96c235-3d3c-463a-b9ab-af49d2e794e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 03607264-54f0-4f6c-b25e-4e7831ff0789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 503064f6-ff68-49f0-8b25-d2f68485d2a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 672ee6f7-b3ca-4854-b18e-49059281316a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 0a1b0cc6-4afc-4c81-871a-55fb939ee49e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h75FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #130 ad158aad-c595-48f0-98f4-a73dd988b3c5)");
unit.assert_eq16(16'h5C5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #130 1b56a65d-e642-4dde-9cfe-12c1212c9bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 78a4a234-1d10-420a-a6da-dd788dccec61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 b289e567-4948-4a7e-85f4-8bc448ef640c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 4cfd4625-ed13-4b0b-8bde-c00418963db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 ae77b43e-9826-4733-8f7d-932046d3a406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 0455432c-a0c9-442f-982f-43e7ec1bf3fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 2bc88323-b41e-4d90-8b29-64f7de10bbf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h49F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0991;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h49F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #131 3986f935-daa9-44b4-8351-466cb5a1d705)");
unit.assert_eq16(16'h0991, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #131 78404f85-0f2c-4a28-80d3-b9254fb5dc4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 218e61a3-d737-429e-8c3b-1f9c07a55b93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 a66bc1d3-a1cd-4259-8fea-45afdbbcdf3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 f2e1f761-1320-4c16-b5bd-05b8c8fff082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 98c648d9-ed21-43ac-9315-41c8e97f4a4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 03098611-042d-4a6c-9f7c-033d2d8b335a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 9befe47f-0483-4707-9587-7437d380d847)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9EBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h0C90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #132 13a9eb73-fdb7-4ae9-9653-a0d6ea8b0665)");
unit.assert_eq16(16'h9EBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #132 3a9d7e2e-306b-4eae-a51a-d60901fd17e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 dbf771e7-0f9a-44a0-b35e-422d5f5da37c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 c91bdf5b-ed1f-4ae8-afc3-4ed86a841859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 1d27dcbc-5a13-4005-9220-8fe03ce3e4d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 d4543db6-fff7-4b75-b091-b39a643f103f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 7210e57a-1d0c-4dc2-96eb-c883a87c61c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 8e347782-3a1a-4218-9d52-ebabc9189391)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h583B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h6A1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #133 a90c33c9-3832-4555-8abb-c48be933ef05)");
unit.assert_eq16(16'h583B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #133 93c2e962-f899-4b96-9035-475ed4b63dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 d97fc8a0-61a5-4c47-8483-9afbca7761ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 fbdf28ab-aeba-49a8-8f65-2df837f90daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 7b81236d-939b-40f6-8096-c88f93b0d053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 02e432cd-d1fe-40ac-8391-ef3c10791ffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 23899246-bea9-45ab-bd12-bcc966a3da66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 15e36b21-12a4-4a39-aa9c-664a54fbcd79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h1B69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #134 befe7873-ce6d-4966-825d-3bc90a7a680d)");
unit.assert_eq16(16'h0F40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #134 6dc70421-51d4-46f7-bd3c-1f752f9418a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 ef80ea3f-25a0-4116-8018-e5ba9185bca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 c0ce9a95-16d3-40c2-ad00-c7885476a2e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 d4540de3-d4a6-41d7-863d-7acaf95806b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 88871650-b436-4b8d-8e0f-21eb44c8239b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 30109346-f05f-4253-900e-895e2a87906f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 bf7a7e01-b9a2-4de9-ae7f-d5f1a6e97c4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1526;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h5A1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #135 4bf77b6f-c796-427e-a17b-5e4e28cfa7b4)");
unit.assert_eq16(16'h1526, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #135 ac4ebb17-2693-4afe-b74a-e7888ef2079f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 379401dc-3d57-45dc-8e75-8aab4e144353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 db0e8db1-9b81-44c4-8a52-7ff2a203eaf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 9fcf8757-45ea-4a33-8383-8d18a7f1d2fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 b038930e-b30f-46d7-9e38-8a080beeac1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 a70a430f-83a9-41bd-b145-352ab464f184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 668f379a-6380-4544-a809-c54a8dfe2038)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h4B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #136 e091afbe-5ac6-4b7f-b881-d87808363c23)");
unit.assert_eq16(16'h0C14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #136 706142b6-422c-4cea-b762-c79ca093bc60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 a38d1ead-480f-4c4a-8ba0-9c0950d99793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 0746a9ca-9c8f-47a5-b01b-b368a8a1d7f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 6a3a2b05-0da0-4932-be8c-7a3dc1365126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 d0f2d596-ef94-4bda-8286-949ded36d799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 cb174cc1-9c86-413a-ab95-a1bb8640ccff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 a9e23395-6808-41db-bf31-44260db4d4d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8912;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h8913, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #137 24e6aa1a-d8d5-46e8-b753-9b64c7b119c9)");
unit.assert_eq16(16'hC3BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #137 6cb77738-12eb-4372-8ed2-047a14395f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 7323a155-88dc-4e1b-956f-a86557b9d930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 d165e4a2-51fc-4696-a859-ca019fb6d125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 01753899-3ab2-4697-a2e8-f78dbe394720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 7ddb6839-8d4d-4ba1-832a-cb391de7cd90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 77d78a43-4c97-4076-8203-7c61ee0d1264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 435b8448-a78c-4025-a3d0-59a5a2b8619f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h8BDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #138 20f7b3f2-d45e-4559-9bef-c0e236ba7fc3)");
unit.assert_eq16(16'hFBBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #138 471e649a-0d22-4c51-bfad-d6e3b17bb517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 834d3cb5-7acc-4d10-8c63-34c703ad6f82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 0f0462f4-bf66-42ea-bc25-8ebb1ae895ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 cac09796-7ebe-42cc-913f-a875b9c05551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 f14ab618-2983-44e6-a79d-762d68be349f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 9b4c1d1e-cfba-4275-ac36-3b8ad0c1b43d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 536d8300-f714-45a5-aad4-95c6d12ea702)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'hFD4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #139 c14bb5a3-2b19-495c-9536-b64d1d7e9daa)");
unit.assert_eq16(16'h9E02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #139 afcad240-500a-44a5-96f1-f58b8c460141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 825e9780-ea7d-4cf9-9d35-dee6bd19b295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 8266e07f-d3e4-46cf-9853-0f32b6311442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 279e98cf-11d0-4349-92f7-3d58650e7081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 664d865d-d322-4df2-8245-664d47fe6f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 f1117cfb-79a8-4fdf-a383-b76751fa68b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 bba93020-e7e3-4838-96fb-94db12e5546e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h31F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #140 8a7db25f-0c20-4e35-890b-03f5f6b1fbdf)");
unit.assert_eq16(16'h78CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #140 250b5d20-df3b-4129-87af-a9e6b76fadd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 459cd737-82e6-498b-9e30-330494a64cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 1972a7f0-746e-437b-a03c-f4dd58a4fcd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 9ac50489-1106-44f0-8cb7-93a5b228d62a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 2ed1e110-3014-453f-acce-87d7140fb5a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 c2a72da4-01c9-48ef-ba8d-4d614171b16e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 c6eae406-3f21-475f-8750-a08bc74fb81b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA020;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3263;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'hA021, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #141 62810dee-01ed-4786-a075-45cf7e05ee27)");
unit.assert_eq16(16'h3263, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #141 2631ba15-9c9e-4f43-bf6b-65d3be0dc4d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 a2a6297d-560e-4f84-98aa-222cfb8703ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 49775ade-a91f-4ad5-9281-116c33206baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 a59e9b37-c0b4-4cba-846d-cfc2ba02641d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 51436ff3-1a6d-4ef4-bfbe-d0fee631d329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 cd80e607-763d-4356-8340-4f7d5a4b01d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 6e639566-5cbe-4461-83ad-0f88a96a0acb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h25B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #142 4efa2bfc-168c-4f0d-97f0-022470728ec0)");
unit.assert_eq16(16'hFDF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #142 e8ae3881-c622-4e52-b6a8-2bffe360f9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 e23d0f56-cb79-48e6-a5af-de8f2ef55edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 e0e3655f-28d7-4156-986c-f6880d475b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 6f618fdb-5de0-4a6b-b41f-6ad9bfb4a6a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 aa5e4313-77f8-445c-81a9-9b222f9b7605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 e9da1f5a-23cc-4424-9154-c77582286a8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 cd493f9a-d361-4431-bfa1-93327546774d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2796;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA7BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h2797, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #143 c5c1af8e-530c-449f-9d3d-f14b02e239cd)");
unit.assert_eq16(16'hA7BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #143 3fc89157-2230-4b21-adc8-056370e70491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 308f7d1d-5788-48cf-aefe-608b09e618d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 01098b3a-b1c8-404d-87ea-094a226a6521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 6a349f9b-2c37-43b9-beb0-e1b70f9d1b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 eac039a8-d96b-4f68-a2be-73bfd57e36e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 ec59de9c-54ed-42e2-8428-ed8061e1a043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 4921ddc3-9fb1-4133-9ff6-b9c525e73ce0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA79D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h96B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'hA79E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #144 919a30bf-ec15-4d08-a1d7-fd1cba0da12a)");
unit.assert_eq16(16'h96B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #144 a5b54d5d-6144-4c66-943b-d6be3ab9e9c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 cfd436bb-cd30-4b5a-ae8d-07053db488e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 f24cb3fd-44d4-4d96-9fde-e861e21a5a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 c30c6f57-ea9e-47cc-985f-57e807fae9bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 e978c111-9df0-47bb-bb83-c00d326bed1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 8697204d-5782-49ca-b75b-2370a7e9e748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 20670969-42a8-4f9a-9c3b-af9e7e016df8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h81CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD24D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h81CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #145 98a42f79-398e-475f-a832-8f164418b36b)");
unit.assert_eq16(16'hD24D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #145 1ae18400-69d7-462d-b769-987827ba8296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 ec719580-b662-4219-bbb1-df2f170118fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 164db783-401f-47d5-bb71-a552859745aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 92c8183f-8eba-488c-8b4c-5d403811276f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 64a25c9e-f255-4f19-9dd7-0a1afe34c66b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 531a8830-2382-4678-b92f-d3a744cb6667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 904175c2-ca1d-403b-b5b9-bbd5cee77553)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA037;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h1B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #146 e56def89-8a79-4dcb-b820-4285781b9528)");
unit.assert_eq16(16'hA037, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #146 841dac6b-d80f-4789-b589-ab20a1137044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 62ed90c3-09af-4c36-8de9-1411190849db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 14e0880d-51eb-4de7-8adc-c67a73439454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 8f0952ab-8724-4421-9bdf-aa9672a6a9fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 553ec871-7b5a-4d96-b6d6-16d6c7b36d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 c5cfb0a3-0094-428a-985a-9dbffc7cdfd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 7bb78a79-5f7d-435a-9ed5-a9ba8527953b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3276;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h0B45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #147 8211630b-3dfc-4934-a869-034e9810cd11)");
unit.assert_eq16(16'h3276, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #147 819010ed-0ba5-41df-8baa-207003917a28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 f91eed0c-cff2-4459-976a-f3930e0c3f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 424db7c1-9e9f-4fe7-a78b-495343aa66c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 64bfe197-17ab-460b-8250-9effd0e2d57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 3464bd8f-2961-4a7e-ab4f-88b0e2eedb63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 ecb795d8-beb2-40fc-8558-239c94f2a455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 8750b573-e35a-472e-bfb7-acb2f9d5fee6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'hCDDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #148 7831572f-c772-4b9c-9fd5-3592ca13944b)");
unit.assert_eq16(16'h87D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #148 55cddac5-26a0-44b3-b036-36e7409a5e4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 7d5ee4ec-bb14-4ef9-bff6-feb755f83747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 fc8a8b11-795c-457f-a08b-f862016de55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 11485e18-5c96-4622-bfb5-8b9ca6f258eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 3baf7c9e-c852-4f6b-acf1-b8bfb63a27d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 fc3a5ba4-c8c0-4790-a396-16ccde30af58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 627e3963-bf02-493c-bf32-9d9b49e71311)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h5B32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #149 7b238254-bca5-45f5-98c9-7a7be6ef41ce)");
unit.assert_eq16(16'hFFDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #149 4457fd52-7f37-46e5-9454-21f303ef2cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 93e45e0e-cc2c-4eb9-a8a3-62e07072d8e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 01abb16d-367f-4b33-8b81-9efa803200dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 c02cb181-3bc0-408e-a789-c092319c6507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 1d1ef597-de2a-4b76-b541-e34d0d71756a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 cd8605b6-6c01-41be-97bd-8dc92e279720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 7cd9d701-8dcb-4826-a237-3d7f8d61fd45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h534A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h240C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h534B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #150 f5e80600-8e49-482d-866a-39180a3acf85)");
unit.assert_eq16(16'h240C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #150 e021b9ce-9afe-433b-94d4-8fa4eb505439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 e9cdcdd6-d4fa-429e-8c96-01b8a4a9928f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 299b5b26-79db-4a3f-b3f2-36ec647eaf2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 abc8a883-73cc-4bbd-87f4-0729607c817d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 36e6a0e8-e0a3-468f-81e1-05def68fcf1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 d9ae1078-64b7-4ce3-bbd9-1f7e826c4e9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 b2f35cfd-2971-4fd1-849e-a883120d5b0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'hAB8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #151 a79ee801-9949-432e-84aa-500707fb3c81)");
unit.assert_eq16(16'hDF1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #151 ce07eb35-8040-47c2-b21c-0a47ff75a692)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 5df6f452-bffd-43e2-af5a-86021e658d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 664031fe-2e21-4029-b0e8-b04df932f2b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 96554c51-0641-45e6-ae32-a2e53a573156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 bec49f9b-06de-4b9f-aa85-5c0221460886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 44411b69-6a33-499d-baa9-8b8fd9308df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 d3ada33c-ef19-4ad7-9b3b-9a9d5c13d456)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8783;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC362;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h8784, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #152 e5ff62f6-3d0d-4e4b-b45e-d7241ae5097d)");
unit.assert_eq16(16'hC362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #152 a0151b84-3956-4cbc-a157-f680d6c30b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 19830e06-fd26-4ca2-8332-0043f2cc48f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 9a95eee5-df90-4c53-acc4-34fd7dffdc24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 50bcda06-faf4-4aad-9fb4-a2a3108d5091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 29736ad1-d47b-41ce-b1cb-c1939cc47964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 90d3175f-afc6-4f8e-be03-6e6cde5d6556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 e69f6f30-b5f7-49dd-8a60-fbd0ee5cebf1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h512A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'hAD9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #153 203ac79a-9987-4f33-ad91-b5b9da39ed58)");
unit.assert_eq16(16'h512A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #153 96acdc30-1185-41ef-bb87-1818afe92579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 dc5cab4e-45b3-466d-af5b-d8b2df38e249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 eb87ba9f-f9f0-450e-a601-13d93109b970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 d62659b2-c0c8-4eca-9f93-8658fd707ba0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 50b59f7a-6119-470d-9046-2f026e70fb2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 aebaeff8-b478-428c-964d-c42e41ac3fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 15b8179b-5f1d-4917-b817-e6b3c270bee4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC3FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE274;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'hC3FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #154 68bd9a25-1684-4a3e-a9c9-ebcac1af0cf8)");
unit.assert_eq16(16'hE274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #154 6172ab8c-f0b0-4538-863c-76376f11ffc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 d27b5cd5-be94-416c-aa84-542ea9d0fe73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 d7e823d5-c0e6-4558-abb5-bb325b3231d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 e848b82b-0ede-4650-9999-7e95c5df56ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 c98ec55d-6573-44d9-a1df-c06de98268e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 9e93265a-80eb-4e9b-8777-1bc5be12e59e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 5e0262c1-a754-4e4e-adad-bd8ebf94ca42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7373;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h1B69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #155 dc20c704-255d-4796-9e28-d1afe4edb33e)");
unit.assert_eq16(16'h7373, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #155 89e1a1d5-1699-4427-b41f-b5d2a0854a26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 87488bb8-d8d5-4681-912a-4acf09738d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 34c5316f-2767-4b6e-8b61-077d13a56fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 09c7337a-18c7-4064-8966-33f86909698a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 3b4502b6-4b31-49e0-bba4-a37f162c1c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 f7e9ec76-c3d0-46ed-aeb3-02e93d1b3a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 fe2084ea-8248-4aba-99b2-d28386e03e39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9BA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA57E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h9BA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #156 496fe001-15f5-4c5f-b38c-5efe0bde0355)");
unit.assert_eq16(16'hA57E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #156 2af82722-ed61-45a3-8c84-b5f6e4f81ec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 57bfa694-3818-4eb3-a9d0-f5e78a47f93c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 8d321fc6-5551-417b-894e-b7444529efbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 f86ab2ab-00c8-4af5-8af7-48e5685caee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 367de072-3324-464e-95bc-08d72ec1d420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 71687671-4a23-438c-97d7-4ec39cb1e57f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 f2937525-f78c-4d93-862c-231bb0c82d94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD866;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h52B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'hD867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #157 b883ade1-36b4-4ccb-9383-0ebf29f6f228)");
unit.assert_eq16(16'h52B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #157 bacb88f3-19c3-4d55-8d1f-3cfbb6530c1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 91e6a0b2-e968-49df-b091-fc64a64801c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 f55e5ba5-72a2-4e0b-a612-c92b1031fb04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 6ac7968d-119c-4610-8226-96bc0c2de2c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 45ffc383-76f0-4d1e-9297-a46dd4284a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 61a13eaa-0f4c-4927-8270-7a1cb45e04d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 bcee7def-ffba-4946-9c9a-3b5adddcab45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB135;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'hB136, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #158 e18f994c-2722-4fb6-a12b-9d1821e29b2d)");
unit.assert_eq16(16'h03C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #158 2fe4dec5-4da5-4b34-93c9-d1d0e04d3d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 0b5d8432-ce20-430d-b4ed-4c700dc2a41e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 88b79995-ea2d-4e72-8542-8c31ebf11fe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 c10dc344-e8d9-4e11-9b60-c61376dea708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 d413567e-c6d8-4dcb-8a87-f28598cb3efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 dae30cc0-1076-4d85-89dd-6babeb3c7929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 30b77607-ec1e-483c-a941-f4e22a82fceb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h79D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h808B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h79D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #159 c00f6759-13b8-44a6-b720-f756e5a29b35)");
unit.assert_eq16(16'h808B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #159 6bc4585b-a944-481f-9c90-2fd03fa79ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 6f871a96-7f95-454f-b37f-73e68f2e96a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 6b87af50-3193-4d89-a7bd-cd47896d4512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 5fa71315-9c86-42ba-8863-11a7c355e3ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 f02a029a-d355-4b11-b149-0082ba602fdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 1d135111-1cf9-42e4-89a7-0cf051856cc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 1d9f0b3d-c499-4593-83d9-7243990495b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8BC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'hCB46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #160 8890bf70-620a-4602-943e-5f2960ab0e93)");
unit.assert_eq16(16'h8BC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #160 c7cfe0a5-c236-432c-b523-078a39801cf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 5b0687fe-c713-40f4-9abd-b27694f03143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 a4a63f55-3f9c-44d0-a55c-680c5f560789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 9dff0d82-53da-4f24-bfde-4c8f4f79ee8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 f81a2b14-4a2b-4953-9341-a2e043b89d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 7fb7b0b7-36db-4324-984f-71929e92f635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 88d791f7-65a9-45f1-9cf1-7047efd68f5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB677;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'hB678, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #161 e6254a1b-abfe-4bc1-8fb2-b78b6609f150)");
unit.assert_eq16(16'h066E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #161 95fd8352-b744-4414-ac14-adfcf7521ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 28e77ad1-a861-49dd-8aee-4554dc7e3404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 14a51b99-29a5-4e0d-89c5-db662618e236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 12c57229-7aeb-4674-aaf2-43c207161960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 76499151-7085-4706-b483-f2126de2bc0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 db1baeb5-b063-4325-b7c6-2186bee58152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 739715db-72c4-4979-8070-32b6cb7ea195)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF917;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h826D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'hF918, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #162 e2901444-b807-4b54-973e-7a3fca88b3a8)");
unit.assert_eq16(16'h826D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #162 ba93c0ad-c6f8-4398-ba17-a234aa959f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 b127e3e6-bdd6-4ed2-a375-f3fd6e62d133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 7248ed77-b774-488a-bc95-d3d36aab47dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 b3c08331-13f4-4c77-8a00-343ddada7460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 487713c5-0ec4-4c23-8783-d5962b607d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 77c81265-753c-4bd4-a607-31c275938a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 f371f1cb-9ec2-4314-aea5-6a425e6ea149)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF381;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'hF382, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #163 e3584710-ee28-4ec5-8cef-9908fcbd70d6)");
unit.assert_eq16(16'hB3DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #163 367ec3f9-0171-4ca3-a9eb-ea5f70fae370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 8a7d9c23-0337-4796-88b2-322f8afb98e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 1a5e54fe-b83a-4350-8750-ec175f21b5d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 64287279-fca6-4bbd-acc2-380c4300eb18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 e9aaeb05-b906-414e-843b-a0e4f590eb71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 5b9bc79b-9148-41df-9cf1-434d9450c4af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 afc60176-9aac-45bf-9e76-bf1de67b3651)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h865C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h988D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h865D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #164 5c59f622-5db2-4216-a95b-421fdfac4d16)");
unit.assert_eq16(16'h988D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #164 18da134f-ed25-4781-aaef-d03ce82f09ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 601695ae-db37-4d18-8328-4d23aed7f172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 11c886ae-46c5-478a-a918-ae69c45c3898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 bb90ee53-627d-45c4-a845-c7f86848c396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 ed19d2e3-06ac-4746-ab37-f70bb9442db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 277a82f3-c392-4bd4-882b-a8ebe58bc0ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 d3849561-b255-4251-bd32-a75bc0bad333)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h6FD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #165 359e6f28-eb1e-4f99-9852-6ebd540a1595)");
unit.assert_eq16(16'h80C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #165 d1e32780-16fb-44e3-a8e2-1074e34fa114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 5b8f8cf4-f200-4a77-bcf7-067997a8cb89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 0520aeab-1faa-4bbb-bebd-68f7a1132e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 1501e686-b7b3-46ea-8952-81ba126dce88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 6dff09ce-bc2a-4212-a034-97a8a2171a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 8a9be98b-43f6-4b4b-8276-29f16971f47e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 65868db3-f8f2-4ccd-8896-bade841db415)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h7D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #166 bae929c0-b105-4f1c-ac15-d30b61bca65d)");
unit.assert_eq16(16'h66EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #166 bc22beb5-eb3f-436c-ae02-8381f57f7715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 8f7d45ef-32ae-440a-a5b9-a557bd495c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 0b86a6bb-548f-4e1b-815d-054e3d301254)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 1de1e095-5f25-407c-93c4-5ad80bfd6e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 5a6f6b97-56e1-428d-b8ad-46d165fbbe27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 d72115e9-e850-4c80-a293-3bd05a1c18ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 755913de-3cc0-4169-b7c3-d2bdab25182c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD075;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h6B23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #167 9a10c949-8b36-4a95-810d-14b957b46e62)");
unit.assert_eq16(16'hD075, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #167 06d81de0-2e4b-4e86-8f76-0e640327af9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 1760b78a-a2bb-4b17-a739-547aac667f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 726518fe-86a1-4ed4-b923-98b8e6a629a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 fade3a14-fe34-4080-b334-0f9392066e18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 cabe5266-b767-4ddd-a90f-e32c1f61dbee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 b6dd8af6-bd26-4b5a-a5dd-fa36ead3cc84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 f14987b5-d336-4079-9bfa-ca7f72fe8f68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0370;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h7B22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #168 4f1b9306-d1e4-4638-8eea-48cf4f87d07c)");
unit.assert_eq16(16'h0370, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #168 46a3884b-7624-40a9-bdaa-b4ba84bc5f31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 2b121ecf-8b54-4605-b3dc-9e2964573226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 57249859-b05a-4087-86d5-1f726f7c4e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 97b63d47-651a-4e1a-bb2c-1db878cdf994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 74655dcf-f042-4a5d-85de-652b3b058b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 6846a8f3-b263-45aa-8a62-7da94c122d05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 e50cde10-eb95-47c6-b3fe-c30a988a5ac0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h174B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h157F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h174C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #169 6acbe826-100a-4308-a2e7-878214638f44)");
unit.assert_eq16(16'h157F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #169 5476d84c-1634-4a99-b51c-1e74017b68ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 db099860-f42d-43dd-95e3-d6e3f6f8ae22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 35aa2d14-c3eb-4c37-9040-844897f14774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 f8bc636a-fcde-45a8-ad97-f9187f6535bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 da4c930a-0b92-4cf2-86eb-5c84211b9366)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 2f781bd3-7aa0-4379-9bb9-aee3b78e2e20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 0024492e-1d75-4348-9562-f9bc19bd6cc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD6A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7917;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'hD6A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #170 afd59a54-94e1-47cd-b1d4-7ba014498a00)");
unit.assert_eq16(16'h7917, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #170 c051d8d0-4379-43b6-824d-78d21188d879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 69916813-a1cd-46ab-87a1-4bd12aac2f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 e067f65e-9610-4601-aa20-878426f066df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 81e5dbcb-0929-48ff-8731-191606879b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 28fdf671-08ee-42f0-9a81-147894036aa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 ae67380f-26aa-4402-bba1-517a8c26a222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 3b184cd2-0c0f-4b71-91d1-1864aca864ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1160;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h94D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h1161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #171 22c3304a-c8e0-491e-9b66-d03c66167988)");
unit.assert_eq16(16'h94D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #171 101a7bb7-49d5-48a3-876d-7d54eea05abf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 243d2a01-5ae3-4886-b2cd-a1ac59861dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 0f47665c-c4ba-4b0e-939f-248deaa8f8d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 1a85d4ff-2dd9-4f83-a570-20360b9b535a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 7bcfaa62-ee41-4d61-a787-8e929d955a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 e1884356-019d-4880-a419-dee1cb61ccad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 c0f82b25-589f-4357-9da7-ab7a0f84fd79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF04A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'hB0BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #172 72fd67b9-bdd3-487a-a1fb-a71db3404354)");
unit.assert_eq16(16'hF04A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #172 38792065-a476-49d3-98e0-b783c06d25e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 e1a795d2-60cc-4f76-958d-2ae8aa4bc34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 12bed40d-17b6-4311-a367-c3c4b26629e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 381e2bf6-4bf2-41cd-872e-cb6fdb749098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 367a6356-dee4-4e59-8607-a28028edc5ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 9377f996-bf97-4524-8328-bb5b81ea2ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 5d56a010-8534-4eac-a664-5954a4ab04d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h18D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8150;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h18D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #173 228b727b-0597-4c1b-9f63-7686aaaa7361)");
unit.assert_eq16(16'h8150, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #173 a1f806bd-bfb3-4b52-a96c-fa5a00f6f624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 53699152-4c08-4017-b7a3-6b0482f69415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 2dfdb7c2-9231-4c62-b3e3-ad3fb464aa46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 dc3b58bc-6dd6-4ff6-a6a1-7b49456d76a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 5219fe5d-a13f-412a-8dae-1f77d59153fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 2a51e355-9628-43ba-b8fe-5d516796eee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 589ce489-305f-4ae4-9e10-be3d9fcd83fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2ABF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h515A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h2AC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #174 f3119294-8837-434b-9a7d-c82857087e18)");
unit.assert_eq16(16'h515A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #174 585c741e-19dd-487e-96cf-43bfde46a202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 ad8c373c-9533-4ef9-9c0c-beb79f57a7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 9d017998-4e9c-4be2-9933-198354903a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 1b967805-cce5-4124-805e-3849438b15c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 ace2bbca-8ae2-4db6-92b8-aad68b7bd970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 94e12d08-f192-4ad8-9b3b-f9f862d70d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 ec943f77-1095-4be3-affc-cf7cac9790ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE76F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h0B9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #175 471610a6-1643-4008-8839-d4af0e00e9f2)");
unit.assert_eq16(16'hE76F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #175 28bfd1ac-2dfc-448a-992f-1d5cebae61d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 6b0ce7a1-9cd8-4134-adb8-b770d213e692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 3adc5b40-38b0-4092-a9fc-31c25d9f803d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 4aba2ad1-219e-4142-8095-4009f9a60c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 71e10448-9654-4252-8111-0f3d95079fec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 363b4fa7-676a-4249-846e-8350e9aa51af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 3f17a5d5-110e-4a3d-9a02-c32db013896e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7280;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h7281, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #176 c71b7f7f-adf1-4589-9720-e2c8afc4f940)");
unit.assert_eq16(16'h3DA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #176 0854ebd5-9b83-41cb-9a0a-1ae381bbf3a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 5481ecc2-beab-474a-a586-a1a44f3af38d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 50677795-3ee2-499b-9c91-84716d938495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 853eaa63-16f2-4a58-a341-8f5be82b3f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 3eda4fe7-6cd6-47ab-ac41-74adaabe28d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 e8d0de32-2809-4e19-b263-e91d8be4dc51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 786b8d2a-f5c4-46d7-8fe0-0d740a1e4f53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDEE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'hDEE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #177 d72ecea2-d28f-4419-80e9-4793b60a99af)");
unit.assert_eq16(16'hEA57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #177 a8a931db-1f82-4e07-b504-012aecc29a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 bbb84982-ab7a-4b97-a321-838ec37e7d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 9eb30cac-4f68-47c1-a72d-91777aeb1101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 6d6f8e90-92bd-48c6-917f-0cc1468f60a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 883d5b35-75dc-4db1-aac6-2041c4aca431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 c31f44a8-3ff9-47fb-8e3d-e5ddb1f484e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 a1066fe7-a717-42c3-87b7-a18616577452)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD2D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7184;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'hD2D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #178 fa1870dd-5610-4e96-a1a4-e3f8300e472a)");
unit.assert_eq16(16'h7184, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #178 bfb83c05-8b85-49eb-98b5-6bea359d01e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 59e37687-2e9e-40ff-bd53-54675370f19b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 b5865701-49a1-4cbf-b344-be5304b8a3ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 2258378a-fc64-4366-b176-d888825f3869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 9e533b57-db52-48d1-9de9-9862d1ec5d19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 87bf7d40-28c3-4906-af4a-ee387f76d6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 bc8b6577-e63e-4730-81e6-b4239e1669dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h0A00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #179 bb1cab80-8da1-40ca-bc87-2c215cdc44b7)");
unit.assert_eq16(16'hD0DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #179 5aa030a0-f0d5-4724-9139-339245aa88c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 cb522206-ec6e-462a-bc4f-6b91ebec772c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 e155182f-6857-4327-aa50-194d57560ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 e89060a9-e4da-489b-a000-af7566e85843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 b3cbfe13-cc2b-463c-9a8b-6e4638303725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 d96027e9-055a-4fd8-9842-cddf37865a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 e0c39ba2-f826-44f3-babc-6fa97ea4b680)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF710;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h9A8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #180 c050b1b2-6285-4036-8976-275c6304005e)");
unit.assert_eq16(16'hF710, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #180 47e64167-7977-4331-811a-3f338e17d07d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 8985cc20-73ee-4bbd-aed7-33a1e15e0014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 5e8fe2d8-6c76-460f-8079-14042cfbe007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 13673322-a52a-4f1d-a2ef-21b6f4ed067f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 ea2a2777-9c77-4c16-a3b7-d8fd2dce9498)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 15b06f2c-83dd-49c2-bc9e-c86146758b19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 ab64fdad-3ae2-414e-95c4-9cb9724a28ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'hFD39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #181 510074da-53a3-4af0-903a-979257feb114)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #181 46621782-4efb-4e45-a8f2-e6c7fdefdb14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 3642c2b5-199c-42d8-8e77-6616c5a72250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 44f7dbff-99c0-4a06-9ace-aaf1336d54af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 32d6c66b-2601-436b-a5af-238d65d35f29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 85b64fd8-7be6-49f9-9bd5-993bb815ea5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 e027ebda-5b82-499e-80b5-acc7c7408376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 2ee345c8-afb3-4f31-abe2-4d22c82752d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h615C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h43F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #182 91d60fb9-fdd6-4252-9157-f31ddd292ce2)");
unit.assert_eq16(16'h615C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #182 f9648048-feeb-4f61-92a8-304e08dfb593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 8e7d8af2-0618-4e4f-9a0e-8cfaf5cdb84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 135b7d53-9d6e-4065-a570-ab252f436558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 1ea7a2c5-6e46-4ac7-acc6-9cacf284110a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 90c34a11-9a2f-4ecf-b828-71f0814e2249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 c1fc8e38-049e-4e72-9860-e717282a806a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 5191d87b-f1e2-4899-b362-1a8b309889d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB08E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'hB08F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #183 c88454b7-21ef-43fc-a07b-467b9e2a8663)");
unit.assert_eq16(16'hFC04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #183 91dad90e-cad1-42d3-a080-166394491828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 197bf328-65d9-4f1d-a874-feca48b040a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 80fb0cb9-a7f6-4a3a-abb1-3328f5d591b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 a13bcafe-07f4-4107-9cec-5c45f67dd04d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 c5c4842b-abf2-4f96-902e-9fa4583c2bcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 c989dbb7-0dbf-45c5-8e12-2742d58787bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 bf4cb61b-f34f-4fff-80f4-6baf0ab9a633)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'hEA2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #184 34423e50-e271-45d4-8e58-85c8db193efb)");
unit.assert_eq16(16'hB3BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #184 dddd36cb-abe8-436c-8dc4-dc0b5cc92b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 0c8a2b67-f2b6-48ea-9f31-0a5f0deefe53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 903d4d19-62b3-4e78-acaa-31c473abd856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 6781607d-be71-4db5-b7fd-0832ec4fdbfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 914d6a29-43c0-4a55-ae36-d383543faa7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 61a3f9bc-b7c5-4395-9537-3f9a685700bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 bb4304e9-b29a-44cb-9124-eed4274c555f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC49A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h1C24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #185 46d2bfbb-90ef-44a9-9b55-c1e1fd1c96af)");
unit.assert_eq16(16'hC49A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #185 d416055d-22d4-40d6-81da-3e0dd89c27fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 00deff65-505d-48f7-8524-43244e6dc16e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 6302ea09-0d82-46e3-8978-34845e075b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 098d71dc-c470-446e-a26c-20bd5541c214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 6365d4f2-0238-49a3-b865-1bc23a4043cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 d058d314-5545-4b51-9db6-fb655850d80f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 bfb11ff5-4f41-4837-86ae-d34bd925cf16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF4E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'hF4E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #186 5d248c1d-f674-4035-b4e0-768fe886a107)");
unit.assert_eq16(16'h3DF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #186 86bb625a-3f51-4b41-bccb-1404436cd2f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 fcf3c730-a5e4-46c9-9894-b023786b66ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 82190973-8c8b-4204-8133-02af107e3412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 bdd95bab-f1b9-4f8b-9891-325ccadd9d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 caaa46a9-66e9-41a6-b4fd-b45d617aec54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 9123d4e6-2b7f-42df-bdb8-8501f3ff3323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 bd7b1217-ca12-4efe-a2f8-f598cf13da4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA11E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'hA11F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #187 dd683bf2-1321-488b-98bb-fc4e7fa6172e)");
unit.assert_eq16(16'h41F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #187 6eef7332-1b0b-4148-b83f-a1e5b81596d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 5400a518-a36d-422b-93b5-97bc01e45c69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 ac662836-0650-4184-a5dc-15631ffac3e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 f16d47fd-c862-48ec-82f3-009283ae554d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 873c1db3-603f-4dc6-8df8-0c37dda97baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 943a30cf-124f-401c-9a1d-20af64b0f565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 3183d8bf-b133-40d3-a848-c9634cdeb7e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0195;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h25EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #188 c88d7899-954e-462d-baeb-b6fd14a34c10)");
unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #188 2b648613-2e4d-4366-8545-0b4379d48f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 244f5c98-e9e3-4f83-8617-3fbb42bedba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 18d5a557-ed39-44d9-a1dd-cb90bba6558d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 bb6801eb-e8b9-4728-87f9-5c356489d37b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 997e1bc7-8982-4547-b77d-58fae78fe946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 36c84925-27ad-4635-813e-cbde420a9060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 1f3fef22-881a-4aba-a6ee-7b513e811666)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h4CA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #189 96d3df61-de0c-44ff-be25-f1a5c93798fc)");
unit.assert_eq16(16'h5D1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #189 a20505a3-e0e7-4a43-aa1f-4285479a2f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 b95dd713-ec91-4561-a243-884399c72a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 db83bdd0-f6ec-4a30-a171-563b76c1de7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 a231c652-8be3-4168-8778-5703aee19e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 e443bb4c-d23d-49df-b96c-802e2167ef53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 a2b81c3c-3bcd-4799-96f0-a6360cb69090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 6dafc1a9-d2a2-48e9-91f0-c055e4d2d5d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h2EDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #190 3b45aca9-630e-4d34-994f-d7f215dc48ae)");
unit.assert_eq16(16'h5F64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #190 4fe8d722-c03f-4345-8bad-477552fff0f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 6db4625f-2d5a-45d7-aaa3-83ef890e2a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 d1b1bb51-e619-48c6-b837-ec9c9e32cef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 ad10d2a2-6532-4a13-bc93-a57d34da8312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 67c49fa9-8764-4b90-b105-8945d70c7f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 cb23860e-a857-4774-8f21-9f18c17afdda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 19e344a5-c183-4957-9a03-37f8c607b255)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'hC765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #191 63aa9cd9-135e-48b0-ae68-17cc04c14256)");
unit.assert_eq16(16'h2E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #191 7eae4c51-a495-46d4-9c32-cba74f5aff16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 c3d97130-852f-4a3e-9562-35386193c21d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 ad60d0e2-248b-4d2d-9fae-4670e5ab03e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 d192d473-6737-4fa7-974b-f2acffc0b5c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 1a65da61-f648-424e-b172-457a52428b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 e2fb3b74-b56e-4970-9b61-8c5819dac582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 2b4c9ad8-daa7-4755-9f58-3cc4d4b54316)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5028;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6BAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h5029, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #192 bc984a45-b8c1-4842-9b81-41faf20165d8)");
unit.assert_eq16(16'h6BAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #192 55f24e0d-f4df-4781-a420-2f1e50a93d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 de1f4d8f-d5aa-4d32-b7aa-db81bcd0a054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 116fb135-a67a-4115-ba80-84750335ca2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 dde9a407-350a-4393-b53c-70248f72d0b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 6801e01e-a31a-486f-a07b-031069a378f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 f9df2bd3-4c45-4b98-a930-3ade0431c38c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 8c84f5f8-80e9-4345-b071-b564b7597e78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h10A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #193 942d7ee0-326a-4e47-bc06-b41382a45295)");
unit.assert_eq16(16'h8C6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #193 c1019f46-1d85-4a1d-9f89-035864c38d03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 650fe033-60fa-4eb7-b7a8-4361aaa52cb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 a51b3156-f325-4dde-a5d4-3a4563e87cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 a7967901-cde3-478e-97bf-a2650c48642f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 aa62023a-106e-4edd-a0f9-cc5d6456d4d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 7e7f224a-d4bc-4f90-8ccf-af9473d35c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 d2c242f3-f0aa-43c8-895a-2c37dc8a983e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h880D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h141C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h880E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #194 ab11fb07-8e83-4cac-af3e-dc464260e17f)");
unit.assert_eq16(16'h141C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #194 cf8f055c-cceb-4473-b2a3-18d7806f70be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 aa53573f-2076-473b-95ae-a9e267d5b0f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 85244b50-08d8-4f28-ae91-1f800741d93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 61b345b1-0b11-4ac6-8047-e1afeedcfbbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 688d81fa-fef1-4d3a-9410-70df268eb8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 2e36228a-92d1-4adc-b89d-37a65c592f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 e504348a-f139-4f42-ba94-aa2474f0ebc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD1EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA734;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'hD1ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #195 db5af1ef-7b05-4a83-b0b0-927a72aec85a)");
unit.assert_eq16(16'hA734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #195 ee4b55f4-5862-4052-bab2-8ef7f268b346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 f08759ce-21ae-4ed9-bfc3-2b2307cbd892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 5c66ad16-6a08-45d5-836b-e1713a8f0455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 b29d3686-fea4-4a59-bf15-ebba43280107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 7d17b685-9735-4e12-b9f5-220721064671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 07f1e943-e614-41b2-b14c-c3d694754ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 db462dc2-4715-42b6-a135-06822da91b7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCDC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'hBA5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #196 ff5dc4ee-8a41-472b-a4ff-655b72df778f)");
unit.assert_eq16(16'hCDC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #196 7a451b5d-88de-4cfe-9315-1cf29e7a7ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 123c785c-8dea-4bf4-84f6-7de2fe987c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 a311723c-d7a2-4fa2-9fdf-29a9ce8f3053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 eeac38f5-23f3-4497-b7ff-5cec8e992ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 aa5cc9ed-68b0-462a-a6a7-3bc22435cade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 d2b7af7f-f611-4030-a61e-0c019d97f99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 49e7f62c-fcfc-4405-afdc-6a7d34010f39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD91E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'hD91F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #197 e8398f00-19e8-46ab-b609-444a30b605c8)");
unit.assert_eq16(16'h2D5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #197 5d77e325-9c13-442e-9005-c9e88d3dee86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 32ce78ce-4776-41eb-a36f-fc3b8bc2b6ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 84bd6ee1-9988-4135-bc8d-4c2f8972b52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 985e495d-436b-43d7-8645-1c4f0a434743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 95b612da-166c-4f29-85e9-17d1f6f16dc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 21e791f4-9def-4583-953c-3d73212bef53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 e083c936-b22e-4912-ad2a-c7af5cf0ed0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h097B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h097C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #198 8a1f5ceb-431d-4374-b38f-a5defd1fb2be)");
unit.assert_eq16(16'h66F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #198 871fe77c-74a5-44dd-9cf5-d3103f9332dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 266f9c56-16d5-4d43-9312-471167c6c445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 b1bcb4cf-60ee-4a5e-a821-58d9e254f61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 881c5dd5-84bf-4b59-929e-099e45c3c322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 cff56bcc-8bce-42b5-b533-ec4e4187e808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 9961790a-7b2a-418c-95b5-95bf7e1277ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 5a50dd7a-43da-4f70-9800-28e43f0b4d3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4436;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9562;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h4437, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #199 af60c026-440d-4eda-a5b0-3416b9bfcdcc)");
unit.assert_eq16(16'h9562, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #199 127939cf-0b66-4fea-a3fd-3a02fa15f6f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 0a202e7c-c49c-4e5a-ac32-3902ecc114e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 4cdb9d85-6be7-4438-a2d0-b65b8b44b86d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 44e81c99-f7e5-40c4-b260-decce02d83e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 7e4332fa-d8d1-4f28-bd90-11e4f36efeba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 ca149da2-a6aa-44d5-9884-116b4cc95fff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 e5cb715c-f13e-45bf-bd33-934a86dd9604)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h869A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h47B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h869B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #200 56d0f558-d54e-4270-85cd-afdb3e9203eb)");
unit.assert_eq16(16'h47B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #200 a8414422-4dc0-4ca8-878d-4c0ae61d1acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 d18ccdf2-5b7e-44a6-ab4f-4eacbef3869c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 fbe548a8-8699-429f-999e-82cffe9f9def)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 826b93af-7c02-4955-a3ac-ff82cbf4008f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 f4e6f94d-f942-4bcf-b369-76ceb326342f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 daa0fc84-670a-49c7-bd29-bcd90879e11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 2edc4044-1789-4a5e-902e-6665fe12e82d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h28E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h28E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #201 ca6dc3f4-9801-4df2-a0d4-a8491fff0cac)");
unit.assert_eq16(16'hEF2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #201 31582651-800d-4779-8a2c-7bd96e68b956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 05fd3707-68a1-47b8-b5c8-e4aded1b5f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 3e59b514-811d-4dc9-96dc-6aadcadcfe5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 376ef366-f55c-4a05-bc6b-dfffc9c45298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 25f18e43-6ae2-437f-a87d-58e5e140db31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 849d6f59-c04f-46c9-b9cd-8157b63f567c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 263817b0-3ae0-405f-be97-43de768a4d4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h636E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0583;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h636F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #202 22ed183c-bcc2-48c2-9ab1-50246cda7959)");
unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #202 a8ca8569-4126-4d57-8e30-db2f258eae93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 fe05999e-1af5-4d59-ab2b-6507c06d70b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 f0358713-40c7-4b12-b8a6-75be238150c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 e2a4c76f-e55b-41e7-a309-00f1dff6c6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 9ae0a1e4-8772-47ea-95a9-f3df33b88fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 e65553fe-f0c7-4fdb-ab9f-850756c51a8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 684c62c7-c3eb-4779-afa3-61360a8e8ce9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC2AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h43CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #203 ff46f099-38e6-4857-a57e-dc9380473793)");
unit.assert_eq16(16'hC2AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #203 6ea8565c-8522-4304-88f3-79976f2696f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 6a32fab5-8144-452f-b8ff-9c0a23ee7bf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 25004de4-97c2-4732-9dc2-829dd5bcd21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 a4104a67-ac3c-45f7-9a7e-105d23ffe974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 2d71e9db-2a53-40b7-81f0-dccb306947e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 ce403079-fa62-4b34-9534-5b12697f01fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 c8963f14-5ece-491a-a80b-51419e10a5f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h231A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h231B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #204 14c1a5cc-efa4-47e1-8025-e1917a05aae7)");
unit.assert_eq16(16'h42F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #204 e8307692-bcfc-4ecf-bd90-5c7af33f930f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 5412ce17-297e-4e1e-a7a3-9ad0fdf79d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 fcc27374-1d74-482a-a7da-a18ff1395ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 4c3dccc5-0f4e-4575-998e-7b59c0c50ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 0445a842-0656-4ce6-a40b-82afad69377d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 c4c70d00-b623-4d3f-ab4a-c80168b1133a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 79975569-e692-4207-ae42-f3b4bc0dc1e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0789;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3A7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h078A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #205 1fe72e0e-b15c-4ab6-823c-d1630a1c6af4)");
unit.assert_eq16(16'h3A7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #205 7666220d-c629-4db0-8ee8-b9b0f644bbb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 4168066c-2b77-4479-80f5-55d4a038d232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 6ee3846e-aaf0-4b1b-9be2-0f82549a9a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 cec226ff-f722-42bb-8437-41662f895e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 84e5aa31-da5c-41fc-b042-42c31c15cf1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 8525fefc-b688-4ed6-8ca2-020c22d9d062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 6f5817b6-fddb-4f4e-9879-e63b00127849)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2123;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'h2124, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #206 8c5573d0-ac65-405f-9eaa-9d596aa020ee)");
unit.assert_eq16(16'h5D20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #206 dee0627e-1e26-4b83-aa38-c7d8bbff3b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 ac937183-91b9-4d73-ae10-8886f20be735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 e8ee87d0-bf75-44e0-b09a-42bbe9ad1dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 781c7d97-51bb-4c2b-94eb-0ec5d272a4e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 002ca30d-d94d-455d-a60c-1d422cb5e91a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 fd9d7aa1-e12e-4f86-93ae-eabe856c13de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 a7645f68-7c7c-4ecf-84ed-281390eb159f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h020D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'hAA6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #207 826b3785-5186-44c0-853b-661927896fb3)");
unit.assert_eq16(16'h020D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #207 afe1446c-db92-4d12-8a7c-b5cc27740b3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 5e3fcf1c-eb54-4df0-b3dd-87f760d4308b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 a78f3da0-2e69-4e90-8049-f3cdaa7b1bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 05a76038-016a-4320-86f4-1f0036b50844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 931c2551-f334-4348-bb8d-f09e04909f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 c72f9352-7381-4713-a751-ca62fc51e053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 1624fc25-99cc-4dfd-8a2e-0863c59873a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE232;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6052;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'hE233, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #208 1f64038c-c0f8-4828-9508-5232bdf7b605)");
unit.assert_eq16(16'h6052, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #208 28ca1a0c-8230-49cf-9817-1d42c8f61ddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 4a27f462-8e5a-4957-9284-fdb784179f1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 4f4ab12e-b9dc-4e42-af42-3264426d3289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 60f4d2f9-17bd-4e63-aca2-2571d48c6cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 65c821f4-5297-4ff8-9047-6e9551a5f278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 9d928ab2-0f50-4bed-93ec-b97158c12276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 1fc3c4fe-9162-45b5-874e-439760446245)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'hA9FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #209 e955e12a-e280-4d78-bb95-10f98ff50992)");
unit.assert_eq16(16'h36D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #209 45475f60-07e6-4e69-a541-b94d9e32fa54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 781f42fe-35c9-401e-a9dd-1fe9ba172429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 313ead58-3cac-4644-b104-605c594a6421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 4fc39138-50c1-414d-99f7-7ce1ddf8ea3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 4d826f7e-a6cd-4958-9236-202ffc30d9ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 d80e5f49-bdae-46d4-b3f4-2bccdfeb2752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 96d0048e-b438-4eb2-b586-261eba548259)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h70F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h70F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #210 c1cdbc84-0306-4c3f-9457-799941ed03c7)");
unit.assert_eq16(16'h68D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #210 2563db3e-7c96-45e3-bdb5-9dcf42dfda0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 637efb16-5325-41af-bcb4-111bc1764c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 ef0620f9-fe8d-43f8-9f28-c6c195de5dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 969ba147-3254-46fd-b1d1-1d46f74c6c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 381ce3d3-1d8a-484f-8d11-64c4d0dfbe4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 6edb3c84-6b40-4b13-87f6-c7852ba6389b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 edf25838-4369-40e3-ac27-ce517e98a0bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'hD685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #211 8e48681b-0ae1-43f8-a026-34d1fe7b7cd0)");
unit.assert_eq16(16'hFB8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #211 1f7228da-a2fc-4f0e-95d8-0ba1fb65d89c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 41e976d7-1877-4c56-b28b-fc72cc0b7736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 ef11dfa5-7a19-4bac-8fef-d113ce302d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 bce82e4e-9939-42aa-baf6-db55c98d7a45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 8bee7fe5-53e5-4891-8dc7-923b7ce230e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 340931fc-4d3c-417a-95af-4b3a2b6f3a89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 96ee2d99-f66a-41a2-99a3-b1ccbcc83b7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h873B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'h0CED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #212 3550e7d2-9de2-4198-b090-3aec301236c8)");
unit.assert_eq16(16'h873B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #212 00569809-b068-4342-9d27-26d23b79355a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 f4ddc78a-0b28-4c4c-b9b2-b44243f1d5cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 1eb0309d-d468-4f68-b199-4559dfc19de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 1c27aabe-1587-43db-bd8e-f5afab91dd85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 094870c0-fda1-4cf7-a7f5-1f8caf45ebc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 a1ca41d0-8bc4-48c5-a0c0-90c5c71f641a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 b8d5edbc-6d17-454f-9f1a-58408faa1509)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF2F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h85ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #213 35400326-0d94-466c-8330-88f6daf8a04d)");
unit.assert_eq16(16'hF2F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #213 68042971-0c8f-4b9e-9345-456881c96388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 dc7388e9-856d-4c6f-b175-b8846cfb1915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 1e134b5b-51f6-422a-ab7a-3c9beb04d5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 d99ff3dc-788e-438f-be32-c8079f1d8d06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 49d62d3c-7d81-4778-992a-09b2cfe37d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 02a02c71-625d-4c55-9c15-1a1f9ed89882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 d2d92ce7-08ca-48bd-a632-6377e692e001)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h740E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h740F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #214 ed713dc5-f4fa-4cd3-a6ae-c0c690bf9c77)");
unit.assert_eq16(16'h45B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #214 fd107384-6b27-40a7-a7c2-9d7518498dcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 e5d51246-c446-4bf9-ab0f-270a312c7367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 3ef775f6-8ce8-4c58-b5de-7a8d55cede00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 79bb1327-94f3-4245-b320-db2f5c47cf9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 19dda3ff-fba3-4317-afdc-9b1302624c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 8f84160e-6297-4904-9006-88110e27b11d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 3c0bfc34-0a7d-4c43-bed8-7125b849d8d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC4DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'hC4DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #215 6aeb0a8e-8d25-4740-a0d0-bee0ee980332)");
unit.assert_eq16(16'hDA39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #215 6b766534-e2cd-4c97-90a8-48fe57af9518)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 062f07f4-f236-4478-829c-1027f4d14060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 63d9dbec-4289-4710-9d86-0d93541f142b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 d3285658-6c95-4d5c-8125-46b130f64254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 78f44e28-669d-4fab-9922-e120c9ac2d42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 d86c3f9e-1ca1-4334-be98-fc61db4a969d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 b45b8345-6749-442a-9be8-aa337f22c803)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9EEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'h9EEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #216 ef42eefe-8b1c-4443-8c49-63792bd9b134)");
unit.assert_eq16(16'h4FEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #216 6a2346d0-9fe5-416e-b8b0-f61087f48be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 8514c44f-c842-42b1-87ad-454c560f642b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 4e0a0212-cb95-4273-814f-b4147f9df01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 d437f929-54b8-48e3-936d-168237fe3423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 1e013de0-321c-4a29-8dba-9ffe6afd13d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 ad915a4e-8a61-4294-a018-81c1cb0a2a57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 41f31970-b60e-440b-a17b-2472826f81d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h341C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC4C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'h341D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #217 7d3f9618-c3a7-4ed5-a6c7-c917e7d2e404)");
unit.assert_eq16(16'hC4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #217 bf3d1ae0-b2a2-4a2f-88a8-a62317d55712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 4dcfd30c-1bce-4d0d-8084-0667e697d177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 c206ee4d-74b0-4bec-837f-7f0e6f7f5f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 47eaa3ef-ea46-41f0-aee3-d4e904af0e56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 4d581d22-d4e0-40e4-9eae-e58d7342704f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 48533b65-85a8-4256-b074-290ef4a24f82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 83e493c2-3f3e-4c8a-87c1-f0edf7d15485)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h53AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #218 69a2ef5c-7996-450e-bca5-d338839ddff6)");
unit.assert_eq16(16'h6F1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #218 4239f4a7-c867-468e-ae2e-f09f78def88f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 05c98de6-2bc9-40af-b351-4a2e68c2cacd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 a3728b67-d7ab-46b7-b4e7-0b2cc318eded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 e6212605-f120-4747-8097-08cb86b70514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 2add1796-65ee-4b4d-bd7a-3373107a35fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 0869efc3-d985-406d-9a32-60b3b2f5c8a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 04851176-71af-405c-a79c-8abc2bfdb141)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h257F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h2580, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #219 c7a3e87c-202a-4716-83e3-e0bfee4839d7)");
unit.assert_eq16(16'h6B83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #219 051351a2-e3d0-437b-a8fc-d69b4a255a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 1f0798e0-f396-421b-8caf-a031beff8eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 eef01b0a-be48-4deb-b60d-94011c39e684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 892da794-36e0-45ac-a010-1a37b0361939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 556156c4-e9ea-4bcf-8795-503f89526956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 1723d360-a6fb-47f8-9182-13b839687117)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 1f13459a-114e-4f4c-88f9-c9b051159d9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA267;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h394C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'hA268, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #220 bd077817-8800-4026-bf09-8ae7e557be57)");
unit.assert_eq16(16'h394C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #220 8dec062e-1ea4-49ec-b252-242fa709c05f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 dd4d3e1b-367d-40f8-88a7-0cd0b762eb25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 83f0bdeb-389f-4d12-bcf2-43cd7e5cbbca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 ba15fbbc-bee0-41d2-84a7-9a8a529550c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 9c2ca10f-eb5b-4e1d-a033-0ee55276999c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 6d4069f5-7212-443a-9e60-932b58a7b5ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 8dc92b76-96f7-4a4a-9920-8dd12bc63877)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h63DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4712;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h63DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #221 b65ba5aa-8524-4c31-8401-13a8899c6354)");
unit.assert_eq16(16'h4712, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #221 befef21d-8623-4cad-af92-cffc61c2608f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 b7c339a5-e636-4bc9-ab8d-3c031bee9f80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 5b1c945d-4511-4490-a7f4-4c85ba4410e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 62b673f4-b072-4544-bd23-3e565646ebd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 727984bd-a303-4fdb-9ae0-28dc09224fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 ebef843a-e61f-4a70-b052-09e3364f9a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 2bf16a1b-6a04-4693-b1f3-961f2a12c33c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC396;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h501A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'hC397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #222 a0baa3a5-8fe3-4f20-ae1e-cad99cb7c6dc)");
unit.assert_eq16(16'h501A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #222 e9f99dd8-9ac4-45d1-ad4c-a46e863c2357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 0649dd90-eaf3-4714-b6bb-a2362a0c12e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 e980cb56-5c09-468e-9a39-0fc7133ed303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 625d7537-b942-4df5-8873-f41f0eae8682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 f8e01a4f-ff61-46ad-a7de-690bc878a0ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 e3a317a4-fac5-4daf-972e-28df00244d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 dbbbb8d0-5386-464d-9b49-b086c8c5f665)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE91A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'hC7FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #223 46d511d3-36e9-4c3e-8e3a-115f4c8e5bff)");
unit.assert_eq16(16'hE91A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #223 79cf7924-16ca-4ad9-b998-f1dd22f9c173)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 ce5fe4ea-4151-4359-82e1-700231e91d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 e67e12cb-d76d-480f-b6ff-b6c1267e4020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 41e31d15-a4e5-4179-8f9a-2dbcf0f3ad75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 b0149d3e-1f23-451d-85e6-7f199fe8d072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 0ee72501-9948-48b0-97fe-21dca28de073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 7ba2b293-58e1-4933-807a-8b5b768a8d1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE38F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCADD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'hE390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #224 705c9bc0-95bb-42c9-905c-61029c3d72b9)");
unit.assert_eq16(16'hCADD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #224 46cc7d32-c130-4e00-9986-1bb844d24202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 2d04360c-257a-441c-93f1-9c7d7fb4599a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 9f4fb140-2e61-4bf7-9cf3-1b9b9db1c3a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 a86301c3-fe2e-4279-b2e8-4a0d7f2ddeb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 3e5bc0e8-c7f6-4b90-9f8c-1beeb14052c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 7101a0f1-abec-47f8-8798-7875a17f3683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 b2b4a61c-b9cc-4128-b070-d877ce0cc26e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'h45C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #225 b2594c40-3e1c-43cd-ae51-f3e7ba1ecf70)");
unit.assert_eq16(16'h01AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #225 016089a6-876c-474f-9245-a745ca7b391d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 336ca09d-c6fc-4f09-82f1-cc8bd7dab32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 a73a0eb3-8408-465b-81e3-e5c894929b13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 0d725097-1b2f-4eaa-b4e6-0d4699f41e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 d68e8a65-d61b-44d0-a4c4-2d7a008e1fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 0c554e2a-a09a-4ff6-8bba-271b3ba5a9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 646fa81e-52d1-47b0-bc66-b7e918b0a1c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4461;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h97A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h4462, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #226 f09d2495-648a-40ed-94c8-ae73efecfc7f)");
unit.assert_eq16(16'h97A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #226 7cf235f2-9dae-4d6d-b5f7-8c5190fbdd7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 f73a62e9-d0c9-4414-ab4d-161e24f120bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 cc85e874-6808-43f3-842c-d29f2f913310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 9019430b-da90-4410-8e3b-0f1a3f0dee7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 11cdee98-3c7c-4f45-a986-8642270e4671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 ba306808-fda3-4ccf-9c74-2ba502d54fad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 d36a0829-0b5e-45c1-b174-71fd7e99269b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h8B40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #227 e0c92405-4a83-41fe-af79-88ba8575c9cf)");
unit.assert_eq16(16'h72F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #227 6f720f16-2190-4795-b94a-6a8c7582bd1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 e56f0583-d43d-4886-9cd5-d7aa9be8ab07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 2906e9bc-5517-4ad4-947d-013f0526e6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 44f9012c-c869-489f-8e95-9b2b99999b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 66f4406f-572c-468a-95fb-9c4cc8fcdd52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 1fa27a24-f48b-4948-ab56-d7c7ae8733ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 f9cffc43-a40d-4568-8967-1c166516221d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE718;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'hE719, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #228 b2410cb6-c848-499e-a339-323182f3bd61)");
unit.assert_eq16(16'hB2B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #228 29e763be-4fb2-486e-9478-0dd192c31a92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 3913b2a8-04aa-48e0-ad5c-dff867b956d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 de61bb83-17b4-455f-9d7f-82fc51dcce9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 006a7aea-49d8-416f-9c07-3763b2482b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 fcb2b2ef-5ae1-4f86-b594-cb763ecf51cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 cae5562b-ab82-4a89-a1c9-01e7f5b92594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 4cfe5886-5dcd-47d7-a5ed-66d4f5fef66e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'hFF93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #229 1f3ef9d4-f049-43f7-9fc5-e93eaf9b2c4d)");
unit.assert_eq16(16'hDF59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #229 69b0f974-babe-4ce0-9c00-67c5ed179d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 45f5f728-4da1-40bc-a334-61672bff9fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 681c4ab3-0808-4252-a69d-fc7d8949598b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 a4ac84ea-5f92-4a1d-af71-d2209eeb678c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 bf6a01d6-5b99-44b6-b36a-767ec04a0d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 b9831578-0b18-412a-b11b-e59b27213089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 d9f88897-8902-416d-a735-7db9b5977ec1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE77C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'hE77D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #230 b017e091-6f92-465d-acb8-6ca46e0d3c1a)");
unit.assert_eq16(16'hEF4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #230 f99436bd-6ec1-4f64-abde-c405933dee30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 afc368e7-0a17-43dc-98ac-c36d817ff48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 29e9fcec-a63c-4fff-afe8-62d179875cc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 13d71a75-f43a-4ffc-8d44-d24fb5a0599f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 69cc4eb8-39b2-44b5-bba2-f4d1be6bc860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 a4bfdbd5-ae4d-4b63-90b5-86a419c3e2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 e3e3dad4-e440-46bf-a395-e26e9c6185fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3374;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8FA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h3375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #231 3f9378d0-9fff-4ea1-ac7c-52100ce8743f)");
unit.assert_eq16(16'h8FA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #231 31020738-0d9d-45cb-8188-fbe241fc198b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 5d68a72d-68c4-4345-8cf3-4febc42bedc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 0e28da1c-6c37-4eda-809d-5ff77392dc61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 983c4f17-9ac8-49c0-953b-3b72483d2947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 27f4a24a-68d1-4f35-ac63-4ae680505313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 eaea309e-6aef-4e87-8860-178dea3eb2d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 d7ea1011-f25d-418e-a803-22051e32d042)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2906;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'hBAB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #232 2152e420-f72c-4b6a-9c74-55d4f7b35e2b)");
unit.assert_eq16(16'h2906, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #232 940c0cce-0af0-4345-a040-86ea934f9d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 d72ae8ab-9725-4f0e-9335-33c51c215092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 9d0ea6eb-0821-4a32-bdec-0eb0302224a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 79c6a661-3b02-4f6f-875f-9f8277ae81ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 c19e4eae-d92e-44b8-b82d-7fe511f0d1e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 b6ea64c3-4d71-4c5a-86f6-6a0140647591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 b3288aaf-eccb-4064-b652-aa7ccd6e6436)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5573;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h128F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h5574, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #233 77fc24f7-773f-42d4-bacb-ab91ea60f794)");
unit.assert_eq16(16'h128F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #233 6cc99a29-0432-4ece-bdee-1a8aa3734841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 5426a0d3-b773-463d-ae04-777036722192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 6f889370-1aaf-447e-879d-a85262234852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 1ff159a3-6eed-4be8-b8fa-e50d9d2ab824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 3e315230-3ca0-406d-ba6d-b9ec0343fcb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 5b7a4ead-8a38-4fe8-9f46-02eebc0c95fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 d7918add-b2d0-42b6-aacf-28ba7aaf01f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE591;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'h1DE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #234 a361c15b-7861-4acb-ba56-23ed6c26967e)");
unit.assert_eq16(16'hE591, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #234 24f76b6f-5106-402a-9773-c3a25c99af65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 e9bf6b94-c1f0-492a-b73b-a863ca2020ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 7fc8b464-c970-424d-b70e-5113e8ac2d9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 c50def10-2912-40a9-9655-32f721a7382e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 1ae59ac9-47da-4fd1-a893-7f6f779728cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 1e9232b0-d7ac-465a-9739-c3a9788418c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 e78a6e8b-f4cd-4bf0-8938-8ec4a5235dd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9300;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF310;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h9301, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #235 6eff44fd-bdcd-4e41-adf8-7a9898f6d255)");
unit.assert_eq16(16'hF310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #235 fe708d3b-68e6-4b97-8996-e20ab0c60852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 d8c266f8-7809-4aa6-adce-378a37a91ba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 e7616672-3d64-4c3c-af2b-35aeece73164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 08f119f4-82b2-4fef-aac2-20004f0d8582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 09084d4a-fb3a-4170-88ed-9bcc5d3ed9a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 5571d660-decc-43cc-a6c5-e0664d869434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 ca2fa26f-7984-4ff0-a5ed-f1acb97b0a7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h816E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'hBE55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #236 c9101cd9-6a2d-420e-aa01-04be2e192da2)");
unit.assert_eq16(16'h816E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #236 ff3aeb2d-f5c9-4d3c-86bf-65bb382b7f53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 104bd5e2-1d22-439d-baa2-cd63f350241b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 efd0e2d5-0c54-408d-950d-76387b2081ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 f3524118-c8e1-49a4-b90b-2d1ba3a764f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 d8617498-5ec5-451c-9d4f-56b3420207ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 bcdc956a-3985-4057-b9dd-49d20d9cd78b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 712713a0-49c0-41a4-b285-a98c2049068c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBCE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h2A76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #237 52944303-e205-441e-b87e-becb7f2a7e64)");
unit.assert_eq16(16'hBCE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #237 bcad42d1-1e61-4acf-b8b9-e758a4f7bb12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 ccecc661-bfc6-4f99-a108-5c0bf3c611a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 34534ebc-d733-4108-9443-b8503a9a2421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 5f062a4e-3977-4e37-afc6-fb17392fa0e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 11747f66-bcb1-404b-91f9-5f3be636718a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 95fc81ee-0b47-43db-8f6c-e1e6a1cf6a1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 2568e067-f603-4810-957a-d1d0c2643929)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB2EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'hB2EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #238 cf89e907-6fbb-4aac-b781-7c6970a87d1a)");
unit.assert_eq16(16'hBD03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #238 e7e11f30-e869-43da-923e-9b38d9b71298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 11cb7a5b-d6ea-41ac-bfce-3d8bdc533e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 8d3504e0-2f2b-4cf7-b8f2-4e1605df7081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 08434e8e-28ce-44e5-9702-785c702778d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 bb8bcc27-7463-4d62-8d39-37e0481e2eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 3a9bdd7c-27d3-434d-a45d-c2fa7a370bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 9a7f482c-0274-49c5-ad79-6baaa57d8284)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD9A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'hD9A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #239 32217b2d-c656-481c-8132-f6ecebbc4e90)");
unit.assert_eq16(16'hDC10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #239 29079a1f-b575-494e-8684-9d05adf8ee13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 db0ddc6a-7c0b-41d9-8a26-9118fce6bbce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 d897d9e7-05f2-455a-a970-a7b5e1c972b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 34fdb360-f1fd-47ba-adc3-df10ae3b80ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 23ed3a53-8add-4d43-904f-df1b3a287e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 5b70c257-1698-488b-985d-8948029461fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 2f06ab44-7592-4408-8fc6-877d0306bb00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6195;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'h6196, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #240 d67e5b28-2198-4e51-85e7-d19147b696f1)");
unit.assert_eq16(16'hF4DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #240 f5083e39-7430-4260-a23a-58df1218aa6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 33f8087a-abf0-4006-920d-d3e48bd3ef0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 6eb50875-46d3-4af2-8b83-3bcd8987abe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 16c058d4-bf44-44fe-b8ab-ebe18368c62b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 740988f6-84a9-45b4-93bf-7d59ca6a9b1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 5f6993e2-54e1-4ef5-9ff0-522d59798cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 100d1ded-1da2-4fe4-833f-d0f5cb899fb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA364;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h363C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'hA365, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #241 c5f4c540-3721-49b9-afc7-165d61b03408)");
unit.assert_eq16(16'h363C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #241 dee184af-c749-49b6-bb3c-2fd4389eaec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 42d5a899-5036-4313-ac62-50ae2c93586c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 6c19768a-6916-4a1f-9bf0-b1e8fe7d72d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 bfb876fe-be2c-4ec4-b2c3-fc96de3193ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 34840893-8b4a-4d92-89eb-aba550dd95f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 8346b4df-426f-4b4e-900b-77e9db064590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 de50d33d-16d0-44e0-902f-21a3dfe73c98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h658B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h13A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h658C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #242 1f8885da-d87c-4e04-8e2b-60900cca9e10)");
unit.assert_eq16(16'h13A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #242 8104a903-4989-492a-b17f-691f815292ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 391f4df6-31fe-4775-b520-bf3959bb1b6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 3f382614-0c1e-428b-80d4-56589679111f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 685a38e6-dd41-4e97-bd37-4fdef1657edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 29f1fb36-287a-4ca5-bdef-ee5f1284b0ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 ed154bfa-6024-4c9f-b9d5-e1ab4fcbb6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 db803700-6a09-41b8-9a44-317abdd61b35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3627;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h3628, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #243 f78c1bf6-cd45-47bc-bffe-e239c17b39e5)");
unit.assert_eq16(16'h20B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #243 46c077e3-332b-4af8-93d2-42d831792566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 1469410a-da3b-4ec5-9f1a-9bb29e58b58e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 ab3d33e6-7964-4616-8005-972e942fc452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 cb774e8d-89c7-4e12-a953-c4a08abd95f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 43081617-9e84-4d1e-8fd1-75ad3bb106de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 601bbd9b-a45d-4bfd-be4b-43fe0a1e5a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 c9e0ce54-8db8-4aea-bb4c-daad126f412d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA834;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF141;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'hA835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #244 b5b3881d-96f7-4da7-87f7-6d1762da578d)");
unit.assert_eq16(16'hF141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #244 b8b83f3d-3a93-4014-8e8f-4f0b2be36f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 eb7bac9b-f322-47e0-9d40-3aa868ccf7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 879275fe-44bc-4eb1-ba7a-a16805c1eed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 dcfd07c5-1d72-4205-8c55-ea664a5b2c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 3377b754-95ee-4fa4-b357-91a5c9b6cac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 2d4743ca-5f2f-43dc-b57d-ae4c192d84d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 d1bd0bb2-6f32-45ca-8e0e-d9b430b62f72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7578;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1730;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h7579, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #245 066bb134-4087-4d04-9106-993609329ff1)");
unit.assert_eq16(16'h1730, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #245 4ba011e2-26e3-4077-a473-d5f7e7582eae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 340e3941-6396-426d-83c8-ade273877e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 93584505-93f5-41b3-8421-465e466bb467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 99d2f5a3-030f-4ccc-b7ef-05a213bbc67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 bbc313a1-10c3-44cd-a775-8b9477fb9e8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 cb01262d-07b6-459d-8caa-d6ca10137912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 669232be-9064-4437-8a20-4a24003ccfbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h96E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h96E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #246 1a7900c3-fd52-45b2-a273-267ed376fb85)");
unit.assert_eq16(16'h0DC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #246 4a0b5fc8-1501-4f12-8b86-f1c4993554ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 585149e4-cfe5-4b6f-a928-4352b65dff0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 cf6eca1b-2411-4a6a-8639-8a8fbcfe0de6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 12d758a7-3d77-454c-854f-3acc776dcef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 782cc58b-fbc1-4a27-a0b2-1326460397ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 84ccbe76-e719-47e4-83e8-f4c66bf04e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 adabbf12-fe55-4c3b-8149-f2a3433ba650)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC36F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h3C87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #247 6b590aab-545e-4135-aefc-5d8faf10b76d)");
unit.assert_eq16(16'hC36F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #247 06014146-474f-482e-8894-2f44c80b91c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 548cfd09-7669-4f44-9195-43943878c8a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 41a55138-ad95-4344-a455-e720dd16d6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 86847e98-86df-4091-87bf-55c74fe1dc9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 2b4241f6-1563-4dba-9a97-2e8baf518f9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 4ae3806e-3554-4c70-a5de-f6d9002f00cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 83cf7b27-0b35-4b18-8d55-b048dc35dcb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1750;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4149;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h1751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #248 3bb18b3f-5e5b-4094-8db7-8d362fd9bd93)");
unit.assert_eq16(16'h4149, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #248 19cc590d-9b4f-4e82-a915-5463200de0bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 7e0620d0-6fae-408e-9032-9e582f89ba01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 2b34feda-9294-4a51-bc80-c7d6ec0c891e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 cf5c6117-e89c-4a15-9b92-26088fb03252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 77bb560d-fc09-4c73-8391-1b96c234a278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 f5e23ad3-ed8d-44c8-8e88-706a65efc870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 35ac1e9c-dec5-4b51-9514-901287070cdb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF421;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'hF422, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #249 82102a5a-a082-4fae-83f2-9233833e76df)");
unit.assert_eq16(16'h05D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #249 d2055657-26e0-4105-9039-abb3ea6927cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 7748409e-7297-4e26-b2b8-25d86c3fb986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 b01e8735-2795-4123-8c90-2c38952324d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 f9ceaf11-3810-4572-b1ca-f28a90880635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 4c2fec6d-9c0a-4d53-bca4-c23786513aac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 37327c4a-40b1-4096-a762-9c3bc4ee18a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 a2405db2-2ec9-4c0b-bfa3-1c7ed86219a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h17E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #250 7d4021ea-7a89-4f85-aced-39152ab3caae)");
unit.assert_eq16(16'h30E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #250 8a81b335-fe4f-44f4-827a-2bc55682fdf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 0849f77a-8f29-4019-9a98-cba2a8547310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 42980144-c009-4344-b90f-11dc95f11b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 46c0b08d-ed8a-4491-880c-a46d80221277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 08e921d2-6cc2-42a2-bffc-6344b409b199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 bfcb466a-28ac-4158-8770-13cecc0a30d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 5c656b28-619a-4526-bcd1-ed88419aaa19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'hEE74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #251 66b960bd-6ce5-4883-9dc2-aa90cdc8103c)");
unit.assert_eq16(16'hFE3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #251 f098ecf9-12ac-4cf9-8fd1-5a012653a089)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 76d847f9-c413-44e4-a78b-daf9b249b2e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 fb2f72d3-9563-429a-a136-9e8b7f70751e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 5d31aa52-7c2a-4cc0-a807-37c9a8cc5051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 38b3b90b-32dc-4f59-a0d9-015637e43340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 d45c3475-78fd-4e01-8501-f927b5c351f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 6438264e-3c4d-4656-880d-a36471c1b833)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h3F04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #252 66a70414-0c4b-4d5f-a833-66dbcb2a0439)");
unit.assert_eq16(16'h21D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #252 807113a8-16f9-4507-b9d5-b10848d8b889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 85c684c9-a1ed-497f-bd09-4bbf301292e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 3d6539ed-3722-461d-ac5d-c71c289bf9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 78a23388-a0fe-4bd4-acfd-7f51fc9fe3ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 0a560899-4cc4-46f4-97a9-1a0f7dd92022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 966d9378-61b7-4b89-9ad6-d119bd8de91d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 972cc90b-dd42-42b7-93cf-1fe767e899ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'h6D7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #253 3ad4e678-7e7f-4dea-a6a0-f17bfc4a111b)");
unit.assert_eq16(16'hE6CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #253 92332931-4a93-445b-a8ac-a9342e6d76d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 bb0e3d79-4c3c-47d7-b121-cb9d30166faa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 e60356aa-1229-4532-8053-ff92ecb94a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 7de110e7-0890-44f3-a610-2f3ce66fdf61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 4ee22bba-71cb-49d8-96dc-5b004828dc9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 81bada40-7c6b-495a-8285-a9232ee1d74d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 34cf83aa-7977-45bb-97e7-87bb995f767b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h395B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h395C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #254 823af559-88e2-4532-903f-63cf2c5165df)");
unit.assert_eq16(16'hCE31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #254 5d761658-009d-4854-b710-d2dd85f3ae1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 7f231781-6c9c-4a04-bfcf-6d46a626bed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 4c6b727f-5401-4904-843b-c495bd2813c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 88d3e62b-48ca-4c4b-a3e8-271bd9740bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 d4e67f0d-f72d-438a-91cc-e9d52e96c11d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 8dba2102-3e81-4eab-b72d-b19deaa64404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 d5751bc5-fa25-4ecc-9773-b62e622971c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h012A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h012B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #255 7f194df6-9437-4009-86fd-2483d81475b5)");
unit.assert_eq16(16'h01DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #255 b7daf206-618b-457c-a36b-f8ac50dbeb57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 e36e55be-02f2-4ce8-9120-381331c3247e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 9c1d6924-f149-45ba-8a08-ccca7429a4d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 33e28227-adde-4f28-a344-1e6e5d98ad7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 55f3d9cb-871d-486f-aa19-e07699352062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 22169c82-477e-42a7-a52c-39fd4755e63d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 950e6ef4-0463-4634-9e0f-0d62d3bac0ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'hBBD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #256 7ddf5ef4-3b09-4768-8718-643e6232ffae)");
unit.assert_eq16(16'h1D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #256 9d1f8fa5-87ee-4ba5-9932-c66c91aebbc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 e7bd93e6-b026-44aa-b2b4-ae7f0255e63c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 076dd28e-83ba-4e3f-ab13-54bbce35690a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 9979ba48-0c4e-4fa9-9137-7631129b7ea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 64de0ce5-e0ce-480f-bd72-9a17f503a9fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 67e2b097-75b5-457a-a768-42ef288a7267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 768e0eb7-7419-426a-b877-973fda708bfd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5CC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0840;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h5CBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #257 d49152fa-ff5e-4fe0-8d1e-dad542da94eb)");
unit.assert_eq16(16'h0840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #257 b2cfa8ed-87d2-4372-b912-8c08fac5689f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 ea712e8f-745f-428b-9390-7e9850bd8aa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 201ed949-ecd6-4067-9422-89c8651abf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 2562b137-a2ba-4470-91d2-af7f3bfc0ad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 6058f93f-6ef8-4816-8b2e-b9086a07249b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 8eba9e0d-2cba-4169-866e-39cf600c8d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 f46acab2-c738-4230-bce3-a52ac503174a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE68A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h86D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'hE689, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #258 d74be3db-32f9-4c29-aa41-ed0a998164e4)");
unit.assert_eq16(16'h86D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #258 c08a4059-f2a6-4bb7-aab1-da0e5cf56fe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 8fa3b016-568b-4ced-80ba-75fac930d864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 a2e1e841-00de-42d7-99cc-9e3c1d7c4af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 a0bb6527-9f60-42b6-b53b-da1e760b93be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 b6cfd403-05a4-41a4-a3bd-a3253fffbc7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 66f1b349-bf92-4ca2-b3f0-54335a07819f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 810a5d34-1715-4bfe-9b54-d9ee4f3aac24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hACAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h4CC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #259 4f1bdcac-f0bb-4423-9aed-0f051e173cfb)");
unit.assert_eq16(16'hACAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #259 b582fadb-5e17-4197-8d32-b35ba693e30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 d29172fd-7095-4634-89b0-1efc80017c4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 8a1e8f04-34b7-4d2a-bb33-2ce8adf01076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 9519e8df-c60a-4bbd-9dc2-fb4c7cb66d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 c10ab08f-c72a-4565-b3ff-cbf8e993bb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 afc9786a-ac72-4ff6-8e5f-d1402975b99b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 a7a4a254-b9f2-40d3-adb6-bcd77edfaaee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD389;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2954;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'hD388, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #260 23d09a6f-8a1d-4f7c-8c39-7e229f1e7c9e)");
unit.assert_eq16(16'h2954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #260 860ea369-62db-42fa-83ca-dc6c570d777e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 743f80b5-3731-4f74-b2c5-810c44ad7612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 cdfb2d90-30a6-4e0d-b787-0a4eecde20eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 41d66bec-4a81-4d14-91d4-b1d7a44d99c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 7b43d0fd-f9f7-4fdb-9d0c-25b4e98b5327)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 8bf9dbac-c957-430d-a6d8-f500e3fa7ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 10aa7f5c-201f-4e82-847f-1b16a5c75ff7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC001;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h1CEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #261 54bcb77f-6355-4be1-a2b0-d1e881c85d5a)");
unit.assert_eq16(16'hC001, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #261 cde62f83-ac90-400c-9217-11ee85bc9750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 9b0cdd8b-8974-4da9-8683-938352388cb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 fa985cf4-4d33-45fd-8bf3-4539550c4495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 d3d6b3cc-d3fc-4864-8c92-53d4d9112053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 98291343-8210-4096-a0a5-87cb06557029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 b4a5cefb-2d99-4002-81e0-bf51bd1019c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 c4210d71-2d35-463f-b66b-a9361bd15daf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h9F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #262 33f3f5c6-3406-4dfe-be3f-3cd3f11e69c9)");
unit.assert_eq16(16'h60CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #262 826e4db7-459a-4f6b-b8e6-74c6218572b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 d6954636-b72e-4ec0-afb8-6c8f36537859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 0778bc0c-6e94-43bb-bf16-f1ef62117d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 0e870ea2-af97-409d-9da8-c29bcc9dc231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 9218fd46-b991-4be2-b870-36849a1f9f51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 f23472c9-b153-484b-a5d3-0cdea55c8cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 71075e22-de8a-47cd-86ca-0379e2073667)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC97E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h1030, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #263 fed5f9cf-a79c-4f0c-a559-db923fb9c076)");
unit.assert_eq16(16'hC97E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #263 ee47ded3-065d-48ef-9877-02d2ec7f747d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 21113248-5715-49b0-abfb-648097e6035f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 ce9df48e-8ca9-415e-a04b-6090ba6c49e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 f0e16cf0-764a-4c36-a0b9-c5e01d3473e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 45a44230-5c0c-49a6-a602-ab52b0a3992a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 d70e4c3d-0151-4fcb-84ca-c6bfa9c2a667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 a734ebca-49a5-48aa-a10d-ce938bb2c240)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD77E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'hF3AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #264 e8a0f89a-45cf-4fad-b177-8f43c1cc2010)");
unit.assert_eq16(16'hD77E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #264 379e43b9-c366-4ded-9821-9b995ce50152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 89833d5c-b6c9-4fb5-8e25-0de3ba6d3154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 abe1850e-daf2-4dfc-bb75-c074e7ff216a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 97297efd-bc4b-4be0-b259-0aa8e5347e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 334413c3-6757-4124-9bbc-05e57b859d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 8b83e3e7-8d40-4d16-801b-95a91f5b58aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 50d57222-9916-44a7-92a8-b947b726af44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'h6B57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #265 8b12475f-92a1-45cc-858d-590a1f28b5c7)");
unit.assert_eq16(16'h78CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #265 adf6e594-101b-400e-8532-08dd6ddbf32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 9d9db7e5-b1ee-4973-b0b8-c8fa4551277e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 8694f7f8-dfbd-4830-8f98-ac9a7d979558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 47f22f02-4818-48a0-8d1d-858159e584d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 c0f2334c-bd79-46fc-bf68-e619c2613ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 cb8f530a-b1ba-4897-ae7d-96b6f4db8b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 f9da548a-39a1-421a-af9f-a5b0346a53cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'hBF75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #266 d941a439-b404-4262-94cc-cef19b5453a1)");
unit.assert_eq16(16'h6A94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #266 2706bfe9-5ef4-460f-b43b-cb54a8b066e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 29b10f50-2bc6-44b5-8f7f-8459b361e84e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 76d4c942-acd5-429b-81be-563df2fe5066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 c1929771-986e-49b1-8f27-a4dbc67d7b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 9d507343-002b-4cc6-ba77-376c4727b4e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 64a038a4-0eb2-4bd6-a571-d104dbd6852c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 0c6a1c4a-3c9c-46d8-9316-ab17a0bd0236)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0590;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h27A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h058F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #267 131dce93-266d-4f47-80eb-d46dc7fb0dc7)");
unit.assert_eq16(16'h27A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #267 f6cafa50-253c-40ad-a854-bf6de40e4d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 62836251-875c-4a16-b0d1-5106dc549b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 d3b24322-ba64-4b50-92c9-50dffaf3661a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 a3283235-6bd9-45e3-971a-b9762f8e76f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 f49cf061-471f-4a2f-98ab-3a1ac0bc8efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 78ebe4fe-c30a-4a96-9fea-b61b00bcf801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 f62136ab-db89-4923-a549-98ad354259bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h790F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'hAD9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #268 3ca87401-9476-43d3-9af6-d56d229b1fad)");
unit.assert_eq16(16'h790F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #268 aee792c9-3c83-429e-878f-17806acbb8a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 e5c9a304-da86-49c0-b5be-51dc3123c7dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 bcd816ff-ab1e-4bd4-be95-e1770d19cb06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 e12501ea-c531-4d6e-91f5-0dc369de79ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 e196dd9d-3387-4518-8f52-5b7f199da71d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 63508f6e-af28-4b0f-9f0d-d722813b133b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 ad3274bd-9964-4697-b972-0cb4b4456b7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6945;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'hE09F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #269 a0be9b81-de52-4e5e-91a6-3d27123b1a44)");
unit.assert_eq16(16'h6945, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #269 91fc1a13-d4ce-4395-a8cd-7f48b3f99391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 f19948ed-68f9-4a6b-9c56-cd847e22284b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 66810a2a-334c-48ec-98ac-1eb71ad9da34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 b0c4eaf6-003b-4592-bebf-16b0b6459034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 96c57ee2-804b-476e-960b-71eece68627f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 7c8a45bb-2b5a-4307-a576-6cd7e4af2b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 cb38b6fe-986e-4ff5-a5a5-ad2927446da4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA922;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'hA921, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #270 d6c0b75d-aad4-4b4d-b10c-83344c3c6bf1)");
unit.assert_eq16(16'h4FC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #270 61ac656f-25f7-4bfa-8441-1ccf0244d605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 b27fda5a-9456-48f8-b303-f39d3b8f871e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 22694d31-b6b4-4636-8b33-7b2b371d7c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 263bfad0-3624-4ab3-96f0-dfc1b4c2ad2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 47291816-3d5d-47cc-9b5d-8b3133ffe3d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 d985b20d-8ab2-4c2e-b7de-304eb99f8de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 c7e11247-4680-4298-a9bb-dd652c2e4b17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h22AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h134C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h22AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #271 a34acd06-9dbf-4d18-a082-481e527af3ac)");
unit.assert_eq16(16'h134C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #271 80fe573f-7cb5-4328-aeaf-28d95ea410a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 8cccd831-2e44-41fb-aee0-4e4e448f3362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 f27f53bd-4391-4b71-8a1c-b379c6c46820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 b4f6cf98-6504-43fb-9e49-02613894a8fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 2dd08b0c-1c4f-4dfc-bd16-579df343e493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 20094869-173c-40cb-a6e0-1e7a803029a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 dda1e87a-497f-4f4d-9134-e7917e9b1bc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9C7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC46B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h9C7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #272 71194a1b-2742-4e9f-acc3-0a8b303379a1)");
unit.assert_eq16(16'hC46B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #272 660050b1-47da-4ff1-a488-39d2a0843fa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 fca312f1-1d61-445d-8634-11c86c5becc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 fcf45845-a116-4bfe-945c-260bf05ea12a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 28084044-01ed-415d-aa9d-b5ebe6e2cd85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 18c6b8b6-46ae-4071-ad67-b8075c4baca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 9036d8b0-9190-4a8e-92c9-44a5a6688ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 41f8a907-2a83-4291-aadc-612e78ba3cab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5990;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC1CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h598F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #273 c1d36d0e-aaec-4388-b817-3d9bcef5ea10)");
unit.assert_eq16(16'hC1CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #273 bae6e5b7-011b-4142-8a1e-1f4f9cfe6c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 955aaa1a-6b39-464c-85a3-51fe4c0f1342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 563ad788-c872-435c-8fa7-0e82bee29376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 b810e7cc-eb28-4692-adc8-78a08380882f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 7fed1738-bb42-4dd8-8f2c-211caa5f06ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 5bebe636-4ef5-4684-960b-6b80eb739457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 22f8a61e-f698-4cd9-8b26-5a16eb841611)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'hCB6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #274 6a1e9148-3792-4193-bcc9-dc5efe1fe3ec)");
unit.assert_eq16(16'h07BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #274 484a24a6-5ff1-4f7a-8fba-5ead86adb643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 ce1f7161-8f3c-4f3b-ad21-c282c7756101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 7a7c3c2f-e233-45c4-b1b2-37710d71457d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 79bd6ca0-da90-4b40-b3cd-aea623c241e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 131d662b-3878-4db3-92dd-2c4ea5412af1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 d9613394-536b-4cca-8697-d40913b2df55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 667edf21-2dad-4b24-8388-47df9fa85133)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCBE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'hCBE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #275 35f080bc-6a74-4237-a189-7f8d86f84b7a)");
unit.assert_eq16(16'h51E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #275 299707d5-55c5-48ae-a916-03fcf46acc92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 9f4fd684-4894-42ab-9f51-32cda752badf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 41d64152-e13f-4ab5-9efb-58bd007df084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 f3c3e456-b4e2-4dc9-890b-6fa95685d67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 e0a0ba4d-9a4c-40f0-afc7-4f3bb62f7e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 be7463fb-afcb-4f09-8aa6-d2fc442d40fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 0673b749-1a32-49e0-856b-f113ac714ef9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h20D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h20D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #276 dd34a1e5-0e49-43ba-b089-ee9049cefff4)");
unit.assert_eq16(16'hBEA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #276 79e0d91f-e3a0-4bb6-8e86-1abbdb4c8f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 62fe76a6-ffaf-4dab-aa57-7c855af967a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 5b1f75f6-d161-4e51-9578-0fdfcd50ee85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 52f59f9f-a443-476f-81a1-e203aab563a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 93e3bc15-6135-4977-8980-263ab3ec0c84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 6bf574d4-e56b-4600-b3f7-a970497cab79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 f9d87c0e-3da4-4e47-8f36-0f61258047f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'hF1E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #277 2b72f3d9-8d0d-4e93-9935-42e9193b0c08)");
unit.assert_eq16(16'h0FA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #277 fd172808-609c-47ed-8754-8d8923ed1a63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 e5c75fa5-fd4a-410d-8745-47fd8c1d87a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 b6461fa3-ff6a-4ec8-aeaf-afda10591984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 12fb22f5-fb56-4219-a2d9-aa48ec85bdd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 ea080ba2-0927-4d35-bd8f-866912d65322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 ae97de0f-6a4f-4963-a68a-5bc291603e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 70e0bd27-e652-4770-85a6-cd4fa2104999)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3379;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h3378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #278 fdfc28f1-babe-424e-bd0f-d71c1d27e3f2)");
unit.assert_eq16(16'hBA71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #278 1b25291d-ebf4-401e-9ecd-c54ed734c61f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 2450cffc-ca58-438d-b0b0-003056db5942)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 7930ab77-92d3-42a7-8a30-b4dd4f5214bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 d0161535-97e7-4602-8287-f9fb694bca81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 bad9ceeb-468f-4d4e-90f9-69524958a377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 2ca36c07-41fa-422c-814d-c907425f42d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 88607c12-a806-4750-937b-540a9a488c41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h94DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE5B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h94D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #279 b1288781-a6bd-4aeb-8592-32f68c5b7848)");
unit.assert_eq16(16'hE5B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #279 c5752ced-0bf8-40c7-8ce5-183c4ae4afc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 e54bb5b0-9206-4d17-bc25-1fff90affb4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 c6a212c8-bd5e-4a9e-b3f5-ff9207c76676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 d01c4585-4c92-4411-9c52-b0c345083417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 227941a0-720f-4ef5-84a8-8a308750a91b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 a974f351-df59-4668-b159-d5e5c9b37cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 dd4dd53a-11f7-4e19-8629-1ac40bc7e002)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA25D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA7C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'hA25C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #280 46cd53d7-ebd7-4867-8579-779454ad3d86)");
unit.assert_eq16(16'hA7C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #280 7b513161-8aba-4dea-abb6-598deac9386f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 a50376d8-b533-44c7-9c0c-19fad1baf8e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 476f4129-af17-477f-98db-bacd03679408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 7f1533ee-15b8-414e-9c93-c32966e79543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 94af20e9-7d5e-424a-95f5-70896b44aada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 f539e321-0609-4693-a519-18035d1e09d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 b35ba5ca-3900-4bee-8d86-e1c33a8eb0c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h192E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'hEC65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #281 6d04a856-5570-44f2-a9da-8a9c2e448b64)");
unit.assert_eq16(16'h192E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #281 f5003beb-1237-47d7-8578-4b70722159da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 3d873a89-1767-45a7-ae05-d3dd2784f283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 5816cc4a-7d66-4b7e-97ae-a8d38ff820ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 5bcc2cb0-a1a7-4c1d-b144-0de1c05e2b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 6d5cd135-42b2-4ff6-a851-da61dacb99b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 2e13a94c-febd-4696-b7b4-5cf26382d6c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 35723687-7082-4727-ac8c-1b8d3b5fe4dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4728;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'h4727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #282 6d955db9-d43f-4fbd-8654-087aa74fe040)");
unit.assert_eq16(16'hEF02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #282 e7e930e2-739a-49ab-8cf6-0400099c0210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 036b01e5-11a8-46b6-ba47-93f3d20f7a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 6deb1342-4622-4980-9e5a-de39e5d78ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 3a5696ea-faf9-41c4-b42d-f8eebf464191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 8f4645d2-2c61-4ee3-9de0-2df60591147c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 0fc39e07-b001-433a-82f9-31bf172b8e6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 fad83a00-9a2d-4c44-8dad-d88327a95aad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBDE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8F5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'hBDE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #283 faa6bac0-7366-4feb-abdf-a3c280c976b9)");
unit.assert_eq16(16'h8F5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #283 16d4c831-7a6d-4f26-8c79-3dd506797039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 8917d446-a8f8-42a1-b70c-169423f56d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 44546302-aa2d-418e-b379-5b3b981c02f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 76de7501-f8fe-4cef-bc72-3c28711c6eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 0bd7821a-9375-466b-aed2-578e547ab004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 ac189aaa-57ce-4cec-b0a7-317e2c2aa241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 a3a3fcc0-b923-4f41-8ac9-c189e85869ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h740A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0681;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h7409, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #284 8e5c1170-6194-4219-ad03-4cf853badc7c)");
unit.assert_eq16(16'h0681, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #284 13a63398-dfff-467e-926a-05e54f0b5cbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 c41a01bb-c2dd-4456-9c53-d94d0c522153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 e3a4c856-e1e7-416d-80da-c2e2fb059336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 395b6f71-1424-40c2-a486-bb6ae217f154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 b71359a0-de2e-4fe4-9149-e69c1ae0d9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 473cfc8a-452f-49af-812a-714f59af0794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 7b54af19-f3e2-4872-ba57-77323c387530)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA200;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h862D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'hA1FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #285 ecdd88b8-93b9-4983-92e6-9abdf977ac4f)");
unit.assert_eq16(16'h862D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #285 2141aa6e-4ac1-4658-b083-81878e159cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 05555d79-d853-4de4-ab69-80bc1dd873b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 ef30b938-717c-4973-a994-d89818c6502b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 3967ac8b-ec21-4035-9df9-9088d580ef3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 51314c70-f719-46f1-84da-8c85e6e6f509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 b2d1e73a-821a-44b2-8ac7-4e15ba140472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 16291d9f-b613-41c4-98a2-0bf358071e7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h546B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h546A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #286 e0507c8b-3c84-4945-ac06-76cbd85cb8bf)");
unit.assert_eq16(16'hCA11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #286 811dc2ec-48b2-4b0c-b380-d62475048324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 b45aed39-0aef-4883-aae2-56055ff11f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 4831c7a3-3f23-4bc5-b6f9-ffb876c958bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 9f560189-363c-4490-9795-b3c27e90458d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 e2572ab3-5c7a-40b7-ab48-7406be7ea463)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 722d3d9f-061e-41d6-a3e4-72fcd203ac8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 30866020-2567-4f68-ac83-0671fa298d2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h382F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h382E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #287 f687f3b5-0cc0-44b5-a953-d7cd3a837304)");
unit.assert_eq16(16'h4CBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #287 f388adca-df8c-46ba-86b3-380413160cf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 b568ef0d-3061-4c0a-8222-570d95cbac46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 e8660e4a-985b-4329-9871-a476bde24d9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 6676dcd1-dfe2-4c16-87e3-ab9f370768b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 12fad8a9-b24b-474b-a0e4-16511aaff762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 e09da29a-8d33-404f-b5e6-4afde7f6c8a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 9bdafee5-d312-4f84-94bc-3d130cdd6701)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6991;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h78BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #288 c005ae4a-6035-4316-9435-39c877e48d67)");
unit.assert_eq16(16'h6991, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #288 270a0ded-647f-4766-8efa-2dbd04207a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 399a70ab-0fac-4d96-9d5a-1220bc456f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 19f00488-ece1-48aa-86e3-599eac1d5a40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 37f83c2c-e4a2-4d30-be05-c36ea5549d97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 f42c8218-a7b3-4011-a12b-5a06eb0bd106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 21e1f4bf-bef7-4aa1-8717-5838bd777015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 cbf0a127-8ba9-4d51-baa8-22c8a120af42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h94DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h94D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #289 b3138d9a-45e2-4be9-8bcc-c0202c9aa323)");
unit.assert_eq16(16'h92E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #289 506e2a5d-4a45-494d-9070-01c8e71435cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 7a948129-5318-428c-aab5-16336a87c7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 a2c4f39c-79d0-4fc1-bf67-530e5540ffd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 03953c79-659b-4be1-9f9d-c3792370bafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 6146b327-fd55-4670-ad2d-93edafa8487a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 efc7b47b-ba26-44a2-b00a-22ed3c625d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 23f838bc-363e-4235-8a4b-afbb59c6de41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8CD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8EE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h8CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #290 8238911a-4305-4675-848a-9ad9fbd15ca8)");
unit.assert_eq16(16'h8EE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #290 9fd5a9d6-1763-47c2-bc63-cb0cb9bf1555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 8dafd2bc-c1a0-4fc9-9239-21dfc93fd991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 c879017a-59e9-4d49-9e5a-3caa8fd3375e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 8eb5e8ed-434e-4078-beac-6f88c72030f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 ac204601-c11c-4d22-809f-7bb289abd513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 abf53118-62e4-4215-ad02-0202e308f81f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 7b3291e2-fe11-4464-8887-84251c7cef9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8CB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h8CAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #291 c74ae1ed-7dc7-472a-adea-20cc50c03771)");
unit.assert_eq16(16'h0B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #291 d27feea0-a29e-4b39-b0aa-4719fe63fd7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 ed16ddb9-a347-4cf2-8aee-3132a55226dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 79153299-d9f6-4650-ac87-5792dca01bce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 908c7506-48d5-4525-a147-eaea0184dd8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 5c75e519-e9b4-4869-8412-ba93404c1d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 23389fa1-5578-4b20-9efb-37781a611217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 8dd4f50c-7a5c-46e3-a5f7-49abb15c29c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h182C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'hCB50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #292 fca17795-b371-4d3b-9510-c38b20cf5d8f)");
unit.assert_eq16(16'h182C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #292 62733b0d-e3ba-41e7-8841-a8e885897506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 7313be40-47a1-4451-a5de-fbcc50e27663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 1c4b0e4e-4340-4110-be72-a36765ea1e5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 b2b3f5c3-6f1f-4e69-91a2-486f5224720a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 7eb8e570-4f0c-45c9-a596-1e9b80073c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 1cbf783f-7c09-4913-a9c3-b3dd0920c9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 2df13bde-e9f1-42e4-bdf0-8ee3e076ca35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD828;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'hD827, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #293 2bbb3a01-39bd-44cc-8f3d-59b40c5c51d7)");
unit.assert_eq16(16'hFBDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #293 b4ca9533-0ffe-47f5-9f51-2d149d131b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 523a3ba1-01ca-4a88-92a3-016d9747de5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 47928139-5b4a-40d5-a37b-cde2cf043f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 c39fe71c-f24a-4c25-abd9-8fbccb618b13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 bf6cce44-d3e3-4ce6-85a5-f568bfe5e235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 77866d84-a7d5-4204-b746-29e130c797d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 7bbeb797-5b97-46dc-80c8-53124a525032)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD5F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'hC0A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #294 9ee42bf5-398e-45a6-9035-2dd1f94a5312)");
unit.assert_eq16(16'hD5F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #294 895811e8-a6a2-469b-a251-e1b932bd484c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 77eb742a-9f4f-419b-9afe-750342cfa254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 da54920c-1c7c-4310-a58b-521d472de4ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 545f06ad-a07e-4654-b2a7-e5b09e4e017c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 3e026ebc-c9ab-4112-9533-3a31d3c60d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 a4f42e8c-2502-48b7-8a70-cc063eabe496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 75d7e4bc-0898-4064-b190-545de960d7d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5290;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'hA5C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #295 e78415a9-1975-4744-8a1e-c9570c86691a)");
unit.assert_eq16(16'h5290, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #295 7aad8639-284d-4c73-b013-de9d4fcf8168)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 820f5dee-e485-454d-a1f6-38467fe4e4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 60225d33-af71-44c7-9c67-93826abb702c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 13ca2591-d82e-45a8-855b-ce19138da13b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 491fbc50-dc72-4ac0-9238-ba48143ffd24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 719c3f7a-0b06-45b8-adff-5f4ff8f387aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 424ee668-46a8-4782-9cb2-a8885902fe09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h7BFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #296 dd17026e-c5d9-4ac9-93b8-7101c013256a)");
unit.assert_eq16(16'h9FC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #296 285cd6f1-c99d-4848-9483-dae379877567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 08d46786-9ed0-4185-bb89-a65f6fd3d240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 30ac8d85-a650-44f3-ba2a-617917a47bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 fc8dffa5-2678-4240-8c5c-2de35e02340a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 216b81f8-b2e6-4baa-aa02-3a885aae959a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 3b18a2fb-5444-41fd-baeb-ac0eace6abb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 2a8adee8-0f1b-4897-b698-c54707576023)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDEE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h43A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #297 578488a5-f389-412d-a2e8-6c06194c6be1)");
unit.assert_eq16(16'hDEE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #297 b85f348c-4e73-4300-837c-8e33842b4419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 a9670fde-e607-4a6e-8a33-b23d425bd610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 4eb84c25-8137-4f06-b5dc-c3f7db16eef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 1dd1ddfb-a0ab-4cbe-b148-05d6abce6667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 d4b42d3a-c331-45aa-b213-04824211eb4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 589899e5-8746-4af7-9ace-e098ede10a4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 c9d7e852-ecae-42d2-ac73-3f9c127b0c84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h983D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h23FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h983C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #298 833855f3-3820-4a73-985a-4bcf45dbc6e1)");
unit.assert_eq16(16'h23FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #298 2496601a-2d91-40b5-a347-24d7f5b0bb8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 42e981b9-729d-442b-b589-12de2589b8ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 e59b125e-9249-44e1-a2bd-9da4953453f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 afa14c8a-2a6d-4753-a395-22117cedcfb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 29db95a5-f832-4a2d-bc5c-4fea5a01c284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 06eb83f6-e9ae-47a2-a019-695c7823d433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 f28080e8-05a3-4c03-b95f-44bfb3f66790)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5197;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h5196, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #299 a88e0e92-7c06-4e0b-92ed-2ebc30f9cb98)");
unit.assert_eq16(16'h54D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #299 0b8e9f93-5235-4cec-ae6d-5fb10ab9c985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 0d6de673-1a08-4bf6-a98a-7b9f9598b60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 c07f2697-17b8-407b-97e4-fead7f39f100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 ffcdf47e-236d-4099-8d3b-14d0b8f7bfe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 ab7cc064-597f-4bd7-9ba1-8b65bcff63ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 a1824328-9a24-493b-a17f-e63bfb17f28a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 2782f198-29ea-4d14-adba-03482d49689a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h557C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'h557B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #300 ea14276c-77ae-49cb-a4b7-13da46681078)");
unit.assert_eq16(16'h9A06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #300 9fe8a2c6-c574-47f0-b343-60b5732a9fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 89443f99-53a0-4abe-b6b1-4728f6c06b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 9588716d-7333-4009-b7d2-40dbf31dbc0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 a3cb8cac-ae46-438e-bc23-e750b1a433b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 2077d36f-b982-4ba1-9511-723949aefd9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 6c64cd01-f455-4adf-8eaf-764bba6cef51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 23d66780-ce29-4e48-88ca-0e2f842b2cd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB59E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD795;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'hB59D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #301 747cc1ec-9b43-44d6-9fa6-d9bd9883fe27)");
unit.assert_eq16(16'hD795, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #301 e00b728d-c23a-4675-9828-f2a501fda163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 baeed4db-3557-4a73-a674-c3b1920777fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 ef40cd38-5a46-4804-bdeb-d830bd682857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 b794591d-0bc4-44e1-9c8f-a997d17175f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 359bd482-3211-4836-84dd-82c876536ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 3fa907f4-5c22-43f3-90c8-542da533807f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 16ae1df7-9a17-4838-b6fb-23361b32cc5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'h4E32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #302 c58eca86-7100-417c-871b-b3e735967083)");
unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #302 047b4cef-e8d0-47b8-9db5-657b28e3b716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 3582a851-33b3-4792-9d53-2465b1eab829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 129e084f-dbe1-43fe-a4e7-f60bfa4a6f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 e8dc172f-b100-4433-b59d-b73d5addb647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 0ae8f97f-10e3-49ef-bfe6-d015e48a05b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 195b7c76-c66d-4fde-8d2a-94b8c5ebbc10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 88d3d9b0-3bdb-4423-ae4b-c22d86a244a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB23E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB36D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'hB23D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #303 dee613c5-b304-4e0c-89ae-b9fe69e9ada9)");
unit.assert_eq16(16'hB36D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #303 847ef3ad-2aad-4dcf-ab2f-3aa2c98ef8a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 8465d7c9-d2f2-4f75-b34e-aa244f777fff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 4c7f4aa3-b259-4b62-ac4a-1ae3c84f78b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 0f0a4c07-385b-4765-9a8a-23f4a78c2a2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 fbae12f4-32ff-407d-a682-e575688c1de6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 4503db6e-020a-416f-8b1a-3071850cf8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 e4698f18-c051-4f1f-a849-8040f6562c8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA516;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'hBC3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #304 23f54cd2-b4b3-4406-8ca8-582f4f756d2c)");
unit.assert_eq16(16'hA516, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #304 162e8662-d26f-40f8-874e-b3f52289c385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 5cd9b6ba-3db0-4631-b47d-ec1815fb2e19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 90a2b3bd-28f5-4423-86a2-24f060bfdd45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 61824c3d-0858-47e4-94ec-76023bfe75ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 e50b36f0-7704-41a8-9628-7cd27a6e60cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 daa04401-e940-4f46-907e-153bcfbc200b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 ce487bbb-98c2-4b9f-9333-c44eff858af5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h03E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #305 c3073235-33bd-48dd-80d6-4197a8e756a4)");
unit.assert_eq16(16'h7A62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #305 f09e1662-e035-4737-aec9-a248963c566d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 5755e090-642e-4135-8539-109ac1a20a97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 2af51693-a774-47a4-9e59-e9796353224f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 ebe83ecd-0344-45cb-91e3-9560000afc2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 e8dcd3b9-f077-4382-960b-8833fbebe513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 9f810341-dc18-449b-8377-81d8f51d98f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 6123707b-b5ad-4a44-87e4-b447c839d817)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEFBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7041;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'hEFBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #306 93de7c45-6c21-46ba-8be1-f56272ee6544)");
unit.assert_eq16(16'h7041, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #306 3877eb31-35e1-421b-b56e-c7e13e151d87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 4467f351-d9ff-43cd-a939-0a9ad189e5af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 a31f678a-b650-4af4-a70d-da76e5b44735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 5d8b0823-e360-4803-8779-80d037d15fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 7e9be8df-bad6-4c6b-b0d0-5886ec470cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 61344325-1134-48f1-b373-63103bed32e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 ff2aff38-aeec-454c-a29c-0cc6a5ec1c94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8534;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h91D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'h8533, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #307 dee5f785-697d-43df-9f61-f454f26a9849)");
unit.assert_eq16(16'h91D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #307 85186dd4-d78a-4916-9514-92546bcd03a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 e53d2583-badc-49c8-94bf-fcc3e51dab85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 1f6f0c5e-d890-406c-bbb1-80b352eecd49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 ca5210ee-9f8a-4b56-9871-cc82ba5de2ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 cfd32ac7-687a-4659-a3af-b838b11be937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 1bc7600b-7b37-41b7-9483-82c40062c550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 6e6e97c8-7fa5-492c-8093-da7a105c1593)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h16E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE744;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h16E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #308 222640bd-f4c3-4d46-9884-1959298d0f8c)");
unit.assert_eq16(16'hE744, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #308 2881a5c2-d7c8-4f6a-a619-e1054c774fff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 7a1040ae-236e-4963-b808-3e37be1106f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 ed4d7748-eb32-432b-9284-a11410c408dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 f11ee395-c112-4e5c-a753-b5b04a60889c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 8357e240-ce25-47a7-8f84-712ba69406f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 e3c1ea86-d8ba-46d6-94d4-00b999b680e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 a58cba30-b8bb-4fff-a3a8-27a87b52b255)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h829B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h829A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #309 a3c29e97-3f1d-4d0c-813d-d224b6698875)");
unit.assert_eq16(16'h6A4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #309 4b54d01e-2c85-4a81-b6f7-bfa4bca606ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 666dd7a4-355f-48fc-ad34-21820e965ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 877e25a5-2d66-40f5-80c6-85a87868c9d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 23c955ca-afb4-44a9-b42f-f9c0945111cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 7a8071cc-61a2-464e-8ec3-e01cad19f60c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 86856cf3-3afe-4211-97a7-c65fcd7748c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 0dcef1bf-6f72-48f4-80fe-6a2d0b1926f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h433B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h2D86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #310 cc63e7fc-5ee0-4c36-9e40-e5906221deb0)");
unit.assert_eq16(16'h433B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #310 cac14993-fb53-4869-a2fa-eab5944859a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 7820b17d-8070-4bb1-ae94-6ff219f577a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 3af16007-f4b1-44ab-a35a-a74e78ad429b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 588e5efa-d2c0-47e4-b4a5-014b7a1e76fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 df7b3cb7-e66f-4bfb-8787-5804852c5af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 3f4cd3e0-f681-4448-9c03-74bf64cc1f3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 bf21cf84-5e45-4e83-a72e-25504748cefc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0270;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h026F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #311 8cb93b33-b310-404f-86c7-af08c6468558)");
unit.assert_eq16(16'h7F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #311 aa978c7d-a9d6-457f-bac8-7c03091be51f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 8d711efd-4701-4c98-93a7-375ce05336e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 c26e47e0-08eb-4b82-b170-55e6900a1e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 f9820881-c783-4988-a7ac-489d2b8f9fae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 ec7027ef-9eb9-4cd2-8cce-eee3af9870f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 8cd57e88-ffbb-47e7-82c1-2333ef0299d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 e68c6e1a-e1be-4213-9634-dcc5d1803046)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h7F82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #312 20a2af2d-ac20-4317-98cf-393819dce07e)");
unit.assert_eq16(16'h9F07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #312 33455828-4eb8-48ea-a10b-23cc1c033156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 ec8a7e4e-9000-4b6c-b7a7-22d4abddcc01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 c29a3b0a-3991-489a-83ee-ea19f782db14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 9f9b39a6-ff36-44c6-b70c-6e8566c797ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 7e03bfd6-62e6-4fa0-85a8-c0cebf445e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 0e3e586a-b176-4868-b420-879d52456505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 fe3000c9-c4e7-417e-aca1-0f5ec6fb1c1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD2A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0264;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'hD2A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #313 4c303e73-3173-4c79-a5cd-ddf75e68b980)");
unit.assert_eq16(16'h0264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #313 ec099909-f7dc-4618-adb9-99ce2252f786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 6a2f9ce7-1051-42cd-840a-43572a87037b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 7a54ab83-94e2-4bc3-98fa-026d1342e1d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 8e7bea77-35d3-4090-8a1f-025c44c005b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 87e5578d-c637-4705-8903-7543a0120b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 05054808-0bbd-43fa-bbe9-05c73cbf6cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 d313ec23-03ce-4ae6-bba2-95d0e263d49c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9DF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h9DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #314 8357baea-57ab-4cd7-8d79-467c9308ebf8)");
unit.assert_eq16(16'h2D4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #314 ea93a892-9164-420e-96e4-ad19db9a07af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 2428538e-4e38-4729-b52f-13a3e82826a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 82a3a827-47d8-4c39-9850-4283494d4080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 7811f2fe-d93f-466e-b958-786cb110b953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 3b0e7c21-5ebe-483d-b4bf-472dabca39ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 2e564e4b-3858-4c6a-b6ab-ed1b075d7f68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 45952287-49b3-4b1d-94a9-4a8b6ca607bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'hFE60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #315 3d7f6403-a318-4d23-b600-b3bb751c0c90)");
unit.assert_eq16(16'h90C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #315 dab7c8b5-aa25-4e24-9d2e-18f4cc96b861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 65d04e05-c32b-4c44-ba0c-5ff2abfa1060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 343fe22e-b4ec-43e1-b6bb-bf6fdf2760de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 f683bf4d-db5b-4aed-b400-849977949bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 615bff82-7c56-4aa0-9def-d50fb6ca82c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 9b7ac4ed-eb8f-42b1-b0b9-8826eee03c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 26c253c6-1042-4884-a45c-56d23ef6767b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE26A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'h1F81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #316 a85c3023-27d7-46ea-8a40-9c7c6cddcbab)");
unit.assert_eq16(16'hE26A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #316 155aafb8-91aa-472f-b2af-b5aa9c131580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 29a6c198-a40e-4968-b64c-71cb8556fd96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 c3ab0f8f-3237-412e-ad09-667492a0abfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 f98f406e-10b8-4263-9f77-414def1bfb77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 73109757-ed88-4fcb-8dcf-a11b1a3bc0d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 c2e0aaee-c926-43a7-a90b-f646c0dc0bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 c7581a94-3237-4f0f-bbdd-186f8a9c20f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5812;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h5811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #317 526cb56a-bdf0-4687-b219-00559e169678)");
unit.assert_eq16(16'h92C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #317 cecc7486-80dc-49f0-a74b-e514351c53d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 94d542f0-8efb-4ece-a47c-07d62418f628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 0d093f60-12e6-4477-a64e-faeeb93484b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 4a6479f8-1a45-483d-9990-d70d9e4e11b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 0f3435d3-1b1e-4053-934d-0c37bb37821d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 57017135-fcdc-4f43-bfd8-0edaf3f04819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 edd33726-cc20-4c95-af62-0a591677d491)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8BE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h0C4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #318 fb298b47-307f-4100-9b3e-e23db0bf5ff6)");
unit.assert_eq16(16'h8BE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #318 bcc969c2-0f6f-4cff-a8ae-646a973d30e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 d76d0eee-0d18-4a8e-bad7-457a0ecd8ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 7b2f3772-92aa-41db-bfe9-b20bfd22c197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 823dcfa6-0116-43ac-b45a-e6c3a992949e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 aaf2c22a-093c-4b0a-add9-d8ff66cf562a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 e9c16303-4c84-4f6d-abbd-3aea427c5dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 09ed60f5-5285-4eb5-ba4a-e9d91213eed2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8DA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6342;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h8DA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #319 a175658b-3a24-4283-8d86-4abdcefa73a5)");
unit.assert_eq16(16'h6342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #319 df6e2acc-fc25-44ee-9689-382a7805ecac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 07b9e8ab-455b-4583-83da-05437db68a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 ab3fe0c2-a38b-4a8a-ad0c-2bd325991bb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 2e4d8eca-382f-4011-b32d-b14ce733d909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 5abfeb18-053b-4eb3-9240-43fcdd318ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 81a4c4e9-3eec-4dbe-aaaf-1585f6fad834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 fa81b29c-3224-48d6-accc-eea1fb86f4df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2016;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h92F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #320 690d90ac-5304-4b03-842c-ec8916241c20)");
unit.assert_eq16(16'h2016, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #320 1a0dd3d8-0e9b-4c1b-8461-3fd9218837ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 f402317c-de20-4765-8ded-24f48f086db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 e321b900-d65c-407f-95d1-1b75314e5524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 801220ba-1eb9-4c23-9e7a-9841ccad4bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 6d8e6720-98da-4165-bfa5-d727e644e290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 c2c3f63a-d569-4b6d-b10a-2ea20e935427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 1910a0d9-301d-43e8-a654-692b12baf687)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h403D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h403C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #321 3fef78fd-e87a-4cd3-85b6-154f2fec2848)");
unit.assert_eq16(16'h2B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #321 76e38b70-308f-4f76-a936-c1ffa7788726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 92040728-aa58-454d-9293-4bf169d6ce29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 ef3ad82c-9377-4716-8e14-a223c52b20f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 ec098265-02fc-4dde-a081-5d6ae1ef11f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 7d2fc51f-5729-4c63-9d5a-24b25bb8a177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 c75e2ab5-aa4d-4d1f-b639-2254946432ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 30e2d019-540d-430b-8271-e14a9cfb6ada)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC438;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'hC437, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #322 2a934dd0-1e0f-44fc-9cab-5d1ea6fa5739)");
unit.assert_eq16(16'h3AA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #322 edd84a82-b645-45b5-8fc9-4debf94e0e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 273c4991-3b34-41f1-bfe7-8f98faada73b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 bd04ff3e-7a13-4279-82b6-69cd91596244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 374d9b58-626f-49ae-97e3-ae48f8bd2603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 3299363f-c1d6-4681-8730-eda84774d5cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 59c6cb51-5f72-4bb1-b155-d45fd53ad616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 9cb15189-d237-4e05-a9b4-a99399a5b57b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD8E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h41B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #323 9f8fb53a-d733-484e-9df8-c2f3ff1751ea)");
unit.assert_eq16(16'hD8E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #323 c49738f2-99c9-450b-be69-98d7790da5bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 7e1757cf-1052-42ac-b259-98ee6dc11d2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 c9924214-caff-484b-b683-4df539476dce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 0ff4427f-522f-4db7-bd60-6e32fba504bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 6f2700df-d74b-4544-b82d-030c101dc82f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 6d1dc596-a857-46c5-b16f-7c714b3825b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 8e202475-85bf-4e49-80a9-48b118075dcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'hE6EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #324 e3910dc6-92f3-43dc-9a32-70910c2ed154)");
unit.assert_eq16(16'h1F19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #324 e5105c90-5086-4226-8a62-39a97a9c8140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 2e18dac3-0922-48f1-a3d5-5bd72c86de20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 2b8ec150-3694-4514-84fc-c0d0305aac34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 537043e6-d46a-45f1-8e8c-3a09b2905ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 554c2679-4896-44d4-b3b1-76b6fcf03221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 2c1bc77c-04b3-47fb-a967-2942e46d5f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 5bb96333-d1b8-4eb7-82a2-906f2610ee89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h8D9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #325 b739ad32-01ec-4943-928c-efbfa6f8123c)");
unit.assert_eq16(16'hCB3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #325 13fd8eb3-5f34-4425-8341-3df2cd60b9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 19a9b789-1ab3-437c-a673-66d5e5879838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 7c66253f-f7d7-40ef-8597-5b5cc3bae94c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 a30c2321-0dfd-4ced-b754-b5094696086b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 81dcac90-48b8-4166-8529-3b4bf152015e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 ebf49576-d5bd-45d0-aef0-122434fe80e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 de4ed7e7-8844-4bce-b3d6-e5e59c1704c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h15E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2083;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'h15E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #326 23fabc81-caac-4c4b-ae25-16a56505761a)");
unit.assert_eq16(16'h2083, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #326 2d9fcb74-5bca-409b-8237-b2d7dbd5d4a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 649ba705-7953-4350-b48c-934f63f67ecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 16f24782-52fc-4bed-8dc5-5f66ca17c867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 1a329c32-50e7-4274-9cdd-2a352575684b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 2f6058b2-968b-42e0-9a4c-557f986e2778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 63eaebdb-4eb4-481e-a7bd-a61d9204bfb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 9c5f16ee-836f-4217-88f5-2356fdd273f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h8D32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #327 2477fddf-2536-435a-9061-13f7326be1fe)");
unit.assert_eq16(16'h03EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #327 1b1b4971-ac66-4df0-8306-2017dbc17724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 99ff852f-ac9c-4269-b5c1-3933db6358c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 e4846e8f-e079-42ed-8d8a-7158dabb51b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 6214ef4d-ec11-438e-82a6-c237f7f4179c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 22fa0eff-6c0b-442d-b3f4-2b2cb283b834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 caf85dcb-dd64-436a-8918-e47a154342f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 5f74dac3-6b61-43a6-855d-a187a343ecb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'hEE25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #328 16902425-3d97-4d89-bf71-69912b463db5)");
unit.assert_eq16(16'h4CD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #328 b14313f1-4ce0-4563-a23c-b7200d3e4843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 19a6b8a2-a1b8-4062-aa1f-53340e0edd0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 a8be70c6-c1a3-40a4-90d7-ac4ecbba79b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 9d9ed378-a05d-41b6-ad30-8ef1c1a3c3e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 6728b73d-38a0-44d4-8f1c-9342fabe068c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 0c2e64bf-5221-4c86-a759-e378bd56cb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 07d92ad2-3dae-44ce-8eee-60ff4f0c1e32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2223;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h27A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #329 76cbc008-ac27-48cc-b1b0-7e633d721a55)");
unit.assert_eq16(16'h2223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #329 8c0a7c28-ae13-4899-abd9-601e3fd5ade1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 8e50f3ee-4b71-46cf-983e-956232f1a506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 7916fff9-3a9e-4dcc-8f7e-b677db35bf53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 6905d223-abf7-497e-b2d7-b2c4c3f50a8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 3e8a0d49-0c14-4f70-af05-3157495247a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 29487f04-fc81-4b58-b0a0-549c11ee52fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 57ba2dce-3da9-46e9-83ae-3fae0fe64c72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h69D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD89C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h69D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #330 af5db200-0f7f-431d-8ada-f758320629ca)");
unit.assert_eq16(16'hD89C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #330 5899653f-5808-441d-991b-74ecefab5837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 a37bf836-2ca8-4bb2-8abe-eacd08879dd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 0206cd7e-f0db-43da-bbda-ae1d7412a2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 5b16305d-423b-4298-96b0-714ad032587f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 322512c4-7951-42c0-9ec1-66a1f7eb309d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 53135c0f-37ed-4509-844e-01689b568285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 b34a6ec7-f64e-4bc7-ac85-6614af97f5ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0948;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h0947, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #331 606f82bd-1055-4f31-ab9e-f854d795d453)");
unit.assert_eq16(16'h75A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #331 839977ca-1289-448f-865b-465677ba2ec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 90712726-dd16-49ab-9c46-a76e597fe5ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 9bd102a4-fbb7-4adc-a6b1-b3c77345b25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 ff3bccd8-16a4-4ce7-b886-f9dc9c6d2e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 f73fc82e-c68d-4837-b354-b1a5370a57e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 fab9c5d7-0c89-484f-bf51-795db15a9852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 e0cccaf3-6a40-4ff6-a4f6-0db765c7c4ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC181;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'h8D79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #332 d45e1cb8-448f-4db2-b2ae-64414faf66bd)");
unit.assert_eq16(16'hC181, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #332 3af4aace-f87d-4404-9c03-1ff8166a2c95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 595c901f-3e28-4d43-8418-d87d0f8919d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 48fff37c-ba27-4d3b-9627-d5ee08785dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 2dbb4cc0-ec3c-4d74-9f96-f2d99b1d5c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 d6c17b6b-8a10-4a91-938e-d18ca0fcaf21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 256f12f5-e3d0-409c-a4d9-3e5ca2117ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 6d015d60-9152-4fba-8edd-158e4d616062)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h4CED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #333 5f015bca-805f-4192-980c-f00da8fa90e0)");
unit.assert_eq16(16'hF6E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #333 903ae0c2-1b45-438a-b867-afdf24c3a209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 2433585b-fc1e-4335-8ffe-0b1401ab4c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 59c3fc3b-b238-466a-b2dc-8216d8f4a7c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 20d59872-e07e-406a-887a-6abaf91824c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 26f38480-0a21-42d4-aae3-8fb3b4bc549a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 cca696ea-8325-4730-abf3-b6286246893b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 7385c900-6228-4925-a4ec-a1d135106568)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'hCCE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #334 7efaaf0a-c3a2-4da5-b401-cfdb603b5566)");
unit.assert_eq16(16'hFB96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #334 aee2ecce-d885-452e-82da-f30325393a99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 d870c0d0-4ca1-4ef0-97ec-2db9251a5a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 f6c883ee-f9da-49a7-84d0-6d1a6c6046fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 13cb71be-68cd-4f0a-bbee-1bb0d8166fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 656a70b0-b75f-44ef-916c-05d990d51e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 77a8f10d-cb00-4595-a0f4-ffef6f8a78d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 fffb1b99-5e8a-4921-9c29-99bdc931cf36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'hA9D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #335 5701e78b-df06-4795-abd7-db3d359c09a6)");
unit.assert_eq16(16'h1C2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #335 088b5a41-a111-4a10-ac33-f6b966fd60de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 d5a8b3c8-d871-4259-a10c-b262cc5f10b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 bd221b76-3ad1-4193-a988-de5878e28a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 208bc06f-9571-4e11-9ae7-b0755082cbde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 6ef70ad3-8f85-49f8-9791-930f31dc6ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 0f8f0116-7e3e-42ed-b9d6-ca84cacdc4c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 273b9a12-2f2a-4bb0-83d2-9d4ed007852a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4187;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h4186, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #336 d5b34ef9-ff8b-45aa-b848-e8af90f3a965)");
unit.assert_eq16(16'h61AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #336 b29b70d0-502a-4c2b-8e64-cc7a5ce4d4cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 5ac7879e-3691-43d3-abcb-fb1a57a3ce25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 c89a804d-44f3-4549-b9af-34a3e1ff4d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 2e5d69cc-b77a-4e96-bb23-c82db4ad639e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 5fddf46e-901d-4e47-aba6-01faa2542205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 fb1ba5e4-d392-433f-957e-3945461d90bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 d8d36ef2-380e-47a8-9921-07b0aab642f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6258;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h693F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h6257, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #337 7567c5a5-ee32-4a12-9db6-d368e87a69a6)");
unit.assert_eq16(16'h693F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #337 5b75825c-0895-42a8-8802-623dd8fb4cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 52acd3b8-b59c-4009-8315-a6c729f6b7e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 c8b06d77-f25c-4ad0-b956-284ca35eaab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 d7007609-2ae3-4801-b003-9fa869121ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 0e603057-2dc7-4c24-b6e0-aaad6bee811f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 5bb9a659-76f3-4004-9a7a-6e4a5e7569b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 d94165d5-3c78-4be5-8637-9d8d27de7bb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1BE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE8A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h1BE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #338 2c1ecd58-72d4-4d6f-925b-90870f2ed1ff)");
unit.assert_eq16(16'hE8A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #338 0647d97a-7f00-4461-a677-219c3b6777ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 729c927c-9dcf-4dc1-a3ff-16bd6ac4b504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 c70bd61f-1e0c-4bcc-967d-725a909fc58d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 8f6284ba-5740-4bcb-b4dc-058c1615a705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 52602ce3-8541-4b8d-9d2c-c9289a5cbf08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 b1df0cd1-d9cf-4502-80c8-9908e39171b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 d216e254-105a-47ae-bfb3-c7ff87b32bfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h1A8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #339 6ed1af3b-8a54-46b8-b353-f7fdb78e06d8)");
unit.assert_eq16(16'h69B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #339 d368603b-2180-41f5-87b9-e4b64317ca3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 9e3dc762-daf0-47bd-a435-99153c670788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 a5356d63-565c-4d31-8fa7-04ec1b9072a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 29733c1e-68b9-498c-aa70-80309792f210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 12cc5e58-eef8-4577-9109-49c4e53cc129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 a732d199-ff15-402e-8984-697ba4df4ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 3f872e54-14cd-473a-8a1a-949e1ecc353b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h01CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #340 e28d3095-3ea8-4d2a-bf1e-c2a2a41a5db8)");
unit.assert_eq16(16'hAC6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #340 ebb22a78-9b60-4dec-997c-801f1d617a0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 918354dc-4c89-4b58-82da-0824c1561e4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 dff2582d-8325-45ad-8c1d-a07a600f0a7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 b39a5ec4-dda8-41ba-8c0b-e17942da75f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 60d2e955-b7ed-4099-af22-6d5fd7b52e9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 8dceb7f9-436a-40b7-9ca9-4493dea08352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 26b4c845-abe2-4809-b62c-7e5c19ec011a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'h7F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #341 c0b4531e-78c0-4890-a88e-2383e7b119d5)");
unit.assert_eq16(16'hBF8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #341 8e953baf-f99a-48f9-a543-55dd3c8c895f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 def3f763-f5fb-473a-bcef-2525154c2515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 6f8aaf87-ba59-4648-990b-0164553d5d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 2a895dbc-13ad-4ea8-ba80-1911b71ac6da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 150547d3-c121-44dd-a4c8-13a95b649aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 b7d12fce-9e32-48f2-af27-25f218b1eda3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 115cff8d-969d-4ad0-a99c-e52ffb400182)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h11FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h4A92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #342 d1ec9a4c-dbc0-4f19-aea8-928ed471ebb4)");
unit.assert_eq16(16'h11FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #342 c126b839-57fb-4fd2-a558-f7b4abd0e959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 a648c655-0058-4733-b3ec-9ae738f7b046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 3fb31d78-21a7-461b-9bd6-049c3737267b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 ce52d4de-363d-4e84-911d-b5082fb25ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 a8573aa8-9f75-4eea-8af8-d52371b3360a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 af994c4c-046f-4cf5-a52e-9bf2041c1e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 6e85e8ec-8ae4-4840-8682-a7570daa3508)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFBB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7516;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'hFBB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #343 716d2908-aaee-488a-baab-be1513c02e63)");
unit.assert_eq16(16'h7516, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #343 8fd562a2-a944-4300-a1f4-6871c803de2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 0930081c-eec0-4a92-9bbe-fb7bb87b72ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 f3dd6f08-892f-487d-bf40-8adcfd111471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 96a35089-99e2-4c92-8e22-a262f326654e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 84816580-11b8-4955-af59-1ee8e8c01b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 d06319d7-975f-4cee-b0d9-74fd7d5df2f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 e82f8873-9693-4738-bd1e-2011f5754309)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'h90E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #344 12236a54-299c-495b-a5d9-1ef4702b256a)");
unit.assert_eq16(16'hF3C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #344 ae20f4dc-5e31-4113-a844-30baccb42686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 725730a9-2502-4e4d-9fd2-50baecd32e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 0f8b97a3-09c8-41d4-9521-8caa4a52d4de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 3e52818e-70cb-4243-92e1-9551192b47e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 54468964-016b-4144-9e77-2eb18dd98ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 2ee54089-43b1-4506-bc58-6e333093140f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 dd65f106-f5df-43e3-854a-942f2ad19358)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4088;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h4087, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #345 b411c8f6-aee6-47f6-ad74-5f15baf8ec47)");
unit.assert_eq16(16'h9A12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #345 57702cb6-cbb1-45d8-8404-fa3e55885adf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 7b679b02-d266-4ec0-a181-ac169c80c28a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 7e04a141-abf9-48c8-b2ae-ff51ded8f5cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 8ee26f5c-5568-4095-9a56-67fcedb44b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 5a314df8-c900-403c-a463-3140961ace3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 b8e89c0f-f1ae-461b-8be1-575b18a50470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 f21bf452-2ad7-49c9-86e4-d15141555c3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE58A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h44B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #346 6856423e-d050-4191-b2c3-c98ef1228d2d)");
unit.assert_eq16(16'hE58A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #346 74fdf864-66aa-4882-9ecb-7ba4ddbfbf7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 4e6c3625-9f05-41e9-b7a2-2aa93314c441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 594a2d62-7119-40e3-93d9-91d5a39a7d75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 6dd9320a-7445-4535-849c-9a837b06ae1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 8238a348-d7d4-4695-8ac8-4a8236c50d43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 2ea6a2de-223b-4f23-ad33-ab1336a62578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 caa24918-63dc-4f99-a628-a4601c64d18b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA924;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2284;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'hA923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #347 f57746df-2f06-47ce-bdb5-f928a701dc6f)");
unit.assert_eq16(16'h2284, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #347 623a35d5-12ba-4bf8-b055-826b011a259f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 61b5cf10-f7f6-47ea-83c9-a2d96ff67eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 3fd9ea84-e18e-4ca4-9d20-d58f659406dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 df441f0c-2fe6-4bdc-80a8-43b44db7ebbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 9b1e805c-80d1-4e4f-b62f-156a08245694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 5dc3f788-40d2-49fd-a0cb-b75e1668e95c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 e48a15f6-852c-4a9d-8133-00cefc85e903)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE018;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'hBC7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #348 6af2b2c3-ae57-48dc-8d03-79cef670f06d)");
unit.assert_eq16(16'hE018, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #348 8e7f5b43-52f3-4a4e-8313-ea855aa1fbde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 12233a90-753f-4ae7-87b3-10cf6b42ea0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 55f0985a-9435-4e2e-9489-b1b66189c536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 1c688bd3-3f76-44e2-85ac-b04f7e05a556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 622682a5-40d2-4dd6-9248-cd0d093d7090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 572cd2ec-8e82-44d2-b6dc-524c409552ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 f1ce3335-0c9a-46ac-bfff-1c7b8d6fb44b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3FA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h80F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #349 c7957c7e-b913-4350-9d57-e0e8122e7c1c)");
unit.assert_eq16(16'h3FA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #349 3a83b746-316f-4517-b9d1-170cbbd12751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 89326651-8e48-48a1-a321-154f69da2b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 7b366c3f-cfed-4a06-b184-0334ba77f441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 5a059cff-a819-430b-a2f7-84c3be5d458d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 d76c16e9-bc8c-413d-b5f3-66eb92aea00d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 4420532f-eb2e-4648-89c1-0b55b0e28d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 419c3013-da28-4811-b99d-16bd0a61413b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h97D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'hA7D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #350 ff8ea524-b26b-4e93-bcd7-a11ba4176c71)");
unit.assert_eq16(16'h97D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #350 3b316dba-d3bb-4aef-895e-615824ed08fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 30de4f1f-c1bd-4283-9aec-2050491abd6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 d10969e5-c17b-4605-9801-c4d5ca4e2709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 6c2236b2-504e-47da-8b3e-25030add9b68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 45d75ada-7d2b-41c4-ac42-7bb49a1e02b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 c2b0af0b-fbdb-4555-8291-25c37479cf91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 4ebc125b-e24d-43c7-a997-a768770eea13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7284;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h7283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #351 9d453c8c-8644-4d86-8758-7863e8a5328f)");
unit.assert_eq16(16'hE870, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #351 2b980f7e-4f0a-4305-995d-a8153ec79dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 d8f922ff-b0f9-46b7-9c9d-9c861e492510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 5bdf2d34-c08b-4940-b4d6-5950a66d997b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 3d3b5133-e386-4436-b1da-19ca4ce9030d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 0c461263-5e55-4fd3-b4c3-817069710af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 2c6ef77e-61c3-456c-8be8-a9be856d2642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 b62da12f-2023-48b1-84c7-08969e59acc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5126;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h5125, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #352 5ad634d8-3d08-43ec-bea1-db30af73c066)");
unit.assert_eq16(16'h3EC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #352 3b0b682d-3e7e-43c5-bf9a-9169750948ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 2c179a3c-57f8-41bb-8881-b6a680f271c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 427335c4-d0f4-4984-b4f5-e66f38cbf1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 1530973b-1e76-4416-83a5-f92513674b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 d4a5359e-54e7-428c-8921-70733eb73244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 4e339ade-992d-4204-899a-390d9cbc3cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 2d6b8158-3c25-4c66-be0a-8dc1f64dcd8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h5B4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #353 23725829-3fde-41f9-9ebb-f1f0b0e928f5)");
unit.assert_eq16(16'h67BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #353 b0dd4b86-b39a-4506-916f-3954d278df77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 a59bbede-2169-4e50-9210-e1af0f798e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 fbb32a37-a9a2-46d4-8574-cfb5e26cf659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 157fe0b2-0eb3-4a7d-b354-d21a03101603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 837b2917-8cfb-4670-aab8-b36a85b58ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 30d48a35-805f-4da1-a7e5-10bbbc0ddc10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 36e59e84-ef2c-41b1-8de9-39021fe948f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3811;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h3F0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #354 b9f5dfd8-ce53-479d-8dc8-d5d1b846b6ae)");
unit.assert_eq16(16'h3811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #354 b3e705fa-69d0-4095-9279-6b05e9793ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 ebd6da4f-b3b7-40bd-98ab-b5958eba9f83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 5265cfcb-bf9f-43a7-91e9-1504ae442dfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 1171cfbb-504b-4cf4-894e-1e3f679cbb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 2b79e130-10ad-48b1-9c4f-498d9ec86be7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 e0e4e145-be4a-4412-bf47-ed4585aeb102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 939e6b25-b0e4-4ad2-8194-0b1002134fe4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'hAA0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #355 066e4a71-7653-4b43-87ef-883834396234)");
unit.assert_eq16(16'h2CA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #355 d106ec1a-94a8-471a-be81-7d8ed69ba659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 0667bc41-e33f-4057-8599-36eaf2b539e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 e47245e5-345b-4f4c-a7c1-cf3d949efb94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 35a9504e-3b0f-4e65-a4a2-419d993769c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 17546b21-9d2a-4578-9142-1d9f46305326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 0c4dcd01-721f-4851-93cc-217f5fe6430c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 247cb7d9-5c68-4804-8c9a-28bbbe3cbd8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h39E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h39E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #356 298f2033-0292-409e-b996-91dfee2bb15a)");
unit.assert_eq16(16'h65BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #356 884f5d0f-2474-4954-92c8-6f274a9539ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 d5a019d9-89d0-4dc3-8944-745e0ea0dac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 e5b536b0-0778-4d9c-8da0-3a9416d1bdee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 8833258b-aaac-4d51-85b4-9d0cae9170cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 0b20a42b-308b-4aaa-aaf4-997918593381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 efdade0f-0fd4-4faa-9dc4-060e7b916530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 84dfbec5-1ac4-4ad1-9bec-1d826267110e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'hDD49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #357 5e4cc6b1-d04b-4f44-bad9-b0426351549f)");
unit.assert_eq16(16'hBF5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #357 2d45a05d-35f6-4f3b-a69c-886c72261ad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 f84bf7cd-80df-4f62-ab81-39c2a69080f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 ddb1a346-12ab-44c7-a5bd-3a0cfb78c6bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 126e7745-8396-4dd6-a926-a7592a10236b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 e9d96f64-8d05-4363-80fe-8b22fab3e64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 71bd4095-3979-4b90-a15f-ce4540e3a4fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 3c775b57-ff76-431a-8e9f-44a58dd267b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE227;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC523;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'hE226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #358 44f2efca-3782-4113-b102-457bb9fff86e)");
unit.assert_eq16(16'hC523, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #358 bdcfe4e8-d56c-4a3b-b2c2-68476026b938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 4bf7563e-de74-4648-9847-2500958e0ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 ce59dd9d-d78c-49c0-b685-1d2ca0633863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 1e360468-18f5-44a1-b142-1e5b196f0eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 60ef5df9-3b91-4c0c-a29e-48addafec1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 faa1c303-78f1-4aaa-90e1-d046b93fad7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 f7a4a0ee-dc21-460f-b0da-7142fa199d34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h327A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'hCD01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #359 cf221391-2b7e-42b9-9223-238be46d4b55)");
unit.assert_eq16(16'h327A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #359 7fe43fb5-daac-4535-b107-51222e6c1aa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 1d804339-7c43-4b5c-99b5-1e5ad70c2bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 d56c4535-550d-43ed-b6d3-fb24ceac55ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 9affc3af-14fd-40c2-8255-d40b8e3e6dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 30a98fe6-49af-4d06-805b-9122a2b34714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 51e79a42-3640-4c5a-bd33-548395a02429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 0ed7f655-dac0-4c31-9191-0ac624d2ad19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'hDD9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #360 fd937f1b-2c58-4fe2-8487-c0612cb453ff)");
unit.assert_eq16(16'hB2F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #360 5f5bc9cf-10ea-4c70-96b6-ec0d0280e08a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 c76ff24a-e2d4-4415-8551-181323d8249f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 3b2404d3-b771-42fe-adc1-a5fba29abcb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 1af7d04a-1940-4cf7-8fb8-7d47f0a69677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 3a023bc3-7ab5-474a-b20b-6037d2ba2d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 5aed16e9-4478-46a4-8b20-86ee9fc156be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 f38b64d9-8744-497f-b2ac-ee3358ebc8fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h566A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h149F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h5669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #361 01166806-7cd6-40b8-ab9a-a0bc5bfbd30a)");
unit.assert_eq16(16'h149F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #361 69622614-f0ed-489c-aad2-cd63b4709b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 8f7ddd7a-8f35-4699-83a3-97eba79d24f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 bb46db2e-b611-4bf4-b788-75dbfa55800b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 d5cd995e-6d5b-4766-aa19-57c173b39585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 c84c4876-d890-4e5f-815f-95817015d236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 854b37c7-72ab-4794-b89b-67e422e1e37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 1d115e8c-020d-4a56-b78b-9a2170c64256)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2007;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7EF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h2006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #362 2aab321b-8ce5-4426-b467-1f327c92d28c)");
unit.assert_eq16(16'h7EF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #362 e88d4b6e-bb6a-44d9-9fb0-1b4e6bab0906)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 0d2f24dd-b8d8-4d03-b22b-c96c7aa2d774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 c076d905-95c2-4c22-bcce-7054be4f44c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 72b249c2-ea1e-4de5-926b-1d22c0f795a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 7852529d-d27b-4064-aaf5-6e96fb63c03a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 c05577fd-64f0-4cba-91f3-af1e1f65e8b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 5f63bd4b-3e83-4f21-ada5-536dd4cf8c8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h39ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h39EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #363 0887a48e-4099-4350-b774-595212f609cf)");
unit.assert_eq16(16'h50FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #363 eb5019e8-0696-4bc3-82aa-8d1fd41c3fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 1bf4f45b-ad77-4233-97f8-a86cc990299f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 3a4dd5a0-b805-4db9-b315-409b39a9dcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 18477564-21e2-4f35-beea-c0e6537adce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 ffd01d81-c607-497b-a9ce-ac1f5da5e317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 c8b32964-4690-4fce-8d14-1d3597195c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 ca489d8d-fa36-46e0-91dc-71cd78e77f52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'hDA74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #364 2a1c7059-ea56-4156-b50a-06606637d870)");
unit.assert_eq16(16'h49A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #364 3e7b2b75-0f39-4e5c-9492-49ae48158133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 5153e2f5-8ef8-4c86-9336-7c7683361783)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 5d82aaf9-b369-41dc-b1f6-86beb7a265ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 a6635408-1ad1-4d82-bee9-8e7d4576c3cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 a719011b-4cec-429b-bb34-77b48f6bb18b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 e527ded3-9ab6-4e85-b66c-018dccfc7c3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 79f72b8a-b65a-4a71-8593-e21357c425f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h3FE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #365 a25a1d1e-cc85-4073-8f69-f5b3c65c353f)");
unit.assert_eq16(16'hBF4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #365 0fc54833-4534-4596-b1ec-96ea5f1544bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 0d7818d1-544a-44d9-98ef-a59c764753b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 fb3fe40a-e55e-4921-9732-7eb71c54780d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 ec75a1b9-35b3-4bdb-a67a-3d68821708f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 d4bd01c4-f74b-4695-867e-8d2e369b35f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 a6f6dc35-ffbf-4655-9116-86f1491a9cf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 4d849220-f449-4a30-901f-8e996981aae4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7341;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h9B4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #366 d5171ebf-36be-4910-bb83-d06dcc7aa207)");
unit.assert_eq16(16'h7341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #366 f23bc64a-6b90-4360-b649-9825aef677fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 331e9796-fb7c-4d3e-b25b-839e46ae82fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 e84879d1-a161-47eb-8622-70e986ccac32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 55e4bf23-a442-4f87-a485-a28e75eec24c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 cb419506-3732-4a86-bcc2-4b4d89be0604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 20ac332b-7f38-4d99-b422-66359ee169ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 04a14be1-7275-400c-af6d-5c6116402dc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE56A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'hE569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #367 46b97090-e387-4613-a713-bd08437044cc)");
unit.assert_eq16(16'h4EFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #367 25da3ec0-647e-402d-9bec-9ad697e337ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 278c7c3e-af07-4372-96a3-8548c917a0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 170174c5-6fbd-4822-84ad-b58d3d5f7870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 8b8a109b-20bf-4b84-82d7-980f6a30f494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 bc6e9611-d106-42b3-9f35-1c539bf3484a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 ff50e665-f11e-4b8a-ad59-7c491998c683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 79360eb9-ba12-4131-8ca9-3928888fb1c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h24DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h24DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #368 2115b231-7f45-4d63-81a1-b98603e53bdd)");
unit.assert_eq16(16'hF3A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #368 b958c0e4-74aa-4adf-8fa1-39aa787be90a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 02203aaf-e69c-4ac9-899f-98ae25bfe353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 fd450c01-d0f5-4343-86b1-f2c9b41463f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 38c9a4e1-9db2-4e42-9bf3-8529a5e4d3a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 b80dece6-6ab0-4396-9627-4fa3a2bcf708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 b2abd23a-3c80-4c00-bcfb-641e8180e289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 58a78f59-6b22-4c00-b82d-24224207d9e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA728;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC446;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'hA727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #369 f5547125-dfd7-4196-b204-aff7f242f3ad)");
unit.assert_eq16(16'hC446, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #369 07bff65e-9664-49b3-bb8f-bf0ff01e6491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 4c464985-940b-47aa-bfc0-58b7ecfe2dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 60e895a0-7c34-457b-875b-7bee77f8a675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 8e60485f-4f53-4b6a-9301-84f4340067cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 7a9c8d8e-c8e7-465c-a4f1-34723b4d5f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 c4d825f2-620e-4f2a-85c8-20ec440b5ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 34b1200c-80e0-4b5d-b11b-f9c2c2dad687)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h80FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #370 776e12ed-9e4c-4224-a7fe-34ecd91f1efb)");
unit.assert_eq16(16'hD9B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #370 b2e4d0de-69e5-45f2-8869-b0446cff82a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 27d552b2-c35f-4d88-84c1-036f9a747385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 e187c939-afdb-446c-b12b-f749ce90b40e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 bd0075fb-b1e4-4a01-83a0-004ce4c85993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 4cb30970-0230-45ff-afa4-7a67361a355f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 e04276cf-2776-45bc-a48c-e13f031ef9c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 239fcbb5-07b3-46d0-a778-b4f939e123d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDCE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'hEC36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #371 b96aea6a-fe52-4c69-93b8-5c6c16a9e245)");
unit.assert_eq16(16'hDCE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #371 9aab9aba-1cf4-454e-a39d-3e66efd21137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 c32bf08c-be8b-49d9-80b2-7fbca96c1489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 d71dc162-23ef-42b0-aaed-e8c1a1eea2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 b7104e01-fb6e-4b1e-a81f-dcf5d3f3585f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 46b29e92-3f67-4731-bb3a-e47ef3ab97a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 b49b81c2-20b9-4503-8402-8233c201dfb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 02ff0476-bba3-484f-b0b4-128e9174df9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h24F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h24F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #372 cd268b93-3510-4fed-8283-3ddbaf248fa1)");
unit.assert_eq16(16'hC5B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #372 1a52c980-049b-48bc-8231-adcb16d91e5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 f5dfa651-5fcf-4611-81ea-dce8a0071fe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 82762b15-af65-423c-aaf2-6522e8cf0be1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 6a096383-a418-4583-9014-4af905539466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 97b481b5-f54a-47a8-8838-403cb048b218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 f4b501e0-ec67-4cf7-bb59-d5951b2c89b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 33f9762a-c604-4020-91b2-79d50506a367)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h831B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'hFE57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #373 29dbb41a-0960-4199-bbc8-62dae2dd6f54)");
unit.assert_eq16(16'h831B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #373 10480d36-cddb-440d-acc0-094d98921066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 130bdf3f-7e5c-4b88-bdc4-45a489a2d207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 c06cf018-e359-4de3-9bba-b33666387b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 624a567b-7a8f-4601-b076-690e3f76330f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 70a19fae-aabe-4034-9d08-21694b3233d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 b1b84a73-3cfb-4564-8d21-45c21d24fcf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 97bd7e5c-b21b-4b33-b22c-163154071767)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1AE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h17EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h1ADF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #374 b1acc143-8fcf-4865-b662-eb0e4b2e9c85)");
unit.assert_eq16(16'h17EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #374 a293900c-ad7e-422a-9a55-38bf714b0df7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 d7789128-1376-4108-9c77-3227592f0ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 7b84a2f7-636e-43c7-8976-1cbe5e50d170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 00ff44d4-ae21-4dc6-a83e-e98c4749ebdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 aa1dd561-61f2-4ff1-9441-184eb0c1aa80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 db970e6c-0a07-4399-9cbd-da723bf89ee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 5fabdbf8-ffa0-4693-b28f-af07ffb453a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4479;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h150B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h4478, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #375 d8553004-8ffe-4601-8c49-8b9e2ba9d578)");
unit.assert_eq16(16'h150B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #375 f1dbc8b1-3e7d-48e7-a906-9cdddcea4e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 c9b9087e-d083-4955-845b-eb549c1addb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 bc1d4817-f2b3-4c88-9aaf-e5b2731d48c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 5fd27f51-4e6e-4bf1-86bb-e825870fd4a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 b08ab302-1ef3-4684-bbe2-0163a8d64e96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 0d43f8bd-5636-4eb4-a2c9-20ca763e9c5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 c26cbadc-4847-474a-a5f1-53a23e1e7003)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA00A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB7BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'hA009, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #376 df94e490-7189-4c3f-989b-0135133d5c74)");
unit.assert_eq16(16'hB7BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #376 231bebd9-006d-4695-a92c-a2d851778240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 25d06e05-22f3-43db-a7cb-1ad092704c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 f31cb012-2064-4ceb-9cbc-3bdbead139a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 66be5d18-4245-4cf9-8679-83bb81743b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 776ba2a0-3dda-4db9-b315-b07b5c5aa659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 9da0426d-9923-424a-b498-69261b452c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 43b09d27-0e8d-42aa-b1ef-652c24cd1141)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'hC8DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #377 3048bbea-8ffc-4174-8ae7-28c71be15ca6)");
unit.assert_eq16(16'h68EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #377 e09ab1f4-c4db-40da-9ebb-c01ab89affa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 8e13cc02-3970-41e6-820a-de9a0843c7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 ccfe8f19-345c-4030-a506-f987a8c782ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 f01885cb-0a11-4820-9928-b3afc8537292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 9bb45d83-010a-4b59-bdd0-7acc707a82b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 55ab25a9-e685-4afe-8afb-f13e54f2a9c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 559c88e6-31bd-4694-9107-d811be2b9859)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB2BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h37FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'hB2BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #378 b3cf79b9-c9ff-40d2-952a-d33a476c0612)");
unit.assert_eq16(16'h37FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #378 baff3b41-1c6c-4b01-9bc4-ad413d14fde4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 11e80864-26ea-4cc7-b88a-0847a7e85278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 1854551b-a322-478c-8e51-5d979402179a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 fe2fb4b3-953c-4345-a3d8-55190dcd44c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 dbd183e1-d8d2-4694-9c9e-3e3a870a0e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 1183d052-bb78-41fe-9e62-fc52da61a18d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 20552465-514e-4dcb-b97d-6b8b0e43fb85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA053;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'hA052, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #379 0f909dc6-850e-4192-a517-143f8a01bcfa)");
unit.assert_eq16(16'h3F1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #379 973e9dd6-87fa-4252-b749-b684f00448cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 ec3bc3c8-0a88-4aed-9d6e-91496959ce54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 698ad562-fade-42f7-b171-3102ff999e7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 7d24c5a3-9043-4c06-be43-69be9c414bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 470543ac-530a-476e-8759-76e0d46cce7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 524116f7-420e-40c5-81e1-c91363ae4e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 b9c7bfad-7ef2-437a-bdaf-481771425b98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h3A79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #380 4807dd33-7e0b-46e3-ad11-75921273a2fd)");
unit.assert_eq16(16'h56CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #380 66b64b42-90f0-4476-8008-0e0730db4b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 45557e41-90c2-481e-912d-4afaac0320ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 63744623-ff6f-48db-8de9-6a652ad4a685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 fce8cb70-9f4f-4c9d-a493-3a672d1bf0e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 10193487-143a-4e4a-8253-d31e8cf45744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 bd9e93b8-360f-42a5-8f91-f78f3d49daf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 c6263f05-491b-4884-991e-9d82ca8398d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9DBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h9DBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #381 c6218dc4-5052-4e18-9ca1-446f0f7d4653)");
unit.assert_eq16(16'h4E3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #381 29b9354b-2995-4f09-8bc4-782d5ae63a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 4b1a0678-f33b-44ef-bf0a-83dc8d5a5a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 00bd0673-6a95-4c28-b8cd-5bc201203b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 919db98c-547c-437f-8f67-93a305158b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 90ea1f24-5619-43bc-ae40-41176b1e2d2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 9b8829fa-cbd4-41b0-91b7-33749bdb9888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 9fc5fafb-71d5-4dc5-912a-572d2c281537)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDBE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD46C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'hDBE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #382 fdb6511b-a488-4f0b-9bfd-a50ba03c186b)");
unit.assert_eq16(16'hD46C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #382 69697654-6d2a-4286-8a94-a22b99d3ae3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 9b30385a-161a-474a-91f6-1acf7be6fe05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 f4a568a9-d097-4a3f-ac6e-992d565832ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 fbb02224-1732-40eb-a8d8-73ecadb9ddf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 acc61281-5cd3-4462-b686-74782967490a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 98400c35-9a50-4e1a-bbe6-a7954cafed72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 7f224926-fcc3-4b76-bcd0-8340bd9918f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h87BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h87BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #383 fee91cd6-5172-44fe-86e8-39e501413f83)");
unit.assert_eq16(16'h7BDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #383 71594f48-ef0e-454e-a0dd-9483aa133b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 a612ca2b-dafc-4423-99df-23e3403f87e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 b448581f-9a6c-460b-9b60-a247c992000b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 dadc7e52-067e-4c11-8fd0-b2d93e45e117)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 5ac38810-461f-4271-9729-2eaa590f3402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 abe5bb2b-a5fd-4871-abfe-525cb72d91e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 4e063d2b-9f08-4014-abfb-ff1a94fc68cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h986C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'hED5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #384 339b050d-a27a-4c9f-949f-158b93e104f1)");
unit.assert_eq16(16'h986C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #384 784d400b-8dab-46e8-a08b-dae668161616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 7585f4f7-919d-4bff-add9-b680ba966ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 7a269937-880d-4ff0-b739-2d295a1b7a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 2c077767-a2b2-4a5a-bfa1-1ed08be1992b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 b896ebc2-4234-4037-92ab-37cb553aa008)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 c2817694-16b8-4028-bbdc-ef0182d43089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 69f4d9aa-10e2-4bf2-b890-c59b17865ad6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8910;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h890F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #385 c4d78e1f-385a-4341-8e07-60ca1399f078)");
unit.assert_eq16(16'hBB48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #385 3601776a-c1fb-472a-8f0b-f55ee0306355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 ba87e36a-197b-4d27-802e-13b1dd0a2411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 4e7b47c5-b488-4c47-bc3b-4723ddfc9583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 20e6d49e-c98c-4db8-bf28-66449e539396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 ae122bc9-49d1-4f79-a075-a41b662c1675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 0b899a3c-259f-432c-a383-10ab23423d1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 0b47094a-f63c-4d9a-9979-80be2e7cef6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4751;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE962;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h4750, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #386 2e41a722-43d3-4415-ab97-9aacc3fea501)");
unit.assert_eq16(16'hE962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #386 028f7ed6-11e0-462b-ae53-e33252e6d6f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 b980ac66-36cf-4e86-985c-f5029c955c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 d1d0a5cc-f4bf-4021-8bb5-9a09ffc9fd61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 e044a5e6-217d-4469-b2c4-4c783e3cd64f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 25059396-62ca-4411-af99-cf99e9a64266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 b21764cb-d2a7-4d18-b8b6-898ccfce8a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 6b761252-2a51-4c84-87ee-086784472301)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8DE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB750;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'h8DE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #387 3de4d5c7-391a-4493-b55a-35fbdae91923)");
unit.assert_eq16(16'hB750, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #387 76352471-175b-4bc8-b7ec-f928a200ad9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 001e6a3d-05dd-4301-9e37-476371ede01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 93b540ec-0203-49db-8b95-a07205b8ff35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 00cb6293-56b0-4092-912d-dbe171150bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 88669bc7-5b02-4816-b372-276edb2d54d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 30666254-9811-4c15-8efd-22d03648f0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 90b9146b-ee04-4628-9552-846c3087b514)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h3BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #388 905e7885-436d-4af9-99ed-99b5340cec0a)");
unit.assert_eq16(16'h1E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #388 39cf3fcf-0e31-4bd1-8ff3-2a25f9e2bd57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 a743aba1-f0e6-4c03-9b97-787035459168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 4b22b908-1edf-4511-acc5-974b792992ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 14792d09-f322-40ef-b2fb-073350577643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 7133f21c-e55f-4607-acd2-0a4b73383e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 6aaad794-4f3b-4206-a8bc-3fd438bae25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 2bcf69ca-8964-46ca-8dcb-9eac869d99b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE743;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h1F64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #389 d4b84b48-640a-43d9-820f-bceb99bc9d5f)");
unit.assert_eq16(16'hE743, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #389 55eed8e1-988a-494f-8151-b1d0ffd9d09b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 bfa6c16d-95aa-4094-a3a2-1d6224808c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 a4354fbe-4368-4778-8209-7fb9f1dfa047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 2b9b6c0b-22fc-4f83-a5db-2c7282b55fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 d61f95ac-dfe5-4f67-a188-b7aac1dc2f53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 f753de73-2d12-485d-ba63-ec16f39b9784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 e91ed03a-acdf-4c48-917a-a4749baef573)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5191;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0387;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h5190, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #390 20e1d77a-dd4f-4056-a05b-47a80eb5f812)");
unit.assert_eq16(16'h0387, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #390 d0a21ff7-a5f2-4276-9eb9-18b8d3f88e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 fa9e609f-89e6-4e3d-afb7-dd5eed5d2dbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 b4f13c19-384a-491d-b549-9dc12882aa65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 565a21ca-1ef0-4d15-a186-cd18a066c84f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 913531cb-62bd-4344-aa28-b0693df2b583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 9e392592-5e35-48f3-b19d-396e11e454bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 13069933-a677-452f-a29b-91da60abb8ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFC6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'hFC6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #391 b93f9760-8e7c-41bc-9b79-a37dd8c90b47)");
unit.assert_eq16(16'h5B04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #391 15a7757b-928b-4a5d-a13a-e94c39099738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 1cd7fb7c-4283-4b77-9f1c-96adcfa4c9b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 464043b5-cbdb-4a08-84c9-9498e6fd942a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 f39d03a5-4e25-445f-bcf9-2535fdaeb815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 d6a4d1ec-7fd7-40fd-9625-7f08f327e8b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 b746427d-8ab7-44fa-b92e-3bae1d4fefb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 8e2b7259-363a-4576-b932-7783737504d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h5AD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #392 70a44777-484f-40a7-a412-f9a6870ea569)");
unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #392 dea05770-430a-4614-9ae4-bbcb53a6f823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 d5460231-1e59-4d36-ba29-6e3b3b14f5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 d69b79ab-f202-4d0a-bdca-44e02804d74d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 dc4eb716-621c-4c83-ac7a-6967e4d00955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 9dd6403c-66af-473e-9073-3e0ed636c7bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 885eed91-40f8-44d6-8646-bb5f948fbab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 1faf4bf5-170e-4994-ad0c-8ff9c4b2d940)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h51EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #393 346cd93b-c4a6-424d-9990-f60ad33b56aa)");
unit.assert_eq16(16'h7B22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #393 7353b372-1ddb-4715-ac36-b5fdd88c10c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 838460e5-7834-4424-bc9b-3c130bec76c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 92d06b6b-2474-475d-9294-f6ab984df9b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 c00d1f36-cd5f-44a3-aef5-991546301afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 8af5e806-5d72-4dc4-8439-b772175465c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 74701798-5118-42ea-8df7-0c1e41e88a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 5612d269-2658-412b-acfe-61979d9da122)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h1E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #394 bf26cfd0-4e92-4013-a820-8498d82ed26a)");
unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #394 1859051d-d811-46d4-94d4-f9b404a2d711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 499e2c9a-9525-4758-aaf3-8837b33e597d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 d643f363-c232-4e90-9c4e-9dd1febd48f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 f50c260f-f2f2-424a-821b-0a1769b3505a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 5541be6b-4213-41b0-b290-772a5f377bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 765b5ea4-d73c-4fab-ba20-c0af23feddd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 db407c39-a0c6-4e5a-88fd-6739014cac77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h389A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h694B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'h3899, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #395 3be6f743-bc0e-4698-8547-3138f48c7bf8)");
unit.assert_eq16(16'h694B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #395 a2fd82e4-3cd8-4ac0-9899-ce21c55ada20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 b80ed923-c881-48ac-96fd-3568f0ba1adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 75e6e3ab-a5e8-4044-be17-f635c42c2e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 459ce308-cf4b-439f-ba99-4eb3bdc73804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 27b910c5-d714-4cfa-814a-e9c1395d0230)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 c7e21ce3-0972-4448-9c57-36ebe4738bff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 38d8f7c0-1d81-47eb-aa31-2f7d27699b6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5913;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h5912, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #396 adc4049f-d6be-4d32-be67-04d82e9dc96a)");
unit.assert_eq16(16'h1AF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #396 f09980b9-4714-4bc1-bcce-900d39894ef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 db671140-bac6-4ccc-b0ad-2a1b61e3e267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 18eedfb4-69fa-4d6c-be87-385153c402ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 bc5580fe-664b-477c-b884-1077266ac3fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 586d75ac-ef27-4663-8fdd-1f11e7fbbd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 c55544ae-af8b-4051-ad00-245e763c5fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 f7007ae6-f03f-4b74-8a37-f0d13b54889d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h32CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h4C24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #397 e996fb2c-1100-436b-955b-5d1526acc7ce)");
unit.assert_eq16(16'h32CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #397 55001f6f-c3af-40d3-aa27-092de4d062d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 5e8a5027-543e-4e3a-9023-bc32ee8deefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 8b61882c-b5ba-48ec-b225-b9877db334ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 ee5f92cf-9090-48d2-814e-62300428dcb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 94ee057b-74c0-420b-8ce9-ae12cf75fc49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 db1246c9-defc-4959-a0b9-abd5bdef41ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 5265f4a4-796b-4677-bbc4-ccc7c3f72d4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h95F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'h95F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #398 6c69dacf-d2e1-4c55-bd4f-c2fb54009349)");
unit.assert_eq16(16'h7F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #398 391a8bd0-22f7-481e-98b2-e57a21356a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 7a18d3a6-d0df-40ab-98ba-aecd6567c58d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 38e79c9d-97fa-4fe6-b054-e8698733e37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 ed99cfb5-a8e2-46b4-8a0b-ebeb13d1a77f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 ceeeafe4-df29-4e63-ac73-dd8d0234f1df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 219b6550-cf16-43da-9c59-f3e2f1113d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 45df8f6c-1350-418c-9ee5-b7f070c9e0d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBC99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'hBE11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #399 184f2ce7-a8a3-4907-85ab-dc86610e3f01)");
unit.assert_eq16(16'hBC99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #399 fd1f78c4-edc6-4983-854f-23688e378f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 dccc53ff-90b4-4043-84cf-c3db82256897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 8e5b10ad-96ca-4041-9d7f-0649d75b66ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 b38f792c-165b-4f93-93c7-676fd779e528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 1b2d1a63-91c2-4b94-8ce3-146f276a925b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 6684bd0c-1b57-4a9f-93db-fd1b61914040)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 1ba377ac-abb3-422c-a830-82b11c506237)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h869E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'hDE0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #400 9a82cdae-aa19-4c83-9b0e-d4f05885d805)");
unit.assert_eq16(16'h869E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #400 816b7e12-2513-4a9b-9b73-984328c226ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 5f5f151a-e6c7-4967-a2a7-c7dffcdc880f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 81624811-7dba-4c4e-a704-0838d5290f4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 1fee7b6f-6d18-411c-8b3b-35e6aaf57d13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 055a8d3d-06d7-43b7-9e07-28b7843d0ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 1ab01c5f-bf90-4482-adc1-2e2e053818ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 540012af-d179-4c8c-8424-5910e1c62ae7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3EB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8FB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h3EB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #401 4771a103-e76c-4498-b79b-d7051b6a3af4)");
unit.assert_eq16(16'h8FB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #401 a46e4b4e-0512-4d36-a0b4-2ffc2b4253a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 69708535-c34c-43f4-9bcf-08d5ef335c88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 0a95c415-64a2-4a77-b818-a33eac2fff1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 2805a384-e715-4a22-8e61-94a8708b2198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 712234c3-548b-4de5-84d1-a88de9ea3f06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 f07d57a5-0f06-471e-8429-1ac9706ecbc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 91e736a7-8164-4511-ac5e-3cf90850e1d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1374;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'h6C2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #402 cacc1039-b4b2-4604-9c0d-b391bed3795d)");
unit.assert_eq16(16'h1374, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #402 51bd8add-2d69-4919-b1f7-c7a2d42baa02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 01cdccc8-00f1-4994-90a4-2809c515033a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 591c6516-10ed-4d7f-9e47-fa0ec11673b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 59aadc4a-da40-467f-a4a1-7221b9c85580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 54bf909a-63f8-45f4-a3c6-8599a9708f31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 1de4e624-f7a7-4184-ae49-c95da1c06434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 f56129a7-fa35-4cc9-bf6a-e412c2ea7be8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h96F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h96EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #403 f67d423b-4434-4d72-b387-8d97261ee41d)");
unit.assert_eq16(16'h4D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #403 0b451930-7351-4cf7-91ab-d151bfa4497d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 e3e226b8-adb9-4964-a0d5-96c4a19c8fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 9b3264e0-d892-4ba8-b51f-979e5082d778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 c548753e-0031-4af1-9f6d-10e65595aa3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 0ebf3cea-4c31-4bca-a36d-0bea8c35043d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 5f13e3e6-36e5-4f7c-8ea7-9b264c943a59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 e28fa1dd-8125-4ee8-b300-df60fe527ece)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3087;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD122;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h3086, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #404 a2eaa393-963f-4c54-8164-08adad18cbba)");
unit.assert_eq16(16'hD122, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #404 16207d26-2d7f-41da-b11d-31039f9ae7ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 da4d2f38-6cc7-4f27-9bd2-b743d790ea16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 120c61ac-a802-41be-9084-27a026dfcb37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 09fc9a1f-4e08-41a6-bf72-850ce7b66461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 59e1f619-ce52-447d-99ef-d394e25bba05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 611bf43b-87fe-472b-8ba7-ca282d5677ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 8b16a2e0-05ca-46aa-ad44-cee115abcc19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD416;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'hD415, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #405 d02c4efd-7317-414b-984f-753f6c11b6e2)");
unit.assert_eq16(16'hCF45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #405 d00c0b25-66d5-4506-86ab-19a1089b25b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 68f16f6c-39e3-4091-82fd-2eea11fd20f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 f1d6bb34-f728-4943-86b9-7cf2bd234742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 fe059e67-b733-461b-96c8-8e164646f595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 edfb1abb-8c7c-45b1-98f4-47f4503e7ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 836de509-9346-4624-8410-e7ae4b800ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 7a0671d0-b2b1-498c-ae1f-7b792a415ff6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC08E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h451A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'hC08D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #406 8cc643e2-2c94-4b55-bde2-2445bb847891)");
unit.assert_eq16(16'h451A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #406 55445ce2-cdff-4dc5-8ad2-db47df851b37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 362e9dde-450d-4d20-99d9-3019f8e21645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 a32d4b1e-a36f-48a6-b856-52da0d21b0ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 22032e3a-3071-4a9b-9118-1c897cc44f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 546828d6-159d-46b9-b903-b34e52af74d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 16c3d7da-0dc6-45ad-91ec-b77931de582d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 90d42ece-b041-41d0-8ffb-e6d9044bfab4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5EF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE86A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'h5EF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #407 d570dad2-62d1-4496-9d40-a59167ea062d)");
unit.assert_eq16(16'hE86A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #407 c711c410-fd44-4491-a29d-a23d9fa3d50d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 38554858-9b97-452d-abe4-d805f34ffa6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 68df9670-df45-40f8-9bd9-2b9a2e2b44fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 7a31418e-2b81-451c-ae82-2942992c1866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 e00b0e99-1dd6-4022-9e22-570ebe9ef768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 7591d98b-dfb3-471b-8904-49e0b58dd4dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 f227d679-7c04-48ed-84a5-b2ae145d1059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'h59F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #408 2f352337-67c9-434e-94f2-68eb2f81f930)");
unit.assert_eq16(16'h2CB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #408 05473270-1670-40cd-8188-e97ccf0a4900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 6c2e7700-433f-4699-b270-126d5996348b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 e551d3c0-0ca2-468d-a530-8fc912daeacc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 b0d13237-a71f-47c1-91da-7226d8dc98c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 08101319-152c-4353-9876-8bb11851415a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 9bc39c2b-90f2-4e51-a3f7-c1041a8a2d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 b0bc6f57-e65a-4b57-a9c0-55d37bc6086b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8051;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6839;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h8050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #409 5fd840ef-4d7a-43bf-a859-58bd6434b373)");
unit.assert_eq16(16'h6839, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #409 74313431-e314-4eab-b066-6a76c90897be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 48f6cb33-ac57-4782-b260-669975a55fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 32117c39-0f08-47dd-9f97-060d51e8a537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 e666757d-becd-4e7a-9c9d-9a064b936018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 a8be8f8e-56a2-4e6f-9fc1-a338fc14c725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 f49ba5e4-8c7e-445e-8f55-c7990bebcbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 0af04947-9480-4561-b404-59c42b2838e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'hEDC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #410 89067529-e008-4c9e-989e-ba1e10123ae6)");
unit.assert_eq16(16'h6E17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #410 0480b943-3134-437a-8bc3-2d53453eec10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 896bd8ca-8708-438d-b183-d18d3a3b09b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 6eb89f95-84f5-47bb-b294-8038f1da2888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 49f74a34-fa00-40f0-b472-6acaa41669db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 a631970d-5042-4e94-b2ac-2aa64365b7fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 b0ec8193-d2c8-4ade-bf33-fd99f5ac2ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 8550ec2b-b35c-473b-af28-7be91d87d8b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'hBA58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #411 9834e0dc-333f-4415-b717-74de2779acbd)");
unit.assert_eq16(16'h92E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #411 3f68def7-de49-4241-a7c6-eef73ca3c96b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 e2ecb201-41f0-4147-8acf-340f1ac42e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 8d5fa79a-a431-4e5e-8c5f-cc818307fe2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 c695145b-83c8-452b-afa9-fb8482942824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 ab639e0a-b388-4cad-9442-dba3f2fe00b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 1d239bc5-0bd6-42ed-8f56-4a9c70437e83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 42e2dce1-5519-4f6a-915c-720693927059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD980;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h582E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'hD97F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #412 ba4a9c26-c7b0-49a7-8ea9-b7b0d5ab65a7)");
unit.assert_eq16(16'h582E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #412 32bc77e9-d419-44cf-b4f7-c2c08ff42516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 1a4d7cde-1f78-49e0-b58b-2405d6c456e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 740408ff-9f13-4312-92c2-898407e50ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 e3e91736-073a-4590-a310-0c5073aafb05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 92f5ff42-dad8-4c1b-8126-043838e9bcc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 d7029646-2154-451c-be2e-e35b5c47e382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 7ef4e216-f51b-4372-9dfa-80e98ddc0617)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h06D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #413 72cde4d2-4e3e-4f36-882a-11d9f73f7c93)");
unit.assert_eq16(16'h1A9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #413 11cfe25a-c00c-4a1c-8893-bc8a8a036050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 9e59709c-2646-47b5-af81-dca35b36d517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 06268600-bdf1-4bee-89d2-664e3b966a9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 f93fed07-2178-4720-adaf-88f411a1dacd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 f4b3c290-90ac-43be-a65e-18cbc95878d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 9715a44c-1b0b-4a4d-a283-2765d9eb35ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 fb81ed24-ea28-48ad-91ed-279c7d57090e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB898;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h376B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'hB897, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #414 6cc8f829-62c0-42e6-b7a5-185e1c4397c6)");
unit.assert_eq16(16'h376B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #414 4d113b62-c711-44f8-ae65-f1ad5c1578e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 5b27012d-83ee-4952-9590-435fe63cd0cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 f145eefa-47f0-4fb3-95dc-7bcfddc83238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 c3cab238-aba3-44c9-a308-bce55fb329c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 27697b05-ed41-46d4-b38a-69a99f902623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 b78f9403-f21e-46da-beb4-ee93ece506ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 81c4182e-49fb-42d1-b703-c7af5c6c3448)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE9A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEDDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'hE9A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #415 8feb78f3-0054-437b-9285-f35165ea20b8)");
unit.assert_eq16(16'hEDDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #415 038e0cad-1461-4d89-94d4-13f361d37c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 fa1b5ce9-68f1-4c64-949f-39d234b04700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 8147b9be-c881-4691-8833-2ca770ab3cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 f00afe1d-79cc-4175-93fe-fbae0d551cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 b6303e5b-b048-4089-a186-9505f1972ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 4770454f-d8c3-44d6-a8e7-dfda232afad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 f73f39b8-41dd-40a1-886a-10a60dc2156f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h93E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h719F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'h93E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #416 851f4632-4446-4581-a7db-025bf00a3367)");
unit.assert_eq16(16'h719F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #416 f0b622c2-d4ed-44d0-862b-696e40e9266c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 49a6766a-3e1a-4195-b80e-14adde35495d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 c316c33b-6877-47de-b574-514ee957d270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 70b2d2a9-4fef-49de-8b47-b61313cbf48b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 eb5efa0b-8305-4e2b-ab48-0626cbe5160c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 3c636c4c-61b3-41f3-a5ce-3a23f50ed220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 0652da6e-4ad6-49ca-b92c-82edce9dc534)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDECE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'hB8A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #417 493c3bf6-53ff-41f5-9f1d-a20238ab35d7)");
unit.assert_eq16(16'hDECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #417 5f5367b4-6a83-42bd-acd0-f5bd4084ada0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 8d0e64fb-f9f3-44b5-8efd-42865f122509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 f2f9ecb4-f921-4c10-a044-9a026ae97bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 9197b200-d379-49f7-b05a-0339c6c9be98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 549518ad-c3ec-4079-819f-617eba3fa026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 7f78edeb-6f3c-4d19-94da-b4a2384a2092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 364205fe-e7e7-4b94-8e0b-f786cd0d4565)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2194;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h2B1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #418 a01b9ca3-e2ef-402f-b478-d118a2eb6d45)");
unit.assert_eq16(16'h2194, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #418 28c8850c-7a95-4a80-987d-33b3fd9b7748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 4ed2a3d7-bc2a-4cf0-ae7f-b7f81ff536d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 7f5a6557-6180-4cc8-92d5-25dae194109f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 0d6fdf3a-1fd0-4aed-b902-a4b48c2cf64a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 b285f6b2-b394-4f32-a5cd-a28b9a5ff601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 74e705af-413d-4404-ae42-f9b36e777d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 4246b23c-7f7c-48bd-a7f4-26ca64e07d76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD063;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'hD062, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #419 78493d69-3d9e-4acc-a1fc-5f346a4ee22c)");
unit.assert_eq16(16'h6D36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #419 dd190460-63c3-499b-b66a-ee21477fe69d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 854dbc96-4d51-44f1-80ed-3ba29689e81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 18930b86-582f-4620-aa1a-128952a3a490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 2c0da984-dd6c-4604-ae27-822246640bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 a9a28546-0a44-463b-adaf-c89ff3852939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 c5c4256e-ece4-47be-a293-3a863e94bd2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 93f4fa31-2768-418d-bf43-eef06c280dd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB88E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF2B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'hB88D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #420 ad3a86a0-2793-4e47-b165-7d25252e0e9b)");
unit.assert_eq16(16'hF2B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #420 3c726df5-160e-42f0-bf78-af18ca4f8c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 f00890f9-8d6f-42a2-b2ba-a10daf7f0acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 6de111fa-2f2d-4506-af8d-5bb79a63563b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 f5c3f372-c64a-425d-aaab-d8c4399fb4ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 14211084-a1fc-4c58-83c1-46116f2ba6bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 dffb0032-ef3e-42c6-a280-e2f8da60b973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 ac75129f-24b9-4f80-9b72-90a63324cdb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0527;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'hC6E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #421 0e41916e-9904-4730-8cc4-648432bdf766)");
unit.assert_eq16(16'h0527, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #421 fa72287a-5f66-4215-aa99-69bae739d501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 b0578bdb-1d1c-465e-9950-03303179e333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 e5fa3a85-66b6-41b4-a81a-a0ff0ee05455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 19e5dded-dfe5-4008-ac8e-6eac3ece8399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 ac2f592e-1c1d-40a5-b9d6-3caba31ff00c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 bc43c631-2911-41d3-88d5-54ece6d9c393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 03f0573b-738e-4bae-a430-b7e2bd68f2bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'h7BB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #422 bd87e1f5-0ccc-44d7-b486-f1e3064d49bb)");
unit.assert_eq16(16'hFF95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #422 b9f51fdc-689b-4098-b690-925cfe734091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 530a1b35-8237-41b1-a162-91167d48859c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 bc83e748-8316-41ef-9a46-d4caebc67a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 2ac213d8-44e4-44c7-b99b-0a6f35e5f975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 32263ce2-25aa-429b-84a7-cb0ab4c5cefb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 196abc20-a569-4930-adda-db9f804fa688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 396c6f8b-f1cf-495d-aca7-454682dd4a14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h4F85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #423 5a9d8e3b-76b8-4437-b22b-5107f63629fa)");
unit.assert_eq16(16'hE6E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #423 de4e03d4-33dc-4650-81c8-570ecc273a16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 73e8d772-ca28-4e8a-80be-f53a59413116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 324ebaa7-1988-4167-9f78-346a5e2cf2c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 e013ef22-3222-406f-8420-9b6325fd6177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 ce0e3515-05df-4c07-8f25-48ed46669678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 d9bdbe5f-1f59-4fab-bac2-d3fcf558fef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 99c0f734-ea8e-4779-9c2e-0f350a91bb56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2056;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h9D50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #424 a5d9b751-3e93-408a-88d3-386be9fee984)");
unit.assert_eq16(16'h2056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #424 74c4dbcd-292f-433d-a474-c201b1b2f8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 2feec461-b139-4f5d-8993-e2f5b7fa88e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 f07b64bf-c3b5-4b58-af94-f314e4a15b91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 6c48ee3d-752f-4b16-9c32-7023de87d73a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 f990bd3f-68c0-4dba-90d1-5b5bd6186650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 21f687c8-23a6-4349-8f2f-41ce82757004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 7dce90fe-5f63-4697-b7e0-32989e72d395)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h4F76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #425 301ce592-7d65-429c-aec7-7f76993ee57e)");
unit.assert_eq16(16'hB283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #425 2be3b736-7328-4b12-861b-c83fc7942dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 da03b8ae-34c4-467b-a869-0b17c421ed55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 fc412a79-4088-4748-b6be-e50b12d4e908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 a5ca1e9d-5089-4e14-a491-2d51d04052a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 7d710841-43ea-463e-8460-dc26de940f26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 f1b91bc8-d0e3-44a0-9e77-e748fd248416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 a2bef15f-2412-4114-9274-db321f2d0605)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC4AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3037;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'hC4AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #426 59ad019c-f091-4b6b-a806-5ebc1d4481ad)");
unit.assert_eq16(16'h3037, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #426 f0e8d739-667f-4c38-86a0-dd839c3ede82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 c3e54f19-1f79-4f5e-bff8-6fa22505cc22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 14871ac0-c9b0-4ba3-a8cc-bf79b4f43277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 0b104f87-d830-40b5-89ea-9b7095a7deae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 b9e239e7-9112-4806-aaf1-4a384ac1606f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 d3ebd40a-0cd7-4006-a3cc-c51d67732d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 5c7d8ab2-1909-4d4f-88a6-ee66e51a7f3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h55E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h55E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #427 5fb62d5f-3fc5-4c68-9ecb-535c07126065)");
unit.assert_eq16(16'h5D14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #427 0563f34f-b09e-4943-b095-7e473cd3769b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 6605f442-33a1-4083-b916-e1fd64dd9065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 1cf02fba-fc64-4db9-96c1-852bea7dfe36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 e330eb54-6639-4cd3-b58d-a3b08f209e6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 4338f158-20f4-496f-8cd3-c690a815a9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 914add11-edad-491e-9b08-ae23822b8ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 1053cf3f-27d7-4123-b5bb-5b48849b17ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h20E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'h20E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #428 bde329d4-3f71-4f0e-bcf4-f5672d9ee430)");
unit.assert_eq16(16'h79C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #428 4640c88a-5201-4b76-b286-2f411b72a810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 4d6b7ed2-6624-4061-aa3a-87c5c72a9545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 c2b27618-b0c9-425f-9390-80d7db2051a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 ec69bddd-3ad5-455e-9fa9-d9890844cb7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 d2d55ec0-f89e-4e89-a246-0903db74f722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 165c4dbd-ff4b-45f9-9bb6-df64128dc167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 8bbeef4d-6d60-45a6-84d3-69fcc51c84bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF718;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'hF717, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #429 30944c78-5f02-43fb-aa53-22888b9f420f)");
unit.assert_eq16(16'hDE0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #429 d51808f1-46ed-48a4-98e9-60ac4315056e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 c30cc23b-d05a-49c1-ab30-05c986cbe060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 d02f7846-480e-4d8b-a078-59abc65a6bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 2f1f87cc-971e-48a2-85b3-5a898334728d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 d89c89db-4748-4ccb-9390-c4a425c32859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 dbbbd47f-52a4-418b-8867-8f89d8fc2a66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 f2001c73-1f45-47cf-ae95-468b0ea93a8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5398;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h5397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #430 84201ec9-64b1-46d2-b868-147396cc4a1d)");
unit.assert_eq16(16'hDA50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #430 276c0032-3f8e-43a1-a5e0-19c5ac5a8732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 9f79ccd1-b84d-4198-a033-816e174963e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 c8e77e25-98cb-47f4-8fda-c4a3c7a9278b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 36d79c30-7b5c-4067-9de0-41801bd53c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 aa198c30-dc67-4663-b3f3-365c1cd0c4ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 30e202df-c566-4f9b-96ad-aca19e636ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 5015453f-b707-45f4-829c-126adee5d819)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF8AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h71AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #431 92c07d56-5e86-4ec3-b17d-2fdf097ce7a1)");
unit.assert_eq16(16'hF8AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #431 59170351-b3a5-4bd2-841d-d052f7b73e4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 865547fc-a9ff-455a-bf26-968a586dcc07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 d75bb7b6-2692-4717-8ffd-32cb5a99a38e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 f8cbb370-52f2-4ce8-8410-9022da7433f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 4cc12d9b-9ba7-4a4a-9c2e-be0ed3fee365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 a476a08e-0ba0-4565-9ecf-4d6909ecf8d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 86f56803-2eab-4651-b2ce-e49570c073ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0026;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h78BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #432 a0bcc037-4313-4ca9-b72f-4e8971354560)");
unit.assert_eq16(16'h0026, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #432 1a53ecba-3bb4-444c-934f-6a0650a35204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 5bd85aad-6829-48c8-8a2f-a2f1b4a6843c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 061f8389-257e-4dc9-bdcf-894f3df1b3f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 6facfe85-f723-4e79-b183-9509c549fd19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 9d635c68-7e5a-47f1-a930-bfebf1e46e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 af32aed2-8b5b-4fad-9fa1-3ef4e9cfcbd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 894b04e3-f9ee-4551-bfa5-cc050bf34e43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1023;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h1022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #433 135b497a-b045-43bd-89d7-cdcd4d25dc19)");
unit.assert_eq16(16'hEFA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #433 3c6e6203-d8d8-470c-a1c5-dcc56ab7b412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 7f87ceb2-a7b4-4434-bbc5-0041727150e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 3184bb8e-5803-4af4-aef3-041f3edce878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 21333316-6870-4122-956a-eb671ac1ed2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 f9892184-280a-446d-9547-cc923e16a116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 f8152421-6f04-480e-a0eb-64215be15944)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 0cf3f2b8-ed97-4619-b551-19b9f14a406f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h86A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0754;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h869F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #434 4c3f1568-f265-431b-854f-11170b590207)");
unit.assert_eq16(16'h0754, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #434 1d02da47-9c01-4b5c-8368-ed130edbe580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 c142b9e1-18ff-4dad-a918-6fd14e309365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 4d716bf4-7244-4bcd-8801-6dfb70428bde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 10953059-dda3-4349-8452-61fa7fc6e86a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 27a2a100-8f4c-41ff-a1df-a9313b431093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 34b9b9d5-e060-4c02-8f0d-a2cb09b761e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 b71536b4-0321-451c-ac2f-bfa62b2dd68c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEBF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h9F55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #435 cc2b5842-1a01-43dd-ab1e-03e17f57d854)");
unit.assert_eq16(16'hEBF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #435 c959a387-3aa7-4b11-90a9-793d8e6b49a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 ef0ff672-44e5-4625-ae2d-2d6fa99a6b94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 de2c96c0-7733-4e71-8267-9c652be51025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 0745dc45-e805-4fbb-a4e1-ac6e1ef9ae52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 4ba615db-b652-4a5a-960a-4e7eb9bb14eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 b9444116-a868-478a-b17f-d856006ea737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 56451d0e-cfd2-4124-b138-c5621cb4ee5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h093E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h093D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #436 780f5dcc-30bc-4b29-bae8-09957e107111)");
unit.assert_eq16(16'h0E8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #436 fa758322-e979-40fa-b3f8-fd60cbe9d6c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 7ca96d19-2ff6-45a8-a34b-4610a4561d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 02f834e7-49a2-4fd3-9687-bd22d3b01347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 d07eebac-e2ff-4741-9a16-7ba54174c291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 a619ab49-5926-4256-851f-d07d8c322af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 36f87010-cfb5-49ae-b71d-a130a907f4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 f03b95b9-6437-4585-9ab7-7142f580bb5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h594B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC77D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'h594A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #437 c518067f-c03a-4ba4-b295-ec4c55056515)");
unit.assert_eq16(16'hC77D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #437 27827159-207a-4691-bbb7-c0e9a764b033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 c4102788-3b8f-4fc7-a504-5be4f6c1a6ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 868d60d4-d088-4510-889f-b95e55fade5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 54c773d3-cc7a-4d03-b606-67e3f1a3b1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 7d32b9c2-6798-4b59-b9fe-16debfd25106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 3d9e43a0-fedc-4af5-8e34-ef45ac5f349c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 497011ac-0cc6-4195-a3d9-91b057d62638)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'hD7E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #438 bfddf28b-a77c-4a2b-999a-ac36589ddb10)");
unit.assert_eq16(16'h0EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #438 be13571a-304a-426f-973f-81816209aeec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 3cf95115-b916-4820-9326-2b47667f8704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 ca85fffc-f9ac-4ad5-baa0-83fdfa84c1eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 4eb411c8-1060-43ed-aac3-4d19434286f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 d6bd2787-0c7f-4046-be9f-3e6b6f7310c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 4f14b883-22da-4fd7-9e48-fe8b18bd47c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 d404f2c5-71e5-4657-8271-c017ea68a74b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB79A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'hB799, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #439 c34dfa57-851e-45b5-bf97-ec1f3c4d2202)");
unit.assert_eq16(16'h20CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #439 fa12e25a-e3ed-4fc0-8ffb-c522d0298266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 0a2f38a6-1c3f-4435-8735-b8861a351931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 1d8d72ea-d8f2-4c59-93bf-ce3a24ad7b9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 3b6d7186-c73b-4503-9fda-8f01796e5a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 335adaf1-16e1-453a-a108-3944a0f78084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 ecec7278-84b2-4f34-a7cd-662e4cd94b40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 83bca900-6dd4-4906-a275-e08fe16951eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h590D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'h590C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #440 216f917e-bd6a-4462-93d7-51417a9088d2)");
unit.assert_eq16(16'h00D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #440 f9a97c32-237e-4a3e-8750-2f656725723f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 2527503b-4341-4ccf-97de-52227a587c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 33cf91cd-0292-4755-ac1b-5920a15655c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 1ffdda9a-ac78-4023-b8ce-b728dbf84de6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 af1b6184-1e25-44d0-af4a-27421e5350a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 20355935-8b6d-4446-bb45-6a9e078f9715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 a764e99a-2809-44c0-ad11-1953d1cd38e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h514B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h514A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #441 4912f6eb-7770-4d01-a58c-e86bfc452381)");
unit.assert_eq16(16'h54C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #441 4ab00ea1-d4ec-4e27-9a9b-6650ce24acae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 cbac8970-76a9-4d0f-9ffb-6fd7a5bc715f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 99765bc7-e08f-42af-aaa4-3a16441c102c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 61c6067d-53be-434d-93f3-81d5c6eda93d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 0405f3fd-4d4e-4195-b6d4-0a5cf001dd53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 47889e4f-6741-430c-8787-e1de1130f6f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 b17a53a6-c04c-499f-8a4c-642d2b24ce9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h83AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #442 4d1d912d-6238-4be4-b112-bd7919d7aa9e)");
unit.assert_eq16(16'h4E6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #442 356cee1d-0ea4-4b73-8746-50669b35bc73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 a5ac00a8-67e1-497b-9e69-e1e809d76f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 bee63206-d60e-4b42-91d4-ac395336a715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 fc2d06d2-d5f3-4398-8b43-98560889a051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 4dbf77fb-0f8f-4d43-ab3c-8fb58a829816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 fb98166d-42d5-43d6-8440-aa0411b35121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 3541dfa6-55ff-4746-abef-ca209b744ebd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD645;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'hAA5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #443 887c2a53-d8ec-43a1-80f4-df5e76018919)");
unit.assert_eq16(16'hD645, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #443 4f013aa7-d224-4d97-9241-0c73137929fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 9387492d-d9be-43c1-b95b-a2b592003028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 bb93a669-43ef-4cf8-ae09-b0add99e2b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 2d108671-0209-4617-bf9f-e3e05d415f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 4dd4cf6b-ce74-4dc6-8476-20ebac365e3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 bc8f9afa-d4a9-4c78-b549-cbba815fb7ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 15cada1c-d804-409c-91fb-11a30daa7209)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7548;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'h7547, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #444 6343c320-881f-4f6b-95f3-e1dd7ffa3194)");
unit.assert_eq16(16'hBAC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #444 a94f24d4-b162-4f0a-8317-7cb99791bb19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 22097f86-7d7f-4cf3-8ae2-e9906ef382f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 ddace344-96cd-4739-abd8-d31ec6a4fc93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 c736d34f-1260-43e5-81aa-365ac7086fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 c20f3f78-ab78-4944-845d-3769adb6dbef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 1a8934b0-6713-46ca-a0ef-3dc05872d45e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 1bc0f736-fd03-4a4a-b3f2-6fa26b9fe17e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE62F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0821;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'hE62E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #445 dab738d5-f8d5-4d65-bab2-3475a360fef5)");
unit.assert_eq16(16'h0821, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #445 dd134368-001b-4eeb-9e92-9b0055d75c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 1dbee61c-2ba1-4ffc-bcef-6a9f844fe79b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 5cf8fcbb-2a27-4674-8ef7-c4b3ac377f6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 93fb3b65-55f7-4fda-ba43-db68bd39f94d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 d9068e01-20c4-4a27-9864-7c7bda5b5ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 c0e7a61a-5102-4a18-b6a0-55bb6d6d97da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 7f50a192-9a39-43df-bf2a-57049c555dd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h634C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h634B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #446 a7ba9615-c110-401a-8e20-03b7dcf116d1)");
unit.assert_eq16(16'h0FA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #446 c52e92ea-7e34-4d1f-93b0-8f11ac54ebd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 4e552ccb-d98a-453f-8234-e296bf956f86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 a600287a-517c-4886-a1c4-bff86a761171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 13bbf3b7-0809-4906-a9bb-a0a098cf1bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 349cebff-8cee-4df8-854f-e42e7dce2112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 85630966-161d-447a-bc19-edc700a15539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 7e850764-ed2b-43ee-a7eb-680b84961c18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h422C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h422B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #447 1e79947d-f723-49e7-95e9-5e9417a7660e)");
unit.assert_eq16(16'h1D2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #447 18b2fd01-b677-40d3-9861-2858d2337e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 d8005aa2-31c6-4c37-a24e-62d0b693c411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 c9ac42eb-16ef-439d-86e0-40bff35f6941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 503847f7-0a38-4fd1-bd9d-a8e5ecadaa52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 620aff51-4daf-41f6-a5c7-4bc20c045cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 77950c02-0a20-41e5-891b-e03e708c7f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 ba45fb16-f689-4ddf-b822-64ee46e2ecf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8EE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h8EDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #448 19a28d21-ad81-4083-8e61-68c63bf44087)");
unit.assert_eq16(16'h69A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #448 bfd116f3-f7a3-43a9-b5ea-d0b3e5de03ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 a37eb0c6-bccb-457f-b142-d87ebbeaad9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 902cc4b8-b5b7-4fe3-b060-c6a58ab2e275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 bba1c7f4-3793-4ab7-a9fa-ed64b3341894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 04155ace-73a7-40aa-8561-da35563c9e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 73e1fae6-3a7f-4f36-825f-ee52e0130e6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 8a5e3ac8-11f4-4bf6-ae70-7dcc38ffe85a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7151;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h44C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #449 cc2ac441-9718-4cac-9fd6-c06c0d7bc6dd)");
unit.assert_eq16(16'h7151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #449 62cc590d-5c41-4c99-9110-879d74048243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 bc9f9331-ffc8-4ed5-b21f-9b658328727c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 24b94a39-fc5a-4530-8cdd-675f709c0e0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 d0fbb0fc-f349-4089-942e-3b5665d35bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 22fd4b3d-a01a-48b9-b5db-5fae491dab53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 45d43d33-880d-4f55-9782-c13ee58e6a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 55be3409-4c2a-4809-a137-be4472667965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h0BED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #450 d6c2ef2a-822e-4abc-ab7a-609f9d3a59b7)");
unit.assert_eq16(16'h2BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #450 e8582e63-14e9-4798-9e01-52dbcbd69892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 f04d3805-2849-44ad-8772-ec2a9e4ff3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 9c511662-615e-4ddb-b06b-e9463209c58f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 c46aff05-a6a6-48aa-867d-044fb77d30fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 d9624a21-fc47-46b4-b4ed-2c1ac616b804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 b589d03e-f9f8-45ca-a08a-916df8362297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 367ebbc8-9051-43e5-9fad-975b8dd25a65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h69D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h69D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #451 45d79756-2070-4455-b505-4bdd673a25b5)");
unit.assert_eq16(16'hBD5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #451 9806102b-7af5-45c3-ace5-0bcc085a8488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 09511d17-02ff-4a1e-937b-9f5e54a65ef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 c4397479-3a1a-4b8a-a4b2-bc10fb676103)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 7531b208-f598-4513-8278-23aa5cdf3cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 8ec5824a-a008-4a0f-8001-9fbfa1710a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 ff81a1da-944d-4e85-8083-084dd2b2f633)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 a47ec515-c9cb-4031-8614-04c498cbc80c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB9AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE057;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'hB9AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #452 dceff088-872d-475c-96fe-94eac514700b)");
unit.assert_eq16(16'hE057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #452 78275508-6b14-4e8a-8376-a40d8a9a8321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 18fdaafd-7dd0-4db8-a845-8e3dd23b2fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 cbf107fc-36d1-4362-a3fb-999139bc5a17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 acb5272e-8f58-4698-87ae-b663703d4a43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 91b73e8d-6273-4a34-981f-c3dadb3d30b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 2ac85900-3e5d-48f4-bb5f-52838025a428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 867bda98-75a9-4e91-a933-c2f6430fced4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5FA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h1C41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #453 4dfcacbb-adba-4580-9649-5bdb10b7212a)");
unit.assert_eq16(16'h5FA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #453 e173fe2b-da43-48e2-911b-52592fc108ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 2cca2729-7c68-4081-8190-7a5b0ae866ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 3a0963cd-03c9-4317-9332-05243a2ad26f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 1a85b152-b31b-4edb-9f47-0b9647277fcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 e2266b6c-2246-4801-abf5-8c87823f1cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 048300fb-f2dc-4ac2-b141-233df2131ae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 5f8ed15d-10b0-4c3a-b346-b54524a8a790)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5245;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h5244, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #454 645ba3db-9f62-461a-83b8-f532f0493810)");
unit.assert_eq16(16'hA6BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #454 8f6741e6-30e0-4ef3-8a17-fd54bc5c9ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 fc585dc8-78e6-4efb-b646-b792914d1948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 98212c6a-eea0-4758-a955-a10f881ecd7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 5f19336f-b364-40e5-8f88-afd71933a7d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 5a30127a-93c5-4b5c-8967-4239732eb8ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 e701c9ce-efb5-4073-9ad6-d36ae1c6c627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 9b2fb093-b116-4206-8c09-6499e0f7a1b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2726;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'hA374, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #455 d9d0ba82-b330-4c57-a436-cd5dd80d987d)");
unit.assert_eq16(16'h2726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #455 e0a3898b-f57f-459f-833e-87d93d0adadc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 487a170d-cff8-4d7a-9c04-890bef5bbdab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 a6cbe0d4-416b-48fd-8813-ab1a91498492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 6d646172-ad21-4719-b475-535ccefa13c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 3b39895b-1019-4263-ae2a-7210b71044b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 58b0a75e-4706-492c-a38c-b783f493683b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 4f0b186c-19e5-432e-9c91-fa171b1b7a39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9AF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'h9AF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #456 8f1bc33e-577b-4342-93b0-8188945b4102)");
unit.assert_eq16(16'hCF5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #456 eab6ac87-8a62-4b9b-b896-a6e2db02fb5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 710bf738-ee5a-498d-a6da-1d9789704bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 4f433701-57a7-416a-9e16-ecbbbecfcdd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 b8b2d3d2-cf95-4c05-8926-6d0b43d25d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 f88e0b28-296a-42ab-a250-e7fd62c68d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 97b754e8-5772-4315-8d31-3649fd5f79ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 bb029812-5972-46e0-8a4f-45aaedefeaca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2891;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF359;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h2890, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #457 686d13c6-6731-47af-8753-413cbdda17ce)");
unit.assert_eq16(16'hF359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #457 51116e58-2dad-4986-bca1-09ecb0397d08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 50586108-a4c8-4baa-b060-1f125c439def)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 3bddd4dd-1826-4a37-8aec-3a5ed5f91844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 c031ff01-4236-4be8-b386-29f82ce00732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 07324817-1f47-4f12-9844-31c211be4bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 5c6686a5-d03f-48c9-afdf-d4e8ae1de945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 28fcbd25-39d6-4ade-8f12-c78aaceab9b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h193B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h193A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #458 94fcaecc-756d-463f-8d17-b1c509e027fb)");
unit.assert_eq16(16'hCA59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #458 e8f15c3d-4109-48ec-b41f-a67724b6b122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 f457c553-9fe8-4db6-9dcd-9d85d46579c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 fef433a7-5feb-4b11-aa5e-820213a6ba53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 caa9d456-a2e5-488c-99aa-7422c75304ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 ddb367bb-8268-4232-a5c8-d3dded7fc688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 24eaed4f-ccdc-4e70-806a-0d1130e3d297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 828bc3af-5efe-4d18-b5ba-109aa1c1b740)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h46FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF96A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h46FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #459 c0052f05-dbda-49ad-af52-64bf5227e912)");
unit.assert_eq16(16'hF96A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #459 1db5c266-bfd3-43b6-b20a-1680765429c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 62203f63-249b-49e3-b084-9f6b966076d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 131f17ce-8a3f-4228-93fe-c6a25cd0c493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 e45a0549-d0ee-47aa-87ff-fb8862224209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 92383cf7-bffc-4588-8859-4559969e7732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 431fc806-d3b4-475a-843c-bb1f4962a933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 9c237e01-9ef6-4e77-985c-863ba6236a17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6CD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h349E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'h6CD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #460 1d8c1088-ef1b-4421-930a-27f19666dc60)");
unit.assert_eq16(16'h349E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #460 f2a4beac-269d-4aa6-a39e-48cc84d0ed5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 2d470611-5788-44ae-8434-4386d27eb24f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 7e36be1f-6324-4434-89a6-ababc7b00cdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 af5a358e-8c36-4046-8a09-5d574b74d7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 550dcf19-24af-48b0-83c7-658ae437c701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 6d1863f1-569a-4867-ad45-50d6598c25ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 297849db-576a-4d03-9ef4-f92ac2e1d361)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9985;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h9984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #461 2a9685c4-3496-4b34-8cb4-904cf3946432)");
unit.assert_eq16(16'h3E52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #461 353270cc-7859-4d66-a25f-a74330ecb671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 71b9e149-2c6f-4b9e-b9cf-bc426a8903b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 916a0a13-4980-43e7-83db-26597d7ce850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 26b6a27a-55e9-435e-b983-c8dc10de48d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 a32e81fc-13e1-47b1-a6c4-6df1f81e8b02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 91c31746-edef-4b4d-bc84-088081e6c9e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 a6f08b0c-2802-4d4e-86e0-1e3e1649361e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD6AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD6EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'hD6AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #462 1d970ba0-82a0-4a17-85d5-9eac812a2695)");
unit.assert_eq16(16'hD6EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #462 e3587c06-c705-49a0-8629-20761e616cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 5b69416d-c704-42af-9be5-fbba76b4c257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 656e7f0c-113b-4f55-901a-90713ab11162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 1680fd01-cd54-4b27-ad34-282c2b9f1228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 29e99f65-610f-41d7-b4e5-022548df1eb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 977e3629-b512-4c65-964f-1b12184b458d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 dc9e692c-fdcc-445f-9e40-0c2032621afc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC134;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDFFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'hC133, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #463 4af69151-fc75-4d04-b091-03918411d363)");
unit.assert_eq16(16'hDFFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #463 6a531b33-4cef-492a-93b2-a771fca23a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 f0a5fd22-6353-4eae-8351-7510e56cd026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 95594d9b-7f8a-4838-bc01-0f12d7e86f7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 77e980aa-1741-4b91-8b5b-12050f69700a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 6b9cd57c-426a-4ae8-9f3f-c51777f8814d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 cb996311-9c4f-4b6d-bff0-1299071054e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 05b6f47a-aca5-4383-96e8-b73ddf33a914)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF17F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'hFE07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #464 aaa703d7-0513-44b8-ae25-b6e3734ee5ab)");
unit.assert_eq16(16'hF17F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #464 615e05b2-3f2a-4c9e-91d8-53b5a1cf7878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 62a0c200-350e-4ba9-91c3-7273201cc0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 9233772a-7c9c-4ce8-a477-0e6b128c03ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 d3c0f67e-adfc-4d8c-9ece-f04ac393859b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 6186bb34-f092-4135-9b45-9889b1a27fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 283b0def-08ab-4a8f-bd08-37c734071efd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 85dd1697-8ab8-42ba-bd46-05c71b10dbc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h90D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #465 1925ec09-1571-4472-b6d6-8000d071425c)");
unit.assert_eq16(16'h1E2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #465 da494fff-161a-439c-bda4-8bad57dedfc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 4c816a02-6c06-4e64-a391-cbafd7a54a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 c4342cc6-69c4-4dc6-b038-bc08ab219f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 3b15659e-6e25-44d6-8616-855ba8c7599e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 eef736f8-c529-4d31-9da1-a2f1a9eda041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 727f84d4-6dca-4b10-8ce1-51c80d6a3256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 2739dda0-4066-4d6a-a6e5-64bce08b1b31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3404;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h3403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #466 5b7bf91d-c5a3-441e-bac2-fc048cd9183e)");
unit.assert_eq16(16'h64E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #466 39fd20e5-2ce2-4832-89ac-08585541a1be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 b9daaaed-381d-450e-81cb-6efc4aa3922d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 70aa0b9b-3fbb-47b1-948f-f71b81a70e50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 6449f38a-99b7-4d24-9b26-e6b39365b579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 8524418b-b8f0-4557-98b6-4c04fe077faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 abc390c6-b320-4d2e-9e04-874728d229d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 88287cea-ba48-4f7b-b9b4-4778b89cc463)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1691;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h6E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #467 9ebf0931-278a-4bea-a476-03bf5346442e)");
unit.assert_eq16(16'h1691, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #467 690e8460-9d46-415f-8ca6-ab46dffcf2b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 a1af9e2e-5de3-485a-b78a-d28b135ce758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 9ac7cddb-5738-4166-8d38-78744fed4ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 a545247e-dd45-42a1-bc3c-a808694d4821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 5b9bb29f-bed5-4451-879a-631497df151f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 d092e9de-ddee-421f-8c3e-c9fe043a002f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 437d7f9b-753e-4341-afb1-9ac64f5cfc9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3344;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA666;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h3343, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #468 10a33efc-7466-43f8-96f0-c8d2b25760b3)");
unit.assert_eq16(16'hA666, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #468 a251f9ad-210d-4cef-af47-2492bf5408ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 acdc5643-1465-47f7-8ced-de7476a063c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 6f10f163-16f1-41f5-ae71-7a827918d1f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 3fca0c53-82ce-4f31-bf16-37f7f574f756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 3c4a7fe6-10cd-480e-8bc9-ca30c1c4c20a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 69d7c5a8-f6ca-40ad-8cb6-0d4d8259f6fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 a2bd2668-4a51-479a-88eb-64e20d1733b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1908;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h1907, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #469 3e4a012d-1b6f-453b-b2cc-1b8826db140f)");
unit.assert_eq16(16'h78B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #469 b0619c66-a158-4813-8a4e-cb943b371974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 41a34611-4414-4d0b-91ea-c2dbd0ad71e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 fa14ab6d-4e3a-4aaf-a1f9-90eeddb027da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 994aae31-e30e-444f-a28e-af28ed365322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 8d0360d7-8732-4d31-9110-500897ef5525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 e151bbcd-115b-4bd6-bf5a-bc1a751d702b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 7d525027-4bc9-4e36-bb24-6b0d440d9163)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8839;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'hC2BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #470 a658bf12-0365-417f-8a1d-632735bd2bfa)");
unit.assert_eq16(16'h8839, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #470 1f57aad0-11fe-4e7d-aacd-c4cf232a44b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 e126cc66-f1c1-4e73-a704-855454735eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 38ef6603-156c-4029-9ff2-dcb65ee87726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 c78e83e2-8acf-4a6c-8612-4d5d9b7d141e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 e8c111ac-0382-4932-9a53-b8c98680fec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 740a000d-adb1-4e3e-816c-13fab89f5cea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 5b011233-99b5-45eb-a52b-7366f3b1ec45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCC20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2722;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'hCC1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #471 4b142007-c037-4838-993f-e766f4fe7e78)");
unit.assert_eq16(16'h2722, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #471 fee7cb01-c336-43c7-915a-86786f8523f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 4589acf9-b162-4282-ae08-7e8e8a16f727)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 a36f5777-6a39-4662-9a09-4ae0a9ee5b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 733fc7ea-47a3-4500-b827-7c42506a4c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 2341c2b7-7929-4885-8684-811e5f387fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 8a3931ed-f2e9-4632-9b42-2e897f886437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 317fb305-3ec5-4e17-a130-77522277c459)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8787;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h52E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #472 507c5580-9f2e-4640-be04-9ce9ee3a6169)");
unit.assert_eq16(16'h8787, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #472 057ad6b6-c31a-42f8-bd16-468cf3186aa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 2486b783-afee-4fd8-b96c-dfd8d20e8a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 cae9e368-a728-4b25-b77d-b0120920eca4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 a63906af-8a7f-4eda-97a4-65a24d431692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 d8ec3016-7765-4851-97fa-285da8bbc0d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 d8474d01-0734-4a31-80e2-220f7b777246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 29964145-70c9-4b7a-9ed8-f345f26d7604)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h055A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB4EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h0559, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #473 27b9f594-d64d-4387-b4ba-984acce6f029)");
unit.assert_eq16(16'hB4EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #473 15bca85a-7260-4a92-87e6-8628898d14e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 b4d69b50-17ea-4998-99dc-881350109ae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 c318d349-d966-445b-994f-62ed9c335604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 c6b4ce69-fe5c-4ac2-8207-14140446b982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 1512e060-0110-4353-b788-cfd7746a0e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 66ac20b3-907b-402c-b599-e84d36b0fe46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 2c6b1bb3-3c7c-4ac3-83c0-1deb9ec0b82e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h7DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #474 d21eb49c-2f0a-4d1e-8b0f-2f0b738e830e)");
unit.assert_eq16(16'h10BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #474 ab92806a-aebf-4ac5-ba38-1dfd8f97cb67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 c9994cd4-3ee3-4292-832b-444468097e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 55b493f8-fc85-49ee-a346-0fe557a7968c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 65b55e4e-9338-446f-8382-d9f2d5a00871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 197cc4b6-b55b-407c-b1d4-f1c1f6555bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 8521cfe7-d3ce-4866-b335-71cf71d46c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 bc4a5f31-f8d9-4d1d-83bd-164b1ea4c99e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD5CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h2F7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #475 21cbba29-a4b1-49a0-9f1d-17cbeeb0a473)");
unit.assert_eq16(16'hD5CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #475 d6dc7ba6-6f04-424a-a7b8-035a1c73629f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 cd34c743-cfac-4632-b6b1-d43e71950d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 59ca6448-859c-420e-a2b0-b10c9a71d354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 d3efdbe0-5c61-441e-9492-0fdb6cabf5a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 1910088e-304c-405f-90b7-062de441d396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 c81dd541-f29c-4d28-b21d-3f094375377c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 77f33e1f-2791-42fb-9241-9480d0ab0b78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h3E0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #476 66ca5ae7-2381-4105-93ee-6c47d1b6fef8)");
unit.assert_eq16(16'h5A9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #476 36a37f86-ce1d-49b3-8b53-34f08475b9a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 06307c07-ee7f-4939-b09c-c85ebb7d9688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 3ae5c6ad-4a44-423b-9286-5d46755b7b56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 0b67d9d7-eca9-453f-b5ca-898c3154c01f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 ce56859e-08be-4070-a99b-bb1737efb447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 b755b1e7-6cd9-4e38-9c28-ee2f6af65a2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 a055e1bd-1ac4-468e-a4bf-644537688ee6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4982;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h4981, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #477 c6770b2d-e526-48c1-b2f3-5e44b2c4a9b8)");
unit.assert_eq16(16'hCD62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #477 32fbdd18-90b7-483f-ace8-5d243686b78d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 cd04054e-4909-45b5-8143-f87662993b10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 2e8f1e62-c258-4d0e-ae78-cea0b1a69fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 0d657ccc-9bf9-48a3-9a67-0a68fe965511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 08b98842-fc4a-4935-9b11-c788bc932d73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 3d103cb7-3ae5-464f-9102-46683bb720fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 2ca17a05-1d34-48a0-817b-8192be74b0a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'h4B43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #478 fd63c42e-4ca9-4809-b282-2e964402ade3)");
unit.assert_eq16(16'hC457, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #478 9a3e92bf-d2a1-4c4f-92cb-1ddcd3b1628c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 17f6191e-2ca7-4a1c-bdef-20c1c6b41d06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 6118540c-95f6-462c-9074-f0c4c024874e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 e05c441c-1c61-4d9f-bf56-bd5f10d0a77a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 f836ccc0-294f-4248-b895-22eb4d060fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 474c84ce-d0b5-433d-8f6d-80086014ab69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 108fb882-6d41-4ced-b109-93595fb29b0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2222;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h2221, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #479 31df342c-9b38-4ed6-bc49-f1e4c159e782)");
unit.assert_eq16(16'hB8DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #479 ad7fb72e-57e8-488d-9779-1173588c2160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 d819114d-0205-4247-88f6-e777502287ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 57b5f5f3-2849-407e-b3cf-1a640ce879c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 48c0833d-2df1-4448-8780-95017bd62bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 a65933e4-a667-47b4-91d0-7f47a265220e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 87b77f6d-3e8e-4da4-935c-963a168ecf17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 79049855-6376-46a8-83d0-be180782eae9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h648E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'h7A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #480 e616a3b0-e7af-4561-89ed-eada6df26282)");
unit.assert_eq16(16'h648E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #480 22956bb5-2bd0-4c77-bf0a-8d3a0553a03d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 47851120-06f1-41b3-a8bf-a75204a0ed55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 0a97012b-fec5-42bd-adb6-b6d6371443e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 0b20e462-d23a-471d-ae9e-9fe586ffac12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 9e3cf76e-63f4-4567-9cdd-bd6d5ed2499f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 4f15bbbe-d816-464f-a580-3f3cb2548fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 024c91f2-aca0-4d6d-9ed2-eedd524ee09b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF41F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'hF41E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #481 406a92e4-97f7-435a-8537-53520f0e943f)");
unit.assert_eq16(16'h67BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #481 d29616be-f335-4067-a5d3-07558474b8a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 c47c4b0e-8fa1-4d83-b190-cb95facaaed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 1a4c353d-4db7-4893-a7ec-d8bf649a377f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 06346ae0-bc3a-4fc5-af22-f473f99d858d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 a6763df2-38d9-423e-a68b-19da9eb2adcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 bdc5d0c7-85b7-4a67-afdb-7264524c6184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 ec58fc49-a92a-4a70-89fe-4ae6df878863)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h66D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE285;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h66CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #482 9d317256-c9c5-4a39-a8af-cf0c30c8c0d8)");
unit.assert_eq16(16'hE285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #482 ec6ab52f-bfe6-4bf2-9daf-bd22973c7b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 7ff86a3e-1692-4f2a-b3a1-0a39754ce735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 c918b90f-7bd6-4773-a99a-0a998c600d7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 03cd20b4-8ecd-4e8f-b3f6-f03375bb4e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 b75a0d3d-8fe6-4e04-946e-b88e648a55cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 a0607df0-2935-4108-9448-db592304a944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 91bf43fb-bbf7-4653-846f-48c858d9b4a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'hF5C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #483 7a42f579-d505-477e-89a1-9946bc832fd6)");
unit.assert_eq16(16'h6D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #483 bd71f858-146e-4c55-a3e1-22efd0134805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 9bc35143-6eb7-4ba1-8b59-e2b8d87a6b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 6b1e0e2f-da36-4fe9-8002-50eae7628848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 f04ade5f-58d0-4bcc-8b35-836d92b02183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 2263abf2-7922-4198-9794-0d6e7000e824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 5f1ec639-e084-4af7-86fb-52a6317ec29b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 83ec6402-6fc6-4f68-8af9-5101fc37defe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h355B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7064;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'h355A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #484 043012b1-bd86-411b-96ce-ecd7a065fe5d)");
unit.assert_eq16(16'h7064, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #484 564a3e76-198b-40c9-a87c-bfc153336d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 2a38c124-613d-4a44-a1fa-1b1e21212a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 c7bce909-7446-46ba-80e7-57884b5ea44a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 a647442c-6882-45e7-b32a-ed6681ea1f1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 0f852dd6-598c-4154-9337-79ed59fbd0fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 73490727-bab5-4e6d-bbce-bb3aa62f7dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 3373570a-7dbe-4ba1-9731-b0116fc40481)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h8B8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #485 f9d24867-433d-414f-baec-34a3dc4157b7)");
unit.assert_eq16(16'h9E01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #485 4c3629a7-bde0-4d35-bcee-1b553ba6dcc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 d22cd699-b022-47e9-b001-04a8cd5870d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 7061a31c-3a73-4b1d-ae55-c677a410ec28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 622badb2-6cf2-4016-b249-ca2795a80d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 caf7ca43-2b7d-43e4-b423-b8ac07258176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 de67d685-9a0f-493e-a227-1f62f78008bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 c59bf762-891c-45fc-947c-5fd99df7beea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA503;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC636;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'hA502, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #486 a3259d7e-ea9e-4638-a5b2-676930023810)");
unit.assert_eq16(16'hC636, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #486 934ffd24-bc2d-4856-a5d5-f3bb6f632874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 29c90a08-6d75-4233-9f4c-44cc7c20a129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 1f03951e-71ff-4bfb-8bd6-14f5e2dec096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 b9e0ff33-5498-48ac-8c3d-9bb5077d2b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 729401e3-56b1-4e56-922c-deddb27d0c0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 8d616c33-8cec-4907-90eb-dfb5c19ab41e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 9153d760-07ba-43eb-9cf8-4b34e34971c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4265;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4909;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'h4264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #487 efa4d9c7-352f-4d90-866b-8efeb548721e)");
unit.assert_eq16(16'h4909, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #487 6bd0d4cd-97a6-459e-bc45-d0af548e8cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 ef59ec69-27b2-4b48-9900-3ab09ed54a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 829ae80a-27e0-4b36-9a79-9dd0e29e6d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 53d18904-d4a8-4d0a-bef8-dab735bb515f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 18f7a307-edb1-4e3f-8946-0da988540f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 10ea50a4-500c-422a-a424-fc6e6c7dbd74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 e1cf61a7-7753-48b3-aec3-b09b38d0ea61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9054;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h9053, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #488 8d3c6b1e-2f68-43e1-b7b9-3c91b2063ceb)");
unit.assert_eq16(16'h18A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #488 0407b2c3-9e53-43d4-97eb-52786df73a92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 4cf0884d-7b3d-4482-939a-d92b77e8d814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 4dcb22e6-887c-400f-8b6c-0db41d71adda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 bc2958dc-5849-4b53-9fe2-3e161656b7ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 efa6d101-e32c-44de-a0b8-269c7c84afbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 0a8ddfaa-eeb4-490f-9593-110ae9f5dd3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 57dd7f71-f8d3-4c38-bbf0-8eca8feb2fe4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8403;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'h8402, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #489 280eca4c-a9ac-4200-9368-a80afe893605)");
unit.assert_eq16(16'h090A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #489 5ad531e6-18d0-40b1-bad3-6c949a340aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 2f6a73d0-e5c2-431e-8c50-484ee629885f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 0da390c4-90a8-4f58-8f76-062062720c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 3886f598-64ae-461e-9017-9adbeec4dbb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 923a4a89-0284-4772-9c78-9730740b70ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 75c8c426-770a-4699-81fc-6186367362d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 5b80f42c-fd46-49c9-a3b0-f52c79f02a8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1206;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h1205, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #490 07437502-4c7f-42c5-8e2a-fb137f9a8ec7)");
unit.assert_eq16(16'h1B41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #490 ab15851e-1dea-42f3-a321-b7246ac34354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 bfbe27f4-c3a7-4251-be2b-51503e45d255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 63867a8a-34b7-41ee-a7fa-768e69e78098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 a9c2ced0-7285-4f9d-978f-c4a4c2439384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 23b4c2e2-7f65-4faa-a53a-dd48ee9f01fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 825a27a2-8f18-4518-818a-eaa9c830114a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 2d7bb4c0-6b97-4423-97c3-17811be31c5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h608E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h608D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #491 46663ded-8719-46ab-a378-16e23d128b9c)");
unit.assert_eq16(16'h7B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #491 7c6205ee-165e-44eb-939f-00ba8507cfde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 97a1ee9e-0605-4c75-9ac0-330f98af8343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 60cd894e-714d-408b-9371-2e2a2c850621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 4c52f3b4-820e-46a0-a6ea-0cab55e902e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 c246169e-cff1-4df1-93d8-381d2b184701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 cac5d1a3-3a8c-474b-9312-7193154e9eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 718a3a14-91a3-458f-a174-8b95342e9975)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFAAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'hFAAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #492 3adc70ab-180f-4e5f-82d2-bc43ec3d406a)");
unit.assert_eq16(16'h36A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #492 483e804c-6610-4d15-888f-d24366b1a175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 ee1194e1-d76c-468c-b7e7-2469fc803ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 312a8c5f-6ce9-467d-9532-db4f9d5f115d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 088d4420-2d98-4143-ab0f-b4030932401e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 b5491f77-83c3-44b7-b98d-90629cb0e037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 f375c561-40a1-49d2-8a74-cb3f8ef7b11a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 5022d605-81fc-401f-bffc-e81a45cdc48c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE152;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF314;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'hE151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #493 b09a118a-55aa-4233-9bd7-f88a59d0ef51)");
unit.assert_eq16(16'hF314, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #493 0bbad6e3-09b0-4cfb-8afe-4a55f3c4636d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 1421e1da-aadc-4ed3-bc83-4f82a2072e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 06672558-994d-49f4-8545-c66949af6adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 77bd2229-8665-4176-90da-f8148cb2670b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 25512832-8f8d-422f-a92f-c64baa0b0f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 d331d37c-7047-49dc-892f-fb64926cb6c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 957f0dd8-d3e3-4f93-9f13-58f4f2b59a91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA2D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'hA2CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #494 55bb6a60-6808-4dda-890f-be0e7067ae55)");
unit.assert_eq16(16'hB8D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #494 0ba59cd9-3391-4027-aecb-01acd8c9e959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 c607d182-f843-4169-855c-b2885dce32f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 a77aae8f-af74-4f3c-8bd5-43561f55be17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 7266a38b-410a-4400-9160-18e284a1b593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 3a5c901d-bc1e-4d30-b149-9fb70e8f7adb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 2088059c-a17c-46d6-94ac-db8f96e73a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 d5e422b2-a324-4011-9d2e-e9a67fdc7b92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA19D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h102F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'hA19C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #495 f3209641-3c8d-451a-9c73-12422d209115)");
unit.assert_eq16(16'h102F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #495 e3756ef6-167d-4519-8bfa-7072f3aa5a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 cff16d9f-dd02-4896-be9b-9d7fb88cd19e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 c20104da-c76e-4dc2-9a9a-976530daa5a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 441ebdb2-d58d-4000-8dd0-d9c4c6f5e49a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 2130af15-6aef-4b56-bdd6-45afcf3bc326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 97d56c63-1d99-4f6c-8b68-b13f4fbeca69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 96350598-a83e-403a-b936-e8a9d35436ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h7D19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #496 8390545f-2010-4af5-bddd-bae90feeddcf)");
unit.assert_eq16(16'h84F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #496 28e7f840-51da-4308-98e8-534580251138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 a753ce74-e28e-4d1e-b7fc-5b38397d67b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 efecaba3-8ea7-4990-bdfd-cdf1953e5035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 bfce128c-bd0a-4843-a940-ae6708b86331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 665f89fa-1f11-4a03-a234-850deed81fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 dce9fcc4-be5a-4374-ada3-ba7b9519c0a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 c0b65607-8dfd-47b8-a9ea-5f3d4a45e622)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2FE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h2FE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #497 9165eb7a-04c8-474d-b73f-cfd4c7e08fba)");
unit.assert_eq16(16'h0032, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #497 035127a0-c605-4bb1-bd03-8340f3515265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 ada80425-ace7-4e8f-a375-6d9b34f05a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 25d81536-40f9-4a2b-a0ec-6c6ad7f5da00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 9c95bf62-3eb7-46fd-9a30-5c6542b4fc7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 8a33ff26-5d6b-4deb-aee3-2deca9b17bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 f31defb4-2812-404b-970b-62b0630adcbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 6dfe24e6-3e94-4387-bfff-e902cc0ff915)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'hC2BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #498 4a61fed0-e3ec-499b-b414-957a68a02f2c)");
unit.assert_eq16(16'h7F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #498 47cb442b-943d-4a6e-a6d4-02c7b11e3bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 03fa8bdd-f6d3-4f8a-a92e-39a1f068a102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 1c8df831-a848-4196-9d82-525a5bb778f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 b5ae0bf8-4751-43c3-87fc-73c7ebbc408a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 856a8e0d-5b47-411b-821d-27692d6baec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 1be682ba-ac05-4afa-889a-9b5606ac99bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 d7857c7d-9f17-4877-932f-cbdc2bade50c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9BA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h8F31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #499 777697f6-e2d9-43ec-8dea-12b9a3b4d107)");
unit.assert_eq16(16'h9BA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #499 29b09c82-ee01-42fb-a14f-5c895fc53573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 2f315a9d-de9b-4430-9fff-992599ba0cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 ca36163d-56b4-4237-9e86-6858d4c62def)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 66293446-5316-49c7-a1ec-f5956cfa7d61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 5b01142e-57e8-4dda-b358-ed25368c4c37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 5452f50d-4fbe-49bd-a627-c76209309cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 2a3fb624-2752-48d7-bd0c-e77042159c57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC3A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'hC3A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #500 b5f85956-81fb-4f67-bc94-45deeeb39003)");
unit.assert_eq16(16'h3D6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #500 fc6c7c7c-059d-4d1c-b28f-5ae2dca80060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 6e98a1e3-c8c0-4a27-9c44-4705f475170e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 5c0cfca8-64ce-4173-8af1-156bae7877eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 32426a2b-f119-4095-90a9-1c24061194b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 541cdf42-3673-475e-96a4-e2444ea8a246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 e51083c1-e854-4cae-88bb-3c24960cb480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 569d59ae-646f-4c5f-8c34-ef282a0e004a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7285;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'hFF2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #501 137397e4-10d9-451b-8877-87f7e3343564)");
unit.assert_eq16(16'h7285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #501 58a245fc-cf62-4649-992e-e7e8b3694523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 5c7f4ff6-573f-4ace-a73a-321e2401b803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 b82bfc74-8540-4f65-b2ba-bb1e43bbf4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 4627e939-55ed-414f-a703-45efe52572ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 33c42158-b5c6-4893-85ff-6aaf5bfecc53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 f8750168-bbb8-4f68-91e3-11ceec48fbab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 37170af9-e879-48e2-8af2-ff685a4ae75e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3522;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEDF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h3521, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #502 cdfcedd2-29ca-4cf6-8386-10b012048b85)");
unit.assert_eq16(16'hEDF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #502 f3d417f8-05a0-4e26-bb9c-7b0461c07f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 15e86aea-03bf-4f09-830e-938f10ffbdf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 3902a810-4459-4d2b-ba1c-28cd4d7f9186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 0c100557-d210-408b-ba0d-c805fbb59b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 4543be79-2b8a-4fe4-b563-00a4165a2806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 cf6641fb-1dfd-4656-b65d-7ea505666783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 61a1cf37-7b1a-466b-8406-67e8218f5322)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA576;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h0E7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #503 fc9a874b-b8d7-4993-8ed6-d121785db086)");
unit.assert_eq16(16'hA576, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #503 bf4c2cd9-a49d-446d-af95-4b2944b92277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 2766393b-9b68-40c5-b767-5d5d1239d856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 a2f1d55c-fb9c-445e-8711-fbc11c5cbdf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 a1565b9b-9926-42e6-ab96-05a31bfd5518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 6c3bd15d-d0f6-4e1b-9a29-0ef7d9a5b388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 b015e938-7623-4b28-b7b6-723ddd5f02c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 788685ae-6555-43da-94c7-b30801902e6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD8F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h88C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'hD8F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #504 ab5f3671-4df9-4f08-9b5a-93034e631930)");
unit.assert_eq16(16'h88C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #504 e68cabed-7080-4d73-aebf-c589029e9961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 d71ff9f7-ae04-4330-87ad-0c239e2c8867)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 6f17d822-aae7-4789-bad6-874a464cfb63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 5e4b6cc2-f39d-4796-8f92-c8d1782a7d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 b38697f3-636b-4ca6-8446-3e54ea862155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 56f19e77-1bcb-4dc6-9d2f-552823a807ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 d47d77dd-9733-45cf-806c-6c58f8d0e6d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1CAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h2BC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #505 4f0ed357-eb06-43a1-b33f-f8be0191d8fc)");
unit.assert_eq16(16'h1CAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #505 79c56efd-3b15-47b0-9189-2b63c99f81a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 053c5b23-397e-46d7-bbe8-8bcc6ac32e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 bd5f2ef2-fa63-4dc6-acfb-1b6a13dd47a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 802ad822-bbc5-4373-b05c-951c350a1226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 5dfc56bb-aac9-4fbc-ac4a-3900a72422e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 1bb95154-c462-497e-9cc3-dc87ba7fc31d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 8b8fd40c-6d11-4961-ae0c-d28406e046fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'h80E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #506 1e9bb426-e959-431c-9320-a18587704b9e)");
unit.assert_eq16(16'hEF49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #506 d0a63382-2444-4f9d-9ad9-3b516c93fb4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 27721fc3-ffa0-4fe0-a3e2-33edad7a1a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 723748c4-7c26-46a6-86c5-d6fb96fbdfe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 76210c43-e209-4917-a1e9-bcf8dbdd7637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 cf790c64-881f-4383-8747-b8f629ffb620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 449a3289-2ca7-46e4-8491-4803a0794b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 e97c236e-3b5a-4069-96e0-bc3e9fa5f4e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9109;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h7C27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #507 b911e242-a9b7-41ae-90ec-a2fa8148e9dd)");
unit.assert_eq16(16'h9109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #507 b3e35150-0373-4243-8b3d-888978de403b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 2b8c0272-08cd-4292-86c2-acca548f282f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 91ad24cd-da06-41db-9041-e7c8f4f13780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 9ab7d270-54a0-4e8d-9a30-c7c6b5e269ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 dbbfa16d-a80c-4208-b79c-205217f4e706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 ced36716-8d18-4fb4-8783-2a556f682766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 af84ca41-5b0c-4f48-b39e-993b9ae2122b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h47A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9627;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h47A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #508 42211a7d-3489-4ea3-9407-c76889ecdbec)");
unit.assert_eq16(16'h9627, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #508 c3ce6688-a168-4377-bc10-be7ce557a66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 061a53c3-6203-48a0-abd0-ed3f333109be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 82e892a5-9e0e-4340-b197-079bcd2fa019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 a3df0074-6da3-4430-a223-b3fcbe09361d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 e840f8e9-5262-4207-99e4-a0ca0ba596f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 19010b13-7663-491d-967a-b27504c9b7aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 88fecb37-6a7d-4b23-a434-86a92fb6814e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA521;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'hA520, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #509 d5995e9d-41ed-448c-98e3-e33bdd40c2db)");
unit.assert_eq16(16'hFC86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #509 1f1e9fba-93b2-4bea-8395-8e77369e243e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 3ed48cf1-9912-4caa-b294-9d78c22e7d3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 967c2aad-3b03-4fdf-a752-0d06d3aa06ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 38608669-e817-4067-b7ab-7b4993fec567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 52df1646-c023-4d81-b1ed-1af3f2a85753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 480f50d7-970d-48ed-b2de-82db258c11e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 b77e3919-3cc7-49bb-9a82-78b78b7427a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0379;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h2EF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #510 798243bc-3f0f-4e52-8ede-1e5f46726e70)");
unit.assert_eq16(16'h0379, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #510 dcc973cf-9ee7-4f05-8230-7d01b9a13db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 106a6c96-c356-4c38-b4f5-665d91b6145d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 338d4195-0dab-4399-822f-f7c1ba708654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 b7713589-c5b0-4b49-ae2b-dea5f8a734af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 706a2756-f2d2-4b63-8616-0be19cfa5171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 92c353b4-fbf3-4159-ae44-356d17b0903a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 9094c704-b288-4a11-82ce-07f747694739)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE0EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h38DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #511 f48f7f27-8d59-43dc-8fa8-f5b174707444)");
unit.assert_eq16(16'hE0EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #511 2edf90b1-d208-4201-89d0-3cad80a5823c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 d71c6a99-cb67-4e74-83a0-270470e5d77d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 cc73b577-91af-4037-9474-31ba0a44289d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 bcde98a8-aa52-44ef-a6e6-a439d233cc12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 c4cf617f-c156-4a78-948b-9c4429257d55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 12c0e26f-3407-4065-907b-a8a4277c1815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 139966c1-6554-476a-a9d1-9b5729217548)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h31FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #512 abef64ba-86d0-4f95-b833-8f7bef956da9)");
unit.assert_eq16(16'h4EA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #512 4a0c78cd-2f2c-4e67-a473-1e4b7920c9a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 8500e3cc-2718-4807-9bf8-3f83e04cf653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 e5e22393-4281-4a8b-b200-dbb7f4293792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 1acbd9f9-8df8-42a6-afda-79419bd7d417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 a4a43ed4-aa0d-4aa7-b547-66b238110ec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 3dd1d58a-df8d-4760-a93e-36480a1192bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 2237fd80-92a8-451c-8ff1-1d47016a60e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9675;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h25AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #513 cee7ea89-1161-4ee6-ac7c-ffe5abe1502f)");
unit.assert_eq16(16'h9676, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #513 356231df-d3cf-47e2-94d0-a7dabc570659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 572f3f26-07cf-4a94-9cb3-583c674bfdf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 6e3ab407-5695-41e0-b820-9cb2e3594333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 9bfdc79d-92b2-491e-b03a-2e3b144d9c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 38f6e897-713a-4cb2-91a0-8d2e9dc6dd5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 e6a95c42-aa73-44ac-8bc8-f3ac7d3667de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 b054df7d-17b6-4f24-83ed-f1a095ec5889)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'hEF9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #514 43a0600f-6604-47af-acc2-a1c6d98e4150)");
unit.assert_eq16(16'h56CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #514 da88b08f-ba04-46b5-adce-91b947cc0fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 f6a6f298-37d7-4ef3-b018-5bc321db55ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 13dba0cc-1616-4047-826a-a7b58b385080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 6ffc8835-e4a4-4662-8f55-2a18f188372b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 4a57b5fb-0aa0-4162-9451-9fc20d215f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 45e27e07-0061-4fa0-8fa8-b7f60ef2def5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 e2dd1d4c-c2b8-4ea3-bbc0-f78811e34c6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h96DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h0FE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #515 112b4e16-f49d-4ec5-809e-48c1e5b70d4d)");
unit.assert_eq16(16'h96DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #515 f7b7f84b-805a-40c6-ba71-736eb7de828b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 fe99ceb2-b6f1-4f5b-b453-a1c59a939b2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 0adfeb4b-585d-4805-bf7d-53d1bca4a30c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 f9cc9ec1-c3f2-470e-9e85-9f836d2154d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 960a5db4-0033-4ad7-8c9a-f48558974262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 eb999608-2b10-41b9-aa20-95c3267f4e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 6da07a6a-6c43-4205-9e98-33616c253870)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC0CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'h6B43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #516 94cbac89-8220-4b4f-b2f5-45092e32381d)");
unit.assert_eq16(16'hC0CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #516 d6e61f91-de3b-49a2-b7c4-d7c52da03e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 44f4c57a-7e46-42a4-b904-75103a5854eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 35458716-63c2-4912-b91c-d3980d500687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 423f6c2a-e381-4e98-b384-056575faf7a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 a44c9d9b-fed6-4acb-bb0d-6dd889c91369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 aaed7604-197e-4e12-a0a1-7a34639db6bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 ba8a70d4-d174-415b-892f-9160937e8c73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'hDB18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #517 9d907f13-1918-40d6-9fe4-6a807450459c)");
unit.assert_eq16(16'h1D12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #517 4a99f6e1-8a00-4468-b9d4-9a5b361b0d74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 486c6377-f86f-4e60-9889-7bdc0978600b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 ffe0095d-77d5-4711-9702-a6c48fb3f17c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 859d510a-cf11-4ab5-9580-0057991dbe4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 95acb8ad-76a1-4c62-a87f-82506de5e9ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 e1ffc44b-00f4-4360-9219-2a9c20ea0eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 a02a3137-7197-4a56-8e9d-063f2534296e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5779;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'hF5B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #518 8a4aa410-ccc3-4d03-8a78-d58692fd2add)");
unit.assert_eq16(16'h577A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #518 f943b018-b591-4dd5-87ba-f9b3cf30a518)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 69b86c1d-91fb-4ecb-94d4-34f089843918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 f4060d94-33a6-4488-b3e1-da60b8cd15ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 fa109017-e53f-4c0f-8a0c-08482a130484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 ededf385-fc79-4cc0-a67b-1f4963890252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 b2ac690e-e401-4e3e-90cb-5ba6fd277768)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 c74fa4c0-badc-48d9-a593-ad464bbaa14e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6698;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'h12C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #519 e3800faa-b5ad-4220-8694-983715574db6)");
unit.assert_eq16(16'h6699, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #519 6faa0361-6d1d-4f1d-b80d-97b8979d88fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 e9a07fa6-42d8-4a2b-a391-9916ddd2b63f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 14ebb799-28b3-4fb9-8c92-5be4565e81ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 b0f54f48-d153-43d3-9a08-e76d57833a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 280f1681-90bc-452e-ba29-f254f852c96b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 6755fb7c-687a-4769-98ff-702b4bba4411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 46648c2b-c449-4bd7-81b9-5d6d950b05ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB592;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAD5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'hB592, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #520 15d05456-1ba8-4d75-99b6-98f93e2eb6fc)");
unit.assert_eq16(16'hAD60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #520 ec4c1356-5da7-4306-9de6-acc6dde39e36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 4a7488b3-6d60-4a4b-8e30-171975b3a5f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 cac5e031-766f-4d7f-a600-a8eabbcfc375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 0baae6a2-a21f-43e6-9e6d-57254d7dad05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 8e2a4726-31c2-434b-b280-ad32f198455e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 de3dc162-208e-429b-b6eb-2806a1249697)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 356040d1-e8f8-4017-9faf-b2dd62e2b74a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0542;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'hC6B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #521 dbe98e58-4930-46ff-b039-8dd22b2fc5a4)");
unit.assert_eq16(16'h0543, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #521 67724779-9e87-40c9-bb79-75152d7faa04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 24938a64-edd1-497e-aa29-4c8cefe5c33f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 78703d33-8257-44f8-9a43-6724178f8948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 8aac6ff8-9dc0-44f1-85b2-3a0e5d6f47c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 301059c7-7245-4c5c-a96c-8e1b5117c708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 10a5f232-415c-414b-a177-85337c822a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 bf436b2e-13f0-41a9-913a-1133a853c80b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0826;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA73B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h0826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #522 b799e90f-3507-4dfa-a17f-aca7260b8de9)");
unit.assert_eq16(16'hA73C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #522 a5a11e38-c59b-4dde-ad70-55ec7e57556e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 8c1778bf-6825-44cb-8277-e3ec59ace4e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 f9ab8d16-0a25-4e53-b197-3c2abf40261a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 b930383f-4614-481a-b631-c225e803dc10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 25e5dd8b-8337-42cd-abb2-be11b73dadc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 bd254166-3f90-46cc-94f7-cb37e04e3b6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 c965d1a0-5445-47c0-974c-e0268b504ed6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF0AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'hF0AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #523 c99b22fb-c353-4e1f-8036-324f2c8bc7d8)");
unit.assert_eq16(16'hD9A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #523 7f6f150a-6f24-4edc-b649-d7c8cb14c48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 bd675595-13ca-43fe-a913-8d071b47a6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 76adaa01-89b5-445a-85db-3a1f8f83196f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 df0943f3-6a5f-4756-a86f-f035789a2ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 e06e8966-356b-47b9-8ffa-277e79912405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 c76658c0-f1a9-4cb4-b98f-08782b8a54d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 6f5fb49a-f162-498d-b0b7-22266e3545e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8837;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h8837, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #524 05f2625a-0f43-40ee-8b91-ad9aa56302d0)");
unit.assert_eq16(16'hCE53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #524 c1d858b5-6716-48eb-b0f5-155909071de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 90cb2e7d-6b2c-431a-b19c-ae3d68f4239f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 67a2a105-f3e6-4bdd-95cc-21dcfdcd87fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 4a476139-de20-4aa3-b64b-973a681d9abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 df1b6fb1-e4e1-4c58-a0e2-e5f233f21b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 8d2a48bb-981f-48df-8fae-eef7b988310d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 656e74ba-45d4-4477-a8f0-8d67ad9e2c4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE10C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'hE10C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #525 dc49b69d-babf-4f57-8061-b1bf7c285636)");
unit.assert_eq16(16'hB9C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #525 3bd9f86f-020b-452d-b5b3-d37e68c9d464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 f4f509f4-8912-4af7-9bce-2fdff948ac58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 b7f4f303-3f8a-4444-b087-dfd5a6f2b04a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 0f679dd4-7a08-4fb8-a71f-2c403a9ad834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 aff0a4f6-a49f-4519-9bc2-2c2812004e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 e31c95f2-f5be-4934-b427-256b0951c9bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 ec1f343f-f447-4874-9f67-6a9261c78f22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h93B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'h29E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #526 275e3e0c-6e23-436f-8c93-96507e864fd7)");
unit.assert_eq16(16'h93B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #526 0ae58f26-2e9c-43d1-bf84-2df4b2b14304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 e28fa457-12db-4512-9c03-ead436e5e5ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 77825070-1cc9-4e00-8e20-3a23a5ecbf86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 fdfbee34-3cc1-4a17-88f6-0610417e5e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 5fac740e-080c-48ee-bf2c-5541dd3bb43e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 79a23cc3-55d0-40c2-8432-06a515d2a9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 8d7cbb19-980b-4462-a9b4-7b7d4546aede)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB05E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'hD5D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #527 e8e8592d-de01-4b14-9bc4-587c02dbb383)");
unit.assert_eq16(16'hB05F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #527 8abb7bf0-53ce-426e-8c69-b2026e21cf1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 bfbf490e-0258-465a-8a2a-2ef22782e0ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 9aa87882-9cf7-4ff1-8518-0a90a737c7f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 c1fd640b-1dfc-4a88-ad58-5a69d556b076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 3a723560-71ca-470b-b645-768f77cb3419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 2951bbc1-41b0-4b2f-9694-1a54f83e628c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 87a1438f-77a0-4736-917c-6f5a0507fbdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB31B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'hB31B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #528 96fe6155-f5c5-443c-8c71-342c7060ec95)");
unit.assert_eq16(16'h51C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #528 91b78fd5-0d7d-4292-bf11-b238da789e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 b259fc37-0ca4-420a-96fb-7de816cfbb64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 565e0144-e5f0-48c6-b812-a7479eec64e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 7b1b08f4-eb42-4c75-a816-33e66bb74780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 60354fbb-bc65-4964-a31e-bec4b4ab3a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 9068f587-6ba5-41a1-9b4c-a92f605e44c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 7cb6855e-8718-45d4-b1be-a9a4651118fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h031C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h4F76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #529 b166b3dd-e789-480d-ac0d-055b2b123cd8)");
unit.assert_eq16(16'h031D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #529 7e0b4ad8-1449-4858-884c-859188481309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 1322ad47-3b9d-4b0e-9ae6-08564b2c0e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 b9e860f6-2246-4c14-8a80-b4af0572104a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 0092f985-2b98-4f7e-8bd1-1a7a8a6862ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 69d5f0b9-8c82-413a-8811-cf1150c5a45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 f8aedefe-dde7-42c2-9315-c2c663f215e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 4fd5ef0d-9c27-4c50-8a56-ee7dbd38e0e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA6A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'hA6A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #530 628979b3-eae6-404d-9a0e-133f107a32d0)");
unit.assert_eq16(16'hB3DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #530 649cd587-62e5-4a4e-ad43-e70ea5e88c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 f41adeb3-1877-4669-b323-3c3f0f93ab9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 63e54980-c6e3-4cec-bfac-bff764e8789d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 9767e3af-29f8-4f1b-8642-e93893f2b3f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 8558ddf7-d7e3-4da6-a08b-147997425441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 1034beae-5f61-4573-a756-123d9a788646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 8c08c669-2409-4a37-9682-1cd166e0f969)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6775;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h6775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #531 2c123bde-a7a1-4964-9d07-53c75687d5bb)");
unit.assert_eq16(16'hBFD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #531 02007014-619c-45af-b7b1-00f4cba669a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 b665cf99-cdb9-45f6-a930-5a35105c754a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 eaebcbba-defa-4667-ae1b-d32429805186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 f493691e-0780-4f8c-bf78-053ac19d8fe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 28065219-4719-4384-88bf-8597ec2b7431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 6a0d9646-5ea2-4b5e-8124-4420159a4021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 3ee10efe-2ca8-49f2-bb47-adaf5220b8e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'hA0C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #532 776f14f2-f932-4af7-84f9-39140dca4348)");
unit.assert_eq16(16'hFE5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #532 979a9566-df8a-407a-afed-b0c34d1363ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 bf335972-3404-4a45-a0f8-af3fe32dfff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 006d30f6-700e-4130-880a-26e0dfd9978e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 d75e64f2-93e2-4bc7-8fbc-33dcc4b5afdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 e1fcc023-e766-43e4-a307-4e161ce08b1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 54614efd-79df-4422-849a-a225cc4d1518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 13485452-d608-483c-8f6a-30b6fc7cf981)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD02F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'hD02F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #533 5af85967-a581-408c-9442-3587b6c0565d)");
unit.assert_eq16(16'h1700, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #533 1ae3b644-9ac7-47c2-803d-d5d7946ea2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 dea95c76-5c8b-4d34-b4e6-768cb3d30ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 a8fad6af-f97f-428b-93e8-fa9f196ab916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 8e545749-4306-4b34-9a01-97795577056b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 4703e48e-b39e-4cc2-a879-2eba23f69932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 e6441a6d-76ff-4b53-9844-98465b5c70da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 6789ea72-ac76-4eed-8e75-6b99628c3774)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD331;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'hA0AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #534 88d0c96c-ff17-4a18-b349-5d336650e8c0)");
unit.assert_eq16(16'hD332, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #534 e1a553f0-395a-4a2f-91af-c70756996a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 5ef1a745-62ba-4b47-b949-c9165d0c96fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 7f4478b4-5a3c-47f8-9130-14eb9ced294c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 85777813-d33c-43d7-a8cb-a9f527ca8d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 e584b19d-ab64-42e6-920e-c99df7f10825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 8a5346b3-9642-4416-9fa4-a4786ab431c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 3e092c73-f554-457a-8228-06283c8de32e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE32B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'hE32B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #535 cd151bf4-5acf-4236-8f0f-436a8f291bf4)");
unit.assert_eq16(16'hD0C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #535 78f2298c-a30b-40aa-9ebc-9b5da5d45fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 e6e5f4bc-0463-43bf-9661-2240770fd241)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 4b98b216-2592-48b4-aa2b-02c0871fa6cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 09893e42-97fe-4d9c-946f-18d5426d3502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 f9a69e03-a416-4719-ad61-30b18755bbc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 894acc95-6f46-45d2-b313-18efc56797c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 0cecd828-3343-40d0-a39d-b792582c1ceb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'hEDCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #536 2585f667-f845-46a9-a028-6acda3280baa)");
unit.assert_eq16(16'h57BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #536 7d480776-cc18-4bd5-b8f4-9209bedbe66b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 d90e82d6-cc3c-41cb-80cb-2d4ed14a7465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 ae485857-81bf-4100-a71b-c1af3a38de3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 c1a13d58-5544-4786-9faa-216d845c0f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 245f0a3c-c101-422b-944f-020b71715743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 ddbb2c78-5d1c-4a7c-9246-eafc0c797d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 b83ebbac-276d-412f-b0dc-a6bccd879056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8720;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD88A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h8720, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #537 11fdef92-dff9-4477-91e1-2f021747c4ce)");
unit.assert_eq16(16'hD88B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #537 6b2678f6-2a40-4677-8bbd-23372476b1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 4363b487-865a-41ed-9ae6-6efc6311530c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 5d3f46a2-a4c4-4f07-a32d-122df3ca735e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 92a0f2de-a8a8-4a11-9b9f-a60a9f99a2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 c3e0314d-1bc3-47fb-af81-9e43f1f46143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 a2f61091-df6f-4772-b4b7-b375e0c6e73f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 54a9b4e5-e17c-4f2c-8761-e3f630c910e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h164E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3A5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h164E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #538 636d74da-d576-4e46-bf54-1b551327a35b)");
unit.assert_eq16(16'h3A5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #538 a226afa6-f182-43f2-b8c2-2d0600bb49f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 c6ba467a-0c62-4f7c-8339-6e21d300e1b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 3c7a6bab-757e-4620-9fa0-67b66ccb927a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 c6a38eed-1deb-4207-98ad-80aac0f24d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 f6a585e1-b4ea-44cb-a74d-e9f4e9ea6858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 012e9ab2-ba97-4622-a3d6-ea863dc0cf51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 c5acd1c1-526f-421a-9395-a67744d1f11f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA20A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'hA20A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #539 0b1b45f2-0588-491c-9ca9-d3ef6d4a8eb3)");
unit.assert_eq16(16'hFF0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #539 942f7676-0a9c-4e89-8cc0-456c502ce0e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 b6a87759-9f6d-443c-9b1f-52e467749314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 8ce336c3-6aa8-45f8-91b8-2a4b250e6453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 2c7405e5-90d8-4b92-8163-c75ed1a9c9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 1d45bbc4-dd37-4051-8233-103178cae746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 3d974881-3de2-4916-92cf-902fd42ec52b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 e401ae40-066e-4e95-86eb-0b331137a6e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9403;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h96B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h9403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #540 c5901b34-2bd1-4e71-bc94-bbe2a015c968)");
unit.assert_eq16(16'h96BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #540 98f2b421-d123-44e9-8e35-d285c4065fc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 c943e936-b546-4b56-81e0-bc7191f080b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 ea38c3cd-dcbe-4539-979b-65fb871bda24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 bfcafaca-7e24-4097-91ab-1c3b995e408f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 956293e6-b282-4ed3-90eb-15b4f46b0262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 4830012a-63e5-461b-b121-ea7c4ccf5e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 4428a052-068f-455d-b577-19a5395e83dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h3BD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #541 03dfb016-dbb4-4309-8f2e-36cec88ddeba)");
unit.assert_eq16(16'h2144, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #541 30e5ccee-3cb2-4b52-8fa4-4c34a2a009f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 47fc2564-0bca-4f39-bdb1-e189c0a1cdb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 e061a548-bcfe-4623-b86a-bc0ff0dc4de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 2fa1cc55-792e-4f8a-8ba7-ebbf5f19545d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 65e2e24d-b9b6-40d2-a56f-6d583098af30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 fbcace31-3333-4e81-af9e-93fdef626ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 c59854c1-9ea9-4ae0-9e8e-ef71e04d4cfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'hE695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #542 bb66e5a9-dafe-4bf0-95e1-97d1ea9eb985)");
unit.assert_eq16(16'hEF3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #542 f4de45a3-c240-4db0-95ec-e25709d1cec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 15823f53-e768-4453-bbd1-cfb531cbb6d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 efec7162-2f0a-4d17-b3e5-07c96763d359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 8a21ec8c-bc98-4ef2-876f-a4c95cab78b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 4d240c6d-ac46-4307-aa73-05917ef468f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 3f824c56-c6b3-4640-a7ce-f5572bcdb884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 3d443662-73a0-4c3d-9403-2ef2a3344d49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8140;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0411;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h8140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #543 eb317908-cc8d-4660-98b8-8584192be0b8)");
unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #543 2b5139e3-a80d-4fbd-837f-d86296dcde44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 5a3381c1-ebe6-4fd1-b58e-9acd242ff10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 b3c079cd-ee5e-41f8-8c5a-26a46d20660b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 2728855e-6435-4407-87b6-de9d2313d4aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 7c849bc5-0133-4dcd-975c-0a06dbf27233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 7b2578a1-7129-442f-b045-6e966b6d2145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 ba427af5-4629-4e6f-b4f0-f0cc8ac59814)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD742;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0114;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'hD742, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #544 d0576e34-6e13-402f-a620-805d5b98d383)");
unit.assert_eq16(16'h0115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #544 0574806c-f7bd-4a42-95f8-5484ea3e43e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 a19f8653-002a-472b-b7a0-377922836c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 cb047f9f-9664-4154-9fe9-c21696d70e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 e2277958-76c4-4d45-b841-8387da63b5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 388d77b7-cd1d-42be-956c-2cee5d4d3606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 0da0475d-cd75-4993-bdb5-03e7187c5fae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 1c0dabd2-3ce1-4374-81c3-9f44dfcae32b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3408;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h691B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h3408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #545 19dfc842-00ef-4e49-abd1-01a15d13872c)");
unit.assert_eq16(16'h691C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #545 c4ebf4e4-12bc-4825-bf8f-f07277818dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 0fbbdf57-03d0-4a3e-93a8-df30d5e50d00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 f8c385f3-5e08-46d5-994e-ce18538321bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 d950ac23-34c3-48a0-8ad2-5c160cb6a08d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 b8ffe404-765f-4d78-9b27-e2178e4607dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 aa12ad22-9bc4-4616-bfb1-b89c99a0feb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 a0a3499b-dd2e-43ca-99a6-226c51a73fce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC334;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'hC334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #546 9a57b62e-8121-450a-a2d7-e41e1073af22)");
unit.assert_eq16(16'h36DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #546 d03bfbdc-e61d-4cb7-a66d-9a97d420b5a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 45d2e24b-5414-4277-b11c-28284b61cace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 ae9d0c31-9ddc-4255-aa4e-ec832f2eb682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 17d28032-cad4-430e-bcda-67032c905f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 c9d4e0ba-3278-41cf-b8aa-67808d9e71a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 834f04d8-039b-4483-b975-8188e1efb1ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 4787b749-ab5b-44a8-9fdf-775afde0a07a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD43C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0076;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'hD43C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #547 21564e77-6aa6-46a5-ab54-4aa81c64d1e0)");
unit.assert_eq16(16'h0077, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #547 ece29f3a-915f-452f-8f3e-36e5bd745d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 1c02f172-052d-453c-82d0-eef7d86655e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 b7efca63-2f48-4232-af93-c21d465c6232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 df165963-c594-46e4-bc64-96909c81a86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 fb1c0d8d-d3b5-42c8-b1a5-805747e6930d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 7ae7e68c-801c-47f8-adf8-bd7e2406996b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 25fa231e-1a5e-4066-bb62-05bfd01b3270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h160A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h160A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #548 5e5459be-1a24-40a7-895c-274bcd18bad2)");
unit.assert_eq16(16'h78C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #548 9232affd-6761-422b-9fe7-98df846655e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 055b3b8d-917c-4bc1-8202-7809d29db159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 824517b7-4a0d-411b-aa5b-f0cb5a90df97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 e322d8b2-600a-45c5-94bd-c71bae9829f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 208b2d4a-9f3b-4c02-aff1-7af529085efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 b7a34e6e-e3ae-422b-9835-27538f5aad81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 d087b635-1879-4389-821b-5a895ca2e463)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'hCF69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #549 102538b9-34fb-40f9-8ae6-8e560245ab80)");
unit.assert_eq16(16'h26AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #549 721adc12-1c0d-4cb8-bc1f-74719dda80b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 595cdf4b-67e3-474d-bf3f-902b9bdb2793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 94ff12c0-e85d-48c0-a0b2-cc1716961023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 c0c8abcc-ef1b-4469-a204-8743e8a084f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 a0478bc4-3e46-44bd-9853-8f2a6dafca24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 41ef685f-5783-400e-a116-4c2018fe4344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 303321bb-8f80-4c3f-96f2-5edabaf9aa89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC73A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE4C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'hC73A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #550 bc5a84c8-b47b-4379-ab93-2db42e8c652a)");
unit.assert_eq16(16'hE4C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #550 b9add432-17ba-42fb-855e-81cc286d54cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 5e3f428f-24d3-4818-9fe3-7f818f575ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 be237dab-6d4d-4b9c-9ea5-d6e85d4a6e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 bf9bde34-10f3-456c-be71-cabe5f003306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 4d53a8f5-48dd-4e23-8dfc-aaea26e30dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 35b065ec-d3b2-4079-b39a-ee859a00c14a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 61a7a02c-8f14-44c2-bd83-8af4bf740c7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h713D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE211;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h713D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #551 a269a137-064b-4bf4-a537-7f8db3601b4b)");
unit.assert_eq16(16'hE212, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #551 582cb232-5757-4252-8c23-959fc39f77a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 ca8f5e7b-5f4c-4503-b156-02353257bb06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 76f7862c-ecd3-4b70-bf5d-4ecb4379d45d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 dd57919e-b25b-4c67-b495-2a6995febb31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 23ee4221-1b25-4185-8b4d-2a058e63b2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 23f4c2ed-eb42-4ea9-ad87-618f110f3f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 4e814f98-9b22-4ce5-9082-9e8474dd13a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3347;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'hCF82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #552 2f6818e0-9a12-4cec-818b-a684ae3fad4b)");
unit.assert_eq16(16'h3348, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #552 fe21582d-8e77-4430-91e9-6d16763c9627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 18a90d01-c20f-4748-b4f3-4866f5249bfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 68ab84ee-7cc3-4ae3-9f5a-e9fe5a6bf5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 aa77124e-6892-4bf6-8041-a9a5d60eed65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 b097e269-8618-4c52-bb8d-0f8b6a97af87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 e0e0c04e-ea43-420f-9ad8-fc2272fd820d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 9772bbef-da21-4298-869d-6797d9cfcb24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF9D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'hF9D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #553 9f2f2f32-04b2-4f6c-bc20-d6e92ac3c353)");
unit.assert_eq16(16'hBF3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #553 c1c6d787-cdbd-4ed6-9302-25e129291ad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 ad5084bc-afad-4f80-976f-f97414000383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 f28877ce-abba-4d71-a71c-9240a72cd318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 096ab08f-8d61-474e-bdfa-2bdcbae3cdac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 b03efb04-6153-40cc-8706-72444de04f04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 5d5c3977-154e-401f-9995-76f60e9f1a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 882c1c25-cb45-4fbd-a12f-9403253fce49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE103;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'hE103, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #554 a8f9eb79-0446-4619-9df0-e32b3c13ed84)");
unit.assert_eq16(16'h3D17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #554 5fc95800-5932-432e-a453-86774a4651d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 d1a73c86-a4ad-495e-b05c-17fe41208b68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 6967d56d-f758-40f4-9a8d-08b14fdb3950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 74813ecb-eebf-4aba-a4da-1375c733f7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 1ecbd5f8-3382-4eef-aa32-2ea37a5179c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 1cffb560-6099-4346-acef-b44924588882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 45ad49a3-f722-434e-8410-542a912d1148)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE5B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h27D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'hE5B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #555 e3251941-0967-4b97-bf2a-68a83030e109)");
unit.assert_eq16(16'h27D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #555 28e22856-0d0e-48af-b005-bebf54ff0d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 e719ddab-0423-4011-9803-dc25e4d08042)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 47ed872f-b61b-47ad-b391-ac38f4321088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 2990f588-71a7-4615-8e79-9347918f01a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 188592f4-b767-471e-aa04-328cee1fc80d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 52bf523a-1af9-41b9-b350-52e5ab581853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 63c3cc29-183c-4e31-895a-b303d6178e62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB841;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'hB841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #556 eb321743-50b3-495c-9269-745a670c3be7)");
unit.assert_eq16(16'h4C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #556 cbcfb20a-4c69-4de9-8f8b-1ccfd18fe985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 e36b978e-ce99-4ffa-b4f0-68d9a2252908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 7a8ab816-ca44-4b23-8e29-0490ca8159c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 9195fd94-ce5a-4182-a5a0-55c38f104494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 ad51ad9d-7f8c-4f88-87b5-68fc9724a6ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 7dfc909f-bafe-41f9-9583-f313d10d3919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 16b5245d-436f-4674-a4ff-1718225c3f96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h822D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3405;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'h822D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #557 b47d13a7-93ee-441a-a8b3-87fed38fe605)");
unit.assert_eq16(16'h3406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #557 ef0d4c50-ddf3-46ae-9d45-a755894b33fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 df96b5e2-430a-409c-8aff-58b12fc9f0b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 05693806-463e-45bc-80e3-46aeb65589d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 7c494f20-86a2-4be9-ac90-d765fa54b4bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 4617edc9-86ac-4670-97ee-9b92b6fd2b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 f24f424d-d343-4a39-badf-de99614d15d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 57eb9aae-c361-4646-a086-27c36ab5ab81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'hDC70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #558 21270e59-ce76-46af-b8fe-930027995483)");
unit.assert_eq16(16'h0CF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #558 05dbda6e-7395-4c1b-b9e8-aeef23d2d6a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 c9854861-5718-41af-ad4d-2784adacc577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 b95fcb2b-50f4-47b9-b113-af3f2e56a90e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 76b1b7b3-25ec-483c-a98d-28ce986075cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 52be3dc0-6d4a-4add-a3fe-2d0e84b6f8f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 9386ed30-dad3-400b-aa6b-d4def464c62d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 5733c6c7-5031-4d13-9d71-9ac415b97a94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h67C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h67C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #559 7660ab4c-3723-4ead-9907-6d2c63dd3618)");
unit.assert_eq16(16'hCF9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #559 6d2af550-b793-4bca-95a1-f5bc4dba39e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 0683ce35-33a0-479b-8426-c9c41d234d97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 8d40b9f1-65dd-403c-8968-bd103f4bd916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 7afd4f20-3d67-4c71-9aa9-f5b1d53e9a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 3040974a-b29c-4109-aeaf-d75049c1284e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 bd741d85-e84f-4f26-8dd6-ace78ecdff8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 7dd9892f-ab09-4201-ad1d-5811acc80d08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC781;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'hC781, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #560 302f5f3e-f5f8-408c-b821-ad6277e3e718)");
unit.assert_eq16(16'hFBD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #560 d06638da-010b-47bf-832c-4e911ebc8cdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 12729e07-1f42-4057-8fc5-22889ed73a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 940001f7-3dd4-47ac-b1fe-dd96dcfea2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 8d07e41c-0c81-4339-b0ba-8cbc2625e05d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 21a14f16-5ece-4a24-be49-94d661decab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 73611dac-f675-4ffb-9fcd-2dec04ec72e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 b2c01663-c4e1-407d-8627-8e67a5c344dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3513;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h3513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #561 cd0ad9d4-17e3-42b5-a726-19ac6c0d8a9d)");
unit.assert_eq16(16'h9F7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #561 6e613b8b-2e92-40f7-9459-83124ed48722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 3bafc609-0345-450a-8e8a-88e6936d54c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 4338c13e-1bb4-4d1f-be50-a2e74063f50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 9583bd22-c31d-4929-87de-433d4b8e5804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 c045fbd4-2614-45c7-9ace-5cf1e5532c8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 f17c04d8-1c5c-44f9-960d-6605549838e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 d4730157-901b-4e64-9ebd-eb632886b31a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h11F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #562 6f80b74a-978a-4f48-9aed-700259e83383)");
unit.assert_eq16(16'hC5A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #562 6a2cf75c-d244-4b81-b6ab-9136a39e7563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 cdcb2e6b-1c64-4b0a-83dd-d48cf74fcd40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 a261aa15-4a1a-4b75-8faf-4d0abcd91c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 7c64bdf2-160d-4768-903c-6e6c19f0b5fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 5238df23-a96a-45bb-952f-917dcdb45ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 a2f40b7b-7b91-4791-b31c-07513ffd2aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 9e93eb6c-a8d9-480f-86cd-e77007ae385d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEBF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'hEBF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #563 44b2a0ce-ffa1-4cf2-a22d-e88e1ee9adae)");
unit.assert_eq16(16'hECA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #563 ba0e67d8-252e-4690-b1f4-c187d2ed9610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 96976469-615f-4af5-aba9-82576543cbde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 e5ea530c-95eb-4534-a435-b47091839c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 00bf32ea-39ce-43b2-bd7f-944063d9dbe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 d2c4ad4b-0e57-4aeb-afc7-f5fc40aed17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 8162fa36-b77d-4b04-b9a6-de7734cd6f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 4e184580-bbd2-49a2-b20d-7f5995e3117a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB784;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'hAC0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #564 d5c49fea-3b19-4dc2-a620-03c197acaa71)");
unit.assert_eq16(16'hB785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #564 d4883cdc-4fcf-4643-88a5-9667a432bd16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 ceec0e80-2b1a-4c46-9a54-d99468c2a98d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 035948a4-bea0-4b91-86d8-00d04c6dad38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 976bdd45-c3a6-43d2-8423-91591028a8b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 defedc1f-8811-4b52-9446-30d703092c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 46992248-8aa4-4371-b352-e091ecf71f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 51f33109-50f6-4e1f-80e7-228528ce8687)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h0E04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #565 181c2f76-54a0-4a54-bf71-791c0fbec438)");
unit.assert_eq16(16'hBB9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #565 ea966ea2-6f5e-4f08-8aa4-904bbd698792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 d52d8514-2342-4dad-8279-ac8a85c3f72f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 5f62911b-b02e-4bbd-a52c-a7d9d581076e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 51485003-6575-4f61-b39e-347abca1090e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 5fee3247-a722-4f9c-bb7b-a40cce6cd0b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 b274ea8f-9345-4a51-a096-f4f8434a1e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 a4e67aa6-1d09-4ef9-8b5f-2b2b14f47d87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h322D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h322D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #566 0ec7a443-fb8f-4f46-8969-b635b6948a25)");
unit.assert_eq16(16'h68BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #566 9a932640-b8d1-46b1-8b23-4d585c3b84c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 e414c102-893a-44f6-9f02-c69a45866d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 dcabbfd3-aa9b-4f38-bc43-56f217bcf2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 fb4f7bbc-14b5-4c92-bbdd-f5290ce1516b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 5ccec501-a22e-4cef-8a58-dfcf13b9010a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 71d05cdd-ee6b-42fd-af93-ae90855a5965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 550ce9c4-cfc8-4788-afc3-3804712c7ecf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3411;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h416E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h3411, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #567 d0a0c058-1040-45d6-bc6e-b3079211577e)");
unit.assert_eq16(16'h416F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #567 58e67139-1669-49bd-a266-9320c2fd10d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 f70d9831-e37a-4b57-b11a-3aa452e993e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 45ef9c37-cb92-40c8-a737-7b343216bc72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 632eeab6-bc67-46f9-889d-5c732c8f5b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 080ed526-0de9-4435-a98c-2d0dc75f22e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 9e209399-7c6d-41df-86ce-9f8be6667737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 a922ca0b-1170-4313-a19c-9c855dc4a5a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF619;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6667;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'hF619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #568 3ef25cbe-284b-48a9-b272-0f431704ed62)");
unit.assert_eq16(16'h6668, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #568 828f2d51-60c5-42c3-ba98-0c526ae1a2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 162aedf5-9aa1-40f8-a390-c0e17312293d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 8018dbd7-ece0-4b71-8ac2-ad9884759ca2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 234ba146-6efc-450e-a86c-79aac1799203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 d0f979a7-090e-45cd-9573-3af98f9acb5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 5019b5ea-a25b-4d82-81ad-b0c6d42ec714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 f53057ae-8f9c-4563-a268-102c438325df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'hDC7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #569 a57beb4f-e274-4578-a40b-101fabc5a3a4)");
unit.assert_eq16(16'h44A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #569 3bc75cd7-952c-4b21-ba85-7904f9e1ff83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 be993692-1591-4c9f-bced-7db461233424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 3f16380b-3b64-491d-ab01-eb3254070d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 649295b6-b994-4c1a-9d13-7546b3adf19d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 9ee809dc-76ab-4900-bed8-ace67927c444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 245d79ce-70d4-4c99-9f93-ba70f7402fc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 7e5c1729-94cd-48d1-abd6-d36a8a41e802)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF184;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h53A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #570 7a58f8ad-3899-444e-a07a-bc69fac4f1b7)");
unit.assert_eq16(16'hF185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #570 c86a19dc-9984-472c-b896-89a73e7e9a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 3ddd38c5-c213-4228-8ccc-54f47f0f0c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 87fdcce4-c276-4077-aa0a-87f6fd1d911f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 75a75c15-466e-4762-ae02-4932deb574c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 e00b980e-2eef-4e9d-ac43-c4e471e7d332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 d74a6076-3429-4f87-9935-8b9b3b0aba94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 e8dd76b8-78b5-4f2e-a133-441af2f39281)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF8D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h761F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'hF8D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #571 40ed9fab-6876-44a2-ae4e-86464805d75a)");
unit.assert_eq16(16'h7620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #571 c168b76e-daa2-410d-b9bb-6b7708903a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 8e4d03ca-c65d-49e4-8435-381598e52a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 bae571bd-8fe9-4a1d-a02e-7601ab452927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 76cf5486-bb9d-422e-bb50-3525abd9b046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 9e2ba28a-e00e-4aef-b87d-0d167120131f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 43040be7-d14f-46b8-9e08-62fca0baf99c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 21ed1038-ae8e-4d38-bf33-b7bd3d73e96c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2082;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h12FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #572 83b633b2-0291-41eb-9148-fcbd99efb34e)");
unit.assert_eq16(16'h2083, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #572 7e42974a-2756-40f3-91ba-80431c721d34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 c2d8a802-588e-498a-aa2d-b0a46503297d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 c18ea1d1-f9b0-438f-9600-2e1a5c7bf3c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 11297fa2-7724-494e-bf2f-7316af7f3eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 2bd76ec9-1072-440b-86a4-843807fc1455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 4b083ddb-8d51-475b-b636-4957e86e5c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 9e6aac09-7900-412c-8ca2-854451e4980d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h275E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h275E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #573 535e381b-e3d4-4690-a016-f8a6d0d8b336)");
unit.assert_eq16(16'h5F6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #573 0c0ee1d6-c7d9-45b1-a740-11092bb50572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 95ca3f40-9054-47b6-b217-1d1ab316d10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 ef2b0aa4-2037-4794-941b-0ac723a0fb76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 ce33d226-3534-46ec-a78a-83603ab18dd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 7f26e45b-985b-4afc-995a-678fec35a650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 42b18ddc-12d1-4a51-becf-18f2b5157ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 98de4e16-3086-4b70-b439-254d50a12666)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB68E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'hB68E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #574 4624b950-37e0-4964-bf17-6d40fa03e47f)");
unit.assert_eq16(16'h45C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #574 1820dd5e-ce9e-4ac7-abc1-4b0ff96ee3d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 7363ccde-8fc0-44d2-ae0b-87787fcde4a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 4a0032f1-2ed3-4a08-89c7-224d86c86c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 8763fe93-2d5a-4fbd-a08b-be4905e0515e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 bf4ba7e4-fc47-4669-a58a-cf5d518f0183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 7e8d0d62-b22c-4383-aa43-ef59438700bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 d55f56e6-ce0d-4cff-8803-b85438c9908d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2569;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE3FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h2569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #575 0ab9bbc6-9f03-49b1-80fb-65e866681b9d)");
unit.assert_eq16(16'hE3FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #575 554d8f1f-3375-4fd4-92bc-5f1c5b6536e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 0deff916-f91d-43b1-a8c4-637aa0355c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 a17f7873-aa84-4a4a-b042-0d69d2f180d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 d94146e9-e8ca-4841-968a-fe174999a1a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 23d271ac-a60a-4a93-a63c-02bcd7ccd3c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 c261e5f5-4007-488e-a9fc-c0eecc39b406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 2acfd9fc-89a4-4c06-856d-944207f902fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2518;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h2518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #576 b6f03c1c-9afe-4576-a779-462131f55e81)");
unit.assert_eq16(16'hD1D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #576 c530a3c8-3914-4741-b6de-f5d571d1bd7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 7667b08a-1987-44e4-b4fb-d24d222e002a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 a3c79b96-faf4-4df6-9987-e2b871e6230e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 2dc0e0e0-f331-4e29-a615-8cc85c7451a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 f0dcab10-f4c0-4ce9-a1a8-b0e6a5068039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 7401ea95-162b-4d83-93ce-996b2d171e12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 6df8a7fd-844d-4fa2-8239-f4de7b88a9ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2863;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'hAFDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #577 8426ac50-6add-4bbe-a8a7-6b6685d3566e)");
unit.assert_eq16(16'h2864, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #577 3aa1e442-8403-4b19-9a78-91ae1bb6f250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 851fa593-788a-4d47-9b99-c52d34726074)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 53a2812a-8fa8-443c-89bd-30b14b9c0248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 50bfdbe9-d8ce-42ce-9b6f-125ebc90e431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 9569438d-bb6e-4517-92df-2dc73915f92c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 437dcc4d-b59a-4f46-9141-1b9384a91a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 d4ce3237-b189-4006-a027-49aaf6764bd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC82A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'hC82A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #578 0da65090-a9bb-476a-9b23-b38d52e1a464)");
unit.assert_eq16(16'h4EA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #578 b49e5335-8106-4add-b908-2ebdc70ba1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 14d79eca-abdf-4dbb-83a1-0385fc77c736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 f501deca-7395-4826-a867-eea6979e5298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 a531be04-9304-440d-89aa-df40198fdb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 1a83880c-9e75-47ab-81b5-dadd14bfadd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 b48a4f14-7f88-4669-89fe-f45c79112656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 3a8af3b6-be48-4fed-98c8-54d1b09241b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h86C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h86C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #579 9f751062-9a6a-49e7-babf-3b45194ac979)");
unit.assert_eq16(16'h87A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #579 c85583ad-5a8d-48e8-b2ec-663eb852bf7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 3dadb6c4-81a9-41b0-ac91-001192c10f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 f48b1f2c-9e2a-4f94-b6b4-4baba1274283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 e4fffd66-24de-4ca4-a77f-84ca60ca02dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 bad7152b-6dbd-4393-ab6a-f4c00f23fc91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 8cbf32d3-6bac-4e60-9be9-9a4d65664fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 dfb301e8-c189-4199-a8e0-24262c8977d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD509;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h4A5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #580 5d5c679d-e204-433b-813d-014f6df09753)");
unit.assert_eq16(16'hD50A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #580 3a06ad92-5dc8-4df2-aacf-e85e60d42220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 b4652df4-afd9-4351-99c3-449d85f915b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 318f677f-1037-414b-976d-ff8eff89a1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 e37c0033-6a55-4788-8b8f-5089cb264a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 08656302-a600-4f96-aaa3-ab779d491edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 7b38e409-2458-489f-b1c5-b315f6305377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 dfd3f9d9-6923-4670-b9d5-07bfc1da2839)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h411C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h25D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h411C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #581 386ed93c-b051-484e-998b-6cf8c5da16ff)");
unit.assert_eq16(16'h25D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #581 197c3670-da1f-4223-96e6-503b02aa958a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 4d0ada45-ad19-41b3-a886-7cd8c68d5b97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 f7091995-b3d1-47da-a99e-64aafafaa70a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 2868ec81-a3e6-49fa-9410-a082a205b194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 07c23b4e-f555-4812-b37e-82c86940bdc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 23cf1005-d1d4-4006-af70-3d592519cb25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 49f78bd6-9532-45bb-8de8-11cb04a1117f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3DCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h59BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h3DCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #582 0564389e-836b-4240-b2e4-3758eeef0923)");
unit.assert_eq16(16'h59BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #582 8401dc96-6c29-454d-90c6-0cf6b2e413a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 38f9bc06-e528-44f5-934a-c80ca495e9e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 3ad765db-1e00-419d-8933-adc3be145b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 162b6518-0416-494c-986f-5a3f548f20f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 a8278b61-0a2d-4d46-a1ef-70c9cde3c70c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 bf626b96-9b99-4f6a-94ec-dab146469961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 786cc289-ce96-49df-a1c0-55341893b381)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h014C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA50F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h014C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #583 9e09a5da-7ddf-4360-8606-ad5291232077)");
unit.assert_eq16(16'hA510, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #583 24c8d768-6a45-4e00-877e-5eb2257092a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 ddcebfd0-edc2-4719-acb9-2bfbf5e536af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 5baebec5-195b-4777-bba1-a2747329791b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 8979baa2-44c6-4dd1-ac00-e0c170b09fc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 3fdef438-1669-429a-aa9c-91491ee8ae85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 afcaeb73-5df8-41a2-9556-12c8318628ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 cb7eb552-3e14-4322-9334-8a6be7fbdd3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'hAC13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #584 00f736e5-71d4-4c50-8dd6-2fc401076aab)");
unit.assert_eq16(16'h0D42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #584 4dd7b1dc-f14f-4ecc-a389-99e9262bfa6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 7bc3dba0-4782-4043-89e7-6d5aa69fb0e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 37cbf6d3-0d6b-4d8e-9d9b-7e6ef786f0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 fb5872ec-f267-4a12-bd75-38972df53cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 b972d4bd-ec02-42c8-ade7-c03266dbe154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 fc71b95a-bb1b-48b8-9e90-bfaa05f45b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 4a345516-be9c-44c6-b052-7006d053f3fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8CF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'h9A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #585 3646f69f-7c3d-4f03-a34c-c576d9bcc549)");
unit.assert_eq16(16'h8CF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #585 3a34f568-e568-4e62-ae17-aee75d5e2e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 ba1cddbf-c905-4a84-9386-79e79cf7b832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 65e940f3-84af-499a-99aa-fa134a8b27db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 070c1923-7f70-4fd6-a951-d5bba54fa6aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 6640edef-52c7-4e19-955c-a04dc0597f24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 566d02b0-6458-4e21-ae32-58681a92745b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 907214b3-376c-4fef-bf02-53c44cd683f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB098;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'hB098, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #586 e6084549-8232-431e-a5b1-90b45b8f50f9)");
unit.assert_eq16(16'hA3DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #586 e1c9c1cb-ab86-475c-9aa6-690f3fa0e800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 742fbe58-4d68-4df7-934b-138771a2992a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 751b15f5-3116-4074-a225-9c38ccd00d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 ac032efc-0da1-43b9-ada4-9c205e5158ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 e1b471c8-1986-497f-aca7-4d90c25f6449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 235de35d-0f3c-4fe6-a9ae-6a6f405bc9b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 0ad9058a-16cd-4ed9-80e8-ff4521b2f89b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h939C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h939C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #587 fc49e554-9701-4af2-93d6-1542517f00e6)");
unit.assert_eq16(16'hBD78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #587 cb2056e2-0175-4c2c-a36b-f7bafc34a285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 0a481906-c339-45bf-92cd-75828884573b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 758f3737-6756-4881-9e06-1725aa61f679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 5ddaf4af-5962-41bc-8d19-6da5fcc48c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 438a18f1-5487-4279-91d4-830c540d4963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 63160966-011d-4a38-902d-561c95c6db71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 c55fa141-717c-4cae-bb84-88ac18b9831b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7524;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA34E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h7524, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #588 e066074c-2deb-4f7e-9134-631b899cfc31)");
unit.assert_eq16(16'hA34F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #588 ed569b90-7b26-4911-be4e-22379edb36ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 d3943288-eecb-444b-9168-484b5500c960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 ea6a5c34-feaa-45de-8491-e2e9fceda36a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 182afde7-c77a-461e-914d-cbd79e3c55e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 e2e8ca04-1913-44d4-a9c8-364cca68e315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 adf6ca76-3f0b-4aa2-9368-33a14203faaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 1aee1815-40c1-42a3-8e7a-9dca1ddaee39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9ED6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'hC0E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #589 b6c82103-e394-4df3-b491-d60551d707e7)");
unit.assert_eq16(16'h9ED7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #589 caf083dd-319b-4dba-beef-d905519665b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 69caf893-c006-424e-a73b-ddfa73d90527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 44f116d2-ea90-4378-bceb-28d6f2d827b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 e5a365a9-4349-4182-8f9a-5852f9c5a0b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 417173d1-d06e-4062-af51-f58e984a8136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 4acfcb60-1335-4939-bb52-e15b35868ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 4e4326ce-dacc-47e8-9c7c-a57a35b5542d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h496D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'hCDB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #590 a9fbe286-6a08-42fe-94fc-dda0cd4c964d)");
unit.assert_eq16(16'h496E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #590 740f25ab-7b30-47b3-8f85-9b5ae9b50f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 a47026f3-7651-427d-bd31-6ea932629c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 cb2eb918-fffb-4856-9ade-4f12d837fccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 3fdd3399-cff9-4766-be08-6c299c2d14a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 e9aca6d5-31ba-4fa6-bfde-2f8898e2d563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 43a7d422-2e27-4d0c-b20d-afa38708ab8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 e84b3547-653d-423e-b16a-05f3b9193268)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'hCA0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #591 7bca43b3-b78b-428e-88d1-9da9784a7d54)");
unit.assert_eq16(16'h0339, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #591 4a4a6cfb-6d46-40a2-a76b-4bd57b80022a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 4f533caa-1531-4f10-8327-2eda8ee7200c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 215f3d9f-ba0d-440b-8bd7-da0b413afcf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 2fcb6fa9-9d56-4d28-8cda-1cbae419c6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 32c60a55-8171-4292-b08f-3d015086d00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 e7a135f6-2561-43ea-b211-e8be50f9b630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 88355960-7fd2-451f-a392-07ba7329f052)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'h3B83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #592 ec59496d-be95-4014-8f5d-9abfa5fa47ae)");
unit.assert_eq16(16'h7F58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #592 f5907bae-d06f-4bac-bdeb-639d79da3dfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 960c5e31-1f99-40ed-b43e-b40e45a1b6a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 d8c75a1b-cb4b-4a57-b6ec-0e7446c6b667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 002cfa42-d9a3-4f5e-ab66-d153358f094a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 79a67a62-59c9-4da2-8f21-8e876fc31c0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 9b73d5ae-5a83-4a44-88a4-639b0f4768d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 4c6d2b2b-585f-4af7-9825-6f6af4a66bba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h1DF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #593 6f370a92-23a5-431d-8504-ba16c107cbd8)");
unit.assert_eq16(16'hC5D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #593 84939c5c-b120-458f-8a66-6d0b746d42f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 d075ef6a-7305-45dd-98d4-4a1897009fa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 6c40ae1d-6537-4e71-b81e-4593ed11ce48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 7b497350-32e8-4106-8f07-2f57e824dbac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 6237a47f-3008-41e6-b13f-e39f7cabcd19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 ea22a5c7-bdcd-4512-b335-c19727670499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 5780dd05-15b5-4dd7-9c2c-c90f5313a07b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB713;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF236;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'hB713, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #594 84e80d2b-9353-492a-a13f-52acde31192a)");
unit.assert_eq16(16'hF237, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #594 c820e9ef-02dc-43b9-975f-4bf6f6cc2551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 29d72155-cfd7-4578-9aa6-81033587e92d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 d93d9685-e286-4a31-8583-dc40583051fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 4f7c0643-dba5-40e4-9276-ce9f8f89677d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 06a6a220-cda1-45c7-bc33-e2bfb5a4c64f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 5588f6c5-6907-487e-a2ff-d454debaf3e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 d9773276-fb1a-4c1d-9539-0f8f0a752258)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF69A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'hF69A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #595 bcf2a576-4d45-4d39-99e7-e34578d07e06)");
unit.assert_eq16(16'h2D8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #595 fe32e9c4-05b6-4eb9-9e22-f5b8ce62c0ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 cc01b82b-466a-442d-b587-33b4ef74e134)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 b1a2fb57-b8f0-46c2-8919-0d693a3fc0f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 829f93a3-83f8-46bb-aaf1-23163336d148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 0addf36a-811f-4d06-9376-45ba4b0ff221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 51801c97-164b-4517-b806-3e75fc638eed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 a0db5bb5-4b62-498a-82c6-3d32e3aafb86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1775;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3FA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h1775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #596 322d193e-306a-4f1d-b7df-eb504344302f)");
unit.assert_eq16(16'h3FA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #596 37cc86e9-e3b9-4e67-b19a-0c7cdc07e9f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 a5d087c9-48c2-4893-9489-a1a4d2cfb000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 7c8bef89-d56d-46bb-8002-cea333b25368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 370268a7-6362-4966-86ac-e1df820a9815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 7d2aa302-050d-44ba-8baf-16ffdfbd1071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 a5a36153-64ae-4e74-9730-bedae0d13dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 4b61cf13-f6d9-4c13-b24f-d7a3f06b88c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'hB8FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #597 33f4f200-547a-436c-bcd8-d1ec87be9291)");
unit.assert_eq16(16'h6C2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #597 cca2961e-6c4f-40d4-acb6-b0d153492418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 020dfdb4-a528-4c06-99f4-9cc7a8417525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 904b5c1d-be10-4ffa-b43a-0eb778f64b60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 770fe07f-2230-4563-a288-9395139ee936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 af823486-80c8-436b-83e1-eff99f11198b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 fca0f2b2-dbd5-4a1c-a3bf-ab4072594933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 fae62f81-582f-4c48-9f40-c13638b8ea19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h30AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h30AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #598 283d4bce-ef8a-48f6-a75c-6760d067728f)");
unit.assert_eq16(16'hEA8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #598 afa38bf0-48f5-4b5a-bf3a-964f0dfcd436)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 0b8c7cda-3cb1-4cbd-b8c3-315f983fac70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 31167701-7756-4064-9ab7-c5bf0a08f9a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 0754ec38-5607-4d9b-9d47-13177b4ceb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 e34d325a-3723-4bbb-9392-831ee9ccd995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 c9108c5e-02cb-40b1-9cb4-ed5140739236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 e292c8aa-72ac-4b43-84ef-061428cf3fd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h186C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h186C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #599 36007ab5-6865-415e-a178-b608eb3288c1)");
unit.assert_eq16(16'h79AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #599 d3cc358a-0899-4090-8d31-6d1c77201b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 f45bd817-2846-4848-811b-f38dad781a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 b2588b0d-64ab-4139-adc4-cc349315b7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 c167c39c-c24f-4d42-a860-8d7fc673ab6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 958be33e-55ee-4cae-85eb-1859979ff1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 221d2cea-8fd5-41a9-93d9-0b080a84847d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 88faf503-0354-40db-ace6-deb241d08253)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE407;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h78A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #600 2256ad9e-a5db-46d9-8918-3b4abe43d510)");
unit.assert_eq16(16'hE408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #600 d464e2a0-1399-40ae-960d-7c7b43cde48f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 8ecdef9b-f2b7-4917-8f79-02e92cc54a99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 cc46d2d2-788e-46ab-a74a-424ec87deca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 99cf536e-dccd-45a0-8317-266760f149bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 2a9fbb6f-4803-470a-aa34-4babf2d61273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 e9f2b536-0ccd-447d-9a53-8750425e011a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 5d91ebd0-b697-4b38-9c5d-092ba1670b3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5AB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'hAC42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #601 bfd47715-6b0d-4a44-9c83-0d7f44b26390)");
unit.assert_eq16(16'h5AB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #601 2a2ddee6-90eb-495a-b28a-c5383e67a694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 24dedd97-ced0-479d-b1a0-b97a42b4d502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 de9b1ceb-e64e-43e8-81b9-a236259c444e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 d364d06e-319a-4b8d-803a-0322d155a2d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 bfb99b9c-e551-4bd5-8cd2-cc526748173d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 3aebabfd-7013-452d-b992-9f10132176d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 b6abd8b0-6f19-48b6-a956-ca0c8e67da88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE469;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h256E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'hE469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #602 68a16606-e71d-4972-ada1-3988f0e309d3)");
unit.assert_eq16(16'h256F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #602 309a742f-351e-4a9e-9a67-f41205050411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 e12d3651-5958-46af-92d1-79346827594f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 974904b2-238f-4130-9f91-898487c5554d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 d0fc06b0-d8ed-4a49-a8dd-e491af232b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 08a2eff1-7c0f-47f5-a2f9-4d03b4f25742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 2af76b64-53bb-41ad-b8cf-be2360818ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 acf8eb9f-3590-43dd-acd6-13878d41f94a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h202F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'hA0A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #603 3e14042b-4ae0-4be6-90fd-13e65917b2bd)");
unit.assert_eq16(16'h2030, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #603 83b4ae77-7f81-4fa1-9bb2-4086288965f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 8c04d737-df32-456b-8f99-44668915e068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 9a570114-e302-4eaa-a755-0b04a5952f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 c45abb99-b0d4-415a-bb23-0778f2e9bb89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 f27913ed-3433-444a-95a0-a53524bbbe5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 764e6b1a-8173-49b0-a40a-09439b3824dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 db318f00-16f0-4c20-910b-f65533f5f33a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB035;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'hBB8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #604 0a5858c1-9ec3-4ccf-a71c-e84a1aa50d15)");
unit.assert_eq16(16'hB036, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #604 abef668e-3bc9-4c0b-9c61-8fa56871837c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 d87efef9-d0d2-478b-9225-af40dae9c4f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 50d3b68d-d637-466b-822c-7a2219bb1e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 37c2b649-882c-4d03-9616-7af9d64cc780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 eb1721dd-b30d-4f84-8a16-54cd3b77c353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 cbe2a580-9e83-4c4f-8945-b5f1c84ef3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 0d4e88ee-7f45-4190-bc33-a8a199bb1414)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC479;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'hC479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #605 18e755e2-fa4a-4347-94d9-36ba2300b47b)");
unit.assert_eq16(16'h3D32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #605 d40c7152-05cb-4671-92d3-3a9b5ffab7ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 883b7685-11e8-493b-a9f1-442923cbdcb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 f1645215-3da8-4245-a1aa-c4836b3be9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 f58bd840-4c1e-4569-a1e9-eeb7c7abbd22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 a7a07346-f5ea-4f34-af15-1b508ec0cee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 bc98a738-819e-49e3-b295-4507f3a69a51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 4c6a47c3-0858-4a8c-9a4b-6012502161ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2014;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA001;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h2014, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #606 0aed2ae6-49f6-4dfa-a995-25178962e90b)");
unit.assert_eq16(16'hA002, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #606 418780c8-57f2-4db6-9737-639d95490625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 31f68696-d271-4f44-8b39-4ef7297d5abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 5a16d947-eaa3-48f9-9714-50911cde457f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 7d98cf40-1ed3-41ef-89e5-3a3cdb4e5045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 ee5ca391-072d-4f86-80ad-a3de67d3caa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 b814b90f-01a0-4de9-bf27-a30bfcc742a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 7b8c993e-e8b6-4a07-8175-1f04b66a26ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC01F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'hC01F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #607 3e0f8c31-a35a-4651-8160-9b9977f27491)");
unit.assert_eq16(16'h90C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #607 c3349303-3252-4e99-9edd-9847bd78eaa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 d4d331f3-6747-4425-8f17-19c4bf551b5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 3141614c-9153-4702-9c10-da1e7ab8a922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 f7e6a72e-ea16-404a-9aa3-7fb10d604af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 529f3b0f-bcbd-46da-8867-151c18eba65a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 8cceab71-54a6-464a-b48a-a338024e575b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 d76f373d-afee-4ac0-a946-d709a0e39be2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF397;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h6B24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #608 c5b62a1d-705b-447c-9f53-5d014f9925f0)");
unit.assert_eq16(16'hF398, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #608 fd279e7f-ab55-4be1-8907-8e218a05d4d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 148ea5d9-08bf-414b-95c8-0f078615a44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 57d3a3b3-07b9-4546-af0f-48ffe3a66c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 444a82bb-2919-44b5-8f45-a1696c5cced8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 05a35aec-18ba-49ec-8ffc-a757887949ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 e977e5c4-9cfe-45e8-a3a0-34dcc69f804e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 07b8bfa8-2511-40ba-a44d-dc7b9416fc5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC5D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'hC5D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #609 ff9311a9-8c3c-4e31-a1b5-e5d0c6370ed5)");
unit.assert_eq16(16'h4E54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #609 9f8a5bae-f981-4dfd-92c4-aa6d82922b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 333b0e6f-3823-42d0-aa1f-434637da131e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 82f12893-2b6d-4e0e-8ed6-7336663a1140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 60a79323-527e-43fa-ae2d-c8e1413bfc54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 b050d74e-e531-4390-9172-63eaf7a7182f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 7ef429ab-629d-46f9-befb-8ee23ebbb8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 a6fb2657-d69b-467d-a3c3-e63ea67150b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h67DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h67DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #610 0e85216b-4396-41ab-ac44-72c6fa60299b)");
unit.assert_eq16(16'h14D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #610 74930e38-93e1-4c55-8b5f-eca88ca18c45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 246c5579-c5eb-4ef7-9155-7afbfdddfecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 9fe0c3f2-ab3d-4195-a096-6102c787018b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 a459f2d6-55f0-4c08-b2bd-cc40b1995d50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 057ff0a4-a900-43bb-9d5b-a1ccfc1e2c63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 afa6e36a-653f-47d1-9ad8-76f2a82a2de7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 8f34c717-c847-41c5-9c02-f7d6ce15af86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB350;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'hB350, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #611 cda028e6-92e3-40a8-a92e-9af989cc1861)");
unit.assert_eq16(16'hDA7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #611 0c4d188a-ffa8-4194-876e-5bef5e17807b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 db45d763-908a-41a7-a270-d69562846893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 f863c33a-eccf-422a-8016-9973e10fc75c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 01d16547-ed38-43d5-98dc-a50d17a39e63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 6b114f31-06b4-41a9-83b8-92640a47bc36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 5c1f240c-6310-48ab-b13b-ad91658ea5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 01a42d59-2128-425c-9f7d-e7e2b05462be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBCC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'h1E72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #612 5fb01a72-eac0-41c2-af08-51b95229c26c)");
unit.assert_eq16(16'hBCC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #612 e77030d3-c721-49c8-9be8-cee292d9ef65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 8fde4ba2-67a1-476f-81a7-214064434d0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 7c65355b-dec2-4fcc-a5f4-b3d2d62b0fbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 6f9eeb74-faf7-47f5-b38a-25d48b87dd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 c760b009-7300-4fba-987c-46eaa84ff9dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 eb4f547d-8dd6-45c1-8d6f-b1579dd6ad69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 aaa9548b-6172-4fcc-9cb7-fd9699959706)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h897C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8184;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h897C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #613 5d6eeac9-af31-418b-8711-0425666a5650)");
unit.assert_eq16(16'h8185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #613 c7410407-fbf6-46fc-a0ae-539442278f0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 e39a20b1-2700-4a6d-9136-2403d479e062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 1359a20a-8769-4000-afcc-a708d36a031c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 83066d30-2082-45b2-91b4-427d87604215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 3263aea3-06d0-4bb3-95e6-ffaf97819a51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 f5491d33-9bde-43ac-af3e-2c8d381bb861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 88bc1070-d991-42ea-bc5d-066cef782dd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h33EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'hEB89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #614 a0c2b759-645d-4e71-b78b-2cb4d44e4ae4)");
unit.assert_eq16(16'h33F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #614 d5a0270a-8814-4dad-9a67-be4ed0a11330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 af4c587b-8e48-4891-aa77-e58a45c69536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 c25fa49e-be03-444a-98e0-346472c781e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 59693eee-3060-4e33-a2e3-a15d1bf56e85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 fc1995d2-1d1b-4b24-b84b-f43658e1e049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 8a1ed760-9951-4b8e-a7a2-cb199ef3ea43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 a9663887-2958-46b1-a1ac-373827ab5fa1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB255;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'hB255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #615 c3726c01-54d4-4bfd-ad39-bc9b0535cd00)");
unit.assert_eq16(16'h2C49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #615 97bc028c-e48e-4b0f-9b94-d5fd3cc94711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 435e41bc-6c51-45db-87de-2dd38c352c43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 43838af8-6862-45c3-83dd-e7f9d13f0b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 34709a00-7b0e-4b71-a819-524ffc56348d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 c7817f90-cfe9-4f8e-9cd0-60be766e59a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 3ea6b0c1-4628-4660-955e-8ada4754a0f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 933da84d-6934-46c5-8acd-48fa85b1fa43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6489;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h35D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h6489, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #616 ea76e8a4-5990-4534-881e-d599f4b86d70)");
unit.assert_eq16(16'h35D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #616 7b599935-9e94-4cac-b21d-4326236ee71f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 7ebf717b-7d9a-4ce8-938a-0285f486424d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 fe759b51-99a5-4545-9510-64f420873d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 c23fa390-db39-4280-878b-1147a166dcf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 3f893ef8-7bb0-49df-ab8f-37df65b3ad27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 8d7cd313-c23b-4a4f-941e-ffbe59401ffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 c677465b-cc59-49a5-90aa-1e0f28d813da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2822;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h2822, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #617 85374d51-3498-4afb-ae26-21f7d9f39f25)");
unit.assert_eq16(16'hCCC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #617 3e4f7d56-bf67-4238-b4f0-c0c4b72f623d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 ff3bc5cd-76d9-4ed7-92a0-17ffde0e5272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 2d43a4fc-883b-45b6-83a2-bd86a816511e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 c3798388-6b0f-4041-a774-8c3243d44a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 038cc32d-2620-43bb-91d9-c38452d7472d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 f743751c-d2c4-435c-afa0-e12b830d0944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 c4e319e5-5560-4b07-a1f8-1b104f5f9b74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA943;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9250;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'hA943, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #618 78de69c2-6dfc-4338-85c7-7ac8d4e6f460)");
unit.assert_eq16(16'h9251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #618 1d7ee967-0566-4d05-9f0d-ccac3d61c6e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 094a33e4-af8b-4279-a578-fce324572ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 cbe23228-6087-40ae-a89a-a8f58566edff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 3e89258c-78c6-4566-9e97-ebf4be306ee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 008276b6-53f4-4347-8d08-5c70e8a08821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 1fc0fa33-43f0-4396-b93a-22dd31f97324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 cf9e8a96-24cf-41bc-911e-7a222c6325b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h1F25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #619 33cb5543-dbe0-42cb-b237-4fb5e0f44d29)");
unit.assert_eq16(16'h9E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #619 23ed4435-cc53-4305-9517-098a3836f368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 1b0bddfc-6fb0-4a03-98f3-c4424fb99448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 3b9011e0-4f75-491c-98b0-177db899fd03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 e15225bd-0ae6-41c9-bb1d-bfaf2f998966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 a348d656-5182-4132-be35-42df0e7bb3ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 4cc0748c-7129-431b-a950-90c6c9d3f939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 9bd71366-779d-44c9-ab05-0f09635fbc4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'hF3C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #620 f210ce3a-ec88-4fb7-8faf-2cd7704dac4d)");
unit.assert_eq16(16'h72E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #620 54702031-832e-4dc0-a109-052ef5e4bc0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 c89f1088-6d75-46e5-a335-e326f60b876a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 491d4003-6d03-4e1f-bc3b-b071371eeb21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 1c0dc9a5-a95a-4bde-b1bb-3bee825f9965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 543daa37-76e1-4011-a038-dc4d6ae438b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 f2fb02b8-b4d0-478f-8678-b4891a142907)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 5f1610c5-03e1-4965-99e1-c3633a5d329a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'hDA8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #621 20296f04-e1a5-4cc7-b17c-7cf15b7cb387)");
unit.assert_eq16(16'h48A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #621 b8f3ab1c-c6a8-4792-b20d-54dea77f8b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 81818c7c-25b1-4af6-abaf-28ff5da65608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 7e4056c6-417e-4201-96a8-eeba05666a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 7d4bf5a9-483a-4b96-9901-94366f7f5408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 ae82a35a-905a-4034-a998-228cf515ab58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 94215d60-8f4d-4c90-ac19-2df252050afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 59d57099-2529-4ceb-a36b-765ba112eb29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h46B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6181;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h46B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #622 4db449b9-a333-4109-a609-e19835255939)");
unit.assert_eq16(16'h6182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #622 ffbdb82d-5280-435d-a737-e0b3b02b106d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 5c33c4da-25fc-4f99-b313-7dba0e8791f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 835a8957-5be2-4cf4-9a02-7f0623bd2bfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 1c8b9b5c-e003-4c75-bbf6-3735914447fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 3d1ca7cd-f5ac-40af-b9c4-b6140b2d3ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 b1b979b3-8422-468b-b960-6c74c24b541e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 5dfbb35d-359b-4cc7-a3a1-a87b1f0e6836)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h7D86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #623 75fa2bac-723b-4681-b21e-96bd0b3853b4)");
unit.assert_eq16(16'h79E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #623 5753c9cc-cf93-404f-b123-d6b92132299b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 2d572dcc-5b1b-414d-b65b-22a11176245c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 16228933-0e45-41ac-88ea-d6fce46bb04f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 c9cd35f4-f5d6-49bd-b846-a6d4655dffed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 9ba7c31c-c2d7-4a30-88be-4cdd9b50ffd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 4207c30d-a52d-440c-882e-faefda0b6fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 0fad9f99-a7d4-4eb2-a5f4-82348e676a84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB922;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'hB922, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #624 ad08e82f-0a29-468a-a357-1e2dcd3539d5)");
unit.assert_eq16(16'h9DEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #624 8e2fe7fb-4c02-492e-8d7f-1e92de19d8d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 955e29a3-0db7-4db1-b042-84e78c011856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 27c946f7-c3ab-43c0-adcc-7f70b2061c16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 7a920828-da6a-4bf2-a338-45663a0403b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 748eec82-1acd-4c2d-a2de-67249a44cd98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 760a68fa-160e-4f29-9023-9e9cc953338f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 637a52a7-6000-4508-ae60-e1c5716468f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h63EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h63EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #625 62702cf6-cd83-4636-b9b8-37f80b6913f6)");
unit.assert_eq16(16'h1E25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #625 06d61c6b-c174-4175-9549-8995f12d24f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 bbcbd2ee-e91c-4dea-91c6-5df57226b136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 fe9339ed-0dbd-4ed6-a813-bd1a97a5b102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 f93fea35-ed19-489a-9dfc-6d71ecb5367c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 06c6e431-a107-4c1d-a0d5-a4481369b7f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 2faf2114-5a52-46e6-bb73-469a999e0d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 6e09c4d6-5243-433a-97a0-d85f7d8c050f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h851A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h510C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h851A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #626 4c2d14ed-c2a5-4d07-9940-4e112867155a)");
unit.assert_eq16(16'h510D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #626 6610dd6e-2b7b-4ffe-8eea-bc01c1af9fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 f03a1155-5a44-42b4-b66e-809f5b4ec944)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 22eda34c-bec0-480f-80af-6a8fbf116a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 be4ab7d4-505f-45ee-b4be-0af236dba8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 d0896a7c-e088-4ec3-80b2-084b85ddf8e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 c193b004-fdd9-4a05-8814-ced4c27224ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 3b480ddf-a6f1-48e8-bc40-81c9a6c966a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD12F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB72A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'hD12F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #627 c6f8c4f5-244e-462a-8186-b2c3ad9949ae)");
unit.assert_eq16(16'hB72B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #627 d4fe0979-6be5-4a0d-9ef5-2ae440f2d4c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 96ecfd27-248e-45fe-a01f-f81698e93b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 0dacab0e-36cb-4f12-8048-277f7ce7b505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 285f968d-70e4-420b-aabd-84e29f21181a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 f031b892-ceb8-43dc-ad58-be814dc1f9d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 cb10ca49-2ec0-4585-957d-0bf56639af10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 cf1699d2-ad9e-4f4e-b057-9f9d18e8072c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2771;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h876C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h2771, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #628 c9777a8b-0627-4e6a-b656-7e5601a0b736)");
unit.assert_eq16(16'h876D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #628 9bff08c9-2c54-4477-881e-98b6e8f6e751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 3880d82b-2444-4423-8018-230b914fb855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 db34078c-a7ea-4681-bdfc-b1d1f81fb6c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 2f3fa0a9-bb23-42ed-b099-91bcfcb06b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 c2a2729b-d371-4066-bee0-213d207f584f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 8e534e5b-f571-4b64-8bf7-9331c80d567c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 05cfc243-ca6a-41a0-81c0-cb6c61f1ac6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h188A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h59DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h188A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #629 4c1643e2-625e-475d-b7f8-481d34a26f77)");
unit.assert_eq16(16'h59DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #629 b4ad5f9f-395b-4205-b7b5-6efe784dba01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 d1157b8d-ad84-4a6f-840d-b3c671fada42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 599031bf-0fc5-4401-a9fe-963fe827bd3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 d2520390-3aeb-4cbb-a341-530100f32886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 936fe384-10bd-4293-b28b-6fbdf20566cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 e510d4cd-c416-4030-9d8f-3641037ae383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 747b1c0b-acd6-43d5-9d32-bfae47fbef96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5DA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h5DA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #630 435de666-ce3c-4d8f-9980-6af6a26c0fa2)");
unit.assert_eq16(16'h8C45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #630 858d8e56-ab6f-46fd-b12d-79e843531ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 6ab33a7a-4c86-40de-9e91-15fcc7d1c28f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 1cca6988-db88-45bd-b030-b6acac5dc6b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 13304438-af30-46de-b6ba-716e56404c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 fd748a94-1083-46fa-be69-4a5bbf5b49d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 6e3a3ecc-b197-4ca9-a9f6-e7d5fc70cb8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 8cba21c8-95b3-45f2-9299-57bd92fdc14c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE369;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'hCB86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #631 7ab0bb25-4de2-4894-9d10-13805d54542f)");
unit.assert_eq16(16'hE36A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #631 e2beaf73-f17a-432e-afe5-1a8efeafb959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 55fec483-1b21-4f28-9152-3b76f293cbb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 bb6ac74c-d8ea-4c1d-a0b2-f66f92bce309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 058e8350-5526-47a2-9a9b-c4b49d106c4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 83a9f4e4-dd76-40b9-8b4d-4c981a1aa221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 d59d5b6f-705f-49e5-9773-87fd6bafb9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 b940751a-6c26-4c3d-bb23-beec4aec8365)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h671D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h671D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #632 549a10c0-9d10-4e2e-8c8a-a1cb3a9c170a)");
unit.assert_eq16(16'h3F87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #632 d2200cdd-f32a-4d0e-9cc9-21353f2e5912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 59556769-b50b-498b-9813-9f0fcda77bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 02bfa0c2-b975-41cb-80b7-e47803e669ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 df57489a-148e-4afc-a316-61e832934eff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 5bf4a621-cbcc-4259-9909-c43255673f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 7024b0ed-2d58-4794-b035-84905db268b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 c53c0d7b-6367-4664-8384-ec4b7d2be9cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6203;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'hB6B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #633 11bbebf4-7361-4522-bc21-cd2648bbb0c1)");
unit.assert_eq16(16'h6204, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #633 6d2c88dd-75b5-421a-b3ab-424701f559f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 90a525d4-b468-415e-94ad-6d7c841a9e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 ecc63d8d-aa82-4dd0-9819-0468ca10acd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 6f3d3cd7-6533-4d52-bbae-746d740f6ed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 6d1c9be3-27a1-4315-9bfc-084f43e3e3bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 cff1fa96-dfc1-4451-add7-68aee38f2a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 cb32438a-b11e-476a-983d-e17016b23511)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF768;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h61DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #634 b560614a-bc79-4311-b427-87e12e091d0a)");
unit.assert_eq16(16'hF769, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #634 9491c753-077f-4ee7-b34e-7ab34fcab753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 71f4f705-9376-4ed2-aa35-3bce23e85a69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 14a1ea14-b74e-4be5-b09a-71eda7f5152e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 c517b70c-d582-4ad4-9561-3b62009dc05b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 6420af6d-7f01-4dd3-b6ec-d3acc880acd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 8afa2f5a-90c2-4cca-b917-3d449759005c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 a2fbd54e-5aac-4b2a-90aa-24af15bf5fc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF9B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE340;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'hF9B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #635 308ef149-3826-4636-bda8-dbdc366b73b7)");
unit.assert_eq16(16'hE341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #635 9c68d8a3-5657-4a9b-a83d-d1c722a6e204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 514d9db2-e111-48bc-b259-6e3bc7b34dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 b42efd96-0dbf-414f-a4a7-06e99e0ed096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 00e4fac2-a6fb-412e-aed3-e6c9e2237f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 45395b08-11e2-4ec8-af7d-d09065523fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 1a11e882-d467-42d8-8c22-4d02f2730286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 04e17db2-b5ad-4e14-b7ef-2e35b4d713b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h321F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h1C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #636 1445e209-bb34-440f-a8e9-cc00051c3eec)");
unit.assert_eq16(16'h3220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #636 0b3ac57f-9b27-4807-a62a-84b6f341aabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 697d917a-7a77-424a-a012-17c5f6aae3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 dfcdf3fc-ffcc-4d72-99f7-a38edb0ebb87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 a11ee960-5330-48e2-afe9-b2f6fcdfb917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 9ff9fe84-408d-4aaa-b354-b545c625a592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 972e2700-7467-4a3e-98e8-de44a062a94e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 712b2577-ae3f-4788-a2af-23a461c00cac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4536;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA41F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h4536, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #637 ec956089-8b02-42a1-b59d-4e41b6b0f41f)");
unit.assert_eq16(16'hA420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #637 3dc20384-0176-495a-b175-bbabfda39ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 4de36d7f-1ca2-4f60-911a-90bb5e2672b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 7cb5d3c8-2ceb-4e87-84ee-b7b18218090d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 255827ad-901c-4d42-9be5-f8f7622751d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 43cbeb17-20ce-48ee-bab4-5353b874a6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 b1365209-7e1d-4d0f-9e4d-de60f77b245d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 21021417-2ec0-41d3-a982-1cb3cd77e0e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'h9D98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #638 3deafb52-eb5c-44fc-af79-73cb293286f6)");
unit.assert_eq16(16'h1C50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #638 add19bb8-be45-4641-8981-9df7d5ff257e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 fe7209ce-7fe8-418b-9e0f-e2bd21a203f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 e9041cac-128b-44c0-a1de-ed44d8a64148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 2f82f8e7-1f88-4f12-b1dd-a0530c8c2f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 f75089ab-2458-44ae-ac53-90c964b3420a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 4383f069-8872-4568-88db-a2a95b0e1df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 720dbb33-a7f0-4c31-b110-2d2705923213)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h765F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h25DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #639 6cb33a6d-6738-4590-abdd-ace7e9afb8ca)");
unit.assert_eq16(16'h7660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #639 4b1f90b0-c400-477e-aef3-1604f038f724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 05e8fffa-c29f-45a9-a04f-6fbd98bcb9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 2778f498-ab79-455e-b652-9c0d7556ef7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 ba769aac-a110-4c9c-897d-0cb76ea478a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 cb17c126-6cf7-4ee8-bd0b-1aeab4f675f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 e332d24f-8082-444d-b6ae-3bcfa2086de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 eff8729a-175e-493d-b001-e210763b63de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8945;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9761;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h8945, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #640 288d3bd4-4a9e-4ade-a906-88b8450cd407)");
unit.assert_eq16(16'h9762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #640 12bc3e48-5bd2-488b-90b7-0bc31614584f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 07246ef7-9eb1-48c5-8353-0c7c6a2a98d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 e6f3cd8a-b779-4423-8c30-e25e2cc0ff5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 9900c40f-9074-4882-b72b-ff10d32261b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 b6d25648-8d9b-4939-8799-7c7f66a17dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 4a4933d7-a747-4a31-ad8e-409b3f7c934c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 e4d36bc5-5f7f-44a9-9047-575ef1c0d96e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h27DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #641 354f0721-213e-463b-aaee-68163dab6ce8)");
unit.assert_eq16(16'hB3DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #641 35aa95e9-b7f6-4c64-9ffd-d253a63698f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 bf06752c-3297-4950-b55e-090ac25aadf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 a0043cd8-b793-4b0e-8e9d-4776f7f32358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 e081c360-d823-4de8-aa8a-ab0fe55abf3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 058ae971-df6a-4073-865e-186888e0b251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 0153f736-8aba-4414-8aff-b4dcfe1e8a2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 87ff94ee-58fc-4d7b-bd23-6732f899f1a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h916F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h0D61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #642 6bf1bdce-3a6e-44bf-a8d5-aee90d724858)");
unit.assert_eq16(16'h9170, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #642 09789ca2-6f6c-4d2b-a83e-db62fc58eccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 3dea68f8-dcb2-41ad-a740-bd2b0979b93f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 0c86b630-c653-4e3b-826e-107cd409069a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 17305419-6d5c-462f-b429-87a12eb11966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 b93a3605-5d26-443d-a1fc-965b70712111)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 65aa3618-25df-4ae3-8511-ea734afb0953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 dbcdc81d-ccd6-4ae6-a8f7-d0e9f6165344)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9DF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD7BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'h9DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #643 54d6a23f-b18a-4eb1-9b77-70cd1e5f915e)");
unit.assert_eq16(16'hD7BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #643 29a02f1f-5a77-4785-be63-90b08420d564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 42ffd6f9-0cdf-4a4c-9a38-42bc9099312c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 f95c394e-eec9-4dfe-ad07-185bc4dbda10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 79a662c8-599b-4b90-8f9f-c808fb9b70e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 dc66c8a7-001e-4efc-ab40-7ea63d540b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 11d1832d-09f8-4097-ac0e-08ab9b74da8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 5601d053-1a5a-4342-856c-2a8549c87565)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7326;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h7326, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #644 a6b2f781-1a04-4646-8a97-b79e89122827)");
unit.assert_eq16(16'hCA63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #644 e53407c4-9bf3-4e2b-9d1e-f269a909bc98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 2b599fe0-5eae-4363-b701-e231ab295f67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 00307e25-e739-4025-90a1-85178dbc73cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 b096d08f-1277-4a52-830a-98aade737412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 dde258f5-8373-4aaf-9cae-5ae9ef09f7d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 f419b871-7b85-4923-ab26-f33f613e33c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 6d0c31ba-7757-4f67-b6ab-d351eaec49c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'hA7FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #645 35169931-d48c-4747-abdc-6dc820627992)");
unit.assert_eq16(16'h4D6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #645 c9831e14-24aa-4c24-9297-4b02412a3d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 c46a2797-0859-49d8-ad36-198609aa9258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 8a950deb-3d32-402c-aa21-6b856d198af1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 00fa9671-42f1-41f0-a05d-74e1d00a9c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 d5687b2b-07c4-4635-8c42-55685432e757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 43176935-51ba-48ae-9547-f058c67b04b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 cec7c48c-dc11-41d9-ab6d-88f7e61b1478)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9EAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h9EAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #646 43716390-6a91-4346-aade-27864cf947ab)");
unit.assert_eq16(16'h57B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #646 37754b8c-3624-4c82-9474-e6860bb241d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 601ff8d2-d03f-4269-b1f2-6ef80dd06a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 95129c84-a492-444a-9ede-28fbad5ff4a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 da709d4b-e980-45af-a066-201076849416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 d34b16ab-0fa8-4028-a612-b4bfa180d16c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 5776082f-c733-4b39-b5c1-6ed598edfc82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 2878fc4b-e772-4e27-8e14-1e17f2c734ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCEA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h52B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'hCEA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #647 52c68471-11ab-4d50-b517-1a0665a236f5)");
unit.assert_eq16(16'h52B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #647 09670097-b6d9-484a-9d46-bde5c14435cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 b1e7f086-9844-4ad8-95e0-3b78ac8f6ef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 5bcf5a1a-804f-463a-8c1e-11b6297bbe94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 755298e2-beed-43ff-afdb-5b49b1969e73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 8c43d5d4-7d75-4f0d-846a-526cde786f24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 c3d70134-698e-4615-a3da-61b0a2e737c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 b4730fd9-5235-40e2-8e12-45e304a92b96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3302;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h39DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h3302, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #648 5d7e515c-dc75-4e57-afaf-6d256872ae34)");
unit.assert_eq16(16'h39E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #648 a88095bb-33c0-4abd-889a-b16960cfc81b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 7cf399e8-4dee-4223-876a-525f0e5e9941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 e76977b0-c5ea-4445-b721-b5cca9d8b9f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 0887f501-c2d6-4667-bb43-7a3e16746dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 18416fd3-0bc5-4dc6-bf9d-82a750607e14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 2ce68539-2bf6-4587-bb67-de87e119bf53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 e1ecec3c-57c0-4ba0-9729-a6ea6e73e2d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE636;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'hE636, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #649 c6e04f7a-a839-459f-8594-040fecd31c92)");
unit.assert_eq16(16'hEA87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #649 cadc0840-b74b-4b79-9551-77af6f98f660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 e830c328-820f-499c-86e0-97b7b8fe1fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 9436098a-42d7-4df4-99b3-7e8e492f1b30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 686f6343-6034-45de-bf2b-fa23956674dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 fa5ad21c-458f-4a22-a760-da2d1e79bd4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 07d0bf84-ea56-450c-96c1-b032c27e1857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 4a78cf26-8b35-4ef5-acf5-90018b429a16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2949;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h2949, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #650 9f7690bd-f0d2-4a90-aead-e72b278b64d6)");
unit.assert_eq16(16'h54C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #650 b73d8558-167a-4acb-87a4-7f65d9e6d744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 bf2c9efa-f474-4bed-a575-996ffcf817e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 5d32ebbc-7605-4449-b0e0-e0f5d9bd618e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 6088520c-6f04-442c-894d-1bc3d0b9e726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 f7ed50f9-aa8d-44f3-897f-ccd33332ea26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 b04c4856-4a11-4f6a-9365-612033550656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 61611b67-0912-47b3-ad6e-3ebea7c6d204)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h283D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD7DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'h283D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #651 ae789d59-5e34-4213-8efa-72fe6c4ea0a8)");
unit.assert_eq16(16'hD7DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #651 f8daef95-58fc-4265-a0af-505af2a36948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 c6b9cc5b-29d8-40d9-8959-985251cda7b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 bdbed61c-8870-490a-b330-d3ee39a1e269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 56b8c495-a7c4-4802-bfed-b307e54bb9e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 f189bf5e-303b-4ad9-be48-e088ae08a842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 21db1497-d803-466a-bc85-bd7c63739f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 daba1e0c-f1bb-4a5a-864c-37fda27e6727)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFAEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'hFAEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #652 7e3d46b7-778d-4212-955a-9c26fe6fc47a)");
unit.assert_eq16(16'hAB41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #652 71d5758b-bbfd-4e29-b2e5-6039d9f50d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 fcb2ed14-eb19-4f8f-acec-263071c2294c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 e5d407d6-11bf-418e-aec4-6bb0ac6fbd9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 313e0588-7747-4933-b808-5fe2b3c7c1ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 9c7fa2c2-720d-4684-abe7-0f7acd23fb55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 8a0efa54-c399-4e61-9982-a236314fd939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 7ac13cae-32ca-49d8-abb9-f22d73b385ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2163;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD6B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h2163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #653 38c286bd-3146-45e9-ad97-fce18203ce09)");
unit.assert_eq16(16'hD6B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #653 587cfe23-f9d6-4204-816b-b6ceed05f4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 fdd26e64-63dc-4bea-97d4-12f9bcef3188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 c6c89ee8-06f2-4886-96a9-01648686c3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 d98426a6-7116-48f9-b668-8b1a506fe201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 b04c9c5a-0091-4942-88a2-d3be340be89a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 0143cfa7-5c40-4d64-b0c0-af40c0e2473f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 553c66aa-1a96-4390-bf4c-1ebd00f242f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h4E66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #654 2ac8756b-d73b-46a4-98d8-6abaa45c2d0a)");
unit.assert_eq16(16'hB9B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #654 c0f002e4-cbb9-4cb9-9fd9-c9fc78713ca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 efc19a1f-d1bb-416f-982b-6aca52637aab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 568647cc-cd99-4397-9fd8-6b446eeebed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 c8ecbdb9-be85-44a9-bedd-05e5856a10f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 6cc99bff-dc58-4819-91fb-bec1edfd90b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 f7f316c6-a31d-4026-9a9e-3e2682e96ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 caabc942-3796-4ce9-8449-7eb828f4cdd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9DDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h9DDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #655 f6fa73f1-b3c7-42fa-80e9-d872a9c2cd2d)");
unit.assert_eq16(16'h2D58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #655 7bf9e9d2-f369-4db1-bfde-5cc5df0d0b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 fc575a94-eec1-4dd8-a868-caa016fedf41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 80c0caa5-9cea-4ccf-a038-b0d07be74e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 f3e60930-7faf-4f38-97ff-8c58145b91a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 c60340b7-2ce7-417b-a132-327e945196ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 7660a405-65ca-4c32-ba9e-dd43e8469d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 b1d39048-ae10-4bd4-b9d2-1999ee261499)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h923C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'h8A38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #656 32b2539d-0c37-48cf-9928-fc2e39639ba1)");
unit.assert_eq16(16'h923D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #656 cb02af8d-18c9-481a-9cc5-73ede9dc4452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 6ee5d161-1bc3-489e-a036-0f8afcaf5e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 af52b00a-d515-4ea3-9edf-cb42233f9424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 cb995574-43b0-428c-99c8-a207a8fecbb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 44a90f50-5673-47ea-bcb0-93a3d0945764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 ca01db72-b009-4997-8328-e3dd3968920f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 29fb400d-168b-4ddc-b90e-90c2b03a9947)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4AA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3BE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h4AA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #657 32744991-0bb1-4df3-9924-74b4c19f7ed6)");
unit.assert_eq16(16'h3BE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #657 afd7420d-caa6-4134-9bde-cdde2d9eff3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 dfb3a3b9-4d23-497c-86c2-73c9abb16d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 479bb751-23ee-4123-aebf-f528afc1fbca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 96c1ebdb-046f-4c0c-9807-9325a8156474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 ddf32f01-e937-460c-9f4f-d3202a13b6df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 f2341d52-3ab4-4a78-bc63-80ddaca9db4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 f517e4cd-8a8e-4550-8616-5645aea5d0ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1793;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h1793, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #658 79b93b15-69fe-4a96-8524-37876c0ca2e2)");
unit.assert_eq16(16'h6EA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #658 01a43f2d-af2b-4658-a2db-25bbb8e67485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 b0233184-2a8a-4c15-81cb-8db642427109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 5c889da1-e447-448e-8420-84681e448022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 f069dc5e-4baa-4aa0-b879-2b08a99a1c90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 1d82f9f5-92af-4563-af00-e6ebe65cb908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 85270c8a-a9e2-4dc3-8377-ba2a49421651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 87bbe6e9-2380-48a6-b877-30e3e7ddfca2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF478;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h12C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #659 27857f6f-1a71-4ab8-9054-a00f55627761)");
unit.assert_eq16(16'hF479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #659 aea8943e-2e6f-49bc-8fa8-9d6c3ea9d0d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 7682ee3d-2eea-4f0f-a46a-66c789633627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 ad023e41-072d-4d5e-841e-2cab6e692f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 11b491b3-16b3-4ad9-93cd-aabe4185b1d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 d6c399a6-50f7-4d21-92a0-785d47a10b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 d4bc8076-845a-4ee8-abd2-d46b074a2c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 eca283a0-0d91-4d8a-8a63-fa8bed5cdddc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h017B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'hBE46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #660 eef80089-60fb-4d51-8062-1bce329eb903)");
unit.assert_eq16(16'h017C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #660 600b4f76-b3c0-4479-a13e-14057d14339f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 6abc9974-9fba-46ce-bbd6-45830acfe9c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 de359d42-74af-4fea-a215-7e51e2e330f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 5e00ef60-1ecb-467b-923f-2192029f7777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 f2c47de8-8a74-402d-98f3-11c09dda5ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 0710d8c1-fbdd-4e55-8ee1-044eadf90dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 2721a52e-dbce-4e95-8143-edf1532d1fd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h91F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h618C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h91F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #661 b7ee542b-1aaf-47e4-9509-60d5a3a2a26f)");
unit.assert_eq16(16'h618D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #661 daaf0a3d-4bb4-404f-9a95-9086f79270dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 cd257b49-65a7-47a6-ac86-fd47adc34b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 262bd131-ee4a-4383-b10a-6f1a2b088e63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 66447082-cf48-4335-9156-a87823da6f82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 fcbb1c18-e3a6-473a-aa91-e8b5b03d96ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 866c2ee2-9790-40f6-a734-cccdbdb8a868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 17411fdd-f2e9-430a-b1a9-f490007d2e02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h78C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #662 e23e2ad2-a04f-4e85-bb38-1662d681548e)");
unit.assert_eq16(16'h34F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #662 de30a071-58c0-4d96-a070-bc492ba26b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 52532bf2-eaab-4a5f-9845-d98daaa16c18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 c6d11d85-f76d-4a5e-beef-197de6671365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 f560371e-c0ba-4282-b328-8e584447d85b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 3e99508d-f699-4df2-ad49-0dddf3e98f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 efdd6d15-aa57-44f1-9d27-d8dd46379b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 9fec8a7a-069b-4ebc-b099-979d06d80569)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5532;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE3CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h5532, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #663 bf3a9269-1304-4f6c-bec8-82d55687731f)");
unit.assert_eq16(16'hE3CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #663 258a5859-a924-4d20-9052-12895f7670d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 afdffcc3-20b4-4c53-b572-3f4889871f37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 afd24bcd-b411-4813-bf3d-550af6f71476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 1914c9d7-7397-4bea-92fa-d0dc74b6db05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 ccdeee41-cbb9-4de6-8b7e-02f5b31780d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 9b1ba465-a041-461f-9828-255edbe33cc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 c4598172-a09d-4a75-82c6-754d39c48039)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h12E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h04DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #664 eb8cd09f-36f3-49b2-b400-adac56ca033d)");
unit.assert_eq16(16'h12E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #664 fe18665a-0a4a-41d0-b1fb-2b2af9060077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 5b5c44d6-3d2c-4c2d-a05d-cf04e4b4ec50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 9f01aac2-3d62-4291-b961-29c1d9cef2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 4c65fb62-69e2-4912-8c43-155df6eea08d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 27c17865-9275-4bba-b054-6acede3c35e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 231d32cc-4e94-4fbf-8ea4-c64a234c2ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 d92fec6a-46cc-44cd-bd74-1523842474f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF2E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h4C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #665 1a82c644-1fcf-4a8c-83bb-d46e69465d0e)");
unit.assert_eq16(16'hF2EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #665 199b15bd-6344-47d6-a57d-b0393e222093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 75abd267-b881-484f-be4c-9a8410440b30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 1c2f9a3a-7cd8-410d-9df5-173a849c7b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 26841dd2-dba3-4eee-8c7e-dbea175a492a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 0e68e8f0-a44f-4e13-9eef-af887d34a2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 dd72fc7a-715c-48e0-8833-401f3f5ff107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 daffa0a5-2f10-4788-90e2-a512e29f6604)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC7AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h29BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #666 9bc53905-af9b-48a2-a16b-ca7f919fe826)");
unit.assert_eq16(16'hC7AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #666 b0307aa2-8943-46ff-b935-92f1f9c72223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 c8ec3847-84ed-4771-9ec1-82910bc24d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 238f523a-b672-4154-a1a8-22682a0b64b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 49d92502-f67c-4917-bb96-46933c43d736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 478511e0-8de4-46b0-aa5b-ceb5e8161b6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 d3569f4e-9db3-40d9-966d-85164fa5c95c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 ba77ac05-5518-480f-8777-2b1e9fd2aeaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h45B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #667 ae48ab9c-cf3a-4393-89d2-e68543d7de66)");
unit.assert_eq16(16'h81C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #667 746006c6-3cf1-452b-8c3f-9cbe9daca1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 a1531e95-d05b-4e6b-ae88-384cc3c3a046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 8f45cb9d-79c3-4f80-9f84-f752667385af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 bd8d659c-a506-4da2-b2bf-b56d597f60e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 cb2369b0-8b6b-4674-8757-5ca05692b7e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 84a1d8b0-47c0-48d0-a5bd-e3bde536a95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 e2990a17-243a-44e5-b19e-41a5caf4f72e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'hEC68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #668 bdb1d2dc-c201-44f7-bbfe-692c7f41b17b)");
unit.assert_eq16(16'h20BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #668 259f4371-abfa-46ff-a294-cbf5a12bcf8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 48af77ce-96fe-4591-b17e-8808a592227d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 9f298097-8d33-496a-97f3-9281aa46385b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 e7c0271d-b12b-4741-b419-fe344cd242f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 a384e5f9-4ac4-4f5f-a3a8-99ef0a69601d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 30b36709-988f-4df9-a115-af1afc15556e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 87190357-3457-4097-8939-e9c5abae1e3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1045;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9761;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h1045, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #669 2f103c07-1caa-4cff-b57c-255b89975351)");
unit.assert_eq16(16'h9762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #669 2bec70d6-d005-4906-a165-d1b1dadd5824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 bbed9845-0941-4f8c-a56f-475affd63506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 98d829fb-95ef-4040-b7df-7be33001f763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 908f42fe-8d53-4d9a-91cf-7ca1707f074d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 e7044a44-fbaa-4d3f-869a-ef385133ae54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 463838a3-d747-43f3-9f6d-72035e9e55ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 b2fc3006-0529-4460-a28b-08fa2f90f4f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8318;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC235;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h8318, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #670 0bfb41f2-045d-480e-b532-b5ca83b0eddb)");
unit.assert_eq16(16'hC236, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #670 66c272af-f188-4dc9-a8b4-a9b7a554c183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 0e534afa-7833-4b32-87f6-0e2268db79ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 7e31e335-e2d3-42b0-8ef7-816f44c09d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 b4ff7148-5511-4e95-9611-686ac65ae2d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 fcde2a7c-5f1b-4dd5-bd25-8b6bfb3d4a6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 88e6d4b9-637c-4e97-80a9-1e4bdd9fe2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 b1e37717-09f1-4c1c-b96a-e662e4038d6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF455;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0389;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'hF455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #671 a1411bb8-34a4-47a7-b5b9-e6b3a85f72e3)");
unit.assert_eq16(16'h038A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #671 4df42d19-987a-44a4-aa19-e1d34ca3d617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 fac94ae1-9954-4422-bfd5-1cab424212d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 c7887bab-cf9b-4bb7-ba7e-fe4331a016ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 c945f3d3-2d0f-41ed-80e4-12d80a7d0408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 8e953c7a-19c5-4635-b271-fa5fb5c0fda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 01a9f9bf-c4e8-4803-bdb2-e31a38d4a0af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 0d6d6865-3823-44a9-8582-43714dabdb5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h13DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4168;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h13DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #672 40bf7895-efbe-4772-847a-a1dcdbe58330)");
unit.assert_eq16(16'h4169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #672 abab39c1-d156-4060-8a22-e3fe92a27554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 0380789b-da8f-47ce-9bab-802aad0a866b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 61fad284-c342-4463-8a22-404a386cf52f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 5be888df-36e7-4e73-923d-f676f0cfdbfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 2f77d80b-ae48-47eb-a47e-621dde09f367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 f4f18668-1006-421d-a1ee-10ef1c2c4725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 d6cf6451-ddf5-4066-a598-6597ee27fab3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h69F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h69F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #673 241282df-d593-4cad-80d9-95fafbcf9b48)");
unit.assert_eq16(16'h41B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #673 a85fdc4f-cdf4-44af-a5c7-b77d2e4ea808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 9f5a283b-9c21-4002-9ab2-c6fd1a9d04c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 a5365a78-c41f-49f3-be52-e506ac0082ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 954fd7d8-1ebc-4525-8b3f-986825bf314d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 1d988b9d-88b4-4e15-89a0-92ed7ea2f050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 bca771ac-bf70-4638-b23e-3f7b0d275436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 78b86387-181e-443b-9129-496ceebf9fab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4022;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD606;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h4022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #674 9b8f3940-045a-4a20-ab2e-99e4342d21a9)");
unit.assert_eq16(16'hD607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #674 014ebb6d-bb79-4952-898c-f4688f1df9ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 935f4342-7747-40c0-9a14-125f7cb2ab90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 9c1d4d57-79e4-4d97-a2ec-a8a4b3258710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 0ac0f34e-00e8-437b-8206-786ef88f3902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 3d081ca2-95bb-43b3-8f49-6d24482300c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 ecc0e3e2-3e1d-4a1e-969a-5365e3440bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 5617c546-eab8-4a1d-ae92-cbe26a7ec142)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA710;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3406;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'hA710, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #675 df362efb-8bb9-445d-abcb-b920069d50c2)");
unit.assert_eq16(16'h3407, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #675 364e49d2-daa9-4f6b-8084-aab822cf9e81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 134e2cfa-c916-473b-a76c-15cac201d231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 9c7798b7-63d5-4be0-9be6-acdc32f6b579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 75a4d5ee-fa8c-43e8-a187-3f7f2fda4fa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 09995dc8-1d76-4756-b8b3-1b0a0e418a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 79bd1f8c-d756-41bf-8312-f00d2df5b8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 dbe2049c-2e28-4de4-8198-14925603b08b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h0E13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #676 74964e41-4671-438d-9586-c45e74b6996b)");
unit.assert_eq16(16'hAC1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #676 5c7f8343-a880-446a-8fe8-668c8220ed12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 3d3decb4-fdbc-4460-8627-cab5e654763a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 5dc4b569-0655-4c0a-a9ff-48689b0ab664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 31c3c8f0-5f1c-48df-8334-958b547d0dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 876413ba-4cfd-4120-b954-a149d22255a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 98b65e90-7919-424a-93fa-98382ff7719b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 46a8a012-d225-4ba7-937b-ced38fcc55df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h12CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #677 e982a8b7-b193-4d8d-9f04-a76e6f3cd5dc)");
unit.assert_eq16(16'hFFA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #677 ac728756-c0f6-4059-adf5-df5480bd0409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 20ce3086-7562-46f9-b763-8e0f02cec1d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 c940308e-0ba7-492f-be9a-12b255b21214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 ffae628e-32d1-496b-b163-c81e067012a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 c42c60d3-047d-492a-9eaf-2a64fe1845d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 be711a9c-82a9-42a9-a080-3bdd19c29b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 cc10728c-c247-4ad1-80d1-99e50867e193)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h272D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'h272D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #678 49ab311b-92b7-4668-80de-64cb36da612c)");
unit.assert_eq16(16'h81B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #678 3f0c4c0a-aae4-40e6-bc40-ab1dddf49f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 5c623e3b-fc4d-48c6-a3b1-dc208b8e8926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 db010a89-2bb6-4258-b25e-466c15613317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 5f313752-97fd-44eb-ad25-7b2e8a9b26c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 0ebd4118-558c-4d98-8b89-e6a3ba0e7a05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 8241b6c6-bf37-4be0-a9cf-61f10fb8d277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 feb9cc1b-6799-448c-8a2e-a31533eaf186)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h312A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h31C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #679 be2421e3-4663-4f54-a95f-f17114c20ae2)");
unit.assert_eq16(16'h312B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #679 262ac596-8b5c-43a9-86e3-22b4af005d5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 798f9150-2ba2-4d90-875e-97c28d6ecdd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 8cbbc2c9-2b7d-4ffd-9ced-2ad77fbd6183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 2e1a1218-9874-4b1c-8b6a-2cbf5f4e55f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 7ad455f2-065a-4e64-95f7-3cd5b3cad4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 acd1a680-19fc-4ecc-abd3-72a55b4443e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 47fc4180-ce93-4acd-984b-d336b952f2d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h103C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h103C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #680 bf151fb2-d9d5-4bc6-a760-6bcfea9e9926)");
unit.assert_eq16(16'hBA28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #680 52934d01-f43b-4636-a1de-37f7cdf85044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 c5667a17-31fd-4fc5-8992-6aa073c74897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 42fa0152-dddc-484f-ac46-3135c1f1c2b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 eda79267-793d-4be8-b5b5-80560cb06a48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 c1f507d0-43de-416b-b0cc-5cc1962a807a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 b0ce804b-751b-447f-89a3-8346f3ac2070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 39a508d4-975c-4cb7-9a79-e67e13597e33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9C09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h9C09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #681 10fae632-7667-41f0-b64c-fff20b5fe879)");
unit.assert_eq16(16'h9FA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #681 feeddba7-76f3-4225-8142-14f7507a05dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 b6cb1219-8179-47be-9f98-a3f29e08a580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 0995a9c2-5fda-4507-81bf-a0c1fc34224d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 8871bead-b9e8-442b-975a-2d013224f961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 e36e8646-cb8d-4102-b19a-df0d36c56e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 bcee28f8-58ca-4795-9fd9-9ddeb23965ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 affe64b7-fda2-48ba-8bd0-9a47af8285aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFEEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF777;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'hFEEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #682 50bfdb29-d812-401d-8c01-306f7b8a4900)");
unit.assert_eq16(16'hF778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #682 82394694-1c1c-47a1-995e-52108833ba8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 c2a4ea58-3204-4a2f-9f5d-f64e6377bd3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 467ae7b6-7706-4ef8-9a95-fad7b1bc218b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 a32d2a92-1933-445c-8026-d9ae49faff87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 6ea3f216-591e-4576-9757-e2b1cd619c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 765b1d95-084a-4cab-932c-3b57e5f78ad3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 4cd74d4b-a947-4053-ade5-95a291e81da5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7AE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h05A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #683 fcb8e1b8-6cae-44d0-80aa-0133ead9ea3c)");
unit.assert_eq16(16'h7AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #683 cdfb8a20-5af4-42e1-9d48-5db41bb1ecb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 2aa4b8fd-92f0-457c-ba9e-f7b2b395786a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 0130e879-6ec0-4631-ab75-22def2337ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 c4ce6359-b8fb-497c-9f9c-5f236053fccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 3c3f0987-3e08-440d-ae83-131c630fcc82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 d97f0e76-55e5-4243-875f-2ebd02f9a913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 4ae2911e-6120-41fb-967f-693cdca3682b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEE7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'hBC59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #684 5d166688-3ba6-45e7-b8cf-d24c56b494ec)");
unit.assert_eq16(16'hEE80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #684 6901c627-6b10-4170-a4ba-63e01194c761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 3ebe8c83-a53e-40fe-ba15-daae8cfb65b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 9c28914a-99fa-4263-9092-3ea13b6ac45e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 5a747dd9-9a55-4d31-8699-250e9553407b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 82c15862-6ff8-4e80-b0c1-2d556b044e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 052908e7-133b-4dcd-9dc9-6faf3ab38687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 428fa160-fffe-493a-a991-00c566896dc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBECF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h966E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'hBECF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #685 b7c956f7-2582-45e2-820e-9f637488777d)");
unit.assert_eq16(16'h966F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #685 52880b84-9b6e-4809-85ff-a6b8f3c72a24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 b6217161-5b4d-40d5-aacf-03c7b05ac4e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 197f4e78-cab6-4c65-851d-773f8e733ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 4b1e80fb-cf46-47c4-b806-81306af074c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 a0b0c6b6-67a9-48b8-9d48-5e831cd3c6d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 136427ca-9f33-4093-bd8e-a6f2ea90ba1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 b2d8b1b0-58fa-41f8-8977-717c48060041)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h881C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA382;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h881C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #686 98ba45f1-4d42-4e96-9ac8-efb50d30fb35)");
unit.assert_eq16(16'hA383, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #686 c7f79d5b-898d-48df-a98e-33a0ba9895ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 fd94a5b0-3eda-4d10-9036-43129a7c0101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 41af468e-4880-431a-bc7e-2563c453347b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 9c32240f-79d5-4c94-a3b1-4ff96719b551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 baaa41ea-85d2-4649-a1e5-2801db63a83d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 5d397a1b-94b9-434b-ac50-2fd73091204a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 3bf87fbd-cfa3-4232-9399-c3b3c47ab447)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h4D1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #687 6ee76141-479b-42f9-af54-b7d92008c0c9)");
unit.assert_eq16(16'h89A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #687 50d28635-7660-47f4-b145-5e9abbf7670e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 1e9f235f-4d60-40f7-a659-32ae2dd45f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 3a2161ea-edb2-48f3-a828-02d8bbd3b28a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 b538e882-80ba-4ef6-8ff0-a107c4cfbcc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 caf6e2ca-8c34-447f-ae31-39177b5a8568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 cf367815-46f8-496b-bd27-1eb9d71be77a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 57f592eb-2b6c-4ce4-987b-4ab290709650)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4BDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h833F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h4BDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #688 cc7fe1bb-ba60-473c-80b8-33c30f495825)");
unit.assert_eq16(16'h8340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #688 a494c543-fac8-4bce-ad12-4799d083805b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 a7c74b7c-6d51-4f1e-97f2-f950ab7cb46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 65a41aa2-1e31-44cf-9534-26f279b50788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 7e4363fc-b620-4329-abc6-eb8c279e852e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 f9d3bcdf-5444-438a-9d78-3363481b9289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 660593a6-ab64-4634-ac44-a77fe5d0b496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 e71da754-756a-4d2f-9471-984b5d73b177)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD6AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'hB8E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #689 163ac7e6-5541-4831-b636-8dc6b7c7deef)");
unit.assert_eq16(16'hD6AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #689 a36c77c6-b747-4ef4-bd23-fafe7f73a1f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 f7c21600-9cf2-41a0-9d90-d1e16199f4b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 5071e99f-9590-4496-ae27-ab09c6a465ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 4e5abc12-ac40-424b-90ce-ed53dc9db928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 6a3e880a-4414-4c51-88a7-2c7efa6797a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 718f5fa3-a87b-484c-bf6e-75993173516d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 c8be3ab4-3cf3-43ca-b421-9d72895459bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4AC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC40A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h4AC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #690 8abad3e8-1185-4116-bfe1-e5a12965e431)");
unit.assert_eq16(16'hC40B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #690 8ef69b21-1750-492f-a91f-0da976760771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 f73159f8-9cc5-4d95-aa1a-5862973410f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 e7ee06f8-a30b-4b5c-b9ab-5ea955f0a6e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 c089f969-c063-476e-b37d-51d257be04b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 5b03d180-ad21-4f3c-b3b9-615dec62aafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 19636ab4-df89-4047-a7bf-c5ba6db40d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 32dd2456-776e-4456-b29c-696acb397941)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC35C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'hC35C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #691 418f7e0e-0fa5-42d0-a239-f6e9b5ca7b50)");
unit.assert_eq16(16'h81B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #691 d02d0c0c-3fa2-4ddd-8c21-a8cb326b8f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 5bdf6827-18ed-4d83-aafe-2def11a817f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 d8a00a22-da43-40c6-b527-fecc1c713ec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 9351f672-b79f-4df3-931f-67347245f59e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 289d5c8a-d4c7-4e49-9de3-4067048abb8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 0f51ce96-005c-4b1f-98f1-080537a84295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 07165503-cb70-47bd-96d8-05b6897cc2c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'hBAC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #692 8c530786-5542-473a-918d-b28818101218)");
unit.assert_eq16(16'h4EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #692 b6829384-4285-464f-942a-7eeddff512b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 5268dfbe-0616-47db-be73-0750e0b71e9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 4269ea7b-d971-4285-b144-834c0eafbb85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 54874c85-d41e-4b85-8d45-4fe4814fbb25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 3e2348fd-b0cb-4aae-b419-4c8836f730ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 e5cda6f0-0557-4646-a7dc-bd164680919e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 cc2edca4-6ee6-447c-b627-07c6927e27c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'hDA09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #693 8f791b16-7aee-420e-be9d-829f2e30f994)");
unit.assert_eq16(16'hAFC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #693 bb9b4c2a-6293-435e-b210-6f9d941836cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 4ca3e2cd-3892-4744-91ec-e2d6bb42d613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 7eb94f2e-c417-4019-b475-51eb98426016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 9067060a-e2db-4dcb-811d-e3f7bd73675e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 a1ccd3f7-61cc-4354-9fc4-b7703b45dd74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 0c3cb3f1-8c61-42ef-a5f4-243318fccb28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 42bd8572-093f-4a5f-b953-3218d2c6a699)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7DA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'hBB3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #694 bd9695ec-5cd0-4daf-9a8e-316e16de4594)");
unit.assert_eq16(16'h7DA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #694 b7577579-7cfd-48ce-a8d0-3805c1a72c24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 909db389-38c8-45e7-89f5-ae1cd526e369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 aa5d4589-ccfa-405e-ac4e-ad8601cdb6e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 b2a40c6f-c828-4633-9628-ae4509971293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 1ac0af38-1aea-4ec4-9113-7ee76edc2e1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 17378a5e-7515-45f2-9433-31a76277bf0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 072d86e5-c918-494a-80b3-d62f49707c52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5FEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h5FEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #695 bee8d758-094d-46fc-b387-76f9b462c39d)");
unit.assert_eq16(16'h6A83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #695 2745704c-53f0-48f7-9979-7559ad89c326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 770ec99c-870f-4fbb-8cdd-4ce7d7cfc486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 c8a20286-4a89-4064-ae2b-3405ece49129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 838add77-3f00-4997-8c83-e28aab9167c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 a8411a44-f649-4d2c-9e3e-2da0f5733b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 cc4ad1c8-82ed-45db-9cb0-f6cb00c8db60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 6e4facef-c422-44a1-85e7-529e0a75593f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD999;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'hD999, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #696 d2d1e2bf-f895-4f02-af35-295b0ff757fd)");
unit.assert_eq16(16'h50BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #696 912d7a48-4409-411b-b948-a22f9e3ad4ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 c09035e5-4a38-4e91-aead-f55833407e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 4aefc9c9-3624-408c-a6b8-151bccb30cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 9e110cb1-e88e-4d6e-9f00-ec735ba489de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 ab3b2534-b14d-4858-8903-e0578ed65c3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 8349cf87-ad6e-44a9-b754-bdb645320c70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 b4e5313b-72c7-42f7-bb88-664f1168f48b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'hFE3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #697 d841ce60-43a7-496b-b7be-712cb0a05def)");
unit.assert_eq16(16'h9F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #697 8ddf2902-64e3-4cc4-b404-cee7a8346e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 6dd70f4d-e0b5-4516-9210-4cd0c89894f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 7d24b288-8245-4aac-9a1d-1b52e1a0d9ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 b71c104c-81e1-4eb2-b902-a1e4b6ab2853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 5f3e03de-2dc6-4dd2-b0b2-7ddd129920d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 477c6fd3-e915-4949-be74-ffe7fe9f4d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 d32afd9e-e50b-4046-b73b-dd8185c5aa84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h1B2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #698 4e45f883-5d86-4c6e-a270-e4efece0a621)");
unit.assert_eq16(16'h01ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #698 8b2fc890-0ae2-4baf-8fc3-11d135a3cc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 cc13ff42-2662-4b5f-8c40-f8b897bdc160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 cd432081-fe88-4dba-a9c1-a81a963c67f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 eb8e9e94-5082-4999-a68d-99a86e07db6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 9ab3e4a8-8f5a-46d5-99a6-4282c47b0f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 ef9ec51f-5a24-471e-8ad1-15384b00d964)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 f795aee1-7286-47de-aaf5-d244d4fbfe4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA83E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'hA83E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #699 f5aa27a0-46ee-4a3e-87fe-569ac17ff86f)");
unit.assert_eq16(16'hD986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #699 0b799511-f897-4e85-9b3e-88fa9838fe55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 33c2955f-f083-408e-b2e2-77315fd4030c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 2db10b6c-37a6-4868-9afe-5100200bdec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 389e9d86-8bc5-4118-ad47-c399b70ce196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 7f1268b8-226f-47ba-9cf4-5daac27cc83d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 d5a1fae6-9caf-460f-935b-21808ebc0d1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 fb89ac11-d649-435d-84d3-6b4ad9aec332)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD241;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'hD241, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #700 50ef1484-d399-48ec-8c01-bec2a534a5ac)");
unit.assert_eq16(16'h2B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #700 64a484e3-7232-4110-9d95-06b3eee79708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 4ce64eae-0e1d-4434-af96-739dca11c0e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 dd9532db-3a41-4460-9880-2bdb39fe72d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 7a581761-9abc-4b6b-8761-268e4d27db89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 7fcde16c-bbeb-44b5-9aee-e47b640fd897)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 3d3d213d-d038-49b1-bf39-5583e87661df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 248a91bf-97db-4ffc-a307-d68e9ed054e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h07D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #701 7527d52b-5563-4b94-87d8-df5ca06b7f99)");
unit.assert_eq16(16'h57ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #701 0edb3266-407a-4e8e-83d7-18028cc7c728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 1b6abe6e-c002-44d4-af05-8a644ff362c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 840ada6c-7b60-48c4-8868-de270e4a33da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 22540562-cc67-4303-8e36-e90f6a6383e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 bac132ef-e4ec-4fbf-8427-00fbea2c4928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 392a27a6-bf11-4b03-ab4d-26dcde4e019d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 b3f8a4f0-8ea1-4683-88ca-8ab37a58256f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF080;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'hF080, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #702 d2bb1d99-b57e-45d3-852a-f8bc4341b018)");
unit.assert_eq16(16'h8C41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #702 6ee98bb0-c5cf-4177-aadd-0207e30f9849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 948bfec3-7621-4e1a-983b-afa3edf912c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 80872e61-5626-48af-9d43-86e4b2fe64cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 5a40e649-f09a-4c41-8039-16b5c206a070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 a1aaa7f6-0340-4d1b-aa2a-3afb998a6378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 0ddb53c9-a2cb-47e9-8cff-374d7b5a38bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 70f70adc-cddc-42df-bfaf-1f7e29436c45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3296;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h3296, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #703 c56e82ce-973c-4edf-bffe-93bc8fa5d025)");
unit.assert_eq16(16'hA458, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #703 ddbbec90-eae4-457c-9c86-a0e9dbfca5f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 80bdb63d-f084-4843-b3cb-10c95f8a5a48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 61f1b029-18e1-4b67-a197-2909590366f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 3d7c31fd-ea3b-41fe-8f01-b0c235186c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 66f66749-6352-4c0c-a2ef-dbe40cd4b9e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 6fa50ab8-41d6-4565-9f60-4b5e00b0cf14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 9df468da-1126-4ebe-ab59-7305246e5d85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h323F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h1DCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #704 63a4a70d-76b1-4155-a7e2-b5a1e7ecb284)");
unit.assert_eq16(16'h3240, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #704 32fa7047-7794-4e55-9d8d-422a126e6f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 091b5ace-5fb5-4d3d-8d7c-f20a6ad289c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 657b6af9-7463-4fcd-8f95-07eb34557958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 8e51b144-7e73-4012-ba40-1df537330479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 77546607-8595-4285-94d9-1142be75c7d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 31064315-07ad-4fc4-bc8f-badb54d94dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 293ad092-35ba-44ea-862e-a23d1f033669)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h72EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h72EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #705 fade7b46-704e-49b3-be09-350b768ed6d6)");
unit.assert_eq16(16'h2FDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #705 d5587f31-a6e1-42f6-bef5-c1932b2b2680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 e00d05c6-6e1e-4a37-9ac6-ddb2c818c685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 bc39a9c0-3bf8-4809-9d47-864c87471710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 c913852a-e2a8-48c1-b8f8-fe0cf944b033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 727a0be8-3e97-442b-b353-6f050af0271a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 ccbe8072-3e0e-4848-be21-15cdae7a8500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 85b0000c-943f-466a-88fb-6346e09ce090)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5EAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'hE7F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #706 1dff3e01-d527-47a6-9fe7-3da0f9f736bc)");
unit.assert_eq16(16'h5EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #706 825c399d-15e0-468d-8b68-3289ffddcfc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 47a8a341-1558-4870-84dc-66b0ba17520e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 267fd7ab-9d32-4b21-b4c6-5140cdf8861b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 15fd5ab7-41f3-40de-99af-5c101e9add2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 e0013803-ed4c-4b94-816c-58d7d8698bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 80511c18-ba7f-49e0-a9f0-32b2b1dedab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 43feca32-7e3b-4cd6-adc7-23dfc8656581)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0516;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h0516, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #707 840e4766-6bc0-4679-8843-965719b25833)");
unit.assert_eq16(16'hCC6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #707 b59e5e8c-ef24-4bf3-9484-1420f47d834d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 7e49c2dd-d0f5-4417-a906-7604b9532bd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 086143e5-66de-4910-a377-3a14c538c5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 c1fb4921-6fab-413b-8085-9f2ae17ef166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 84eb7e89-f919-460d-96a4-f0d66549fbd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 532962e5-9c40-48c0-a84e-d48f508c8e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 10bd03b8-7284-4e50-8454-bc9402fb00f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD33A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'hD33A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #708 c84a6739-148c-47b8-8bb1-528579b1baf6)");
unit.assert_eq16(16'h9F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #708 1cf4a7c7-0c48-4584-af8a-20d8a871b725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 492b574c-69f7-4cff-8b89-3a6ced85ce46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 84959369-f6b1-4878-8830-a02710e802ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 36255442-61b1-4de8-ba6f-1261921a944e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 a4b90af0-f853-42c7-a91c-a3a1b2ffc63b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 c1d66091-9d43-4331-b52b-dbffc7257248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 4bcbd98e-1ec9-4faa-90d2-9e2e95490dc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'hEC50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #709 73a5bcbb-f680-455f-be6f-09764b28fed4)");
unit.assert_eq16(16'h2D6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #709 643f797b-6570-4060-b109-e1e3984198ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 3b277895-35f4-4bb4-8221-134853a5f5b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 339e282b-c545-450b-9c9b-c122c3dd6e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 dbf1fc6e-87d6-4819-87c0-66f01d5cfc4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 157374cb-c8d9-47c5-8f08-2cca6ae06fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 78eea11c-bd4c-4a73-9746-f8dc26d6c6e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 f8f00d8a-00d1-48dc-bcfe-508ad63defbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h034A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA402;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h034A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #710 2ef5767b-dd5a-4ad0-851c-8a53849d4c66)");
unit.assert_eq16(16'hA403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #710 cc72226b-b8bd-4058-acf7-a21c79dc5673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 501add17-a75d-4fca-925c-ec938bd7dd5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 e1eca46b-7597-493a-8391-6a4edb031953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 38fd58c3-90a2-40a8-852a-e530a0e89793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 e935500a-2edd-437b-88d8-e79dc0df48a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 0d7d3d62-6f83-4eb2-8090-4543817b820f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 da5905f4-1029-4805-9fbc-1305f6e7ebf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAAC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'hAAC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #711 54c8164a-6da9-4e2b-af1f-31c183a4adc5)");
unit.assert_eq16(16'h1FA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #711 f53e5c51-ad76-4565-84c9-7f2550c439c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 8acc4fe7-f26c-4434-a552-07e8bd2dcfd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 cef5fbf4-4930-40f3-afa4-5d06cf3d07c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 cd2db811-dea8-4962-9c66-72b555032107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 316bdaec-8943-4c9f-acde-1c607f83a38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 90a824b7-e50d-4e8f-8625-1a602604f055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 811b83f2-19de-4c9e-add5-30aff3c75358)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF9A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6885;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'hF9A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #712 ae8c05a7-9936-4034-b234-00e09d90c0b6)");
unit.assert_eq16(16'h6886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #712 9997675b-9fa5-4ec8-a92e-dc192d84ea3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 be36e015-6adb-4beb-979c-3321e4b49525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 6e219d96-3a3f-421e-a58d-ffd8fdcd2608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 7d1b0d58-75ea-4532-83f0-84e1e8c4b3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 a8fda612-361a-430a-b1a4-eceb89705f5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 5e8cb0af-14ac-445e-87dd-4db3f0ab5172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 7e9b7b2f-81b2-4ee9-ad82-cb6946057a1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB646;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h61D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #713 ef67076b-aa39-44c1-bf1e-ca84317d9884)");
unit.assert_eq16(16'hB647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #713 9733d9ed-5b15-488d-adf0-614baa888ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 4778e581-2d7a-4486-be33-71bfa4725aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 6c10dbdc-135f-41ff-8a89-a8d55461bf41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 51708a77-facb-4809-ad12-13fa1644838c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 5e604c15-bb2c-4ea6-9972-eb14f9f1b93f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 b789a202-b687-442d-bf52-a0ac31f29222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 9899a8a5-8697-418c-b550-bfcbb912f57b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC8E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h7BDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #714 f1dd33b2-c1f8-4851-a068-7424c62752d8)");
unit.assert_eq16(16'hC8EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #714 4176c4e3-eee0-4bad-9937-0d77124f089d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 3c736ebd-c48f-4e67-bc7a-7436177a0a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 842b1c5c-935e-494a-95b7-f6b205a6aaae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 6ca1c4c2-b8e6-42b3-b605-f77f2a6edc4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 1e0b7489-8668-4c7d-a9a2-082f2e6328d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 e531f1b3-a7a0-4052-bf6b-8379620decd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 54bdddc5-4cf4-460f-ae87-348ff2f4750e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2231;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h00DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #715 585e39fc-73a7-456f-891d-56afd1765682)");
unit.assert_eq16(16'h2232, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #715 7a4fa4ab-e6cb-4c9b-a522-958d095fba41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 1bde4209-b4a8-4a51-bbe4-2c80401f84e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 7e722ace-c02f-4f63-b8cd-79c725f00172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 e141f309-7134-4ff7-b841-cabd27298d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 765c4fe9-fde2-4d58-a9b5-0a154f8516d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 91406864-c589-48a8-b3a7-0954300a9ca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 60d1ca11-4fb5-44ee-af07-f15c64fa9225)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'hEE08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #716 8931ab98-e35c-4654-8251-c9bafe629cac)");
unit.assert_eq16(16'h6AA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #716 4be866d2-4d2e-4a07-819b-75836fac03fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 20949ffa-3d5a-4a00-8001-2e4e5ac73700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 b88eb0b7-941a-4205-9a7b-673dbfb5d66c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 64b21a67-e2d7-4045-aa3c-7b490bb1d1a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 df1fa684-4a92-4031-8373-48a6d3a30275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 ec280e22-363d-432e-864f-f2ad170d3abb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 9778b148-ba77-456a-95e2-bdfe4597014d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA940;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'hD5B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #717 f3d2bd9a-c5e5-4c80-bfb4-0f578e38032f)");
unit.assert_eq16(16'hA941, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #717 cecb1f99-c1b9-4898-a3b1-e30453f4d586)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 ade4ec3f-ac0e-4f4f-b21f-b0a0739372da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 6796be2a-e099-4593-8122-68aa90732910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 30e9e583-9662-4c4f-9051-594595c829d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 878f336c-7bf0-4f8d-8426-3fc7d7e22428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 2e1da1e9-ea31-4b37-be83-d06fbe7e7c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 dce3cd0a-aa85-40f8-811a-3a42984f533d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h6C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #718 6a9374cc-4f53-4af0-a947-0bec675ed7ef)");
unit.assert_eq16(16'h3EEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #718 20f57556-a179-4b10-8736-38418f2ccb26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 489febb9-428d-4eb4-894f-d6f3a5b2a0af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 4648ffd3-55c7-4c80-92c2-a025b600caa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 00f8049a-597f-42bb-82c6-537da3f32636)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 0e1633dd-f6b6-4b9a-b7e6-bfa40cb58a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 794e3620-ae3d-4c9d-843b-9246e91648e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 361b897e-a38b-4f2e-98af-233a69781270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3228;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDDA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h3228, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #719 aa461eb6-08af-434f-8ff2-e8d8f182743c)");
unit.assert_eq16(16'hDDA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #719 624827fb-e52c-49fb-9b06-ae948c9465ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 5ce19772-bcc2-4741-90dc-2572e43a0b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 59ffe003-5088-414b-9568-e38a7c98587d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 fdd837c1-0ebc-4481-9334-e8cf998f9463)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 304ef7ac-9323-40df-b16e-f04b6a38a383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 a8bc0a59-23bf-4bdc-a6cd-5cd3184b6826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 8226727e-f5fb-4ff1-8023-8988d9df83df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hED58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'hEDBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #720 e2267c5d-7bc1-4d68-9a79-6716ae27388e)");
unit.assert_eq16(16'hED59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #720 c29776f8-bb9b-4aad-9d81-022bc508ebbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 5853f22c-8190-40f2-9dcf-210d159f2932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 bd36a8ea-0e46-4241-ba01-1546e65ae07c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 3b7e1568-2c46-46bc-98f7-afa8b56d0a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 c1f69a00-9816-49a4-80e0-6435373b0b21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 773d58bc-48bc-47b3-b8de-ba2a10183bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 7ad7edd4-08e4-4963-87af-1817d8583651)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h668A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h379E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h668A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #721 f080e8c5-e47a-4c33-bd70-cbbf21eff774)");
unit.assert_eq16(16'h379F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #721 c3e6451a-f528-439b-889a-158568b2d1bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 d3db5e32-170c-440d-a9d2-24e570eca56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 730b0f09-88ac-422e-bc37-0b3dea67b66e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 fdf7d89b-c56f-4078-ab92-face5537119f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 6ac5c89b-2ca9-473f-9f80-bb6acfeaf959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 3ead54ef-04a8-4ac9-912a-44a4b6d0c985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 3d3d82cf-4dba-42c6-8cb8-3bd4610d8b78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h38BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'hFE4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #722 4adf81c2-5ec7-48e1-8756-f7deeeee041b)");
unit.assert_eq16(16'h38BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #722 0428594a-24a9-4366-90d4-cd79953b75b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 9f4dc253-2f60-4d29-aeb1-e0b0c4c4eb88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 499772c5-97bb-410a-b0af-7c5e817663e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 90d5fea0-2fb1-4d5b-b1f9-4947b80fe81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 2130530c-8b18-4787-8eed-29a290039cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 dd16dc01-c0d1-43e4-8b54-96e2b5892628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 73c1ef93-9de8-46ad-b770-8de55bbbf5c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5BEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1381;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h5BEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #723 36dda30d-167d-426e-8f74-27b47595d529)");
unit.assert_eq16(16'h1382, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #723 687ae55a-53c2-4e20-a76e-e2fc299f1397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 36c0287b-8ec5-491c-86b4-9d3c20c040f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 6ce6fd2a-8c10-4288-9d59-ea633d30aced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 e0c39ec7-ff7c-4f49-bffe-f4ba85671906)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 9e23f510-a159-4b2f-8ba1-9f911d8e0e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 387de996-660b-4271-9aa4-9620eaf4fed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 7fed7950-cd34-4421-8da1-847884bac02e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDAA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6636;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'hDAA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #724 978de960-af70-494a-af97-1292e312e45a)");
unit.assert_eq16(16'h6637, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #724 5814a52d-fc2d-4d22-ad91-45a9f0b63fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 342942c9-bca5-4a84-8bf6-c16b921d0632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 8f38d368-a341-4655-8952-85298a83cb4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 b523b5c4-63d1-451c-b0b1-c1e8c3ff8226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 63a18464-c7aa-4caa-962d-8cc7f2415d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 41bfccc5-2a3b-44b1-9e2b-dcfa788b3002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 1836086c-33d9-47ac-bdc6-f1ca08e7e6c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3721;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6612;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h3721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #725 09cbc244-9aa3-4f8c-bf3d-3dd106254e47)");
unit.assert_eq16(16'h6613, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #725 213858d8-d707-43d7-92c3-b837d12d410d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 dd712aad-f54b-4ec4-bb60-e9b3f4604b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 a5b40b01-ae31-4ee4-8afb-d2a841bba6c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 68aa50c5-89a2-43f1-a4cf-66302cdfb97e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 610b73ca-75f1-4e20-93f0-dc73f370d3bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 c9c15975-4934-4521-bc30-07cf6ea5e6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 d2255b5a-3de1-4bf4-85e6-84e27444938e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h01D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #726 004c9df4-758b-449e-bc33-0891955df7f2)");
unit.assert_eq16(16'hA6CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #726 9094dc05-2261-4011-b4f1-3b0a0a831966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 ed1c9d60-ee58-4cee-9693-8d56ce4247ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 ee5d0d79-7b1a-49a4-ba61-0d9afab7cdaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 75368f65-448c-40ff-8fca-f6ec0dbe3ad3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 6dd96964-de7e-4ad4-95ec-0a511a9bd118)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 02c1014d-87a5-4406-b493-0c32a21e83a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 4a62a5cd-84e0-47ad-ad92-5dc24e85fc02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB056;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'hB056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #727 30d38f89-4f14-4d72-b06a-f3b54648ffde)");
unit.assert_eq16(16'h72FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #727 073fbcca-b99f-41bc-8d39-5ac8277fd1cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 f5ed8f5a-20c5-461e-b4e1-5584211d317e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 6fb38023-08dd-4b6a-b6e9-fd1d54089278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 900cb253-132e-41b6-b7c5-fb094e526280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 ebc95bf0-90ef-42d4-b9f6-819bb2122db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 d119172b-4a44-416c-9bd4-324c16786b49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 21b98282-a016-41d6-ae71-b24ac0f22bed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h85AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'hB8AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #728 ecb2a5ef-5e4c-44a9-9b66-1cc12eea6dbb)");
unit.assert_eq16(16'h85AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #728 11fe01f5-0260-4a8d-8356-a7dc2e980049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 91e655d9-40d8-43b0-8dfc-7c2bab8e14e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 c91b4867-add0-4f19-a290-1f45107860ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 215684db-5073-4ae5-a565-6a6b042ce29f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 6d98c6ba-5559-4d6d-9ae8-58f11d43ee79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 2e6a9a03-d072-4249-8793-a55a41e91427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 20a868cf-119c-434d-82f0-811263e86331)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'hC7D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #729 ab27735f-8f1f-43bf-8e1d-2a02a60f2d52)");
unit.assert_eq16(16'h14F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #729 dd58014f-c001-4ec5-bd1d-d91a164d1ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 c00cb83d-17c9-4c73-8a91-84313ce960e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 10db4b45-5722-4a84-89cb-e0b092bb488f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 eb44b2b2-448a-4706-accc-c3ddace3f7a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 d040fb8c-dad1-4f58-970c-6499f52de564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 1c586eef-e8d9-46b1-939e-463d4fc54c23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 acc0785c-a4d1-4c51-9a29-4fa7214e28ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF928;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h0F4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #730 0b51bbdb-a5c9-4c0f-baa1-03411245c741)");
unit.assert_eq16(16'hF929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #730 7148e251-1b8b-44f6-b461-a21112e6a28f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 42fa2880-eaa5-46ba-a570-c8819df38a24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 ed41ff82-7913-47be-88be-9e8b648caa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 a21b9f93-2223-4387-90b2-24d7266d6e0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 79ef587a-12b3-41a3-8c79-8a1e6c18f097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 1f7d389b-7907-4bbc-8643-f3417029fd0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 4e3fb1dc-97b4-4ef3-b83b-31d108c16c77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7755;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h7755, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #731 1b6956e8-068a-4ef9-bf20-2d380d704a80)");
unit.assert_eq16(16'h5D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #731 b6feba17-212f-4015-a21d-6e24da57c165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 9c0de635-6a1a-43f1-a372-0fe69f977151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 881a4c3f-38fb-4282-a05d-945e61c5afc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 08fccc64-8911-4fd2-bdb8-cdf3104018a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 869d9790-dbcb-45a7-916a-32c3941afb78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 02fb9a8f-4fac-45e4-ae14-5eeff23437fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 9546a163-0f81-4c93-8503-49a58ffc820e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h638F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'h2C1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #732 3eadc65d-6d7a-4e65-b614-9df7f037b550)");
unit.assert_eq16(16'h6390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #732 5c3a5c7f-104d-4de0-8f01-e9800e8ffc89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 1c5d694d-34af-45a9-99c4-54a76186006f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 2f56f041-acf7-492f-a9cc-82c9de152df9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 c917682d-fca3-4096-8086-46d0127f987a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 b0bf7362-4b83-4826-a4ce-20bb36661631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 bce1ab8e-707b-48ef-9832-18afa1e218dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 ced883ff-4587-46bc-b495-f15b28bc0741)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h877F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h877F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #733 bfb72400-0ff9-4b05-a0ce-bb045d0a68d2)");
unit.assert_eq16(16'hFFBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #733 48328da1-7361-4768-9794-74c8e448e967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 5dccb7fc-4e5c-40b8-8790-6b6ff25fa255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 e0596ecf-c0b6-4fda-923b-042710271e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 4eecdae7-a3fb-4e47-b581-5fb3f3c40681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 13e288f0-d583-430e-9750-1fabbeda1b79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 cff6defe-512b-48e6-81aa-e8fb9e4f2558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 eac32458-2308-472b-bda9-9f15e62404bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1BA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h97F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h1BA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #734 3ce07bca-1341-4134-929a-982e46ac4bdf)");
unit.assert_eq16(16'h97F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #734 03d0d753-9333-42d9-884c-98faeb2d5d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 916c4d8f-246f-46a8-b39a-c8ec88831865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 380b7510-c46a-4870-829f-f4df021c6080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 919eaf4d-a11c-4209-a7cc-faf3b5180e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 17505901-d2a7-44b8-af4b-940335becc16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 29942c13-4c17-4fa2-b9d5-7d6dc51914ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 c3dcfdc3-86c1-4a17-9f1f-92b1d6b95a1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h7D50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #735 2049f3d4-d0d9-4c48-90a9-0704ce07f4ce)");
unit.assert_eq16(16'h2C9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #735 8e9a2384-b102-4896-b620-5b9e914a6b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 d35bf581-f164-41e4-9492-fd6fccf65a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 73c6a60b-f3f8-4a66-b18e-6dcc0c3cb25b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 874d5217-1332-438d-a114-6c7acc10ce3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 c5e7cf34-1a5f-4057-9139-47b4e11b5494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 a63c35e5-f8c8-4dcc-a64b-bb2bff7727f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 a3d7af79-cc35-4af0-9170-dfae0fad9ad9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'hE2F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #736 e8340ea9-fa5a-47e7-9682-c6c91d86dafe)");
unit.assert_eq16(16'hA5C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #736 a2ac610f-1c19-4ad4-9b99-f7e09cd16706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 8bdb827c-b0e7-4900-879f-ebeff64d5e5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 ce559583-3ce6-4eee-b883-b9945a2387fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 2115fcce-f7c1-4316-96c7-82053d1032fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 779ac07b-8a20-490a-a407-12b95dadfd69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 63e28627-8a5e-44ec-9706-860f814b9b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 f0528054-8ecc-40c4-b67a-c0f1c81338e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE8F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'hE8F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #737 02ec0418-ac94-45a6-8f34-ab260df6fe38)");
unit.assert_eq16(16'h18D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #737 49c93c47-0a49-402d-8290-02d45261a2a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 d1748eed-ddc1-482f-895e-aea1ce5e1b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 b8048300-ef86-452d-8eed-0e07ac42410f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 bdc98454-74e1-41c0-8499-4376a5391363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 e06448cd-f53a-4a95-91f0-3efcf55de7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 a2b43e90-5dcf-4cae-abe7-4497a17e022e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 28fea723-866e-4489-a8ad-1474f65cff5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h4B59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #738 d9c39578-ec94-404e-8df2-b7954639d87b)");
unit.assert_eq16(16'h5A14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #738 bc93070a-9eef-4af0-9957-8c2d19cf40c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 102609e4-d9ae-4808-903b-9cdf8c760620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 10327654-93ce-41d6-92bb-43eac2d5135b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 0436baf5-65b1-44b8-a814-b138d13ba59f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 ee9fcc5d-7d23-4041-89aa-14315f10374e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 065c0cbc-a4ee-4611-9741-dc0761371f63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 b0eca306-4b34-4217-8240-b60e69c8d768)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA77B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'hA77B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #739 def71b30-fe43-48cb-a487-f35e2c257574)");
unit.assert_eq16(16'h077F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #739 7332926d-8962-43e0-826a-6459e3859f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 aabb403a-b290-4483-a02b-05ed22217092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 60a2500d-2d64-4b20-aa9d-45512d036c58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 a0ce32b5-d766-4dd2-a67b-90de8aa21b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 d9ca433f-df4d-4412-9b65-5bfc81d63df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 5d47ea59-42a4-4efe-a214-9de6aec12ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 fc138bf0-7b74-4233-a08a-af0729591abb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEDE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'hED6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #740 3727f10a-6152-433f-a66b-e5a414779fda)");
unit.assert_eq16(16'hEDE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #740 039c5a1d-a49c-4cf2-a983-cf998150d022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 8c557327-ba89-4e73-bb33-9d815de46bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 b9483b42-0cd6-4efc-88f8-662c859af0d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 be0df54b-561f-4111-b00f-7d03bebcb1af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 f81b8fa7-4f7e-48a5-bf1a-f25a935e0152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 100c987b-2115-4747-a2c5-5d22a979edce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 14ea608c-61f2-49ef-912b-137be45c22d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h5D62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #741 b58d215a-bb51-461a-a9f6-811a8f720300)");
unit.assert_eq16(16'hCC86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #741 aee71095-4449-4ac4-ac30-ffb2b3d5fa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 d93e101f-d99c-47ef-b212-75383c41070e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 7f85ef2c-8dcf-464c-a11a-6a2d53366aee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 c4e92a3b-cb0d-4a24-a9b0-62d4ec2264f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 731d11c1-38fa-4373-a082-1908768513df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 d713e971-a25b-407f-af7a-227bd5932dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 9bcdd3b8-4e6b-4d78-a68b-2e9a8887c743)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h7A3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #742 fd9ab1dc-a2a2-44bf-baa3-41b1052ab3d6)");
unit.assert_eq16(16'h46A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #742 40419f03-2ab1-4e8b-b08d-0fc797fac1ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 9c6aab7f-18a1-4b5f-9bed-83a57f3fe559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 3fb5ef88-44c2-4f71-9ac4-521d7a3ea7c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 4c8fbdbe-003d-4ef3-a571-994cefd59185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 d8775e4b-536d-42f1-8833-031f236f695f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 7a10d053-2df3-44ae-aac1-56fa763c2dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 b9f4d11c-bc80-4f4d-a241-9d33c2bebecb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h2EF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #743 234ac1d1-fbee-465c-b89f-a1d0b7cc7406)");
unit.assert_eq16(16'hBAB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #743 530fc06e-1f16-4ca1-b1f5-058395abb21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 0617358b-b80c-4e43-b69c-772963f5f2b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 20070fa4-ad27-4dc9-9c2c-7ec4c16b952e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 fbf8a000-e28a-40ff-98c3-c8daf2f78297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 061ba47b-6d63-44cd-afd2-459f44fadbdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 cbe66db6-0132-4553-ba7b-e2c783e4ce6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 e2c010a9-2ebf-4b17-ae0b-12c82dc9d2e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h3B90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #744 d4b8c7f6-30be-480e-b5b3-5b2b0ab4d925)");
unit.assert_eq16(16'h1128, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #744 4568537a-72fd-43b9-9d6e-5bd1c277923d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 70592f08-3d12-4c63-9e9f-b184111ba4fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 d432a738-244d-4776-b397-44121b1304f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 a17afc98-e961-4aaf-8adb-57ec40b12ae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 fa76b18c-825a-4dcf-876d-72eba22985e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 1e309b14-a7aa-4aec-93a9-05bcb5e58cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 08de93a9-6df8-4a7a-8ef6-4533efb975b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD033;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h83AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #745 e1a9a90b-4312-4464-8746-72af7127b0e5)");
unit.assert_eq16(16'hD034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #745 e887c087-538b-47ff-aefc-76c78a7dbac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 f2c5386b-48f4-4ea0-8bb0-e62acfe0fffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 7528e0af-b7df-41e2-88e7-ca9868a05e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 43eba770-6614-401a-9db5-85d09036d98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 808c6aac-0c33-492a-a7f6-6ea50acb18ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 829b2b55-34f0-4595-8eb9-1b3c12273152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 61b7bcec-66f3-47db-a827-4bf44e0bec05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC169;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'hDB52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #746 160200ac-fb6a-4811-9f3c-5c6dafe2d4a8)");
unit.assert_eq16(16'hC16A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #746 471c4b06-c727-4e7b-a2a5-37474b39f1e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 caa62b36-d1e0-46d6-be71-6cb4b3cd94c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 e361925a-2d28-48e8-ab51-1ab80b5b1e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 bab00d67-dd2f-4c5e-b637-eff9fa8b5999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 9c2ac53f-2503-43ac-ae38-28d71695eb47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 2f24a2de-63bb-47c0-a162-c6dbf3958a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 85fd616e-7f52-433f-b6f5-df7fcee5bac4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1805;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h8A75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #747 acda0e62-d064-445a-ab46-9d13dddb1b1c)");
unit.assert_eq16(16'h1806, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #747 0cc92c04-a55e-4b48-8068-e8d2178c94f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 ff58ab78-75f6-4fa2-b914-9b4c346be76b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 15f624ee-a196-40c5-90f6-a8abc26f85f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 766174bb-5935-4066-98c6-608556535aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 d4829682-50bc-4e20-8ba9-945d605fe6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 f91a7cda-05f0-4820-baf9-95e0147b3b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 df7b9f6e-292e-4d20-bda3-23753ae24ea4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC46C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'hC46C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #748 ecdeb928-32bc-422c-835a-27f1ac3c10d4)");
unit.assert_eq16(16'hFDE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #748 d563b16e-9151-4351-804d-922f5b655321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 11e51921-43da-42fc-a82a-e12582f76343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 ed0d47df-0af6-4068-a056-d9418939e16b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 ce33f1f4-8f5f-4020-853e-b24571bf00de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 cb29cf0e-3fab-4878-8030-8b884e1ca6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 52ae674f-cd3f-4b8c-9904-afee61db6ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 d2f524bd-faae-4d6a-a938-4ff419d9488e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h52DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #749 def222b6-696f-48fa-8c61-219106d337ed)");
unit.assert_eq16(16'h7C3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #749 ae4ed881-c715-4608-b72a-fae3b003f56d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 b19b72b4-4a96-4c9f-8988-70277330a686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 982ef715-8790-4bd8-8dc7-1536aa15be5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 1c93e111-bd39-4e75-be93-418cbc575c24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 a71cf3f6-e57b-432b-a9fc-508fdae2d9b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 f75b1f8a-087f-413c-b1d6-abfe728b0d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 e818ffb0-67c5-4873-95cf-cd801d2bc77e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6394;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h808A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h6394, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #750 2d67a32b-94e0-411a-8596-0e0e39c15d22)");
unit.assert_eq16(16'h808B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #750 c017b985-120c-43b8-a013-dfc266a87c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 af9a51e9-bb19-445e-bc02-3e2c53535033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 f9e7880c-8cd0-4984-bd51-a65ce3347293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 b07f1b90-0b6c-4383-bb0e-eb59459c2735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 206fc72b-1582-4f9a-a8f9-edf4619ca11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 d45b8f51-9eba-4c2d-9117-70c4ab8bb4d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 399b2aa1-967c-4e95-b8cc-f798ccea89cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h54C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #751 59074726-a51c-47f9-a5bf-2a7f2cd26654)");
unit.assert_eq16(16'h68AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #751 6485c8a3-8814-440f-b3f7-cfee5549690d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 9b9475d7-3e29-4f3f-be76-2db970b3fe68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 117b795d-19ef-4c31-a498-a4cf7fc0b216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 515da860-cd8b-471a-b3ef-074750c99deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 4b8ccafc-5887-4088-ac16-2ec6802a2d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 9bd4fc26-e840-4cf9-a094-29c32d062eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 edd64dab-4a3d-430d-b3ec-10b8d8398533)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h539A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF56C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h539A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #752 5b9b5d21-4ee0-4627-854b-a987adb1f0bc)");
unit.assert_eq16(16'hF56D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #752 047d576a-c1c5-4781-93a2-b5cf94a90c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 a85220b3-c171-4966-b996-2069f9246c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 8198d43f-1609-406e-a25a-f1746b57c9a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 f0ff440b-a452-44d4-9bf3-666f7421a10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 1315af31-4aa3-419a-9b93-34e828bcf182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 fba511cf-9790-42a8-bb33-e02dc4f9f260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 e47a9251-8616-4963-96f0-f855124bb558)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'h0AF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #753 79bacc04-0d6f-432e-8f42-8fad0dcab232)");
unit.assert_eq16(16'h587A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #753 b3547780-63ed-4cdd-a83f-93ab3ec387e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 f704f4e0-16ba-4465-8ce3-8c124094a031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 e5f17b98-81ff-4182-b3df-4f873e7d2ee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 61feaed3-d3e1-49f6-8133-4c9aa0b85012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 8f1641d6-21de-4a65-bd85-75810508f0d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 5766afe0-2aed-4360-8419-eb512f8db70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 f34ec509-575c-445d-921d-171603241297)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'h3BAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #754 67a7be56-d1e3-4179-963f-aaf37bf1eeeb)");
unit.assert_eq16(16'h57EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #754 4e40e030-b064-423a-9d87-292338a5f3f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 8774f5ba-40c0-4a2c-ae91-a5a2bd5dc0cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 447fb1af-35aa-4c2e-bc5c-5bda7143c3ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 6ea55451-34fb-4f97-8d41-6d722c2b4732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 d284b08a-8415-47ba-b959-58f2b851a029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 74ceac3d-682a-4bba-87c3-94553bed2580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 14794079-ffd9-458d-8ed8-2f1bde907985)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'hBB8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #755 ca6d749a-3591-4afb-abbc-a31052c89f9e)");
unit.assert_eq16(16'hB2A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #755 87f44e85-1585-405a-83b7-edd0822cb1dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 fdcd84b6-346c-449e-93e3-94d562eca4d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 7812eef5-40ed-47da-aedb-cc1f3a791182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 f0551307-3318-4eec-940c-d4898b00e828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 16512a31-0ae3-4b0b-a308-094df365457a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 7361282f-3faa-44f8-968f-6dcd8f526b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 94147e18-fc46-4ed6-9797-501efd9f0b71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC367;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'hC367, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #756 97a83370-0b0f-4f12-9be1-820f7432bee5)");
unit.assert_eq16(16'h60E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #756 9553e0f7-a290-41a9-959a-75469a7416eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 f10f9520-b2d3-4491-87ac-7e1bcad7b8fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 3b9a79ee-9b24-4c9f-bca8-5c9ec7226e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 4142d257-e45f-4265-a24a-3686f2b58aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 7f2a4ac8-42ed-430a-9f62-3561fabff291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 85e6aac5-c7f4-4fb1-95b5-c83d0cbe1ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 2baadfb0-90fe-4f15-b112-cf87010280bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA642;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'hEA15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #757 e57c4cbf-c7bd-458b-b05b-86497100c5bd)");
unit.assert_eq16(16'hA643, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #757 21416a91-a7f3-40b2-9d48-d52b1115ca29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 54ec2fa0-ff11-4741-aa7c-da2ef0c5b6aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 4317c4e5-eb30-40f7-a542-a184ee95f70c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 10615918-21c2-4849-b80d-8653154fb84a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 d76f041f-d41c-4dda-8e2c-6f12a232dc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 78690399-7f10-4f16-a3c4-67b368c6d41a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 d218327f-407c-426a-b562-c65e0f91615e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h226F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h226F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #758 5d65d07f-a21f-483c-9bc6-c95752dddcc4)");
unit.assert_eq16(16'h4C87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #758 f8ab8d4a-a9ed-4d2e-82a1-1daed1414ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 6849ccc2-dc7c-43d4-be39-44d357d75097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 225805ee-71ce-4184-87a3-fc35e7bb3d47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 d8c6401d-c648-4aeb-b5d1-f7190c708075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 b8589e74-a3e6-4a18-82c7-9bcaf67d2d92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 2f068064-54f4-4605-9c32-5565fae30fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 1ced4b62-939a-47f6-bae6-c6a606637551)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h422F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h422F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #759 59275ecc-514a-46a3-ac04-18e23f85c4bb)");
unit.assert_eq16(16'hD9A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #759 53d4dd20-cc82-4bfe-a16f-ba5babc2e520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 1bdc06e2-8bc5-4e7e-bd19-49e407d21740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 40b8852c-4c69-43a7-b50b-297f8cbccac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 4ebe0a36-ceaf-470d-b93c-2f541ab6ba2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 b5ab6ea5-03fc-4563-a293-4c67dd6b74c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 c8bfe772-eec4-49a6-8d6f-7c7581f216ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 5c08935e-b955-4e1d-835c-140ef1f1a1dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC56C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h43D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'hC56C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #760 499d770f-06cd-487e-9f8d-fb15f4ee630d)");
unit.assert_eq16(16'h43D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #760 8f7f7199-e0b2-46e6-8ba6-67d6ad485040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 55684f31-30b8-424f-9092-7076aa90c127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 38628c34-fe91-4818-96b9-d0e8c827c200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 3bfcf6ac-19b2-4dc1-9bef-b21bbfc8039b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 11da1a41-df37-44d4-9f9b-205a4e53c60b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 dcd57613-7f54-463a-b559-16969fb5155f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 975ea7fa-c871-4f66-9e1c-05c05f76a218)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF450;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'hA5F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #761 a6002c21-8377-4372-9798-135d7020b939)");
unit.assert_eq16(16'hF451, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #761 35f9706d-4d1d-4c56-ad1c-598e81d90227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 9dae4407-e5bf-4a63-ad3d-588c446d156d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 9eb7d685-a865-4291-a25b-28b4a5bd47c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 b46923ee-9954-4b0e-a776-400908baf64e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 269a9614-6176-4b1d-995d-8135803b6761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 664e5309-916c-4172-bbb4-d920cb7712a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 ffc6b99f-305e-4f3f-b90f-9c41b5c34a64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1269;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h1269, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #762 43c4633a-3881-4f89-a484-240fa0c2a011)");
unit.assert_eq16(16'h2F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #762 de90d172-ae49-4944-a29b-79388f9677fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 fd56d727-825d-4a48-8426-5c52c11ef399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 69a8a038-58aa-466f-a8bb-e3692aa00d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 1906c7d7-ad26-4a17-9db9-d8e9867fee5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 d5eb4084-d358-4978-9949-73e03f4318ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 9edfa910-39d7-45c7-9827-dbe7bc23022f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 9ddce463-b1f1-41b1-8e37-2c158d131ddc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3CE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6DE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h3CE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #763 fcb6c4c2-ac06-4c71-af35-bc72464f7857)");
unit.assert_eq16(16'h6DE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #763 18f13e9a-91df-4517-baa7-75feffd6a71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 047a483f-6fb8-4ee7-868b-8db17006b743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 0778dc3e-c2ae-42db-8bfc-b710649906ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 110b44d5-2f4a-4b41-a183-e0c8a2bbe4bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 3a34774c-2dd2-4019-b6f4-7bf9c6c4c6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 82a7b42d-4ab2-49d9-93b2-0258f3b4f9f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 6a6b4fb2-1cec-4c2d-b6b7-29ee760a46fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h30AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4577;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'h30AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #764 46938393-7915-4587-a719-363b30ec162e)");
unit.assert_eq16(16'h4578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #764 51a1d52a-2028-4c6d-b5bb-b41db79ced80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 02b8b623-b422-4a28-bcee-6d6fc950bc68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 0b1c3521-0c0c-4632-9309-fa3f3dcca456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 fff17552-3283-4b2b-827b-4a1c2edce5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 f1bc784c-a047-4c60-b252-087ffedc0893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 6e0ae7b3-498e-46be-831f-6c1613a869a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 08c970b4-342a-44e0-a9b3-77fbdb996cfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h95E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC321;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h95E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #765 91ae290f-b293-43f0-96b8-0fcee7ba364b)");
unit.assert_eq16(16'hC322, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #765 3bec42e0-91c3-4712-9c35-c01a35b41000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 3d085fc5-d3f2-4d48-8f1d-a541826ba7e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 52c68f8d-8bc3-4ad0-ba09-bc860ff5e973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 7b40165c-ac10-41f0-91a1-56eda1810db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 dab88ae8-dba6-4147-ac82-ab4c058d94fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 993ac2c0-d190-4a4a-a4bc-d7b43f36bc3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 e478101e-c4a6-4d76-ab7c-90d1a2f48eaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2764;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h3E51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #766 f72c3a73-d9e8-4fb4-8073-48fb99f2fddc)");
unit.assert_eq16(16'h2765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #766 062c4790-2547-40b1-b172-a179fcfd1877)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 3522f5fa-82bc-42c5-8f3f-57c4929987d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 1bf2d318-a420-4821-b866-7bf635caa115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 910344e0-56eb-4a9b-9317-13f61fa2061f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 9287f526-da5a-4265-ae48-5569cb7da63e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 1892b6d8-56e5-4063-939f-1bec0e21c711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 09f8e4c8-6fed-49c1-97fc-5799c7e78721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3233;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h3233, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #767 f3985f9b-55a7-4749-8a62-b5b1ec777c78)");
unit.assert_eq16(16'hBA6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #767 7eb3665c-b952-4a01-b8ca-b9d366f197f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 7418e7ce-41e5-46a7-aaef-8f9b4ffc3d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 2d52b4b6-c2a7-4b97-98fe-46237c02823b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 8e707b14-3782-448b-827f-7bd930bfc29c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 d3393c27-1d13-4ab3-b76f-517bf0e952ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 1ad89c88-a749-4e79-a80e-e9d05a44554e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 7f875e34-fe1b-40b0-9035-e41d48cde40b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB223;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h22A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'hB223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #768 8112913e-3888-422d-8b8b-761f92ccaddc)");
unit.assert_eq16(16'h22A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #768 49b8c5b9-420f-4d0d-8186-d100efcc72bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 9cf2857b-6d56-4922-8fbf-2bec72473145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 01a7def1-f6d5-4319-8c29-eedcfa770b8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 31cfa59d-1cca-45a4-86e4-96c184b8de4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 044cda69-f554-49b1-b902-b67dfe715beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 e43ac57f-de45-451b-8cf1-8c9aa077b10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 3dd4fc6e-78be-4c5b-8270-84af7082a902)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h44F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #769 cf6952d6-6f13-4f00-a610-c7ca2b82184e)");
unit.assert_eq16(16'hD1D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #769 686b2eda-2c07-45d8-96d8-5951b5aecd4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 a6f43aaa-f7aa-4534-bc71-22113befc4e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 a09dbd10-20f0-4417-a5aa-0351d9213157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 cecc7584-d1f5-495e-846a-80fe5ff7550d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 86d96b7b-bb99-4973-8223-948adacc284a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 d50311e6-8cdd-4bbc-ae81-35c346e12984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 fa296946-dab3-4f86-bed7-d4866345e4a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1132;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h663A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'h1132, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #770 074a3bfe-d0d3-4eb8-ad88-bd979caffcc0)");
unit.assert_eq16(16'h6639, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #770 1889f9b9-98f4-4773-b314-a0b48f9ed441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 a04f3038-c029-4067-999c-a61fbe6c462f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 0f209ad5-dd63-47ca-8640-4314ede561b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 ce9b8a42-97bd-43e3-9926-47717cc24dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 5cbf78fc-fec6-452c-8557-478945f98094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 5d385a51-7dff-41a9-8283-09c4342bdcf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 c020022e-22a4-4769-bf26-b240c91eb1d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'hFB3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #771 08e327e0-0cdc-4656-973f-14c35ea5d8a4)");
unit.assert_eq16(16'hCAA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #771 bf8a8ece-cbac-4333-bfac-3d7fd7f08fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 a6905e64-f65d-4fe1-ad15-03d08dec46e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 b519e19a-e184-49fd-a172-3c886d3bad1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 27ca58f9-3854-4828-b555-910b629d2d83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 2fb92794-2ac8-431b-ac12-a8e4de462653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 73acf7da-afc1-478c-988f-9cb7dc60ff93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 ad147986-1b7d-437f-83ce-9d6a7a9d9a54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'hC161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #772 f4f384be-03f7-4957-b1a6-7d5a7166eaa8)");
unit.assert_eq16(16'h26D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #772 1a857365-c545-4874-809e-150ff15da3ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 38b34bed-facf-469d-8139-683810b28d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 822fa1df-e30c-4450-aa73-6190b37cfa12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 d7891f95-cdae-40c2-9dd7-54c1748ee634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 5421fde9-3ed5-4d6d-bbe7-02d69156cea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 49aa3705-678f-4cd4-ab35-e36eddcf52cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 2ccc1bae-942d-4e7e-b129-6d011e8a4735)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDAD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h04A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #773 a35fb707-f82e-495c-bebb-a49c58633afd)");
unit.assert_eq16(16'hDAD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #773 46843e66-7a45-48b4-b8a6-f09036305cf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 ff7ba4b0-f494-4e6c-a03e-fa492a4840a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 87e9dfb1-790a-45ab-8e46-0c5be70434ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 cf796029-5d69-43c3-9327-e6cffcf43814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 40d15095-cc71-4a1f-afa8-b40da9920ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 dc185c0b-7b8b-4f16-a33a-3ef3375cda05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 48875644-fa31-431a-a58f-9f2d98aad15a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6BBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h6BBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #774 2d8acab7-33d0-41f8-ac7d-447ecfad185b)");
unit.assert_eq16(16'hCE1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #774 bbb9bf3d-52f5-4d93-967e-bd1106a950f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 03c76c7f-0a7e-4c2d-836c-2aa6534f723b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 588af116-a4bb-4d6a-bbec-217433fbaed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 5418a936-d7fe-41f6-b312-7bc6e28652ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 80551ba0-c382-4a78-b627-e04a44df73e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 5acaa934-4f7e-4c13-a0b9-c4a616769421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 0494119b-0579-414b-a043-57df82566897)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE23D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h4D9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #775 93904ae7-4b47-4216-86cc-89360bd183f4)");
unit.assert_eq16(16'hE23C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #775 a6e8d738-415b-4e39-8e4b-10822cbf348f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 6eb97fb3-1de7-4fda-8c0a-82ae8e0c9693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 56852f3c-d334-45c3-848c-2c03d3cdd094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 cd2cd335-8113-4616-8327-8e534d5e7172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 c44743b1-55a7-46fe-b23a-9e79d7536948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 f324dd70-15ab-48cb-afeb-45c7919c5808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 bb6a0984-7f48-48db-b5d5-20730de518ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3254;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h3254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #776 8ea0d124-4a65-441d-b98f-125af02d83ff)");
unit.assert_eq16(16'h8D31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #776 9bd58ff7-6d0e-49dc-a277-54cbbdac6fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 cbbddc64-fed5-4305-95c8-11f4d9c4108b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 66a4d639-c5c0-4f97-b587-5ce42989c5bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 7a11a5ce-c7b6-46a5-a93a-5083b2c59b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 4b887112-4e9e-4c36-b38a-078819de9e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 88e29baf-d307-4ca3-9cb9-73c5b30183db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 1e898c03-fa25-4736-aebe-2b31520448fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h3F43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #777 9264dfaf-f2d2-42d1-b89b-7d70f629eb16)");
unit.assert_eq16(16'h54E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #777 420864b9-afc0-46a2-b86f-ed10412920e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 be6243ff-c075-4f4d-a3b4-3c331d747748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 ff07d2e1-d149-44f8-9673-e1fbc1d8a684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 1f35434f-4826-4d06-aae0-89d8bf4890d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 19e0f3d3-56a4-4053-8345-b1dafdf25d2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 788904e9-4006-4767-8b1d-35621321fcb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 41c1d387-1d36-4afa-a13f-1aad6c1e3043)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA46F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h293D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'hA46F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #778 9f2fea43-1da0-4c54-a86d-795559588da6)");
unit.assert_eq16(16'h293C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #778 c39418ae-3f2c-43db-86e1-2735ac3c4579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 682066b4-5a8c-490a-b5fc-1246b1f189da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 8e70a839-8b37-476f-a836-d4d4650e2eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 4c16cdd5-8cc4-4d6d-a968-604a766e7b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 f083cea0-53df-41d2-994a-09ddef645792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 cb2f6c15-cbad-4d1f-a17b-32eb2a084917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 c9776f81-a67d-41c5-ba2c-8b49df1b1edb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0579;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'h0579, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #779 1ba71808-64c8-454c-ad39-b943b9396511)");
unit.assert_eq16(16'h4FCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #779 f31553fa-5358-4854-8a82-c6ea74f822d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 c7ea82b5-8193-48f9-a174-614807db2604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 5c939666-2f9d-4202-be45-0242cb276c2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 e68ecb8a-1840-4bdc-9733-bdfb34841d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 238b4d46-b11d-4097-a141-22d1b5f675e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 9925e2ed-e7aa-4c8d-b96a-088a2f7fd29c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 af159806-e945-4330-8450-d295073baf2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE983;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE95D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'hE983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #780 8dfefa71-2a18-4263-a0d8-79cc09d04912)");
unit.assert_eq16(16'hE95C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #780 3fd5236e-77ed-4b04-930a-d1e391130551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 be9fd92c-ad68-4cd8-a453-7d408f45bf3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 2d74c93a-4a0d-4f2d-bad5-7b977e4b7bb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 d73f3425-55c6-43d2-b145-2dba97fdc55b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 2e41ec45-1f76-419f-b629-92ec4a288ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 3ba77969-94c2-4ea2-ad1c-e5b4feca131b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 e685f89c-b7c5-4f6d-b172-325807f14df8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9705;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF33F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'h9705, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #781 ef9a3d48-b81f-4e8a-b13d-dbc80cefe8ff)");
unit.assert_eq16(16'hF33E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #781 7535c634-25fe-42d2-9fca-65d1ff710494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 0e0e8289-e238-4bc8-a549-ee4acb8ba4cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 f8e55829-5337-4fb1-9df3-0d17289667a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 bc4acd34-3ac8-4ead-9b29-1be1b95720ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 497022c5-333b-4962-9c97-1fa66fc87dda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 2405c085-0c94-44a0-8c31-7b90b1a0f9af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 dcf0a831-d6b2-4288-a97e-b6ccbdd11dd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h25D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #782 ccf03d8b-2609-438e-b67a-732d320518b1)");
unit.assert_eq16(16'h72E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #782 19e5bf02-8ab2-4a7f-a116-a603007e636e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 0aee38fd-57fe-49d6-94d0-09d4f88b36d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 cdb136af-9855-44bf-a4ea-34d4409c3a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 9e830450-545e-41c2-8d5e-f1eead4d0525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 96b127dc-76cd-47d8-b36d-bfc2bea77f8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 504a29bd-e1b1-4eb7-a118-79b53982f5fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 102cf651-6280-4aea-b599-ecbd6785793d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBED9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'h19E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #783 83ff98c9-8963-4909-9810-82346544e5b0)");
unit.assert_eq16(16'hBED8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #783 2c4f0f83-0efa-46ac-806f-0ced016abea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 e37514fc-8106-4a81-abb9-9d7610e28843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 5a731671-34e8-4837-af9e-29e24f5ae287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 08d48d04-fe80-4d29-9f08-95cdb7a160eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 a3c4740c-2ac2-497a-9b5a-be6bb9609da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 80ad2717-ac3d-45f0-9a23-b15fc6e05d5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 b51b96e2-67f8-4cc8-8451-ebd8fba805c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h16A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'h16A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #784 562700eb-fa8e-4070-b65a-311818eeb198)");
unit.assert_eq16(16'hECC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #784 dead1fd2-f9d2-40ff-96be-3f802e8655ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 a4fd458f-5ff3-457d-b296-dbe8ea49e0bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 63f15d6e-4c81-47d2-ad4a-22d1c9c6be98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 9d791d0e-bfa1-4d33-8ff1-0a8f84746b8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 7b221114-ecd1-4379-85c4-ce942a198487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 700d4dde-2ea1-485e-80fe-9f26fccb8b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 ce9e7d0e-aced-491f-a606-3766e43bce3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h44EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #785 c02143f8-5b29-4e9b-a321-eb58e3c1ece7)");
unit.assert_eq16(16'h0CA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #785 8cc7605d-9836-474a-b6d4-3babe7042a93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 9eb3905a-f140-4d33-9ce4-a6e04da582a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 58b4f13f-40a4-4c19-a385-d6a2e56f19b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 ac73bca5-bc14-43a4-a77c-06f61699503e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 a510cdc0-9d0b-4bbe-8026-695e93419841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 67e68272-a856-478b-8588-784cd344e279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 33e4801e-d9b7-4763-bdbd-39f395f78eca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h156B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'h156B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #786 8ed97fd1-371d-4ae1-9526-f9466926740b)");
unit.assert_eq16(16'h5B3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #786 0fbc52f9-d5a1-4d2c-921e-c599de016ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 8b1b4914-cb10-49d1-8882-8472bc3dfa59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 3a072b1f-8103-41aa-9812-5f4ed15de712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 e30aadbf-e81b-4f96-87ad-2c86bd1b6963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 60faf185-1aad-44ca-9a87-7cc4e5060d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 572208f9-74cd-4743-be31-330245def846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 c98f131b-d923-4c63-88f6-0f53967072e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6289;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'hDC71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #787 851872d1-376b-434c-ada6-5151f2b08cb6)");
unit.assert_eq16(16'h6288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #787 b2e472d1-fccd-4c5c-adb5-39bccfb4b964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 29829523-e3e4-4d07-afcb-6be7d229ce1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 797fe3a4-8446-4446-9a24-925cb953a706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 672ff072-0bbd-4cb4-a8cf-094ba2cbde14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 0c87ddbb-0b94-42f5-b6ff-6ef74c2e4b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 2dc50093-1c81-44e3-8d72-feb3cbb3fbbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 99d79448-16df-491a-b31c-df70c324c008)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h761C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h451F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h761C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #788 eaf0fb48-4d25-42fb-a3a2-b3cce9b0109c)");
unit.assert_eq16(16'h451E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #788 d6c76151-6241-464d-8d72-bf9e77bf48f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 26f3d3b4-61be-481b-b1da-96f23295bcb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 ff6b7ffd-09cf-4b70-99f0-d866ce3c05b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 dc928f0a-5984-406c-ad83-210164c6fbf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 1892ca18-889e-48da-aa79-9bc7b66425c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 fcb81d40-802b-4882-9ad1-839c7e3a10db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 b0b30441-3747-412d-a669-b2109096fa85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h2A6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #789 55fc80ba-35bd-4fa4-aca9-3e85a039476f)");
unit.assert_eq16(16'hF4A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #789 8042791c-02ac-4af3-acea-654b7d4e1390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 82621db8-171c-458d-8676-0f6915d4ef02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 d51d72b8-7a67-482b-b0f3-e963d4264701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 7e2ee1e4-6835-42ce-963b-a684a13d982d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 05bff9fe-01fb-4e8d-8dbd-a4c055ccf2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 166b83ee-a74e-4c37-a22a-8b25531d259e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 f67a0142-c1f1-4ddd-913c-69c626026871)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9C0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h0BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #790 b20c5f90-ab1c-43bb-b462-3cdd3c52763a)");
unit.assert_eq16(16'h9C0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #790 38257ead-2008-46c2-a070-e51498f7c2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 db7f689e-acbf-402a-856d-f616db093c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 bf11c6b3-436a-4f0a-ad9f-94d9fc9f7ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 eff43b5d-8801-470f-accf-9597f193d3b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 b9f6ecde-7236-4948-95d0-73eb9c489a51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 ed45c0c2-80c3-4f52-b1db-3bbec6b0f9e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 aaad3382-05b9-4445-b7ad-eaa0a907b407)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8ABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8293;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h8ABC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #791 083dfbb7-7672-4b5e-ac33-45ce1a139bc0)");
unit.assert_eq16(16'h8292, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #791 568f2f4d-caac-41c4-97eb-70b81a125558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 0f9b57a8-6082-45d7-9c45-72731391e15b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 ae17e913-9b45-4918-9c52-351cd60246ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 30c324cb-92ca-4cb7-bb06-4b9aad37229f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 f20bdf55-bed0-4cec-bb8d-322d5689aa28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 637f5e30-16bc-4845-a58f-3c340adc5c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 215be879-5dc0-4ebc-bc92-44297c96abb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h868D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h9D53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #792 20cda103-3d3a-4fb3-bce4-91e61bf09e8f)");
unit.assert_eq16(16'h868C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #792 07997e5a-1637-49cb-9e18-2a2fc6625347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 73c2d083-3540-4d4d-8793-d805fff68dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 48d18f10-5c67-4e6c-bb3e-e05467dfe3c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 24a3b02e-d8eb-4ea9-a602-158787acd214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 3f14ed31-627a-4af3-a8c8-6b14d119fb6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 ad3dd8ea-db81-4c67-89ef-17c603ebbd72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 1a27c851-9d22-4c6c-8c19-ee2c0a467817)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'hB3D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #793 1e781ed4-2143-4934-830f-f3e3e8132971)");
unit.assert_eq16(16'h7A08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #793 64509e66-f5db-4f7e-91aa-7fc8c6dc9f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 babcdfc1-60ac-47ac-8a1e-582f5e43de03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 cd80a484-4269-4fb9-bf67-4a452849f2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 650d4af1-4580-4e94-8b59-bae31d7dfb3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 80412dde-8c4e-4ce8-82aa-4b632f2db515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 e344410a-ba0e-406d-98b1-66be6ec220dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 9cb89619-ff1b-4861-8780-c6696f97aaf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h132F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h86A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h132F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #794 ef3993ae-a169-46d2-b1d1-b2b2cea44aad)");
unit.assert_eq16(16'h86A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #794 e0174621-22fa-4f93-871e-eb66240745e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 034877ee-f231-41df-aa77-7c7d48a04d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 e7c635e1-086d-4e5c-a3d9-20bb113894af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 07172509-3497-44a6-a70c-085fc8e74d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 28b63fe1-1291-4f6e-ac92-daa4c8c684e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 50d8f7e7-8699-4944-93cb-f55bee7b3099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 0a2aa3f7-4555-4efd-9b96-354fe40b42e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB915;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB763;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'hB915, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #795 058db3a9-c7f4-4f77-b448-0484b078822f)");
unit.assert_eq16(16'hB762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #795 49683668-f9b0-4191-8080-515775d57ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 c6167ebc-e285-44cf-8a6c-4144cc2a3db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 f1500160-7582-426e-836e-aede50fb9823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 7407d1a6-24a8-44ff-9996-41fb53eefb5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 023b22a9-8f41-42db-8e8d-2de8ef5b4563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 9ea237ce-d674-4049-b7be-938809c7d245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 6eb1b65e-254e-4f71-a2de-5aa5d1548c48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2135;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'h6A9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #796 c38f1ae4-488c-4e89-912b-77ddecc3e0e4)");
unit.assert_eq16(16'h2134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #796 bd3c8207-5534-4526-bd49-960e39a71236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 10630c0c-085c-40b9-895f-5cb2061e4277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 43eac5fc-2384-479a-8840-902645e7544a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 6d66b367-3efe-4688-8e83-a09892d08cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 ea972a4c-9f59-4b53-9721-62ee2c42ce7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 1337d6ca-edd0-4faa-a426-1939a8385fce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 7fb34dfc-4834-461c-9945-31ac038e0532)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h2B44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #797 76bba887-c7d5-4cf1-9aea-fb082739a8c0)");
unit.assert_eq16(16'h9AD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #797 b1e8cc62-25be-4483-875c-d0f743711468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 548daac7-8320-4615-8c6a-320d8233ff94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 72d5ff3a-a8e9-45c5-9cc3-496360060571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 ba47a9b4-5f3d-4968-83a1-ea322f893ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 c30ac001-2a36-4dc6-a629-46a67d4d5c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 aa924d52-5234-436d-a577-da93abac0d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 3ab54e20-e43e-494d-999f-61bd46c4e574)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h183F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h9F91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #798 739aee8c-b08b-4fb7-8921-039a624c2c31)");
unit.assert_eq16(16'h183E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #798 d86b9773-0f5e-4ee7-94d4-3c5c218d8035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 e4bc7279-f247-4124-a0a5-140cfe6c7570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 94d3c70c-4f16-4d16-8c91-3989003f2100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 51003e94-d80c-47e8-a1f8-485ec0207660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 b88c873a-fe1a-4b77-b716-946f158632f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 93f2930c-9f52-4d96-9dfd-5528cfd2d564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 7a722447-6638-40d4-b2be-404acb73baa0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8982;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h8982, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #799 632ee967-394e-4341-842c-b80526001497)");
unit.assert_eq16(16'hBA9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #799 e900cfa4-65bd-431d-8688-d1c8c26469b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 69fb78d1-10db-47f4-b93e-99b4a87e4f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 8cdcd524-3446-48ee-85bf-3f32e6ad9ae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 c16bb047-28c4-485e-bee5-eb127b8d8d03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 2aa235cc-5255-4c56-89eb-f4f61a5bb11a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 ea334e04-0346-4d65-8f94-2f402e328da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 be67ae99-f7be-48fe-a9a3-9fbfe4386cc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA08F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'hA08F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #800 ff4cc7b3-e4d1-4c66-aef0-bc64dc71f899)");
unit.assert_eq16(16'hAF68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #800 f6345cf4-97b3-42e5-9d6b-6132c32e8dd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 eab5db9e-437e-4034-93a0-03590b0d9867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 832f6a7b-d3f5-4cec-96d6-fa2e20386ba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 59caac8d-6988-444c-b489-3aa42cb6a3df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 ee487f9d-43d7-47f8-b33b-8d2b7b607bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 3316cb46-9066-4325-b5f9-9f0dc859ad1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 fe821fc6-7726-4c63-8992-6e233286b839)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h677A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF0AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h677A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #801 b5fc7fa7-aa79-4cd5-a34d-6eb46a711acf)");
unit.assert_eq16(16'hF0AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #801 9d187d35-720f-4de9-9c84-9eb6101d529a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 6ce5f598-9f2a-40ae-8abf-c2a7a07b2769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 ecfec92b-743b-43c0-a76a-2067e00b57cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 2368edc7-4afa-4e38-a9d9-f0f6d474cb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 1c1753c1-9f76-4a64-98c2-d88cd798f159)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 7d21fbdf-3d3f-4b2f-90b1-596189ed97a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 67e975de-c8e0-40bd-9b50-0e620901a33f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h556B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'hE6D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #802 1f22399c-370d-4a69-a269-374aec6575d7)");
unit.assert_eq16(16'h556A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #802 06bdbc63-ff8d-4cdd-8d9b-83948d35b7c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 1421e26b-3dad-44ed-b2b6-dc6ed60e90dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 1efa91ab-a0c1-4c24-8049-e87718f406f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 9a5f240c-3da6-405b-8d4c-c46629fdadba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 3d96c1af-1952-4332-aaee-c7d3b01b5305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 0b57be68-0c46-4a00-ab77-b6bf6ea66ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 a7825cee-b933-470a-b1be-319880687091)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h962C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h19A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #803 210a8cbb-d379-4ed8-8c75-a448699e9d2b)");
unit.assert_eq16(16'h962B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #803 a53aa0dd-cb3f-444c-8360-c7ca5a8b227b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 d82eaacb-d5a2-4eb0-bec3-9ef30aded88c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 0100449c-0991-4fe1-b8b2-4bf0951a289a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 25326782-b760-431d-a714-bfed547ac667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 32d6c08b-9262-40b3-b33c-c8c1079f1d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 ab7fba42-009d-4f60-bdaf-85b8bf801d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 a2bdea28-f799-49b6-a3af-1eebf499763b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF207;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'hF207, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #804 28f5bc2b-6501-4c41-881c-067ffbc7f536)");
unit.assert_eq16(16'hAE7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #804 b53f7823-830a-44ee-8a0e-57c79836edbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 070d8260-9588-4194-b64b-f576e3e13d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 8c12ed67-4407-47c8-86fe-b679f1bcd4b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 ae486348-3785-4069-85a4-4f59a6e796ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 e1422a59-f8af-4b29-b1d9-c467281d03d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 89ce9713-36b0-4951-b341-ca89637c00cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 82ae04f4-9384-46ec-a03d-2e3e8c0eaded)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3829;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h3829, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #805 f1fbc479-b7bd-4e8a-9744-b8d3a774bdd5)");
unit.assert_eq16(16'hAF02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #805 64b4c134-cec8-4f1f-bfe8-15c24a560402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 245e4f0a-84c6-4dc9-9707-fbeb8a3cb9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 5a65cdf6-03cc-49e3-8c89-4a9b1d60d3de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 c3f413d8-146f-40d9-baec-316e12eb7852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 8cc5014f-243d-491e-8e06-03f1e6899728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 c4da667f-f1ab-459f-ad0e-35ec11e2ed69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 da6414aa-1cd4-4dc7-921a-ee8f10084e93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2FD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'h2FD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #806 a0be4f85-9139-4ca9-9ae2-144ce2096610)");
unit.assert_eq16(16'hBE38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #806 10382483-b0a3-4f33-a1c4-ed46d570a2f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 ec5efa7d-576c-403b-8158-efc5f6ae0f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 bf695e1d-4d81-46cc-8d4c-22c7dd25c4fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 c55873c4-3598-4104-9a02-b7f531de9f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 2612b25b-b1f7-40a1-9110-3a74d37d87ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 4af12e10-5985-47e4-842b-bae43855b187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 74bd4a0d-3aad-4567-add9-a620a526c927)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF36F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h6D74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #807 b23aba45-70cd-4e9d-a148-8b2ff7e8e87f)");
unit.assert_eq16(16'hF36E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #807 d1076f07-8503-4461-bd32-2f1e5b37caab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 6429ad8f-d129-472d-b62e-d0c0ca6fd233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 ed46a7c2-8048-4bde-9a22-d8f00f3f4681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 c7f87b07-c318-4bb5-9c02-7fc41fae597d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 196aa8eb-65ac-48b7-87ef-f2757a2909f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 c65c24f2-5bad-4f33-98ce-99e632df81e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 3859f22b-5553-4840-a8c8-b2bb50d08fd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'h3BE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #808 9bc024ad-9edc-42dd-8871-3541a4db72e6)");
unit.assert_eq16(16'hFFD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #808 72891352-c8f7-401b-80b7-9507f0739460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 e8694fb1-9754-4aeb-aeb3-bc45ef8c9c8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 af1413b6-977c-44d9-bae2-e19037aaaacb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 b7e7dc55-d883-4bb7-88bf-c2db6e522fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 9f839afc-93e8-4bca-aff3-8182023d8acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 182b545c-c2d7-4948-87b4-8a5a200a4b2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 3ce4b7ae-201f-4f9c-9e51-ef54b6fdcae9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h32AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'hE2B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #809 7c7f400d-9ba2-4596-85fb-9bf90fadcf04)");
unit.assert_eq16(16'h32AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #809 f988b898-1d7b-4913-9bf2-783f1cdd5ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 e9bdb81b-f319-4ef5-8da0-657891641642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 3b9ec6a4-40bc-4928-9eca-3b4eb8387eeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 e411c19a-0ed5-4088-872c-98ba78763389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 37b4b5a0-8dbb-478f-bf05-3277858f0b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 1966cc18-aa5a-41d5-973b-a50ea55d5a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 874ee415-822e-42aa-8001-16bdafce7ce5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h0DA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #810 319bfc89-2100-4506-b692-aba886d9a907)");
unit.assert_eq16(16'h4C27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #810 6e6bdd8b-980d-4c82-ae32-e7ebac90465b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 aa9d0c15-ef64-4e76-850a-0267fd040cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 ab00e3a8-142c-4264-b6b6-d6738ce490f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 6a230eac-5753-429e-a981-f27f86dc8dfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 9674e5ee-5020-474d-a759-b6b587ad7849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 bfcdf93e-1aaf-4190-9e40-8eebf18d7f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 9352480b-89f6-4408-b0b7-291805179c6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h37D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #811 ac3a6f23-a3ef-4d0a-988b-9c70568d5920)");
unit.assert_eq16(16'h4A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #811 ddb48c6f-06b6-44bc-856c-254b76be7dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 2e40101a-7435-4286-8d57-e2acb3bb2fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 7a43b134-16ad-4494-b695-17adf952a5bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 33adffc1-8cae-4d8e-89f7-89572d54ea1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 37b14557-3552-40ff-b0d2-00529f21951d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 4b2d64c2-ad21-4bcc-bfa3-f8a13bc646f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 470392b2-5a3e-4d71-9fb4-cf1e94eb69c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h158D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h1D49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #812 e52305a4-0245-48c1-9b74-6ed67b72251f)");
unit.assert_eq16(16'h158C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #812 fe6faad3-a94d-43b3-a23b-743391fb49c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 2fd4a059-803f-4a80-a1de-a3844d692f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 f3149b50-86a5-499e-9832-e7ed8abf4928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 6340714e-2a7d-42c0-bcab-739987c0c09f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 03cfd2b0-56d6-4081-9564-8efd69f3dffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 6abc5ebe-2ef4-4b4c-a197-18ba11a929b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 3d792b78-f35f-44f1-8ee2-708ae193ccaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE16C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h183C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'hE16C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #813 521a5051-df40-4014-9bd1-c1afce08e33f)");
unit.assert_eq16(16'h183B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #813 a23a1d79-0c71-4cdf-94a9-38a790ac2895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 9ded391b-818a-4902-8af4-5ecde0f5d769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 8e792047-f00f-4427-b57d-f820ecc356fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 17cb8a94-5f47-4604-8dce-009a49ec3647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 477654e6-e510-45c5-b0d5-0649c3eb52f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 4ba489ec-f00d-4643-9985-ffab58a630fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 88f419d4-1522-44b2-a631-de5e7a8c620a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7849;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h8B4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #814 4e729508-15df-4676-9460-8f96fb097a0a)");
unit.assert_eq16(16'h7848, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #814 0710fa7a-87cc-495c-829b-880344949a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 ad87132f-4e18-42d1-83f2-40756c3172c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 4721817e-fcc1-412a-8ff6-0892d24e7c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 59448fc9-fd86-42c5-b0a7-9a5afa11e195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 25207b09-1c65-4e72-a40d-f443614687f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 ef3dcfda-3e37-46a6-b8af-ddf376e7ac7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 2e0ba1f3-6682-4202-afaf-048f49996738)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h31BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #815 c4908258-04bb-4b86-9d95-b9773e688280)");
unit.assert_eq16(16'hFCC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #815 51a186cc-28ef-4eb6-a552-8dc50535094f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 8d410663-faef-440a-9bc0-b93df7a21fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 8a667e6f-14a6-46ef-80c7-3f06d4d26845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 dfbdf2ec-39d3-4eb7-8bb0-5088fcfa5115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 07d28a10-9313-4c9b-96f9-7ca4a2c55cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 dbf38755-2f53-4065-8fc7-faedf94aa6c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 8a331fe3-5bb7-4ba8-8604-867751f36730)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6555;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'hE1E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #816 eefdbf70-8b38-43b7-add0-de55ed90f35c)");
unit.assert_eq16(16'h6554, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #816 c431f0d4-eb5c-455b-8556-c5f6da7579a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 7ecc714a-ebe9-407b-8c95-58ab0a124829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 612009d6-3f4d-41e1-b2bc-f33569bd86de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 0b7b3823-446f-42ed-8140-494dab0dcda5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 85c0e26c-5fcd-46bb-ae79-27578fb58a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 a945ffe4-0d79-4c2e-bce7-7a8222882d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 c0279462-6799-461e-bd71-6c832c21f167)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h2C98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #817 a029a1d3-bda5-4f60-aee5-39cd81cbd31e)");
unit.assert_eq16(16'h0E90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #817 15706836-79da-4c0f-af34-b31663f009b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 035e6afd-3ad4-406c-ac2e-97cb0c9bb6bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 c5c6fc4b-8d1c-46e5-940e-c49a2acc79bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 7f197386-9df7-405f-abee-dad38356077f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 251b1354-04a6-4e95-ac92-0745e7c8856f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 63821204-6c70-4184-abb0-93e6aa17fc08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 eeb8e0e1-23e4-4539-b83c-3dff56f1d67c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9889;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h52A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #818 dbe71aea-0a2a-4207-863e-102ceaf002b3)");
unit.assert_eq16(16'h9888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #818 faf1b36b-19f8-4b22-93be-9ac2e1084400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 bc239b65-24d7-465c-8bf8-fe69eae30b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 8feefa37-8341-4a74-85e1-a562ad2351c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 1fb8b5a6-ba52-4ee5-a8d6-4d5affff7c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 ee4bd252-9806-4af0-b0bb-b3bd5e08730c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 d4f35474-69cb-44ea-a06a-286d215d911e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 5246033c-7b90-4a46-a638-2a074896be5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8065;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h629A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h8065, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #819 43873f4c-615f-4554-99f7-47cf4ee6f6cf)");
unit.assert_eq16(16'h6299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #819 a2c2e84f-1732-490e-a1bc-e32fabaf5456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 163abc8c-c773-4a6e-b2e0-5508fdef9e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 0546f70c-9225-4243-8572-feb965e60e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 75afb20d-096f-4595-93ef-c75aa90fc6b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 aa393727-db97-4273-a9f4-b22a95d89acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 aba0dbb8-9a37-4b85-830d-8401bf463cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 4d4296e8-8896-45ee-beee-8372dadde63f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8394;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h4A9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #820 9f969ff0-2010-4c5b-bf03-3cdbf0b086e4)");
unit.assert_eq16(16'h8393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #820 97d4e1e8-f45f-4fbe-9136-01e994d39b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 a756fd01-17e1-403c-a480-81dba7855ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 338bcb00-ed85-4ec2-9b1e-5ac9748a8243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 9a0afbe8-b35f-4c76-ac2e-2e4c4b0e2078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 45be20e1-47a5-4b32-bbba-d0e3f40a8e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 2f3bb5fd-d738-49ba-9539-5180ac85614b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 15c4e66a-631b-4a85-86a8-b10c2ffcf37f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h889A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC866;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h889A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #821 43de81a5-e4db-43f2-8e8e-5223e1871601)");
unit.assert_eq16(16'hC865, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #821 a77ecc52-5f7b-47f9-b8c7-7ad072d9a763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 7180b1ee-3985-47e5-b927-6220648a5034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 e4fbccc7-e09c-42d6-9d0c-d667f5ef4a8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 685474c8-43af-4b8e-892e-6e9c61bf17d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 2dc5afdb-e83c-40cf-a9a6-a829c2e49840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 9a9bbfdd-da98-4dcd-8cee-9cebfa55891d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 2f9a5144-d86c-4b50-9e74-04da70ea3e65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h11EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h80DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #822 49025473-7382-4b60-9369-f3b6b7c99fc9)");
unit.assert_eq16(16'h11EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #822 e2cb49e3-a002-47e5-88c0-20e0cd99f960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 f50d6693-22b2-4cb1-aebe-36e3d4e79018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 a41133cf-5a22-4864-b244-fdc5b2a6868c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 3db8584c-e826-4a8d-95e1-a08ac3f22a30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 337268c5-7def-4e32-88c5-c097fa7b7ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 f7667f45-2b13-4529-9a12-02396265c156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 179f4459-f31d-4142-83fe-5cce856b68a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h8B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #823 d5ee922d-8cb2-4ed9-89bc-d8d68bdf3279)");
unit.assert_eq16(16'h46CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #823 eb1955bd-1420-4711-b952-b8d5e29a924c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 ada84028-04c8-4d85-b4a1-335972769091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 45a07ee9-577b-44d8-99f4-b21f10a5c74f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 0643b8e9-248f-430d-bfb5-6fc9d3820f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 674d3146-bfd7-43db-8f2c-3747ff6e7997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 0ec3e28c-2c95-42d1-98ab-a228dac7fbf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 6047466c-50ab-4fa4-8ad0-55372d079a41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h82E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h82E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #824 adccc562-ad7c-402e-b072-ea01fa3dfc8a)");
unit.assert_eq16(16'hBB98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #824 1767efb2-e9d6-4adc-adca-c387ea1dcf9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 7e54e41e-636d-43e4-a28d-edafafa74a5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 74ff3023-9da8-454a-af49-0ba4c593ae51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 cf81d231-73f1-4af6-9602-91721e9ee5f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 aa44a8e4-a148-4055-8a0a-dd296a9a549b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 c893288d-f142-46b7-a3f0-7a1847b3e480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 fffef97d-3085-446d-a494-792d726c49bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'hA9CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #825 09f40b82-6d15-4d68-a648-efb96e7cd6ab)");
unit.assert_eq16(16'hFBC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #825 93bebd7b-d234-4bc8-bb0e-697011213683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 feae5156-11da-40a7-99e7-102b5a9f5a66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 e6551490-d5f8-444d-98fa-434a08cf7d5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 80b0a4be-85d7-4b81-b90a-b8a94ed34058)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 4597ed88-ce7c-442b-94c5-2c6b48614d47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 7bfba1f8-286d-47a9-91a8-dc82398a214d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 664b5c18-fdf6-4dfa-889d-ec58b6073003)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h06AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #826 25c4f526-3520-4984-9ee5-7ce4cbfbcfad)");
unit.assert_eq16(16'hF9ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #826 aea30c1e-ed1c-4e7a-8009-3024887d636d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 cec09cc1-4b89-4fc6-98b6-7793a34ee154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 caa429d4-fa36-4804-94d3-00d059454c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 53d585f2-73ae-4ae4-90ef-16e1e74454f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 bcf51fdb-1378-40bf-9b17-4c694393d9f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 a63f41df-34ef-4022-a011-14ebcf1de877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 a98c0dc6-373c-4622-aaee-1b591ac1dd55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h089A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'hFB9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #827 d31c983b-4ab2-4f37-8dc7-5be81b1082b6)");
unit.assert_eq16(16'h0899, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #827 6833424d-5999-483e-bec4-4fad90705706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 3390b43c-3e69-4637-80d6-925640c2f00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 43fe998c-ea6e-4020-9a52-219aa0232ec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 942528fa-ec76-441b-b9af-758dc45fd5cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 11ca4374-bdf1-4109-9f41-8c44d49b2fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 837df641-4dbe-44be-8d61-b0a8bee1f941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 41b25319-11f8-4cdb-92fb-94e44e73e845)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD851;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'hD851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #828 b4163266-95ef-4b48-9039-dc53c99831a8)");
unit.assert_eq16(16'hCF3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #828 70fd7a29-1ba2-4749-97ae-f5e67780a47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 acaf295d-6b23-4de5-8532-b2b485014ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 47fa5a11-7f97-44ba-ba9c-551ab421cbf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 0be409e6-cfd9-45a2-adb6-f003c4d47cb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 1b8af1cc-0979-4ee2-99c1-7fcc80461fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 67ba80ff-dab4-401b-af0f-89ae39894928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 64698071-dea6-41c3-b054-ba5474c7b276)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2305;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDEB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h2305, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #829 4620da5c-1195-4d52-9c4a-ae3f0bd75034)");
unit.assert_eq16(16'hDEB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #829 4f236bce-6f46-4ba0-83ed-03e01225faea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 da7f3ef6-e96c-4a4d-8cf5-77a6649df189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 f187be4a-8c59-4514-8f71-8cc50c119dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 93f7cfd1-f7d2-4222-9c11-20999b7469a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 55fe6079-f248-4289-a4cf-ba98b73cd641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 38acc3c9-69a8-4a24-80bb-c2c21419faeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 fe7f4844-dba7-417a-b886-82ec9671b563)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h3B97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #830 b1a9462f-a80a-4aed-99a7-399aad8b0de8)");
unit.assert_eq16(16'h9E59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #830 181ea945-e70a-4dd6-a407-9cdc29bff107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 0a77b47d-6de6-462a-a240-d669451c588f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 2db6caba-6e7f-45fc-adda-43a56887c0ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 5efcf881-f681-4c5a-9619-abeb891baa5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 fa00d137-ac5e-4cad-b4eb-1be629355a1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 4b27bd59-08ad-4a01-9cfa-60a31d49c702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 cf5e7241-4c3a-4649-86e8-66e31114806e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD645;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'hEB80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #831 74278c70-098b-4af8-952a-ced34544bcc4)");
unit.assert_eq16(16'hD644, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #831 a26d45b9-f5a7-478c-ae63-925ba764ea49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 326367df-42cc-424d-8a00-2b286667ac71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 52130422-6d21-4832-bdb4-4ceadebdceec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 cda07ca0-285e-4622-b94a-8701b155cc36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 b904a59e-01a1-429e-99f1-cf052d82a6a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 51a4bd60-9bf5-43d2-98f6-2326fe037d26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 fee726dd-fc07-4878-bf37-09091ed36942)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF191;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4509;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'hF191, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #832 6422f0dc-db73-4700-b12f-de89d8801013)");
unit.assert_eq16(16'h4508, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #832 2a7dfa96-cdb0-4e28-9668-7b3181552aa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 c3e93d82-e793-469d-9479-5d587ba1632f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 8de481f0-3915-47e0-a6c9-8c4a2570085b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 46cde8da-557d-44ff-9921-fd6f54666f22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 e8c5d4ab-c7a7-42fc-a91f-6b65474b3b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 1f4ffbe5-c47b-40c9-bde9-cad19585784b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 df441966-483a-408b-8ce1-478ceb281c5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h59A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h6B83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #833 0b41deda-eae1-460d-89a6-161d27c56dfd)");
unit.assert_eq16(16'h599F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #833 6c7407a2-08c0-4bb9-9ed5-8e8dd0257817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 723f5077-211c-4dfa-9f3d-510b681d6df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 327999ac-ff8c-4a44-abb1-acde34b1d859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 339d2338-cb11-4951-bd6a-c95b13676b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 a2ff3992-2ca3-4c16-81b7-8afebea9115c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 04f1ffc5-6a5b-4d95-aa0e-a343ffbc6ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 872ea7c7-c4a3-486a-9a84-ef1a5ae1fe58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h31C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #834 37af6714-2702-45ec-819d-83d13a9a0ecf)");
unit.assert_eq16(16'h8E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #834 ab559004-8d55-4c43-9e64-c5bac4f80cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 e79c2328-303e-4a37-93fa-be764bed7a85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 e04fcc39-d687-48f1-aaa6-44ef28d9894f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 b889e9aa-6cd5-4079-b112-836330b8a2f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 2b5cb86d-8b42-4132-8fe7-9d7537a5bb8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 7cdaa77f-8034-4cb2-8c80-0b275d5e40f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 99d173fc-3420-4c56-ac03-914d4959e504)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3263;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h3263, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #835 f7a1e8ca-3a9b-4d24-bdd4-2228575bdd8f)");
unit.assert_eq16(16'h20BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #835 4621dfd5-f7fa-4041-80a8-37c568b796a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 61b791b7-a21d-49f5-92cb-f1494c9d982b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 3dbf537b-fc0f-497d-bd6b-6649cf809fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 e815ca9d-0425-4d6b-944b-5aaa35f3e9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 e416dabb-bf05-4fc0-9c37-9a12567e6513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 7f66e753-b465-4843-b608-114b9cd1a206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 f81a73e6-7968-4c6b-b716-5fe8bf1badc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h56CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h56CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #836 29ac12dc-2484-4211-a361-cb0741298134)");
unit.assert_eq16(16'h75CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #836 43ae8fc1-f7de-4ae1-920c-b3cb4b87482b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 fe0a6399-ac40-4562-963d-5470cb49340a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 756c4555-bacd-45d5-921d-2d5ad79c4e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 5941a6bb-4d51-4c70-bf23-9533854b5e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 e0f98e34-e72b-4698-a833-c79a4c25b470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 9a386410-f2b1-4b29-b3a3-27d65bb3dc5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 0589f538-bcc5-486f-921c-ae2d1c42144e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1638;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1690;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h1638, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #837 072912d5-d1a1-45c6-9e02-0dc7285c5d5d)");
unit.assert_eq16(16'h168F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #837 1c712bba-ce30-469b-9622-c9358e34e105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 05929c95-75c8-4d3d-a7e3-1d8ba9636805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 e56f3f3b-9e79-4014-9552-9ce008e40493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 63c21985-ce64-4f00-aef6-c74153f3e2e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 506e03b1-ba8c-409a-9458-d290160678d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 9d6523c8-d946-4c5f-b4c0-5c958d2361e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 249332ae-70f8-477e-86d6-58b6cfe95955)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h8929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #838 237ab54c-9879-4ae5-802c-aa715dcfcffd)");
unit.assert_eq16(16'h60E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #838 31a5edf3-1854-42f9-af61-3d04e183e7a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 a96e5874-3a50-4589-bff7-11455c95ee5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 95002451-75bb-44c6-a32b-1ec50d408681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 ef1b7b98-ab04-4874-94b7-b83d8b4258ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 0aa66826-4be3-4d82-a98a-2e4223827d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 20d919d9-0597-47a1-9be3-f2a4c4ec8841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 52436a50-4a4e-4dad-abdf-c7d57fae5c8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h389B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h389B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #839 e189157d-442e-4ec3-8ffd-7b805015433a)");
unit.assert_eq16(16'h4FD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #839 9da57c4f-8b7e-4c91-bdd0-de571734a237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 52a93dcf-d9a7-419d-9dbc-93a6afd9657d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 6380f6a4-2323-4348-a77b-cac3c2e24ce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 24c8429a-56bf-4dba-9c58-503138c1ba11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 c4abffcf-6e24-46db-b642-ffd3636758fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 6af18df3-ecd6-40b3-8543-45bd61029670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 25c27396-9bf6-4079-a3b9-61b53df5263b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h15F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'h90AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #840 27e44400-c3d4-4de9-b47b-eeab1cc2245b)");
unit.assert_eq16(16'h15F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #840 cb713f03-a2af-4921-8d49-6745a1b271af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 8aeb9066-6f72-4d48-9527-8eb35e488ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 14c3aeb7-c8b7-4e94-a1da-11bb3374d80c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 f36b7433-eb1f-4ac9-8767-be4888d12d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 e8b5d190-4277-4334-9f6d-8863ca54eb68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 36cf7845-fe86-46e4-97fc-d951bc04c9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 414b9d8d-e13f-4478-9b94-82b93e27d387)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAAAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'hAAAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #841 5b4bd32d-a189-45d3-bbe3-17bf1565646b)");
unit.assert_eq16(16'hF6F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #841 573b9feb-1566-4731-9f62-6c0d0d2d08be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 52a19e91-be03-4b1c-adb7-dadf98d5095d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 2e87f288-6935-4676-bc23-f3b63d589333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 928ac628-d48b-4055-85a6-2610323dda9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 00dfd95c-6ad4-41e3-812c-fcb3d9397dc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 03e2e90e-5787-4adc-83a8-5ce0fbae7e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 44907ef8-10cb-49c5-8d45-ebabfa0fa9c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5363;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h5363, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #842 da15e2dd-dc1e-4649-aeab-186918195bf4)");
unit.assert_eq16(16'h0878, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #842 a9d09d19-17dc-4a10-8bf9-f95fe3258619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 2aa7d225-5058-4351-8f70-77030d389e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 a17ccd4f-6dcf-4bf2-bd6f-8aaddda6be82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 1f85fe60-9052-4525-8ba3-b201f0274350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 c694edc4-922f-4ef5-aa64-78fc77a3fa2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 70ceb0e3-8f00-4ea4-9df8-7be278b785fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 c6f8c41d-9fea-49f7-96c8-9c7167015e05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB93C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF1A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'hB93C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #843 5fdf17d1-6f7e-4f46-9a78-3cd4085f3511)");
unit.assert_eq16(16'hF19F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #843 b4912f31-c76b-4043-98f8-ea5f0ed681e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 65d6a06c-c132-492d-b905-178aa61e7ff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 4c471eac-60fc-4c6e-a9f4-9946c04d0b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 301f5584-8dc3-4977-aa81-de3958270dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 149302f0-3d69-428e-8902-b1182375ac92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 39f20445-5bb0-4493-9dad-b06f8d632619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 b2053eae-9dba-4c73-b5cf-6a96408c8248)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE5E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'hE5E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #844 c54fd147-ff5e-4ecd-ba32-464862b54235)");
unit.assert_eq16(16'h84F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #844 026f352d-8a07-4974-ac5b-847980e763db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 dd54aeab-16da-4d12-b6d7-04593f9939e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 4d3824f4-1829-4ebb-a2dd-bf94765bc568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 e6fb035a-4047-40df-afd5-5b3851050425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 8cd872e1-eb45-4be7-86b7-73c2b1ddca9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 8432888a-2938-4ea3-b891-5a97e7592694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 017dc636-2db9-4594-89dd-46b2fc4f7d0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4672;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h5C7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #845 d446e80d-8405-41be-a237-ff9a5b862f75)");
unit.assert_eq16(16'h4671, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #845 cfe61e63-3f30-4bb7-b11f-bd07f7c00807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 d4eb8f53-443b-47a3-af2d-50125184b321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 a2000558-f98d-4fc9-9dc7-af4f7e003651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 fd0fa034-8d13-4979-8a1f-e6270add0efa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 48cf65ce-9362-4693-b2ec-4ca77274a715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 db323aac-cabb-4522-ad1f-8a9c003f3d01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 10c672d5-62b0-48cf-9066-4a28694b2700)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD96A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h6F6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #846 e367eea6-e7ec-40a2-aa06-d8529a37a547)");
unit.assert_eq16(16'hD969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #846 91af5d1a-d1fd-4b4e-a17a-9e01de635bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 ed09850c-6404-467a-b3b1-e416c758836f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 03939cc1-7f3a-4d37-a49e-13c4be7ef013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 2a8553a7-8ac0-4935-a499-aba8532649cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 9fe638c1-bf48-4e10-a7b5-1f703150b441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 3b66a961-6a06-46c4-aa94-82976dc2b0b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 8806fcdb-8759-4525-bed2-e494853a7319)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h678B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h678B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #847 92437a96-f07f-4432-bc65-5dfc3da1206d)");
unit.assert_eq16(16'h5A78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #847 3f1106d9-6ee1-4733-86a0-13b3961e111d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 fe09bda8-f67c-4c25-9af9-e3037db103e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 974438ff-7ca6-49ab-8cda-1c6ac24690c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 af5e8758-9844-49a7-a2f7-634c0c24c3fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 0d50e39b-d672-4f67-aaa2-d3bcb50cf2f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 4e7e0ee4-41a9-4d2d-918c-ad378ea31bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 36d89638-7ecd-4438-a260-d31eae88e64a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h2F11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #848 6eb09c8b-359c-4b26-a0bd-fd389d69d2fd)");
unit.assert_eq16(16'h49F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #848 a5e0dd52-7061-4ee7-bbdf-4e5474c80576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 6b959b0a-f891-4c0d-97df-00f69bed2da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 c97c3fd5-9279-4a8d-9085-bcf62f52de6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 906c4c24-1b0e-4e95-bc9e-ce7327453356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 3b81ee10-0983-40f6-8257-872f75535cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 a56f3292-6b0f-4f02-9f5f-1c8623377d74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 f77afe6d-c274-4a7d-9d9c-0d10fe8a4cae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h1EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #849 cb5b7620-f3e6-4476-a047-45a661e1fb0b)");
unit.assert_eq16(16'h2DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #849 5677b016-9819-4b4e-ab0a-9dadc9c06c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 9d264451-12a7-4b6e-8768-35e46f22406c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 1b7bda5f-6a75-431d-b40b-24a1b2e0a275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 7f6f11a0-52c0-46f1-b200-76393d3a3bea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 32df8ca8-f020-4195-ae8d-209927212875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 535b17f9-e7ee-48c0-8a73-c0b2b27a464b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 3a674dc3-c904-4261-bff0-3e6a4ea9ece6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h103D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h103D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #850 f03cba5a-0cee-4bd8-b237-2c7b6635f597)");
unit.assert_eq16(16'h00EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #850 df67aa23-da33-458e-a354-401f6d93d9b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 7013ebaf-5b44-4432-ad19-40b7459ed5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 8ce4af14-ab51-4a84-bf3d-2245d72105e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 c7eeefcc-a531-42ae-9170-4b5aa622e2fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 b5a02e32-92e2-4d98-9fed-14dceb573ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 82394b5d-c375-45cd-9d6a-15f6450881e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 1ce43db5-263c-4993-a477-b41bcd7cc6a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h30DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB601;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h30DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #851 d17e345c-8da3-418b-b5df-58c6a78d102e)");
unit.assert_eq16(16'hB600, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #851 0ae74f89-7972-450f-863d-a5bf4ae4f02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 253a8746-14fc-4074-8669-30d5aca5cc32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 c1ef2f69-e4ec-474b-9d7f-cf5c79f20ece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 cc48efdd-d858-4e98-902c-f3b29b670186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 f3d50414-b33f-4539-962f-d5bdf218a6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 440720b8-6591-442f-9b86-342079707db2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 9213522d-2c71-497d-beba-581693b9440b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h65F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6678;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h65F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #852 c993ff03-ddcd-44ca-aed7-8421396cbe13)");
unit.assert_eq16(16'h6677, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #852 396e2f53-75cb-4554-acf4-27b3fa57184b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 fc6e6579-3432-43b1-95cd-25009c519c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 f4fd7b46-7071-4f47-a08c-148cc15e5d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 3adc0afc-c5fa-4975-98e7-d870518b2781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 89801d16-6cef-438a-ba73-8308fdba5e32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 1b139716-e9cc-4ba0-ae2d-3cc02a7e3602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 cff26b23-63b3-42d0-a53d-59e51ea47f69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h99B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #853 3054a628-e7ac-49ce-b901-16b1d6b12426)");
unit.assert_eq16(16'h6FCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #853 4e73b2e9-b439-4946-a024-bfae7889a7d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 66765e32-7ae1-4c87-ae96-06dfaca8a3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 5bcfab03-ae07-4089-897b-2db3ba66786c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 4436750f-15ac-4b40-98c6-d14f165252df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 3c8e7d2f-079e-4cda-9065-8e1933a5b983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 ab416f53-d05b-4d70-8d43-533eb2a3ad4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 b8779f6c-0853-4ccc-9cda-36f636eed11a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2055;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h2055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #854 3c0940e8-04d3-4f13-9cf7-4f3afb885aa0)");
unit.assert_eq16(16'hA5F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #854 5d6c640b-b4df-4209-8a75-622cf3823ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 5d241cad-42ce-4299-bd7e-56bbd60f5cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 04b5aa39-8bb0-4447-8b3b-e0f4c479bee7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 dec90d94-3ac3-4197-bf79-2547aa5b3d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 1adbcec6-60bf-41ab-bde5-7936ea306b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 bedadf24-9071-4b57-a97f-63ee9ade0258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 80a8f09a-073d-4f08-82fc-c0c8956e1ee7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'hC0A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #855 dcfaac69-3774-4979-98ae-edadf0611e2f)");
unit.assert_eq16(16'hBD6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #855 3acc8920-e214-4161-91fc-1f0078e5c566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 5fa045b4-43df-4102-8451-25c79dbb253f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 a64be67f-0f90-4533-92d4-38820d68b192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 2443681b-d72c-4aef-b5c9-02d8f90d7ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 99483f70-43b0-467e-8a6e-d2a60cafcd87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 59f2eda5-a1d3-4e26-9621-af78ad79cdd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 1846a03a-e4cb-4f69-ab50-6e8a74f6b95c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h7BA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #856 01687ae8-a857-43fd-9c23-338112b2fd34)");
unit.assert_eq16(16'hD474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #856 c8b92b38-0a47-437c-9d2c-25f80ec59b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 ab9d74df-0798-47d1-aa0a-aa60c2d1c36a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 9f53493f-c0cf-44f8-9f82-cbb571cfb6a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 6bf2e113-a6bc-4de5-a3c9-f9822922ddd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 6a0a0d9e-afbb-4916-a437-ff8bb24bc73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 1731de7c-07a2-4670-b052-61620ccc06af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 c7a58919-b4a6-4f8d-a736-1ebc3307c9a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC243;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h4C8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #857 2890e7f3-393b-4d53-ade3-2f556c2b58a0)");
unit.assert_eq16(16'hC242, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #857 71b5575b-e7db-496c-82e7-19c5ecfea9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 cb25c031-d131-4c5b-9d17-43cd15654855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 1360cde6-142f-4ea5-8662-0d94d52001d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 123c111d-b48d-4313-b95a-cc3f1d8d3d7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 c66635c2-75ed-44d5-a67d-19da650d0bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 5eac6f06-877f-499e-abc6-16ab056cd265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 a94ddb15-23b1-4faa-8bd4-0e33bb56ac0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCFD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'hA0AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #858 350fd207-ff71-4587-9263-6a79933a7c54)");
unit.assert_eq16(16'hCFD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #858 5d963861-af14-4a57-973a-e85a2d3831c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 d1bdb26d-fac7-4773-bdad-592a56587512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 76d6ffa8-dcc9-4f90-b243-d34ca6e2dae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 d8db619f-ff89-4149-9f3b-6855e68b5b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 575770aa-20b7-4411-8e4c-a3ce9bd42a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 55e31f56-fd9f-4301-af0a-0730bebbbbec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 cc27595b-9745-4a61-87e3-8a01884620e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4919;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h4919, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #859 22fa3197-e012-4d0a-9eee-f1fb0622d271)");
unit.assert_eq16(16'h6FDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #859 f030cc63-9894-493b-9926-8d6c3d71ba19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 2e73fab0-9cc8-496f-9b41-0b5d9c71fe93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 b848eaeb-e51a-4176-92d2-431953479ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 9fad5e26-0921-4b31-9dd3-33904a788b9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 bbc17b46-88e5-4abc-bbef-856994cbebc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 26693ec6-0b47-4548-b57e-3c37698d37dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 d6ce593c-72a6-4b05-8aa3-97ff2e238266)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2853;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h3A87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #860 204101f2-8ba7-489f-a944-88393e7143a7)");
unit.assert_eq16(16'h2852, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #860 ac87eb44-e418-48bd-a7bc-48f20bf4b965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 af5cba4e-c250-4997-8cc7-7c25c427c8ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 7271cad5-aff3-4aca-84c1-5c8e7b7e05ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 c2458bfc-cb29-42de-af2a-a441b33b2f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 ff9e5ee0-3a5b-4977-adff-824b1b2f4c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 bb99f658-6c6b-46ee-830c-b0cde803b3e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 808e5c2b-440a-4951-b439-16a50fbc0c25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7582;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7EE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h7582, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #861 f034871c-1993-479f-990a-7b2e6630b9c5)");
unit.assert_eq16(16'h7EE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #861 d7057aaf-0ef8-4481-a906-3088396fef9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 50e2385d-dad2-495b-a807-f59279ee0703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 f796f55b-b229-433e-b768-5e31c647e086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 4a099706-4d32-450d-922a-7eab822b8989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 7c9a8ac4-18b9-4f13-ad66-882edbd7a0fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 6eda1d8f-4767-47b5-99d3-8adb06ff5e04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 a625108a-c6eb-46eb-bb11-c0c8a7efd68e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1199;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h1199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #862 97796a96-1b79-447e-b1fe-f8e455b0295a)");
unit.assert_eq16(16'hFD5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #862 e271ee70-3828-47ef-84bf-235a1825a66d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 366c674f-163a-4607-9b57-b044b411eaf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 b3b83ad4-9156-49a9-b665-d12ac456a5cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 3d10ef84-7c3f-4655-af6b-90943ad143c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 0dfb4d3b-80db-40e4-a7dc-e37e1a84ddb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 50729612-9d9e-420f-9102-efe51344d21e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 31529048-5c2f-460e-bff9-ea4aaa7c58a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE849;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'hAA35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #863 a55fb2ff-541e-45e7-aa96-585ea27e5f5a)");
unit.assert_eq16(16'hE848, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #863 9f6cb725-ec2e-4539-9af0-1cc84343e50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 788652b2-3977-4d56-a1d7-bb03414920bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 412b368d-893c-4c44-b520-113f202ebe6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 893dd629-65e7-4f92-b490-ca6fe7bfcd4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 fc734eee-c346-42d4-b354-76c2811cc588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 d86e9f41-cad8-4aac-a6a0-ee508d5b9cab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 acc25212-c799-4d19-829b-55dd8905b905)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF9D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'hF9D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #864 41af7cc7-7296-43cd-abfd-8e04c7b66d92)");
unit.assert_eq16(16'h5B9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #864 189bdafb-9c16-4c4f-bf85-dc2d1da208c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 695d4cd0-50c5-42b3-9d9b-c3d12a3bf191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 37960bae-7ed6-4e1a-a764-d796daa0fd1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 949a280c-62d0-4b08-b761-a654d37ff7e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 8930bad1-dbdf-4003-b15f-acc019cac54e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 c21fcab6-6d9e-41aa-af81-13e3a3ba8486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 df174208-9128-4328-b7c9-ce80a5cbd009)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h53E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #865 642c2844-37bd-4806-a251-d927a11b737e)");
unit.assert_eq16(16'h1DE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #865 fed3e2ca-6a55-4e93-9f94-a63d6be587fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 cb4283cb-943e-40ee-b743-012f48e6df61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 b7336857-f37b-49ed-8c77-415211b60099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 74fd7206-b4cd-423d-ba08-fe675f0f0dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 0ccc826b-663b-4198-8ea5-472250bdbf2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 49ff3f0c-af45-435a-adee-d7f232c3f620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 3f625822-b960-42f0-9072-7cf276af84c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'hE6F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #866 9ede73e7-d272-45e1-80b4-ade91136f661)");
unit.assert_eq16(16'h9E51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #866 b609d7b0-105a-4347-9b2b-29384afa3a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 8c2b247a-3bfe-4d8a-8e4d-61e97ef6347b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 50b99e75-d8f9-4977-89c2-69edf6a4e7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 253a0c45-0dcc-4fd7-91f7-c99cf3d20eda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 2b70cb33-86c5-43cd-b76b-9dae72653bd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 2dbbb24d-3132-46b7-b81c-12f7e82d77a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 7f1b856a-4811-45f9-b727-40517f0631ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8AE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h455E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h8AE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #867 a0cfc609-23b3-4c47-9b4b-8242b47fd66e)");
unit.assert_eq16(16'h455D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #867 0fa67355-c967-4f47-8ac4-6301b5621685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 3e41de14-ce32-4d8a-8883-3004f24b0df5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 773fc89a-2960-431c-aef0-a8093e31ed2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 4189a162-a6e0-4f81-99e6-3eb56f1a7266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 5cc1c5ae-bf9f-4a5d-a28a-0af1f3ea845b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 749509d7-8f8e-4538-b6ee-a5a4f94806ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 dfaffce3-a112-4b3e-b85d-5f351bcdebf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB02B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h6F05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #868 3f1cb9da-3cf8-4a87-96c8-806a1880b914)");
unit.assert_eq16(16'hB02A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #868 c2e8e87e-6ccd-4563-89a6-171f6d14486f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 fa7ea009-df14-40f6-9fbb-bc6ce9caf537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 9ac6e1cb-20c7-48d5-beb9-59d07f97b304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 165c37ec-84e7-44f7-b9f7-5af731bf9510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 516bb096-7b8b-49d0-a32f-63c0a418d1b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 f7cc3dcf-63a4-4c9f-af69-e2f37adbe52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 01fb43c0-9463-46a1-9e19-802a131fc506)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9886;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h99FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'h9886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #869 43f6364f-dab5-407e-8dfa-5022d2933f51)");
unit.assert_eq16(16'h99FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #869 75131f1b-6ac5-4e83-babc-da8859c4976d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 e0fbfd86-c481-496a-b712-41d6a6defe47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 3e9ef35c-d8ab-468a-be9f-a880e468330a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 86042d5a-bf2d-4406-8df0-49be36f382f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 3c9baad8-2b48-47ea-9996-28f5fbfa9352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 a8b8320c-5403-43e8-b0ab-2fa4f90f9725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 d91efa7d-5914-42dd-8827-9001db261fca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h266C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h268D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h266C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #870 e2d4606a-2c5a-401b-b415-9deaebb4956f)");
unit.assert_eq16(16'h268C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #870 b865defd-f116-4d2c-a89b-e6a3c8fbf1ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 71a2f06d-9131-4b06-83e0-1753443c1181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 dae32b14-265b-4ba1-9bb8-5661c4f3def2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 0d87e01a-8eed-4c49-96d5-35ce2040f578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 fe115e28-2fee-4c84-84d1-3ce25e965236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 65afe240-c4a2-4c53-8c4f-e391f1c3ceaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 9a1a54fa-abb9-4737-8fb8-49e018997c51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFCEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4AF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'hFCEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #871 051851c3-77eb-4250-b8d2-a44f316c711a)");
unit.assert_eq16(16'h4AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #871 5b4366da-d4df-41fb-b36e-c1b5ae7a4d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 835cd188-a27a-4683-9c6a-282a84c47269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 a1248284-b079-4310-b7a6-569c04dca56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 e6c440d8-03a5-4e4a-9342-4e88e82f7b5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 dfd12620-f5ec-464c-8378-435cfe686dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 5c3e7a20-a34f-4329-8bd8-8ea33947ee54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 ec4b024c-9289-442b-b21b-2e8cfd3426da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF758;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'hF758, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #872 f17ed5ac-356a-4bb0-a09d-e531d86ca141)");
unit.assert_eq16(16'h4EEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #872 aae77e47-9502-4e07-880e-8a6a0e4e0e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 29d33b3d-f189-454c-95c4-59411cdb055f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 675ed0a9-4fd8-43d6-9bc5-29ef22d17128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 b0c51aa4-8de5-4644-9731-2a59e8ad045a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 299f6360-77d5-4564-87c5-9ac08ba1741e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 89b314a1-a2ca-4854-9c15-8f85c101d8bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 29cbb4be-12f3-4fb3-96f4-998ff3344afa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h76C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #873 97e8da6b-9fc9-41c6-b411-4dd25b316ab0)");
unit.assert_eq16(16'h3B46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #873 f4e9e55f-065c-4289-87e9-58a9e8bd71dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 28209d3f-c607-4a51-b732-28595d51c0e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 c2dc9375-7782-4812-99a3-d5e652798fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 684d5657-89bd-421d-b903-948974f08ad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 3562b98d-bfa7-4982-a2e2-c3c2ad73dd48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 8ce86525-493f-43cb-92b7-7cc2de953e7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 59db8204-d5ae-439f-a21b-6b7aab454c20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3828;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h8031, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #874 7780aea4-8951-428e-90ea-3978f004a02b)");
unit.assert_eq16(16'h3827, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #874 8a08d930-15d1-4baf-a964-bfcf615ca28f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 9f9e5056-65f7-4f8d-83c4-3d0bb172140b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 8b8b595b-dd73-4599-8506-869d1b017f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 20df06a8-0aeb-4805-9c26-90a0c35ce735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 2d8fb3ed-fef0-4308-920a-c59e18337534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 af78f123-3715-433f-b054-688b0bdc0975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 1b53c50a-dad9-4cc9-9fbc-0b38ef1868c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD75B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'hD75B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #875 0d5bc338-7480-4d9f-8b46-9cb688c42bd3)");
unit.assert_eq16(16'h1E38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #875 41a3fef2-7a98-49a1-853c-fc316d479438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 c0bd832f-d2d4-44aa-bb29-4816c6765504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 40eb3532-ecde-4255-9157-d853b80b7aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 b1b214d7-4ead-413b-a462-951641bb92a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 da7e4ea6-22c8-41a4-a625-05c2cb719f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 b6a3a873-819e-4668-a920-d8aa002a1a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 6e2b34fd-662e-41ca-9515-c5a1b8d7ec30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3808;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h3808, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #876 b2ab2546-931e-482e-b634-86b7f2f9b01c)");
unit.assert_eq16(16'h643F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #876 bdac157c-a668-4c7f-8293-ecb50a8c53a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 4948adba-31dd-495a-ba07-5f43181d8135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 e8fbda8f-a5b1-473d-acd9-bd2237e72a43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 c7a644f0-dd31-40f5-8923-290e9c645c1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 33579867-4289-46ca-a1cd-469f1476acf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 fa4b8549-b28d-44de-bb68-fe709472d30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 d495ece4-aa4a-4caf-beae-5709bfeeb962)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'hBC1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #877 cdf39d01-b6bd-44b9-a975-ff3c26b8e548)");
unit.assert_eq16(16'hE7F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #877 9588bbc0-64ab-462a-bc85-e9d603f7163b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 d22e2d7a-7794-486c-ac4b-a5a17a705314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 3e97eb9a-f26f-44bb-ac88-4fef4eee873d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 c12d2671-c76f-45ee-8eb6-bccaa356993e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 b4f1d7c0-3603-409d-8fa2-bd770eca28c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 f35c1d31-27d8-4003-b858-58f8de0c08be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 cdc7aed7-e6be-4c79-a175-50f9a3e28b30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h0E7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #878 aa718b55-dabc-41a8-a538-3bc793ffca86)");
unit.assert_eq16(16'h1A7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #878 bcacd76b-b5cf-4843-8e65-7a8b97b92213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 fdb9e703-2caf-4fcb-9c2f-411540a5851f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 d6536add-8e7c-495d-91ff-b03b298d8599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 93255d06-7c3a-4479-a74d-905bd237c63d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 5d3c4b25-1a2b-436d-bdba-86798b2ff6d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 1c463725-6a7d-43b0-bb4a-2f0984925289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 90451b59-a81f-4ccd-9ad4-cd42e26ff1d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE145;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'hEE5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #879 1cecdbb7-9495-403b-a546-015ace6eadba)");
unit.assert_eq16(16'hE144, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #879 45e65198-8c74-4805-b9ed-aaa9cebf7e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 069d884e-4141-4387-94ab-fa1bbc2b3af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 e220303a-39cd-44fd-b6be-59eef7603f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 0524b31d-3cc4-4306-813d-2e377a8f2adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 9a205283-202f-47f3-9f00-40aa8e4c5138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 beb2d383-9759-4efb-b668-b0bf4997e628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 fb3fd8cb-e5c7-4b67-a7ea-8279be4666c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h94A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h14B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #880 b6565580-fc57-4177-935b-ad86fa5665ec)");
unit.assert_eq16(16'h94A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #880 5b0c65a6-e287-4813-93e0-96a267117671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 97b969f3-686c-460d-93a7-3929fb318341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 d404bf45-5c0a-4a53-9188-e29c2d0eb976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 bc868094-3d6b-4137-b9f9-e47134b3b85c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 426da0d4-3385-4f75-8024-60fe22c50416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 302c29fb-b58a-4a52-a081-b4d4c7015360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 3c3237d2-08e0-41af-b523-3a873a8ec38a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB40F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'hB40F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #881 019f0023-8d8b-44e7-a3be-20397da5f6a4)");
unit.assert_eq16(16'hD4CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #881 051ceebd-dba6-4ab6-83de-668c6e4360d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 8fed7a0b-0ea3-4102-bce9-82303f835a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 2ca69daf-2e62-457a-bd1a-16b180de22d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 4d5cf7b1-ab31-48f4-a6fb-8f8299d1939a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 ca375633-6bc5-4c41-b1b3-bc68fa18fa37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 8e6c3373-f3a8-4805-8396-3034b6cece45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 88496363-b3cd-488c-afb8-ec2cc919bcb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD6AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'hD6AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #882 3ba405d8-8f90-45f5-bf43-0a48cdf71fab)");
unit.assert_eq16(16'h2E13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #882 f77a7799-b212-47a0-ab28-7dc9a4c3a6a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 8d4f6f6b-4797-4336-9ffb-595438fb9a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 24f4b0ea-3cb1-42c6-b5b8-0f8933c1d0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 16928d8f-0e55-41c1-8180-15e3863581f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 bfe74a59-0e38-4598-a6f2-c4222271922d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 b69577bb-800e-47d7-bbf3-36497f31150c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 b5c88aaf-99da-404b-9974-c42f8438a937)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1867;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h1867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #883 df3d7320-d986-49d9-8814-9562e47ceeae)");
unit.assert_eq16(16'hEC7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #883 030a7660-66f5-44cf-9882-cea6acec1a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 ac3ac9ef-5cfd-4724-818e-996645dd932f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 72b8bda4-9770-406a-ba4f-5501bb3bbd57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 42d1666c-7f61-484e-b5e2-f4f936c7af66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 2a9849fc-a965-46b1-9ee5-7d632353a7e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 7152a925-9d83-4424-a782-7a474357c55c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 96d3d758-f429-4184-a11d-669cda3c9be9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h7E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #884 0451584a-e4a9-4f2a-9bfd-957c62749551)");
unit.assert_eq16(16'h7A09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #884 59cefb97-ede8-4e43-b2d7-f00ee5aa99f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 f31e9ca2-d8ec-4526-8f02-1a417b12c487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 9c7489c4-1f4a-4ae8-8e95-0e7798188007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 9ac23bbd-3b8a-46b5-be54-9c7431d84d7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 9aeaeb1f-8135-41a2-b9a9-31ce0de4e1e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 d33e8baf-e8df-4bee-9ff9-f12a7e7484cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 f670f6f9-a397-4692-beb2-f8ae616fa92b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4AC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2335;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h4AC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #885 c087cc9b-ffd4-40fc-a859-9fae0e204ce0)");
unit.assert_eq16(16'h2334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #885 0282ed06-8d73-4c81-b1ad-65d242772f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 5ae4faca-664e-4353-84fb-517094ca0fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 ffcc2f28-c897-4772-bba4-c4d3051f9888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 113e4a3c-d704-4c95-adc7-b6b2e9e987c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 8ee12f24-359c-45e6-a2a5-9587a5366715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 6ae3c26e-e7ea-4ab4-8b11-24d40db7cac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 36c9a4c0-0f90-476d-8db1-3824bdae2ab3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h974E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h517D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h974E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #886 7e819ea6-7bb2-4cc9-a59f-951c105f520f)");
unit.assert_eq16(16'h517C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #886 ba2f8eab-282e-48f7-9725-abb0d6501e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 c13d1300-3840-4f77-9de6-8c0e4398591b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 044a2882-510a-443e-98b2-a95af9223da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 c38e528e-6224-4ad9-b6d2-273e62edde71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 efb80372-ecb3-4a62-b33d-dc14ba012eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 237ac9c5-008c-4c87-b6fb-9d77d190643e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 654c73f9-ec02-4edc-b2f3-ae0c3ed09fee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB880;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h6E6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #887 dea718ab-6b1e-4deb-be94-385269513323)");
unit.assert_eq16(16'hB87F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #887 70c91818-82dd-4e3b-9f04-b7fcba8d0c5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 7b84b036-0c13-442b-aee8-144d4ae17b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 c0f1e8d6-f372-4dfe-8bd9-e15173cdd10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 2030e8bf-3328-4d7b-9ccb-60c4393c4bcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 5c3f3d19-3a5f-4db7-9dfe-515939e113af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 463abc5e-c624-47b7-b369-fdc7be5d46e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 d417a595-64f7-43c5-960f-7e8c9b6b22b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h004E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #888 2766ee61-fe25-4791-89e3-594f77dbfb68)");
unit.assert_eq16(16'h45D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #888 ad824d2f-f455-4974-8d84-a6676f1e43d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 bf11508c-26d0-415d-b86d-6f2cd0c99f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 bcc44804-a2c7-4058-9bb2-744d24648eef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 6bcc916f-f467-4a20-bdaa-8bffb8437b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 6795d90a-672a-4213-98e4-72258f655a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 7e6875ab-e61a-489e-b630-de7f4e7d927e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 a82cd222-6b9d-4dae-b7ef-3f77ca68afda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6B95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA91B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h6B95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #889 ec8e77ac-471d-4ba8-a10a-81eb74f008de)");
unit.assert_eq16(16'hA91A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #889 7bb0e34a-0352-482a-9b0d-cf06adb7ea5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 fe663be3-e73c-4410-bc79-4f3ce9830744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 13ea4d3f-8518-4b24-85e2-71a29ddd6792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 ab7b1d15-4578-4579-96ea-880aa7848216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 1a491bcb-3473-4b90-82d2-a55bccd3d246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 ebf1633e-2621-4b5f-bed4-4fb13b0546f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 3ab69ce6-1af6-4083-8b84-3461bf9c1f56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9ADC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8027;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h9ADC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #890 a78f1b37-d9b8-4ee6-a02b-7145bfa44fb0)");
unit.assert_eq16(16'h8026, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #890 ee17cfda-b183-4cf8-a13b-8b9763c854d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 3d5da979-3c6b-4eb8-9f99-14ec3de414d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 fa6565fe-c051-4f7d-ae50-a3e4395e4d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 ad2cd71b-69f4-4827-8604-87ca5ab1637d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 0e853f47-f3e1-41ad-b6d3-5faa9e91ea44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 74903b88-3d7c-4ac3-9f6a-dc060c2a101c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 2f771cce-b828-4895-8086-4bb4954a703a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF732;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'h5B20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #891 3c8092e4-660b-435d-9016-bfaefffb4500)");
unit.assert_eq16(16'hF731, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #891 c73976e4-6125-4e2c-a375-3c7d8a96ea5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 8afaf3fb-51f1-4e20-9637-ca2ab8629f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 d4b000a0-ba16-46d3-90be-b5ea75a5fad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 d4cff45a-3f2b-43fe-b9dc-d2034367ddce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 a502ec90-f5bd-437b-9aa5-c0399bb6dab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 99dad109-b6c6-423f-a243-3bb41b50c83c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 2c25e586-4a5d-4fed-a7af-4c1ac8beb69f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3191;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h3191, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #892 f182215a-6ca3-4038-a99c-2cb139389d69)");
unit.assert_eq16(16'hD728, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #892 c79d073c-c522-40ab-a02a-ab87917ea0c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 293634b6-cfae-4d84-9091-1aa1364db986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 c756f124-67bc-428a-9ad4-0e12bf4d6706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 96d96f20-e144-4046-a4cd-4ee2af5a42fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 04f3d491-29ba-429c-b746-b9db1ce900f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 a0f7ffe4-5165-4535-8ead-b873094cd3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 3bdefdbc-fa0c-4c0c-bbb7-ca2e1e1c3fb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h568C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA438;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h568C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #893 141adb93-e3c7-4f53-81b6-0600dcac1271)");
unit.assert_eq16(16'hA437, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #893 d2fd8322-ccd3-4565-b7db-70d20bfe4d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 fcc4da6d-49a7-4701-aa42-6e41bc0cba71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 400426e8-a547-404e-be1a-3bbdbfcaaf7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 562dfc29-2d3e-4ddb-b358-44e4384de1e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 1608d97f-8c53-4a6b-ac2e-2e6cf29e9b0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 1439f367-a70f-4e3a-b864-30346fca834c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 035bed85-907d-4cc0-895b-637fa6ff9809)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE3A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'h5E8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #894 ecb7c754-fd17-4c35-9fa2-a66032b38cab)");
unit.assert_eq16(16'hE3A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #894 b10e782e-4295-4057-b734-f09e747f40fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 5cae4bc1-e637-47ee-be8e-3621ca50b12e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 89375f80-d2bd-49f3-9c52-99f6c8ad40d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 a0e42e9a-a884-49d9-b666-29a55815edf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 eff49b15-9cd7-46f2-910f-8878c0048683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 d5a4b0d0-fbfd-4b95-a74d-dbd24e289680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 669efb01-d5af-411f-b5ef-c769672f232e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF69D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h4E87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #895 68d4ecc9-dcd4-4d36-b5ca-07e7d5a6af5c)");
unit.assert_eq16(16'hF69C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #895 9d6beae9-070b-4ed0-8175-bd27ba70e567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 a8c89151-96c3-4d1f-bd5b-591a22cc9f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 7921ed6e-c447-4fbd-b87e-d8c62abd4dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 c87bde9a-0575-4e58-adf1-ab1e7c1e9bad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 2cbb00da-a078-47bd-84b9-f6bf47892210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 338bc7bc-e67d-41e4-9922-b2a0c1149ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 5f50c5bd-e413-49b1-8a64-68eb6aa2e369)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5992;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'hE6DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #896 c8091578-2368-4d79-bd00-26c1d6727dcc)");
unit.assert_eq16(16'h5991, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #896 d644f2eb-ee2a-4610-bf0f-e362b9a2a037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 3fe0b1f8-d836-4718-bedf-a77fefd52fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 4a27d1a6-3397-4aa1-8c2d-69aab1da7fc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 e9736b00-74de-4fae-9d87-b908be9ea012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 bcc639e8-1dd2-49d0-89f5-58789bb1ebd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 4b3ef4f2-9b01-41b3-91e0-70ef8178cad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 2d4dfae8-7a30-4198-8238-04e43d7167b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5DD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h5DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #897 cdb79864-4ede-4202-b88c-5d55113c6aac)");
unit.assert_eq16(16'h83ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #897 05bc32de-6db2-4400-a985-49ec9dd2dd8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 12e1965f-b7c8-492f-9932-343e8f916273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 20ec7b73-d4b8-4e70-9e59-f78a6b886de4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 5e514593-4da3-458a-9df8-39f81fc8e851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 69bde9bc-f540-4d1e-93d8-e63ba7a176b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 550a4d8a-22d0-4720-be7d-e8a97787fb9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 afc0031d-ee9b-4891-9926-6a7e303bd52b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'hAF59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #898 cc044c8e-92c9-421f-abff-77dba17ae648)");
unit.assert_eq16(16'h5E05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #898 883b7262-e8cc-4ad5-a514-09d45827642f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 6b74014d-9893-43af-a327-88c4e79e4671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 9c6838d4-8528-4f55-814d-a1c5d01fd0c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 49d83d49-4cf8-45d9-9c26-81c53611cbc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 65cf1302-80ef-4429-922b-7051b18af23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 ae496279-2624-4a11-bc57-59666bb6d5e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 c1bfd9ff-1877-4b9b-8c88-8ccfc1a69c12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'h4CB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #899 cd386bc2-07e9-45cf-95f6-c4cd8a84ca59)");
unit.assert_eq16(16'hD9BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #899 0ff71176-1aac-4c1b-9b06-865e81b424a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 73a9753a-acf9-44e4-9d1b-ffc853619b93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 735a3ae4-0489-499e-92e6-74bf216c1ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 222b1ed8-0c92-4704-94b9-b43c04944bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 77333a92-9153-4103-8a21-f7c09fd2b1fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 70a9c41e-869d-43c1-ae6d-416efe428029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 1b288c43-a16d-4691-9b9c-cefedf369512)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h798E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'h798E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #900 7c217b8a-17a1-41de-a2a9-d2c7a48f58d3)");
unit.assert_eq16(16'h0E0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #900 44f61c7f-e561-490f-a2c4-1bb9b2124f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 f8abc337-8f18-458b-903a-3b43cbdee4e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 fe71385d-cb9e-4869-9897-0de86b34632e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 b395b065-e2de-4346-b54e-40aded87ec3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 222c3459-b869-41c2-9a36-d7099b3764ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 b9a606d8-7ac9-42db-a843-7bf5f000fc68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 167b833e-0b68-47d4-8101-213b57354af9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'hCB5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #901 8e1ad745-b355-4417-b553-41fa50e17d7d)");
unit.assert_eq16(16'h42CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #901 e98737db-6589-437c-a83f-4b053be7e05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 086d4ec2-0bcb-499b-95c5-3da19906d8ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 e9ee6463-6fbb-4ed4-8895-86e0fb401b52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 b3b34494-2fe9-49a8-8baf-4e4e22e69609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 8d328aaf-9bf9-42b8-9c6b-3f14d2f52c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 6b606f9d-db5e-44d5-a295-ae151fb581cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 b5ddaa04-8ad8-433e-a64c-e0b8c3836dc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBED1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF8AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'hBED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #902 777b018f-3243-4ea1-bc6f-01ffb6251a7e)");
unit.assert_eq16(16'hF8A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #902 19ecf7a6-7b5e-4f34-a614-f0509b21a72c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 d701fcd0-1e30-4794-941d-bffe0513fbf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 3ce877e3-652d-42f6-97b9-5c402216404b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 b86e3cd6-e09c-4782-ac86-0d56f2907af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 7d670665-bf19-4ad5-b7f7-0c560a0c777f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 ea46b814-4a98-4e8e-9062-c691cb1359a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 6e8fface-b916-43e5-a9a3-79a3be61eb63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h06A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #903 423ca8ce-0dad-4678-b257-de3c0148d004)");
unit.assert_eq16(16'hFCAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #903 c0d2191f-d137-43cf-998f-a7d6a4c28485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 42de0367-1af3-4ed1-801f-c9e2517e6912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 1447826a-5de1-4b79-a5d8-96de478b4f79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 2fbc57d6-cb46-4b3a-aed1-04b27234f60c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 04342b15-2945-427e-8fc6-5aee30720fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 dc0379fb-e18e-4221-983a-afd2dc3a1a2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 da3a3deb-78e8-47d1-815f-ef4b44e84031)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'hC8DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #904 086117f8-eb1c-4e7d-916b-70a2bee40c4f)");
unit.assert_eq16(16'h5C8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #904 910728ee-06a3-45d1-a462-b85bca3b5246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 4a496b69-b401-42a3-a629-dc4344cd7ab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 fe8d869f-7651-485b-9973-11433caac262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 aeff2aad-f7da-423d-93c8-0828a0c89a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 fb099727-8dfc-474d-bbd8-ea123717aa05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 fac2c5b4-164a-411b-82d1-d4088cd9eb61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 04dca55b-4fba-4f2b-a2d2-1c809afdc7f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'h5764, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #905 f3434887-81a6-42c4-9277-59e96d819c9d)");
unit.assert_eq16(16'hBF5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #905 dd8a5450-0468-42da-857a-c0408a6b694d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 533a48d2-1006-4f2d-9eb1-b447e3e5f8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 73d32f89-5681-4da2-99a2-bab1c0c7f54c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 3f6bfb8e-83aa-4b99-9ede-a810d3a50547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 a9707e12-9c46-4715-9088-bcbf57b31232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 976edc28-aeaf-42bb-971d-0151b444a647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 646602bb-4b80-4984-ae46-9515e7a2bbf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h99BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #906 6cac72ff-a8f4-426b-9b8e-0883826d18d3)");
unit.assert_eq16(16'hA3B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #906 9e4064d4-24e8-46b2-8452-c8ce7a8de442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 4bf240d1-32d0-4fd4-8a3c-3badb00ec389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 826b0e8c-0b63-44ea-8ed0-ba2de25761d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 b9fcf1cd-a3f9-423f-b471-1f8a971fb51b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 9faaa124-68fb-406a-a6b5-41be30f80d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 228a4061-7c2e-49b4-9490-c16b8aa1f677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 4fb3afa6-888f-419b-8074-7d5f1b49d9c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h90A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #907 59785513-dd2c-4d3c-bc77-019963f3c7cb)");
unit.assert_eq16(16'hEB00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #907 4292ad8b-6ca0-4a8c-9589-bac539aab2fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 e72a0615-b283-4ba2-b084-eb73330fa2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 67624c82-e983-47e5-afe4-63ebe12150e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 5254e184-ab26-46c7-8bd7-8e82e59374c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 ea453376-ffa0-4df9-95f8-30894ce99812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 4b7dd5dc-3696-42bb-a30d-1f7934e725cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 4f9d811d-7535-4fa4-8602-47cb8721fc89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'hEB40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #908 e562557a-168f-4e04-b214-91f81f1588d1)");
unit.assert_eq16(16'hCAB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #908 711a3dd6-c5d2-45b8-b195-94c8bbeb27f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 351badf6-ce0f-40e4-a842-b8c8aa13ef59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 cea1caae-a176-46c9-9333-8786e7395d50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 20d11657-c8a4-423d-b99f-7b15f65dfa74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 fcb8b25e-a486-4a42-b9ad-ccbf908c349e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 327deca0-36b4-4938-b5f6-0e3fdfa233cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 20406ba6-68cb-44eb-a34e-789d7927b6ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'hCCBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #909 d2cc838e-eaac-471c-824c-aba6fdce2249)");
unit.assert_eq16(16'h6FB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #909 12b0c148-242d-4069-b9c0-ae37ba8659e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 611a189a-df8f-4012-9565-3f90df990a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 e97a6c60-6e62-477c-aae0-96467a6dc455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 baf4c71e-0159-4834-984f-fed9c5938df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 f4043e49-5fab-49f1-92f4-b95195db90c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 df49a5c7-0e0f-4a40-acdb-07686f1567d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 12d2fb28-001a-4639-a3b9-9f7d00288451)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'h0D5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #910 a6f84c27-b263-4919-b863-3b4790aaa5d3)");
unit.assert_eq16(16'h30BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #910 1493d396-0670-469b-a0f5-4fe4b14adb10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 f2ac8245-0106-4aef-98ba-c7ea75c04c81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 e029665a-1e47-4151-b1e9-c934454aba03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 cea1c9b6-4752-416c-8bab-d88cc404ddb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 de08a4b5-9623-497d-ba8b-f67452939624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 a205e536-41b8-4c62-a50d-ef05253c7181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 25926a6a-16ec-4018-8ec9-9d0f02ce7afb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0958;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h194B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'h0958, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #911 095ebb36-9307-4ef3-8e52-f1832e974e40)");
unit.assert_eq16(16'h194A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #911 757803a1-8af7-42a0-bf51-b7756e762b20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 769ff8ca-aef7-4a40-99e8-3e9da103fa88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 0dbb25f9-6542-4cac-b608-8589e54e4343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 dc2a0991-e9c1-4790-b60d-fbf9c21e6384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 9f9e461e-85e5-4603-aeba-ccbf331abd66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 171bb775-89f8-4f6a-9c11-8f45ddb651b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 434cbfda-7fb2-4cf1-8061-f41d6f588a43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD13D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'hD13D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #912 847b9e0c-d263-4502-95de-82d5445cc157)");
unit.assert_eq16(16'h06D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #912 698ba62e-948c-4a1f-af29-431b1bba0811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 91887039-a384-4dc7-91d5-be953bfd2f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 d0efc2c1-304b-48da-9c9e-371a490c8fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 5c96ea95-c853-4a7d-bb01-38fb9b4bc920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 54421ba1-24b4-4826-89ef-8b77eca2f69e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 819a894d-20c1-41d6-a24d-74c3cc17fbf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 23e923ec-3120-413f-bf6d-cacd0f573f84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7732;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'hF3F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #913 a4ce37b7-4d44-42e2-8fd5-166682d619e1)");
unit.assert_eq16(16'h7731, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #913 f05bc664-db3f-46a7-9bbf-e492634da20c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 80688215-0e3c-4ec8-bfde-fdc106a1b8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 ffa9014e-d738-4222-8821-b7e09ceeb02e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 5d6d52c1-b95e-4e91-a03b-c26187dfc95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 f4055e71-c9ed-47e9-bb32-201af9a9b7f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 0b502fa1-256f-4532-8b52-abc46e8dde91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 2b10ecc0-f670-4a1b-aa4a-42abc8d1caf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2ADE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h2ADE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #914 6c6a62e5-44d3-49a4-9c60-7a3423055551)");
unit.assert_eq16(16'hCCB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #914 02c1515b-9b19-4359-b871-ad5b0ec84c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 952bd020-5d61-4b55-a971-edb8350216bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 37d5de75-40a0-43e7-8819-e24e7194cf96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 f49c38ec-9d28-4dea-8b33-901b57d90258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 e2dcd0bf-1b47-4422-9c35-91f92a466794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 f36d823a-2073-4dc0-82cd-0c4477268287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 32bec0f7-abca-4476-a061-7b257fab7158)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC3DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'hC3DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #915 5d9f989f-a4e9-4388-b16b-de41257d93dd)");
unit.assert_eq16(16'h6D80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #915 5a481c7f-6408-4a63-b96c-a58c7f79b2a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 081e04e2-680e-463e-b255-f589cb4f9def)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 f45a4a87-057f-412f-ab32-cf9e806bead3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 1f315a1a-45ef-475e-853a-f76e5d56d15e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 d176be52-4b6e-4a0d-bf63-4a920e13146d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 feb2fc3b-57ca-4817-92b1-efcc322489d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 741af24e-5f39-495f-9221-3fc3ff7083b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h684B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h684B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #916 550cad15-2668-40e9-8999-27fe05cf9932)");
unit.assert_eq16(16'h00C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #916 31fcea3f-fa99-4beb-8f67-f30c523dab06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 ce3d2be6-061b-4e6e-b926-442aeb776628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 eea6409d-5f5e-4eaa-bea4-3e9231eda35f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 a83a5bed-c921-49ea-88fa-d0c25c98472a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 c6ab32dc-e721-4d22-9e03-8f59a1e410eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 b5c4e725-ffd6-4ef4-b283-fd2be22ddbdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 cc964067-3373-4078-b82e-a51d6262e0fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7CB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'h7CB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #917 3bf52053-cfc6-45ec-ac7c-db2e73a279db)");
unit.assert_eq16(16'hEF74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #917 d2ed5b4d-1e35-42f8-b40e-70a71bc21cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 a1d2d062-9a5e-499e-8ca8-251aaa16d8af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 e3ca5618-0e4c-491b-bef8-d869ce3abb25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 aadcc01f-4b46-4e30-9e53-ccc5feff1499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 5027a3e9-41b5-4cba-8edb-ddbea6590a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 7bcaf5d4-de75-4053-ad47-56b1c2636ba7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 1fbe3663-029d-43a5-adaa-1577f824fd72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCBAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2086;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'hCBAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #918 40b478c4-5d05-4199-97bd-2616522b6e32)");
unit.assert_eq16(16'h2085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #918 c466885f-4757-4a09-b552-dba987a90c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 31d66e1a-c27f-47ac-bce3-19d5f42f5f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 27c215d7-783d-4afd-b600-4d75b7eb0a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 af83a10d-7b7b-4312-acfe-7723bd929f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 325429a2-223e-4ce5-94ef-8ec4c92955ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 91590923-650f-40bb-af95-72f6620cc2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 c07dc4a8-2ced-4a1d-8176-9b94ed00aa84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF474;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'hF474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #919 29df51e0-caeb-4ec9-8cae-75f3b64a0b22)");
unit.assert_eq16(16'hAE7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #919 c3b1abe7-db79-49d5-a5ab-c5dae56ae5dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 25c74eff-7164-40ec-b367-73b6eafc2218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 7d3b57a3-22e7-4ef4-b524-418eeefe22a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 50363b9c-6718-482c-9c2e-cf39a71354b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 66a46a05-8ff2-4868-b2f1-da55ab8487d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 bc0d2dea-e07d-4fb9-a0ee-9dbe38a4ba64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 79c1536d-5d58-4abf-aed7-fc08fcb2a6e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h699A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'h699A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #920 7954e246-2434-4976-adee-eb1275ebe586)");
unit.assert_eq16(16'h84F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #920 8277d449-6534-41c0-8458-e9c55f47fe77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 95e76be3-8de9-4b60-826c-be15b5b94670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 f210349c-d2e7-412f-ab59-d47edf16eac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 3929a901-88d7-4c35-80d5-d2bb933641c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 0e5b136c-67c5-4483-bd55-d36490c4aa45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 c0600898-089c-470d-a061-ed0c418e159f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 d61311b6-900d-4b78-a348-644bf4d218e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'hDDC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #921 80a6047a-e090-4b3a-b814-add3d0425132)");
unit.assert_eq16(16'hB3EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #921 8fc4dd63-1b3c-4ffa-a897-7a2d13ddfa66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 5c68ed69-ac37-4afa-9541-b53bd174d162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 11828f57-69e7-4e97-bc48-a919e25f5866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 a15950eb-5a4e-4119-a0e0-26a2d166f176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 c24de9b1-d22b-41e4-a936-387459be48d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 63564bcd-9c27-42b1-8e1b-df077fcf79e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 4aa1732c-0289-4f35-a07c-1381567f8554)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB07B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF761;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'hB07B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #922 34910401-34ed-49e8-b89c-34efd6c04640)");
unit.assert_eq16(16'hF760, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #922 649ccb5f-d260-4667-bc73-8d25e9505aac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 a4c2270d-b54b-4492-b805-1d00eeacc775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 df896166-1ab3-4eaa-bcca-88e37968f0cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 bf3b0506-8d3e-401d-87c9-125ba0318c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 5cae656f-41e0-4092-a3a8-111bf5084852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 734d9bba-b673-4acd-9501-751601518757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 6a0f29ba-7514-48d0-be8b-a6465e34b951)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0617;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'h0617, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #923 2654fe07-2a24-4b80-99d9-82706f56bc00)");
unit.assert_eq16(16'h2DD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #923 23cfa871-ae30-4782-b72a-4164fd800361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 a182d3df-c5a2-4c27-91c6-163990d24d85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 bdc5f8ff-05fa-463d-a4d4-c79d9022e091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 6c405939-44d1-4073-b4c9-50e1f067dd5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 24a87513-17dc-4e11-a7cc-74330cfe2a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 8890c737-cf18-4bc6-8909-2ec12c3227f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 bd3a3359-6760-4faf-80dc-76a8ca32fb7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h4F83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #924 3a9d2e91-7d55-47c8-acc0-91bbf1f1a3bb)");
unit.assert_eq16(16'h90EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #924 7887d440-db1f-41cd-915d-bc330d086bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 ae1098f8-8778-429a-be69-b9f745aace8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 80e0d95c-6e63-442f-ada2-bd598ff02183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 979f0787-f5b7-4691-8137-e2872f1810dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 714f135f-56b3-4d06-a03f-f2d6682ec640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 11fa4e56-2946-4419-817a-c255b8eb33d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 598755ee-3ba9-4298-9539-81f791fb596c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h939F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h770D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'h939F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #925 f0472ed3-c6e9-4f7c-b95c-1368b9d3fcac)");
unit.assert_eq16(16'h770C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #925 77b66192-1b1b-4dd0-8005-8c19155f106a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 956d6329-7dc6-47e8-b91d-aa6bf0cfd284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 1d5af5b0-a1a2-46f4-af56-d52d83e6f56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 0dd07ad5-6d9c-4022-971e-4d6bcd60e22b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 319d5040-9168-4884-998a-c20ad03ace63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 3ff32429-a0e4-481b-8097-a1a78a437097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 09644162-d768-4b24-b512-666ded16af39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4274;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC70D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h4274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #926 d1f06936-6a59-45cb-9c3c-14718d556a5d)");
unit.assert_eq16(16'hC70C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #926 8b0a35fb-b9cf-4d7f-b72f-62699fe2c139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 c7ba6afe-684a-4474-9e84-e60a02dba0ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 f3f67a31-0bb8-4207-a0b6-db4675bdb1aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 742157d0-ae5f-4490-923f-c19ce8856a54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 f5bec600-6fbc-435f-b3b5-e4d629f85207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 8d3a833a-15e0-4b8f-a479-cf5f7e676e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 2f12a08b-81b0-49f6-8478-174c6b44f701)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4786;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'hCCA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #927 a625e9cf-32fd-4d4f-a33c-77e142a23396)");
unit.assert_eq16(16'h4785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #927 c8ff69d9-a85e-4d9d-9878-b16a5d5f390e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 ff9d4915-ca56-45b8-a945-8fe935e47b51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 1fc948c1-f956-43c9-a477-fc4208773ac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 2c70df86-172e-443e-8024-623b17e6edba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 3ae6047f-7127-4f93-a146-3d8c6b40e0b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 1b8b2d8d-474d-475a-a880-d731562aa968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 0ed2e89b-8df5-4a3e-9460-47a30f0cf94f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h739B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE28A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'h739B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #928 8228c8e7-8cc5-4230-a64b-27f18c953898)");
unit.assert_eq16(16'hE289, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #928 d52638d1-0b39-472a-9518-9f585ef2915a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 30b5b1ca-5bfe-4868-84b1-50af0b8fc526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 1e612b4a-a816-4706-a94e-9ec3cd11fcfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 53df8e3a-516b-4062-ab52-c42a2e94d0f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 587a8328-630c-480b-8041-c726dbb3899b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 8b4f72f3-11b0-4c0c-afcd-6cc1a84451a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 1c22b40d-4f06-439c-a7d2-c4c79dfec733)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'h3A2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #929 9931293c-2149-4547-acf0-d89aa6b20a13)");
unit.assert_eq16(16'hFE1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #929 7d6f7e0b-c768-4565-8ac6-efb3889ea5c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 a13b68f0-a3e5-4e79-9eca-14a6af66f3a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 916709f9-7eb5-4940-b170-9c1ca8481169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 ebf8d998-fc0c-4384-b13e-df2186df2061)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 4eb73f52-43e0-49ec-8942-c4a44a6fd649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 bd9e5aeb-d62a-4b02-bdf8-c488ee23b0b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 7c9fda63-9faa-46cb-82cd-077ea4010482)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF226;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA945;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'hF226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #930 4b11c48c-aa7b-4e55-9776-a2785d813751)");
unit.assert_eq16(16'hA944, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #930 1fe11d68-999d-4949-978c-7f051913101f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 95f387ff-2313-4b69-b459-43cfd7e72244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 e404c6f3-d4df-48c6-9165-182c62cb3d19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 7fc988c2-71f3-4f63-90fd-d30badec739c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 d53ce4bf-3d8b-4327-866f-1399875ba3a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 94136bcc-1ac9-4aba-8acd-a9a38139debc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 9c1b22b1-31f0-42d5-8a53-9be76c65afa7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB734;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB0D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'hB734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #931 5e1f0e49-b4fd-4305-a50f-9b7a067c0a25)");
unit.assert_eq16(16'hB0D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #931 915e2387-1297-4e1d-b169-4163be133980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 b62665a8-593c-44aa-b45f-4448f8210b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 587eccd0-7af3-47b2-8ccb-8949c71f2277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 07b8837a-d70a-4700-962d-24000d293fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 7e8867b6-7d30-462a-9724-5ad37de4db93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 de40c8be-7728-4f8a-a203-ff714f172af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 8682c3db-7f61-434e-b2cc-62d95d13cb7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF474;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'hF474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #932 887cddf1-88c9-4488-8df4-12a6cb509dde)");
unit.assert_eq16(16'h64D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #932 1a13d7ff-f5ce-45eb-93b9-de044e377fbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 df457ff7-cb50-483d-83e5-344f2196e25d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 938efdae-14ba-4435-8254-2ded90ce62ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 032328cb-1dfd-466c-ae65-ef889b6dc94e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 2004c272-14ff-4a48-a342-ab721227909a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 53d2eb1d-ccee-4a3c-b7a4-60f131aa3270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 147df66c-edb0-4bd4-ba15-0cc2a6485811)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB1FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'hB1FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #933 74c25c70-3197-4cd5-84d1-e9d8b27d2c91)");
unit.assert_eq16(16'h0C88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #933 1b0a4016-b0ab-4287-8f42-60a1c611ae6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 6d98c03c-ebc3-46e4-85b2-8404e11eb0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 cc4e93c3-f171-4571-a272-8e820e588fec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 4dbfe91d-534f-4b7b-a01a-226758dd9bf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 2eac2f7d-8a47-4929-9656-811bf85b40fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 e5a52b7c-7216-4c6d-a03d-9ac7698fd055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 41b5d16f-cec2-47ef-993a-d4d94b9d7b4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h12AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'h7B7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #934 e608423c-ec4a-428e-97e7-4718390e542d)");
unit.assert_eq16(16'h12AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #934 19103d48-d76a-4563-b308-314cfcdd1752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 07c6f297-1c55-411f-a722-7a00796475a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 1e8a74fa-602f-4d04-81b7-e6750ca6c407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 2372dc14-ec21-4d06-b250-3caa1e19c63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 e598698e-8096-433d-80ed-88b56485a323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 ff9831eb-2a78-4c9c-b292-7048168a056a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 73725942-6b31-49b9-84e5-da0e86e8df41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8353;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h8353, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #935 86338f5f-50cc-46c1-a0b9-fcb3f5ab1b7f)");
unit.assert_eq16(16'hC5A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #935 650dbffc-f7ea-4733-bbdb-365b6f1b0f66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 78a3f4b8-20de-4137-84f1-476d5cf7ec3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 9a66d670-bf76-4215-bb40-8911774bbbf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 2887042a-aef2-4f4c-bc9d-a325671c7dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 6dda7bf7-0302-4c6a-a0d0-2638dacd789a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 e8e29534-621c-4f3f-9bc5-7c30bdf82cc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 15606df1-3162-44cd-9ccf-1e212aae0a8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h083E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'h083E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #936 019805db-d397-4431-a940-ae82c2afa6cc)");
unit.assert_eq16(16'hC3D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #936 f3bafa34-bed5-4853-861e-03153abfad25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 5456f2db-3a49-4364-b865-67bcb14425a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 d61687c6-87f0-4b69-95e9-b9def5d43f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 138e5ce1-9eef-4de2-a742-6ab8c218d559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 6807e52e-4030-4ed0-905c-18ee4620c270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 dc6397a6-6574-4b37-b4ad-ea948fffecff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 30881bfa-3aa8-4414-a689-7623d1848000)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'hFF08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #937 67693aad-9dca-4391-9389-1ecdef66c79f)");
unit.assert_eq16(16'h24DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #937 f1e8fcbc-5288-4a39-a700-ca5c862dff4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 bf024c2e-3568-4a36-8213-2473bcbc68d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 4dcf4a73-2109-4cd6-a5ef-95e239360edd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 dc69d943-8fd9-4036-82c7-37eef0b4fa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 6b794669-d074-486e-a27f-0488fd525120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 4a9f4568-25fe-434e-9111-121c83695048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 32991c06-d227-4af9-84ec-c148f8c28a5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h643F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'h08CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #938 0cb92278-3fb1-4059-a347-2cc6aca6892d)");
unit.assert_eq16(16'h643E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #938 7428ec4a-2540-428f-b4b1-718dc90870e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 a359a79b-e38d-4de8-80dd-0d36c277c3d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 783983b7-a472-4342-a64c-f2ecfceb8197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 787955e1-79bc-4a66-a85a-74bd03395e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 324cab35-c227-416b-82be-d1dc2304a8f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 49183987-4122-4e73-a770-a8b263beb02c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 a1d75135-5ad1-44fa-b044-9d6f61c59db1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h01C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #939 3f807547-620f-4e91-a8f1-f9b572dd48df)");
unit.assert_eq16(16'h10B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #939 f8e09be1-8c52-4b86-9b3c-939409102a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 82366544-c280-45ec-b772-79c86ed6be69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 9b38722f-dc11-4136-b00c-df1d1b635556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 20d0e4bc-7508-45e7-bf71-38bb4d93ac08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 d44837dc-cde9-4466-9d0c-6afae33356df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 43ccf6d9-3b9e-4a20-b846-d6183b0eec4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 71530a96-ce20-436d-9246-ec589d98455a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h97EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'hFA4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #940 09785f76-b634-4f73-a0ab-953f1e2d48dd)");
unit.assert_eq16(16'h97ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #940 777a0dcb-448b-48e8-a8b2-3b5224433e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 0ab8344b-f1e0-466e-b1cf-0f5dd91654dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 76c29988-b7e5-43d1-999f-f22deae6335e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 adaa48d4-ed99-4b5e-96ac-27a7f2e582b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 93b4da21-5be9-4447-9cfa-592cfc24be4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 c7ca88ef-ae32-4777-974c-f2c0a290461e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 ef4bed7d-3ead-4540-a62f-b5b2d9ca4478)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC786;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'hC786, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #941 cd6a5aa9-3645-4e28-a922-ea89ea0c6b8e)");
unit.assert_eq16(16'h4D75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #941 068d9329-350a-418f-bbf8-93b94671e8ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 e8c1fecf-dd8a-4eb8-bf05-184d9f0b0769)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 fd89e8f1-2e58-4f93-9d3c-9e29af2b5324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 fb9aa174-8376-40e6-8748-56d220be17a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 5b286c7a-c085-4b70-9398-00a6168a0c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 2f850294-90e2-4396-86d9-2e6e75172607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 f360e542-65f2-467b-972c-f5b22761400a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h66B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5FCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'h66B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #942 c531639a-07a3-4fd5-b79d-5435c124ceb8)");
unit.assert_eq16(16'h5FCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #942 1450ccbb-e707-4d8a-8076-4569fe0a8fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 e8f26f1f-2969-404c-9af9-b1da30e4417a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 4f0c1a52-19ab-41a4-85f0-4cbd8bf070d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 52b8aab8-5c98-4b0b-8168-3b87059305f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 14373c51-7501-4ccb-a789-4714d98e483f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 a2632509-77e1-401d-a05e-065ac80f0f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 7ff38013-f5c5-400d-a477-c6da5d903949)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC32A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'hC32A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #943 2455288a-a421-449a-960e-74579dd124f9)");
unit.assert_eq16(16'hFDE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #943 5221084c-6902-446f-b3d1-059b59f19fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 15cac388-3eba-41c0-b26a-f0df45ea5bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 aa70f3f5-e329-412b-9ea9-02a7eaac7407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 e5b77007-9b90-4d5f-9aea-dc971b58924d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 cc50eecb-f1fe-48af-8459-9f2d445e6244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 bdeee4f1-32c0-42fb-93f5-5041c524c8c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 cd1db9a6-72ec-404c-9c02-62940887c01a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBFDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE08B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'hBFDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #944 133165ad-8314-49c9-84e9-3b1a2e023591)");
unit.assert_eq16(16'hE08A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #944 c24c63f5-4d1b-4217-8b4d-4a7844ba1240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 90371f26-492b-4764-a20b-6b43369cff11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 6e5f7f21-b433-48fb-9307-a3e732c2feda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 e49e9fb5-c2a2-454a-a78a-b46cc3f2b84e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 1b4a02ea-041f-4aec-a1a8-194f38c3809b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 f29a6fcd-3b0c-4fed-a757-af53f841395d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 64cd9e9f-3d17-44e4-ab4b-b8b437a1be47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3ADA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'h3ADA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #945 015d72ab-5e9d-4b96-ae31-054f8300350c)");
unit.assert_eq16(16'h0A11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #945 fd7933cd-bec8-4a07-b7a2-cb020390bf71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 bbd3ae0a-975b-447f-ad88-b5ba974bbc5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 5d5ad632-897c-4e53-9ff9-3202f76dea52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 68a3cd62-2c9d-4e37-b1cc-b6fc26ce1ffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 182165ff-0e65-469a-ac38-d1b232e85a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 c2582f0b-4438-4f45-82de-2c170cdb9ee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 dea8c8e2-5984-4fb0-86ad-14ab7582965e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h503C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h503C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #946 35d96040-5bf6-4874-8216-310242fdf37a)");
unit.assert_eq16(16'h5F20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #946 aedaabd1-9b1c-4916-9ef9-2e22cfdfb517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 dffadaf1-99c5-4743-9ab0-74f8a2e3ceab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 cf4c053a-b3ca-43d5-a28a-9311a430e45d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 3a15b526-ebf6-430a-a93f-12dd2be18a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 cd5fee17-c203-437a-8771-2b75c2aa4134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 54cdbd73-6ded-4cd4-bbc7-f4e417219e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 65a066c8-bb78-4c69-8205-3ed17c7c939c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'hD7EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #947 b448a247-3fc5-4d6c-95df-dfa693608687)");
unit.assert_eq16(16'h26B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #947 e2e13c25-fc4d-4d09-adb2-d845d5348e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 55a2899b-e919-44fd-9685-3cd1cbc19bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 dc0a25b3-0a9d-42a7-ad3c-4d9aefcabf1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 e541b922-ffef-4a51-9947-0de1700e0322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 cdca94a0-a269-4e9d-9633-cf0ff00b6d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 b8bb1910-1044-4952-b9f6-5f5c11f6dee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 b8d5cd3d-75fb-41fd-aaca-c7eb6f38b350)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB753;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'h29A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #948 eff065f7-f4f1-4099-a74a-16535564b3cf)");
unit.assert_eq16(16'hB752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #948 e3041cc2-6da2-4fa7-ad13-1fd6a6095568)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 330acb9a-5fe9-4fb2-8f44-6b13e5472f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 218d6e04-b768-4fb1-9c46-fe822858c0b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 e8c88885-0ab3-4d59-be8b-fce32476f6aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 9925ee6b-37ff-45ce-87a9-00adf3c84ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 55c48ebd-099d-4c2c-b0cb-493740194929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 081424a5-2352-4428-9563-178fb4dfb128)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3064;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDB9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h3064, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #949 ff410ab3-e232-41cf-ad64-2b11a0bd7a19)");
unit.assert_eq16(16'hDB99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #949 170012f5-0bd8-46c7-b60f-7af59bcd47d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 e3e380d7-9ca4-4ad4-a009-b68550a0d8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 7e6d19f1-6f8d-4342-8ad2-565109599210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 9c23eba0-b3b1-4cab-9b61-1aaef04dda0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 ef05d314-3e8f-4649-8129-915f4712d89f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 676e342d-9815-4fb3-ab5e-86fa64067786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 770735bd-a498-4544-a85e-d0f0ea0fc93c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h49F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC67D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h49F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #950 bcf1de5e-7474-4664-a97b-0d5bf20eeef0)");
unit.assert_eq16(16'hC67C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #950 0d58c299-302f-4529-bf5f-7978b0025c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 e25cb58d-221c-444d-8344-3146829efd44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 2077cc57-87c2-492c-9f8a-b80e931c5a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 b790ca91-23f1-4436-ae6b-dccda54a0297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 20ab56ab-1b5d-4b20-b514-5c9fa024b176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 31656574-f5e3-4d3b-a881-e467d789d1c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 157cfc86-6b10-4964-ba58-b5a136eefa9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2276;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'h2276, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #951 02bb8de3-031a-4ba0-89a2-00676df703e5)");
unit.assert_eq16(16'h68FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #951 33bde9be-ded2-4237-b9ae-e6348628f468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 9099c7f7-4f57-4b65-a570-967a8a461213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 ff1d6a20-f450-4188-a602-fd0e7d764821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 4e3e3698-3140-47cb-9d13-83a83f5d2b16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 fdf4a0d2-7f3b-4a6a-a1e5-f8e48ed9f5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 ee6b1892-b481-4715-bb0a-d40f56a860f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 233447cd-c82a-4fff-9eb6-43e43f93bf92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'hE1E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #952 33cc5a57-376f-4fa4-8691-2ead3877fe8c)");
unit.assert_eq16(16'h36F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #952 9d0e8fbf-0066-40af-81b7-95612b7d6675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 afc84287-7c1e-4349-8772-813d74941283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 adcefee1-c9fa-45e0-a579-09e17b9e8809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 2795046e-47af-42b3-a97c-0111085d3463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 7dedc2fd-feb4-4ae9-a453-63604505e575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 052a6d1f-b806-45a4-904a-ee72ce232b5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 f9443a0f-2081-4f13-8be2-61f977bc90be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'hB7B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #953 934e6e41-1ccf-4298-ae0d-93a358a85fab)");
unit.assert_eq16(16'hBAE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #953 6671d85c-4321-40af-b753-752cd31b0692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 db14275f-8203-4b85-8579-c9eb187e3d3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 ce3d729a-6d01-4a3d-b7ed-1f4bb2ba81e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 a3acdbec-7fff-44eb-a21b-403ad43741fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 07ca8f97-34b6-4c4a-aade-0cdab7a28107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 1c49fd72-4f96-45dd-a5d3-99d9404609a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 3db75544-328a-47ad-8aaf-de9eb00464db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE63E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h59DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'hE63E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #954 9f43e037-707c-4d97-a0b0-86d12bb58689)");
unit.assert_eq16(16'h59DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #954 eadb34e8-9f36-4a78-8678-803192e10a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 b35c6fa7-0610-4490-bfbc-95a85a8112e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 c3768360-273e-4a3f-b19a-8d29046d0e83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 9b04d55a-899c-43db-a2a4-74a00e5f9bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 15177f61-b634-402b-8522-003fd51fe342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 0d7d0b61-5311-4151-b856-868b8d750e4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 a64541f2-8ec1-4c2c-a2d5-d98479ad0817)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h2EDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #955 4e0fa52a-933d-4d23-9494-370c23cd0de7)");
unit.assert_eq16(16'hA6F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #955 4ad768c2-1436-4598-b4ff-24d9de559868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 37470565-ecff-47fb-802f-b3024eeed9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 03019988-f547-4a22-acf3-a6e9278fb08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 57ef4f0b-fc0d-412a-b845-3107ad94ae72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 9b6eba8f-5c85-4f31-a84a-208299c5216c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 58fc9e59-82e2-4cb9-96c5-fe2d98a2f8f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 a153cf00-1612-49f6-87ef-8dee611d0325)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA670;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h8C87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #956 bc03b527-51d9-41c4-ab63-6120b8bcfc81)");
unit.assert_eq16(16'hA66F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #956 09aef817-d54f-4cca-8ec1-09e11b3fc74e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 ca556dcc-8f5f-4d65-afdd-cafc8f37ff8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 9da29796-bd44-4e59-a6b0-57a5d0f6a6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 e75ae7ea-9207-4ae5-aa23-59fabf10a35b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 011a7049-27e0-46d1-bdad-d1c39d05215a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 65aa4910-96c0-4e1a-b158-ebc055de8229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 251c021c-22ac-48ab-8166-89f361c0b06c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD06D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'hD06D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #957 a01dde84-889b-491f-bb0e-f680247dcfd2)");
unit.assert_eq16(16'h1D44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #957 695d9429-f548-42f0-ad77-8eac716b96bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 b85e70b9-e518-4350-b284-4d633521732c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 5047fdd8-4ccd-4ee6-8460-6cda4efad6bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 7102cec7-0dc2-42e1-8d60-f1923509da1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 39eecd53-a273-4f4d-aefa-3936f84050e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 2f28d6f2-1529-4c4f-9d97-59ec4f13ff61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 e3e322f4-8240-45c7-b88d-dcf33ee49f64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD56F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE66E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'hD56F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #958 b772fe94-dcc0-4d7b-a77c-11fa3e8d2c99)");
unit.assert_eq16(16'hE66D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #958 ec2b6a41-1b66-420d-bbcf-0f14f06841af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 d922b92c-374e-421b-986c-6abfea04d83f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 14cb78ba-8891-4649-a987-3243d5cbb1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 48668aab-d5a2-4ac1-a849-0985c734b93d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 ccacb116-2f05-4812-ad36-a3b856e982be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 0edbce45-f942-496d-9263-2b80c5c1bfda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 065d5248-cd6a-4a5c-b3e5-75b2e6ef7760)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB67D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA651;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'hB67D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #959 e52f4555-f7e1-4896-b7a4-ad63a5c68053)");
unit.assert_eq16(16'hA650, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #959 1c353cda-f59d-4f7c-bfa5-4b3748987d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 719db35c-858b-426a-9c94-db4f56c00b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 10c89ae6-f626-43ff-8126-96ffe55b5e95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 8f98ea3f-6a2b-4792-9795-652bd20ddb57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 f0f596a5-f092-43fd-9470-7e0da937ffe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 0925f1e9-54f6-499e-b8b7-36aeed4d0ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 776fbbbd-3309-4135-b10d-51fa4bc4313f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDAC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h5AB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #960 c6387426-5fdc-4df5-848b-41d2e5d4ceb6)");
unit.assert_eq16(16'hDAC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #960 5cffc0c0-5a41-4e0b-8bae-1f3fcba15ef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 d78d7a23-1cf1-4f62-bb56-ece7e78e573b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 77676b5f-e94e-40fa-a0e5-176c97350e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 f0aa8ff5-912c-4850-88c8-031c43465264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 816ddf87-4789-4b2b-8f68-d9de0135bea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 0021c0b4-4463-49de-b82a-abd54ca9cac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 39ab78d8-2229-4aa3-8ceb-ec6777984f84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h089C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h089C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #961 82950b85-2d04-4a1f-98cf-03801307f248)");
unit.assert_eq16(16'h7B8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #961 ca0dd218-0475-4324-ad7b-ab8b112edcc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 3d726e37-322f-48df-b3bb-f1be1a6fb206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 472d4971-7e96-46ab-b8be-ef02dd020908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 ce44448a-6ee1-401c-be1f-d3de449b7c23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 337c27c5-16a4-44d5-b1b0-b91720a0ab52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 04e01665-7d5d-4fe6-958e-089936c53c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 0d091dd4-d504-4ce7-9398-c71ad693d7e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3516;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h434F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h3516, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #962 daef665a-9286-4862-bb2e-ff4f6cfb22b0)");
unit.assert_eq16(16'h434E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #962 fd0f3973-aa39-4a0b-98ae-fa55d85cff54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 7e207e6f-ded8-4077-a25d-3ec5a5b2f023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 055858e6-88a4-4ccb-9129-7f9aafb3999d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 5d2d0a09-499f-4bc5-8157-4c813adad4fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 513c265d-d851-4870-b944-b1ad4980cd3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 acd61612-eaff-4e9d-bc80-6938ad525655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 333066f5-d0d3-48e2-993e-9a8947ce88f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3DF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'h3DF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #963 e9825142-1646-413d-83f0-5bf7271f3b0f)");
unit.assert_eq16(16'h4A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #963 d3cacc51-1533-4ac2-a99a-eae195c50825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 7d351671-40b0-4f20-b30d-d564e7c2d947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 4398daf9-51a7-4b1a-a6fb-e9ff85840cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 1914b4bf-a283-498a-8514-3a0b70dec4c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 c40afda4-375d-4a65-bd73-4ed9c65a46c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 ecbbdcb1-7251-46ae-8a44-6928e28fe693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 1ba3ff8b-69b5-495d-b249-e6ab100610ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'h10E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #964 19995647-0eca-43ea-87dd-9321a109084d)");
unit.assert_eq16(16'h34B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #964 f4c0e33e-2bd1-49b6-aa2f-42a6a388fcc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 c028e212-fd68-4976-8667-dc1b7f633c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 7f6ed248-afd9-4d02-8e95-88532e18930c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 5ec6988d-6c46-4357-ab4e-c974dc768cde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 5c882958-45f5-499b-8a3c-cc68f6a899e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 1e16639e-212e-431f-bc72-cd894b84a885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 8e390107-60ee-401e-9731-5d1f314c11d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE4DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'hE4DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #965 65e6fac3-de10-4d37-b6a3-add334ae2cd1)");
unit.assert_eq16(16'h6B32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #965 88d80f6c-1b69-4d95-8cbe-e25fee650ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 477911b5-14a6-4384-a43f-86b9ab0c1934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 8d4d07d5-fd33-418c-9686-5aa16f4fc521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 fb7972c7-8443-44a8-99d4-c0b31ddd05f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 81f4cbbe-97b6-4d2b-948d-cc799f674c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 f5c9a8fe-7a9a-45f1-a70b-471c3e602d49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 b645f164-3ea6-420e-be11-5fa8bb8cc7e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB574;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h29DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #966 32913938-49ae-461a-82c9-cf7d1efb26e2)");
unit.assert_eq16(16'hB573, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #966 6f723e42-92b4-46b6-95c0-43d54912cebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 55616602-f1f7-40f0-aa99-28b2e460e3c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 6f6bca6f-532b-40d7-a5ef-1ee54ce13a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 746ccbf9-d169-49bf-b5bd-170c42c84cd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 e5072f0c-5c1a-42d9-a974-5c0cb3a0ddab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 e05c304f-17f2-4ff2-85cc-7898b06943f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 d470f6be-a571-47b6-b462-5421b1a01a55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF11E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'hF11E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #967 cfcc63f0-c1f1-41d2-9ffc-5de10e6a8f9c)");
unit.assert_eq16(16'hD2C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #967 42283ba4-9917-4607-abc9-c592d043bea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 62bf84a7-e017-428d-8ea8-9a8f79c42fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 ab020c6b-d02f-4bf8-bac6-282afddd8bcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 fe4a058d-6530-4eea-9dd6-b49fcf4f9cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 54972f72-ffdb-4cc6-b1f7-162ffbc16be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 2325bf97-9445-45e3-aa14-b8e11a970ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 4c5fb1f7-af76-40ae-9061-460decb14102)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC622;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8AD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'hC622, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #968 36c6b1aa-67f8-441a-8ce8-90048b4495f3)");
unit.assert_eq16(16'h8AD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #968 baee272b-2b9a-4f85-b3f7-5f3233396281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 827e29ff-b4a7-436d-9763-e635e2befd75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 ad28c575-14a4-47e7-a732-96b719265057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 20d03f18-dd5e-4f69-afc7-197644c8c5cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 9b5b349d-df3f-451c-a7b2-deb4e96f1c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 511d61cf-c564-4264-b424-d2fb2a96df8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 266cbee7-f84d-49da-91a9-4119af10fb9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h4CC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #969 095b1ff9-1773-4354-a1b1-5a3db72b0249)");
unit.assert_eq16(16'hCCDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #969 32b2943d-7ba9-47e0-9d23-fc612e9b21ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 d4841eef-1c3d-46ca-a1a9-d0bbee21d32e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 a04ba396-c8c3-47f6-9605-7198a530c172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 d1064698-1798-4cd8-bd07-f9fd23836627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 10ca69d3-680b-463a-8b9f-8caaaa3e84ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 8e2b419d-6ebc-4e4f-95c3-a87d5ad40a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 b4b7c5fa-673f-46f0-8db9-787f75a21aef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5257;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'h5257, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #970 13ccfe66-73b2-4409-9a5f-2b0ec982f217)");
unit.assert_eq16(16'hBFF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #970 1c4190aa-1716-4c77-8411-b4d3dc8c43aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 e01bdf62-5a98-40a2-9848-b4ae0f1c1403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 6f98fcc2-bc84-4c8a-baf3-067be5f4e857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 462d8e7a-46d1-4ddc-8ca8-ee1481bef11a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 92527e06-afc2-4776-8d89-b12496db59e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 6fa64502-9d94-4f53-9362-fb787dbe83b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 c75b99a1-71d7-49f8-a293-fde14ef1f43b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3EEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h886A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'h3EEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #971 b1d54a82-86f7-46f1-ae7d-97832ee224f0)");
unit.assert_eq16(16'h8869, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #971 1a3f2f85-cfd6-4318-a0f9-707d06a3cddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 4cfd3078-2a23-4e7c-9de8-cf6c45d4f86a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 3a1a8aa0-f253-4045-8a1c-4fdf6555a6ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 eaefc8ba-d139-4856-af7e-f9cadbaea854)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 e4e0beee-ed65-4d1a-bdd2-6e8442ee7003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 3a20c418-0710-4fbe-b1fd-6680048486ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 3fa063e6-1895-4560-8ea0-ad7ac08945bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h6BDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #972 4aa0c531-1468-4393-8e97-0712df47293a)");
unit.assert_eq16(16'hEB5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #972 f87574f2-2ed9-4dfa-b26e-4fd0796b5d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 0c3043fe-adf5-4be7-b832-e043e771a47b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 11e8ad23-6343-429f-bdb9-dc3f472f93d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 bf92051b-b5ed-4541-8504-26152acf48f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 9010923f-03a8-4191-8c0c-2f4efa6be646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 c85756a2-491a-4622-9458-085b4c126253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 73096636-7a97-48ac-923a-dd54b5fd30c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'hAF9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #973 01a27c8f-bc7a-446c-9777-fee6608367c9)");
unit.assert_eq16(16'hF6F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #973 b3a973f5-49e1-4bfe-8e26-07b454671a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 5b73c297-1cd9-4e8c-ba6d-0953faeb224b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 7532159c-be3f-4112-b3e3-cb616c5dfc0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 17acdd6a-6edb-42cd-9c76-797231ec3b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 a87704bb-dfb0-4bde-8c61-63286782a2af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 4b079261-c828-4d9d-90f3-2244160a5fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 fca95594-3bb8-478b-a0b5-f36d32a184c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'hDCEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #974 cc12c51a-c653-4503-b3a8-54d0f96d81ee)");
unit.assert_eq16(16'hDD90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #974 b4a07716-c191-46bf-bc6b-36dc00b14d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 91455919-7649-4e77-94c4-057a6ecfb77e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 2de2eb95-5e52-4228-aefe-84c27665745c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 aa5fa4a9-02ca-4651-98ea-a55720ed6a5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 f4d850a8-0ca8-4532-8199-c3a7030d7ccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 891b7788-075d-4427-8087-fc9086b33b15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 ed36911f-24a2-4091-bcb7-5d9bde19093f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC761;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'hC761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #975 0011a83f-635c-498e-8091-64207bc7affd)");
unit.assert_eq16(16'h1D06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #975 e1d26a38-3438-4312-aa2b-17a364022c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 4567ba97-eed5-47fc-ba02-fcaf059ab275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 4631149b-780e-4260-b995-88563829e7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 70967954-af17-4685-8ca0-255afb1502d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 61104bfc-0fe1-4073-9ecf-5dcde19666c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 04d3e78c-8303-4c23-934f-62e26208c4aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 bf57f125-efca-46cd-ad5c-0a79f22dafe9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9118;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'hEA03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #976 98db3d04-dc49-4877-b47d-1e06c5a5ebee)");
unit.assert_eq16(16'h9117, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #976 9312849b-ee7e-4fd1-97c7-f38618facc10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 b80a28f1-d71e-4371-b7a9-9697fdf48931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 e9f977af-cf1d-43c2-9121-8b162fc221c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 58b70b63-28f9-4e1f-b185-a2c87f9ec9b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 5ee203cd-861b-4118-9aa0-14e1bbb56571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 2bf56a4a-7946-4823-bfbe-74eabbdcafd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 7ffaa3fb-f22f-4ad2-bfa8-490797eaa15a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCFD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'hCFD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #977 17212396-b0f0-4b1d-a322-dbc7c2ca3dc6)");
unit.assert_eq16(16'h4D3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #977 6c53945f-8096-4b02-811b-5bdfcbe20e04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 5997f31d-1ed5-4468-b327-cb059e9c6009)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 e7c24c9e-7286-49ee-a2ab-b43ae8b9cd94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 46dc08fb-c604-471b-a6a7-638608a104ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 320c2329-37ab-4003-8b40-871df36e70d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 b94f3b28-c867-4c2f-850b-70252201d214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 413b2078-16a4-48e9-bf15-15219c7d28cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD49A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC1B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'hD49A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #978 a1c3d9f5-6943-4727-815e-1dd84bf02429)");
unit.assert_eq16(16'hC1AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #978 b0a1303f-cccc-4e24-b29c-ca8db0107f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 932c9565-06df-4467-9777-1429de51be58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 58d57860-eaf9-4ea9-9ba8-8642e7363ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 e65b8f6d-b5f0-4710-9232-4c9f24f7ef2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 b2c74a98-2d79-423b-b8aa-3ecf1b7dc218)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 0228320c-4972-4eee-afd9-b195c89d7db7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 906d315f-e2c7-4000-be86-54a95bb7b151)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2337;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'hBC91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #979 ea2770f6-0463-4508-b2c4-5a2e222d1a0e)");
unit.assert_eq16(16'h2336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #979 9db4ad7e-5764-4525-8e67-e4386a0e6f00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 2190e6bb-39bc-446c-9e4f-1e1ca65c8ba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 dc399e67-c258-49fc-82af-e7adae41b542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 63b17b53-f6cd-448c-998a-885b557eb365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 6d8cc9e1-dd63-4487-9562-281ef571d574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 ffe2629f-d4e7-4f5b-896f-2267d094554c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 ed42c8fb-e77d-4eb9-9cd6-36c0635174a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h66B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h66B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #980 5942482d-c9f4-4524-a1e4-c2bf27dbefb8)");
unit.assert_eq16(16'h4EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #980 fadeda0e-d730-4672-8e01-2a2ab51d2de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 fbd2b569-f9f4-4405-97cb-961a382d20a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 b1c4a504-7378-4dbf-930c-3c58f398dd95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 fffe19a0-63ed-43fa-9243-c46cbb092064)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 b658995b-3f61-4af6-9dff-7c3a833a9eba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 64c83559-ce99-4cb7-a234-731b197e11b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 64e6469e-7662-45ed-a6b3-0ec849019d66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7520;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h7520, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #981 55ddbb88-d918-4717-a49e-2c4c2e5dae78)");
unit.assert_eq16(16'h50FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #981 e356011a-6208-4a90-b3b7-faee92347f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 15b2cacf-72b1-481f-9ff2-14a5271bc7d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 c999d393-07ca-4689-a571-fcc734d5ef11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 5518d9a5-e9fe-4803-b73f-d9950ccb74a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 32cf9d06-d4f2-4656-81d8-5973a8cf662b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 47231120-71cf-4b2c-9acc-667286c44a30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 2a187c42-7a11-4f27-af6a-1edbf9b4966c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5811;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h85A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h5811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #982 34cf3e6d-1f87-459d-8f6f-618de33e0efe)");
unit.assert_eq16(16'h85A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #982 73c21945-af74-40e8-af11-afc57b2f1e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 24be4067-cd0e-4604-95db-f3247732f2bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 8277f383-06df-4e02-9628-1467f098986a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 2356e5c4-12f5-4cf7-baf5-d386f52c7036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 8cdde5fd-cb90-489c-bfa1-52d2f7547425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 8984e36a-5480-4497-8bc4-81465bd2de8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 f51ff883-460b-4c32-bcbb-b731f3c13b6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h98A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'hED83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #983 7fd0ce91-04ab-4fd7-a2a1-cf9c8593a259)");
unit.assert_eq16(16'h98A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #983 5cb1ae1b-eda5-47e9-a7f9-3c800ce3bbd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 2800b474-f37c-46c9-bd5a-06ab67af92fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 1f2ab15f-a12a-467c-b41e-790a28e11570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 694e4a7c-2fd6-47a8-9691-5f3c2d742fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 4ba37b48-c4b3-4ded-a98e-60552f856779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 25cd47ad-b7af-46e8-aac4-786f31e77fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 555e73ca-cf2b-41fb-a56b-7e24d1451201)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6062;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h6062, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #984 94285d2f-ffd7-437b-8638-9dde814e3d37)");
unit.assert_eq16(16'h2F71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #984 fd0954a7-ec77-4f03-8680-bb3ba72ff291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 5b53db24-7c70-4764-b6be-8acc8487989d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 f2a9d74a-e6e8-4da7-be2b-44229587c82f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 f7d1e22a-1dcd-4827-871d-bbb1b3a4d3e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 02c85def-7998-4efa-a106-01450ce27b73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 e356e82c-1ba7-438e-8be2-9006fb0fd03e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 5ba460ff-6de1-46db-b511-55cdd7bf4985)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCFBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'hADAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #985 f9e2d7e5-6f76-4dfa-9da7-1def0f63d0e7)");
unit.assert_eq16(16'hCFBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #985 9243a7c6-e69d-455a-947f-fde019f5e5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 e50a62e4-e471-4365-8aaa-df137bd85a3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 733d6543-4c45-4984-9ad0-0e47c43a771f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 fb7a8e7f-e54e-4bf3-8a41-de32e9fe3687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 4a3cf1fc-ae8f-4bf2-9e43-03eb9444d4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 8a7329b5-2507-4b4b-abdb-5348e4fb53a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 6a20058b-6140-4ff4-81fe-5d4098a222f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h0C6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #986 21e061f3-5d58-470c-830a-2d3805f4d51c)");
unit.assert_eq16(16'hFA2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #986 28ad695c-f41c-4db5-ab9e-40c4b9824853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 62e1e43d-be2c-46e7-9ccb-42c2b8bad154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 ac96d595-72f3-4e0f-be52-eadca418f05a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 445e9d21-1528-4c10-a3d8-e018bc921b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 83c9a8f6-c02a-4af0-8a57-7e19dbf98c92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 d7db2373-614f-4ff8-a72f-39418ad15a78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 4fb73114-893f-414a-a54c-17ff9cf8a892)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h7DCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #987 f4a1aa26-1acf-468b-9991-43cf5ef7e991)");
unit.assert_eq16(16'h0B15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #987 ffbec11d-0648-4d1e-b144-a5e1bcdcbcf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 f736361a-0bef-403c-bb37-e5fe8c9e996d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 66b1ec26-0f47-4406-a4a5-82fd8a321571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 1fee4858-447b-4ee4-9bc9-1f0b2f1bcda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 a31a574d-f121-4213-abb5-bfccbc4341dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 58d496aa-92cb-4ab2-a09c-e0fbeb2d7dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 522e9c2d-1bae-43f4-b579-2ab20dbc9ea7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h8E5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #988 086e6317-fa00-4bc5-b12b-f83c74cb7d55)");
unit.assert_eq16(16'hCE94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #988 43067fa6-2c5c-417b-9a91-97c0cdb29ba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 96c3669c-7f84-4eff-ac9a-0d11c6ad27b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 50a7e615-f0e2-4f4c-94bb-b2fac4257a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 fb8f7ce5-298a-4865-a9a9-aa57db8cd521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 98adb3c1-c9a8-40a6-91e7-cba2fd026777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 d462ca36-dd24-45e9-b9bb-11eb6ffcd405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 367dab45-6eff-4718-a4d5-d4c381c39f9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h1B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #989 2921b172-179f-4510-9913-b876f27a4fd2)");
unit.assert_eq16(16'h46D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #989 48349c76-0dc5-4531-8c60-f0e8586dee88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 caf6658f-89ba-4e4f-be39-0dda09ec0e63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 65ca451c-4235-48d2-a5a9-004d3a6c3268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 b6390cd8-0779-4e8b-84dd-b90f15858085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 12aba465-31f1-4f71-b359-16299d19e607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 fdf970ae-ab97-46a9-a684-0a00859aa7f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 1b95b2ab-e74d-4bc0-a802-57676312cc96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB5FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'hB5FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #990 575544f8-807d-4583-8965-c466b2fda592)");
unit.assert_eq16(16'hD1AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #990 dcaea121-de42-406d-86af-efe5cb15b239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 8bf8d13f-0765-427f-98b4-3ef864908647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 dbba3135-ff6c-460a-9bd4-e69760fc90bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 52f198cc-177e-4014-8427-5d7ca17820c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 388d8741-5281-4ac7-90b6-b819bcff3920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 a34ea97f-43c2-4e3b-b18a-bdede1582ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 6d459edc-5e16-431d-8e25-51e70131fe1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB1F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF48A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'hB1F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #991 f9c6c3ba-3390-4dbe-aa66-0ff1a8640f21)");
unit.assert_eq16(16'hF489, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #991 efbafd5b-a85b-4369-bee8-149ab002360c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 7e3e3fad-ebb4-45cd-827c-2e912bed746b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 98f8f611-ca0e-4c9a-820f-b62ebc206e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 890944c5-88ff-4d36-9902-1bad1221c81f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 32d05049-354a-49c4-adb4-3172019b0fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 9cb2bdcc-5e1b-469d-9fa6-6f7eebf2700b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 366892fc-0267-4e3e-9bde-368a984b6e5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD01C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8974;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'hD01C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #992 ca827b2e-7496-49c2-a860-a77315881a87)");
unit.assert_eq16(16'h8973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #992 7e1fdd58-edc4-46de-b8d9-d0e2ebaa29c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 3edfdba0-cd40-43bf-abd6-0c1a3f593e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 4bf44390-780b-4c2e-8929-376df6dbf674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 b0de01d5-b6e8-4b8a-8238-a24aabb75fad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 169cab5c-c816-425b-b80e-07c1a8f0ab5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 929db9a8-4507-4ca0-a347-cb8ba56e8a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 0d7932e3-21c6-41fa-8df3-77fbc1b4df35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h73D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'hF7DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #993 11c014ec-3e7b-43ca-8ebe-b946ba2acd06)");
unit.assert_eq16(16'h73D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #993 fc7b2264-7d4d-4308-b606-2fc452f3476a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 0653d9bd-8cc6-47c5-8301-f619153dbd52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 e4963623-1b02-44f4-ae82-2de40f9ec2be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 08280cff-3cd8-41c8-a75e-3d9d5ed7baee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 ccce0a41-e66f-47ed-9da9-d61a0ecae6ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 5a4ed27f-beb8-459e-b2c2-f977a2df85bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 e6c30ad0-8035-45f0-a92b-c913de24da21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4DDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h4DDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #994 876bea60-5062-41ab-83d8-01f44c50036e)");
unit.assert_eq16(16'hF480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #994 81943fc8-21da-40da-830e-ce5fbd6edbfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 2a2441f1-1d16-47e9-9af3-943883bd4bd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 1b10c5cc-897f-454c-ba2a-794cf2e2b59d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 136982fc-662e-4e62-8dab-aeff32d28179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 dc6a9988-27a6-49c1-b87b-4dd38934899d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 1fec6eb2-0653-463a-b127-3023e5a017f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 44521875-9a60-4c34-99ae-3e9b330353b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3568;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h3568, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #995 19796e8f-d110-45c8-b4f4-1d1d04ab78fa)");
unit.assert_eq16(16'hF6FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #995 865ae0a6-f4e3-47ba-b974-600c7bf5e319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 8d26532a-a956-4d6e-bc58-378cad8a4feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 cc7bf905-fb8d-45e4-b961-4885f554939e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 60ec20ed-573e-4a7b-a582-07c883da2d2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 62864f2e-a023-4293-acde-de67a3de0903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 9d1b2062-1b3a-4976-b25f-d8e578e2c4a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 28aa0cd9-2c8b-43f0-b13a-a0210fc0f914)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h63DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2646;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h63DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #996 1ffb4e3d-9dc1-4b6a-acd8-f00cd790980b)");
unit.assert_eq16(16'h2645, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #996 d7e2bcb5-329a-4aea-af95-5174175fa70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 603705e6-f9b1-4244-a764-a14f01be96ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 d1ed5057-0869-446f-9e7c-4fc6369a9d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 21eb8cce-a771-4d39-9867-e3178c35281b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 5b0bf305-055b-4791-ac3b-728755c56641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 fcf7bdcb-17de-4bfb-b96d-b44dca1e7141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 cbf276af-7f0e-436e-821d-a60bfb8024e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h8E7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #997 0b0bf064-8202-4add-af0c-377c5664d958)");
unit.assert_eq16(16'h459F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #997 180e49d6-6b81-4868-9cb7-790c2e0688fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 daf4f796-a9d2-479b-bc89-693ce8bd1e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 3a3c6317-56a4-4246-b211-89a281ff5362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 1e761d3e-72e9-43b2-ac23-f2ac1dcc4c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 c2086883-12df-43d2-8eeb-77a4e008e89b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 416a34be-e6df-4434-85c4-e5f3a927e5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 a9134e0a-7877-48ef-9469-6755114e4b0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h7DED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #998 ba48ef2f-fac3-4633-b611-dc0c47ccfbd4)");
unit.assert_eq16(16'h3DAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #998 f3254aee-7c45-48d2-9e38-eda7e207e0b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 c8e715b3-ad67-4e57-93b9-72d397592583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 1fb79f85-72c4-4528-bdf7-e523eba6f327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 337ef60e-1963-42eb-8faf-d774a88b1fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 10b14710-3ecb-4b00-adc8-b905594b4a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 6f601ee9-7c88-48b8-b170-3a324818c0c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 2d8c937d-5e77-4658-b08f-bf230b6995fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hECC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'hECC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #999 bcb721e2-da26-4af0-9809-a62050629f44)");
unit.assert_eq16(16'h5732, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #999 70fa3694-2240-479f-8eaa-e60d404a3fc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 6ad6ba9f-09e8-46da-b959-7adec259e355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 3b315abc-6320-491f-b630-e2d251404b52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 4e5972ac-e364-422c-b728-b30ccecf4c46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 657d46d9-c832-431c-b8f3-5914ff253430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 54bf5c30-c70f-4d96-a3b8-cd18be23968e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 7f8b275a-3128-45fb-9894-ec187a63d484)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h7B12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1000 05b9cde3-49d4-4f04-bfc3-1ec764834563)");
unit.assert_eq16(16'hA6BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1000 680ecb7f-380a-4626-855b-131c7f914803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 69df2568-da35-435e-8183-64ff299d4365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 1246c0be-cf90-40f1-b568-d562b65cc06a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 311a9e56-6740-43ca-9b24-2f5090920dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 0966d2ca-b5d0-44f1-b348-2266f7a70066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 2516a6a1-ee11-4f75-b1d5-c305e6654001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 62a34e12-2b64-4c51-b981-5566a6b21671)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF5BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h02E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1001 5e846634-6b1e-4ac1-ac93-778479e5def5)");
unit.assert_eq16(16'hF5BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1001 a977c884-afd0-467e-913a-c8052b17c5f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 7787d766-cae9-4b22-834f-45b76cef18e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 a6a21b7a-616f-4acf-84c0-a7766c841388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 1ccff63f-2f06-4b15-ad47-72f782fef11a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 3c2713a2-f624-4b05-8663-c103b879cebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 892a9d1a-71e9-4e45-b898-485b0a65ee39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 105f9312-da0b-4471-80f5-6d75b05332b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE8D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h2E30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1002 a9a0cd5d-7b30-46a3-9430-39b69fc45730)");
unit.assert_eq16(16'hE8D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1002 18982023-b78e-4ac8-80f2-4d9720e223f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 bab0641d-805e-489a-be19-aa0e16d03eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 eb683120-0e03-4c85-9755-d343217accb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 053d3eb9-8dab-4173-a133-30cc7980c4b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 35788d57-1808-4568-925f-14665ca68883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 0bd19aed-e17f-4877-ba27-a41a68b1fb1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 981c9965-eb51-4fe8-937a-250f5077ef88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8986;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h27BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h8986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1003 89d6a4b2-2f13-489a-947c-7902de5338ea)");
unit.assert_eq16(16'h27BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1003 3bbd21cd-01ba-414c-a580-4353331e1416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 092df599-2275-4c15-912c-6fa8984385f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 aa26d9be-6b96-4568-8b44-6f4d257457ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 a59ce258-97b1-411b-b2c3-ccc315783e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 638b16e4-1c8f-4d2d-a5f0-b2496a6cf82f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 eb0ed9e7-8782-4f0c-a413-88060766dab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 ee876699-de58-43d9-87a5-5ec57d819b85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h6D2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1004 6b1db026-cfc0-46d7-b471-de73f91a2bb5)");
unit.assert_eq16(16'hE6A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1004 2d280ca9-ba56-4348-b407-6a58c88bf055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 1ec2ec3f-8d9c-43ca-b5a3-e0c1000774b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 446e6d90-4bd3-4917-8563-f43491dbdec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 71345ae1-ee84-44d8-b971-39b9270bcbdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 ab906501-3c65-439f-a2fd-70bd772ca738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 67a36452-8f75-4135-b3ce-ef9b529343b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 159397a2-63d5-4d81-a02e-5e970a3819e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF5B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'hCDB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1005 b16fe94f-7750-4ef0-8e2e-3001ead9cdd8)");
unit.assert_eq16(16'hF5B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1005 7f5cb77d-9fa5-41db-b4f4-28a56b9efd04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 d9798628-5950-45ef-9a9a-0764f8e48089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 06d5e443-d0a1-4cd7-b8cb-2e3765577c58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 271e08cd-8139-44d8-a5e2-c75eaf98f9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 8681f4a9-e760-460e-9bbe-cbfd1d6f84c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 cbfea1d9-3ee7-47f2-bfa1-a9f8fcd49bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 87df5137-052b-446e-b2ce-881818b2880c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h016B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h2A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1006 b78f08f9-d376-41bf-88d1-07ce7703b9a4)");
unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1006 4099660e-9910-440f-a895-1f57562e6beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 0fe3fa60-5cd8-499f-9cdd-ef86eb3e4ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 c7825665-a4d8-4d3f-9980-e5144be7f2bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 eeada351-11f5-46bb-8d2e-7ba067cd0b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 9af9e34b-8436-4178-b666-60cabd060de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 c10bd1f2-5501-4bc8-9f1a-148a3af429b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 633df807-c7bd-4823-adea-552bab5d4380)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC646;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h754B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'hC646, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1007 683a91c8-ff70-4a8a-b025-5e1aa963ad99)");
unit.assert_eq16(16'h754A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1007 787c283a-a1e8-45ae-9d45-91e1360b5142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 50bcf26e-2d2f-42ca-9009-ff5cbd027b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 6baf78fe-0103-4cef-af26-7b4abd18bf09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 6a346cbf-a2d2-48a3-9a5b-ec020c52cf14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 ace1b80a-5243-429a-b90c-b775158c6af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 f8123757-ca80-40a2-885e-6a68d92fe144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 f85d7529-3c1a-45d6-8f6b-d488d798d669)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1351;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCDDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h1351, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1008 2c426ae8-6e3f-423c-a929-12170dc9a0c6)");
unit.assert_eq16(16'hCDDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1008 52f25766-fb67-4beb-ba6a-aec900fbc43c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 ca5b051c-b94f-4484-a716-21f603b8b368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 5b36992a-2eb4-4983-babe-c8a3a4785b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 8c560045-f163-4171-a301-eaa52bbbafb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 09c87d8e-dc9d-4faf-b124-adb7c7567736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 8cc6c52c-b815-4e71-904c-9e31b6c14fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 acbcb93c-7a95-4b2d-942e-d50e89473142)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h0F33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1009 dbfe0220-0763-4e7b-aa31-d4d188211067)");
unit.assert_eq16(16'hBF89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1009 9f5fc163-da7e-4800-9d4d-bd15616c016e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 d279bbbe-670c-4306-b64d-01e579bb5859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 31ede97b-a8d7-4677-8991-54783adae677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 3bd4a7bf-780e-4440-b16d-0d9257c8b6ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 e797d0df-d513-4f70-8e46-8bd25f425848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 a2bdff7e-15b7-4d63-b761-9e536cba8258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 353db0b9-ec55-42d1-aab8-38265e4b38a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9FBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h9FBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1010 13e5db15-5925-4f96-8fb7-7fd5bed89584)");
unit.assert_eq16(16'hBA4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1010 c091e207-5ee8-4940-9aa7-15ce48658d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 f58c8f2c-247c-4918-9063-9e6fa5f9829f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 f847d690-1b47-4379-8da0-e08793dd717c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 5c0eb146-480e-4afe-bdb4-312dc8a4ed01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 29ed40bd-0345-4cf2-b04e-2b38874ec98e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 440cb190-b109-44f3-9c65-9bd6562983c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 9fdd5647-664c-41d1-99fd-f2b9dbbf93c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7954;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h2C10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1011 5601290b-2062-4abc-95ff-7bebfe20414c)");
unit.assert_eq16(16'h7953, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1011 408baf31-f775-4f04-a406-2793d090f097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 dc28b593-2ce1-4193-875b-707b71f0d30a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 4c978985-317d-44f5-a63e-d251bad1a213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 42d74a15-9d13-40fa-90f6-730f1e8079a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 1d910245-8b34-4812-be75-403953557824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 ca720abe-e37a-4fff-a80e-cbb3d5c46957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 ec8bf667-9569-4063-a062-6d094c62800c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6616;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h5D98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1012 17a9986b-79ef-44ce-affa-313e709d5481)");
unit.assert_eq16(16'h6615, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1012 8ce90372-11c8-4232-9b15-d16b65fd96bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 855f6a0e-d7c6-4c55-be72-3dbd16ec1d67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 b6a83406-6519-4fec-9ec9-eda2a3dafde5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 342e47d4-ee1d-4a61-9fb1-a607ac0a6a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 f713651f-67d2-471d-b930-d604112bf77f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 a7c57dd5-481e-429c-b692-53e15805f77b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 1bb03c8e-7ee7-46c6-ba8a-65999b150af1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC393;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h8F4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1013 01092246-123a-4484-a8e5-879e7864de74)");
unit.assert_eq16(16'hC392, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1013 077f9c48-813e-4eda-8b04-4b0704d8d174)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 cf3125ea-0334-4b56-8aad-c722e7e58b2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 1a966dc7-5a73-42b9-aa71-a85fa57aadbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 0702ba1f-ff39-4b42-aa76-54aa7cb74873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 bdeefae2-8bfa-4baf-96a5-d190bbf1ee76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 d8575e87-48de-4cd0-9523-af23490c412e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 4278a50f-bdda-43f0-92aa-d1bf0537763f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h6C03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1014 8caccf97-b9e3-4aa8-911b-6575a15394df)");
unit.assert_eq16(16'h6A0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1014 2aec72e9-2a55-4467-9f9c-2f6fffa9a85e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 4bfb60a2-9e49-4a26-9d4d-97cf35137287)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 1f16fbb3-1b97-4048-9be7-970f14e17bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 69768d1e-81d4-47f8-a01d-fe2700ea4d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 36830b3a-ee48-4a6e-b271-a388007c5102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 98c2b081-3808-439d-ac3a-5c7f5e150394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 e56daac2-20d5-4bcd-80df-8d33f01958e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4689;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7804;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h4689, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1015 13b44d6e-e753-448a-a923-7f6246bf0f37)");
unit.assert_eq16(16'h7803, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1015 c62743f0-5715-4dcc-891c-ce0975748902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 17d30651-ce5b-4d81-a900-48bbe6527a8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 f1be4061-2929-4dac-a795-39ef259b7a57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 5119eb52-c2f0-4ea3-bf71-889910f6c749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 e26dd874-21e8-4988-a85f-3c67e900c7ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 d7c81dbb-2351-418e-a0d6-23bd9a541c8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 0293d25a-1781-4c02-aa64-28a7270d4bbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'hB3AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1016 c06fd148-4e9d-4a34-b0c4-1aee6c1910c0)");
unit.assert_eq16(16'h0F12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1016 621b463f-cfb4-4623-9ef5-43fc14cf5d6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 e29ebfa5-d52d-460a-b2dc-56930f1d2e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 845f24ed-aa64-4094-bbf9-7896c0735f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 a3acccf6-37bf-4f6b-b6f6-88dacb8c6947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 b43d08d5-0a9e-44e7-9923-12f6375a2492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 5f7af9d1-e7f5-446c-8c43-009b04095a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 57e445b8-8ce6-4cd6-95f6-715244fc7270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h93D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h93D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1017 4b522afa-6df6-4ad9-9aff-6b3149ece1c0)");
unit.assert_eq16(16'h3B8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1017 5ace1405-64a9-46d0-aaea-c47a8328965b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 493881b6-a08a-4cec-a6bd-ddb9f284cea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 9be799e1-8d0e-4008-bd82-922017dffc16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 12f7a0ac-da57-4655-9960-57b97e413926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 b543ab38-f456-45eb-bdf2-6baa72cc60eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 955da4ad-bf8b-410a-9420-441880f648e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 dbfc437f-0f7a-451b-87b5-8127d26afd96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h797D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h646D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h797D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1018 fb8400fd-6e70-47d9-bb8d-0b08d78e1a8a)");
unit.assert_eq16(16'h646C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1018 d5cc6331-2af5-42b0-84cc-865e8bf51ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 f8a288f6-65b8-4b25-8ca8-6ba1e9bc555a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 6ba257fc-1fbd-496f-bfae-6a7dd96ce862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 eaaa6e66-97f2-4463-afe5-db72c1e08d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 b2ae7db1-7822-42a0-8014-408aff39d631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 94fa351c-d549-4d65-86d6-f4c673ffad70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 267ca521-b5a6-4ecd-8b4d-c1b336a8d3a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h816A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h816A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1019 3add7b74-f971-4434-89e6-2d8eb19b9471)");
unit.assert_eq16(16'h5D0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1019 ecb67abe-33c5-4b7f-b51b-15cadf29ba46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 4d14fd5b-184d-4c87-b407-70c280d42a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 daada145-9150-4556-ad60-c76693a54a29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 6d00572d-b092-4a78-940a-8e6d1221c29d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 33173624-f7f3-4022-bdf1-67a26154605d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 2d73cbe8-0035-442d-b962-6528c21dcd4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 bfc81af3-ecce-4036-9513-013f2544ba27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4DDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h4DDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1020 7ede6f93-b110-448c-a6e2-d605fa143cae)");
unit.assert_eq16(16'h64A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1020 b81d819a-599f-4636-84f7-2f1340ec6346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 b822b63f-3ea2-4ec9-8f65-2b52a595212d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 af1f13f1-9c83-463f-bd99-6d6aa14cc471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 a2a1f5e7-ff03-46f8-b1a5-aa687331c110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 1e8dae23-485b-43b7-b6b2-f54e145d79f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 1204be8d-fb38-40f2-ac62-981bafaf4a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 504501fb-7dca-4d6a-85ef-3ebeb444e921)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB90A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'hBBFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1021 635d1d72-7702-4bbb-9b74-3670b51a6860)");
unit.assert_eq16(16'hB909, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1021 7b3d2d67-b335-47c3-a534-e308ab81f89a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 ce15e200-8249-4dc0-8ebc-0d650c817c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 737eb70a-43a4-46eb-aa19-e7e0349ee05c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 dbb91d0d-216f-4d89-b4fb-9c46c75dde69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 6e53aa71-7c73-4e04-8eee-e33c2ed42843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 1f0f310f-3ca7-4ddf-97f6-d8b6d045f440)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 eb3ca763-b8e8-435e-93f3-73df6e6dcecc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7582;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h7582, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1022 bcde611e-acc7-44eb-bd0e-a3dffbc28b94)");
unit.assert_eq16(16'h87D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1022 e8cd27f7-2a87-4316-bedb-51211a57751d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 b54857bd-4d6b-46b7-a8ef-88bc027cb235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 9a56d67a-1993-4c80-9774-a3688efdafac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 55f5c2d1-3d79-4515-ab35-d4d856c96bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 b47c48fa-0f8d-4ca7-aa29-514caa0fba4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 12a2aac7-c8d1-467b-baf2-0fabde1e24b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 b3a75b52-325c-487b-a937-a8210430ed76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFBA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h12D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'hFBA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1023 257cec95-5609-48e4-8b7f-d55e136f343e)");
unit.assert_eq16(16'h12D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1023 37ec3e5b-ac43-4771-87f6-c6540c6005ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 fb73c597-8e5c-4693-b245-6083261f7be5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 353d4c78-0a1e-4ce7-b3b5-8290c82450da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 5298e6ce-cdec-4c37-9824-a5cd9b11b52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 3ea3d040-4480-42dd-865b-b5e73ceb715a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 00575b53-abd6-48d4-b180-63964d5db7e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 66faf02d-a09a-4c1a-b586-7e1c7e846f79)");

#(CLKPERIOD / 4);

unit.finish("alu16incdecixiy ('(INC|DEC) (IX|IY)')");
