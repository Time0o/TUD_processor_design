unit.start("ld8ixiy ('LD r,((IX|IY) + d)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h094D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'h0FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #0 707183c3-ae9a-414f-a755-74d07c9cab18)");
unit.assert_eq16(16'h094D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #0 7fc19a30-5329-4128-9913-73d86719d3d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 7db00ec1-742e-4567-af48-26ea896d535c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 41e5e497-8f69-4ab3-bf49-5c0073e0188a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 202fd6d8-7ea8-42ae-b3c8-a891bd5bb3cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 f7ee9301-5aaf-4f1d-b569-4864e7227e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 e66b915e-9144-4fb8-bfc8-aaaee747d97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 d08d3f05-db9d-44aa-be31-f40dee800cf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0401;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'h0D94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1 0484b770-af26-4f6f-912a-6d70ab18215d)");
unit.assert_eq16(16'h0401, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1 f68e68c7-010d-43d5-8a86-78d49b0da21a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 87d13fc4-a73b-42b3-b9d2-afcac77f1fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 f5d06460-dbeb-465d-bb98-074799b73c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 b7e91ba3-b5ac-4d19-9648-46f327667d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 3bd86d01-4af2-43a9-b656-098ae0b73f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 239bee76-70e0-4c37-a07d-c018da8e3425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 2a85b426-27de-496c-80a3-48c233b9b8a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'h0DCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2 78ff66ea-b3d0-4379-b983-af62548ad257)");
unit.assert_eq16(16'h0E35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2 c4bdbf94-96aa-435e-9d24-9ac3572ec91c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 25f5a5c9-10c2-4bfa-ba2a-0fbfa2a46f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 cab117ba-07ae-42b4-931c-8bad26c9d384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 9d354f32-faa9-46ce-b720-f9ee4338db80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 32c83770-003e-48ea-97e6-70d2619a6f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 60a45161-a1fd-4e7b-9dce-e1f632d12f77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 34082db1-6127-4002-93a5-143ad5bc6413)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0904;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h0904, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #3 156f43cd-62df-45fd-9ca7-dd58edff580f)");
unit.assert_eq16(16'h0EEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #3 94656643-ec7b-4af1-9cfb-40883474a70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 55b9a6b4-7e64-438f-884d-6f01fe1811db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 701abac7-b4ee-459e-975f-9130ef1cd9fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 9f002b22-5aa7-4c6f-ac66-6384c8c5edc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 9c6a2a4c-32f5-4d2c-af8a-f315490ddffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 29e67d85-2c10-4538-a36d-1ab49b4100a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 e6476bb4-25eb-4d4a-bc0e-2727237cee3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h001B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h001B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #4 e5d72409-dffc-436f-922e-0ca41d713fe8)");
unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #4 5a87efe8-2108-47d2-865d-a3f6bfe9ac37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 06e31a63-62c4-42f3-97d2-056486afa481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 e62feded-72df-43cf-814f-7dff058a020e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 9f2f6954-6770-427a-bfaa-81113be9cc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 45fbf719-02e1-414a-9f18-02ea5b3103c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 4d99d154-b33e-4bf4-9d03-d45ce43c19d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 50015726-b331-41b5-b79a-25f83059e1b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0492;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h0492, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #5 fd76c1de-f519-4261-bbb8-0424652d0646)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #5 a14900a4-5e0b-43e9-8e19-f7e497b9b75f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 9096d64f-0908-4e35-805c-4c7701370f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 72bd2fba-ea1a-4045-86ac-f764760ce06b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 110c8b02-611c-4402-aa0c-e2be074ac866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 b679ff7b-abfd-45b5-a653-18a8176d6967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 4534b66c-b83c-4555-bb3d-121e1e4a2ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 22a83e1f-117f-4f79-ab5b-62979f7b8a47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0323;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0059;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h0323, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #6 63e68a7a-399d-4714-a337-ab1756039151)");
unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #6 889522ec-e6c2-40bc-b240-310e7e28630f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 e31c9078-87e4-4056-b63b-df014292e7a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 ff08cec5-d9b8-4660-99e0-48b1fd33f59c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 498b6c35-7a86-4b4c-bbc7-544813d57e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 b49113aa-818e-4c6b-83de-3da45a09b128)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 fb450bc8-a835-4bc5-96cc-fb821762a0df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 75ebed64-8e8e-45af-a7f2-8a946cbd54e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h037D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0050;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'h037D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #7 f45b3b6e-b5e8-443f-b5f0-7d44b75fbadc)");
unit.assert_eq16(16'h0050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #7 e964304b-fc4e-40c3-bf0b-4ce7cd57d014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 49220c30-f85b-4d47-9da4-964d000d333e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 28a964c8-8471-46ff-a694-b8bef3e817bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 d3c0a508-fd95-4f41-93c7-deaa0df422c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 3e4747dc-1a87-4e37-a638-2060803e9848)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 5f89aa30-e2e0-46be-8376-352e14ad0d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 90ddfeef-8573-4c72-9260-8b44d34f40d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h092C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h092C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #8 85bba649-9a81-422c-bf35-fd768b737dad)");
unit.assert_eq16(16'h0D73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #8 7e0d3c64-7873-449a-94f7-6324936896cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 c9897fb6-90b6-47f2-b598-ad8189e836e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 4f9775df-5be7-4e13-9e3b-ee0c33a18aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 71d824e8-e8fc-4029-8b02-f135a8a326e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 13d99fb7-2b1d-4831-b9fb-49b795bdc5c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 5eb1076f-359a-44f4-91af-398975ea5ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 ea0d7fa5-905d-4f39-a07b-fb74680fe741)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0925;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'h0C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #9 0a957cf8-6d79-43e6-ad93-c6fb783f2dd6)");
unit.assert_eq16(16'h0925, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #9 cf9e14f8-de6b-48ca-82b6-bb15387fc072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 e3de4f3d-fb81-43ce-b75c-b5c9b404c5b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 000e0457-72fa-4623-9169-ab836d63f2d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 d427d717-800e-4b82-973a-2aac13b5234f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 2875ab88-9b67-4711-b19f-bad7224deb1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 48e3cd1b-36ec-485a-98ed-8534c0df5453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 ed01fc82-593d-4bfd-ac1b-1b3515b9fe45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0338;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0523;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h0338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #10 a96167f6-df75-4c9f-a921-a2ec55b5db43)");
unit.assert_eq16(16'h0523, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #10 a3ded377-4fd4-45ca-8a35-fc26109451de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 c8252af7-c24f-4099-9d9e-a0da30a91167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 004c85d4-e3b0-4456-bd7f-cf85eeda15aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 31663f98-5cc8-45d3-a494-563dc9347b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 dab48681-6c7f-4e5e-9c4b-b8276c23e848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 87cac599-23d1-4757-ad09-d33d621f3032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 6f57c296-54ed-411e-8095-77280d42e91a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h06E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #11 5cab3bb1-eed6-45bc-87b2-1e86bb458ead)");
unit.assert_eq16(16'h0B16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #11 42676d26-4326-4f17-94d0-91801674136f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 3486c73c-8172-43f5-a8cb-7dfd5e045c2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 00aeb5e6-e8fc-4a27-b792-7d4446169787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 fbb726cf-e85a-4805-a68b-b8874e07ec84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 e03d460a-5fdc-404e-8fc4-5def02d6e331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 9acc853c-7a02-43cf-80c7-d462683ced13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 25f82b4a-c46f-4faf-975d-730917b0834e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h0FFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #12 efc3a245-f525-4dc0-adf7-ee911dac53d0)");
unit.assert_eq16(16'h04A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #12 15f292b8-1db3-43fc-a629-1a4ded5e7d45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 df2d9873-1c65-406a-be5b-5a6dd7cd9db4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 ec979056-7449-4264-8d90-70bd2fb3ec5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 39ed6db5-d30f-476f-8777-5d269cb27554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 eebe06e0-df18-4b5a-801e-f1df5595a7bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 56d7f8c3-bbe2-4adf-a405-e2283754c854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 a418bcb8-1501-4eea-b688-d4daf0d74ffe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h039E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h039E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #13 ed3641bf-1da6-44d7-adb5-47aa4e1442f7)");
unit.assert_eq16(16'h0F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #13 a59ed15b-aaa8-4d78-965a-18ea8928cc1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 a1d4e223-ddd8-4be0-87e7-2b6e58f6354d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 869de3f0-dfcf-4f6e-9c81-9d14f3c3d716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 6ba0a02c-533d-47b7-8640-f9f144998fe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 530f4504-bd2c-4596-a4a1-d50b45b21c29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 cc5d5d48-f0ee-4d73-b978-2c5ae60100eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 b67dcb1a-8178-420c-9927-73d9536bccf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h06CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #14 ea2c1284-7f14-45f8-9213-f89bba37ffbc)");
unit.assert_eq16(16'h0A81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #14 fe27eb98-5a9e-440f-8573-706cac18e0b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 3aedb4f9-b8c9-49ec-9d80-8ccb9eee8c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 9aeac6ee-b0ca-415b-b90f-176209417394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 1bab1dc0-cb7f-44a5-ad35-fb8f35ed3903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 6c0e1e5b-317e-4dc6-a8c9-4ec70af42b04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 0e1eacad-23b0-4249-b7dc-753fac401b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 282fa937-20ba-4179-a52e-4b36d0cfcea8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h009F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h009F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #15 481a893b-39c6-4d8f-8522-e2a79a311d82)");
unit.assert_eq16(16'h02B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #15 0c1eff97-6bab-44c4-afe6-0841b7fa2c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 957b2b2d-e2e6-4c9a-b95f-9ad19e381024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 cdd878e6-db79-4453-bfd1-c71036d4af21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 aeeb6b59-15c8-42f6-a23a-2a0efcf78842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 d3859af0-0886-48dc-8cce-20f28698294f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 4e549d63-a04b-45ca-ae50-670a407a85c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 39ccdf8d-2170-4b66-8ef0-b01fb89ffd29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'h0E01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #16 7341e206-5252-4b3c-85a8-aff9549ef22e)");
unit.assert_eq16(16'h0FF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #16 940688d6-dd26-4b48-a100-287f17c320ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 d4e8d224-9d63-4ed4-b7b4-83c106f1574f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 3fd7c849-f2c2-4297-bfc1-440f8b735959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 a4ce565a-e5bc-4dba-88eb-c73f15703b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 c1db899d-1571-4c2d-9f67-ecfc68878d1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 aed9f773-25f8-499e-97a0-7421edf5b8f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 7071ec2c-239a-43d2-8e42-60695ebbc9ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h02ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #17 36317d93-d986-44cf-9b3c-b883c8ae75fb)");
unit.assert_eq16(16'h0CCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #17 f36ef1b2-03c3-4d23-a635-653385c387f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 89afaeae-3262-4dca-8dc0-83d44276b67d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 4de3ee4d-4877-44b7-bb90-93a2a63e595e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 950b1a36-0ad2-4def-bb01-109f6ec969c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 096c5845-3b2f-4819-83e5-23a5b6b6cbf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 1123463b-8ecb-450d-a1fd-fcd09a284178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 9f87ca02-8bc2-4ba9-8e49-43135a486c50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h0A29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #18 14958387-8768-47f9-b805-c654b5671d0b)");
unit.assert_eq16(16'h0DE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #18 aa6964ff-1c1d-444a-94c0-baf20c62f7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 b3c8bd7e-dc07-40e8-8297-07be61651d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 b5137a59-3040-4989-b029-263f8dbddd2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 15608e31-c9ac-44cc-8e2b-44b5f2f816a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 d111d50a-18dd-4934-88de-3faccef43b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 24919d3c-2754-428e-87a0-bc629ba60098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 1218fd97-f14d-4912-88de-27bc95368f50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h04E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #19 209e1450-771c-499a-b2af-a669c4380807)");
unit.assert_eq16(16'h0BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #19 a459d60e-ae88-4994-b1b8-64b049c14959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 a2c55ca0-db1b-4456-9fcf-6bf44fe483ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 539a7adc-4294-40ff-a20c-0d5856882309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 5bdef127-5812-4a65-b236-3aad8d57aee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 0f884678-1e55-47a3-a287-b067ae8c6112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 df4e8bdc-60b7-4701-9a2d-5379fca1a4ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 000888c7-cdac-43ec-b6b7-f7efa94b748c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'h0FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #20 0ca839d8-ebb3-4e07-b914-4e52a4e96ce9)");
unit.assert_eq16(16'h043F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #20 3c281bf5-3411-4b61-8ca9-263dedc2c2d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 6dcc02b2-d052-4928-a3e8-6ea92a90f3b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 30fb1b74-4931-4c60-a12a-fff0ed83189b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 d5cf8eb2-8327-4e95-a72a-9775cadfd0a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 a83e4139-abdd-42d5-9f58-c4bcdffd6041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 fd81f26d-b742-43fe-a702-8b09f3d1f22b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 b39fc71b-b1ca-4dad-bf91-50c3da7b8fab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h0D6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #21 dda37980-a34c-48a0-809c-b0903dbe37f2)");
unit.assert_eq16(16'h0BD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #21 a0915b4e-d7d4-42a3-8b15-757749d1dbd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 2ad49189-015a-4bf0-8c30-a6681b58d105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 3c2accc1-c8e7-46c2-b277-2ac4bd567701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 89c8a9bc-ae0d-4b99-993e-df16cd9f14f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 dd8d1f4f-5210-485a-a472-d66eb8385ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 28c7b638-8e6c-4389-a879-b980b810001a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 bc0940b2-c4f9-479f-8346-317fe55eb7da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h084B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'h0D29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #22 d5b03cba-6c97-4435-881c-c7cd08ebd0e0)");
unit.assert_eq16(16'h084B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #22 873f75aa-aa62-47c5-8971-6d153ade703b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 20fe0842-f65b-41ec-8ec7-a73ba52cb2b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 839992aa-5918-4422-8d0f-aada9cb235cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 fc59d238-fa94-4b53-83d1-23a72b2ed45a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 752c353c-f899-4b88-a944-2aa47a629e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 07ff4349-f10d-42d7-9e21-b5c3e31978ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 bc81d383-4bea-4828-98bd-f310b7c5d5b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0275;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h0DEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #23 6dd4d8f7-174a-46e1-89f2-b33a4e70c920)");
unit.assert_eq16(16'h0275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #23 786304a9-9496-48d5-b56b-565cb3bf6021)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 3a28908f-4fa9-4e40-af10-4a6401fe6235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 6248e269-7558-4328-8b9d-16fabac99d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 7c32a470-b9f3-4f57-8877-b953618a7f77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 728db9a7-7dbe-43e4-8f06-2463adb08029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 c7ece027-1c9d-4a81-8395-02c936a85186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 cd36f7fb-4680-421d-8f2e-7a563b2bc4ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'h0F5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #24 1760a238-8b34-4dcc-8f4c-ad3d5e8a3af8)");
unit.assert_eq16(16'h04AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #24 a009acc6-987e-4662-b012-4ba6020a24e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 b958aece-0701-499e-afa2-618f4e47ed64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 1932f4cb-22c6-4904-b7eb-edee9723237e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 6d8fdb1a-159f-4e5f-b9fa-09c8ccd6ff30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 c0f32bd2-2d80-4f5e-8b42-00e2305b6c95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 c521a7de-34aa-43e2-980b-3964a2978e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 bce4540c-f079-4358-89d2-7e3099c896ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0417;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h095B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'h0417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #25 2022d371-816b-42a5-bec8-98b233955bfb)");
unit.assert_eq16(16'h095B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #25 e1bfe7de-dd70-4840-bdd5-39bb74f2fe48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 c16d8f1f-2376-4c72-b135-23d1c2203650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 3223b6cd-8768-41ec-8553-dd3d39553bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 905bf17e-62a1-4464-bfb1-6b1665c024f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 09e8c429-e562-4774-9563-ad85628c0fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 c4f1448a-af49-4805-b73f-28db7fedc0e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 e37ecafc-b2a4-41d2-959d-d9ec2d2e420f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h0E79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #26 90c570cf-da0e-48b8-b40c-e0b6217143ae)");
unit.assert_eq16(16'h01B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #26 61850b19-a232-4d8f-8140-0d79a044c3c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 e98d3daf-fffb-4c0f-8231-c22c60b5e9f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 e63fabc9-7144-4e69-8463-4cbd0958048f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 6d16fd6e-3271-4b30-81ea-4797a4712d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 c3eedc2b-a1a6-4f4e-ba60-960929e198d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 9df3bba0-06d1-4bd0-be14-445463c25ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 278fe2b9-5b3c-49c7-8120-6512a4d04416)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'h0BA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #27 35f35053-06b5-4f40-8c02-25a79f42cebb)");
unit.assert_eq16(16'h0B33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #27 52d42898-ab84-4d16-8279-c682a0320998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 b2bc4058-319e-4d27-8314-a8d033c33cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 62c4fbf8-2954-44a1-8a8e-3bad99001d4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 692085c8-5cf1-47b8-8852-6f0c84ea476d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 a8725fa3-20c6-4c76-8a04-b20f33d8744f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 774769c3-5921-4fa1-aaf9-4c962e7ec5c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 b4af76c2-a187-4030-b09f-5618a05bbe07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0642;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'h0642, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #28 8f0dc12c-e69a-4b4d-b7b7-61bc3e26e4ed)");
unit.assert_eq16(16'h0914, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #28 4ea417f3-3464-4f0b-9c08-930941a41ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 d75d7a9a-f7b4-4270-b7b4-07b16e25d3fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 0f5bde22-68d6-4ddb-899f-01d3a7007fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 e4127bd0-cf68-4468-94c8-25d121409f61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 0adbbe85-81fc-453a-9ab9-6bda9b4404f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 6b426e4a-68b6-481e-aeee-4ce37cb0b6c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 f8391e09-9b49-4838-8ddf-597d89abaca1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h0B00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #29 f4dbaa0c-c6f2-43cc-88ae-15f9d48dfb55)");
unit.assert_eq16(16'h0FA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #29 be4ec8d7-de26-4776-a42a-6effe6ace709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 84ae2113-c8f7-4771-9080-6284fa49cb56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 43e61cb8-4cda-4a9c-b776-a8d2014fa24f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 9b52dd68-d4a0-49c6-a1cc-dd03d0c7e7ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 e81d5b07-7c2e-467e-a096-39166486de19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 ccc88d1d-4158-49b0-b4fe-9cf47f16cab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 41ff0ef7-3bf4-4bea-84b6-d3ddf88d38ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0357;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'h0357, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #30 791765ac-58e6-475a-89f8-5eb6fa77cf06)");
unit.assert_eq16(16'h0B99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #30 3b0b8c65-cffa-419b-a999-fd0570e797c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 6020c004-f8fb-4ca0-b1ed-88f7b9d2cf65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 a0fa3cc4-e43b-401f-a10e-55b2d11cd5b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 6ff6f9d5-aa96-4804-9a47-b4eb9457661a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 6517fe34-b9d2-4bb5-a96c-096cb506ff8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 6623721c-a086-4071-b333-b0b851925b4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 4cbe317b-28cb-4263-979c-6d63405c5943)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0503;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'h0BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #31 0dc83812-163b-4d3d-b8ec-fa4470dc7af0)");
unit.assert_eq16(16'h0503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #31 7a772579-8aaf-43bb-84da-1c3455a2507d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 6df9f50a-b07b-40d5-b12b-532226cd0fc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 c6f79f57-7b7e-4efc-8fe9-245209ec3b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 70506dcc-6b31-4999-b707-96a6d1564ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 9376b51e-58d8-4485-92df-2fdcf35700d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 12cf1302-4535-425f-8bc1-57bb60fa866f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 67529f90-9f5f-43e7-988c-be5c706345ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0593;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'h0593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #32 8d09ec50-1e04-43ac-8805-31ec70fce1d0)");
unit.assert_eq16(16'h0DEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #32 c4eccbdc-0070-4dfa-9972-86994642ad4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 ff5fd405-764e-40dc-b8d1-71747e71b0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 c079986f-f67d-41b6-abc1-4057ca7ec712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 c66d30c0-086b-47be-b9f9-b9b285180f86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 0fa9b8c6-504f-46d9-8bcb-087d5c293002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 6c959a08-a4a2-4828-99c7-e4c788414cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 0783f0c3-bedd-4a61-b527-3476d15b4371)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0718;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0741;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h0718, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #33 bb52a72c-d1ea-4678-93bb-f5eb3b85db4d)");
unit.assert_eq16(16'h0741, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #33 472f7a61-94d2-484e-b71b-62315abefe67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 9623c018-b0a0-4144-a447-b1a87b873c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 4533c2e7-bef8-475b-b305-720316dcc5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 3f3af7b1-6307-4400-9f1a-a7a257ef20d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 fc0146f4-4d17-47cc-bc5b-f32e057872d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 12483e1d-3224-4f63-8c99-042d60bf7a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 a04efc24-1c3c-4946-b2d1-d086bed3c674)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0435;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ABB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'h0435, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #34 1d0297e4-2c31-42a6-8dc7-1a840ec4177f)");
unit.assert_eq16(16'h0ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #34 f914740e-6e92-4dbe-93ad-3e4edae1991e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 0f0333c7-056a-4826-b719-ad85599da55a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 adb06e21-0f07-4536-b23b-a1e495c3c1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 09eee2e0-4b29-401b-ab20-23cd3205fc2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 119f8434-015f-4c2b-89f4-12e575c37a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 8f2ff9c6-577c-43f6-8b84-e390bb5261b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 c48cc60b-6108-417c-a4bc-645e679095f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h01EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #35 b9c30079-bfac-4855-9591-1dce4795b2f4)");
unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #35 17ed4205-a5d9-49c0-8e63-dd436566eb93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 7cbdb1c9-0c8c-4b34-b3cf-bff588927165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 09c18b20-6c79-4358-b5c5-8b4a8b1fd214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 c3eab234-5ad5-46c6-b62c-09d76a6e3886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 1ec7161c-6d42-4d7e-8886-c6963673b453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 d34bd32e-1240-4369-88b5-89b3084a7b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 c1c95797-15b0-4296-bbbd-23b79a66df58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0620;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h0620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #36 1a39fd3c-574d-4e4d-93b9-41b13788c8f7)");
unit.assert_eq16(16'h0FFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #36 8a26beb7-79c4-47a6-afdc-6b6d852fc678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 c49a6b4e-becf-45ed-8314-e69c9053e04b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 f5fde112-26b0-4c73-9609-21826a65370a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 40a4cad5-ca04-4d8b-b9cf-2b4afff63721)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 a4f2ca81-1654-4b7c-acef-4904e3484dfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 af544dce-41b9-4ada-92e2-bcb16cf291aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 b395ae55-e47b-431a-9245-eeacee830d6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h049F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h049F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #37 0983b9f1-12ec-40ab-b8db-c6d55641be3e)");
unit.assert_eq16(16'h07DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #37 f5f676f4-0a8b-459a-97be-4830834975c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 beda59d8-90bf-4c20-89e5-a55f64c7da24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 54e45ad0-278e-40ad-9aac-c8b729f5f2e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 bc53cba8-1ecd-484c-b327-8503df3c6cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 49ff277e-d274-4d02-9635-71535202d5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 12b0da0c-4d8b-4b62-b7a4-41d6cbfe8484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 5c55f93c-b0c1-43da-8035-f42b377e6887)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h084F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'h084F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #38 ab5cac15-61f0-46a0-b656-d4209068bbc4)");
unit.assert_eq16(16'h0CB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #38 8aab6b27-f471-4f36-bb0e-4ca9010c6648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 7fe48052-3598-4838-bc5f-d7550dce1099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 faa29522-f57e-420c-a53b-e8a797d4bde7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 4935af1a-d652-4097-b0bf-ecd76a401f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 8f2485f1-86a9-4cfb-8a47-2bf28193574a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 ad55e73c-1501-44aa-a811-b48b582e18db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 907c74cf-b5bf-4c4d-a5d0-8f12ef69151e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0412;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h0DFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #39 4107d9af-dd51-455f-acd0-10981c5b2275)");
unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #39 d1a1e155-c4b9-4373-8ae3-70409a78a88c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 bd99927d-7ac9-4fe7-a6f1-30152f201b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 406c044c-9cc8-490d-bd8c-550f0e235ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 b343c627-29b8-40fc-80f8-197277a97593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 cca67a33-e1fb-42d2-82a2-c6daa733d9f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 e0b75ca6-b3ca-491b-b51d-16cbcb731823)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 b318e912-348d-496c-9f3b-c7e71bf25d0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0813;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h052C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h0813, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #40 0800c2e4-e3a5-4f5c-94fd-0338f3f85e0a)");
unit.assert_eq16(16'h052C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #40 cf838925-7f05-4945-afd5-47e7be5779fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 4b8b5fd6-3f78-4669-be3f-d3e602f77bb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 2acec33d-8ae0-470e-8ec7-74d5ceb532ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 6756b3e1-9af3-471e-b799-9dfd88359fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 32c4908f-5792-4621-9ff1-c094817f5418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 f1acf7a1-3ab2-40cd-bcff-141817548708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 ebf05a5b-984c-46e9-b9ae-4fb3ca3e2365)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0323;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h008E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h0323, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #41 060087f7-07b1-4e81-9971-dec5fe5ed940)");
unit.assert_eq16(16'h008E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #41 89472364-9827-45cb-8f13-ea814923d920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 bf1c2bea-450b-4318-b3c5-eaab05e7a0a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 cd22af6c-5c25-47df-8c5c-d7d2229806b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 1a7a68ff-5c3c-4b9b-861b-8c3ea844fbd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 a6971dd1-a198-41b6-a9ee-4ac7495fdb8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 89da83ce-52eb-41a7-b444-daf366fb440d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 c1b18e9b-f0a1-41ad-a429-80a04b56e5ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'h0FBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #42 504dead1-2fb3-4956-958b-31559b8f47f0)");
unit.assert_eq16(16'h07CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #42 55f9c2d6-a74b-4b59-9d7a-af92a52cc6ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 fe89e702-30db-4780-9a46-c13dc5cf50af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 16b3a726-2459-4393-8194-261c41b78ca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 c3d0fe0a-6133-4f1c-8cbc-d5d29981127c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 dea00286-7b0d-42f5-997c-9aca6e6ab380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 0c19c6af-c933-4abb-abbd-12a88402a6e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 14106e90-6375-4593-a5c6-fa6a12a87faa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0604;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'h0604, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #43 319d1543-fd61-4fb2-9c7a-3c562bdb8f69)");
unit.assert_eq16(16'h0BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #43 40be0e3c-802b-45d6-b6cd-7628c17af6cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 7f444c8d-accc-4a59-98f0-0b906dab7ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 eb1cda50-5f10-4c20-a27f-580a9b615152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 c7a5c0bf-5052-4d9f-a233-ef82edf0400b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 37d49799-c9a4-4761-bd64-cda9366a7dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 6a892a75-467b-4bde-8b7e-5cd3247d7318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 01f9a00d-459f-4045-88ef-fcf85d0e4d6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h035A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h035A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #44 f7fc315b-3171-41c1-92f9-dfcdd794d44f)");
unit.assert_eq16(16'h0C7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #44 ca0782b1-2e03-4802-a89e-c61c117d02da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 2619bfcc-abc3-4979-882f-c59b37b57bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 e31dfcff-c1dc-4d86-b1e7-43d866661458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 2cc8d4bb-dfd0-4c84-86b7-028ff59168a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 352598bb-87b4-4c7b-9d02-b00089c35223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 a9fcfaa2-f854-4e9a-9d7f-e31dceae7bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 c06cb2a2-cede-4cc4-91ef-5254fa543022)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h0EC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #45 df0373b8-fb14-4aed-acb0-21d179277377)");
unit.assert_eq16(16'h0AAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #45 ebb359d9-5c26-4322-9c5e-67448d89546d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 d240aaad-5444-4c57-86b8-b500ab7862f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 472b489f-5b33-4eb6-b3bf-8e6429c1cc03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 8357fd12-4fae-4700-ba93-f1bff46ea5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 4d68f779-e3b7-44e5-9c4d-f0210b8efb35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 f0059bb2-0a35-408e-b218-3f23b8dabeaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 97736cba-cae0-46bb-affb-b5ae7368a43c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h068B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h068B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #46 1955e2e5-f17e-411a-938e-093b62c0a3d3)");
unit.assert_eq16(16'h0143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #46 cb0a8f29-74c6-4e69-b67f-944378f0aeba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 7dbf60f1-c1b6-466d-a30c-932d0f2f2ddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 7335edef-f257-4c08-8a21-90060a6efc3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 9fed5d39-7ad0-4b4b-b620-56aa83a21751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 44fb0bfc-c943-4d4c-b022-b7d7c7f4a474)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 2f4ded89-a189-40a5-bc92-fc3c429b4048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 2de05a4c-9d1e-4610-ae93-c3500cbeec1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0474;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0477;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'h0474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #47 d23bd08c-51f0-4223-bd75-8bbd0c41356b)");
unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #47 5350c3e2-249c-4c55-a268-6c5aa8959112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 d342489f-0aa4-4092-95bf-a135df7c8cb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 112aa4f4-db27-4c0e-9633-afd7d8580e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 d7eec066-676b-4bcc-bae2-3553e25c575e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 b72e75d7-0b74-4e95-9f53-ee524f97805d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 4c1caf42-48fd-4cea-96ed-a90216c6a315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 cc9141be-9274-4738-ba6e-493f01dd7007)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'h0F57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #48 f42f0125-c181-4f1f-b296-be35e4ba369a)");
unit.assert_eq16(16'h02DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #48 3307d4c6-162f-4108-a85f-7967e192fbce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 8bb67133-172a-4431-afe4-f6d6b15cf167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 42abda10-db6c-4e1e-964f-15fcfe79e993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 64c1f92b-371b-4a12-ad79-82818b897bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 792a8dc8-87ef-45f0-b224-695e811310d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 95badf47-3c78-4623-b74f-00db3fb738fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 af0fb5ab-4a4b-4cf9-b617-80d492bbfbc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h078B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0574;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'h078B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #49 16f6e3c4-c16b-4627-8a03-01835d320d58)");
unit.assert_eq16(16'h0574, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #49 cefef837-bbec-4d3c-aeea-6baccaf3dcb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 7c308619-940b-47e4-b9c0-0bc40c41b6a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 ce7bf778-c5c6-4545-836e-eaad09ae6d63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 c4615b23-8ab0-41c6-981c-60fea55890a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 762da769-39af-4280-a65b-d1613646a5d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 bc2093cb-9e47-4f0a-b7cf-1643467236e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 640fea1b-3ee4-432b-bc5e-ea61872e51ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0507;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h087D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h0507, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #50 a64808b1-8181-43a2-8523-891e7d9d27b8)");
unit.assert_eq16(16'h087D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #50 e6b65f7d-8a9b-44a2-9134-07969b6881fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 18ef43d7-fa79-4c86-9251-9d37a851479d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 624d3c0a-b51a-4b95-90e3-bb160c5e0326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 824cf8c6-4eb7-4cc2-bc5a-3bc29900c9e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 bfcaff3b-d65f-4174-b3d5-a90ca8a0057f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 2a96eab2-fbad-4822-baee-627341ce071a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 49b30729-22e6-40b1-b64c-6da6a70c1a92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h0D61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #51 b1d1f9bd-02fe-43b4-a593-28f8bfe224e6)");
unit.assert_eq16(16'h0914, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #51 331cf517-c6ff-4237-9565-b7d66234bbe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 1e24f7fc-72b3-41ed-bd64-878e9555e548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 794d34ff-d81b-43d1-91e6-e26fe0476517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 88a0c2f2-5eb0-44d8-9f8d-c838933a7e08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 05559879-be5e-4298-a403-dd6ff9cb4041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 34817a3d-8d20-4dc8-960e-8ed4ac910fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 ddfe4aa8-33e7-44e1-a1d0-a18e3a9f5ad7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h0F12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #52 4c32a777-4448-4b2b-b6a4-2c6fd85d4f9e)");
unit.assert_eq16(16'h0CC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #52 ef823193-e65a-4897-821b-44f2661ba058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 27323fc0-03b0-4489-a339-e75cd8bb9454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 5b16a579-844a-45c5-911e-f221989fd9c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 60cfc501-e6d8-4f8e-b88c-9c7e4c4deb91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 b448ebe2-6b1c-46a4-92a3-61f089111a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 d9849be0-bfab-4e9a-9ef5-5d5e82a85010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 ac3a05a8-10ca-4f9d-8ae9-23b2b3130d71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h016E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #53 6ea06bb3-8124-45eb-9247-c3df8a097946)");
unit.assert_eq16(16'h05B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #53 5fc6bf51-8f1c-41b9-bd08-901115ae4d81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 0a65b5e0-df19-4b28-929b-f66d501f615e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 8c70593f-3db1-49fe-88e4-bdbac2564439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 2dba73be-29a6-4af2-8c5e-0e865a77472e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 503e765e-3403-4ea1-96c8-7079a167cdd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 81949f8c-b5e3-4a44-b858-2000b9a2035c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 62b20bdf-6cb6-4f18-8907-77a9f11f0e4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0777;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0145;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h0777, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #54 ff8be269-64c3-48a1-a804-f733bb9626b0)");
unit.assert_eq16(16'h0145, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #54 3085fd32-0ca4-4a40-bfa2-76772c4d3f91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 c1d61071-a2ce-4350-bdc9-eb861ed8ffc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 01f05361-b340-4952-b7fe-ed0af2ee67ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 01323248-1b3d-4897-bd89-151e74369fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 a1bf47fe-29ff-4c7e-8616-b23b777215f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 a3e79dc3-bd88-4fb4-8b4b-2679868982de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 23b540e1-9eb1-43c9-8d83-a20fca9da090)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h012F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h0DDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #55 4ac333ee-6a3e-4ef6-ac27-cd98bc3ed908)");
unit.assert_eq16(16'h012F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #55 1ca8ae67-1d81-437c-bff8-46993668d07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 ca4dec90-5056-4355-bbe3-fe147a389dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 3258ba23-f4b4-4efe-9305-9a47b3436a3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 4723713f-cadb-4d64-963b-8920384c74dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 9d319c59-185d-4d55-8813-e7cb4b31173e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 8f6302cd-4f23-40be-9d97-99009681cef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 e7960993-ea48-4bb1-8d6b-ed025563c747)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0727;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'h08B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #56 5681469f-8acb-4e7a-91cf-3afeee9c84ca)");
unit.assert_eq16(16'h0727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #56 beb27e37-a6bb-4368-b33c-3d8eb3ae67eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 1cadc158-a298-4029-9523-b766cf9762a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 fed1200b-2ac5-42b9-90f3-a3a8544ca4c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 e9ad4aea-bd30-46be-b352-729065d08189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 b6973fb1-68b3-40c3-a1e1-d121d04c9c69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 8cef75ab-1475-4d59-ab72-3df34449dfd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 3ea72de7-9e7d-4df3-be18-b607eafb1053)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0076;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0400;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'h0076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #57 45563184-4902-45cf-98e6-599eaa334a1f)");
unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #57 f7ffed41-f0f3-4307-bee5-0c444116c1fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 d91c6dce-4851-4e0e-8501-09b5887e2f9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 d3f0303d-0d9b-47c3-b113-49cfd275b7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 fbc5014f-eaca-4be3-8692-505c46db933b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 93508ee8-86ae-48aa-9e5e-7ae7387c09f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 048269c2-bf7f-44d3-be42-58881740b973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 17ec333d-9a82-4322-a59c-ac47f801eb8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0588;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h0588, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #58 224d5754-a6c7-4bff-bab9-21fc577b3315)");
unit.assert_eq16(16'h05D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #58 0b862c37-510d-4d7c-9806-32e20d124c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 95425ae4-a5e3-480c-8a32-cb834744cb55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 4493514c-546f-47f8-ae84-d6e7c5de493f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 5a73ecda-7316-4a8d-9131-0ebdccdea433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 4ec52e3c-d89e-408c-86e1-b31304983912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 73f74079-975e-4cc8-84aa-9fd64e75329b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 65583649-9b3c-425f-972a-8d25a434cae8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0163;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0167;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'h0163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #59 1e0a06b2-d749-40d6-b0c0-59be5b7affec)");
unit.assert_eq16(16'h0167, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #59 e94ac722-f3fe-4574-96a9-5908415e77a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 319e16e2-f151-4f62-ae15-2f64f3ce16b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 14df475a-16c6-4c74-8afd-0c7f9098b9d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 60972a5f-5e0e-41b4-8429-7fc8732699e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 882b274a-605c-4538-8c2e-3898ed2c6098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 e68c6900-bee8-43ca-931d-2074b3125386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 47a040a9-d835-4f03-93a0-1717428dcf91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h054F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h09D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #60 6ee96582-5fc1-4e83-9d23-4e2a298e8afc)");
unit.assert_eq16(16'h054F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #60 aca722df-8a8b-4958-9047-218d7ab52624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 ddb02886-1d25-43a6-9281-ad4a6b7294ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 51c880c1-d7d8-4bfc-a19d-7dbbcf49f35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 039d35c5-6d8e-4a71-84c3-d59937c14534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 3b1ae673-8dd7-4135-bf3a-d358651ca02d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 047e59cb-61a8-430f-8855-a2c8a1553154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 514304d6-b371-4f13-aa57-27c459891872)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h0D6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #61 260c9722-5fb7-4e91-b0a8-af781d922784)");
unit.assert_eq16(16'h05C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #61 5ed13c28-0abd-421b-806c-54c1ada5214c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 cda187c9-c94d-486d-b1f6-21e84e908b69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 5b199a57-ee8c-477d-ac9c-bb6616d2a067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 2296b59d-e654-413a-a490-3aecb97ceb56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 736e4e05-3a05-4e79-ba5d-5541384ec2da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 d626bfa3-4518-431a-bb10-d87c111ffb69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 7a0184ef-56b6-42de-abd4-b6c575120742)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0176;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h0A95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #62 b8c42567-6d80-41c3-b310-f7a1b9df151f)");
unit.assert_eq16(16'h0176, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #62 5735889a-3b18-468b-b82a-88ee0c733129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 c63457d2-c1dd-4103-a4c1-0fd7f4d2b8cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 6b61e6f5-e825-4dac-9e85-81c30ef28c18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 dc95bda3-fdc5-4bf8-9f08-d553331365f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 d7810d1e-0317-49d8-b79a-eecf1b4f8dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 e71b8765-8aa4-4803-b1d9-fc7281561edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 2cb2da9d-a846-4866-ab3c-013abee37493)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #63 6ba94eb2-da6b-4b99-b1b5-52cf25d8d1ec)");
unit.assert_eq16(16'h07BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #63 7e9ff83c-9a98-4712-bbb2-7107eda1f2bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 f7d6c4c4-d6e3-42e5-bd42-f6e5e7bafc88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 6fecfb0e-d65d-40cc-866b-fe1c408e1f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 96e5e551-8c13-448f-9871-38e292f5a8b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 ad1cb11e-7b9e-4806-9a8c-bd245cc8ab02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 f63a10f3-4601-4c19-bbb5-5c453f66e8ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 16829656-d0ba-46a6-917a-41668a7d34b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0942;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h0F32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #64 0fce62cf-9ff9-493a-99e0-8d7fdbaeb575)");
unit.assert_eq16(16'h0942, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #64 84f2a7e0-0868-43fb-be45-03788827d649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 2c2f35d5-0e35-4c67-9403-728d6791936d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 341adb0a-c9ec-49b5-8dc9-bafe60228e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 431beed8-b5ea-411c-b42d-38d9cbcc1d6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 37883720-624d-474a-bfbd-d0f299fc6a8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 296e4f5c-250e-40f3-9e2a-115a49d0e269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 0fa9f492-9063-47f4-a0d4-ddbbbd0d74b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h028B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'h0C9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #65 c0f20f51-e187-43dd-9ab7-af7c5be046a9)");
unit.assert_eq16(16'h028B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #65 c40c3428-7014-41ac-bb9e-4efbb0dfff64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 871aaf1d-4470-4b66-bb29-26d2d2aa2bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 72f09ea5-4386-4840-87ba-227de13b77b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 a00f6d45-d22c-4d22-a8c2-91495da0b550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 c162f20b-afc2-4f30-8d3b-df0da37b1290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 6dbf8f6b-6b9a-48c4-91de-37d2cf306700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 45100567-891d-43f8-aff6-cd22df7037aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h0A77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #66 896e1db6-d393-4242-8246-0bb9740d0c9e)");
unit.assert_eq16(16'h0EBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #66 693c57ba-0ca9-4ed1-9eda-2bd60bc88c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 2f5c3caa-a1f2-4a98-83fc-b0e3ead52bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 006b0b68-152b-42e2-b6db-5b3842366e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 8c855194-1557-4e70-9478-058276c8b620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 b4d41969-86ac-497c-a38a-6ef1fe373d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 fb0516d5-5ea0-467e-b8d6-4b07a28f91c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 837a3eaf-40e0-4502-be68-ee783c4ca437)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h097B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'h097B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #67 87ff6e60-9607-4e24-9067-82839e470fad)");
unit.assert_eq16(16'h0FE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #67 96ca3cd4-28ad-46be-801c-40f2b7c7bd8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 68ccf3da-5b4a-4a6c-bfbb-a0ad17787992)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 2813c64b-29c3-42c2-a927-7d4915d3612e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 71599862-4416-4a89-9516-b797153be8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 b398725c-af6b-49b6-b181-07e7508fc42c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 2cce0e38-6f11-4814-8043-7ea1eb850f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 6bf096a3-83b6-4adb-a922-b9d8b6276518)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'h0F7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #68 af58b5f8-9513-4a04-8c1f-6355d147762a)");
unit.assert_eq16(16'h0A73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #68 2afe2900-9d1c-4026-b70d-beaa80f3407b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 5feb1d0d-291c-46a3-b004-39c3527b187e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 be81037f-0869-45dc-8fe4-b057ef4e0d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 fbb59162-4dac-4607-831e-24b509674270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 30744bf5-b450-4fad-96de-acdf77ac4c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 8c10aa08-2d28-43db-9eeb-612f90cfd6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 2ef99ebe-737a-4694-a325-c1115cadd3a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h025B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h025B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #69 e38516b6-a8b9-4399-a98f-a966c6d282b4)");
unit.assert_eq16(16'h0D6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #69 0a6251cf-75db-4470-9eb1-8cf86a0fb2e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 1db1cbb6-2e8b-4a84-bd60-8bdf39ee0305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 00f6f403-7e6e-4acd-8605-98a37682d037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 0ff2377a-ff5d-4719-8ef7-fa42588c85f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 3f14fa70-e6a2-4df4-b3ba-f922be7262f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 834f42da-aad9-4e0c-aeb7-202d18a3378b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 531d669f-5e6d-443f-9647-3b64a909d4bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h034F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'h034F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #70 e5a6f78a-529f-4ee4-b868-386daef6141e)");
unit.assert_eq16(16'h0FF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #70 63d98c97-0b98-4036-9ba1-453072adc6cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 86d11533-2772-4ade-8f2b-6e4ebb0130f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 5232e221-e243-460a-92ae-9771c33f1bef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 a098b618-3476-430f-843c-7ad01214a401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 fec8549a-f0a6-443d-8866-4c794fe32d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 1392f402-6e09-4ccf-8674-7383e6d7519c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 a87ce4d0-ec2f-44eb-881d-1884090d81a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h068D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h04E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #71 f0ce5412-4db6-4c18-8d7e-b33943104b04)");
unit.assert_eq16(16'h068D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #71 d60f4e92-3e56-4e54-9bf4-3053186d88c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 fe4045e2-d355-4786-a422-80050270776b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 c2b4f080-dd5f-4c6b-9cd9-b531ab6c338f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 98e0a4c1-04e1-4fbb-a083-70af2c8b8fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 d13d0963-c7d7-4a04-8c8a-f3e7e2f15dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 8ef118ff-cffa-4ebb-89c6-76cc87e84934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 e5ecb751-90a9-43d3-b3a0-b9a1c328c27d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0098;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h0DFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #72 0a23e6e8-1424-42e7-a53f-1602147ad439)");
unit.assert_eq16(16'h0098, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #72 127863d9-82e5-4420-a29d-4238b05526d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 ab3f435b-0a50-4679-ab72-0c551ec93404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 58effad9-cb5b-4420-b42f-c4cc645f442c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 edd3f539-25b5-4290-8722-a47244283b26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 b3ae4fdf-9c9b-49ec-9638-f40997125bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 087ccac6-33d0-4538-abfe-da67cc56939b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 f579852a-69cb-44f8-8e63-8087ff6bf2bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0444;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h0E38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #73 264dc84e-5aef-4d74-9376-e3816ae194ad)");
unit.assert_eq16(16'h0444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #73 57ebca00-7c8c-4aee-a53e-740644b6ae05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 2c10fd1d-fd74-4e74-b3dd-00ce152752b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 494dfcab-2438-4118-9ed6-ee4efa8577f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 23fca438-ce58-416d-ac56-c1dfc9243900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 93243873-0936-4124-8290-390d4bf28537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 26436b8d-4aa5-4d94-9054-603902aea6ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 68023d76-cac0-4905-b9db-2f3ca890a5b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0156;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #74 c9cafd53-56f4-43a6-b16c-25c10491fbbe)");
unit.assert_eq16(16'h07CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #74 b30def38-780d-43cb-951c-0e4be7b1abf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 c6d4bef7-56ef-4004-8e8d-1b6b29834837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 00c150db-f6ff-4aa2-9dd5-9940db3ee355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 2fea7c7f-8ad1-42a5-83ab-457bffc3f7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 77dd1713-8597-46ad-9caa-e670cc488a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 8aa71e97-0d5b-444b-9041-1cb0d6d9c9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 b8a4d185-2ff5-4735-a05c-bddadb81f19e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h0CA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #75 c1ffee75-4677-47dc-b48f-64a2870203e1)");
unit.assert_eq16(16'h0F94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #75 3d6e53e5-3757-4fec-ba89-6d0ffc1fa4ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 f58cd63d-d933-447e-96fd-448a202d8a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 6f6c4c11-b491-4707-ac56-fe4c2e44ef17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 dddabb43-5969-4552-910f-e8f4a0876d2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 cd477a77-8d86-4753-98a7-e4031c0da3cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 337a1324-8902-42fb-afe2-6152448ebf41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 09866583-16f5-4090-9b6f-1dc17e74bf4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0767;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h0767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #76 a16eafeb-1e57-4f3c-b46f-2bdb7210eaef)");
unit.assert_eq16(16'h0C1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #76 4a85f383-9731-43b6-9c2f-3bd684bb7399)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 42d375f7-0ba3-41dc-8498-eb66271b30cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 95e568b9-ab80-4106-ace0-5ddb1850126d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 10931715-4c12-4c58-b9c8-cad82751bbd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 b387e972-9493-4555-8321-44d81370822d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 306b651c-1443-464b-8ee2-a1d2015c7acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 65d0c124-258b-4abc-8b78-6200772f2a78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h0A1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #77 bc1ba1a4-6120-4a80-8d59-31797bc9f380)");
unit.assert_eq16(16'h08F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #77 742de966-1d76-4882-93cb-696124ceec02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 9ef64523-615d-4b86-b706-b8f58c9d0f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 5f8055d3-603f-4428-8d83-0418acf1cb38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 f4586012-ebac-42c6-802a-8a22954ca76c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 c4fea48f-413e-48c1-bff1-b7c436d71b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 f70d845d-de4b-4c66-9101-92902ff07c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 4645792f-bf79-497f-82e8-b81c45a5bf8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h004D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #78 c61fe265-64f3-4166-8413-1d7ef9730cd6)");
unit.assert_eq16(16'h0E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #78 917168fc-fa68-4404-bf22-521edb84ea55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 d77cb1fd-508f-4a4f-9c46-3b20b0840d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 db18e0cb-1632-4d22-98db-40b63e17ef80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 8c9b0356-0d71-4503-9546-c49eea259f7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 1b8304ed-1dfa-400a-b5bb-ef8ed86b6856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 fcee3224-1b37-48f5-9297-58e752a9f226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 c560501c-f684-4e94-b028-5c1197d2b710)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #79 7fd5628d-1f5c-4cb6-9ab6-7a1535365bc3)");
unit.assert_eq16(16'h0C72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #79 c87234c0-e168-4d99-87f3-4de58c1482d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 bcb01774-6797-424d-8f5a-e4023a137ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 583809bb-f3f9-462d-910c-09ddd1a22186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 9c88ace5-c91d-47e8-a8f1-42a48974017e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 7cde27b0-9731-49b8-afbd-a97213748e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 0158e634-f730-45b1-98d8-13ee0fd7b967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 79174a98-4771-4411-a3a4-e6179806ce22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h050D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h050D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #80 eefe143f-4846-482d-8615-a014d559590b)");
unit.assert_eq16(16'h0BAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #80 d1754162-55b5-4e4e-bda5-cd1257353cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 bcef58c6-ec32-4492-8070-6f3bc278d33e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 7ce25e3f-a402-4602-9572-e6ac3cf77f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 076f6938-bf05-4d05-bd9e-2f6367874270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 a1cb2fe3-d7f4-4418-a2c8-df53c3b0207c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 11e33b0f-7e44-47ca-bf0c-49d65be80b49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 8ceef55b-99b5-467d-b3a2-8683fe625fb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0651;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'h0651, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #81 a878d76a-78bf-422b-9e37-670fd43d4883)");
unit.assert_eq16(16'h0BFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #81 4292b7bb-b600-4f95-ab00-0cfab8b074d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 900146e0-03e6-40aa-b082-b628218cb9c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 448cb1fd-ee6e-4344-b80a-b46b72912b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 53ea0cf5-9274-4ead-8165-a42d0e45142e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 71958b85-6535-409f-857b-186ca08315ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 49ec59cd-5f33-421d-bc71-c6228c5c9c6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 90f7e292-a1df-4656-8ad9-87ede3966dcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h0F2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #82 c64add34-5004-417e-bca9-75a2d27404ba)");
unit.assert_eq16(16'h0DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #82 284eea60-250f-4192-a774-d86c474634f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 1a60c985-0f71-4cfa-abcd-4e77750aae33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 3dbd16b1-f24e-4e49-b718-7b4914c7a23e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 280c4c76-bfca-4fb9-b8d1-9e9b6dced37c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 8ff576eb-8dde-4d1b-91ef-5daa6081428d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 c78160cc-7c23-4742-9cd7-9a6ce5151b9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 592fccb1-9bcd-4b66-86c6-e3d8633c083e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'h02C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #83 61216bec-f87c-4eb1-8814-af0334e8e481)");
unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #83 c91427a2-3a2d-42f7-9c46-87aefc48373d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 9dfc1d5f-62f4-4291-b0e4-3cfcfb6460af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 39c02d7e-7d3f-4b91-a109-e15fdc5738ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 8924f690-508d-4c22-a146-99c77743d500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 0c3e0efc-1631-4ccf-9fc9-2ed81fe0f48e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 2ffb8117-8f05-4d31-b24a-17ac0e5414fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 5942baf4-20b4-4d98-b60f-6c6de7db027d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h0B18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #84 5bcc75bf-7391-4c6b-bb64-b1e0974d5c17)");
unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #84 9cbc84ed-749a-40ce-aaa4-3ede246af5a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 5b9b590e-013a-41d4-9102-bd422fe70231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 eb921079-d8c2-4038-b370-3a9da37f57b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 987077de-5262-4a45-a927-abac7e8807b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 afd33c88-38ed-4dff-82fe-52836428a115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 51e73dea-a01e-4a9c-9da6-b9a923c711b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 ce346202-85fb-400e-8878-9db279781536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h07AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #85 ddd7ef2e-f2ba-477b-a402-40b16ab5587a)");
unit.assert_eq16(16'h0AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #85 f1c61af7-0bba-4739-aa95-2c8295803a26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 ef2d2c07-db9a-4f36-be6e-d141ff844f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 653df0a2-dbe5-4704-a380-69fd51d4e49f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 1183ba33-7cff-451e-9f45-9159a413eac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 379df6d5-f10e-4e10-a42c-1cf0381a1080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 7102cae2-2639-4493-819a-19dd0a00bb83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 47991190-2b49-491e-9656-3d94a10f0002)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0854;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h063A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'h0854, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #86 23d4976e-fb1a-407c-ad6c-6e6debfd1c31)");
unit.assert_eq16(16'h063A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #86 7b3ef929-51f1-43d5-b662-c9e965be9422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 a540d5c6-11ba-4c9e-a040-dfe818543e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 0edc3e5a-f36f-405d-b7e6-7d33740b38bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 b689e8c6-e748-4cbf-8932-58ea2a35ebeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 31ef4157-2f69-4e1c-98c2-0d5350ef471c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 e1da5634-b8d4-4057-a48d-c1d959bfee38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 203a35c0-bbb1-40a6-817a-21674d069f12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h097B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0136;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'h097B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #87 2751b514-b4b2-4525-926a-05e3c13279a3)");
unit.assert_eq16(16'h0136, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #87 d2960832-2052-430c-a7e2-89ef5a61b579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 0bf7e22b-ca2e-4a7e-833c-dcdb4a3f1898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 90002a7d-b698-4073-ad75-085ef5d51a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 12ced85d-2177-4a0d-9bb2-b7682e1721af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 ac97832d-9ea0-4a9a-8bc7-337a2653d289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 fe9150f7-683d-4933-ad79-bff543837214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 1ed58c74-48b5-469a-9d02-07f7e0e1a892)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0477;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #88 89f3834e-fd2a-45c7-b69a-27d8140324f3)");
unit.assert_eq16(16'h0E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #88 d3923995-59e6-4296-bb27-9c249a449371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 7619bd17-a2e2-49c3-be9a-bee5cae95562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 d49b8188-b5fc-4ada-a54d-ccadf7e1de6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 ad7284d6-3b81-4027-be5c-df895c85d101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 6dd95bba-1f81-4519-8236-29a983dcad2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 eea6de90-fabe-4e81-bb5b-3cb511e7b502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 43bd31e0-333c-4d77-a3c4-864c8d44298a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0968;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h09F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #89 adb744af-427c-46b4-af31-ec6bc00cf1e2)");
unit.assert_eq16(16'h0968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #89 5ce02abf-00e5-4b61-8ec1-cab29a171678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 2844ea27-06a9-4099-be9d-b9d03a2e8ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 b3207e9b-00f9-4d60-9ea6-98a99d47a5e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 d01a5792-39b8-4269-a5f0-90d545b50905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 4a3c52d1-ed76-4b4e-be1b-739ce2881bdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 3ac1c37a-be2d-476e-a2ec-72e21a5d9ef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 9b0bfc59-b3b7-4780-9687-35de27a28aac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #90 e7f527b0-6153-409b-a969-76dd2e53eb89)");
unit.assert_eq16(16'h0B11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #90 dbdb1c21-e829-4408-806c-d95049b5f302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 02e87af1-5810-4e49-92a0-0cfd95ee14de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 b7a52082-f886-48fa-a601-9b38b376fcc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 42a50c32-dbf6-4134-add4-cf4ea7b4546b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 63e85a13-b2ab-45a5-8dea-0ebaf9051a32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 496de3f0-ca2a-4c72-af62-871044bd3f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 45856341-1fdb-4427-8f2f-fc4a201cdfb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h0DDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #91 bff496c2-992b-4d82-a55a-dd7e360222eb)");
unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #91 d9622c28-e310-4a55-a452-67312dd0fcc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 27dc9ff0-5b39-4b6d-b1e7-17a472caf6cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 a42894d3-dcf8-4da8-aa53-ecc2b30d8136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 b9df922d-5b82-49ba-b171-dc889e153c18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 cefa0cda-7548-4f5c-a41d-cd5ba1b7e416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 fe95375f-3b09-4938-a209-a1c0c8439398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 d7a0d590-1cb6-4e08-b645-5c52124ce768)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h072D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #92 0bd4cd7c-b105-4e3e-a0b4-3187aa037a83)");
unit.assert_eq16(16'h072D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #92 5cd07346-45e6-40b8-a051-1591abf38267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 2f09546a-2fb8-436b-8b93-49c1666d39e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 375c92fb-df14-4d1e-aab6-fb91e75b56b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 cff135b7-97d1-495a-936b-c062d8fff104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 12d0b176-151c-4d21-989e-ce09de4b52b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 4dc61360-ba6c-4928-8840-319134f33748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 92312c7e-9d53-4263-9fdf-0ad5a1a697c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0137;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0180;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h0137, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #93 5055fc20-0437-414d-b450-66ba29fa2e35)");
unit.assert_eq16(16'h0180, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #93 041f65b5-112a-4950-8b6d-709b439e52ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 0cec21f6-beac-4672-b269-b2c26fa15885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 d2768d48-8620-4fde-a8db-9181bc9b0521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 7a1d885b-2584-45ff-9952-b51264bbf07b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 2b3b6e4f-9f9b-4326-b688-4b46707c6115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 0c6edbd3-7d7b-4fa0-aad5-3197a0db2179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 a04c84c1-760e-4e83-8581-d9e6608e43ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h0BD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #94 8ec40475-d1f4-4560-a2f1-5e3e7aa67b84)");
unit.assert_eq16(16'h0BCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #94 911f0e9b-7e2a-4b27-bdd6-e1ffcddc8b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 02e6fc81-0fe3-4160-9d5b-1c39ae31e772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 65268dd1-f7a3-4068-931f-f2362eb8f0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 51ca3132-286c-487d-a792-7e94a46c0c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 97521731-35b5-4755-b936-8b6e844553c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 ab6b692d-c4bb-49e8-ba82-2ec4637e6f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 b7db0d69-40c8-41bb-968f-0ae910fdd865)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h094D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h02C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #95 f5b0bfb7-674c-464b-9acb-3abc1d2af387)");
unit.assert_eq16(16'h094D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #95 d492c594-74a2-44e7-ae62-8e60524edc81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 39930c41-7a9f-4297-a59a-63a581e4be5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 366685c5-875f-4e03-ae36-86c896349988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 f1c32f5d-5763-422e-a72a-28cd620b4e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 c8ee1570-08f5-4399-bec6-ef062026bdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 bd1b1ff1-3df0-406d-81d0-d061a7a3ea29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 edabc3c7-2fef-4a8f-98b4-f4028a26102e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h07F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #96 d7a9dd05-7691-4352-a1de-2ae014604215)");
unit.assert_eq16(16'h03BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #96 54b08b1b-5f38-463e-ba23-7ee102fe1946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 18464d82-2389-4870-ad94-f1e0edde9df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 950384b6-1440-4216-a7b8-b3903a709406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 5646916d-f42b-4cbd-8f89-be28f85cc5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 b8a4bba6-4e89-403c-a567-4a032594f057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 6b903b58-d7fd-41a7-a8bc-f0be35d056f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 cc7245c5-cb76-40a9-9ac1-878eebaf0874)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h03B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #97 2b274f94-b334-4b0c-a6eb-21afa61d41f2)");
unit.assert_eq16(16'h0F8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #97 89545c22-2d75-4c56-b692-ef9210225b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 98dcd38a-8f8b-4451-be3a-44d1987f1cbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 b1c643a9-ed86-4c79-b316-41a8d5cff519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 52a34fc7-1986-4ae7-927e-fd8dccb6a5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 4b1a3e0b-a8ff-44de-ae43-177405782c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 6ce17727-b6d2-4cc9-91d8-88bdeaaa9569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 d30a70a5-5005-4893-b281-54d1d512333b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h0CAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #98 977c4958-5e94-4e2f-ab63-d775d67994a9)");
unit.assert_eq16(16'h0F7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #98 45d79efb-da3c-4d5e-8268-b9bbb77f1e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 9378ca2f-e49c-4ec7-a539-527a1179e377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 15d99fcc-2cc6-44b4-991d-7983b211b852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 9a84ef3d-da3b-4f89-b7a4-ac9085d296ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 e47fdf4e-b0b9-409d-b274-072a4c08fd0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 28210094-bebc-499a-8d9b-41e7ba9040db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 3c648aa0-2fd9-4886-8e6f-01f206301591)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'h0E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #99 acbb9242-7a80-4ac5-a067-0216d6978a52)");
unit.assert_eq16(16'h00AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #99 b3190cdd-3aef-4075-82e0-f241dc9ad7a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 e80951be-481b-4ff8-ad3f-2235d47d84e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 2f9e4126-2c9e-4e40-a5da-d4965c441720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 610869b6-35de-401b-b9b2-0650abe1386b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 a6a02675-9d6b-4a45-8b74-741f1e1c0f25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 dca6627b-7ac1-4974-9e7f-f076bf1e52ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 2f5a3a25-cebc-4155-bd5e-f93db99030c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h0B28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #100 72796864-921c-4511-b746-a17fb5dfb64b)");
unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #100 d874fda6-6b79-40ca-ae9e-2331cb2ea529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 fb48d842-c69e-4b9a-9331-04c8f8a5e3ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 7ecdce7b-414e-48b1-876f-391ebf539c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 3e503973-5151-4d90-bf91-5af25585591e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 2f5ea4d8-b60f-4707-8940-76304f899fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 46ae9600-f875-41f9-8d91-0f077ad93c2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 4c731d29-d0f1-467f-b0d2-e4a56464ca19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h028E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0521;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h028E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #101 7f8b8610-210a-42db-94c5-3a6d55c6e638)");
unit.assert_eq16(16'h0521, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #101 80fa7bb0-4e61-4a25-b624-73b02d18f1a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 9a1f6d43-6829-4c9b-b17d-b989d9472d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 5cf01681-8747-4b2c-b90f-7bce56b9c372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 15e38904-c20f-483f-9274-43b3ba92ea4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 a5d1c6a3-7814-4a86-acaf-992705c71f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 64ebb853-987f-46f5-be36-8d19bcd50ba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 668eef6d-ec99-4187-8f1d-e852836ed7de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0583;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h0E86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #102 49165204-ad58-45f8-a5f4-9ed3bf089e19)");
unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #102 4daa6c2d-be28-48da-8a12-36fdc038056a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 5a4a2a27-6a1a-40d4-ac7f-7bae6127c86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 1da1f118-9d1a-4690-80ce-f2cff2052939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 1a31a49f-9ef2-478e-a29a-b1abffbf67fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 0adaccf8-0cde-402f-9976-3d2196371513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 ce049b44-ccfe-4613-b684-d214e64a39fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 d7f83ea6-c214-4a5a-8363-514ca27a1893)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h0E5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #103 f59fb2a6-f070-43a4-99ce-e1c39b9c0dd1)");
unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #103 5bb3a727-be95-417c-b9eb-8fff203bcd86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 fcc1767c-d804-4ca4-94bf-865f858e9b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 ac4096aa-a442-4382-88ef-e58639c5ff54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 c6fdd88b-d771-4709-acbc-da8428d2bf39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 315d0849-6093-4a9e-8be1-719e71998f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 a16cde90-5637-44be-89cf-38e5b38d9778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 92c8f304-7f9e-4f80-a232-a7f210505f55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h0FAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #104 c08994f6-9d3d-41ed-830d-33563e26a26f)");
unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #104 f193328c-889a-4b3c-a6d0-702d74b43e5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 080a6980-2c82-4bb3-8529-af2dc85f6151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 9877d1be-67f0-44d9-9ebb-bb5a80c2a375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 da932324-4e10-4296-bfed-0767097301f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 52991023-1fed-40cf-97cb-dbd516231995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 07c73eea-7750-4272-a31b-0840a2d8c702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 3e71c04e-1f1b-4287-9e53-ad8c873e910e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h096E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h0DA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #105 670deb06-e718-42e7-b9cf-033ebeb040fe)");
unit.assert_eq16(16'h096E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #105 b1b97d7c-43a5-4d87-88aa-57c4704d9e9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 25ae8d2b-8157-4f32-9a40-54db84e3a2eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 815ad378-cc9b-4198-909a-ffe2b507e06d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 0788fb7e-ee53-4203-a0e2-42956209c106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 877c396d-f262-406e-a988-0b224e95ed73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 214593d6-088e-4442-b37b-1146d91d7071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 451ae293-9f2f-43d5-b08d-8c6802945312)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0638;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0290;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'h0638, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #106 c9f4193b-9530-4029-a956-78ff10e7d8c2)");
unit.assert_eq16(16'h0290, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #106 d19e531c-72fa-46c0-be86-1d9ac9bde307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 6f4a04e9-030e-4a55-91df-2ad5448ec776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 697a3a82-0605-4d3e-a5fb-0cfac31885de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 2a656bd5-4cfe-472e-ac4f-00ffef3f68d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 53da1079-dce0-40e9-951c-e08d80ce7da5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 921dc879-a8fd-4a6a-9dde-b08c68f6de77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 a1afb0b2-b238-490f-ac81-1dd35572d026)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0967;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h0967, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #107 d432a862-4aae-4822-bef5-8fafd2bb0e41)");
unit.assert_eq16(16'h00B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #107 3790b6cc-c595-4830-921a-9937b0ee751c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 b57ad276-8f57-489f-96ca-9e794cf5e1e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 5d748b2a-3cbb-4829-a367-a0b6525324f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 a17181ea-bf75-4284-a906-8ad4c21aa91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 4fe114e4-482f-4c35-8867-25aadf060c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 19524776-f5ac-4c50-ae47-21945f1b04ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 5cba2033-2531-475c-a483-173670f28f95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h044D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h044D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #108 07caec73-0be5-4acd-8221-938e4d8e604c)");
unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #108 7002a019-3e93-4b46-8542-999d8998d67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 00a40bbb-7b0f-4e93-8866-cec9860f0f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 c0004e88-1f32-4be9-b9f0-07e8bc21df2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 6e5ee0b3-28ca-4557-b8ba-4afa562b06d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 7424af79-9e75-4a83-93d0-919ccd3a7b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 efece57e-707d-45e5-bd95-28a49a885034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 5f9a20bb-c6d1-4a39-879b-b89884a156d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h024E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'h07D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #109 6a560dd2-ceb1-4eaf-88c5-1182db2040fe)");
unit.assert_eq16(16'h024E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #109 7bcc0025-db42-432e-93e3-d943d3000f85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 4caa8f34-ef62-42b3-a63c-8331a351c60a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 d9d74818-70fd-4076-9ef2-8b1b746dbacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 a26cac5a-6696-420b-9941-366599576b95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 9c63cde1-8c42-45df-99c3-44eec2f2604f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 0f9a750e-b501-4654-bf38-2a05c0730290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 aeef64f3-7f3a-4bab-9f78-839cef35d1c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h059C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h059C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #110 5a85804c-17f5-438f-87dd-7eb25c185844)");
unit.assert_eq16(16'h0B1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #110 67e8f53c-791a-433d-8013-193aed0da698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 f8bb0a60-173e-4db6-b920-27979c17b116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 a205528d-e730-47a7-9f02-7729a23676ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 55ff21cf-6452-4aee-a24d-8ec351761822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 fcd4e637-1831-41bc-939a-a623d76720db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 d732cd4a-1c21-42d7-801f-07d0d90af4c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 1398beff-1e81-480c-b8e9-6025811a61d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h039C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h02BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #111 59b32204-dd2e-4091-8401-a710802a963a)");
unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #111 c1d0f61b-64c9-4671-9486-1bd23c249a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 d4a4c5f3-89ed-4f5c-9327-42d33c63669c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 355b9af6-6ecc-48d3-be43-d59ac0ae1f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 5fcca091-f095-463a-8b54-1d6e13cbb500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 74b98345-d178-4b8e-8f25-c2e8cf0446ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 7fc10927-e82c-4d65-acd4-79dc29b52dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 ef91b867-2e89-497c-9dc8-d28603ed11a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0402;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h036F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h0402, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #112 30e9da90-9ed9-4afc-84fc-85b2560ae014)");
unit.assert_eq16(16'h036F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #112 09a0fc58-bcb5-49fb-84b1-9f14f578d903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 467eab51-5349-490d-96c9-bc7362b70707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 7dccef0a-5ce4-497b-a055-6c714601cf27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 0d2f5926-4737-444a-a77b-66f02ea1327d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 f688a30e-e6e4-4c17-93cf-6ba33771b33b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 461c4e68-bd7c-4829-8eda-9206c2e1edc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 9bfba012-70e0-45c4-9068-5683428f16cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h019A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'h0F1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #113 5b93d7f4-fd2d-4106-a524-ee8c2c2f5719)");
unit.assert_eq16(16'h019A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #113 c86eef6a-0d82-497c-804a-598312dae314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 d76f30c6-1b34-427a-be94-e0554e0465b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 ba57c44e-8a96-4048-80a0-331117deed8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 d339f537-e5ae-4a71-8e25-a05c1364229c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 fd51e397-316c-485e-a5f2-a99f7c9d29d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 fbaa99da-b42d-4eb6-983e-28c95c59f8f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 a1f9719c-5d6c-424f-bd9c-6518f14692ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'h01A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #114 8b56189a-943f-42da-b2f2-c6f0ab4b045e)");
unit.assert_eq16(16'h05E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #114 05bb49dc-9eff-445b-8a00-c6b3431a55fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 125d4954-a9c0-45d1-9666-26bb264ef04c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 6b6d9101-d2f0-43e8-85b4-dea0aa7bf080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 646f86b1-ac82-42ce-acf3-fe1890e68c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 2b12b546-dc20-4f8f-b9b4-9f0b998524ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 e3417cee-9a2e-422e-89ae-6340ec524c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 d510c23f-8689-4bf4-882f-dadc156a0fa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'h0CCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #115 886ed01b-b4c6-41d9-824f-821175769c49)");
unit.assert_eq16(16'h09B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #115 31340f6c-e023-478f-9666-4ccfdb7e7fe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 867d7fed-fcda-48c2-8f79-2a0955a7483a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 e481f7e7-cfd3-4a33-966d-72293119ff86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 16208300-01c2-41f2-8086-ef8d5048c535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 aebc434a-9658-4a80-af68-1d975cf3ac12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 76cc43fc-19e7-4708-9f28-e8d8ccc6252a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 15d78c23-c8a4-4836-b144-b2618311d9ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h014E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h00DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #116 5298b5b9-2491-409a-8f85-8d14e5231725)");
unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #116 739e2511-b783-4c09-8b47-371766a244c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 532e7b5d-da46-4b68-8a40-bd7a81df1ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 031cd251-dd38-4e36-8501-e2ca7c81a96f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 5b7f1e2d-de07-4478-9456-3cd5b0c68b76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 0b58c220-9682-4551-bd8f-c0983d3f13d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 a648f3c5-a372-416f-aa1b-3d4f9f626681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 d84169b8-9807-41d1-91c0-b89e06f55dc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0421;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h0DF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #117 6b0827bb-5edd-4a6a-82d7-b3c981b1a38e)");
unit.assert_eq16(16'h0421, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #117 b0ccbec2-05cc-4e20-b1b8-318893d1d238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 023d0560-fdf5-434c-96f1-a7e31d286f44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 c914ca6a-3d56-4715-bdad-905f9eb45268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 424fa3cf-9f5a-47ae-af7b-626611e6e299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 d253a68b-3d8d-4470-bb2c-c97b542cec7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 7573a3a5-7873-4835-82a9-8e8da9a4550b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 f7e8b696-4a2b-4338-a279-b3883188d42f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0254;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'h0E53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #118 604e76e2-c5d5-42e8-978b-a8acd4778a9f)");
unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #118 ccc855fd-ff83-46a6-b9e1-90e80b7c66e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 68447863-df20-4bdf-b287-bca92cef996b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 5572c994-5e8b-43c0-b111-3282fcfc1502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 88a98bf1-e4c2-48dc-89c0-01cccd232ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 09d0ba81-839e-4725-87d1-a65d61275f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 e6037777-80f0-43c0-8b49-5d3980655eed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 7583ae4e-6592-4734-8bfd-cdd7b4ef40e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h02ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #119 2fb53842-bf33-42e2-847b-eb24cf0a2069)");
unit.assert_eq16(16'h05AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #119 4acdc7b2-bcb8-4f1b-8deb-41e0bfd57dba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 b87de7e6-2e98-48fa-9876-76bd832c547c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 abc34bbf-07f6-4369-964a-3b3835a58fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 ee27bdbe-e9ab-45fe-b1f6-01c0f1a14f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 0d193003-73a0-4ab4-a0ce-d0b46901d54b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 a7852666-ac9b-41a9-bee7-d5cd3286ee20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 6e257194-76a2-42d8-9ba1-68872ddb2071)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #120 39ed18f4-e2f5-469a-abdd-d417c95056ad)");
unit.assert_eq16(16'h03A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #120 dc0b3f8a-dbf1-49ec-b1bd-08a8538b602e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 3a7f83d4-6f87-4521-8cfb-00042c8244a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 0dd0303c-740c-4d8d-b01d-469ac73eaa59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 ad575595-b53d-4b36-9ac7-ccc06d13b64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 d0158eae-e71a-44f5-94c2-61d2ff40a88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 1152590e-04fe-4d3d-bd88-6105d1a1426d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 b5c12ef8-4f3d-49bc-8b3d-e06363c1b679)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h05C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #121 0f9b77cf-80b4-4cf7-bc47-493aa642791a)");
unit.assert_eq16(16'h0B3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #121 660736b8-3ed3-46cc-ba1b-2d9e4a683c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 9bb5ff6d-7273-448e-aefe-3000ef5be8c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 efebe50a-f2ae-4cc6-aeaa-07d12b8441e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 b8bf9049-6523-49af-a144-39fcee6b85b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 f5d2bbd9-1b9b-425c-abe3-2cd2661753b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 4e3b2c8a-ec5f-4a18-bb60-2fb3ae23f91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 d6735057-ddac-4694-b482-c0ee53b20325)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0342;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h051F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'h0342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #122 281f3bdd-d4f8-4a26-9e93-f9c9cf781253)");
unit.assert_eq16(16'h051F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #122 c8944d66-93b9-475c-bc1e-59f253e970f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 282b769a-cf7f-44e1-9bfd-fc95b8879e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 19f497b1-6a69-499c-87c4-c3372154ce72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 cd1dd4a3-d4c5-4433-b061-93a5b11e32d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 390c0f30-7dbe-4afb-aa3e-564eee180bb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 f136c82f-3c05-46cd-88d8-858084b40ce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 b879c215-5a3b-4f06-9275-af9117487514)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0856;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h0B79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #123 a02137d7-1f30-4b6f-a676-9afd05c75ac2)");
unit.assert_eq16(16'h0856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #123 9c6ce8be-d914-4d41-9afd-852b5d191642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 cc8a3084-c9a3-47a1-a9d0-e0635d505a53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 1c534610-5e86-4b77-9da3-c2c976a3cc89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 20cb3340-e415-46c6-aa67-20468de7525f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 4668e06d-4df6-4b7d-a620-db71e82bb115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 1186f93d-a602-45da-9297-c1d0dc898782)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 5c206134-2edb-43e0-8553-f33119d58718)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h026E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h026E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #124 cc6ba7bb-1b3e-4969-8a69-54e4584b5e53)");
unit.assert_eq16(16'h0B55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #124 280e8067-2248-4a51-ad4c-5d3cadb4043e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 aa405efb-6f1c-4ffb-b5b5-28c8a318273a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 020e02e9-7409-448c-a599-f477581a01aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 cfae294a-01e1-4804-ad2a-8504492f207e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 ec1021f6-597f-4371-9ad1-c7b20dbceee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 9dcc03e5-9e7a-46c1-8715-cd9135c88993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 9543a1ce-3a92-4e29-9e13-e2e943cb82e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0891;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h0C82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #125 e9ac0c03-5859-4bde-bd17-499dd8bea3a7)");
unit.assert_eq16(16'h0891, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #125 cc6c768c-0da4-4d09-943b-473e44c49b5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 3aa0fc2c-70e4-40aa-9258-aa99967dcd97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 6138b66e-34c1-4f89-870d-e23808c8b984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 223c59bb-7d65-4bd9-8fef-e35f0ae42632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 f34ce640-f89b-44c8-820a-48ddfa4e67e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 551d915a-94bf-447a-92b4-2f7ceba2b109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 12f6bf12-8d0d-40e4-8990-56415bc08361)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'h09BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #126 73808cb8-924f-4101-b55f-9b39dc182ad6)");
unit.assert_eq16(16'h0A7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #126 7ef4f2ec-76ac-4e3c-a01e-b23a42f24e94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 48c294de-7fc8-4f91-9a9b-5c426c3277ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 8799de6e-0dae-4d5c-9ec6-b52552c48e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 13c16c5d-74ab-4d5a-b574-6189e9035593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 a8497a41-2d67-4aeb-bb52-ef12b15277ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 73ea171c-d9dd-4d1d-81ad-92d714008ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 1d3f2469-e27f-4cca-80ed-7a2a7b84d0c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0324;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h0C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #127 537abe6e-89ee-448a-8b40-9b9fb64f8e8a)");
unit.assert_eq16(16'h0324, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #127 7f032e44-1ed1-4c3e-b1ab-786428d46db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 ed822399-22c6-4b28-95f2-8ec72bfd398e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 da2699e7-412b-44d1-87cd-252bb88bf3c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 189fe809-997b-4bbd-8ab9-c0fe9eec228d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 225f477e-9193-4e66-8a84-9988a003f7c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 b343a95a-f5cd-4817-ada6-7c3a56e6d30a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 dd3e9c60-08d6-4b04-a7f9-4d102574d45c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h0D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #128 f800d723-11fb-4f1b-bcbc-ef261ec21281)");
unit.assert_eq16(16'h06C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #128 87ca5e9b-a5e5-476c-a34f-a011913d00b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 7bc8e746-c194-482f-8606-2dfb99f3e93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 f478cd54-6f22-4bad-9693-63374a599443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 062447b5-7513-4aca-94b4-de4effd2acfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 e80ced4d-1c4c-4493-8771-bd1e36d7a8c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 1605f5dc-afc5-444e-9207-7c58e94daf51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 ccf1e1f1-7679-484e-a392-926ed9795533)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h069B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h038E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'h069B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #129 fc7b84a4-24c3-4dfb-80d0-2e26b4686ff8)");
unit.assert_eq16(16'h038E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #129 436a3704-96d8-4b77-a7c8-20d00e311137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 bf814dc3-0f3a-49ea-982d-7272d9eb27fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 2b55cd62-8e1e-4de0-9621-ad7006db9e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 045ed9ea-f4c5-45c3-9584-3e56fb6422c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 169790bd-932e-4e39-8d8d-84239e48aaa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 e7ad2181-e0c0-40f9-8f54-dcc6e867a8ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 a12e4e7e-a403-4a58-b49b-cfe510e59aa5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h0E96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #130 a738f41c-8952-4692-adea-4440d23a7ef9)");
unit.assert_eq16(16'h03DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #130 5ad68ca8-ba70-4562-b435-977569c09237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 228ab8e9-552c-4cf3-984d-e8becbb5fdef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 9ae5b5e8-4454-4029-8c4d-a91d445ae2ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 980b87b4-3dd1-4d25-ae10-ef98de01782a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 32bc214b-e4fa-4f1c-b95b-84b06750de90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 77910ee0-04ec-4bd1-afcb-49828ad5e968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 14e68b65-7d9a-4416-9193-ff81c250a340)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h0FB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #131 e792dcbc-c5e8-46ff-ab58-089deb79a69f)");
unit.assert_eq16(16'h0E11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #131 d8824c89-bf87-466c-b3f3-add74644b635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 343c22bc-c27b-4e1d-8f04-2d11d14c916d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 f261c5ae-6493-4fe3-99ba-a75a1aec1c46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 b2dc6dc6-2182-451a-b5ac-dcd66555e97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 8fe319e1-45cd-4dc4-b8b4-fbd1191b3667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 89528909-5863-4992-be3d-18e5b9e4d675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 97e0df61-4f92-4fb0-bfc2-39f6df42f0c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0552;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h0552, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #132 849fd2bb-814c-4c3c-8859-381168a8a385)");
unit.assert_eq16(16'h0D69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #132 236773a7-e9a0-452b-a51e-d44665b74139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 e2fcad1b-2beb-47df-aa96-90f53247d886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 c867c927-59c6-4da5-b0a1-35bdffc4f4e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 ee10f959-37c6-4059-bf2a-a83f92bb6bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 4b613b12-80ac-479f-9884-761379a106f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 d6a6a794-0ea3-4f85-b888-50f9d0b765ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 0ec3ebcc-13fc-43b6-839e-7e4fc590602f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h0E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #133 32720e11-d72a-4720-9fd3-1a76ea8fab0e)");
unit.assert_eq16(16'h00AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #133 dcc5008e-e829-435c-8f07-d0a9089593aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 aab90718-37e4-4399-a96e-003bae49a827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 3be59a93-6906-4bca-b643-a62656824e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 0c15d0d0-5c4b-41a9-b354-9207aa8252ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 96e81757-1d40-4091-a831-aa67e06db588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 7816b131-4a25-432b-9ee7-517afb9e142d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 1c9098c8-d741-471a-86a8-29093a075376)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0549;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h0F00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #134 85bf3f03-67db-4c4d-98b4-65fd6857fed6)");
unit.assert_eq16(16'h0549, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #134 2872e3da-70bb-4066-9524-eb7d2a1c2886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 5536f3fa-2904-46bf-91e6-eff06e23fe56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 6f9f3fdd-197a-4322-80d9-4055bccb3cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 cc23702e-1314-48c1-882b-71c16aa3f4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 90ee131a-1aa6-4c9b-be56-e914c3f22243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 64475108-4424-4e8f-909e-3cfa187c9e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 ebb76588-839d-46c0-a3ce-0584f6d73dfb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0272;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h051B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #135 688a798e-21fc-49e5-8503-cd094adf8653)");
unit.assert_eq16(16'h051B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #135 2670982c-0824-4691-b0f1-d2514a830f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 c2cd90e4-bbf3-4eef-8c14-a7daa58154a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 76a903a5-446d-49f8-ab2d-1033621c230e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 442a6c86-328e-45fd-b077-e3b1282fa137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 4fe392ef-9146-414c-91ff-d0504c311dd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 6c39ccd1-95d4-4305-a24a-9f48005eed6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 e7feb678-cf52-43bd-9b30-df2c8a71ee1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0765;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h0F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #136 a499dc3c-a3cf-42a6-9848-5812fdfabc15)");
unit.assert_eq16(16'h0765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #136 0b52ce7d-26cd-4940-bda4-4281fc92fbed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 bf9b9068-ad00-45cb-ab7d-6ef94efd76d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 a826d065-4d58-41fc-9f4a-47ef440a6f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 5ad54231-e321-418a-b5ae-d943d6ba59f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 1a20f32f-a142-470e-a3b2-8a04e5e9f742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 414498df-5c11-44ae-93c1-61aba17c9369)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 ae375857-f4a8-4d70-9b3e-e622644138e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h042C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h042C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #137 0762dcdd-f3e1-41e1-b712-25bdfad01b8b)");
unit.assert_eq16(16'h0AB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #137 42cc6b04-1714-40a4-9b10-b4420bb35490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 152973ef-c497-4789-9925-30a6c850cf34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 ebdff7a9-0315-4bec-9634-1edea4bea0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 6311c221-81e1-4f1d-84c7-6f1f0cb5047a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 dec67ef6-dc4b-42de-a46d-ae5c258af429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 80b93bd8-1d5a-4e53-bd80-f7d322d8992d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 df48c5f2-71a0-40e5-8e0e-83b745d62b19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h004B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #138 dfdbadb7-de00-429a-816c-d203ff38b766)");
unit.assert_eq16(16'h01D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #138 0365eb99-ebb5-4901-819c-77da66d9458b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 7f4853c4-2724-40be-aa3d-1b4417fbb9a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 132d995d-d6b1-4e3b-b7ff-765e45d35b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 67a46a4c-4fd3-444d-8281-199624e21f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 d4617735-25c4-4b22-a204-1fcc03a41e27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 14e2793d-cc1a-46cb-b140-b652ff074f61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 bfeeeca7-af9f-4e84-9d39-12c4475a6ef0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0050;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #139 46a544bf-46a6-4700-85e4-d062b08966ab)");
unit.assert_eq16(16'h0050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #139 0809c13d-b8a5-4a57-b536-cf4371eed54c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 21e5ffc9-c256-4160-a9a3-3147f3276b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 7dbefe28-7c71-4d27-908f-09048401fa81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 966082a8-2f09-4875-8e27-5eb7ea50df15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 6f868258-c235-4814-a80d-74d381f0057b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 5748d78d-6764-439c-ba4e-3ca7ba41d505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 2a6396d8-860e-47ee-8fdf-7c019af2e05b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #140 f1468346-dfaa-4a09-9fbc-a21cbdf8f7d1)");
unit.assert_eq16(16'h04D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #140 f89bbf48-45ef-4715-a907-4495bfa3bad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 fa6ad3dc-ebce-4bd6-8156-a988a32bf2f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 7706f0f7-89dd-45fa-bb5f-483cc3955771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 806ec510-572d-44dd-8368-ca992562fa1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 006a1f51-b413-42e9-81f0-9dd7fdcae1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 ad74dd2d-7eac-42ac-8920-15bd3194f84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 6cbda432-f169-4c0e-8172-6a21baacd5a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0853;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h0D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #141 39be74dd-41ed-40cf-bd3f-f42fe6b2924e)");
unit.assert_eq16(16'h0853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #141 6b436656-1e3e-4658-ac3f-1fa7e619a6ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 b317097b-2d70-4402-9171-432847f75283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 ee5f164d-9d3e-41c0-8a1f-fb17d59f0a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 45a3b76b-6cbc-4db4-b16e-7fecc6eaabea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 84762038-a353-497a-9874-c314b3e18990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 a7a70770-b579-44e6-bc7e-47f29e23de81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 6103fa51-6c72-4a7c-a436-a5c6063e55b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0602;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h0602, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #142 d9f2c1d3-85ab-4779-9bd9-eedcb75bc187)");
unit.assert_eq16(16'h01EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #142 a16bf984-b792-4961-80d3-bd916968b4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 206933ab-da73-418a-8216-90b34556cd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 fe714b2f-5ee1-4127-899b-241cff6d02de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 614bc5d6-8fd9-4b22-b077-bd62ebb306c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 499e2636-a7b9-4962-82d6-405191dfe8a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 8858d799-c826-4baa-9f63-662aaed5a95d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 52f2ac32-05eb-492b-b483-b301355b6234)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h08F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #143 2cb133c1-d823-4395-9c55-9cf8286841a6)");
unit.assert_eq16(16'h00A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #143 9adb35b9-01f4-49a1-9db6-dce7ae5a058d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 5a76124d-8fad-4964-846e-a4fc75678259)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 3d4c7019-f7ba-4e5a-b0b3-ac735b3786bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 4b28e711-cbfb-4189-a039-7e91688c2f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 7802ff22-338a-485d-8e5c-cca7da7dced9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 3be73ff5-3653-437e-a879-aaf771c32e13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 8f34a2b9-2b93-4bac-94ae-1b47deb95907)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h071A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #144 c6712b69-4be9-4322-9955-c2e4d7e8634c)");
unit.assert_eq16(16'h04D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #144 b7bc1f9f-d40b-4fd0-976c-e6c29e8a8b76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 9cc34e07-9841-4865-8833-54dda8b7d483)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 c1ef0ff8-926b-412e-900a-b5851960bf02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 dcfd442e-7b72-4a0a-9543-fea080c39864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 22edc40e-b69d-409e-ba85-ad0fb443142c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 80731b39-ebe9-4da2-9fd9-0058f0d0edaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 73ae2635-67a8-4bf8-b597-7eb37fa7db11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h01D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #145 cbd64377-2c42-4bd5-8bed-6284a4710a57)");
unit.assert_eq16(16'h01E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #145 30483f29-5bba-4924-a983-b0ca018e8b2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 c3988d9f-11aa-4856-b5ab-320dccd3a44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 b87ea005-8653-44ea-808e-d036abb5d987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 11fa576d-cf92-45f3-a32f-f845f480cfd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 a454dfe7-b8d4-4cf6-bb3a-51cf372c3396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 8cc49f0a-8322-4a2e-9344-c65bae580433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 436a2236-1a13-44c4-9ba0-03d09cc89a98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h0DDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #146 7a3f7e5a-4d40-4483-a45f-bbbb7527380d)");
unit.assert_eq16(16'h03DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #146 784bd6d8-1de1-4708-bddf-2bef7545734d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 f65bee41-6672-4910-a41a-33a40a553670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 339029a5-44a5-4c15-9a4a-ae53c89eb91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 0a43314e-9030-4c3f-9790-88c0e6f6d3e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 eb0e546a-b6e7-4c4c-978e-e20e7130f9ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 fb0c5408-1977-45ac-8446-e41a7401cd4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 458408ac-0a3a-4c7e-96f1-4bf11402cec3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h0C03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #147 507a299d-fe21-4c91-b430-7b14d1b3bddc)");
unit.assert_eq16(16'h07D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #147 21eb94f9-a90e-43c9-88a6-711d4fa6a46d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 f635a381-eb8d-4216-979f-ead0c1b8e050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 54409c3f-9269-48a7-8f84-08b9a7ac20f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 9df0c437-0077-411f-99a4-1b6816f8ef10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 56841fd4-e1e3-4c63-96f4-1edd87486d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 2ad69bf5-2cd5-4932-bdf1-eedca7bcb4ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 5d73c9a8-0263-40e9-babd-6d6391ce7488)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0178;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'h0178, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #148 5cd48418-ba4c-4828-9de5-0c8e44d86f51)");
unit.assert_eq16(16'h0A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #148 22902bac-4609-44c0-bcf5-e20eeb114835)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 e6e92d61-38dd-4d1f-8756-12d83830d35a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 453b1318-563d-4b01-b27a-4543fba757cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 1d32c399-abd7-4747-9685-94d6318111cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 896a60c4-761c-4149-abe7-f5a6c5b1fb72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 e4b63887-7e98-4253-be1f-51685cd92b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 89888575-1863-4a23-912e-196f58b2b25a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h01DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #149 9cc42422-6c09-4bf7-8aa8-405a14a144c2)");
unit.assert_eq16(16'h07E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #149 206d8ffc-727b-4898-9ce1-928c86d1a0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 b8754ba1-fe19-41de-b0e2-422c776ee9a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 64a31d22-b5fd-4bb3-acfb-2d20b8147448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 170a719a-5e6f-4473-b2b8-91d4288d7a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 1d929d32-5db4-4ffd-870a-0e14567c37fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 d2f2b430-eaa7-4de9-88ed-6204f1a8604e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 2dbd6a69-3396-449b-83c1-0f4bcbc805e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h001E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h08C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #150 c503e31e-9a79-457f-b43d-ec1e9d4d211d)");
unit.assert_eq16(16'h001E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #150 1fb7dda3-e95b-4889-9c3b-23316e8927d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 cee6876b-e1ab-4b6e-8657-f3045159f85e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 c3dfbc87-eee3-4a9a-8608-a36b6dfa8102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 135ac4b5-a73b-4662-a251-6cbfd27cbf5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 634d5b9c-d368-4567-a5be-42ffc0396641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 1943eb34-5da4-41e4-9d01-2688430c1009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 006a0d47-7852-464f-9790-a24536d17364)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'h0CCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #151 a8d380af-34c8-4247-87bd-7022507c5e1d)");
unit.assert_eq16(16'h02C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #151 b47b9ec8-2beb-48d5-aba9-bc37b13cfa09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 26f015d0-9f5b-4b31-ad78-d4cd3221a609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 1d15ebdf-15de-4934-b0a2-82603c5f305d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 dc07f74e-de7f-4dd9-9245-e60f0f38ce2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 f8267a4d-4294-43ec-8d78-92936c1c1286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 c003f0fd-3df6-4855-a310-29c3f24ea9fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 75b4d0f6-d19b-4522-9a70-11ccaa3667eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h09E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #152 b3ba4929-81e2-4da3-bd88-eaf002c2ce5d)");
unit.assert_eq16(16'h0F7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #152 654e7f25-a9f8-43fe-b971-0565bee4da73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 784958d2-5f57-4648-90df-746f9d52e6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 4039d314-5cbf-4da9-924d-6f887008c4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 a185f3c9-6954-4c8d-ac7e-ce91f775f947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 c6ef5d30-33d4-4734-b1ef-3c05f68fa935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 bc6c2f8a-8ab7-4474-a6f6-429cb1acecc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 a1f08b0d-db5d-4d5e-95d3-82693d8b564b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h080D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'h01CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #153 137c6a25-d931-425c-b42a-58e68d6407cd)");
unit.assert_eq16(16'h080D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #153 d6aeb9a7-f54c-41f0-9ddd-1fb00804d7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 91748faa-dc41-4274-b170-4a4098f06d4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 748c0289-c4e5-45e5-bddf-abca8ba2ccde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 e3b7a5a3-eda1-4c3f-a15b-9ff3b4b7085b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 f9e2b60d-4bce-427d-8242-68d2c15345a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 11719004-e87f-48fa-b544-f8caf09a8b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 8153a702-7fc6-46be-9d4b-bcc998078491)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h005C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0063;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'h005C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #154 9efc271d-035d-4d6d-b512-786880cfd259)");
unit.assert_eq16(16'h0063, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #154 60232715-ceb3-41f9-8b54-0359de2c82d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 c7d2b299-3ab0-4dfa-b273-0df89ff1754f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 7e22368d-a683-4f83-97d8-c2bcb7a36a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 1f7325f9-c535-4606-a7ee-89af76732cda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 3b9ebe19-1a56-4c35-b637-67b710602b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 c4d22d0c-469e-4b9e-8594-6c09ab5c2d8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 a353a34f-dadd-4492-aae7-db0f2f893350)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h0E05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #155 7db82e37-9687-409d-982e-a034c76f05c4)");
unit.assert_eq16(16'h0F12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #155 76eaa4f5-814b-40a8-ba68-bd170dc6cf95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 4859eced-c79b-4609-b890-c3705d31a837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 3c5df839-8dd0-4d59-ad5d-0f7e971ea1b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 4d3f65a2-654b-4304-9f94-cf30e7eb5123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 020a3fad-082a-4a71-a50d-4aaa12284032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 42b9070b-b3f9-4a1c-ae12-b9d999bfc8b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 9e97eb7a-8f15-4f40-8a4b-f0338fb7f6c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h0CA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #156 53360199-228d-459a-b050-18ec9adebf8f)");
unit.assert_eq16(16'h042C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #156 a90bbe78-fcba-47ca-89db-6b1f441914eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 1984b225-78bb-47ae-bbe8-1d75972c9a08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 5a834f44-84c6-49bc-9c24-58ed296828be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 1ead93ea-57dd-4051-8104-ebe49f193511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 b1833b01-e8ec-4a85-b320-31221b63fa2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 5518e743-85d2-4dcf-8ddf-362d74a76716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 10231749-537c-4acb-bb32-af5053876802)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h0B8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #157 733fd0b5-22b9-434a-a0b7-4e0f95e4f42e)");
unit.assert_eq16(16'h0DE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #157 6e7602bd-4de1-46d0-b179-09b636aa477d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 b352216b-6f23-4d24-bfb5-a44a6dcc0f76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 09409d2d-164d-46e5-b8fc-bf111941b2d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 f138d170-3e1b-46fa-be7d-bf9330a4a0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 9cd65f42-b50b-47c4-81e2-6f9ed60f90bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 8e2dea78-c6bb-4557-9c99-9c31da683c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 d8785113-ff12-40df-97e5-b2967ec8b6af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0766;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'h0766, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #158 484bf072-0d4a-4e43-83b3-0c69f31f3569)");
unit.assert_eq16(16'h0143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #158 24251c7e-6710-410b-9406-361506e68527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 af43a25b-05a8-44a7-8140-e54613db284a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 a6e8aec8-2e35-446b-bf84-009ea307e8b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 0d4bd671-1396-4f46-8523-2e9bc125890d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 8615ef8c-47c5-4eee-ab91-7997c4197fae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 6659f2f2-109e-4820-99c2-ecab944ec283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 e29686fd-4572-4ffe-a088-df5ecb185764)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0387;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0641;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h0387, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #159 93024b33-e17a-4816-824e-8f19a34013ca)");
unit.assert_eq16(16'h0641, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #159 10a87ad3-5ebf-4514-a0e2-ab7f97254ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 49691c4e-e860-4a6f-842e-cf1d74d6bfc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 19878a77-f4bc-4314-b781-70e940fa9533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 2c47aea6-f3fe-4f0b-a428-f6079d11f2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 cbbae0ad-baa0-4d02-bc53-e8162ccef65c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 26db66ba-dea5-4a2b-9387-eaddf840985e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 a59130ff-0afa-48a8-9e5d-50106e320480)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0299;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0373;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h0299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #160 f4394988-301a-4775-b666-7329b3806ad9)");
unit.assert_eq16(16'h0373, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #160 730e9b9f-37f6-4a2c-8846-01752adcea0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 3ecc13be-c388-4793-85fe-a2554ac56dd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 04868cca-fe21-4dcd-9d69-c8857e8b6559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 f17778b1-baf7-4e70-99fe-7e3dcccac27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 fc9bbfc6-e128-40fc-b2cf-c69883e79b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 0838da96-0098-4c4c-b033-5c1c2f30e407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 ba442def-cd7b-4a4a-b098-253e5df065f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h044C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h0E0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #161 b1878571-d9c9-49b8-9d50-71b2edc5ac3f)");
unit.assert_eq16(16'h044C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #161 f55bb721-5f4f-4627-bdd3-46e551d3af58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 561e355c-a15d-4fb1-aa12-9ad71fb9c51f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 476293d0-45fa-4778-b5e2-8672b8eb38f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 0246b914-a0d7-43c8-972f-ff56082e7324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 8d36623e-1a1e-4324-8856-a3c73dd108de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 45a682e6-5856-4612-a7f2-bae1d9a2fe82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 f12dc336-5299-429c-a003-6b67a13b17be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0029;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'h0090, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #162 9f803c62-4361-4045-b5ba-e7571328b09a)");
unit.assert_eq16(16'h0029, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #162 b7fd0d3a-7453-4ede-9a9b-8fe6b016d17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 fd7fedc0-cfb9-47fb-a54b-316a543058aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 8c20c2cf-158b-4e90-b1ee-eea7291597b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 cd245c3c-9716-49ac-bfb4-8d22f9841a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 06538459-36ed-4dc9-abb7-39123b4d3924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 957555dd-170d-4482-b157-bbe4f389dfd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 1a2b45c5-07a6-4a00-88c6-1649fe377f31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h030E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0101;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #163 a8e6ace0-91db-4b21-9c56-179649b44080)");
unit.assert_eq16(16'h0101, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #163 2248f744-52e6-4b8a-94b5-9b829d06329c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 31550861-3f19-49c8-8e71-f3206e78a6e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 93ca72ca-6358-4adc-b8f7-33607c9f346d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 644a17fc-74bd-463a-833c-4984a7282cc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 fed22c32-6cf3-412c-835e-cc9d287c91fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 e35d9a7d-a841-4ad3-8364-52282f582bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 766ef608-53b5-4c76-8373-a4ac7c03ba0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0299;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h0EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #164 ae0a5aa6-c439-4317-9755-3761864f2607)");
unit.assert_eq16(16'h0299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #164 3d1e5114-3104-4c69-8498-89136a924c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 8e628b31-6d63-41ee-933c-cd21e5876f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 0e8f468f-26ac-471c-819c-94fee3ec8754)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 865a6aaf-a9b0-4fcc-b59f-f47960cd4b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 15a4e129-6736-4c17-9a20-50273124791c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 73258ca4-6412-4d1f-9193-ce7e33006140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 a6d3bbc9-46ed-44bf-b583-efab53791b40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0463;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h0463, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #165 972c7802-9f95-404d-941e-dcb19bfbcd3a)");
unit.assert_eq16(16'h08D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #165 f28e81ae-ce04-497e-b69a-dbf85e9c017d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 094bd3e5-55cd-415b-a931-f68050004d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 f53920ec-b05a-4bfe-a67e-b6009fe1b6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 63ce5561-a072-45bf-be4d-9c393440e9d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 323ba444-dfd4-45fb-bfcf-0e8b9c2c305c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 aa97678a-f38a-4eba-8827-6d94bab15252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 43378322-2d3a-4671-9827-4cbd212b3ba1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h08C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #166 41f9f4d8-cfba-43fe-93a1-73d2aa36e148)");
unit.assert_eq16(16'h0BDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #166 556a88ba-6d0b-4f4d-b32f-80f94e2204ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 4d2f8d0b-346f-4bb4-890f-656ebea8cda0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 5976d6cc-a50d-438e-8924-c40933464e44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 8b313c88-7db5-46e9-898b-102fedc71c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 27682084-106e-4c41-8ba0-cc7240209fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 39b3055a-562b-4ff9-be2f-d56a156279c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 bbe1e99e-9841-43f4-813f-8854e9ce05f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h039F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h039F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #167 3853298a-19fd-4c63-91e8-514a25a99b10)");
unit.assert_eq16(16'h0B6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #167 5d0b207f-4f51-495e-8ebe-9fe1c94db57c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 efa5a2ec-ee17-4338-83fe-18137a149a92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 f1b2ccae-9bd1-460b-ab0f-0e180fd2ed28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 36965d00-93d4-4c44-b8b8-b86490e19a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 6ce70dd6-b6ca-4287-ad83-2a05f2923daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 49eeffd2-f920-470f-8a46-f905fc170d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 a4492a5c-f9d9-463d-ae05-bf572201aa53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h033A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h033A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #168 e53bde17-125b-4f38-abb1-ce871380f7ce)");
unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #168 1f42a048-adaa-42ac-9b01-fb60cef41086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 ea1814af-9171-429f-945c-838dc0595244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 e0e8a873-e661-41df-9f64-164c53d60813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 4f19a4d2-3ca0-4e23-a26b-25949249b76d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 f42cbaf2-6a17-40c6-9436-586fead5126a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 5b090fb1-a66c-4439-9aa6-aabb2edc4680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 8d57d210-1174-4e2b-801c-988b0d07a27a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h0B49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #169 c5999426-fa77-49be-b715-3611908bca48)");
unit.assert_eq16(16'h03B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #169 d4d5008f-5051-4f10-8d72-06bf0bb9ec02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 0f62599a-7823-4aa6-a26e-8bb67ef1356c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 c0b09946-dfe3-40cf-93ef-db7dc4ece51f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 cc4e1e87-b325-4108-abf0-a7439abfe3f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 5f17192f-bbba-4ec0-80f4-78e860e003b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 f1211710-0f05-4e63-a059-8989a2da62a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 e0fe9d5e-d3ac-446d-b899-0b48f05176b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h092F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0958;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h092F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #170 49f7516f-365f-46f0-9ecd-cffed8cfe232)");
unit.assert_eq16(16'h0958, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #170 7a5f02a6-c966-4ac2-8276-c12213a9fdea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 ebbbdd9d-b3c8-4c93-b9b6-996945bfb8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 a23008de-e06a-47f0-a44a-ad2fa38d357c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 2d18b410-5355-4550-91b1-75b929d2c7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 ff4cfc2a-75f2-4706-a54e-aae3282d9cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 477dc7a1-5c61-48fb-906f-d28a6de209e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 a850762b-3ae6-4184-b119-51e5ec2c277c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0281;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ABE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h0281, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #171 2330ef50-943c-4f53-93a2-5fc2e4d6147b)");
unit.assert_eq16(16'h0ABE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #171 b2461ef7-af8a-42a2-b4a0-acf886f4e883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 3b2ec8cb-8da0-4bf5-94d3-bbd1d2274bfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 0d621ca9-be80-4618-acc6-bbae9e40ac5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 5dcddb05-cd4c-4409-a150-136fd8be46c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 03085796-8ea0-4b06-bfce-e0a5aead8c9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 a6256256-56ec-40df-90a1-6bf714412181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 ed4f1ff6-32b2-4d41-b764-59e1b308b17b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0187;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'h0D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #172 96ee7be2-f34a-4783-8bb1-563045aa65d3)");
unit.assert_eq16(16'h0187, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #172 3ac25430-093d-450b-8962-9cdffa3724b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 7f68e1b8-c9c3-4ae5-898a-49e201226c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 4be14e7a-b666-44a7-b2cd-5a4b4eb2727f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 2ad509e2-d90c-4fab-969a-9eedbfbf8f27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 07ec8fb0-2d58-45d9-bafa-3f8d398ec507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 c76aca38-732b-4ae7-b2c5-e73b8fae899d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 21a367ee-31d8-4eac-98c2-ee90e9652cbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0238;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h07F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #173 77aa26fb-607b-4204-a1a1-2d755dfc07b6)");
unit.assert_eq16(16'h0238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #173 e30f88ea-7613-468e-9fcf-96109880e138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 f8eccb83-c31c-44a5-be36-fac7360c217b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 b662e314-d334-4939-a90d-e86692069206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 ee2fe495-2e2b-4f46-92d3-9aa544af2b94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 7370e0b1-736a-416e-864a-8ce71a6ee96f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 fa39205d-3a24-4d4a-b786-eb98eea5f0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 9ff4d4aa-f631-4710-b8e3-5bc61d4d5c25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0901;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h0B34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #174 3f2927b6-6894-4032-8122-c15020760d59)");
unit.assert_eq16(16'h0901, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #174 a754e234-ced0-4f85-98b0-ecf8aaae3ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 26b9f4bf-512e-4f6b-8696-a2f5b0749562)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 58c2a4b2-6cd6-44d0-9c10-54f9ec063cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 641f64fe-3339-4b95-8f74-13464532cbfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 463f4603-4264-4a08-bcc7-3c2dcca9fa77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 e01afe01-64dc-481b-82f3-d5fc3106fdbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 aab59f12-0e15-4cb1-ae72-23771899d867)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h013D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h0B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #175 6c981bbb-988b-40b5-bb1a-d24285c399bc)");
unit.assert_eq16(16'h013D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #175 4d6bc3fa-2bd5-468b-9be1-517d461c21b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 75a2bb59-1be8-4acf-9647-5b266f160e82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 f41793b0-4953-40e9-abba-3a2b27175847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 7e31ab97-dbb3-4722-b801-cc50245bc2fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 9f33602a-c1a8-4221-aedc-09cf2de6b530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 0c6b34c1-0ae0-4c14-a9d6-1c651b3316e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 913ca519-5a00-492e-8599-277bba09e19a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0889;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0973;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h0889, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #176 eee384b5-7c6a-4633-9cb8-7ca12e1bb492)");
unit.assert_eq16(16'h0973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #176 b750f65b-903a-4e5c-b56d-c032c2dd7d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 6392343b-7b07-4e16-8d8f-3d2ce8dd50a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 318a255c-71f9-4c8b-acce-d77a1e8a5ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 302e16ab-ab84-483a-8987-45a2fafc2171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 f5388f68-62cf-4efb-ad03-5fa80adc2da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 55643815-a9c3-4163-91f8-c6561b36d036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 a4e21c2f-de7a-4cd2-8bfb-ebfb733023f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0384;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'h0D03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #177 9fc38243-1ca4-448a-9f2c-2d5a7e8cb1b5)");
unit.assert_eq16(16'h0384, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #177 e5bad3b7-6c50-4f07-b388-c511caa3978e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 3d58cb3b-0dfd-4214-bcd9-b3a908f15067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 e9c151f9-9956-47f2-a29a-777d5abe89ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 37dbbbef-c9a8-4911-bb00-56b3d81617aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 e62511b1-e9ec-4501-9b1e-5f51e9612fdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 bd322252-9cdf-432d-81eb-f5d718275041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 107fa7be-c1c7-46f6-b49f-660b065dc8d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'h05BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #178 55f56259-7767-4589-8d44-327f9eefabfa)");
unit.assert_eq16(16'h0AA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #178 a79288b6-e42c-4608-a658-a014b31ff0f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 17d8059f-7225-4f89-8553-5bd873058b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 0402efed-f6c0-46a9-8e98-f4a8f1cf1ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 ddf4f4dd-28e0-4df1-a573-47c62fc0b8cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 02dbde9b-31b4-45e3-af35-e99b3d2f0210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 50edec05-479e-464c-9f84-d3bb6444b528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 4024e266-ce4b-4ec0-bc81-b32cbc621e4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h061E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #179 840bf688-e1b4-406b-bd8a-2c6b852d80b0)");
unit.assert_eq16(16'h0E23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #179 f7750db5-504d-4689-94be-cf336a439d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 4a0ec373-22d9-44ed-a9ae-bf1af95e4340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 ba85ccdd-dcc8-461f-a45e-afa5d1ad5d38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 84929153-f165-4eee-84c2-f63e841da262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 19f65eb4-020e-4761-9fd3-5cc1d63afa2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 fc666c2b-677f-4911-9489-ff109b6cc066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 f411b611-f98c-4c06-96f4-bf3febf7c3bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h080E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h080E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #180 c7db564b-fc67-4ab3-95cc-ecd51c4026d1)");
unit.assert_eq16(16'h04A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #180 a3360dbf-6394-484c-bed4-c591ec99fcb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 d497119b-6167-49f2-8489-d35482723203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 ef1209aa-c422-4a83-900b-a5c4b88b73df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 fcedd9e6-5946-4e21-99ad-7eecb6c18fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 5b76ac45-8afa-44e5-93d5-408c6406308d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 4c5fd04d-7af8-4941-b98e-799f4020b079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 56c8bb32-e253-4bde-a53a-6b755c80d07a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h035F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h035F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #181 96456207-129d-4c8e-ba38-be5e1866d72c)");
unit.assert_eq16(16'h0CA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #181 2c3f66df-3791-4ba4-b85e-c76d6c624d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 0a1e578c-085a-425c-b515-09ce16072f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 3142a19c-63eb-45d6-a41b-adf28a855313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 bc440076-ab23-4f88-8acf-644fe18bfe9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 aa170c95-5272-4cff-9436-0f1fdaf97a8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 ca913c3b-f14b-48e9-860c-85dc78de5dae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 fb27dd62-926c-4aa8-b24b-fa26e262ac25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h05F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #182 fc74d04e-fbc4-426c-84f4-2c79405a054a)");
unit.assert_eq16(16'h0AD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #182 c2de5fee-e7cb-4a3d-87f5-221e913b13c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 9ab4478a-2e2d-46cb-aac1-c8237ac1cab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 5c60c617-f5c7-4a1f-bc2d-df730241be52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 c913b4ab-e9eb-410f-a937-85ad5bca1bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 df32e7a1-ff13-4938-a96d-801dc4d89b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 76f6c600-cae2-4ec5-ae26-48d55c2bf85e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 f0f5e8b2-bf3f-4917-8e8b-4b4d59db7b1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h034E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'h02C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #183 cdcb06d5-ef3d-46a0-a288-c955cae7e111)");
unit.assert_eq16(16'h034E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #183 da1dd6a6-8768-4b3a-be8c-d1b6f6c70db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 96113846-f9db-4805-906d-c9b68023acec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 b72e25b2-2765-423f-84a6-11969cb3863e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 0a116d16-e1a2-4ce0-bf22-f796669c8f14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 a590a963-bde3-4e89-815a-8079499940bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 8cc8b95c-6dc7-41ea-806c-dfc3d895b473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 96c0051a-0e6f-4cb5-9a6f-82d6243e6c47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #184 006c2625-282c-4651-b504-29dca669dd23)");
unit.assert_eq16(16'h0B11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #184 a9841af5-5c9a-4917-99c8-9649336d0005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 f9db4624-04df-4af3-9bc7-6015be686db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 ce8e81bd-4f66-4336-a024-e3a8d1efdadd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 28a74270-1ee0-4894-8e0b-1680fe3bf303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 4104136e-6ef9-4d2e-b7a1-9d008e11ef12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 b407b3ac-d286-4241-a684-f050aded3c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 f3c35221-3346-4291-91e8-69998e56d5b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h00AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #185 331e13aa-3106-4c29-80d2-2a8d10d55e1c)");
unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #185 483cfbde-dfca-48a9-a2df-5cb952104b98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 b34f7b40-b78b-4bcf-8237-9fe3d335dd1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 809998c4-6a4f-47a7-a37d-a5b3b0ec755d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 9aa5ce00-09a3-4b86-ad62-541e474db511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 14f75b55-3b16-4c1d-9a35-2b24a4e7b7e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 6b967d71-2ebd-4b00-b2ba-555679a960fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 6e217b5a-2cbf-4e96-98b5-1c76b077c30f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h086B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'h086B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #186 f11c5474-4241-4e09-ac54-6b0eab196b74)");
unit.assert_eq16(16'h08BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #186 cafb9e31-d072-457d-bab7-50c29cf7aa5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 83cc1cb6-b9a2-4d97-b678-c90214dae5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 9389b115-7f8e-4f79-8693-e68974878aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 c4593446-a037-4bff-8ba4-d26e5fbea426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 0f4e2b2f-5f11-4606-84d6-2f50026298c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 25294899-c9f0-4650-ace0-5a3b6caf882b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 a413d0cd-6974-48b5-8d6b-31f8e9c7ac8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'h06AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #187 bbda49b4-0c34-4f5d-8f4b-8240c0ff1e29)");
unit.assert_eq16(16'h0F73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #187 58321a55-2d57-4d37-94c7-9ecf7fbb57ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 b88fb11f-44ab-4b84-8407-c6bfffcbe87c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 78400c68-54f2-4046-99a7-361128f087b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 67a5ed9c-5824-4083-8b87-e9b765b374a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 55630f54-c9bf-4809-a2e3-63ef647acd82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 4cab0b85-57e5-45fd-a1c6-49dc55237349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 936bd17d-f7d5-4d09-9090-3018f7f9e01b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h07D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #188 32916f56-ba3f-478e-b7c0-10ce48b253a4)");
unit.assert_eq16(16'h0CE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #188 c6f040c9-6d60-4335-ab19-8ec04264f454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 c2733d28-1367-43ee-b91b-398f25cf8a72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 f44764d9-ba81-4e1b-b2fc-9d8002a4a77e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 854beb7b-c4e5-4bda-af77-b0ea594d167f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 50fab524-ee59-4c41-81ea-00622cb7ba2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 88162532-d848-409a-a649-c5d37b72548f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 199d3372-bfb1-4fd7-aeb3-d6254d2db890)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h0EC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #189 2abacb46-67d4-46fd-a734-53b7dc48895e)");
unit.assert_eq16(16'h05BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #189 9734e781-9aef-4d9a-96fc-84d2654fbbaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 a7a024d4-a426-4c6b-b60d-76735e3ef919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 5dc6b9ec-2385-4281-88d5-ad3a250c0d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 76c07fd7-6ec9-4292-b6e0-a111acc80e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 19a5f366-f0b7-419a-900a-846cd8191b97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 41649f5e-f0b0-49a7-91d5-6d7da32ab995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 945bb7ed-0da4-40fd-9fd6-5e5c72d88872)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h022C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h022C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #190 61cdd37d-7f00-41f3-9ac7-572a3cc08441)");
unit.assert_eq16(16'h00F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #190 c599de9c-2a42-45b9-8ef1-8f64a6bebc7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 961f011d-8022-4751-b584-6b75d5c38967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 f840c0af-2d63-4261-a462-421cd0899d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 56f20f28-c438-400f-8a7b-da69e03f2085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 6d29d4a9-ea94-4ee4-a48c-addba77bf0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 237c0dc6-14c8-47ba-8495-2dc2fd7c4c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 17f057f0-3a12-4487-af23-ccaabbc0b97a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h04D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #191 730a5f70-2194-4b58-9437-3148e275e455)");
unit.assert_eq16(16'h05DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #191 28bfd535-56e5-4476-b6d9-556ea9d662d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 fc9d5a8d-e4bc-439f-b2a0-b7e30fc57044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 1f2260c9-5f18-432c-8d2c-a39b68c1b101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 9b291910-b2e9-4d9d-8f0a-51683cc49f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 cb7506e7-a34c-47b3-acc1-28a678210f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 2d2f9686-c1ce-4227-b21a-246acf6b7bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 7073e32c-9480-45ee-a9e8-831ad590ff86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h084F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h084F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #192 e494a446-3203-4229-a562-123448d5591d)");
unit.assert_eq16(16'h04D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #192 11d071ef-b338-4d54-9042-e854ffcaf436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 5925891b-3c5f-4dbd-95e8-414e3fd2e64c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 cae01f99-2862-44f2-8cc8-ac86816a75df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 890ad1be-a1e9-4ea2-b82d-2abc7cabbec2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 d198691b-fc63-4b71-a1a2-c65770cf9447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 15d06159-40d6-46c2-b225-a2f73b249e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 138908b1-6562-44de-affc-848097ac71b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0166;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0220;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h0166, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #193 3cb0971f-1ef8-4607-a428-6a7fa1e0e51a)");
unit.assert_eq16(16'h0220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #193 622f48a7-85e7-45d8-b036-3a3efd32f83c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 ead7c711-7a5f-4e6b-a524-c35cffcaab28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 9d0859c8-77f1-4929-80c0-759185dcd682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 efbcfe54-848f-4fa0-8b9b-8fc425a0d804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 b56fcdad-a530-49e5-a587-b8bbef725f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 4068659f-b77f-4212-bbc7-0649591dff1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 1613e462-a2a1-4f47-b1bc-080b5b654f15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0853;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h0EF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #194 27dfba93-8e2d-4ae8-aa6d-17028e09899c)");
unit.assert_eq16(16'h0853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #194 d2587cc3-df13-4748-9aad-4cf654c34958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 a8dd852e-73b2-4e05-a7bc-1c82c5023a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 823f1c2d-5214-42af-ad74-78c688d98680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 9a351aea-dd30-4a9e-8909-a6c6e0a3795c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 0398cfe1-5083-4ba4-a509-75f294636e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 6850d37a-1ec5-4c9d-8260-fc98a73e5c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 cef05c40-eedb-451d-a8f4-5b170f88b010)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'h06C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #195 a60d3c8e-66dd-490f-9838-6b1b3feda214)");
unit.assert_eq16(16'h0F8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #195 1290010c-f8b8-475f-a537-b099f191f4c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 b6777cc3-a254-4d12-9e77-7ff4e5714d81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 3097ec4e-f53a-4492-abf1-a30b884ec307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 ad6f4ef1-d012-4ae3-81a2-b2828600d895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 f9408e8b-e146-4a5f-a090-e270e4c23264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 e29ee1a9-a775-4383-bd99-16936596d94d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 af2087a2-252e-42f7-9697-a7c07bf75bde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h025A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h01E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #196 2ea43d38-d5c7-4120-8509-5231996a09df)");
unit.assert_eq16(16'h025A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #196 61d57e8d-dcde-4d91-b3ee-b98f47355a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 e083866e-ab6a-40fc-9fdb-0d73a3c7c2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 9552ff59-ace1-4ba2-83dd-433fdb3d0b4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 5d0ba397-6941-4570-be8b-d6e39f3c049b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 5ea3a0f4-4c6e-4ea3-89ed-c94d8f1f3eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 0dddfa6c-c6c0-41ae-af92-c7c0635bf273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 1fc4c889-80f7-4740-be13-fa309607108e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h080E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h06B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #197 a4649e36-f9e7-426a-a76a-b807a00692ca)");
unit.assert_eq16(16'h080E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #197 32d1aeac-583b-4102-bca5-45d23db48cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 d93fe50c-cee6-4351-873a-ac5abd5d6cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 32ba758e-4f04-41cc-83a8-3d8e85896e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 f600d3ab-59c8-4ba5-a608-7aba8c06899f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 ffdaf8db-cc56-4550-8ec8-082ac5494fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 d11f6514-b8c3-46eb-9e5a-c22e0ee5968e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 3c4fc6c7-c272-4c9a-806e-35b8ef588e34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h0C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #198 b6495f14-23ed-4c8f-aac2-2b19570b90df)");
unit.assert_eq16(16'h06F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #198 19d1391b-ef71-44ae-9da2-e24d7805b514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 58d23944-5ade-4e64-8672-8e1dfcc719e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 438bd598-96a4-4be6-b969-3c68322e6802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 e5c5740b-56fd-4ef4-a057-97c3959d3a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 1e9887e2-8fdf-43cb-9348-b77f2cebaceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 999eb115-4525-4cbb-9d3b-9e45398dd5e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 f95b36f0-4df6-4738-9050-ddd2065e4f6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h043C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h043C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #199 d7f3eac5-ba48-4a39-9256-e4241c1224f1)");
unit.assert_eq16(16'h0E4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #199 8ccf2dc2-38d0-4941-b1a6-54a53401ed8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 36e97336-4ff4-4d9f-94f4-be65d8f70a99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 f028da13-aff7-41f3-ace3-5fa5ad2da027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 d0f4706f-5400-4cb3-9468-3b7059d429e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 86dc0196-0f6b-40f0-a6cf-9c5482f15663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 2ae02429-8108-46ce-aacb-9e547948bd92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 870a88b1-4964-479a-b9f0-3074937ce140)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h0BFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #200 bd401eae-6b53-48b5-a272-4acb44de0c22)");
unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #200 13bb2d2d-69e8-46d7-85ac-7cd93a5c1ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 b4dabde9-2acb-4f21-839d-d8d3fe943dd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 6b8d51e2-3290-430c-9213-1ce53342a884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 be11d98a-944f-451c-a064-b0ba9c294827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 90b54716-b85f-4eea-897f-0ef8ea60407e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 4a9cef5d-ec3b-4155-bba4-a916e3855fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 143ce0c0-72da-4958-ab3c-2b0eb2b46991)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h087A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h087A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #201 d658a79f-e035-4ab0-bd81-6619787dcfa3)");
unit.assert_eq16(16'h0A16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #201 fa153058-f003-4a33-9f9b-1df9eb710a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 89f93323-106d-41a6-8f06-9c3541305667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 fb5cdefc-7e51-42d8-88f2-eadcbcf129fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 4dd67cf9-5da7-4b7e-b72c-9e62bfd05899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 e36e7b6a-5c92-4573-867a-62aec831948e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 17445390-bcb1-41d1-a453-06acab014e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 4386a426-0430-4fcf-ae48-8fc1872a8a7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h07F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #202 d49fe14d-b10c-46bd-8f3d-d7b920cc1185)");
unit.assert_eq16(16'h0FD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #202 693b6a8f-5ada-4dfc-8a4a-899cf625fc9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 978de1f9-6a4f-4f9b-9a9d-d1f179c7076e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 7a73be50-6036-4b0b-9353-363e81dcc381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 c43a3590-be1f-4bea-a2a4-1b9c7084056d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 2015f06e-c30b-488c-a310-0b28b24d2ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 34869b06-5849-4637-954c-9657cfa4f291)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 8af35d2f-f0d9-4d40-a706-c57e753f8bff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h0FBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #203 acdc0196-6453-4a37-af24-e83110d9bc5a)");
unit.assert_eq16(16'h07CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #203 38bbe7fe-1c45-45b3-b975-310aad5e6478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 c6b335be-247b-4870-b451-79ed4bb011b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 9f75ab56-0cca-4d9c-8f15-2134055a1802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 7a481c8c-ce24-4403-8bcd-ef8fb2fc7d00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 eda551bf-a7d9-47f7-9c87-ba2514bbfb0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 5d462245-6e34-4389-8ea0-539aa8d56dfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 9c4f1fce-94c4-4320-95e8-1d4d98383e8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h01CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #204 a2341014-f94a-4b19-9570-5a2aae605d64)");
unit.assert_eq16(16'h0D89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #204 31a5cf5e-f2df-4164-a046-653a181eb01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 672e7b39-b579-4cad-878e-4eb4805a55e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 b642cc37-7fa9-4a9f-b9b6-9ced4e700ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 9fe3f5f5-4ae7-4a27-9d05-4b8ce4afe2f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 9c8f8c19-7d7e-4af9-8622-a4e506c4bfd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 92801ad0-a2cd-4310-9d42-3f759cf89b8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 13a0e66a-6d8a-4b58-8d23-e9cd17ea7a9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h058A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h058A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #205 e065379a-3fe9-4b88-b921-ea8cf3f5c4d2)");
unit.assert_eq16(16'h03FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #205 b915b24b-1ee4-430b-941e-c20d8fe61304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 c2dd6fb9-8fc5-4b43-8680-d9b43c8ad685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 1cb897c4-016a-4c2a-b897-e50286aeff59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 98614840-62c5-4793-93ae-bb81eca140e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 9c17b3a5-799e-4be4-990e-31bfdcd6d171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 5ef6e0f4-d010-4e3d-9904-87fa17e803fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 9930eb84-a182-4eac-bcdd-93027a3378b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'h0A96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #206 961fc95b-fc1e-4ab2-ba64-d88ea32066d2)");
unit.assert_eq16(16'h0EB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #206 d27be998-9845-4ed5-aae9-50a05aa70f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 ef2122c5-6b21-4a2f-a5a2-c7d09d7fb377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 910d6aeb-13e7-4f72-9a38-d9e11429b15f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 cfd87010-16e0-438a-8ffe-98fbe72ac9e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 f662cbd0-a4b4-4ee7-93e2-e56cf869be38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 db44ff20-8d5a-476c-a83e-8cab21efed17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 0ce974f8-842c-45f7-b311-7043fdef5ce8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0511;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0063;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'h0511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #207 f2cd2fd7-9e22-4411-b117-14ced5f93b96)");
unit.assert_eq16(16'h0063, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #207 cbcd845f-e12d-4534-ba80-7c02290ab1d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 43587778-cf01-43c3-8c49-18c14064c577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 451079fb-b8fe-4524-8fd2-f3a000c0344d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 b1b8ac37-0a94-42c0-a9c1-c8cabd6a18e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 550660c8-277e-47f9-89f2-903c49f30ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 becdf17c-8f5f-4817-888e-673bbaa595e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 49391453-7ca1-420a-bdb2-104c73488497)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h024E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h024E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #208 4e87679b-711d-46d9-9366-ac337e25acb2)");
unit.assert_eq16(16'h0B2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #208 823f3526-1bba-4597-943e-eeb7bb3d3262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 39e8fcf7-8411-4295-b797-6b0e900a22bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 a4368dac-37a3-4d23-9bbc-23c98d3b410f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 457f89fe-2a65-4b11-bc71-57258fcc31eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 089b8783-c882-41cb-a276-fc5134b3fd8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 b7dc58f6-1b02-4407-85cd-948397804343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 ec55aa57-9492-45da-b9bf-0a27991fa6fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h04CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #209 27eae011-5085-445d-ba8b-18bbb69942fe)");
unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #209 299650cc-b250-422a-a24b-e97443f6870a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 c660cf93-0146-42ac-867f-26170f9b0c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 9aecce72-f05a-44d9-b220-d90cfc73aced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 7353e0d8-8646-4b21-9a8d-c028ddd56723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 cebd44af-664d-43eb-b47e-3e2e37865435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 2a7575c4-e47e-453b-8082-bfb9037bb737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 ca337b3f-9b71-4c80-ab02-9a3b25c05a5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h076D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0936;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h076D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #210 c235bc63-d781-4ba3-b2ed-fbf5ed74ba95)");
unit.assert_eq16(16'h0936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #210 ec9e3d2a-db8a-4395-8d33-3eb41e97385f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 ecdef091-7270-4382-9f62-175dae90a48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 e847c76b-5be4-4957-9c96-0693cc23d131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 6b9951f6-3919-428f-aa85-bca10006e83c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 66c5ef22-114a-4f2a-a32b-31d079bf97f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 d4af70b7-7997-4f98-ade8-c85a94cbc7f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 d45fb858-65be-46dc-b45f-3c4d34aa3015)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #211 8da25c78-c461-4402-9c40-9204d83e23c7)");
unit.assert_eq16(16'h0EF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #211 d0aa7597-5777-4676-8ef3-ffa3e1a99801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 8451b171-bbc1-45dd-9f0c-d1756c1b44f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 bf34adc2-dd21-4ef4-8b77-7b20a92d71b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 4fdd77c7-5133-41e5-bc4c-5a7627dd91a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 912904a0-f514-4c08-a27d-d957496cefcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 8a7c3b07-74d7-4768-b2f0-dedee51e7cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 221dfc72-58cd-430c-bdf4-ea05543e70c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h012B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'h01C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #212 ef18d9d1-3a7e-488d-96a6-ac39eea36b7e)");
unit.assert_eq16(16'h012B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #212 8295eb87-da30-4897-a2fe-55c462a5ece6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 70c06489-8b4e-445d-8dd4-23ec43e28487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 41cc52a4-be4e-411e-a05f-5ed72bd2550f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 61793812-68d7-408d-8ceb-00551ca37969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 1df60bb9-9895-4f5f-9aaf-8f6c20ec5c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 d5e8137f-2b57-44ef-849a-bfdd004806af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 885f6a3a-78d0-4bd3-b5d7-33c2bb8b37f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h0F17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #213 e7b42e69-b00a-451a-9711-147e8995ba4c)");
unit.assert_eq16(16'h07A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #213 1afb3fc7-c112-4077-95a9-7492c0f054b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 398d4b77-68a6-420a-9e98-d2572ae3e049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 c3147bb5-05d4-4028-aea8-8deac647221c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 80228517-d205-44b4-b6fc-1b1e9d385295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 6766caae-a6ab-41cc-b9a3-eb7ebaa8a64b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 8ea09b4e-abb1-4255-9582-0b8b39dc2432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 16b5db68-b02c-4af4-aad9-1ac5033c0d6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0993;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h0E9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #214 8a7a2392-47c2-4552-94fb-f8e12f13ad42)");
unit.assert_eq16(16'h0993, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #214 8592a872-93bf-4dcc-ac22-0347055ca43c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 7a076940-2d5c-4760-948a-1eb8136c83ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 c3a2b1b7-b2e3-4a54-ae40-6d7bc8a1ede9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 cf415da4-6419-4032-8bd1-f33998cf67b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 94b0f637-c73e-40c1-a787-9807a9d711cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 95f3acec-e244-4540-aebc-34c3cec09bb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 9bc7b7ec-5090-43e7-b207-d27554febfc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'h0CCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #215 e39d161e-bb88-4985-a8c5-8e3636d38560)");
unit.assert_eq16(16'h08E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #215 98d1a6fa-c955-4fc5-9a7c-7c1578218b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 73b3cb76-d924-4ba8-b725-1074334a597a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 52dad0ee-4a29-4bf4-b539-151739ad7e96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 105b887c-32a7-4f3a-b521-cc19684f666e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 389a2326-5c60-4413-872e-94c3786b8fdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 66f7e66d-0764-4d7a-9887-46985ada221f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 cd2f4374-e183-4ff4-a4da-1c4f98e2185d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h021F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h014E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'h021F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #216 62b0f0ac-5e6b-41ad-adab-6f081863c7c8)");
unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #216 054f2679-5b0c-4cbd-b779-48589b3437a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 9f54177f-4923-4ba0-94f0-df4a91240fcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 cadf0ecb-70d2-44d8-b245-9966032ffcc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 30ab992e-cf96-461c-8ae9-2f9e0e43fada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 41c7370a-9827-4d88-b283-98a50e05a37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 e21d93ff-133f-4783-9f7c-1e88f7fe9713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 49322fdc-1043-4c44-aba7-cae0c663665d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h061C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'h03DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #217 1d84e1bc-2280-4f00-b617-b576aed8be1e)");
unit.assert_eq16(16'h061C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #217 fd6d303a-97d3-4e1a-be9b-f4b58b6892af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 1afc196f-b76c-4175-9015-fda0e06458bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 a01c89ff-8175-4ae0-ade4-fe7a908ae7de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 0f085c92-750b-4f73-ac39-383726df048a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 ec986339-132a-4c1a-981e-94ed8f7c3546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 85e9849b-d85e-4b12-a65e-59bd2181dc15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 327ab4ba-bb1b-4213-be31-7c8d5815203c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0458;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0426;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h0458, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #218 d57171f3-6287-4ae7-8c6e-82a6a2b48850)");
unit.assert_eq16(16'h0426, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #218 844434b8-5928-4e54-b4dc-717ae3fbead8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 b29d2c0a-d1e7-4a58-9b66-7e5ba04f3a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 c915e838-ada4-4eb1-b39a-d05bef2eb196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 819e526f-ecf5-465c-adde-df4ba30746bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 2a82e08f-10ae-4117-8719-e03e473b394c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 25a212cb-d42e-4270-a933-056d5c221ef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 9dcf132c-493f-407d-aec7-4aa9115568e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h04F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #219 b4dd0208-ec72-4258-9c29-58d8ba215bcb)");
unit.assert_eq16(16'h0D0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #219 b27a62b7-21bd-4bd7-be54-dd0b98c00316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 7ba2e79b-9e76-467c-8f61-1e238912a51d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 0322e69c-0c5f-4171-84c2-78e05a769ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 3de9a369-6c63-4b95-95af-e21bbca7e52c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 59571a39-7ebb-42bb-97a9-952c1c181a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 ffb0506c-773a-4e46-83ed-a27e07d0bd78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 bec04bdb-64e2-42a0-8f68-0289713ce7f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h029D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0084;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h029D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #220 8a987d10-8716-4852-9cce-31009f2443e5)");
unit.assert_eq16(16'h0084, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #220 428a943e-e404-4a1f-bc0c-5ad9fd96881c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 4a41b1ca-d1cd-4498-89ac-02361c2a0f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 3d7fd2f1-9e80-4cf4-bf28-f6f582e9cd80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 15f6fdb6-1502-4fd2-a64a-e1b37b8fd764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 ffa6b986-dc2d-440e-ac0e-1d7e9492c479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 2afbaf76-93cc-42b5-93cf-788c47c104cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 6b3864d7-0848-4099-9195-cd8cfeb10917)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h0F18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #221 e33c4469-9761-4508-b8c3-da39a3399469)");
unit.assert_eq16(16'h0E00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #221 616e488c-0f43-4b3d-8b01-8e027fb0962d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 b7c2c46e-9fd6-44b3-abfd-147642070ed4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 03778c3a-1317-48bf-b38b-9f5eb37e9b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 084b0529-cc73-41a2-b00a-2f9b16455f57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 8aa252aa-df7e-49b8-8331-9043df62d187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 82d31e95-565e-4aaf-90af-a7d48c13f4c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 f3d34f7b-22bb-435a-a980-017883281c48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0248;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'h0248, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #222 d95f911b-46e7-4cc7-a481-1fe277fd269d)");
unit.assert_eq16(16'h0EA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #222 3c33ab9b-6796-46fe-bace-db32e2160222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 1ab47ccf-b461-498b-859c-a11c46964dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 dcad262f-12de-4a7b-a2b1-1bc0b86add04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 96209222-f680-4f42-ba4e-e21334ae7651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 8de021d7-ec18-4668-8cfe-107cd7bfc49b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 508e982a-dd6f-4283-b6e0-b67704b6f7c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 be931a7d-a6ed-43ba-a275-75d587563c11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'h03BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #223 38791db1-7fba-4a7b-8ca1-8c650b783784)");
unit.assert_eq16(16'h01E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #223 37b54764-888d-422f-b7ad-8e0edff22e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 e5f3ce1c-f168-4d60-8a4c-00ab6454ead9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 77b52b29-33c8-4665-a351-95e65835c049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 a14edf45-165f-4c88-b5cc-5ba5e99aebd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 fada0679-605b-43c5-affc-51fb745207a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 691a8aa6-79c7-4adc-a441-e1b5593e37e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 1081b574-d40c-4e23-a632-0e92997f7a9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0596;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'h0596, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #224 9d991cad-ce46-4678-a326-8a542a81b822)");
unit.assert_eq16(16'h0BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #224 993f80b4-be10-42cc-ba96-e99fa48030c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 2464b15f-57bd-4fa4-bb85-abf705b27cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 d5695ad4-85fa-4562-9fbd-4bd83c52072d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 01f6e7f8-e411-4b67-9587-db2890499829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 f69c1464-b718-4876-b4f2-d0a911f90828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 8df3199d-909c-426e-bbdd-de81652e2a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 8e964035-e1ed-4ac9-8df5-2004c50607f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'h0D67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #225 833f4a7c-5171-4bd9-8b68-c421c7e82c28)");
unit.assert_eq16(16'h0EAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #225 67f6b619-cef1-4faa-9cc4-38c3f0157904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 c58fa61e-69bf-49c3-a7a3-4f76254656c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 65762f6e-4b2d-4c51-ae6f-19148724b4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 135ef7d8-e3c9-4e1e-b3c7-e7406ec9635c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 9b300ba4-7db8-4654-a787-f79ca3463a8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 149ed8c3-d460-44ba-a952-9305f6b79e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 8cf66af5-f873-43fb-89e7-7d699e8a8a67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h0EB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #226 865a1793-4aac-4eee-957b-1ed13f64978c)");
unit.assert_eq16(16'h07E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #226 40014a95-b2ed-4a41-a279-173fd8a433b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 4cccc473-1fa4-4e90-9b6b-7a79b8bbc67a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 a8abf28b-9d7a-4aca-92ca-da6a20fbf8d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 7bb1ee9e-6c86-472a-bf3e-8e5d365e96f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 819ee7e3-ad2a-49a3-bcf5-3b564e376f51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 9c193a42-eb98-4f5f-836e-d19373f25de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 f5fcfc2b-f701-4b82-aec4-b942f0b8b7e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h097C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h0B1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #227 fa79214e-a424-4bae-a24e-be0f14808110)");
unit.assert_eq16(16'h097C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #227 b7890bed-0907-46c0-a03c-65785934cd8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 8d1dc8b7-7a0f-4abd-bf26-cd129271afff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 d7b24084-04eb-41a6-a3d7-987dc45b8d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 8114d4d7-6e4a-4f4c-a278-071bc0ef56c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 becc0ecc-edc6-4f02-9860-7acddaa76bfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 67e90c2a-511e-4604-b862-7af08eec7919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 3fd67a86-6d91-46d1-b98b-f1bd8774e4da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h05A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #228 aa6d120e-5c95-4759-83f2-698e22d69c7a)");
unit.assert_eq16(16'h0B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #228 5c89ec05-d61d-4f8f-bbd6-56cf576d5a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 b14c9fa0-d9f3-405a-9a4b-2e44fc845702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 05155c0b-a8b2-4651-b38c-7f60cc286d39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 ee9be0a9-2c56-4d32-94d2-222ff5aba753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 e13c58e1-1d83-4da3-bc54-6a4fc27fdea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 1ad32d81-d63f-4b59-8eda-9a694db3a430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 ca06e1d9-cfd0-4943-a0ff-e3cdcb7681ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'h0FB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #229 0879ea94-0279-4239-907c-39c1be7ca61b)");
unit.assert_eq16(16'h0FFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #229 38cd2317-db52-40f7-9ca0-a67ac858ebff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 81dc3e5f-2784-4182-84f5-86d9d244984f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 3344a509-b547-4b92-94cb-1f3589dbb985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 24897037-19d1-485a-95a2-a6bab42ac2f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 599bf791-678a-420d-a97d-76f2615b4f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 a9e99554-9a33-405d-a917-7f480b71e3e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 527bf79e-00ee-4e8b-b326-97a928712905)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h06C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #230 cf1f9426-fe37-4962-9836-39af281144d0)");
unit.assert_eq16(16'h0C74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #230 dc465ff7-b6d4-4a2d-9a92-143736892ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 28be36af-a0ee-4d1a-bf08-82111fca0be1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 f2335607-e582-4f0b-8de0-61efd0310ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 5305d587-410d-4210-9a29-cb53ecdd567f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 12e286f4-87d5-4c6d-8f0e-b1f3dd178b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 a384c198-c5b5-4ff0-9ba6-dfd8aaac3d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 d7d9dfbb-b3f3-4b1f-96f8-04514747a853)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h01DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #231 4f729d08-ea48-44e0-9b51-fb07de0347b5)");
unit.assert_eq16(16'h0BD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #231 2c54723e-eab8-40c2-ae27-cf1cedaee5a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 7c6cb0d9-499c-4128-b234-6b094ab7c67b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 b1a04eec-1a02-4226-8ac5-52343e060063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 c488055c-60a9-4c55-8a9a-6cfb511860bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 75d42171-e4d6-4749-a46a-465b2c7502ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 64d26447-6e73-44de-ae35-6569feaf6bc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 f1ad0118-28be-4e38-b6a4-dc69cbb643fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ABD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0860;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'h0ABD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #232 e4918b32-a323-4512-b31d-d05219c18041)");
unit.assert_eq16(16'h0860, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #232 1d6f12b8-deea-4775-9095-6c5a1d84fec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 e9924739-bfa0-44bc-af90-9aca9100e303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 c7f2aaac-a031-4f4e-b188-8945c660d7f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 c8bba44b-746e-4d44-86db-b7d54d2d1ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 8e06aa15-5837-476d-bf8c-1e8469e9c3b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 b7c150da-1a59-4c01-bfa8-a504d115a853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 cfdd78dd-4762-4f2d-b451-22fac22167f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h0C44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #233 e6ab5a6c-bbdf-461e-adbd-8ae62c219e53)");
unit.assert_eq16(16'h07F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #233 de244a7d-a4cf-48c5-85fd-257befa8637b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 51b3ac4d-7e3e-4d8f-9ee5-028a9b9c09e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 20005519-595f-497b-9ce3-7137dab35e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 036f9d63-b54d-4ae9-88ae-be330f068463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 90b4880e-1255-4a6a-b1a7-34497d62722a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 b59257b9-f2b8-4993-a619-1cda47734237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 a50472c4-f130-44ce-8222-b4c13faaa4be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'h01DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #234 4d5176a2-98fe-4a16-a23b-89cb348f30b4)");
unit.assert_eq16(16'h0E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #234 62e3d520-8972-43be-a934-e25232bfeece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 e018288a-aa33-4a3e-ba3f-8bc882a45b35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 20736435-839d-470c-9459-303e43ae42c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 373e8f7e-7a4e-45d6-9726-905039ffd853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 b9100181-cc6b-4211-a601-71d56597095f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 8f05e176-5c2c-4b38-b434-c2081d52fca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 f54bce27-9880-46ab-8171-c5ae20686009)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0053;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h06DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #235 a4b7bd6c-b399-4cbb-a188-86b828058cdc)");
unit.assert_eq16(16'h0053, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #235 06369406-cc97-47fb-b877-0d66295db9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 fea0e165-b5a6-4fd3-8d0f-70739e440a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 e786a88a-f32e-48e9-8de7-6417a62bfe5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 a0235588-ebd4-4a1a-8b0e-9777310b2b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 3750e5ab-e717-438a-bd0b-09ade1b50a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 2b3cb907-b2ec-4bc1-ba08-8d3e6ffd13e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 b9faf8da-e5f5-4746-a5ab-00f991796d8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #236 d33bb88a-a2ed-4199-a93f-e17f1cf32089)");
unit.assert_eq16(16'h0A8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #236 64dae238-cb7d-4a84-a1c6-24c3af499e03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 cb5b4207-68ae-489e-98cf-8b0233ad43eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 7112f399-5b19-491d-bf13-87df0ba3b95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 c0e8b599-4896-49e4-ac02-3551352cd926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 45f4e7ba-0d65-4b14-ac51-e152c1758118)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 f43505e6-2680-4241-a847-4ba7e5a20632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 c6ce6a65-6d44-44cf-aaa7-325f89539bbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h0FE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #237 52a6e885-86d7-4958-b7e5-1a5ffe8dc7ca)");
unit.assert_eq16(16'h0D6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #237 8f5a24cd-368e-4a04-991c-f6ac28b81ed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 dd6eac3b-2df7-43f2-a2e8-2c1a9ddd02aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 334c72c7-5341-4182-8abe-e6606418b62b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 72e3e81e-5a0a-4316-b2cb-5ea809c3fa6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 74c309b9-6e08-48fc-b935-ad7bc26c885d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 be4c331e-63da-4480-92ac-a3e904a22b4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 1697454d-8c36-439f-9b1a-2e0c58076ef3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h069A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h0B81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #238 153e7e51-bda7-46eb-9cfd-d535ba192a1b)");
unit.assert_eq16(16'h069A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #238 6487970b-5329-4853-bc6d-e128a4a17462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 5dd23acd-e454-4f2f-a64d-11e7b8431f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 210f907b-05ec-4dca-93cc-fd15c755089b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 146ef4f1-9052-4bec-bd24-807342f09f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 b6d3cc05-9c32-4b03-b139-202b0bec43f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 3e7eb640-c486-43c3-be03-336a3429c09f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 aa731c18-ab6f-4d64-9e3b-5f0ad222fab5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'h08C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #239 25d5bad2-9e76-4bbc-a7bc-d6066b4a8b6e)");
unit.assert_eq16(16'h0CA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #239 c21062b5-f706-401a-b833-3d55ed10e0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 65cadd36-b9b6-4ad2-af10-d164cc1b324b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 f39e66f9-7955-4f6b-9333-5321b0a7637c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 47f0aefb-6656-422d-8ceb-5451cc199b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 d5d3e9bf-22d9-4816-905a-fe9eaa622e37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 e060a739-56ef-4ec0-b64f-fb666ddcfa95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 7b3577fe-e630-4722-83c2-1b165382cc6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'h0DB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #240 ab7749c8-e34d-4d74-814d-e0fe39da5105)");
unit.assert_eq16(16'h042F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #240 6ce60ad6-c952-477c-a1a6-65e365046d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 dfb3486f-78e3-4707-8f4f-937b2fbf2c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 31df7c78-93e1-4cd0-b9d2-6f133c1a6193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 4e1a11b5-51da-4c31-86db-c7f0bd60c503)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 ea2108be-3fe3-4e15-8cb5-3b9ca49cac4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 b53e845e-ed44-4648-964c-d5d13587c820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 7362a73f-7357-4429-806f-001544d3cf41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0482;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'h0482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #241 81b465cb-dc58-4607-9c4e-a3963f22c73c)");
unit.assert_eq16(16'h0FF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #241 defb0ff3-b800-4336-acb5-9b8b5066e8c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 7df519e9-88b8-49df-941f-71585b037889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 5835ef16-c279-45c3-a07f-dbbadeafd393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 5e877ade-ae60-4a0e-97a9-3a5adfb91aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 1eaaa99b-3aab-42f6-b3e0-88f7c76e6e7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 72e7cf17-9e8d-43ec-b006-7ffb1ec11796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 f7581f42-bb2f-492e-9cf7-e370fcd112e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #242 dddb6502-f81a-4090-b7fc-a7e85e7951af)");
unit.assert_eq16(16'h0283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #242 cfd9dd6d-e2e8-47dc-ad29-0996088deb8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 ed0f1acb-19fc-46d1-a5aa-6e4f781e84d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 e7705bb9-575a-4748-a602-e1ff8612956b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 cb3af0cf-33b4-44ad-bddd-91f8d4444b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 7bd2cd3f-c53f-4fe5-89e2-eb439ee640b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 377662bd-c927-4132-8668-b76d6579bf38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 f716dfda-ae62-4417-ab30-2e01eddc9eaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h0CC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #243 56cba247-feda-496c-afa7-c2a2738a9894)");
unit.assert_eq16(16'h0C8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #243 26e09eca-b6f1-4d72-8f35-fa7452d578a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 c94403f6-690a-497d-bb7f-686175eb0aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 aaf3053c-695b-44c6-93ae-2afed461d9b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 a12290f2-91ee-4f22-a9cc-4868cc9a9f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 82cf980e-8a33-47b4-a594-b1feeb7b6cfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 5e0d2138-fb0b-426b-abca-ddeff13d6cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 f43d4374-ad6a-423c-9868-9136f2babc52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0178;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h0B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #244 f6b19e74-2864-4c2e-a27d-b74509d33fd6)");
unit.assert_eq16(16'h0178, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #244 e2209494-db1e-471f-94b4-9d44851a93d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 a19f2640-fd58-447c-a5cf-7734610c0033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 c3388259-2d91-4f36-9429-064c4cd1911f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 1f45da8f-74d0-48fc-b2f0-78074d197fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 37412d6e-b400-473f-9dd1-f23e034e24b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 57e6704b-2b4e-4330-95f7-538d9fec202f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 1c3cd213-09f3-4ed5-9a48-8937cddf2724)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h06E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #245 ce2cc15e-d1fb-4688-b366-98d29c9e6cd3)");
unit.assert_eq16(16'h0C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #245 3205c3c4-9417-48dc-8a72-5ca7db2e1db4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 dad29970-a2a8-4353-a70b-1cf18a61d893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 4c0f3dd2-2ba8-424d-86c4-342e1c429e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 5b5bda22-4e3d-4992-993a-9ebbad2224dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 4bb66832-4469-4dcb-93f9-59cca2ec340f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 342b48ea-acda-4137-9017-70250bf62e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 586630df-2334-432c-b80f-aebe5b8da233)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h0F3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #246 66e48c26-ead6-4902-b7bd-0cd043e67b56)");
unit.assert_eq16(16'h0EEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #246 3abce387-0d6f-4422-9946-3f9d9831c49d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 cd0f64e0-c07f-4b27-9cb9-9e93b41c7baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 88bb07f3-8ca5-46a4-a62a-945774da28df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 80c04108-aff9-4745-b181-05a2e70419a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 96633596-b3a3-4487-8998-ea704d3dad9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 92e937cc-f52c-4d14-b6d2-12835e69889b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 5a54b6cc-1845-4682-bcb3-c47068873578)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0229;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h028F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h0229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #247 fdc9c11a-571c-4a0a-a442-0f66ca57e289)");
unit.assert_eq16(16'h028F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #247 de7c4197-a23e-4655-b43b-4cbaa554ab68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 56c66796-f91f-45f1-b33a-c95f17550377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 bcb306fd-68c9-49f7-b59b-c5bf5c810d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 1325e6a8-1b00-45fd-87c1-faab9e84be3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 110d4cee-8fad-4ac1-b9ef-027935270de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 492beeec-a3a7-4215-a5f5-de5c4be3605c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 8248b840-b6dc-4bc8-8e89-ff8a5a2cebfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h0A25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #248 68357096-f03e-49f4-adcc-8da779e39193)");
unit.assert_eq16(16'h0D04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #248 dfc77d5b-97a8-46b6-8bcb-a97da77bf08a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 c9889b2d-e0bf-44df-96c6-ae0574162cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 1757ad56-3c5a-4a83-a3dd-7efb963d31f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 8e7cc1e0-eb13-48c1-be5e-57009268c966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 27330d1d-6813-4e19-8f5a-502f877b7ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 2510b8d1-9ed1-46ab-a0d5-317cec830a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 3c7d5164-8733-4ede-af3d-5840da5a484d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0493;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h0BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #249 68d9b392-0eb2-4a48-8c16-855b992105bc)");
unit.assert_eq16(16'h0493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #249 c50dde64-710f-4695-8164-ac885f5e92e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 1aa97809-cd3f-423e-80f9-c30794df3b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 84277e1f-9a1e-445c-bdd9-5e5021836e3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 ed1b2df0-fbe0-4eb5-a1d3-401186983b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 625b772a-506f-4835-a42c-5b5128111f80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 b527e8ee-93d7-4f48-922e-594a127660eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 bbec33cd-e481-47e9-9fb5-85ec8fd08df5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0963;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h0AC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #250 4c00e3bd-b241-44c9-884e-e496287186fd)");
unit.assert_eq16(16'h0963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #250 b3c4f5c2-af3c-43e5-b627-584b2b74b918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 8cca6727-b905-43f9-ac09-a6e54db29199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 949af598-b2d8-4752-86f4-6c2ed37a8478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 e4a2cec0-bb01-4fb8-a201-70fa63add614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 98b26320-dfde-489b-8bb2-2dd26f9e9e68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 bd46027a-cff6-48c9-acc5-71b1ef40278d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 50cccf0b-59d5-44db-bc60-f197b5d03106)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0804;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'h04F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #251 37a8a24e-0b2a-48ee-bc87-97c8adc9ac93)");
unit.assert_eq16(16'h0804, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #251 171f952f-51a6-439f-aec9-2531e685d735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 78d8f143-39cd-40c8-bf4a-b532f473c1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 d03816d6-bab1-4630-90f7-89c6339e92b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 9af36aa3-7afb-4e08-9bba-de51dd9007a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 5de9ff37-343b-459b-bd5e-0df286a0df3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 b3f68eba-4ad3-4577-aa24-f8eca3a8eeda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 1d1fd51f-e34a-49f1-bcdf-ad9f1f742dd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0151;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h07EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #252 b0d397d4-a169-4aa1-9a3f-1bbf766e30d7)");
unit.assert_eq16(16'h0151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #252 6e3a9b3b-c577-46bd-a0b5-e3753dc1d1f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 d3e7e8de-d593-4fbb-83cc-594bcaee295f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 d0ea26b1-3ef1-4a7b-b4d2-f18e111dbc88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 714da665-824c-41db-b0e1-3239ec08cb97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 cc1450dc-b8c4-41dd-9128-b0f88eed59d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 afd0aeef-e735-4359-82f7-ac8406d39880)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 be02c30b-a334-4794-8ca9-5bb05c62f7a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h075E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'h0B4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #253 4ede3365-edba-40d2-a161-bda9a43fbf73)");
unit.assert_eq16(16'h075E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #253 b328a382-dc1a-40c7-b98b-5fd015da98ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 4a05324f-7825-4fd7-bd8d-c43fcf928a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 2b762a02-b28f-4ea9-9bee-923f34c8245f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 45a7e3e9-78a8-4429-9986-4f03d92f56b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 0c00607b-c4b1-4675-ae4d-4e9f408b8ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 9cb32a35-819d-46bd-bf03-944d053de073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 26599f8f-5055-4c46-8436-611e397b5505)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h08FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #254 4ac5dc5c-a93b-49ee-a19d-b711f11235b3)");
unit.assert_eq16(16'h0B09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #254 6d77ad48-36ea-4653-9ebd-d47c958be14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 dd3978fb-3ec3-4323-b14b-7ba4a6b385c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 bab10fd8-ccb5-484c-bab8-b0809eed336b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 f707132a-2597-470a-932e-7063b6de518a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 d4973f08-253b-4777-b3ef-762067991e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 8da485ab-9e80-4916-9cd3-3f58099ab201)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 1f24008b-e76f-4b71-8906-82ef484684a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h0D09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #255 e28820f4-8c87-4235-9e83-49969a19f91c)");
unit.assert_eq16(16'h09EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #255 320e675c-bf76-439f-add7-f41bcb8b1eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 f8c8e7fb-951a-4edf-bb84-e507fbdcbf2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 02470b8f-4d2f-4c8b-9b61-5bf1be6cf0d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 a7188ffb-e709-4aee-9d4a-e52b4d5ba012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 7c264788-5408-4d55-96bb-f6c220b8281e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 d34fd563-ef0a-48cb-8ab2-04e777beccf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 265d92e1-e847-4d77-898b-ee445217407b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h0A48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #256 53bde83c-13ec-4113-8b77-94cfe37375fb)");
unit.assert_eq16(16'h0F80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #256 8f1e927d-febd-4ee8-93ba-7ffb391af20d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 37dcfb89-8aca-49ea-9a94-f3dcef5d9172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 93f14fed-ad07-4298-a0b3-032a505dac41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 8e7de6b2-0f3e-4b56-932d-f76a469fe28a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 9a7c064b-da25-4bcc-aa9d-66c90b954547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 a07a9565-f66d-46c4-b966-1f8a061f2194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 00a7dd62-3d85-437e-8e06-a95368ce1331)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0212;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h0D25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #257 b8eadd68-cc72-4595-97f8-e659d68ec793)");
unit.assert_eq16(16'h0212, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #257 06a8f96b-6f3e-493c-9984-0356b1916e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 a0b2a16c-1a0b-4810-bb9c-ce8bd011da68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 f2efd8a8-cc20-44b9-bc88-0c785d2f4efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 d00b375f-f7e2-4cbe-93d5-56d154c4ce12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 ec4ae6b2-bc87-400c-b75e-b57602dd24c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 278b6e1b-3e19-4934-9733-ad5d02647d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 39e09170-fc86-479e-bf93-9bfa176dde5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h027B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h027B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #258 da5ccd93-c229-46b4-9ca4-6524e2707402)");
unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #258 c3d9f3bf-8dc1-4ed8-9272-c016e3850c0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 ce8369b1-e2d2-4807-88d5-7363c785d4ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 d38128c2-8a13-40d1-9c75-9f67cde0ba1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 47047c39-fe91-4f18-a073-bafd360059a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 e9bbeed7-4220-4013-9344-887bc37b1093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 053a4dd5-16a3-4e34-9e08-d797c248dd59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 0e110e90-666b-47d5-81b7-8ea762f1b21a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0130;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h0C04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #259 8e15e1a4-e2b8-4999-a58e-eceab946f804)");
unit.assert_eq16(16'h0130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #259 dd9aa7c3-32fb-404a-a4c1-ac0d7e6b7938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 5bbaedd9-161a-406f-b4b3-0a2cee13eaba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 456f53d5-e3ca-4393-84a4-5c256e03c4c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 1502b8a5-33ca-4fcd-9a69-4a85a3cd5ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 3d281879-eb7c-4ce8-96e7-f735ec6d7627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 0a5337b2-16f8-48d0-b812-91aec0c7dcc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 25aa91bc-4492-439d-8332-c081061547cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'h0FF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #260 77ea3ffc-92fa-42dc-8cf4-a9a42d060c3b)");
unit.assert_eq16(16'h0FE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #260 58bd7d31-d72e-45db-8b1f-43b99b258028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 02933384-53e4-48c1-866a-5727f66a48e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 ea7131d6-595b-4792-8c4b-2b5d06a26766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 c8ca31e6-b576-4913-bcd2-c87352e6da21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 bc7ed7a9-fc11-4f81-b1ed-69c32efccdae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 4b71e572-a696-4f61-80e9-655dec475e91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 b7fd13b2-c0b9-4009-8462-feec0d1dd667)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h0B60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #261 bca24fa6-2c5e-4d15-8983-6290da20d7a7)");
unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #261 0246471b-865b-4b59-a980-5ac92c509786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 538737e8-9724-4f31-9361-728a3b1103c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 e39023f3-4fd1-4761-8551-4095ed69ef23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 3ccecced-eddb-4082-b571-48d389e86019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 b28bfb08-72b7-4111-b1c9-75e2c9a11694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 b13d0d34-6f7b-4d1a-a6b5-9f244be39cbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 d5ab2f15-661d-42a8-9913-cea2f626e68e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0015;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h0F26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #262 4d41282d-c9a5-410a-9d67-4cf54f22bb55)");
unit.assert_eq16(16'h0015, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #262 4985ca4e-c8ee-40bf-818f-e4657eaf353d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 fa7fddda-e0b3-4372-8892-e9f734673573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 bad2cfc5-1a3d-47d3-b967-c0c4e35e7553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 5a963a2f-6055-4b58-b06e-debf97b008ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 461d2e2d-1917-4eca-8232-b8827370792c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 5d70b9b5-08d5-48b6-95d4-49de6de7b58a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 61feea8a-23bb-447a-aacb-9bd0a8977d15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #263 32113530-2bda-418f-81e5-08ab91e079e3)");
unit.assert_eq16(16'h0A7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #263 262eb186-8bc1-4d92-a9cf-d79b0a8be999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 ef31a29c-542b-47d3-92c9-4f285f8095f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 e5b5a483-3dea-44d2-817f-b92e050f42de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 af353d7c-d568-4895-80d7-4cb04ceaee42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 bc85de81-1839-40fa-83c9-9ce3153c49fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 52d1a2b0-939f-41ba-a1d3-a5e01b6586ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 8e17e9be-2813-470c-900d-c86a877f6042)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h068A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h065D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h068A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #264 eddd481c-9878-4f44-b272-8ce6c1f9ab61)");
unit.assert_eq16(16'h065D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #264 b121851d-c1ea-4636-aa36-492911a5668f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 67831180-0ae8-4ecc-9165-5e5e28463c8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 36efd3da-135d-4a92-b47b-2aeaa3fc5391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 21c5c6d0-b4fc-40a2-98b7-c43d9bfc3fc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 136f9a70-32d8-410f-b5e3-1056e7b46ba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 2597aaf3-9efe-4086-bc59-08c2dfbb2c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 73dee6bd-b0b1-4dc4-9150-e80f51340044)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'h0B9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #265 b72edbf6-a773-476b-bd24-4bcba86f2b30)");
unit.assert_eq16(16'h06AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #265 80872f98-447c-4486-8490-edcb703bfee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 db81972f-a8a0-4f57-8870-3f79a3e55256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 5f13bbb3-c081-4d31-b3e3-ba787c7d4ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 f79f09e1-1fea-40f0-af22-f847fc8eab55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 d1fcc0d9-af10-492d-a9af-90c48f175552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 e08ae973-2183-4f79-b11a-da4c297e2c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 8fcdf175-941c-4d3b-b028-9544e78050bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h06C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #266 0df43b3a-0af8-40d3-a483-b8d0a5a4bb08)");
unit.assert_eq16(16'h07B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #266 adb34794-b95a-4322-9ae1-9a6d9f1ac266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 264c4a9b-7a65-4263-95be-3470b86734cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 75a86637-8698-49fe-a962-ea520a2680f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 e6842158-138c-4484-912f-2fe6ea75de6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 8f21639e-e414-435c-9eb1-2f16d9930a51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 97831ee7-790b-4079-83e9-3e0b9fdca21c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 1605a087-ed26-4474-94a6-fa60a7d2d49d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0141;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h0E4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #267 873fc289-ecce-4e1d-bf94-d3b2fef5ce47)");
unit.assert_eq16(16'h0141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #267 ed4aded1-ddb9-4ab9-b4f6-67aa99d926fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 d3057eb1-5fe6-49b4-9ac7-e7c3b24adb63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 65c855c6-0df7-48c2-830c-e9739d326eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 dfbda954-3330-4925-9e4b-440bdce10965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 611cd93b-cd5e-4581-8f9b-cc533768c08d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 deb32eab-3811-428b-930c-84e975137d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 ab5a0a41-aac3-4e43-a949-c0f2150c7e91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h05CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #268 88a235cb-b567-4364-80f3-e6afd0cad747)");
unit.assert_eq16(16'h09F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #268 8bc9f1ee-98f1-49e8-ba3e-81a339259768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 4b7869ce-505c-404d-8f56-256ce5906d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 57058df6-dc8e-41b2-94fc-e3addafbf7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 404adaef-2e6f-42d6-bb55-4877cca894ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 85829bb2-b01b-47a5-b6c3-c9c5c8d3cc92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 daa2daf1-0b96-419a-8bc8-f5d1e4ba12c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 182a8384-50c2-4a66-ac9e-90a2fa06c4d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'h08A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #269 c32cae81-f24b-442b-9fce-cd7d7bfa5fb7)");
unit.assert_eq16(16'h0B6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #269 73910c02-43cd-43fc-aeaf-524765c76f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 101dbb00-af0d-473a-91de-b3042ad0d444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 01159539-3926-4d71-85a8-c430e5d0746e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 8ec5a73a-c6ec-4088-8f00-62e0b09e7fa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 6b118235-6712-46e0-8be3-5b1cb55bc15a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 e91fcadf-69d6-4353-92d3-b1275da6e500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 3557b652-e813-46d4-bb21-37db1466dc9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0220;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h09BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #270 078ce66e-021c-4a71-a025-4244336a1494)");
unit.assert_eq16(16'h0220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #270 1ba3a6e3-7271-4496-9aa9-0a69e59cd8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 94e7d5df-af90-49eb-b78c-f4b571a6b22e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 081912e7-5499-4e1a-ad6b-5c9efd431145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 648db4ae-0b84-467c-8b78-27f5f22f0c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 245eecf8-7b88-4592-8782-784ee7e121e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 258e0ede-609b-4923-acef-0896e94ebbe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 8875e087-db56-4848-b851-20f9d49daa8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h0D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #271 64cf4605-71a3-49c1-9c79-a1fe8c350d56)");
unit.assert_eq16(16'h07B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #271 fc693659-3e13-41e1-acf0-819fbefaaf8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 5b07f67c-ffac-43df-9557-d30e8cca0a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 910321c5-d460-48e3-9dc1-28d7550ee919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 0cf6278c-d9cc-450e-b863-8468767fd06d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 702f2661-fb7a-41be-a3e7-59042aef6b97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 0ffb5aae-784e-4efd-b44e-8d534b445374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 4478f5da-2614-4ec9-89c1-41abcecd0bac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h01B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #272 ed365def-548b-45e1-b8d6-7b9854fd36a8)");
unit.assert_eq16(16'h0C27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #272 ca49679f-b4b0-49c3-9d8b-d8a36f8dafd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 81aef2c1-f6a8-458b-af17-9d20b65abf01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 b91f078e-c063-42be-9c0b-488ebabaf339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 438cdd90-fe8f-4037-9209-ee33974661d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 298f6361-d493-4954-b0d9-021df39d8ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 f149a140-20fa-4538-9000-03f9dfbbae81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 b94211f2-5c17-4118-b2a6-ed3dc4bc78fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0325;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h04B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #273 08b7e175-5a83-4f33-8a36-2109f4063a18)");
unit.assert_eq16(16'h0325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #273 e755ba2e-4663-4cc0-9af4-5b60980ab7dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 1e968cfd-e7f6-43ce-a284-29fd118049ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 93e34f61-f09b-42cc-b0cf-9e865105871f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 5bacc528-d580-407d-a6fd-ea82c9dc1c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 cb50a33e-122d-4ade-8136-0f8097f22f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 277b77ad-678a-442c-86ee-3b420a1bb930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 afc8a500-989c-4485-a3a0-6204b8f0cd18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h0CD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #274 e2323fcb-90e6-4489-bd50-0e685375a6f9)");
unit.assert_eq16(16'h0B20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #274 212fbaea-f8e0-459f-a4aa-8eec2e3a65a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 46e55923-e9e2-42f3-a7d2-33e60b0781e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 05e34059-4c46-4c8a-92c8-210d3e3cf8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 08a9523d-bd04-49da-abca-1800781a6097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 41b24000-ba2a-402d-9903-5935e07beaf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 87b2d820-6b9c-44cd-8c2f-a50687f4d3c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 4c764cee-cab9-4444-8a78-8df46df312a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'h0E76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #275 1bc52549-a007-4736-9170-7d13fd3e2513)");
unit.assert_eq16(16'h0B91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #275 a5b93db8-d9a4-42ed-bb4e-3c768a5fa5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 93cb1ee5-1a6a-43e6-804d-70227a1622a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 c9c38d71-1683-4685-8047-bd80fc1ae9e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 dd4062a0-b489-46e8-8dd2-701c1c0490c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 77d0d92d-2c03-4aed-a432-4c7b0154fe1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 7bd9b826-5bbc-4307-9e83-37e26287c87a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 21d6aea8-75d4-4bad-bca3-46f0daeb3039)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h0EA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #276 15a4af33-4bcb-4b90-aac7-6327a4ee7552)");
unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #276 98b113a7-4b46-4c18-bf35-dc322c0bd72f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 1d6447cb-a6c0-4d7a-bc42-993e4c2d8c23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 40bb41a1-1a54-41cc-a93b-3881022e1880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 c9026636-8ab9-47f1-9068-943832b7bea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 f715d48a-6093-4adc-bffd-171c56da2b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 ae79f3f5-761c-4db1-93e1-7df6ae7caa93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 e362f70a-e7f6-4d35-ac6c-4ab182b03f2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0459;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h067A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h0459, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #277 043dc510-c485-49a5-b6d3-0ca578083251)");
unit.assert_eq16(16'h067A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #277 25a2c602-f3ee-4c3e-8029-3c7b415551aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 8a1d0722-e1a1-4273-92a5-ac31096221ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 25e076ac-297e-4ae9-8e67-1026dbeec8fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 5e49260e-af94-442a-bed4-078b6500a2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 d1f4787d-8de3-4bf3-94bb-ea55f20cb660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 b9b28eb5-018b-4fd5-8d9a-0dfa603e71bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 c01d97ad-59ce-44d9-8633-8ecb81b808fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h0B44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #278 76fa3f8f-444a-4fd0-a13b-95ee4afaf94e)");
unit.assert_eq16(16'h09FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #278 00dfd00b-85b2-49d3-b349-02cdb9bf42eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 2718c67c-541d-439a-b218-2ddd50890650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 1c9d2cc6-e3f7-439b-8197-70805f7b2d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 2127fde5-3a24-4e91-a0f0-4dfcbbc371f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 d396e41e-4b54-45fb-adf1-a3026de3320e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 f2fb2536-0fc2-4532-a140-254e5d0914c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 ef650c24-c6f8-4d60-8ff7-85ffdd03e886)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0042;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #279 ff3b8485-aa6b-4601-a00b-ae53be37edbb)");
unit.assert_eq16(16'h0F24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #279 3ae93207-9f7b-4a40-ba81-feec70d406ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 07740f64-2d8f-40f9-b512-c65980d43af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 93b41acb-cb22-40a4-998b-a061e7fba8da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 3045de5c-a861-4d75-a1f2-6233bf9149dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 af9f84c7-3b2d-4d25-8443-b88b4d47c391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 111a300e-3cde-41c3-bd6e-5553a378ac46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 3a3c0871-691a-4f77-a3d5-2d2d4b031946)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'h0A56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #280 84056661-1b2a-4abd-b834-8da919e69fbc)");
unit.assert_eq16(16'h07C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #280 5d7f1a40-114d-4fc7-b0d0-923a296a499c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 970fab82-1aed-43d1-a90e-1ac99be27690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 f7143dbf-cdda-49a9-8012-c95526738b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 215ad575-cf2e-4589-8840-efe13f6a9beb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 5d5e85c0-e6a8-4fb4-ada3-aac7aa538b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 470b53f1-2b5e-41da-86a8-e1281cee72f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 72a22259-d241-4152-8db5-c82ca5773583)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h02A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #281 dcb34fb8-f6e8-4cc7-95dc-2147d72d6fce)");
unit.assert_eq16(16'h0D30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #281 3ef27a7f-25e2-4f7b-985b-511029706457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 3ce790a2-2eac-4779-8967-9a031d706781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 3bf78723-147e-4d10-920c-c0c669da3cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 eafb9215-bab3-4615-984c-89733b0bc91b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 8e9c004b-2223-4545-9890-b5e2ace2df3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 2b7f9fd3-9e99-44b2-be96-1901b4b16fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 8f91156f-3f26-42bf-9334-0cb363eb28df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h055C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h017F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'h055C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #282 db71358d-afe7-4919-92ea-cd8bec0b2335)");
unit.assert_eq16(16'h017F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #282 f2c936b8-d2a2-4ab0-8b17-4d85b34b13c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 da49f851-7543-435b-9cab-ae80b20aafa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 a6051bfd-88ac-4251-bee0-a77cfb98ca04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 e5f71b17-b80c-4b81-9aa7-fa1ab4120cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 4c84c45b-2350-4256-8bbd-592f8280f9b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 8eb569df-afd8-44e6-8061-222f09751c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 112b0c45-9919-4e18-8208-0c78eacfce51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0601;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0698;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h0601, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #283 c3624a0e-814a-4760-af52-bae079a53ba7)");
unit.assert_eq16(16'h0698, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #283 e339367e-9e80-4505-a9ea-d78e5cc3af92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 dc71186b-8138-4b15-b186-01538bf8e6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 425f9a1b-1de1-47c2-87be-df579af30c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 888299c9-9767-4760-9cba-1954c67cd652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 638f0972-c7c8-4597-9a6a-63e37c23f830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 100342e1-5d6c-4002-911d-b2b72a787573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 74ebc88f-17e8-4fb8-a9e3-78f06745e102)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h0D89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #284 f83eda2b-2f24-4980-9df1-d57c1f135bab)");
unit.assert_eq16(16'h0AE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #284 066faddc-3a56-4ec0-9559-1f2a5a933d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 088eab5d-652b-494e-8d2c-e6549da8b50c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 118c630a-fab4-42b5-b3b6-256ece558f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 4fe57472-1b1b-42e6-9638-6137c9fac2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 67c659c3-0946-453b-b11a-19eb8ced338e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 3da990e8-6507-4e58-b7e5-db86d9ed34bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 37e8d7eb-4f9d-45aa-99ad-eef56d716120)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h090A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0518;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'h090A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #285 e9dca1bd-1fdf-4b44-9f42-470405bf43c0)");
unit.assert_eq16(16'h0518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #285 f84b48f3-e4c5-4536-8388-7bba8910bbb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 58d3f166-c6a0-4244-807e-e3878ccd13f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 ae8c8b23-0fe8-4cf9-bd73-a049e5c72ee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 6fa21404-a935-4d4c-b25f-183ed37bfd12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 caa98252-256e-42ae-9d9a-1386cda2a224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 67f3a124-04f2-4058-9a08-f06200831e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 83212f77-b14f-4a1c-af2e-32f8258c6582)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0969;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h0F07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #286 a830e1e4-bdea-45bd-b720-0caa6239b6e0)");
unit.assert_eq16(16'h0969, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #286 4d9acb27-a5ac-43c9-8dbb-94cd281a0c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 56e10479-1da2-4a27-8c41-9df6ac9e01d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 a8b49bcc-d44b-46c1-ba6d-12ac96263d65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 f10a102c-8053-487b-9f86-1189ce100406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 949d3f39-37f9-4a25-9e29-f74b9fef3188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 c5684d9e-d6f9-4ad8-9869-3197849fa159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 b11db20f-7402-41b4-850c-ff05a30195e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h0B78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #287 9c8af4e4-46c6-4745-9350-0ef91f39bb24)");
unit.assert_eq16(16'h0694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #287 f4af648c-a935-486d-b94c-3db530fad276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 10f5c727-f0f9-41c9-9626-20e23f544b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 ebc7dfeb-4ecb-4ab3-8a12-878026f247d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 ba4f1a7d-bc1c-415f-85c9-4c88adbcd1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 91ddad0c-b30f-47bf-a37e-c10aca77abfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 69bae3f1-7c88-4382-82ed-15fe81ce22ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 ca589aa5-7ccd-4540-a72e-fe02ae8f5adf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #288 d7510e8d-633e-4e19-bd98-cbba47927895)");
unit.assert_eq16(16'h077D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #288 340e806b-88ef-4b3d-9642-5b2e1189dbe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 99a15d65-54a0-49db-aa87-7f11aeefbfa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 5185b677-49f2-4327-aa37-811e073ec376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 16a5c48b-496d-4e26-91ac-e01cc2ffba37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 49438d88-1132-4b98-b586-eedd29772bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 12f5302b-f9f4-469f-a9ca-2012ed84a0c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 4d67bf10-9b2d-4612-9345-3a7726338252)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h074E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h0B90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #289 ff67470c-6952-4ba5-a0b0-948ee2230678)");
unit.assert_eq16(16'h074E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #289 90b7c110-3587-4de6-9864-222d77f77543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 0b3a7dc5-8bbe-44db-8387-75ccd4e3d648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 860ce432-e054-4caf-96ee-f82f26cf6415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 31689159-4381-418d-8054-360961af7c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 17dee734-56b0-4706-a798-142c0fcb8dd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 727999f9-0062-4648-b449-8ccdd74db946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 4146caf2-f857-4933-a7b3-ec2bb67bf185)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0917;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h0EA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #290 97546b08-8550-4106-b811-f75d9796f158)");
unit.assert_eq16(16'h0917, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #290 c3171085-7047-4cd1-88dd-82746fcfe7ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 2d80ec05-8bfc-445f-9e18-3c092fd0a9c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 ffdeab91-68c0-42d5-ae9e-05b85f6dddeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 4576d9ff-fc31-4ccc-930f-cb2654956d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 885e72e0-152a-4295-a1c6-f3422f9d3a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 53059857-9e70-4975-b403-87cad6566260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 04676ecb-0bf1-407d-8079-18d746f27b80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h0D61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #291 b6b97b67-bc42-4987-a70a-8740a8202188)");
unit.assert_eq16(16'h0BDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #291 5e25935d-db4f-4a5b-9e5a-9575b4a249aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 6e2216cd-7f84-4f50-8599-ba101e564855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 71e0b7c3-3541-4806-8707-aaf5e2d36e81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 15f99f3b-95c3-42f0-a201-69df72706001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 1041da4e-0025-4a05-9d67-c920c75042de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 516e2b0b-5ed8-4876-bb97-6ff6910fb041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 53ddaaf0-3076-4169-b09f-2eb62583bc2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'h0AF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #292 cbb5fe2d-32f2-4f99-8ab9-5b8f5266f488)");
unit.assert_eq16(16'h0B17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #292 418149fc-fe9f-49c3-8d2b-b2b0bf98fecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 b4b2d0b9-449c-4204-b101-2f6f095195af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 223c785f-eb17-446a-bc1f-6693cec29ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 af80dacd-2ad7-4432-86af-d552576b8250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 0b828e8c-f28e-4ff9-8105-ef4cee5f01ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 ca571dcf-d7b8-487a-be4a-09ae99e14f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 2fb68fbe-a766-42db-8e9c-38bc3710128e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h08EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #293 da306679-5126-4c30-9352-ef5d990438d5)");
unit.assert_eq16(16'h0F7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #293 e6a69f13-4855-4c7d-929a-b63c6b9a6e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 e5478fd2-ba0e-434a-b08a-b1ded939eace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 c2d33b54-de70-48c6-a2ef-c7995a480386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 8c8cb3c5-7021-424e-95e7-77b8dd489b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 dead59d9-e440-48fb-b1ac-aa4f3f47dfca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 97d4b57e-33bb-4b0f-9338-2245d2a47c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 1a8d9800-dff8-4ba0-9527-8c1523e15bed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0226;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h07CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #294 416c496b-3fdb-48ee-8363-570b58f2a815)");
unit.assert_eq16(16'h0226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #294 d859fe5b-4b55-4c91-b314-7df93e50962d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 8ddb3921-2cba-4e21-bf54-9aab5bdca4fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 aaf08cd6-b2e6-49ec-b298-6618790d90a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 b0d2d66c-6f33-4f54-865a-bfab1e2e8051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 683faa44-23aa-42d3-9fab-e81232728e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 d8e84681-9b11-4229-aae7-853c553946a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 f4ab849b-11d2-4020-920c-571beb4a3759)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'h0B88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #295 d57c3468-85b7-4817-a031-8711315603c8)");
unit.assert_eq16(16'h0A57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #295 bebe9f36-2338-4b72-b0c4-d8068d86e6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 9ad01cc0-6878-4d59-9fdb-0ebd6d98930f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 0f35f572-7d59-49a1-a938-bccf1dd77a70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 8d0d1331-0b6c-4411-ac8c-c8da7f3e7608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 d88c5c78-e39a-4315-bf19-584a7840dd0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 e0464468-1d30-4fe7-a290-18919b908bc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 5668f62b-3b02-4dd9-adc4-3b511148aa10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h087A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h0F99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #296 7f1fb76b-c005-48f8-b5e1-59f787011581)");
unit.assert_eq16(16'h087A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #296 f06904f9-c64c-4c8b-84da-6d6adca1ca94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 8b60403e-4db5-4795-aeef-6d54085a9861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 5879a560-01ac-4e27-88c7-09f20e74da46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 8574bcff-a6aa-43a5-b832-0efd4ce6a67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 3dd4f4e9-f267-4365-bec8-a834a819a66a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 4cdc39aa-bf2d-45cf-8281-db0a00746a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 5962241e-ec4e-4d46-9970-1c17479f625f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0099;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #297 cea32d2c-27ac-4b98-ae2b-10d4875eb0b3)");
unit.assert_eq16(16'h0099, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #297 29ea7316-878f-493e-8909-62996814e2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 04310c40-8194-48b8-80f1-e4ae6e3033f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 7761559c-20d3-4a86-9d05-094a7b7b9561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 83da0e11-1522-4ee0-915b-f76a7e65c43c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 20bb15ee-af1d-4751-8271-961c159cfa66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 3de9f161-7e85-4794-b8f6-4bf2557605f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 1b8cde3e-3a27-460c-90ef-ab791811b0f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0558;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h0558, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #298 87132b89-b9b1-4a55-857f-4944189c11d6)");
unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #298 3c1acfab-457a-416e-8cd4-2d97684d0aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 d70a7c23-f1a2-4c2b-857b-8fab93267221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 27e8da1f-65d0-4cb4-b9cf-eedc702605ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 9d10ffe3-b96d-4a64-aeac-eb7007b713fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 cb183d59-e702-48b0-a403-84ebeba5b36e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 3dd3a099-8266-44a6-a222-c658a9ed0f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 9f0b5001-5102-43c6-a90d-ec68ca9dd934)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0836;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0486;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h0836, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #299 1ad992a8-6930-494e-b9f4-dd9fd43ff1e9)");
unit.assert_eq16(16'h0486, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #299 070ef1f3-49a5-4737-83c1-c26c26172f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 f0bb8039-c808-4a61-be70-ff5d061ebfb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 92a5a0a9-9a33-49d1-9bc7-a90b4e479b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 b1ae25b7-ea8c-4156-a477-6871b86198ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 0a641fac-1c1d-45d7-a4b2-e10072456968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 e1ad8e6a-4484-4041-a34e-450e8b5c4a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 4a5ea717-e796-41d8-8fbd-54fc8bd88d53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'h00A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #300 bf6e874f-f5fb-41cd-9998-d245a45016f5)");
unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #300 5941289b-a8f9-42df-9ceb-41ed2f2e3a3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 bbe6d542-ecdc-4baa-80e7-bade6d9a29d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 1803a830-893d-43e0-80a1-506af6537a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 05fce23a-19a6-4819-8823-5ad2d2d3e2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 2560c49b-8cc2-4b9f-8726-611c8de249a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 2df524a0-c187-42c1-849a-6877d8a1ad8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 12abd3e0-1d71-44b2-9b2a-cd9b78912094)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'h0CD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #301 74e91287-9216-4f4f-8dd5-a41115542458)");
unit.assert_eq16(16'h0B8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #301 18d887d8-c384-4e51-87fa-f5e83ffd4ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 31ea7110-aac7-4407-bcfe-3757dcd242d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 94f4665a-084d-4170-ae17-664cf5c75aea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 89d24b3b-4dfa-4af9-9157-2c502cff381e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 da0763eb-3e9f-4caf-89dd-f86a709e0223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 8d1d8b19-e5e1-45ca-97f6-f0fde46aeb61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 f39e01b5-a957-4c20-a900-bc0b8ace6244)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0404;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0023;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'h0404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #302 95fa547d-d75f-463a-8d33-2324fe7f18b5)");
unit.assert_eq16(16'h0023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #302 109a2e03-4641-49d9-a45d-fbd6f1f5a6b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 f3cfa08b-e245-42d1-9d6c-7c627ab30765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 4e2e5675-9586-4da8-bcca-4bed178d6cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 745cc362-1dd2-40db-b18b-f6ab940e10d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 8dbda10c-944f-4d87-90ca-9db9d49d7770)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 9766fe95-3568-48c0-8c25-209fa60667ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 86fc0496-71d2-4cb0-99fe-ae80733ae934)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0964;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0599;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h0964, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #303 fd7b5d79-122d-4f40-9c96-b12b2fe4ad5a)");
unit.assert_eq16(16'h0599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #303 6fb7a879-ccf6-4f36-bdc7-b14fb93614d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 3bdcafb0-f661-40df-823e-a9b8817abe93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 45f7e7f3-aa10-4458-862a-0305bfb1ed8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 85ce1051-0604-4669-9945-3812f51a4746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 7ffec0d1-7979-45e9-baa0-779712d57b9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 3f5c2f97-6ad5-42aa-b553-a796ae6fabe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 13a8039b-07a1-4a88-a7a8-8ffdd8286309)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #304 bfd4a8ea-2eba-4b63-a19c-090b4e531c43)");
unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #304 df0ea9c1-d8ba-4c68-a2f4-716024716ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 b132942d-44e5-46c2-b7fb-fca7e09daede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 579e1f44-d912-47e7-8fae-3edd8979fbb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 7f3e6c2c-0ef5-4f46-aace-8702b179546c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 32fab962-e5be-441c-beaf-a816dd7424aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 822bd145-8508-4698-99af-7c035abe1914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 a8e632df-420f-45e1-96ea-7742ece698a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h07A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #305 0874c96b-32eb-450f-b1ac-bcdca76a0ae9)");
unit.assert_eq16(16'h0E9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #305 64442704-e852-4e4f-b17d-ecce3878f6a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 dfd3244a-9169-443d-aae7-773cc37a3913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 c42154c6-1e7a-44b2-a951-271627327f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 e50d02bf-4dda-45fd-a68f-29d217229c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 a51ecdd7-6931-4a6c-a265-7b5fcf1fb586)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 4548ec07-8e92-4d67-a1af-9a90f6112cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 4967e8b1-5843-468b-927e-5331dad026c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h0DE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #306 e4da08f7-f3d0-4369-8803-288474c618da)");
unit.assert_eq16(16'h0B0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #306 4da38660-17e2-4509-86fa-4e971c70ba1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 6bb89ff8-713b-45a3-876f-72fa554f62ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 0b151a57-2e63-454a-a4c9-cfa1750696e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 8903e9ad-a9c7-4b2a-84d0-83c86951cbd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 cb42c7dd-c8f6-4cfb-bac3-bc99fb4fc678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 ca8f982a-ed84-432c-ba0e-936160e1ea5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 92715459-cc5c-409c-93ac-fbeb8a0003f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0663;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h015B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'h0663, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #307 8718473e-3fff-4646-81cf-5ad5fbd6b0d0)");
unit.assert_eq16(16'h015B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #307 10a0159d-06c1-4f82-8106-3fa0ce75bf07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 6a212f4e-7c67-4e67-98c4-3e11c10cbc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 3b5dc994-0a51-4e76-9cbb-35bb29a550bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 2fede686-4076-4956-9067-c7ad5ad24687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 61c3f37a-427b-42b7-9245-8ff517273247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 31e8e997-fd8d-4793-ae55-c0041ec668cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 0b98444a-b1ec-43d2-9cb4-b19032dea0ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0463;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h0463, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #308 fb700743-35f8-48e9-bece-f663168cdf9e)");
unit.assert_eq16(16'h0B7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #308 ffd27e69-7722-4485-9e32-866b23c6e0b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 afe1a451-5759-48b8-b3ff-2f692e34885e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 315ec6d7-9dfe-4829-8f4b-72bd08884073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 b96b7fef-5bbc-42c5-9e64-4f905f10ba12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 e4459290-0433-4ece-aae8-f0d9852d4155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 60bfc8cb-e804-471f-b96e-68ee397b7cf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 a0d2e16f-3c49-4148-8543-c89f04f8a111)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0242;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h0F56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #309 047ba86e-6078-46a5-aef7-ed28a3c3337b)");
unit.assert_eq16(16'h0242, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #309 03ebf90d-fc84-43a0-a0c5-8c9b377c8e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 ef28974f-0dff-48d5-a9ac-22108c4083c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 fc98136d-ee5a-4d7d-8362-c068725c4d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 b15d9d99-db78-47fb-b842-ebfeee7b7539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 fb9eaf8d-fd15-4dbc-b7b2-730940cff4e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 fcb83893-ff31-4ed8-8f47-9d18c0c7d5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 0b6ad330-f87a-458f-aa0e-4bc329c8fc57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0423;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h04CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #310 eed970bc-1c32-42c5-8e46-667fab401c87)");
unit.assert_eq16(16'h0423, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #310 a08c6e24-e710-4b13-a3e4-b7eb45d20fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 28e07c23-21f2-4a4e-92ff-474af4510292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 6b9a819d-f1bb-45db-a236-ce46de5cff21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 369ac55f-6a2d-4328-8cd3-d9f86284fbed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 2782f07f-471a-423d-bd88-98dd8838e2f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 2ba79fb8-eff8-4088-a1ef-9258352939b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 6b9704c3-bd3e-404f-8061-18b9c82497d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h03E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #311 0459edff-d0dc-42d0-abd5-51f4d05c8a44)");
unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #311 d1712de9-9617-4414-a9e8-5eb88fd694d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 fb28902d-a238-45b5-b1f6-01f60cea6362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 6c68dbe6-840e-46e7-a968-055dae321a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 1d66472a-d21c-4452-b6b0-7321a3aa2144)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 70dd7f32-73ec-4111-a3b3-5ba7eb88b678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 dd160916-34ef-4d62-9614-fce33c08fa98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 f6a47de3-d574-43e3-963f-176059811a08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h071C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h085F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h071C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #312 7c747885-a341-4f85-937b-c236dc7bd4fe)");
unit.assert_eq16(16'h085F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #312 b839d473-3b64-4b93-baf8-14f592901d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 a0e84a80-b306-494f-8c56-c2f2c57c692a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 5e956c98-15f2-4c96-9988-7fc4ab2eb265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 0f7e758b-4bed-4cc4-94c2-1871790692f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 0e2bcc53-9130-4139-b383-ec011d279a84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 59a2a3c9-e18c-4a86-bae2-77890f5a66c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 653472f4-327a-4b6b-bc51-f92f7e2c9ad8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0415;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'h0415, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #313 9560396e-d4ac-45ca-9631-6feb5140c7c1)");
unit.assert_eq16(16'h08FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #313 507d3a41-7241-4454-a96b-f4b10e029d38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 cca67271-ecd6-4708-ad69-96ee141841f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 de33c854-aa77-4c39-a0ad-763f24cc08bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 97171364-c873-4621-b9c5-6fad35af9854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 303a0d21-b36c-4138-a507-d64f565f2a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 808068e3-56d1-46d6-953b-577cd32cb777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 c7b95274-46ad-4da3-a593-bd27383f6dc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h0DD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #314 fc20b135-5e4b-42a7-878a-fa6822ec2d74)");
unit.assert_eq16(16'h0A11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #314 a42e48cc-4d2c-4403-96e6-3fc56fd00441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 13a10cb6-50f8-45ed-889d-864317adb5a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 17f76b14-4394-490d-8dfa-948de583face)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 590fc91c-7fc1-490a-81e3-b446c0132a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 44ef22df-cee1-408d-9641-56e6b3f4dc1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 e7db4a09-0fc9-4fbd-a082-965556ba87ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 298c439d-bab2-4418-8ee1-e3707124d388)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0991;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0573;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h0991, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #315 f1854ebb-6dbd-4d4c-9fca-46f46280775a)");
unit.assert_eq16(16'h0573, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #315 e3d1b6b3-de0f-4e0f-a80a-6e9b209ea2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 c5fbb0db-dfd7-4a9a-a2a2-6a9477da2986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 3c254bb0-4e3e-4eda-9ea7-7fe77b90293c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 7197b692-2a07-423d-9e51-27b8fb3aa942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 f2c3faff-0d61-4520-bb0b-a8897e7b70df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 0801a692-8f97-4755-a307-55786278ba8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 6838ec45-6c58-4edb-8f18-d5e1a2e0d2b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0873;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #316 55767d46-5b4d-4ab5-967a-4f31b21e471d)");
unit.assert_eq16(16'h03FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #316 a5e0c7a3-a8e8-4edf-bc0f-8746548a30b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 f1a7dbd7-ba58-4de0-a760-f37cab1b82cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 9886ec07-8091-49a8-a2aa-2bd150b1716f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 9a41c4d8-8635-488b-bb9e-6c63683be6b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 d10f477e-7ef3-45dd-bafe-ad9f07dd4695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 c8d87671-a58a-4b70-aebf-92eb07e3ec24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 c601fca8-a995-4600-adf9-514743b3adea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0775;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h0775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #317 47266ea1-94a6-4bac-ac99-496b43f70733)");
unit.assert_eq16(16'h0FBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #317 9eb380df-6590-4443-aca6-1425dbb55cbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 9330c3e4-3892-409d-ad37-72091f6ddcb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 a20f6710-f09b-474a-b9ff-ad8b635c01f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 482fa76c-d3d9-4982-80ac-f157f945a94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 679e36b5-86d7-4efa-814e-fe011fbb51d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 a20614ee-9666-4ab8-b2c0-17b97892b12a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 719aeb6b-2598-442f-81df-699e57bbf3c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h08C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #318 17260447-a8b0-4337-ab04-73cd0be6d45b)");
unit.assert_eq16(16'h0E46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #318 41164f62-fe39-4ced-b950-a4867ea5f7f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 3f77c3bf-3fbc-4d4a-9588-849fd0ab4f14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 7eae3ea8-3748-4157-b33c-ad5bd6cf2455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 d488aeb4-16fc-46fa-a9ac-fc3671eb95f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 fd89568c-274d-4c69-9104-8e18b637b929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 868e1069-c391-4313-96c9-be244e353427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 295cb201-0ffc-4571-8880-5e9678d79b7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h031F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h031F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #319 e73a3e2a-de5e-401f-9205-7ad9e841e146)");
unit.assert_eq16(16'h0DCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #319 0448af88-3448-492f-9b98-dec70793907b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 e6d4f1da-def3-4394-b907-1518984d4430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 035f9e11-6b21-48f5-bb38-d765cb86c46d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 a503eae2-aef3-4d66-90aa-20fd99907283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 984707e9-d9f2-4f60-93ba-72ef0a5d86e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 e70e9a47-1272-412a-bc69-27909d853ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 172a3ee7-5fea-4b44-9b61-4ca6a26a4499)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h072A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h072C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h072A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #320 c007ea95-544b-4f9d-9fcd-1fcc836395a9)");
unit.assert_eq16(16'h072C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #320 3074f3d8-d0dd-4ebd-93a9-a1fadd387dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 68ee6a93-ff1a-4f8b-8b80-4ea2cceb18cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 2f8d5fc5-1a80-4afa-b71b-89e18878ae7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 dba3d550-24ed-4c11-9cbf-5951a3d8f499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 a891a1e8-001b-4e14-8a70-716657f40747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 c5523352-6c5a-4944-bfbc-4aa31a5bb9f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 7dad6b91-2157-4a68-bc87-5e3fea192d89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h069D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h069D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #321 bd23e58a-cbbd-46a7-ba83-1c1278cbc592)");
unit.assert_eq16(16'h0A40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #321 04022e61-eb5d-41f8-a7b8-0f9fdbcca76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 574b8fe8-8581-4b50-ba36-070ac9fb4750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 9bb6c80e-8581-401d-a55a-0e0df0fd4aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 e0e7d22e-00bd-4ad6-b757-3a8fd78c1d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 80fe2439-7c52-4cae-8819-14be36952c03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 9037817e-7112-4799-b319-9613e56fb70e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 6d7dc41a-ee26-4266-ab09-82c038303427)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'h0DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #322 4ffed2b7-587a-4012-89a8-38d71e735cdd)");
unit.assert_eq16(16'h0481, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #322 ff55996a-3e5b-4ad5-8886-de6f5abead57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 6674dcdc-a898-46ed-ac5b-2d5d6bb3c131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 c92e3ad5-9bf0-4ccd-957f-9b3a53b6582f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 c171be31-98a6-4ed5-bb08-bd2f8d237f61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 36a923e8-38fc-4037-8f48-ebd91412fa81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 b482ac58-f938-47cf-9139-8be5504810d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 3c84abde-0e7d-4e24-999d-fe496d86871c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0630;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h0630, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #323 a9867f6c-74b1-498e-b41f-ba3f62e40c92)");
unit.assert_eq16(16'h0FA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #323 0b948075-525b-4690-af45-4781551def39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 d9187597-07a3-43f5-8b65-0e60cdfd6cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 7ec6bdeb-9ce5-4e4c-8cf0-b2ae7d7e4d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 814b6699-dd25-4674-b856-e7eb672aaec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 54020899-c10e-49c3-b5a9-34c77abe43e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 b7ab151d-aff6-4504-8598-df9503720c84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 52fc0efa-66a1-4b01-bce8-54b3d5f4eef7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h0E72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #324 6e90dba0-8fd9-477c-94f0-6601b6769375)");
unit.assert_eq16(16'h0D60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #324 08ef17c4-20a8-49d1-a9c1-0157ae9f2261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 446b83f0-2dd3-4ced-9bd6-690c2e2f0d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 8d3e64f9-87ff-4437-a871-8f7e902e8ff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 f28c592a-056a-4a1e-9b80-cfe136a28dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 2c47d0d2-cfcd-4789-97fe-23a905171ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 10f13efc-04be-42dc-a3ea-079a81033202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 b44aa7ee-0132-4ead-a7d5-13e68bb465fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0584;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0453;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h0584, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #325 6c50c28c-3259-4cb1-a319-172ab745bda1)");
unit.assert_eq16(16'h0453, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #325 c98f98d4-c713-4727-a245-465ceffa5204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 80310851-34ac-4884-a2e6-f37f8dbb8500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 a9da7a66-44f2-4cba-9922-b1f55fc6b523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 f815c1c8-20b5-429a-917b-a4f9ae8fd148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 23fe8a13-81d7-43c1-9334-d6938d1fac13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 70bd3cf9-9764-4f6f-aed4-3810b1d4111a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 47718116-517d-4e4f-9c37-dbe408db5068)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'h0AE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #326 751fbd86-e4fb-484a-bf71-87dcebd71a31)");
unit.assert_eq16(16'h0DFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #326 4b0221c6-edfc-44e8-b92f-4ed79c641798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 a35154fb-0a56-4c72-94a4-a0dfe9f13ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 4cad2761-876b-4ac4-89de-9731e0122484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 64806570-668d-41ad-a4db-ffd41834ceeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 9ca5f7bb-2282-4ecd-8a41-e898b078a25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 6f96d493-cf50-4962-9efc-7148a14c1640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 7285d748-f7ec-44a2-b5c8-f6b3522d305b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h029D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h0C63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #327 d76e20bd-b4c5-404c-9e67-72e451316dc4)");
unit.assert_eq16(16'h029D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #327 72440283-6ee9-424c-9b3c-135b18b926c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 49d6b6dc-f8d7-4c6e-b2a4-413293fe562a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 9ef75aa1-bbf6-44d4-937d-b317244a95b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 0c44e715-51a6-4858-8b3d-d33a13860391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 14842ca5-32ef-43ab-8299-455c449b265d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 1c9737f4-a06a-480c-afd5-01198658dcfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 27d62b9e-afc7-47ad-9f5b-6a1498528383)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0644;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h0644, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #328 f202eb96-1bcd-4154-8cb6-6bafc5d80eee)");
unit.assert_eq16(16'h0F1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #328 ece78191-322b-4b47-a827-a22837eedb61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 0bd5b412-f36e-4596-9f9b-93d10b6c3d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 3a99ec78-42b9-4a3e-8a61-b87975e47592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 05b109b6-99d6-4c1a-b139-a61889684f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 986b7638-e5bd-4b76-8c8b-ce1200d5ac53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 19f70c7c-9af2-4557-86e7-e4aef445f276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 0a5626fd-5a93-4a95-9aa9-0d28a4da004d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h019B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h0B9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #329 b0190f0d-f27d-4e15-b172-154d1ac8ff25)");
unit.assert_eq16(16'h019B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #329 7ea01ae7-e751-4ca0-963d-306163f614c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 57258d1d-250f-48bd-bd40-78b150afe18e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 03819562-01d3-4ffe-979a-55e83974e092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 352afe3d-5df1-4f41-ae75-aab1c5a7e407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 e1ffbaa7-ae51-450f-942e-983d94365a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 46b2f7ea-f837-40e0-9e07-0f4b276dd9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 c3cb2a17-0891-40e7-8e5b-bdcc3ecae405)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h0D7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #330 0fb698b2-2438-4ad0-9606-599f6aff79f1)");
unit.assert_eq16(16'h03A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #330 b91b90a1-096d-4e1d-837e-a956688b0f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 e53430e9-a607-4d19-aeb5-4fe386772bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 cb91c73b-ab29-4dd6-a1ff-12b9c5bde1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 bb0382df-02a1-48e9-8ea5-1992154f3feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 e80f186f-f608-4562-af35-ca9a3c9f6a8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 00ddd00b-1420-4afa-bbac-5e8a16e9d0e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 bba19ea6-f0ad-42b0-a8a8-db6476b0c98b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0485;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h0485, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #331 e302c1e8-2f27-4467-967c-83d1fa0faac1)");
unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #331 c2567f19-1c83-4435-b7b2-a9f63b4cbf93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 59cc54de-95a6-4e9d-a009-3cf2a0aa263a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 45ce8871-5909-4be4-855f-be3e9ce0b1f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 d055e13d-39b8-4f97-97f9-8c4ede612f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 47904c7c-cc4e-4644-96fa-68ed9623843c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 86aa256d-f132-420d-a85d-5a39c37a4e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 f72b1d05-56a4-4e53-b100-c7af3cc88653)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'h0FF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #332 abf82dbe-1d45-42c2-954a-d7c3cbe4f951)");
unit.assert_eq16(16'h03D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #332 2dd73e02-283d-4966-aeea-daf0fc5f19aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 a80bac98-c3be-498c-b7f7-434e3e75692c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 aba5ec63-ccc6-4979-bde9-7b9b0a519436)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 127e884e-f2b3-468a-ade3-685d3f208c06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 5fd5bf65-3386-47f0-bec6-6d459774a50d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 f31655f1-f53c-4cba-997c-4e0610497070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 f00996e6-eab7-4a74-8fc8-baa1de7984ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0944;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0060;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h0944, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #333 0cda581a-a890-472e-ac9c-ca7e740961fc)");
unit.assert_eq16(16'h0060, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #333 a38c0a05-affe-43d5-95dc-84dbd9731b5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 ce64880c-f974-4090-b1b4-9d59b0abf0ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 871a5505-b3c3-4d5c-8edf-38a9fe4e8e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 b19d472b-6f52-4e21-82b2-1b2928892ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 138bf7d6-0e1c-4584-a479-c410f4b76302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 68fe1d4c-4445-4706-a10f-d3e72e4ee4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 f4afd960-6da4-418f-8dfb-7ed747b96e08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h015E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'h09FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #334 7ff12c89-70f4-4de6-8145-cb12e3626c62)");
unit.assert_eq16(16'h015E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #334 4d4ecaa6-fba8-4ed8-a8e5-748c94a18a1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 48c2ad32-7b28-46cc-9003-462bc9486a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 ce112376-9d9e-4838-9d21-82deb8042bdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 b83507da-41b5-478e-8c04-933db88c987a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 0a9e431d-e09b-46fe-a9e0-3e9921c35654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 d80a786f-3e75-4457-8383-7d81ac0558a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 81f4ae9d-c7a9-462e-818c-37dd6dc869da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h093E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h085A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h093E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #335 7b75fecb-4554-4608-8d6e-f7f0f9a5d13f)");
unit.assert_eq16(16'h085A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #335 f3da82a9-7dbd-4c77-99b9-0ec3153a6fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 749713b8-8907-4233-a1ff-689b67fc4976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 f7adafa9-537f-4095-a362-7be0fe051c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 a50ec9c3-7956-4fa4-96d3-0f98d6fe3589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 5a324d43-bd41-49cf-81ec-a199f9d6b1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 f5b2d91f-c5f0-47d5-80f0-8a23d5b57edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 38957b81-b23b-4dbf-af8d-922aab9ba54c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h014E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h0BCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #336 5413ba0b-a649-4180-8995-be1d92e59cae)");
unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #336 3c07aaa5-c666-4a68-b79e-0af9ae8301eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 b3c85d03-c13f-49c1-a62e-76977e40dbd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 b92f6c6d-6e97-48bc-961b-e08a6575ecf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 d7395251-aa6d-44d8-891a-c0c19b3ea3cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 a0d0a57a-de31-4e2d-94b1-7bfd4e6fd6c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 44d67dd0-4cbb-4e68-9543-8250cb5808ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 404b42ea-a55e-45f0-8e0f-70822a7cf255)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h036D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h036D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #337 3c4f1037-3587-481a-934b-0095a7e1d555)");
unit.assert_eq16(16'h0D1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #337 4861c71d-2a3f-482b-ab16-05fcbee4f650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 9ad6a82f-6b83-406f-8cc9-9ee1aa5cbd03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 86a1f593-f47d-4799-9b8c-59b0101b827e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 fa5c88a3-c798-445a-9b62-7fe51ba391b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 e6131caf-7b33-4a9f-831b-cc0b852c650a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 9485fa54-f5ef-422e-87cb-a00889ab99b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 faf64094-0ccb-4305-b6da-c31b5e9b7da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #338 fea28b32-faf8-46df-9347-509acbc5ba0c)");
unit.assert_eq16(16'h00D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #338 c0ab6170-b3ba-4d66-be96-d3d745aead3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 65e5d52c-a156-4170-906f-edecb04e4e2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 ecfe0af6-aa7f-4a88-8996-b449232b7a77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 688ce995-8e82-4f9e-a018-13895172a682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 15be073c-174f-4c3a-ac73-26fee66d2a4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 d0bae9e9-5baa-478e-85ca-cbc83da44c3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 9b042918-8baa-493a-a6ae-d738a96e9cbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h04A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #339 7beacedc-569f-4be1-9afa-d55b409fdbbb)");
unit.assert_eq16(16'h0F54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #339 173182a8-ecf5-4b33-beb7-3a96931a6ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 983b38f3-1d66-4d3c-9825-b7a6fdd117a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 88f74677-2580-4585-b4ee-85199929c8f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 fda818d4-a2be-4fc1-a084-293fcb6692aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 edc4ee35-3b0d-4783-81ac-4242d878afc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 50a775bd-a9fa-4dac-ab79-7080ecf3d4a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 5f3a950d-1f1b-443d-b49f-2cd6e39bb6ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0987;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h00C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #340 0ffe3fb9-7ca9-4907-a09c-9db41c32c288)");
unit.assert_eq16(16'h0987, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #340 727ebd9a-617f-4eae-b9d9-79e90367f1fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 b1e079bf-9be8-44ff-bf32-2f9f2347269a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 a11cd766-691d-4f6c-b013-183b4b2f7730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 cd478af5-6f19-44a1-b7ca-32ec1898a226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 d6151b72-657c-491a-8c85-f112141667da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 6a68b4cf-3b03-4cbf-8251-c9f85ef8b690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 63ce1c24-1796-4abc-be87-02918ae73593)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h071A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h085F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #341 e4b98a68-f7ae-41e6-bbeb-d7389fd8cc12)");
unit.assert_eq16(16'h085F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #341 01a781ff-b615-4a31-88b9-aae0f0cf15ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 b2fe6792-2ac2-4964-a049-125c64793ada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 e6304197-c367-4efb-95cc-76a8fcee2d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 2848747e-e536-4493-ab9e-e5cf31451fbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 ef76d798-da61-4752-b0cd-e9483f0eed3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 96a1dffa-bdec-452a-82fb-8291b0bc8b06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 538fcf11-559a-4293-8882-493962f41ecb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h02A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #342 a5fd8a17-2d06-4d89-aee6-eedd590f4f14)");
unit.assert_eq16(16'h0A17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #342 8b4e447a-2d53-4a08-b705-0914e40d9897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 41352c23-ed89-47c1-9287-a9c4436721e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 e806f96e-402a-49f2-8074-6bad22f16ea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 81b967c7-27f8-44ef-908a-3eedb679ee4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 6abd17a5-fc4d-443e-b935-d7083d487849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 e9de05d0-e7ea-4721-856e-c2c11096a4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 c1337e0c-212d-41cf-aeea-8b83dabb9692)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h0E08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #343 d9ae3885-fc98-419a-877b-426f35754803)");
unit.assert_eq16(16'h09B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #343 abd20371-669d-4a6f-9576-0be7c6410c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 ee7775cb-79dd-43de-826d-504740d3b883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 eb625b1b-e999-4fc9-82ce-1b8d3456aadf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 198ea175-03a9-43b6-ad36-76d2a2299a8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 ed38e4a1-a7f6-4b55-b42a-b6902e38c61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 5eea8b7d-c073-492c-9bce-93bd49193002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 a03f7759-8a4c-41e1-9693-8e16d0a1324a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h022D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'h022D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #344 abc700d0-bc90-44c8-84fd-7affa1a68b29)");
unit.assert_eq16(16'h0DB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #344 5157b7b6-afef-4fe6-a55b-e3cfd72aa261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 c4b5524b-cf2b-4147-8b10-97aacae5650c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 de1bcd86-94d4-403b-a91b-24a98ca4c425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 46edca48-7d02-4551-8715-c62588747362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 08b2fd39-c957-41aa-ba84-2b6f848d614c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 0a89669e-89eb-458c-b2fd-9b4284f10e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 7284e1bd-9a20-4da3-9e5f-2077e6677d41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ECE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h0B52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #345 f265e88e-d5d4-4a04-9aa3-6c5438a19a7f)");
unit.assert_eq16(16'h0ECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #345 4991cf64-33d2-40c3-9667-a72d8ecfe2b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 fa7770b3-bbbc-4c0a-8f85-088c6eb2455b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 a6d1aa81-82db-41db-b90c-e100c941554b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 290a59c5-0704-4534-a57c-fb445659cbbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 6aaf8924-442d-43f6-8951-87b454a3f994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 ca2fef57-4bcc-4c37-950d-c005946dccbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 b1935038-24c6-4270-a35e-bf9b3e585b99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0831;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h0831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #346 96670ffe-cf47-4d1e-b105-78076a816dfd)");
unit.assert_eq16(16'h0FAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #346 13c0346a-60e2-4694-bd80-fab5817f2ced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 b0f75e17-6588-4d24-8edf-d42fcecaa50b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 22f33dc6-a651-4f2a-a968-be714eb7ace2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 8ebfb3bc-c071-4c57-bd25-7c71f6bc54bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 ae072953-92e8-41fd-be8b-de81653f4cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 c1eb9066-2382-4f79-be89-2e4e7082e42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 c7e4bea2-73f9-440f-be10-574c288dd055)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h035C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'h035C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #347 21101ff8-371f-4ad1-9d98-d47297301eb4)");
unit.assert_eq16(16'h0EF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #347 d6ec6fa3-e667-455b-8e90-3a11d291fb77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 c69df6ff-40f7-46be-9eb1-b976c4067496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 9f409bda-8f03-4c6a-a249-0b5ac0ddb4b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 17058944-7d58-447c-8c0d-e8996ead5282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 821c76d1-b414-4044-85b2-0c7aa85182d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 2ae1d4f2-0e7e-4df0-b99f-bf0b6267fd11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 7ebd61bb-80c9-490e-abcd-8fb912f1bdaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0177;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'h08D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #348 8cd4a3cc-937a-496d-a9f3-a4d6122ee768)");
unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #348 008735b9-73c5-485a-a097-e2ed3d840998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 51369789-199a-4b68-bae3-b85bebafd6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 bf85aca3-4c79-47a3-ad67-ed951f888572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 5bb00020-316b-44d6-9544-9320d486468f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 e11e39f3-69bf-4a25-9639-276b794b1ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 6178b5fd-a2a6-4374-b468-641d3915f03e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 cb58da1c-8b77-486e-b683-09ad006058d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h010E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h00AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #349 ebf346f5-eb65-47ba-b149-f33197a1614f)");
unit.assert_eq16(16'h010E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #349 03a45dab-3981-4604-8fca-4e622444c6e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 65eb4d4b-3d51-4116-9832-858dab622b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 7acb98f2-1d07-4789-ac4b-99ead9888345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 446e263f-dcd8-4028-88f2-59cd3fea6eea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 cf5b6fa6-fc0e-4d23-9df2-fb3c7f04b866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 878c367a-e9ea-4d24-876d-d91861b23d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 d9b3756f-73c6-4371-be3e-36238a4da65c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0085;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h006C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h0085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #350 b95f81b9-6645-47be-a3e0-b971cb3fc404)");
unit.assert_eq16(16'h006C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #350 a8c87dbb-5c78-4282-9a34-fd87c360b670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 96945f71-6675-4a3b-bd2c-62b1b278f728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 2f2ad748-6c30-453b-989a-0f411dafa2e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 dc194c2b-4eb4-45e0-912e-c27fed2b8f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 6a7d2f7e-2920-435b-a560-e26d2c4febe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 63713613-14ff-4889-8834-80e6d231bf40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 657c80a1-ecaf-4cac-8de8-f7ade4067ef2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h095E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h04B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #351 8ab5ce4d-12b9-4289-b07b-21f23fd69e33)");
unit.assert_eq16(16'h095E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #351 91653cf7-ed94-4977-a010-445524d957d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 036c5f61-2d7f-408f-8c7f-d8576e8e3326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 131ddc1d-c4f7-4470-977e-984f43e469cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 5275b9f5-16dd-4e29-91c9-d453821edc75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 eb465db2-48d5-4c3f-a96a-d0ebc89fb479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 bdf73746-2c15-4820-ac86-59e21f664a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 fb182e87-61e0-4655-b372-489cac0220f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h016A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #352 62bb48dd-3de8-4339-81e0-4ba4afdd1595)");
unit.assert_eq16(16'h06C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #352 48da85ab-b9f3-4cac-aa6c-6e3fdd24c992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 25af735f-c555-4b04-bbef-62148fe9aa19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 b59b5f38-6f92-4f82-96a3-b371efd1aaac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 12f36e72-90f5-4764-8a0c-cb001d2d42dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 88e43192-6b7f-4f4b-aa9e-4a0e287b38a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 92b64b3a-33af-4fef-b456-ab879baef68c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 43ae7ed6-cb7f-4638-8185-78b6cd545c2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h00EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #353 33f6b240-6f24-47c1-b0f8-5369889e8cfb)");
unit.assert_eq16(16'h0C1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #353 d8a7883c-13f2-45b6-aa66-532e72f09841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 95f0d32a-9fd0-4948-bf35-af7f0b35d399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 cc1d7482-b7b2-4f51-b726-81405723a986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 95b8a77f-c50a-4d42-ac40-d7b8a7d75413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 97225d99-e24e-4dc7-94c4-d9dac28031af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 2a015109-bb66-4399-8b8d-f8aa04332831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 a2d4b2f5-4e39-47c8-be94-4df9e8386c79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h084D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h084D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #354 78b78ca3-3d5e-4f57-8404-a9105d203499)");
unit.assert_eq16(16'h0DD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #354 2c95618c-8481-4324-8d06-f18f177120d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 ce2d98de-02a1-4795-85ff-7f7cc9e5e1ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 1f2a7c5a-5077-427b-ab44-a7ebef047768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 d8aa238c-7410-45ff-adee-9ddd59eecbf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 7aba8583-39ea-49dc-87d0-91af76f33768)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 3af740a9-5c42-41ee-8297-53ecace2700b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 5872c57b-ca09-43c2-8ff4-d3548fcb99e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h04E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #355 352e36af-1536-4c35-b421-7123b4a5f1b0)");
unit.assert_eq16(16'h0F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #355 d4fe70d7-0e9d-4dc3-98c8-aac483ea29bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 d438b84f-4e9d-48bd-9269-684a4572fa57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 de902b07-9ab4-4ea6-ab0a-4bb90dceb97d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 461ec9f2-59a1-4a7b-ae31-437b18abd239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 fd39eaac-e19b-48f4-96f7-fbbf1bea8c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 d829eb35-13d8-42fa-96ec-049180536430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 7fff324f-ab00-4371-a8fb-17e4d6af257c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h0BF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #356 ff58dd66-cceb-46ff-972e-8d6fbc75301a)");
unit.assert_eq16(16'h08F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #356 e465a879-8a39-41b4-9668-0391f0646024)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 500ece9b-fea4-404e-ae5b-8f7c9b9da30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 0290790a-fa65-4e84-a4fb-07b8ed4aeb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 f2c1a761-3df8-4ade-8f67-269ccb7c01d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 2d071bdd-c14c-4c2d-8d95-8daff2446f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 3f230af1-5847-4451-b434-8fcd979cace7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 838225e7-9282-4fce-b2cf-624be9a78e7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0367;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h0367, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #357 d183faad-9b33-49b5-8d19-e9b15e3694b0)");
unit.assert_eq16(16'h0F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #357 13081142-8076-4d10-a6ee-090813fae2c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 2cfa382a-dec7-4491-949f-33ef730455c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 7a2e6e7b-68e0-4f27-baa8-0ca63f7dc454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 84a2ddf1-6ffa-433f-a2e6-ea708d3acaf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 b348c614-ac57-4d22-9e10-f21bf88df37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 c45236d5-415d-4d3d-be95-0473313221c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 48955f35-d062-4134-8d45-c626a8312848)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0862;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0964;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h0862, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #358 06eedfd8-bec5-4d61-a343-7e5052e3119c)");
unit.assert_eq16(16'h0964, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #358 57563fc8-a022-4228-af75-ff733d085182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 d45de604-e50d-46b6-8f94-78fb70e3216b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 e7fc07ea-d4a0-43f6-ad15-72a07cef9146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 cda3e986-a3d5-4b4b-808d-a584be18db4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 b2db25e1-6feb-48c8-8520-1a42054c6014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 2f818b1a-3c8a-4113-8b7b-ab1d5dca69b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 66a9b48c-ad0b-42f3-9494-99f655c4f876)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'h03F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #359 a72a4fdc-44b2-4896-a20c-3cf854d96c72)");
unit.assert_eq16(16'h04D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #359 03b349e1-b781-4626-8f47-88d3a2a599a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 74f3344e-b56d-4542-b2cd-96c8049cb9ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 99d7ea4b-0c58-4c8a-b378-e59bfc91a17b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 654f1b1d-d6c9-4c54-80e1-c5170be18dcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 022db2e5-4dd1-4f9c-a5fd-3f07a2aeca71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 f0166edf-d9a4-4815-a129-6ca86f88922c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 c54ca448-45e2-41b2-8939-dcd784c98945)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0862;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'h0862, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #360 946923b7-87f9-4d23-9413-c2bbd41ed027)");
unit.assert_eq16(16'h043F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #360 c8a6ef12-749a-479b-ae1e-95fc27d4d70b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 d4090673-afd3-4aeb-a1b7-de4073b527eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 00579ac3-3179-4b5e-9f62-f5c9e1ba88f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 e1934a64-12aa-401a-a9bc-b39eeb87e21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 fa4b6fe8-621e-4243-96a3-3a32d5b6dc7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 fc7f707b-0ac0-44b2-8574-4186901e8dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 372e9eb8-02d1-42bb-bf2c-8ddda82fd7f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0302;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h0C92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #361 1b84e010-0a27-41fe-9490-0f3425ec3663)");
unit.assert_eq16(16'h0302, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #361 ccc2bb23-0bb8-4a30-a263-4da2b80869fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 2ed66545-ecd3-4b8f-be88-3f627274d86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 ed95b41d-9808-4ff5-afb3-62cb3016deb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 c2910eb4-90a9-4e25-ac75-742f353becf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 fd97b8b0-4ddf-4fc1-8966-f5104cd6915c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 c9029821-83b3-4d3b-a23b-a2bc1c82f61a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 2d422049-e748-4a01-ba2a-c99c9fad3a38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h0AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #362 5ec36510-26aa-495d-a4aa-4093a4819dfc)");
unit.assert_eq16(16'h0A95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #362 0fc96a73-c03d-473b-9fee-385a07e0c34d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 74a2dac1-a9e7-4e6b-bb10-f4816a0c4c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 4294942d-8c40-46de-8aef-4fe7a5538dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 a3169a05-0320-4f12-8953-1be054885a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 a36e7fc5-15c7-4fdd-953c-07459a10a18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 0c19cbef-2ac5-4e9f-a22b-0b6de9852d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 ca6333b4-3fee-468d-a27e-5d28001ac6bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0915;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h0A3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #363 0ff1c738-aada-4f54-9e0f-1f4848c1eab8)");
unit.assert_eq16(16'h0915, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #363 d1a6ad62-fddc-4593-9edd-e6d0a8981a87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 75b02e6b-53c2-443b-81f7-e983bf933bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 5243ca0a-8c23-4221-84e1-b2dc74b32cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 296bbf43-ae07-44f2-8013-6621dd0d094c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 129219be-be84-49cc-968b-15b629c7d8d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 740103a9-1f50-4685-b9a7-faf390e80e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 1966bdc0-5c78-49d0-b5c8-eb39101f8417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h0C37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #364 2db859a2-8c2a-465a-bfa6-cfbe08ee2a89)");
unit.assert_eq16(16'h07D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #364 16ad82dd-7450-4043-a29f-0fd3394b8a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 0013e54e-748c-4d9f-b082-5008fdcbce33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 f893c461-ca82-4e1d-acdf-203d4ef49c3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 e71f4731-7400-4d71-8be8-a8a335bf181e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 19c567f6-828d-492e-a6ed-aa2919bccd66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 93f082b1-77b3-494a-b850-ce6c9a62621e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 afe75a6b-1ef8-414e-b14b-8585e522869e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0404;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0098;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h0404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #365 f563faa2-041f-4d09-a84c-2ab44fa67276)");
unit.assert_eq16(16'h0098, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #365 69cc9734-af50-4e7f-901c-a82dda9d1619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 7e07f818-0e10-4f11-af31-18b46322c071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 8a068794-4925-4c7c-8b7d-40eacb848d75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 84e44910-14d6-4da1-9796-16b75765e05c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 ef58abc3-8e88-40b9-bef9-a71df85a7d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 e7c7513d-4c70-4e41-b323-802cf9538c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 092238b2-06b7-4be0-a5aa-b056fbbee97f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0047;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0348;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h0047, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #366 6f26b1f5-c5d3-42c2-9c3c-03350906cef9)");
unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #366 5351aae8-ef90-491f-b97d-5b32b1568d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 41fbc063-fd16-44a8-bf02-cf348bf5c883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 22e220e8-7a8f-453d-bb9b-986aeea2af2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 e76684e9-37ba-4570-9cf0-bac375a0833b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 4d1af938-53a9-4651-b3fc-da425446111d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 5edf4ba0-3ed5-4ec6-a269-797081ae4703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 ca850128-d8dc-4909-803a-1c54946d9ca2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0246;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #367 d3219cd9-c36c-4dc2-90a0-e16533f77c00)");
unit.assert_eq16(16'h0246, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #367 2be324fa-c1d3-4010-9026-a1bf9159e6ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 0f7480c3-6dca-4a26-915e-3b3e44269f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 af847f55-d848-4a58-86cf-ae03dabd6332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 126c2cc6-6dcb-40a7-bc96-8790c420ab98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 f3d01e59-7e12-438e-82de-d84d93a1eb71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 40f541ae-e62e-4311-be3a-f40478d4d73b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 f5c2c1c1-e9df-483b-8750-ffcfde60ccf9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0362;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h0362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #368 682b1c46-cc04-4019-99ca-72abea173cd7)");
unit.assert_eq16(16'h02C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #368 957c3976-429a-41e6-8714-d1d6e1e3ad86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 5de8b3d1-be5c-4fcc-9b27-e586a48d2396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 c56247e6-74bc-49ee-8c41-f96d193f1795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 9f83a57c-b90c-4f7b-aaf5-6cb94a9b8789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 2a179d71-cae2-40a9-9d9c-7d84364a3c90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 cbf29aef-a3f3-4d6c-a8b6-1e238e6eeec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 23b220ef-9f3c-4996-a0f4-1870fb65d50e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h014E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'h0EC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #369 8a40c139-1016-45b5-9733-e8a38b7d8a22)");
unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #369 6ead7e85-f417-4eeb-8aa0-aa071fdc2d2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 9e1f5f37-6900-4d75-9fcf-87e212c7232b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 1aad933f-f541-4ea3-a6b6-e268009d7a62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 63da7fe8-fedf-4cd5-ad88-81252628417c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 0c64f3a5-72e0-45ec-9e51-284c5ae25d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 6cfdef59-9f92-432a-a14b-9e406ad4abd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 f1ca09ed-1743-4b5e-b9b1-513bc5943d4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h08D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #370 5f9ad01b-7de8-44d8-afd0-679bed095e07)");
unit.assert_eq16(16'h02F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #370 99af4311-2375-40fa-af5d-41cea3018bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 8f1f1693-a46a-4c34-ba7d-8e2b5ccbc960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 bfa75684-a869-48a3-b6c3-61997bb255a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 8fad4437-4055-48d7-98c5-9da285469d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 7748b95c-520d-4167-9f20-8a046c8b43e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 c2ea85d9-1a4c-4c59-bd5b-562f5d1acb1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 eb78fe78-8845-4ca8-a7e1-e25a69aee30c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h0A6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #371 66bde6f6-2022-4262-8dfb-e60dbf57fe79)");
unit.assert_eq16(16'h08E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #371 088a04a2-9f25-4543-ab91-3bca439716c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 742baac7-7484-4785-a5f6-328c9bcaecf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 359a72cf-345f-439b-aba0-cecb587c7649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 a23ec5e7-8638-4573-a2b4-2f6372961750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 f703f309-c5ec-4127-b403-0c1a61ca353d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 5980a92b-1839-474a-9247-8a2788f92c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 08dbe818-078b-4a4f-a84b-360be44adcdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0859;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #372 f218d196-000a-4a37-93e5-8f511e86f447)");
unit.assert_eq16(16'h05B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #372 0d938b65-a48b-4a23-bbbf-6f2ef3aa30e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 8055d646-6042-4857-b3db-8846b1643ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 98ffb278-8062-4983-ba51-22d07fa3fb01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 684146d5-0d46-4386-9153-c2fb5a933cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 4162318e-f17e-43b5-a797-d7079f245215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 84e7f21d-242c-4ab8-91cb-153b8ffb46ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 4552a90f-79f2-4430-aca9-2eca286e78f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h07ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #373 db694156-6630-40cc-9a17-7b74f178036d)");
unit.assert_eq16(16'h01D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #373 aa0c149a-7084-4a04-90fb-fc36470a0312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 3541ca42-5c14-4f78-9151-a51149337b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 8bbc5c1b-aea9-4352-ba5c-d7959790e12e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 0bb4eae6-9b8c-47d3-b20d-db83d7fc06bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 166f7a86-979c-4bde-a431-91bb04c73837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 b44d6caf-2bfb-403c-ab49-288be921c974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 50fe5e03-d68c-4971-95f8-6ef63aee5945)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h027F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h027F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #374 722c83e2-3df4-45d0-aa7a-c5d04f76572a)");
unit.assert_eq16(16'h0DBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #374 6189ac01-f9b1-472f-9b72-82eb84b95238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 dd1d9d66-b8c4-4681-b324-48c42019878c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 2e920e62-dcf9-4b99-b439-f55a629bd6c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 d377173d-9424-4b01-b15a-886056195c24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 0a9eeac1-5d79-4bc8-b950-1e660f51f28e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 cdf0cd56-3ddb-494e-b353-30298c844c89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 e27ba989-12c8-484a-81ba-8418ca0537cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0152;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h0152, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #375 033c3cb4-38d8-4d9f-b5d4-01490e57f6e8)");
unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #375 24250420-5887-4202-a2c1-656bf1312930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 0e672973-7ab3-4dd2-b760-f453a396e6f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 01616c9d-204e-4834-8965-7c28f1730937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 faad0488-6427-4ecf-9181-c0d7fba8b7f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 20b014cf-dcad-4eb5-9ec8-06bb2a02cb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 2b811446-3add-4fd1-a485-aebc78d7efdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 aa8bfc1d-cf72-4bbc-8804-1bc9545571b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0854;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h0F2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #376 f5a829b2-5822-4fde-aca0-6785e3673f6c)");
unit.assert_eq16(16'h0854, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #376 f15f0e47-c3d0-4eff-bd3a-e0710ac616fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 b57a5847-ca52-4c28-92b0-034648d9da74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 804faaed-b587-4a85-8ec0-52b78cd80221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 c7fec709-d225-4894-9839-da0eee694264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 7cffa573-5fd6-475b-b7e1-207bead88203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 bdcd83aa-c4cf-4433-91fc-a3dcc1dd02b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 e5a06321-4be8-4252-b060-7e6304148f02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'h0DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #377 c86b0ad1-9bb7-4b18-82b5-a758c1ba810f)");
unit.assert_eq16(16'h00B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #377 0c98551c-092c-4116-b31b-66021383f21a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 f15ced6e-e4d1-4b5f-8227-86da73cf56e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 7de968fc-9825-45ee-80e3-1536e08e70d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 b799f84f-c76b-4aac-a0cb-aacc422351ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 c5465d95-929b-4da7-b7d5-301295c6f653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 33c95b36-ebef-4550-8a1e-836017910af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 2fc840a5-8281-43be-87b0-0a477900be14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0017;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'h0017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #378 93a5b14e-3eca-492c-864a-70145d245fbb)");
unit.assert_eq16(16'h00FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #378 b709deb9-88a8-4415-b1fe-79fdb3176dfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 ebd41897-554e-413b-a816-bbe90ce68231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 1035d6cc-b6a5-4d69-b4df-4dbaa7703482)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 45088aca-59d0-4ba7-b2c3-00fba22b1713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 ad2922a5-dbad-46e0-83db-e882a5cfafe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 8d18e02d-f670-49f6-b71b-2ac472175c84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 9ac82107-3272-4af4-a3ae-c96eaed5a8a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h0B1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #379 d1e038a9-65ec-45b4-854f-8d421c2a0864)");
unit.assert_eq16(16'h03D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #379 4ab92697-d9d6-4136-81f0-b2fec97d55cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 104cd7d8-b61d-4827-bd19-36446a0666c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 4f1ce005-db10-4cd9-afd9-1480007958a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 70c2cccb-110b-4431-9c01-4931b6bca0a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 ca1e9ca1-33e7-4295-8746-0497cdc8a785)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 8d4308df-b929-487e-ab0c-5355a2d14324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 ecd4c2a3-3361-47e9-8d50-0622ca530610)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0522;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #380 35e48234-b45b-4209-879f-d59b32cf43ba)");
unit.assert_eq16(16'h0CEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #380 da8514ac-756e-40c6-b8a4-cad54eeca755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 13527518-61fc-47a2-aa46-0718e133c057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 5f0b8453-1321-4274-bd0d-a890a1dfd5c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 72b97e51-0bca-4615-a116-a17633190d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 a5f5388f-2acc-4da4-81ad-c5f49e1758b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 69e1f574-ec78-4de1-97f5-81155d8b7f56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 eceb9cdf-d6c2-4d51-aa37-5edb59e10e01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h0C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #381 4d64bd06-0831-4cb4-8361-93379a934ee5)");
unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #381 2bcb295b-fef4-4694-828c-0ad298833c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 8ca7cac4-66ed-4f14-835f-1d80dfedd9af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 7662d762-2053-476a-8a9f-246aec595675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 5f837eab-f6b3-4eca-944f-f6bbe0bdaa69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 2fc87a09-6817-46d2-af1d-c36163a0ae75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 fc6e7b4d-391b-42d7-b5ba-45da60d1c5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 cfb75568-ac63-4afb-a9e4-31c9b5c36c97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h055E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0284;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'h055E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #382 a2e315c0-2f96-45dc-8407-121a9a195fad)");
unit.assert_eq16(16'h0284, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #382 5d8ebe24-7e86-42c0-a439-33311dbba059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 473b7071-fb70-4bab-9b57-15867a9127bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 7452f2d9-0b0d-4f3a-9027-51ca9ad89572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 17d1ebcc-32f0-4518-8761-7e8a314c0aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 f908594b-10d7-4558-9258-7a00fc0985b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 e5b7e900-f1e5-4649-9b38-8a1f657e1843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 7c47cad2-f72e-484d-9258-684c57b1b3da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0441;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h0441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #383 4cf9b83f-0acd-4491-bf3d-80a32ad9b955)");
unit.assert_eq16(16'h0DAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #383 9cb98203-095c-4daf-b5a4-626fff821fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 8758df9b-a877-4122-8a07-0175a8585f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 259143e0-4963-49b9-ab45-08b12962da43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 df2a331e-20d8-4157-9567-0edb6be6e04f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 e4338076-3e49-4d27-939d-01de6b3b5445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 b5133bf9-76da-4bd4-a9da-f95d7c973c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 f5f80b95-6616-4d31-9810-96610647a192)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0490;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h003F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h0490, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #448 37a55287-c140-4658-9223-8b51c05f8557)");
unit.assert_eq16(16'h003F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #448 4fc8fc22-5189-45c5-97da-c2d7c63e6c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 1598689a-aff6-4efb-869d-43bad874e3ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 8dbac2c2-1f2d-4288-babf-ab855b4e3cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 6aace03b-2484-419e-aaaf-11ea42210f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 0552903e-a34d-48df-a5e3-0956b6ceef15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 89d73795-2696-4667-b4d5-7840c8465b9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 f26c86e2-a29b-4fa9-a3a0-679116761c6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0510;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h0AD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #449 b79fcf6d-90a3-4230-915a-b0db911356d3)");
unit.assert_eq16(16'h0510, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #449 bc0c58f3-4aad-4c7d-b461-e7d69bf0b2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 0bd8a834-d0f7-4479-860b-aed62ba05881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 b7a8cf87-7100-4116-a81d-493b09a029c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 a4441c5f-5af2-4914-8ccb-50dd574feb57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 c8084b4d-d258-4261-b873-34276e2cbf6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 94443019-92d2-4299-813a-641aa5c5a362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 9e530d15-ce0d-4a30-b0f9-b37696b739f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h041D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h041D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #450 34e73615-3c9b-4c05-9c23-dfbab8e19aa3)");
unit.assert_eq16(16'h0D72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #450 70faa598-d766-4a90-989a-7889a1c055b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 20bb6280-b125-4295-9b6e-012c37d197b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 cccd192f-d963-4599-8ed9-9c8a7874ac58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 890e260b-7417-4618-8cc0-b3fcb5a8d480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 a0b3eb96-3104-4ff4-b937-96129dc36e81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 cc88672b-8390-483f-af6e-b3c76f848d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 faccaada-f6e8-4d89-ae3c-9803982e2294)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #451 9d792d1f-7660-4c99-9353-844dfea7bd6a)");
unit.assert_eq16(16'h0E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #451 23b43308-58d6-42e8-be99-f86dab6b6e74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 b0d374f4-9b15-4d6d-b9d6-334ab1bbf1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 debf1739-effd-4cd6-bea9-6dab9f3de219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 3ea01332-936c-406b-b315-036993d990c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 615ea703-4cab-4bfb-99ac-f4b9d95065dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 8d74b4e8-0c88-4b4d-86e7-2a0e06109271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 55a3c048-3399-48e6-8e6a-e90ef29fcdb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #452 9151aca2-537d-4e5c-a831-cb1a9d9d1217)");
unit.assert_eq16(16'h05B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #452 2978aa0d-9169-4a96-8f7a-419c48d34115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 bcfc1ce8-ed24-4452-9b4f-677d4a76c85f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 7d886961-002f-4ffe-93cb-7b33e189fa4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 427227ac-ac4d-4e5a-8435-ec73989fa7d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 71b50623-0b56-4ef3-aed8-f6bc91986365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 53d81d32-f4ab-4301-8693-5aaef1c1d239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 e0faac91-cee4-4592-bdd0-7d4be520790d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0273;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h0273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #453 9d018280-ad30-4924-a84e-30e1b7ad5ce1)");
unit.assert_eq16(16'h0A72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #453 6c0bd854-fcc5-4f29-8c7d-48b85fe85fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 cd74faef-e3df-4efd-b307-2f47f8d8c553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 4e16bda1-d9e1-47ac-b703-7476be528e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 6d7a92f7-0c67-42b2-b5be-d8a1a5a25513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 6d229c80-731f-42e4-8dfa-4583d2ee0cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 2902589b-9062-4d3e-8b0e-65fefaed3072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 fc31cf5e-2883-43fe-b287-af1a5e0c8088)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h001F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h001F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #454 b9711adb-38cd-408d-97f5-23ae65792476)");
unit.assert_eq16(16'h0F70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #454 fb551f39-3e75-46ac-bf79-2e9ff7254a51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 27291afa-71b7-4b4c-8189-57836ded5336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 67481052-bd43-4b42-b042-defff67566e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 97907a6b-3cf4-4cc1-ad59-5735553196b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 2582dec2-ea30-41c9-b8dd-b471fe0a990d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 e7be761b-38ab-40a9-8ae8-d397759b21fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 27315e06-a9ae-4874-b108-e66b95378792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0360;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h0360, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #455 af8056b4-3a86-464d-98ad-3a039cccb41c)");
unit.assert_eq16(16'h0CE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #455 71d9617d-6996-4962-8afb-a7f1409f3e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 fd647f0b-51b8-4f7f-8351-16e493ba509f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 32851ebd-5539-4c39-8af5-191470e009fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 59b16910-f4e0-4263-9f34-dd00c35b736d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 567ae02e-385e-47bd-a55d-cd1a034164ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 2a7554a4-720c-4a4d-9901-2dbf023a408b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 f3292fd5-cfe6-4ab1-acf1-c5cbb1ac0522)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0118;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'h0DC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #456 6d281d0f-9465-4fb6-bf3b-05ec19f75afb)");
unit.assert_eq16(16'h0118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #456 e9097922-293a-4ff9-a0c5-23698c279602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 8209990c-726b-4730-986e-8233a38cfca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 6260f5db-46df-4345-9544-e3869b4f6108)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 4a251ec4-b006-41de-a703-d97babfff895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 36e64b12-5987-4c89-a984-507a898c093a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 8aac1119-aeca-4db1-9954-ea99cae378bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 0ef36a22-3732-45a3-b196-16bf7d8b0643)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h0C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #457 76322a74-f89e-43f1-b630-411bb20f55cc)");
unit.assert_eq16(16'h08E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #457 79ae4079-1890-437e-9d8e-a7aef050e083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 3b431463-e057-42ab-ac00-ea2f658c7175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 6f552fbc-cdb5-4722-bdba-bc0b715dd4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 af527706-1d3d-4c25-ba7f-ac8d13cefc93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 83420644-05ca-49c1-9ba3-1bb4e4e30e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 93bb50c3-1286-49ab-9fb7-658bf6f4cdb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 3e6986fe-e5a4-4c6b-8e2b-98f13177748f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0272;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0937;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #458 438dda2e-a0bd-45ed-9a7d-bcbd27bef7f1)");
unit.assert_eq16(16'h0937, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #458 94f7d385-c308-4adb-99a4-4324ccb6ef05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 18bd6652-cf32-4467-ada2-938af9f7b8dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 7eb5d434-0f2f-469f-af2b-72ce36e94899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 5ea7b42e-1d04-4abb-98db-d243e2e0e9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 5c656ad7-aa41-4089-a029-725dbcbfa9cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 106315e0-1752-42c1-9922-ad432c82fa68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 b85eb0ee-a5c8-4c0c-8267-bf176075425d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0595;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h02B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #459 69cefd6b-dff3-431e-834c-76e095f97705)");
unit.assert_eq16(16'h0595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #459 b5246d3a-2236-4b5f-8501-72d140cd2793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 d8cb3069-e37d-47e2-a2af-85a926c4ab1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 a03f6734-a7c8-4fc1-a3dc-fafc2bca5b19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 34c0ff6a-3229-46a6-9ab2-060121a0b398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 41eee58b-1eef-4bd8-a64d-dad8b168cb85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 bf759913-0427-4f2f-8bc0-df0eb5589b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 c14cb39d-7e36-437d-bd68-93cb28ecb1f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0320;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'h0320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #460 3f83e86c-29a9-4ab0-9251-ac52c85f26c6)");
unit.assert_eq16(16'h07D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #460 48b87b30-97cb-4b47-9f1a-754400085a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 e22cf1db-fad7-45cd-bff9-a43f35363db2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 3af7a645-edbe-4935-9537-b28cc4d48b3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 d87d728c-e296-44df-af86-e0c6ec7dbe39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 14ae0391-cb64-4264-8674-115c777db4bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 645f211d-4a54-405f-b1e5-f11732aeed94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 8ea97ef8-f375-49ef-9926-11e23cfb26d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h07D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #461 0e50b2c3-16dd-4dec-a4d7-b695a2c256dc)");
unit.assert_eq16(16'h0B33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #461 0d5eba5c-4430-441f-ae7f-88919fd8c8fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 17ee45bc-1803-4d12-8524-3545d0aea861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 83699866-3b0a-49e4-9f4a-e3a41802cdeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 a508d30e-98ee-4d66-bb1f-aed25d32350c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 ccec4b3f-5f8a-48fe-bf18-a360cdc44f82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 e498d594-e2c1-400e-a7a6-e12fbae039af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 5e04ee3e-5a33-4124-b061-25167368e809)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0772;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h088C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h0772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #462 c81dc58b-0b30-4bf9-8ad4-874fa557b26d)");
unit.assert_eq16(16'h088C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #462 6a19caeb-4d14-4053-a9ab-671c52430823)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 ad846fef-9ade-4094-8df9-8795221e19f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 055397a9-9ca9-4bf7-9578-c5aebdc7fd01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 90ae0c98-b5e2-4edb-abea-0da312e19f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 c6aa5bda-f480-4e63-be28-365e86970e88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 a19a6380-1cf5-4d81-b691-a34388e58025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 f5ee7bcd-65db-40be-a00a-80d28f47e524)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0779;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'h0AAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #463 99664421-ff55-4397-8060-f43635df2195)");
unit.assert_eq16(16'h0779, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #463 f090b2a7-1dd8-444d-9f21-f1cddfaa6d79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 68fa6284-25b3-4a52-a481-3f7e78fdd46d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 798518fa-5e7c-4374-ad30-150b219bb2ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 6efdc869-d93a-4e64-99e5-d2cd5946305a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 9c984de0-00f6-4694-9ed1-a38a73e435a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 abe86e01-f9ef-4c96-a0c4-a97c983094f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 a4e5f61d-492b-4f71-a68a-53ade1f62a02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'h0D16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #464 f9ccf7f2-5bad-4cb2-aca9-184c79eac83e)");
unit.assert_eq16(16'h0F8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #464 4075f4ac-9fda-479b-8e91-0aeaa87d5851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 5fb75fec-dfca-43c8-ace9-c6c49553c95d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 022f735f-b10a-4258-af60-99f9eac25eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 047c9b81-1753-46ed-8170-953f2e5a926e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 645984a8-d649-4f21-aa62-1aaf11e93235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 baa0c003-faeb-4e1d-b8ca-b4390a61a5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 e8859a4a-d9b2-46d6-acee-e0aeed9e4be9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0893;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h0893, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #465 146b23ce-3e6c-4fc3-9414-c8ccdcbf7a6a)");
unit.assert_eq16(16'h09C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #465 14abd2ba-7910-4dfa-b4b7-9f073d80efcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 b4642311-f386-4899-aa1f-fa37221d0ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 350f6bde-0b5f-4e41-b20c-16cfd3e992d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 354c769c-f456-48df-a3e0-a39772d61ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 ec818966-963f-4670-870a-2e7bb75a1e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 788ce355-4cc7-400b-98aa-b7f0bb7d6fd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 bfe3f8b9-7c3d-4579-8092-76aa140da680)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0731;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h032D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h0731, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #466 5489a3d4-069b-492f-8b2b-50b0ca55fe18)");
unit.assert_eq16(16'h032D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #466 b099818e-b2a1-4ea1-96cf-717d0cb463bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 de82a279-f89e-4b08-aa1f-3442b49276c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 7be1fa13-cf1a-4f1f-b120-edd3af990e0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 147f122d-154c-43ca-a6a3-5eb6066e1a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 1f8d7d14-1f9d-49ab-a121-62e9a9cefeac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 92529715-cb0d-40cc-9a06-7001864776f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 529ce229-0560-40de-adf2-ee4a0f2a8b42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0074;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ED1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h0074, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #467 44161278-f076-47e6-adee-bde55eb696d3)");
unit.assert_eq16(16'h0ED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #467 c14d30c2-06d6-44e0-86b6-2316fa0c9f53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 ec09f456-f561-403c-904f-f6d0e8b113b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 c3e67d31-d4b8-4300-a395-f7948c34b5c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 8facfc79-319f-47ac-825c-4f632d21756f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 0aaf15ad-2b8f-4091-8ce8-899eeba0310d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 dfc258c4-8e1a-465c-abbf-f6c163388f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 9063f5c2-ca0e-4b49-843d-3a7ac5d9e457)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h029E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h029E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #468 b6254d94-7565-44fd-a165-7fa09f40186a)");
unit.assert_eq16(16'h02C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #468 b562499a-3f92-4709-a068-13cd177f040d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 4b4c8e94-1451-4afb-ad3f-79abf1e901cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 2ada04cf-2780-4537-bfdf-d1b953042ba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 ab7692da-bab3-4be5-b3a8-b4818dc21d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 7a9c80b7-18c2-4c51-a8d7-88e6dee106de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 031093e0-e996-4721-8d91-4601bc0a10c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 873624a8-c29e-4a13-8d42-cadb906f372e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h015A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0071;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h015A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #469 4f3e353e-4f3f-4fb4-af46-684a214dcbc2)");
unit.assert_eq16(16'h0071, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #469 663ee317-8a11-482c-a5bd-e13828baab00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 707d5571-a48f-46cd-9d9c-b46745afd6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 059ec7aa-0637-4dfb-853a-5091be71b444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 a0c55751-f97a-4737-a8bf-4a0268e3e2b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 3ad99bf5-44bb-42d0-b220-cfc6c14e3aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 55b1638b-871a-4daf-928f-8d7c9a48c334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 b64a1a93-01d9-4c33-8514-e9a1b567e0a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h098F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'h0F84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #470 a4298c89-206c-4a6b-8172-043747a7f781)");
unit.assert_eq16(16'h098F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #470 74710c9c-460d-4c7c-886f-06e105d43f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 686e701e-6199-4355-b056-b23a1b76d74b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 6780c318-f570-4b59-94c6-4187af7354a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 0367b4d8-3cea-4873-8477-538274213af2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 96b0fcb3-cb1b-4412-9cd6-94b7c50b72af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 7015172f-e7ce-4aa0-af6c-f441da0566a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 f68232b3-a396-44b8-8dec-968163e7f753)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0568;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'h06ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #471 8503b0d0-bc8e-4dc7-b025-432f7fa350ae)");
unit.assert_eq16(16'h0568, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #471 0b7d1a41-dc7d-4ff1-b39f-087069ea90c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 d42733d2-a1eb-49bb-8dce-0f876893df7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 acbdac3e-971a-4c1b-a7db-87b4d1961cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 822e5db2-beb6-4a1c-a943-a43c06021c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 168d2155-4216-4d5e-bdda-a651f4f1270e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 709c427e-b1d9-4c52-b3e0-51a2f35e9923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 8d562443-8837-4254-adbb-bfa9cfa1c37d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h08B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #472 927ffd8f-0f27-42ce-bbd8-642042e043fa)");
unit.assert_eq16(16'h0DD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #472 9447748f-09e6-46df-8092-e5a8b778513a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 720c2cc6-fcaa-46f6-b622-41fd0945455d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 bcd0808e-0da9-4f77-8fea-e0b93edf51bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 6afb15dd-0740-4739-8d15-0f108a3b9253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 3d9a17c0-3196-4d50-ad83-a7716196dfa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 a2a32784-d9d8-4177-9c55-e6e239825f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 80886139-f257-4b19-83df-8421ef89e110)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h02D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #473 a175a88b-06f6-4ee3-bb8d-9cd320586450)");
unit.assert_eq16(16'h04E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #473 c30f56d4-f8ae-4402-8f87-fbfe80f634e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 0c6bd7a9-8e6e-46e9-9f8f-3e4c7e7419dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 90743f51-6e9d-4f71-844c-709e8ace7147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 1ef41934-5e24-48b9-8a90-6c33dfb4d54b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 449cf23a-aa08-42b4-bb63-26819f768193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 47d494b0-bfa5-454f-a0e0-74645c225b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 ebb1499f-378e-4aad-ab8d-561f87400928)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0310;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h0CEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #474 02bbd0fd-9409-4003-b2d7-ec4efbad03c9)");
unit.assert_eq16(16'h0310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #474 a30c3ea0-91f0-4147-b1b8-be1c60444ddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 2bdb3930-29d3-4b01-9495-718b55ab8d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 8acc5708-fdbc-4949-9724-dff0fad050e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 9e3d7aa5-49f5-46ee-afeb-8c33a8a76ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 fe1ece3b-a0ec-4025-af11-3e69b44ca822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 e30b7bf0-03f9-48dc-90cf-9b437ca1762b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 85f77cd4-7935-453b-bad4-348781c6fda6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h0E7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #475 c66d3960-ee66-407b-8f9c-2f394006b405)");
unit.assert_eq16(16'h0B41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #475 abb07230-d414-4010-8b3f-0410a09a78a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 778e37ff-c240-47cf-a77a-9e51c59cb008)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 f229ebc6-0966-450a-b14a-3af9937de9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 ecda004f-291e-4dbf-afb5-69aea1800d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 51fbe4bf-32a6-463d-92c0-63e13899a75f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 922aff69-2d54-4ba6-bb19-7b635a88af85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 07329735-7efa-4e52-acc3-8f158579f9e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h00DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #476 1c820942-68ad-4c9b-8724-d3bcf2ceefb8)");
unit.assert_eq16(16'h05D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #476 9e50f5d3-4bb3-480e-a79e-1379cebb8a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 eb5ce0e2-fef6-4c3a-82b0-c8c6df2fd869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 1a8f3897-3d3e-4ccd-8af2-7f2b6e27e2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 377b2368-4a94-41b3-b6bd-28d2fc9342c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 9faf7ac7-948a-4861-abe1-ca75c27aa6ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 41c44d6c-fb5e-4ba1-8d49-619749b3a7d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 d73c8611-2ec2-40df-adb9-de4a80d4c65c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0604;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h080B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h0604, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #477 4cf1aa92-5816-4a2c-ab95-138dcb7c7b87)");
unit.assert_eq16(16'h080B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #477 c9cd407d-c867-4652-8a52-8851a4aa307e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 4d481b99-df6d-46d9-ad61-d85e3c15a992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 6fc3a61d-b4eb-472e-9780-8aee9d7a05cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 2cc16c52-d081-4b1c-af78-3a8072fa4a91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 9796debd-b7b2-4374-b18c-fe3f3abdcd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 285f0fca-904b-4671-9d50-9e8b58339545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 a92d5618-b4e2-4974-b293-785e8322fd2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0968;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'h0968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #478 2e50192d-d21c-4049-9cf7-f82468ce3c45)");
unit.assert_eq16(16'h02B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #478 faecb3e5-93a4-487b-9422-7c399733faaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 893e657d-cefe-4f9c-9c8e-db293267c6f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 e3b90e33-50ac-4ee9-b78b-9cc11fa992a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 df6a3a6c-4d05-4a03-b1bc-b1ba7231e2fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 f71f367a-46bb-4616-980a-d789fe8ffa64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 959dbc8f-e2e6-42f6-bf9a-815c78b86e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 d276d209-5979-405c-abb2-1e2d61017f8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h0CA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #479 948caad9-6972-4727-8228-269edcab08a1)");
unit.assert_eq16(16'h09F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #479 0c272c56-826c-42ae-9329-b4dcea06c590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 b5fdc929-cb9b-4a10-bd7c-20b31371ee55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 be1ab605-ce66-4b2d-95c0-a826e454d3f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 4de07c9d-1713-4a65-9af4-f85da33f76fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 6cd35db6-1b8b-4838-99d6-71350f53e919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 623bcae5-e1ec-4687-b150-18143df5d890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 62cef640-b2e1-4fff-9e5c-c6985381ef2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h062B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'h0F5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #480 ebba2c07-7877-45e1-9a4f-f7118a85068d)");
unit.assert_eq16(16'h062B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #480 1e853fce-d633-4788-b4f1-29819e8513cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 5984d583-eb94-4ad4-afd4-04b05bb96351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 2b04d5c3-4624-46b3-a5d7-3646097569f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 cef3efcd-7ffe-45fa-b234-736137f2e2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 7e7c450b-8b98-4064-97e0-cef1afd7b091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 07a07ac4-5711-487a-b448-78a63e081f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 0929c2f4-4459-46a0-9b62-432bbc630448)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0096;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'h0096, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #481 ec5fc973-2910-4857-b699-e31edc63614e)");
unit.assert_eq16(16'h0D3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #481 ebc0a603-7f45-4133-8f84-376c9283272c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 55edee1d-c857-43d6-b541-2363714a2efa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 d3f19ff4-539a-41ed-9ebf-9ed2ae0a7af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 14a26355-a382-43df-b983-3e6df8f6a5fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 1f07eb22-52ae-4d12-a57f-a80d81e763f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 7d0cabe7-e872-412f-be3e-e278f572ec47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 e9df2244-30a2-4a6b-8ea4-311dd1543dec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h020E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h069E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h020E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #482 15ad1e8f-ba37-48cc-b16e-9c2ca93569bd)");
unit.assert_eq16(16'h069E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #482 8462c252-b22f-4d3e-a683-797602b2bf76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 47495bbc-72e9-472b-bcba-ad233c14c9eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 db55a0df-51cf-4de1-a85b-2a1ab4852f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 be82ae63-907f-47f9-86d0-3482728bf8cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 858e4f40-7060-4c96-97f4-afe59a50aafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 23816bf2-bd18-466d-a4d1-e7277e5ce490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 20433499-6736-4935-8abe-cea125ac11c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'h06BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #483 a98480ee-e595-424f-8b47-9ecd67879045)");
unit.assert_eq16(16'h0CA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #483 1e1673c5-1257-4321-8796-3a9690846367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 fa48b706-96d5-4ff1-bb82-3776c601ac01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 39ef166e-254b-45ea-82d5-fff30c5be4c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 5d327f3c-8769-442f-881d-ae5f16c02cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 68e93fe9-94ef-43a0-903e-bc2e57fb60ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 a3d2116e-c364-431f-8f6a-127f0c261a85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 de235dff-1142-45e3-8ca8-5d2921bc1ca2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h017B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0738;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'h017B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #484 e14a0838-30db-4eef-8e1f-ba58b70f9a30)");
unit.assert_eq16(16'h0738, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #484 ad6c999d-587c-405b-ab32-455c573f4d39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 5f3bbb8f-cd71-4b1b-b3c2-27645503655c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 afa2055c-9327-45bb-a780-c92a4455c6f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 9a81b293-b8fb-4fd3-a7b1-de506fe46382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 cf99003b-7442-4196-95d2-b78ee11daccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 237ef824-1cda-49c8-a9ae-915d9202e13b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 e523f389-b742-44f0-8299-0dbaacdcd940)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0086;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0923;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h0086, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #485 18c4399b-e81a-49ae-a324-49fa572d8851)");
unit.assert_eq16(16'h0923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #485 d2ab318b-cc72-44c5-905c-078fb780bcdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 b8af8fcc-6000-409a-93c4-79b7b60b646b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 b84ca601-6b35-41fc-997a-a1df8afdba78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 9b55b9eb-77f2-499b-b0bd-296cf22cf6c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 8fe70a0a-1cb8-4463-9c4b-da8cf3b5f171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 fbaabeef-666e-45ae-845f-9ba1ca8bd5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 e6cc0a35-bf1a-4aa3-880d-889a5a9004c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0340;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h0FB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #486 46e07255-5efc-467d-bdd1-4f4fa5ec4778)");
unit.assert_eq16(16'h0340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #486 05e43227-b881-4a96-994b-3a64d343a535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 e0e26b5e-6b42-42c7-8551-5633426dc26d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 931316b4-5453-4c9c-ad1e-5a3be4e9d583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 8da1a0fa-2325-43d5-bdac-a13521ade8e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 12391a04-8df9-4491-88d0-d53ff8c80c6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 aa683fae-3c3e-41d6-81dd-0bba6ecb6bed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 8c315874-a85c-480d-b0f4-42081b244b2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0967;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0572;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'h0967, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #487 c281d3b4-3052-4493-b3c4-4cdad4cb4fac)");
unit.assert_eq16(16'h0572, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #487 1a45afcf-334b-49ec-889a-fcf056947aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 d5bef21d-4a63-4308-a119-7c13c3468d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 af230280-be19-4b98-b3de-f2618e0f058c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 7ae077b0-0e53-4dfd-b4c2-281e16e0a794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 7c70c88d-9075-4d45-950f-1ac4b9a9cd11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 0bf46fc0-1e05-4a40-a1e0-33ad100b8a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 4790df1e-c0d2-4e3d-b956-629c798eb2c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0226;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h0226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #488 0b55050a-63ec-4e23-bfc5-7c74da757ee6)");
unit.assert_eq16(16'h0A6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #488 ecf89061-22c2-4a86-86a3-fe96698cd261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 6f4e1fe1-473d-4f62-b30f-fff3bcc965c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 947c99f4-0c6e-450b-9aee-7a92f94d4fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 2444ce3a-9eb8-4f93-8cb2-1a04b61461f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 a1a5deb2-9056-43bf-a6b5-de05e4be068d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 b708c51e-8611-48c4-a8ff-db46385e518f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 b5cc53d7-cac7-4c78-ab64-4f0f759eea2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h083D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'h0BF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #489 5b99a7e9-813e-46ee-b93a-af9fb93bce5c)");
unit.assert_eq16(16'h083D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #489 84a73870-0034-4581-83e6-860066ebf596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 916c031f-472c-4181-b2ec-3eee70f51730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 8bce0875-645e-4c31-81a6-cfa235102215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 ae7a4e51-7f89-4a09-9a32-6aeea18085e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 05aaa846-bd0e-4516-8027-9e62ae00585e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 ff438801-301c-4e28-aed6-e16c85ba1156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 a39bf777-efca-4a3a-999e-8cb3bf00fe53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0243;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h0C09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #490 34b5a14b-3d89-4935-a59a-0e2fe6d378b0)");
unit.assert_eq16(16'h0243, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #490 d15db828-80a8-4966-a5ad-4cab8a339720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 a6774297-ebc3-4e4a-85e9-670c4ebdeb1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 72b110cd-9d08-414e-bd59-a12aee850fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 7784ef8b-b1f9-452d-b324-e80358e96082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 2a24240e-a3b7-429f-b227-f120ac7ede65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 43b5d291-cf78-4bd7-9791-750bdc5d9f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 f02d12c2-665d-4eb2-a324-876c52d3ae5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0975;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h0975, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #491 b1fbf3e5-0c75-46ca-abcf-ee8c4db03dc2)");
unit.assert_eq16(16'h0BFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #491 3fce8044-5af2-44a2-a780-9877fef4c9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 553baf49-e54a-4d99-bf76-8044b8261b62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 8ac693ca-1beb-4fcd-a37c-11ccd6c637a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 270ea7a4-ba80-45dc-9c40-092f4459bbc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 93ac82f0-3b5a-4502-b32b-97b2fb1d49a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 a5bcb51a-5917-4d7b-977e-ed386fda2dd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 53748790-d80b-4249-8d40-42d1bc801520)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h072E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'h072E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #492 fb7545e0-be3d-4599-b454-63c7fb700909)");
unit.assert_eq16(16'h0BC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #492 2d9b3f3a-013a-4dda-9041-fb877a093099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 6fb01655-98a9-4aeb-8aa9-f164ef85413d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 bf07bcb6-da75-4280-8205-85f71d5930ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 a82d3fb8-3376-4397-8c40-c0635561e751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 211d25d2-8925-4345-aa20-3273cc3da706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 34cefa66-1de1-4368-8464-7c51ee79aa50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 ad2f139e-1de4-4c0f-b2f0-bd15e898a121)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0224;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h0224, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #493 9cf130d0-004c-4366-8bbe-49e390b7d78d)");
unit.assert_eq16(16'h0EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #493 3c07736e-5da9-40a5-a07e-9544908bb3fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 f8d6b207-6baa-4692-a284-d65b8cf645ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 fa0e2c43-9ab4-4109-ad3f-2ae43896f407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 d1cbdf37-48a8-42a7-a141-454ed5ef4afd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 aa1fde20-47a1-4e8a-916a-cd16e8c390f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 7340a124-432e-4108-a2ea-b851652215d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 18146b51-9baf-48a9-aed8-3a8561475902)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0431;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'h0FCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #494 e04a4487-5373-40cf-88ed-e8eaabd3e11e)");
unit.assert_eq16(16'h0431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #494 a4cd4e7e-63b3-4963-b477-21c8ea075ef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 816f6b44-db91-4c58-87fa-3c84c63f23da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 8aa65a29-06e8-4f2d-bd10-33c92662ba93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 05daa50d-56d8-4946-b90f-f05731857c69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 6d844ea7-99d7-4fad-88b1-8eab2d13437a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 cf903485-c6df-41ff-b403-ab7cc2fd2e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 0c7016bd-dbc9-463f-b215-417af370366f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h00E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #495 bc1bcd51-5c57-4dfc-b5f4-9fa0ddd18108)");
unit.assert_eq16(16'h0E0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #495 ea1f7100-f294-4ae2-a9cc-87a231cc815d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 a3c8870c-3114-4884-83ac-5c2ab7542ad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 014e014b-6e19-4ba1-a7db-b0a4f3b37599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 efbfd487-0da4-495f-a4f9-b201d1436fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 00b3b97e-71c4-490c-8fd7-2e8ed310e8e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 a981de08-dc04-4d9b-9513-cfbe1281a470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 f7cf631f-f66e-49a4-a493-c3c0cb9d80c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h018F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #496 75dad46a-8522-4566-ac6b-93aa59cdfea7)");
unit.assert_eq16(16'h018F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #496 b1f1eaad-0172-4106-9b39-20cea44b1b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 6bb40491-517b-4e80-8996-c4e616a96122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 2306c2ec-51ad-449f-bec3-ff6d88481040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 b19ee11d-2189-41fc-9837-e20261e2439e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 69e61851-5d25-46bb-92a2-7789937f502f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 21a689c2-6d5f-45d8-b38a-8b611d5a3d9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 13cb30db-ff1e-46f4-b3d1-de3d15656952)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0714;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h0BEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #497 ae7c3071-46ae-4b45-9839-b7b8746dea08)");
unit.assert_eq16(16'h0714, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #497 27dfc668-2a96-4b33-bbba-82642049f1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 ee72f0fe-1546-4157-b6ae-da7d9c130270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 6661eb73-f045-447b-ae80-ce61a5850114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 2dacd2f7-f531-43d3-a632-cad5c9d614a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 3d1e80c9-067d-48f0-83d4-fd9b09eaa90e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 7a711f15-a0f8-4c6e-ae95-0993c34319bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 9eb3c6b1-f262-4ae7-8c5e-e15b28f0a549)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0434;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'h0434, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #498 46db4ed6-b6e5-4dcd-a18c-b3cb5e39d937)");
unit.assert_eq16(16'h0E6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #498 7976ea3a-8559-4a59-b2d7-2ce9566aa40e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 60a18a9a-2fb2-4ca6-96ea-df791c8c68f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 34b60f9c-382d-4b6b-ab7d-7c0dbd285ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 2a4e5f83-13ad-4c60-ae28-29bbb4ba6409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 91cf0d4c-974b-44d5-ac92-59c1112d23d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 0f36c41e-54b7-4ddf-aa1e-ba2b0869c012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 7ad057eb-f8cc-493e-9d03-0276eeb33a41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h05BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #499 2959f1cb-0e7e-426a-b239-c25d8dd24391)");
unit.assert_eq16(16'h0A6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #499 bbbe857d-d77d-4a30-b8f9-362cddf4f8c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 9ca2ca09-8da6-40ad-9de0-fe41299a47be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 f8588660-2097-4ba3-b7ff-89d30403fcd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 b8606bee-54a8-40f7-be50-2b9e9812240c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 e379e7b2-275e-4283-977e-f844485e4feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 534a5a14-42fc-4beb-859d-5e33da41531e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 d5f2ba30-7e84-458a-b04b-36ec62014d17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h067F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h067F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #500 b8644da8-7d1b-4a3c-bf8c-c2a02d995427)");
unit.assert_eq16(16'h0E65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #500 20fabf73-71b3-46f0-a742-b218e5d1f79f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 2586449c-6906-44a2-94c7-610c67c71df7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 75bce2d6-2937-4e80-a3c0-c32b2cd9c186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 7a10657a-6dfb-4d39-8c28-37db3b3c79d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 02006ea5-a2bc-425c-8aa7-42bdbbc4f2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 aca60f28-510b-4f26-bad2-727077966cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 7003f338-d77e-4c46-989b-5b6a495e59b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0186;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h0186, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #501 66b86324-1bdd-402b-8cbb-5ed6f250e94e)");
unit.assert_eq16(16'h01BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #501 866c9ef4-9ac6-490f-a006-1da8aa11fa44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 92af63ed-0c9a-48d8-a673-9576dd7a9f96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 c0221520-da76-4eba-8d12-66bbca2b0bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 7acc5542-5cd1-4aef-b516-7caa49272fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 25aea4cb-e1eb-45d7-940d-baa8291c68bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 11c1b744-88d5-4019-af1d-b6b31f963dfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 b8752f9c-abca-4dfd-8798-487a55975e8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0172;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h0172, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #502 eb04f64d-a66f-407b-b485-13dd7a627eb2)");
unit.assert_eq16(16'h06BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #502 39924c11-01e6-41d6-bb8e-628b0dc67681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 ec0aa19f-cb31-4ded-b600-f06dfc63e764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 449d77e1-d467-47e5-9f7b-83db859f6682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 167e17da-3d8e-4422-b87f-73e853b2c258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 ed1a083b-7a25-4987-a6fc-1da80540dc7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 336200f2-4a63-499f-bae1-90ae56f83bf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 7a120b80-c6f2-41e8-827a-4cd12de8d487)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h01C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #503 84460d4d-3902-4c19-a83f-16ad7db951c7)");
unit.assert_eq16(16'h0CF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #503 e2fbbf1f-8508-4b5e-b6d1-08904aac0068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 dfb99f35-9573-4f67-ada9-d906f3749793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 432630fd-ec56-4b04-a376-2d114c9ea77c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 7ccd4476-4150-41fb-9993-5c8c0ba2d90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 1e8c6dbd-9680-4210-baa8-cb76412aa544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 0a2fd9e1-df8b-4173-a67f-bcfd28ede112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 87bc2a3e-a529-4411-b6e1-709e3e5e8766)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h06F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #504 24356c4f-8c45-42ae-9578-8dca85cea706)");
unit.assert_eq16(16'h0E4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #504 5eb7d812-3668-445b-8b69-7e9bde04a017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 dd199fe2-f139-4c29-b850-d0ba392b59a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 c325a275-cd75-4e4d-a812-eca0fa9ce9cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 5866117b-55c0-4324-b541-bccf0bb45029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 816a2fa5-8dc8-4d24-847f-01874fdf4f43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 63ea807c-044a-4538-a887-b72d8559d0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 5eeddbeb-a3b4-44ad-adf5-9f72490d6cf6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0861;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h0861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #505 445a4a76-a565-4714-93fe-bdf96dc2e7b8)");
unit.assert_eq16(16'h0CFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #505 5ae58d6e-5779-4992-be61-ef69f5ba8d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 9ec54bf0-00f4-418d-bad4-abb87b75ea66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 d6e01788-84d0-42d2-980c-4179d1e1c6c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 5d7be4da-c78b-4a8e-96a3-07852000c00a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 53b0a1a8-24c7-41db-b94b-fdb6da405336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 56272952-696d-42c1-84e4-3c31ba68bc4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 06c30bb7-1ec2-4a31-9977-b25ed77abb62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h063E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'h07DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #506 9689b420-59f0-47a1-8779-f72533bc7008)");
unit.assert_eq16(16'h063E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #506 a8208d65-356f-423c-8bdb-b83b975d31d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 dbd614b1-947d-45c9-9770-2f9380194abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 fc9609f0-7cf2-4c86-8718-a7bc9731fe6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 300a3804-5c2a-4030-b346-f02dc52cc3e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 3634cbb3-2b0d-4a87-a432-3cb0f396506b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 1091d1f9-a5f4-40b7-b415-912d64c542ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 52c0997a-3367-488f-a136-21f19d89933a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h089A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0289;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h089A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #507 926a10e3-90ba-4eb1-82b9-014155c49ed6)");
unit.assert_eq16(16'h0289, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #507 9952f6bf-b9a7-4578-9719-fc85018d564c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 749778b8-44c7-488a-8fd3-9e92a16521ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 6f7c11c5-972e-4a15-a1db-74ee2add22ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 abf173fe-d409-46fe-bed0-d79a7e8193a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 030dba78-f620-4120-b031-8671097223db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 218b085b-c2f2-4ff9-8fdd-7dfe8f3724cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 70329cbc-1044-4013-b59c-e2e581383444)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h099D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h099D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #508 fa549c0e-1ae3-49cf-992c-8e9d3e8072ed)");
unit.assert_eq16(16'h06B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #508 c66ae02c-3c97-417e-b6f4-c981e293f7a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 2a75eb17-c308-4abf-8ca8-4c79653717c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 3c364679-1fce-4bcf-acae-bbd51f05ed18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 56141bb2-d9e8-4789-949d-222ceb41f5ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 2da15404-c375-4499-a96b-2dab643ab1ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 32e7cb4d-654a-4fff-b149-9e894fc4b23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 ecd36408-26e7-4c86-abd8-dcff2862dab4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'h0DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #509 7b200285-0deb-4039-9dc3-3bab15c847f6)");
unit.assert_eq16(16'h0F6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #509 29de90c2-49c0-4e72-a190-dd6715950b8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 0fd936fc-eba8-42e4-86b1-bb66bdc5c225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 b16d9100-deee-4dcb-968c-069633b3cc5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 4f653a03-4ea2-4179-a58d-f66552dbd321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 46e5a71d-8a54-4fc0-94ac-9cf78ebf0dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 46ac8756-33bb-410a-baf9-053057398301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 bce6471a-e362-4072-b0e2-a1acb4f608ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0587;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h0587, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #510 9be7757f-693a-4d66-bad7-385f8abab8f4)");
unit.assert_eq16(16'h0B70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #510 b281c41b-20f3-4744-846e-e32d47795806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 ade51529-2c5e-4110-a3e7-74cd0380a3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 4933833b-fc00-44d0-bc7c-bf7091bcf674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 e499058a-0468-44ef-aa4e-904d837651b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 e0655b2d-96b1-4c44-98ee-80f4290b927f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 a9ccbe84-0b63-4a4e-acae-1ff9fae8600d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 2fd928d8-91c5-42cd-9425-d7c99e2285d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0502;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0963;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h0502, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #511 b5770d6c-bcf2-4f6f-a51d-73fef125ae80)");
unit.assert_eq16(16'h0963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #511 9b20556c-3b28-4cc1-9193-aeaedd9b5770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 a0f0539b-6ba0-4956-a57e-a7e06452cfa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 0ce9a46f-1713-45b5-b6d1-ce0c00183b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 498eb5e4-17ab-4927-b681-e3d375a0f991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 a9294247-d168-49bd-9bee-a60694651110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 8784112f-8246-485c-bd11-92061f93ba55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 e78eefe1-6d95-4bb4-87e8-7f009a065e9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0526;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h0526, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #512 9063aa02-6b96-4b2d-a274-dee974279567)");
unit.assert_eq16(16'h0A2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #512 0bb4c4fe-0ea0-491b-8277-87fa14060dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 c40a5bc8-d90b-4e4c-b852-03250276efc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 a88c77ed-0b6e-45ee-a869-e872f0c66c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 f1f29974-b224-4e24-b133-a596b9efa670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 fed637af-58d4-4734-8e81-d10db9740881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 163a5b1d-65d4-45d8-9247-18cf60419a57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 a348f11a-0945-474e-a794-f3778a8f7215)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h0C35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #513 8f457a3f-1580-43ea-a82f-3ef7f21e651c)");
unit.assert_eq16(16'h0CEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #513 57dcdc9a-5252-4949-ad23-f8ef68c0b377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 de26b022-8af1-4717-a0c4-2ef7bf83ef22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 1dba2707-4bf7-4a67-b93c-b6c7d5a6d19c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 e37f432b-3841-4a28-8ca1-ea3598ce3c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 8bcca1ea-25c0-4347-a910-21f9381735a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 bb3ce72f-9eec-4dae-8665-f2cd62cd2ebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 4ae2d993-7026-474e-be1d-a8f6d2208c2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h0F36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #514 05cc7238-d0c7-489e-9f8e-c81d0cd09c6c)");
unit.assert_eq16(16'h08F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #514 59481a37-05c9-4dcf-8620-0e82f90dc3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 7fde4290-b2a0-478b-89c4-0a61a0a4b763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 c91d5242-b13e-4261-ace6-a1cba2ef2241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 9cab579b-af75-4fa3-842f-be6b6f88e1bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 b38a27ac-cbe6-4f9b-a335-6cfe1a74aab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 65b13d9a-9fbc-4ad1-b921-d8bc9f23f046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 cb2243e8-85e7-445b-9a20-f3029e7174f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h03C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #515 b9634453-fa8f-4160-aa4a-075bf7b4e94e)");
unit.assert_eq16(16'h0EA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #515 13132c95-19fc-4011-bf44-63eb64d06fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 e0093f2e-468e-4d43-b80e-1820ddfb37da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 ef7a8c47-0617-4b88-85c7-8541082840f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 03e918d7-0f05-45fb-913c-51f43296e8f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 a408fbf3-f6c1-44c7-ad45-6fcd695b5ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 d2eb0c58-7ee0-4d47-a568-8839645e502f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 0bec2dd2-6f25-4400-893d-0ebd175c7769)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'h0F10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #516 aecdb851-8203-4932-84f8-9b2ed60694d5)");
unit.assert_eq16(16'h01BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #516 2bc4162d-f0db-4c2a-8f8d-3a66678ed5cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 a887b214-65af-4f46-b105-10d8b93e9c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 0cdfd90c-4797-421c-ac0e-396bfe909ae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 e0ce6224-2e83-4563-a7d1-922ffc06dbe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 46a79bbf-aa2f-4002-8553-14634663263b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 77477911-5fa0-4c43-817b-cd384934d133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 95e557ee-318f-48f8-8a6b-563dd373726d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0928;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0229;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h0928, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #517 7fa6dcee-79e0-45e1-ab05-e8ea1e591e5f)");
unit.assert_eq16(16'h0229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #517 83195971-779b-4d80-bc4d-f9e96c84ba1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 d0830022-631f-49fc-b2f0-cbbf4896d710)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 c9ada0eb-a578-48e1-9c0d-a92c4cf48375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 2f33f0b6-c6de-4cac-9f6a-22d1041bd308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 5ffb5380-f467-47bf-ad64-773de450b383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 4ccab428-ce82-49c1-af24-efa4d866daae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 9ebc2382-3aeb-43f1-a227-729c0a2a1eb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0649;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0512;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h0649, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #518 b169272c-a90f-4cff-9a64-4d4eec733845)");
unit.assert_eq16(16'h0512, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #518 9a94b574-76d4-4cd1-8972-42214baa1f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 60944183-e85e-4b9a-9c91-127ea9d7824e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 fd964b58-15bf-41ff-beb8-09068549575a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 64e50cd8-f407-419f-9ecc-40f5d9742558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 967c2d05-117b-4770-886c-7993aac68d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 8ce455ed-226a-4b02-b314-08271ea3b947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 b603fa64-01f8-483f-ba70-ac0766283035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0532;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'h0532, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #519 5b33a397-3315-4424-9264-8cd90b0a3719)");
unit.assert_eq16(16'h0D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #519 44e2df86-c73b-4d76-ad69-45006b459ab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 3b4a0cb0-e443-4e66-abbe-dd49964e00f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 8961b0df-e565-4217-bbfd-08fd7bf32a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 2adc8fb7-d35b-4b2e-a19f-f68fc9a08127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 8750fdc8-ae99-42ce-b324-48e28f7dada4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 4a1ef7dd-51f0-4fdd-af6e-959be63a8995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 9ea5e49b-6142-4344-a516-015a70b7be66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0583;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #520 377d2c71-6780-4efd-83a1-7b5760bb153c)");
unit.assert_eq16(16'h07AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #520 be0f1d4a-3d99-4d75-b74c-48291d92b885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 9504f483-a409-4a7d-983a-fd0ecf6d9803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 f6db4efe-c586-4850-8fde-e9bd374cd59e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 c1ff6eb2-e163-4b90-b921-ad3b5efb27f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 13714484-22ed-4359-b9a4-b1a54d413c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 0a300773-0b07-4f17-936f-b083cd0da888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 dc4ba3eb-763c-430e-a335-286974c2ac5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h0B4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #521 80dcb007-0eb9-4dcd-9196-21964993e5be)");
unit.assert_eq16(16'h0E58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #521 d42338a2-08aa-4d56-b19e-28c1dcb4537d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 70d323e2-2599-4027-8a9c-7f86a8493c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 66fab67e-954e-40d0-9b9f-6c7523137d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 201e27c7-49f1-446c-ada7-1c6cae2a4230)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 5743d18b-0deb-4b21-a1b4-e6a74a0b1b94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 2213ba72-4b50-4f4f-a571-e23b24b366c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 5735594f-2dc7-45cd-9b37-a79939fed644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0148;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h0EBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #522 b5a24b15-d2c7-45b0-a4a8-ab1f7354e20f)");
unit.assert_eq16(16'h0148, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #522 1ac2e2b2-1e14-4ec2-89e2-8c3488b4d9b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 0d20142c-ed1e-44e2-81c7-ce0da85753a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 b28744da-6075-4c88-ae32-9dfcf7fb7c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 7772393c-0d87-4902-86e0-adcd5173874c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 7a69613f-e7c9-4744-b905-3cc39d0419bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 2a9ab568-eb62-4a28-9f93-1beef93f7746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 c3b50a37-b225-41a1-ad83-b42aebcb3f32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'h0F73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #523 5d8e8f3d-4184-4bfb-ac15-8584124be43e)");
unit.assert_eq16(16'h08A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #523 9601566f-7fcd-4909-959d-d8a4724c511e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 3e8834f7-6992-43bd-8f7d-7fe701af088b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 28cb3feb-42d1-456d-a2f9-e6c289812447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 6707374a-8e18-429d-952b-30a71f9398b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 8a317d15-ce12-43c9-b306-159cb440dd66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 7974b0d1-96cb-4a39-9e76-b0cda2f0f430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 c945bc72-9966-41d5-99bf-aaaabc515f92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0139;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h0139, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #524 5ce01b0b-c41e-4f49-883a-fdcf95545158)");
unit.assert_eq16(16'h01AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #524 08ef0fd1-907c-456d-aca1-4540a4077ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 a1e7d1d2-f8ea-48d4-8d3a-fe0f412f1b97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 d3c3a7a6-e9e1-49f4-9977-7bc979530dfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 10a07fe1-276c-468f-856d-7a8cbf8e8bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 c1d9f6b7-23b8-4d48-ab8e-05d0a904ac88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 a7e653da-0687-4c4b-ab64-5ac21074a7dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 4ac25b69-b259-415c-9307-9a7846d1ce8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0519;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'h0A98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #525 bb2d768c-1056-4376-86b9-3db9a84fff24)");
unit.assert_eq16(16'h0519, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #525 673e61c2-d2e3-441d-8acc-9f63603be346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 ef096f0c-2ed8-4d4b-a904-ced498bfc5e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 dcde796b-4c42-4d59-ab3d-ef5f6530e365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 2400fdb7-f53d-4580-8498-55b2a776998b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 fb756553-1094-4d07-b3bc-c8b34c416f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 15e5efca-421a-401f-abf4-762d207d35be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 55b7d449-4289-48b3-ab71-ee8128e3bce3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h022D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'h01FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #526 caffc5a2-a6b9-4339-b19f-daf032335783)");
unit.assert_eq16(16'h022D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #526 f2051c00-ae38-4822-bb79-10b4df6d1a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 9e742cee-1b27-480f-9a34-11bdaa99ea27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 c369b2a8-e1fe-4b4d-8526-cacb24a5b105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 d01b9d46-ffbd-4533-b9df-29212b6a064f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 d7cec09a-7527-42cc-96fb-c0b296c97c39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 10a89c88-14a9-48f5-92a1-90330a57df04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 b0f806f2-8a1c-454d-b50f-b8987399c9ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h090E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h090E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #527 4715cda8-f4d8-49f3-a86b-6204eefa06ba)");
unit.assert_eq16(16'h0AD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #527 b0712241-ded6-4851-80a8-d0924a6aec4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 bef65218-a940-444e-96e5-58fe327f38a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 69d90bbd-84b5-4b09-8770-de0655b6714a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 5d9c6065-ffee-46fe-9318-41a345480253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 e91f3210-90fc-47aa-a429-cf82b6c2b892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 a3e684f4-d73c-4d4c-83d5-b38c7445f3dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 d62ff9ff-c4c2-4e1e-8a76-5599b00cc376)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0236;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0727;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'h0236, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #528 9c867906-a8b6-4cd0-b824-fcc3902e69ff)");
unit.assert_eq16(16'h0727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #528 f305d51d-d5cd-455b-a0d3-6ee3f9322031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 66e86dad-7f08-47da-bd13-c83fe1f54bdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 af677da7-a57f-4908-8baf-ee0637cd384c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 bea61a59-ae7f-435f-81da-cce95b2d9484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 4cdf02fc-0180-4f4a-897a-5b015cb6a13b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 0f436b2f-0df9-4fa4-99b4-e9b769230dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 92cf57af-c7a6-4647-8bbc-8cc28b2190d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h0FB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #529 21e9c0ef-cbaa-4c6c-9292-d2da6d8896cd)");
unit.assert_eq16(16'h06C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #529 4295609d-1781-431d-9c58-6fb27fed0c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 0c3eb023-9d0d-4af0-9a5e-1bed6d1a7f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 e08c5090-c975-4272-a811-0c205fd6c165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 66e21d9e-91b1-4b83-9fcb-567903f222a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 e13b15f5-9ab0-48a9-a060-2edb41e0ec1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 8ba384e2-408f-4cb0-844e-1ba48759d675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 a9fc49a3-874a-47e1-84c6-c66b057364d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0522;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h08A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #530 a1af6128-ad7a-4992-8fac-0fc98cdf6109)");
unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #530 780d1ed1-f493-4d46-925f-e4daed1a8b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 f78fed0b-6eaf-487f-86e7-3b75d87d8909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 484683c6-0fa5-46d9-bd66-d9a6ad24cf4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 2665e58f-433c-480d-80be-8a243620bf49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 30cf301a-d2ff-4038-bfea-cb4931b7676e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 784e04ba-0eae-4fd0-bfe4-c5bbe3687831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 cc5c68f4-9494-4b51-8561-31f78bcd8432)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0340;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ADC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h0340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #531 4987029e-40f8-4842-811a-f1cfa1039bf6)");
unit.assert_eq16(16'h0ADC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #531 3779ace5-7017-45c7-9a60-99a8ae7e3199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 dea2c376-c13f-41d8-adef-5e92e9596c9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 8f11d4b3-69ed-4e2f-974f-2c67fb8fe014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 f5db64ce-db05-4d8c-af76-59b7779830f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 aacc3bc0-7481-4223-bbc7-c3aed18728a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 35ead97e-555f-492a-ac0a-dbc4f5f6ba20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 d7c0adf0-cd84-4eaf-ae97-496cfeb84ccc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'h0E47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #532 07b1e0f9-c2f7-499a-8191-144b38a3ff8d)");
unit.assert_eq16(16'h04F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #532 67ba2c3d-3570-4b45-b42e-84ff030c8b8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 35cc085b-46ad-4b8e-8ece-af80dfd3f6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 f6bc9c0b-e098-40e4-8b79-67444ea9828b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 2d163e43-e72d-483f-b17d-d66f866dba19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 01a15e11-8079-454e-9c95-2502c6b0eb58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 4c856916-b453-49af-b92d-0da5578094a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 bec18e1b-a8c1-4bad-8594-06ebcb2e1a19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0921;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #533 e01679d4-3704-4bf1-a15d-0d385c8e43a3)");
unit.assert_eq16(16'h0921, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #533 2aef2534-585d-45ee-8fbf-723dac093a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 77c7307e-3f57-41f3-978c-90b8d3e12299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 5b37a059-7a90-4bf4-9082-87ddec8cf0c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 4c4501ce-d7d4-4b49-80e5-8c9ff36e33d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 5aeaea50-c668-473e-8f04-dcdef1166c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 91d9afb2-c07b-4115-aba3-250c21dbd162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 7c1bfef5-a5fa-4413-8ea5-b01487f9800c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h077E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0299;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'h077E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #534 42020a4b-7f4b-4d55-94d3-0c890aeadc17)");
unit.assert_eq16(16'h0299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #534 143c4ac0-065b-4a27-bd7d-9a0ba3ca88f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 22b985a6-8da2-4728-8786-192bcc2b610d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 ab2d0dfe-045d-45ec-a8f7-b8d6edd9781c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 68f5ceb9-b60c-4287-bb79-2386513f4be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 9ccc8c1f-3006-439e-92fc-630184133edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 71d69563-09f2-4aed-b242-1aaf09616105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 96716ad8-f806-4022-8be3-7181ae2ca525)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'h0695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #535 9b2da1d9-0179-44c9-aef6-97c6b00c5aee)");
unit.assert_eq16(16'h0F86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #535 ee2f5e87-1324-4c16-b1b7-a5ab03ee5a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 b87de3cb-15bd-4f27-92de-4d561ea03b04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 79761b13-6a8d-49be-b3e8-dbfa21cf3e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 6baaee32-25f3-4df8-a05e-f8502659b002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 c26d9d62-f8f3-441c-aac8-f15a4060128a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 f9885916-8378-4adc-9eeb-c18378bc331f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 b81ea2a0-bb75-4d9c-b3d0-1dfed9ad6157)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'h0FBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #536 7e33be9c-1de7-41de-a65f-ba9980b926ee)");
unit.assert_eq16(16'h0AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #536 4b7fdd70-bb5b-4e39-929f-7f7f21f6d67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 f01de924-ad15-436d-a378-4d1040cdf432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 f0f43e9b-6550-47f5-b5df-7f956564e23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 ed9ab5c7-77c9-4063-9bb7-b5591cfc0a72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 fdda74db-27d8-41c9-b3b1-15d0d866b656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 237e0c55-0bb7-4554-ae60-bf418f90363d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 020a3a9a-2494-4fa7-8837-7e2d8d7f878f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h0E60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #537 474402e3-cd1a-416e-828d-7c341534c715)");
unit.assert_eq16(16'h06E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #537 48f48148-7ae8-4e28-b29d-77d54904ef91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 a701a34f-5640-422d-aaf5-1a239b96ac6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 cd42fb76-0d97-4102-8db0-8d7a60cd56a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 a51195c8-8600-4736-94de-af9d9a25dc8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 7fbdf70e-aebd-4961-8500-9f12bc2cafdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 1e3910a0-9e06-4a8c-a491-89856ad35202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 b2441e42-813e-495e-8a40-5045cba19b53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h0FFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #538 95dbb382-5b62-4ba1-b923-2cc3d5196c66)");
unit.assert_eq16(16'h0F0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #538 1b23f989-5349-483f-8654-e57332143e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 32d8f163-0052-434f-b737-61a0b6dae5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 1f93bc50-6584-4b76-858f-9b8d86093861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 9bb16555-48aa-4b61-a9c1-cae8a769f7cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 63f94f54-1901-446c-9699-dafab2be7d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 6e3857f0-179d-4201-8deb-2592b5d51306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 3dbe9e73-7039-4375-9f04-c02b4a4b6033)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0061;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'h0061, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #539 4dc8b52c-3342-4ec9-9d1f-a6afb1bc8a54)");
unit.assert_eq16(16'h0E96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #539 7f94853a-6c68-4815-8ecd-f889442c41ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 7a343dd4-b958-4871-93df-54c11e3fa293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 d1928370-3f58-44f9-a022-8c0bf299ca14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 1d5bea4f-4d07-48a2-ad01-75437626866e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 958cbff9-1656-46d2-a9a9-dc8a9583ce78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 548ee277-be22-492c-b715-a4394653fac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 cc8cbbbc-1424-44a4-a476-858fe4bbce3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h0C87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #540 6dd494a0-1888-4d7d-947c-419e0d425d6a)");
unit.assert_eq16(16'h06DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #540 af148bea-4f06-4695-87af-c2b269b86581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 f9c2e8ab-ed84-4c25-9093-94f2f6a58fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 10d84bae-2c54-4deb-ba69-60042bab4609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 5ca9d1f3-84e0-412a-85d7-437ac33a1ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 473a2695-8c00-4297-9bf7-b25b401e4ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 461d423a-c0a5-493c-9779-d91de10f1683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 2c605e45-0fb5-4d0c-b265-42e137c43896)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0479;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h05A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #541 769d5a0d-2703-40f2-a547-614d44535e21)");
unit.assert_eq16(16'h0479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #541 c4e019b9-cafb-45ef-a015-de004da9c39e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 0179346a-910a-4cc3-8ca7-604e4895e04a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 a79ab14b-266e-40c2-bc03-d90d68bb03b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 0e614f68-5c9a-4ea5-aaa3-fcafbb197964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 50fec418-4787-41ce-8bc4-0ae80e620fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 5127fc69-f9a1-4d9e-b565-063079e38e63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 6b6c2c59-ce44-43f1-b611-8b2701db5005)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0662;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'h0662, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #542 af56f3e8-a32a-4a29-be9c-7f57e1677721)");
unit.assert_eq16(16'h0DD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #542 6053a490-129c-420a-885b-b5833236abcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 9fb0cce7-ce74-41d1-a879-f341e3cf44ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 1a69980e-836f-4bf9-84df-03153b78cf7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 aa5367d5-8511-4c45-a3c3-6e198101383b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 13228746-b5a8-4582-adeb-104c3c885193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 2c600876-11da-427a-b040-8095b4bd1030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 e6c235b9-acb3-47e8-b359-523017520747)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0722;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0391;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h0722, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #543 71eb1237-41bb-46ed-8ea6-66db8e59fad4)");
unit.assert_eq16(16'h0391, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #543 e0815cb7-465f-465b-bbc2-d4c85a098745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 528362d6-c816-4723-9696-3d91a866df23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 13a28dfc-c4b1-48bb-a30d-d79694e3d31b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 6d3044d9-feb8-4962-9100-1200e550e773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 1504f01a-0c12-4fd2-8db6-cffef83e88d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 f35d008b-4185-435c-a07c-3154d2cf7479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 0853c1ea-f571-47ce-be98-603d25153ddc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'h03C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #544 58bbbc2f-3dd9-4bf2-9f7b-6f9c52fe68e6)");
unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #544 a754bd9a-8bc8-4936-a902-4e63f7a9d715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 8f55f9d2-eb11-40b5-b2de-bb112ac636ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 6f9eb7f4-df4e-4b3b-ae33-8fe7e508378d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 3e5205a9-fac9-454e-87a8-a9d8e84cd91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 0dc9962d-80b2-44e1-9184-fcc07379064c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 020ce37b-305e-401c-9418-052ecf71b151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 fde7890c-4119-4ba4-8fa5-2865980dcf46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h05BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #545 90bdf9b7-96e7-4a6a-8e30-82fabf564f2c)");
unit.assert_eq16(16'h02F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #545 4c8f1882-9988-4f57-8dd6-d57886afb06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 1db31cdf-8954-4f65-b267-c2112a3c2a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 2c1422c5-b92d-4cfc-a740-ca1ee67aa3a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 a5f66957-5a65-42d0-bc24-d1d0b3fffb28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 f66eec85-83d5-4e85-b18e-44c6838fad08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 256f65b3-4b38-4287-8f81-0d261d601a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 49a18ea8-6408-4f61-8fb3-77b7efe6756b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h0D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #546 b5ce373e-be95-48a3-b657-d1a756c26da1)");
unit.assert_eq16(16'h0FA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #546 f19f0b99-e447-4fa1-83ff-62e9c765d8d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 99949960-419d-4b67-8251-35f763537690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 c87a55cc-8527-4e30-93d9-c49b8db5458b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 7cd95a6a-c4e1-4f21-af52-45350632d0d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 38499ac2-8e0f-4bb2-94d6-060a6e8f2a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 93973cae-79d3-40d0-a332-3039116b362e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 006b3445-3c25-4b90-a1e7-21fb709fa125)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0579;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h0579, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #547 bd7473c9-102b-4e2b-b648-6f2756cb947a)");
unit.assert_eq16(16'h07C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #547 ad8ab322-a4c9-4d49-b46f-7e3fbf0337a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 685b2b55-5997-4c38-aaf5-fd199f9c0ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 7446ddf4-e75e-40d8-a54a-1c4e1301c80d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 d1ce3c8b-afbc-4b6d-84b3-475331adc3b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 f5a0c755-6f66-45d7-94aa-d33a7e1936f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 74b7f3c1-4e1d-4121-b3ac-238848d9a7c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 d422d5a5-0c24-4ca3-ad13-b60881a8eb63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0895;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0868;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h0895, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #548 fe8f5216-40a3-4754-901a-7e024133f7ad)");
unit.assert_eq16(16'h0868, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #548 35fe8a03-5adf-47a5-862a-4e48f2a392dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 02465b27-3c7d-4a20-a4ca-0deb0f53790a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 8472fd73-4b0e-4075-ac65-df34f3b1c477)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 21dd11d0-9ebb-4567-81af-4f24a56cd114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 c1c88543-bb5d-4ac1-8abd-0ed46a3f6e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 35eb7b0b-1cac-4375-9ad6-cc74787e7e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 60a6db8e-2712-4250-bd00-caa6585e2949)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0026;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'h0026, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #549 01c722e2-3c12-411f-9f7a-430c9c93a049)");
unit.assert_eq16(16'h0D27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #549 b499bed3-cf63-4942-a040-9bcc4e890296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 097ec984-b7d2-4434-bd47-1a3a89eb3467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 89e79658-b06f-467c-92b3-d8cd7e03d616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 5b447420-b1d1-4270-98e8-c6af6a5ff12e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 fd3a4626-0090-4902-8f5d-26dc6dee24fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 12196519-d4e0-464a-afa5-e99454c0118e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 8d3809ac-5b39-42f0-9a22-e69d39f21e67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h011C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h011C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #550 d057fa6e-640b-465f-93a0-b4cd48f8b7f3)");
unit.assert_eq16(16'h0FF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #550 4a2917d6-8266-46c1-aeff-8eea27e7a00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 26a4967b-ff4f-4119-ab30-4f67d29df908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 fd3147eb-8ea1-46f1-999f-361c4b69718f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 11a3326c-1857-405c-a277-3aa46d9e8f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 5e101a39-abcb-454e-9a56-ddacf05e648d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 2836e3b8-3efe-4b8b-86c6-003caeb09aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 afe58a43-c3cf-45e1-8a6c-f6828d21347c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h076E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h076E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #551 c8935309-e873-42b0-913d-8c9163ad5d64)");
unit.assert_eq16(16'h01C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #551 92cf206c-2fdc-40d1-a764-2e9fac89ca40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 2fd002ce-818f-4911-b53d-1702b7bf8fe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 2896c5b4-c6ff-4d96-9fdf-8254f8436b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 7dd7d0d5-cd83-4691-83b5-dd092b46b458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 3041a713-7f03-48b3-b3d1-704b52ae82d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 d72a1faa-b97e-4a8d-9a2b-91fe8c855a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 e2582439-a61e-431e-a1a2-eea4cefabb4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h081F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'h00DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #552 bd9b4c53-3426-41cb-bcd7-9469557171ae)");
unit.assert_eq16(16'h081F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #552 ce8b5f07-4662-416e-9c04-51548dfb28dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 c8dab219-3eb6-4c1a-b647-9c36c86c4d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 641d7b0f-8299-4dd7-9a46-a8f7095a96eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 d6cae694-92e7-46d4-b8a3-cf78f9257e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 759661d5-3873-42c1-a9ca-16dabfdeb28c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 a47f522d-eb6a-4064-bc64-d159ca6d128c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 8af29aea-db3e-4573-8c6d-443828c42390)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'h0E38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #553 3f69f079-c691-4561-84ae-eab3d7bd0318)");
unit.assert_eq16(16'h0729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #553 37f43b96-2285-4e94-b97e-8a125ff4051c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 b26fee7b-7614-4a59-a391-3317cb8ee8cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 d1e4602f-c97b-4971-bf19-f85c68265dc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 6a9b3472-818f-40ed-a852-4ecf2088d143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 16df6a50-fb71-4f95-bc4d-217f0a920358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 3b06c972-ad4f-4bcb-9af2-9f9feac8a8ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 d2d2182d-07c1-4d85-b061-11c774dc4222)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0454;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h010F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h0454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #554 03a8d38d-a2f9-47c6-97f3-5f622714d45b)");
unit.assert_eq16(16'h010F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #554 d435c1ce-21cd-47c9-b4cb-b7795fb786dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 fb74f3ef-3ee0-4885-b535-c91500c90dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 4b1024ba-f197-4ec2-b8c7-0784d0502ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 310a0661-f819-4002-9f78-5ba7629347ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 9f861b6b-5d58-4c46-8abf-a68bde6126b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 566ca02e-6aef-4c98-a9e7-73af180183a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 ba2608cf-0de0-48d3-b95d-5aab6a7c642e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'h0BBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #555 56bdf52d-6751-4c36-af55-54dcdb7cb868)");
unit.assert_eq16(16'h05CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #555 92317fa7-cc31-4467-b6b4-0ef32dec11b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 86310f1a-25a8-48d8-8b62-9c8d5132ca31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 74e14c53-e5f6-460f-8ed8-c9f0b4fc44d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 180e84ba-b071-4c86-b991-99770921bb23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 adf78733-fcb5-484d-ab08-ff5a3293ec32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 634df47b-9306-40f6-a6bc-bb1aa69a5fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 df247f2f-3cdf-4da7-a546-89ed8cf8bd04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h0E53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #556 d6e9d0aa-a4b1-4d02-b258-3866f501857f)");
unit.assert_eq16(16'h043E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #556 16c01d1d-c252-4dda-8068-aad86ffdf38f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 6e6d34cc-36bc-406c-8cbc-7a670c314c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 9c115b65-9f8b-4809-b524-868b6153dfcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 78c46908-34bb-4974-9859-c4a597130321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 0be53970-5d0d-449f-b4c6-ae746f6f74ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 17ed4095-3f26-4c0c-9d62-32f85fc858be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 3bd9bc73-b418-47fe-b79e-634838b49c43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0859;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0266;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #557 174e9bef-9616-4c41-86e4-57cc3f9c57ed)");
unit.assert_eq16(16'h0266, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #557 ea4f814f-df74-4862-afd9-196e81af337e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 87d294b7-fcd5-4dc9-a6f5-e8165f2a1ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 580506dc-2ba3-4cc7-9258-035bf3b2ed5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 e4feca53-9fe6-4795-ab3f-a080458039b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 1a3c9dcf-5261-4d71-83ed-89599d4a708d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 d00d30eb-548c-4b38-b0c4-54b68fd4273f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 0dd9fd5c-104e-4cf8-b941-2bbe573e5a02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h0A14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #558 e3944ba2-8ffd-4a22-a851-045be58f0949)");
unit.assert_eq16(16'h07BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #558 6560bf0d-05a9-457a-b07d-ba76813ebe03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 88288389-c78c-4f3f-b60c-4061b7366c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 29ea459b-240e-4b5c-ab53-d31b1419818d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 dbac496f-520a-4237-9bad-1644085d1413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 d60481fa-3031-46f0-8bf8-3197cb8c65e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 edb7d4bb-0a23-4bcf-89d7-a8e50dd31ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 14ae926d-5df8-41b3-abbc-6ae5124a5ec9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h0F53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #559 c6aba3e8-0170-4a51-8949-01dca48a6fb2)");
unit.assert_eq16(16'h0DF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #559 e3e2f1c2-4b39-4608-b304-6d522e036452)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 a7fad593-ee8d-45bd-b283-9f0e62102f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 7c55cc37-a786-48ac-9730-eaf38c433496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 0259db96-5f7a-4db5-8f0c-ef2ce5339916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 7da88c39-1e2e-4706-ad24-ff725c756db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 e83fbe88-11a0-4308-9aae-776cc1d2fe03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 87610aee-cc8a-4c44-bdc6-752cb9bb827b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #560 fea89a03-3781-41e9-a3e0-5ba216fe116b)");
unit.assert_eq16(16'h0A23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #560 fac3ab8c-41fa-44a1-8d3b-dd10d2dacd70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 f0b3b50f-f10a-458f-bfaf-ff594904b63b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 47bb5801-39ee-45e7-849f-081a2df9aad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 b34fb08f-4ab5-4c44-9242-a2306306dd75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 932abd76-20b8-41fa-ba8b-2704153d31f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 f04a63ac-9066-4684-8121-58a0269efd68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 1e3e951b-7477-43e9-8bce-72cebc5c3c2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0266;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h05C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #561 b032e126-73a6-4197-99cb-00428753aa5e)");
unit.assert_eq16(16'h0266, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #561 21445ec6-9c9c-4ee5-95c6-98181bda1b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 b55344ab-838d-4e3a-b972-e739f76b887b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 22b25e4d-2fab-44d0-a87b-b1f2f750203c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 b910bf95-f520-4f77-a087-290380a8739f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 64d14cfb-96f8-4e13-91a1-546e9fee8674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 699fec9d-3566-4787-a3ea-b3ed9249f2c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 dfdcf0e9-9f6b-475e-abd5-e193dd82f008)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h0D09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #562 6d6d69c6-f976-46ff-9f4a-f02b06a00b5c)");
unit.assert_eq16(16'h0B6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #562 156dd189-4f1d-4cb3-8b2f-c88057fffb32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 8fce243c-5873-41c1-9de3-41e5a4e8708f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 33e70a45-bb38-4ab0-b9e3-71da7630c42e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 9ca566cb-d8c9-4cbd-b41f-28339280e00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 6a8f10fc-316c-4fe3-937a-8ee64df21c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 c11b2f9e-c7f2-4247-ad95-b1fe48c8077c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 354817e7-b4d9-4a3d-b0ff-5d0ae82fb8c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0021;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h0CC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #563 6aff36de-6d39-4e4e-abfb-521209cd8a77)");
unit.assert_eq16(16'h0021, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #563 3f41741b-5642-4df0-a9e0-0bec56430ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 a627f732-eb91-4033-8ff7-a6a34af67e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 38fa0a10-c1b7-4bff-9b15-2685c9af1de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 2760dae0-afa6-4a55-949a-0324654d1687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 9ff12c14-65fb-4865-ab36-4431a331fd0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 835d8a01-afe9-4fc2-8d92-4e3e4e7fe8da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 5212db58-6a3a-4f13-ab4b-93dc09e169e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0217;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h006B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #564 f8c2e206-b69c-41aa-801c-c0d99f4aba7c)");
unit.assert_eq16(16'h006B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #564 0ec404d7-fdc5-431f-8c08-7573fc5352b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 528e3625-f59e-4ccc-a190-3b3d1ad400eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 46120eac-dc9c-4fe1-9f62-b88e9b992ee3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 cc29b127-0e7b-4744-8829-f4dfc8849a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 21f835e7-ca33-43bf-a2df-101aa37c4522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 89971bb7-544e-4e03-9cab-e5676a414d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 49d21bc4-3cab-46b2-9c10-1912567bb653)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h08C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #565 c9c918be-4676-4265-b972-087995877cea)");
unit.assert_eq16(16'h0AF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #565 93484e18-674e-4205-935d-fff0c6bb6cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 ee38f7cc-232e-4c1d-92af-854a75404391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 79084115-00ce-455e-b09a-26073254ef80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 3f4c48ab-2c8d-4546-a84e-4f4306ad015e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 dec9965a-7d7d-44d2-9774-0161cbd9ba79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 8637aaa5-bc28-45b8-8e81-940d4479979e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 846c356f-500f-43f4-b2d8-693efb0669e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h0FCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #566 9e8611b0-f49c-4af9-b631-a0dd0fa79dee)");
unit.assert_eq16(16'h03E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #566 b37d3582-d61f-4855-a2db-af2203483896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 0dccd179-e41a-407c-b0e9-539e8430d03c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 66b5f841-89c7-4b5b-aa8c-852ed4e10d3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 eb09d823-19e2-4e6b-9f2d-862ca2f39ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 b7c12f3a-23a9-4c1b-b768-6d4d529bc914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 c58b75e1-d971-4db0-8f12-017b31b72ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 41f77e4f-46bf-4769-972c-61aeb1d6c2cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h0F1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #567 5ab9dea3-3164-4672-a39e-b0774c568fb6)");
unit.assert_eq16(16'h0BA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #567 11586689-e38c-44e4-a39a-ae065ef9988a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 9c0f9f82-b414-4ac6-8142-2dab214804f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 a717886a-f880-48bb-83de-46d79568a94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 68e97b77-aebf-4855-97e8-d073a6cfe37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 b81e01e5-29c9-427c-b43d-6a8a99e6b40b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 2cf4c380-ab40-45af-bf23-f91d3964a300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 dc0aa6ea-f380-46f1-af9c-a6460204a638)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0966;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h0D94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #568 3e61946c-f6e9-4600-9cb3-e1558439dd8e)");
unit.assert_eq16(16'h0966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #568 f930cc49-49bb-4975-9f84-33f1ba191679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 d96d4a08-1cd8-4980-93f0-51f39f297d8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 fb1e4321-c7be-4f30-b52e-35e20843b27a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 32a1db1f-46e2-42ee-81e1-d7611dcab0af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 383836c8-a737-4a24-ad19-301f8247830a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 126a91e5-fbd7-4c3a-a9e3-55d2cface629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 73bad70c-c8e0-412e-aaf3-173396ccbb68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h031B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'h00E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #569 d1a05c52-9f97-4e9d-af74-a335b92e28b8)");
unit.assert_eq16(16'h031B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #569 8e361a1f-dcaf-4014-aa81-89f44331ec52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 938d08ce-64e6-4c95-868b-57436f54a4dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 a4d1b115-4fbe-4328-967b-c2f392ea777b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 8e62029d-8ec3-4492-a3f5-925eb2af65f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 d5167a38-5527-4970-87d3-06453764f111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 30a0ff15-0ef2-4fea-a165-cf5a03c4cd09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 0f005320-6e60-4637-b32e-f5fadbb8cdba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h091B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h062B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h091B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #570 5c7844ea-3ace-420e-aa60-f7a314ef1353)");
unit.assert_eq16(16'h062B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #570 6057c932-bc7d-4479-aa7d-51f9c40a6de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 9932c1c5-2069-40eb-a40d-5e5cee350656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 ed3ec18c-81ea-495d-9cf2-af2bbcbd0a41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 d2a41422-34af-42cd-be68-2d236f1bef98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 c0b8bc38-66fe-4d42-91ab-4a5fb8f24e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 9ee61f29-3b16-4879-a06e-fd52c97e56bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 a760de4c-bc4d-4cd1-bee6-fc312a7743ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0126;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h0126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #571 b8a961f6-adf3-4259-923b-60ea9465be71)");
unit.assert_eq16(16'h0FD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #571 f9e0cec9-fb78-4b7d-a6bd-c1e5314605ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 382c298c-3316-4163-b708-d72b6bb3f633)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 fc396c28-e1d8-48e3-8887-8cae3621c347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 39a38234-e85f-436d-829a-3bc52beb6688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 5bea3c8e-8814-4b33-8beb-6c7ad9772fa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 49f0963f-82b6-41ba-bcf9-3d88886b8168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 668d8ff5-a7bd-4740-bff4-2403558f549e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h0DB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #572 4f9f60c1-24ff-4886-a567-47532d47ff83)");
unit.assert_eq16(16'h04A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #572 32cf5b7f-5f4e-4b50-8993-e3b855dae1a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 ffe7e1ef-8ed3-4fb4-8ccf-e97227ddb070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 c21a2e09-189c-4329-84fe-d568149e6e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 e0560406-62e9-4c84-817e-fe3091fa9f46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 07f64b3c-3bdf-423d-8569-2312642a285b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 123b7950-bb18-4e63-84e3-ff34ddfbf3b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 a9a1056e-dd4c-4934-9ff2-e0af1d7e398a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h084C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h084C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #573 4fca456f-dfc5-4d06-9587-fdc5af8c58a8)");
unit.assert_eq16(16'h0F03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #573 963ffcb3-752f-4ea4-a6f4-db3d4919387e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 9ac186cc-0bf4-4d78-9c2c-61b914505240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 541ac1b3-0d06-46b4-9fb7-1757e121177e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 b193324d-de9c-4b8e-a8e9-5027588c5f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 3e91a832-43c9-403b-b7cc-85b579c6c435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 0223f33d-d81c-4ab1-a278-82f007f91e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 6329f89f-a792-48ed-849d-cf43bc19b9df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h0E0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #574 8cb2cdc2-98c2-44f7-b6a8-0d62fcdecb4c)");
unit.assert_eq16(16'h0FA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #574 1ad81154-4900-4b34-bd5e-b58abb97f393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 cb1be67d-3d6f-4847-9c67-5ea41c0a2c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 9e05c942-c367-47b4-a8d8-3365d58db846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 c198234e-290f-4b22-aed1-a9f0c511bd18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 56765a04-8010-499b-8f6f-12f018d3216d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 0f1f950f-e651-4f42-8bed-ec3676e6db19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 84c2d960-521a-4273-a48f-8a569f987e4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0897;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h0DF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #575 b0ee2458-77e3-45be-839a-4b651172609f)");
unit.assert_eq16(16'h0897, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #575 f4dbff2d-95be-4471-b8b0-795d96a9d598)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 c7c1e5af-9b74-4da8-9446-689a7b85e4f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 6aabe033-0b2b-4328-8e61-dee7cfa7e354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 8d9c9ccb-b605-4cc6-ba81-c65f024afc42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 7081eeb6-6338-47e2-88e9-31e1e0c90c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 e675e46c-fefd-4f46-b5a4-8806d7f9c3f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 6217ee25-97cc-4888-97bf-6c8981d7a715)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0885;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h0EDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #576 516b58b8-4ae1-48d4-b65d-4cce3c63fa73)");
unit.assert_eq16(16'h0885, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #576 784f8840-2ec6-4745-bed2-ae11155aff59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 4cebec49-5520-4f2e-91d5-dfc4ece2f1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 75ac27eb-15be-4cf8-a8b8-32072bffe89a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 17cc5799-65e7-4596-ba0f-6c313e563dd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 abb24b59-7526-428d-9441-56414bcaffac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 2c5f6829-3941-4db1-a402-da71331f6c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 6fe301a9-c0df-44d5-9acc-0de176325e5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h02B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #577 401d42f9-17f4-4d9d-945b-87e43cf97267)");
unit.assert_eq16(16'h0C3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #577 27fe81fa-c27c-4894-954c-fdc37227eb3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 ddbf6f27-cb93-44bd-bd9f-34645d5cdfad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 99abb064-10ec-447e-a970-3015271475c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 d512c2bf-748a-4514-a494-8664f1e13d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 d741f78b-20c8-417b-9689-e4f0794dbd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 b4ede9e2-5113-4d92-8a27-686036fd3290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 064dd3db-1177-478e-af46-d4eee6bd52ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'h0AEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #578 d8de5ce1-7660-45d7-b643-9ecfe3113290)");
unit.assert_eq16(16'h08DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #578 703c6324-27da-46a6-a23d-4a5683de2ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 1f7b6080-b3fd-49c2-97d3-81121c07f345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 189e9510-7643-4a3e-9509-f623cb509504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 05ebe2f8-e17a-458b-b281-4f85d3f4270d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 58b41f4b-2e49-4803-8544-863396ac0486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 0d4cf0ae-611d-4ac2-b253-272e178b73ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 73a1daa8-ecfa-4aa0-b154-669c51da3823)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h027B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h0F3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #579 5b271d95-8a83-4fd6-828b-1784cfe35c95)");
unit.assert_eq16(16'h027B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #579 b8c035d9-eec2-4c36-b8a9-73bfdd4a2e41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 6ffd3bb8-8b49-47b2-b1ea-92e84fe6663c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 f3df81ac-a090-45df-a7b8-44cdf2a8e4d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 5acb499d-b9c2-4698-9d14-08aa9967a1c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 32f44200-4f39-4431-8561-783957111652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 a5481749-3437-4dc1-a250-ec22de645f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 5cb887c1-32eb-413d-ade1-2f6fb0b39678)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h0E6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #580 62aac51a-0842-450a-a16b-90c89b43701f)");
unit.assert_eq16(16'h066B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #580 0ce2f5e8-f6cc-4feb-9868-25abe15e3d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 cca47d6a-b86e-492f-8507-4bef8a6e92be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 1c3fc8c9-bcc2-446d-b0f1-60710c6061de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 354b4aef-c79a-4b9e-ae2b-ea6018784f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 eebfe0aa-d902-4272-ac6c-698a7a9d31a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 812ede40-aa0d-4ddb-bd47-fa3c2e99ab5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 b3647963-9896-43d3-b00a-c53797c50a73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0412;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #581 abede60d-c5de-4bf9-a224-caa480b171cf)");
unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #581 3b48a298-fef1-45f1-b2d8-bb22c96a49e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 2a9631ac-2d84-4b7c-b55a-1529519122f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 3f4c2b0e-9c8d-4b2b-a69c-327125567a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 6d56d3d3-7a12-4ace-98a9-aff1b75259fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 41fe9f2f-3a4a-49f3-9ea9-ff509df22a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 72062ee6-4a14-490c-82a2-188509eedf5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 fcb5799a-0b76-475d-b863-7cd6ee4afe8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0876;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h0876, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #582 ed556a8c-a68c-4dbd-8ced-790d5425573a)");
unit.assert_eq16(16'h0B4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #582 d94bb471-06c0-4736-8a91-de81b3d7252e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 db559b56-4008-4da7-a510-b94cc5540ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 ab9d19c4-6020-4d66-98b2-2ee8b38a6c2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 70098673-ff21-4403-a355-f28de74fb2ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 20fcfdec-853f-4c59-9533-7c0191db84fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 fa0987bf-5627-4af4-95d0-546d132807a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 633cea4e-f845-4823-90e8-b593ef38bcc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h086F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h086F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #583 3a85aa98-8de5-4079-86e2-8b2ea5d140f1)");
unit.assert_eq16(16'h0C45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #583 584e3afa-d797-49c1-acbc-f94857ecd82b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 53142607-9b75-4814-9322-edca9b3eefda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 2f3bdc8e-0ff1-454f-bf0b-2ba2907baec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 6a3e7ebc-7137-42d6-8da5-14f7d3d42d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 ee71ee0c-d8e2-46af-aa4a-d90bb947147f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 362ce6f2-4adf-47b5-a603-7bb6e663efb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 135f5888-92a5-4520-b307-d1581bbd820e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h047E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h0A0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #584 5a40fd1c-a5af-463e-8781-41c20bb9cb19)");
unit.assert_eq16(16'h047E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #584 f0db760e-5de5-4427-9d00-2fff76052663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 7b792168-3fd2-467a-ab52-cbd2d08023eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 6fad29a5-b422-4ade-b64b-1a0aaa4beceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 c1d8029d-b95f-4589-a6a9-02202f4f0df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 7377ba0a-0560-40c4-a13e-9a7995bd9e2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 9e467da9-4cf2-4500-8866-2abe71d5eaee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 0e903a13-9390-4767-b565-75577c63fd43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'h06BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #585 c31df2ff-2a3f-4ac5-a57a-3e63998e73f7)");
unit.assert_eq16(16'h08B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #585 97ceb0cc-7e26-48d1-b749-67815b3da690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 ae895fa5-2f2f-433c-bc27-dcb16c09829a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 37c0a622-cfe6-4375-a161-d2a503e9778f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 57142060-d83c-4d37-87bc-fa868f4a6842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 5b24bbb1-2b57-4b68-b8a4-a108e20020fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 93c57a3c-373c-475b-a60c-a279e29d6b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 14c619f1-5794-494b-9d7a-dc4273a57c7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0356;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'h0356, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #586 cfbb7c18-85b4-483f-ba82-bb17e41560af)");
unit.assert_eq16(16'h0694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #586 959c4942-0364-4a3c-bad2-4c698a5cc53e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 32f72809-8a82-4f98-916e-8e09b5d28b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 eda0a916-4984-4632-9b8d-515d22953b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 35c8135e-7bad-4b0e-8190-0d0a72616e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 f9103038-bbb8-42e3-98be-c5c043778efe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 87227c2b-4407-42c3-9521-5990f25a08d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 9f1df4d6-34af-4051-9af9-222735d70b3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0906;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h0906, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #587 b18cbc7a-fcbe-4530-9d19-0995c80cd8bd)");
unit.assert_eq16(16'h0127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #587 8838728b-804b-496f-a1bf-2e895310e4e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 af32c603-908b-4831-80b1-8860993423e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 a45a00e2-2503-4068-ba8b-d4f401f9fdba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 81fa0485-11ad-4df6-877b-d3f9e312347c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 8c6c4d56-5159-4ab2-bf97-1ae170c7edb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 192b3d3d-0a9b-4055-943a-efd58730d8b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 e4cece87-56e5-4b5a-bf4c-967e11da187b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h0DFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #588 47567ff1-357e-45a3-892b-064f11991915)");
unit.assert_eq16(16'h05B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #588 f1b9906a-3a95-4a7c-a0c4-ea159da47fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 438882b8-ccf6-4d4b-9201-a70876adcd84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 d3cf72ec-61cc-4562-b6d3-ea8de4a0a07d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 54262d3f-e0d3-4f3e-a9d4-ff66928d4bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 ec53aa09-8131-4aac-85fc-ba026fe15ad1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 76b79e2e-7ec8-4e66-8e9b-ee22289b54bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 784d99b1-3594-444d-8ba7-60a7426e799d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0317;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'h0C0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #589 934527bf-5863-4271-9c65-d8aa9df56b0e)");
unit.assert_eq16(16'h0317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #589 0633635f-0be6-45de-9a81-3d6f2a40689f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 bbd1dfb9-6d15-48cc-822f-c95a44963ab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 b76bcf37-e42d-4702-895d-4f0b2a307d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 ed492f93-79f8-4677-9ae8-f21eb9ca2b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 a322cef8-4a76-47ae-bdb8-694603e63001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 d8045c34-2471-4fe9-9e03-fdcbea1dcc78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 4eefbd55-a8f0-4570-adcc-042a3a3383c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ADE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0557;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'h0ADE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #590 dea9026e-6191-4ac0-b44c-fc0eb2f16643)");
unit.assert_eq16(16'h0557, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #590 17e41c73-65bd-4f02-a304-a6475b1d2d4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 ddbc0945-39ef-4bf1-afe3-dd1658838ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 520133f3-20d3-4af4-90a3-fa7717f61b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 49cfddee-97db-4fb9-b05a-6ea213274af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 b9bc22d6-c6d1-45c3-af68-1819c3c5b059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 92a1c9d1-e634-46c6-a2cc-5244e5eeebce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 90738e83-f7d4-4665-951c-cfafd77dfbce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'h03E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #591 ad315c06-288b-4823-95f8-9b52a491d20e)");
unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #591 ef61d705-8cd0-455e-88ba-d519554ac8b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 2e62f9b7-388d-4b8a-ba7b-9c8d949c1220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 e3bc0bc3-c03d-43e4-b031-030389fab4b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 44ac98df-c32f-4ae2-af15-c69a5cccc48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 72f62789-91ea-4ef0-ba04-213f3cf62b95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 1eec8cab-54f4-4550-83da-f558217bf281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 d408b563-6ffc-4a29-b5be-abc0526c13cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h033E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0288;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'h033E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #592 e042731e-fe1b-4d51-b950-46ac09834ae3)");
unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #592 51fbc52e-2b4a-4203-ab30-2a434b5e8318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 9d7d5df9-14c0-45b4-b41d-73b2e8300487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 ee8c54da-de2f-4b8d-9fa8-161701a79982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 1a9a478c-47b4-43a3-b1d5-cbbce01492d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 69471813-5183-4bc3-b1aa-deba32673521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 48a53189-9f1b-4a51-b0a6-867429141e52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 f3843a2a-411c-463a-b8c6-a72ec55cecdb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h0881, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #593 4145fefd-26be-4485-b4cf-0fd24b85ee21)");
unit.assert_eq16(16'h0A14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #593 1a32c9b7-a4e1-40a2-8d1a-1df0f37deddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 0a393cc4-ff43-4a7d-850d-941614bcd4f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 4a9d0ac5-bcd5-457a-be6d-4a0bc8d09032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 803d557d-a6d2-4757-8735-3824e9eacc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 40d72b67-7cad-4953-a058-a2a685011f9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 a6013610-2fc7-4ecb-9c38-4e848c468e98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 b175d7b8-a8cc-4252-aa18-aa7b3d861788)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h07AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #594 4c88c96b-7292-41eb-9530-05cf9010296b)");
unit.assert_eq16(16'h04F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #594 b4aacf14-24df-4c32-b2c6-c5db17c2b7c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 ed5fcf77-b1ef-4462-9db9-a921e140a4f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 c8c0d369-35a5-41a2-a46e-9496774079f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 a7a63bac-968d-44e2-8de1-a54593e4e883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 c8cdb553-6559-4765-b931-b011dbe7664d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 831d50e0-f5d4-4ae8-b31c-8d3a0b4f6187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 308b0568-fd7b-43bb-a6f3-4221b543dff3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0947;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'h07F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #595 391536c0-c253-4405-a7dd-8ee10b73200f)");
unit.assert_eq16(16'h0947, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #595 9f308165-3b5f-48b8-ac62-18a0e0d7043a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 e3904de2-ff27-44a8-87d8-b9ca00b03cfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 2706a562-1928-4495-b995-2862487f2946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 32789b56-c2d9-4f4b-85ec-019f8ee42b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 8e981ce2-6f10-45b6-b646-ec5a025919fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 2891a06d-bc5a-4bee-9938-7a98132113cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 395764a7-e37d-4dbe-b085-243c3acb4189)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0276;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h0276, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #596 8777708a-cf59-4a29-b7c7-827752c038e0)");
unit.assert_eq16(16'h0F68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #596 7dd39dcf-5c75-453a-a692-3e2fb7ccc5a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 357384d9-e602-4a40-92aa-cc68734e74de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 b2031b79-596c-4760-8304-299997fe81f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 e334f22a-d550-461b-ac2c-5ffae6fc55b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 48372f7c-8e28-436a-8fac-e73a5eea6a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 de56e906-bcaa-482e-a75b-ccb083fa6a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 c3d2fa50-9b64-4661-9917-dc79b5db4698)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h047D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'h0647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #597 ae609c76-a855-4f4e-95bc-aa18fe289ab2)");
unit.assert_eq16(16'h047D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #597 88ed5e41-212d-4b45-b5ce-5057473b2a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 79f4984d-2b61-4629-bfde-70a8c9cf20b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 d8690ed5-26d4-4037-8494-ef8868ae7319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 6b900306-4330-480c-8c59-0e8c8adf8cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 7e6528f8-0cef-4274-bf83-3d50f4d3a6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 c8cde4e3-92ab-4d52-8881-62eee04b1669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 bec39f77-2ec6-4fdd-83bf-f3f8e0af61b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h051E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h091B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h051E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #598 0ba11a0a-ba73-46a6-a6a5-bebda43563b4)");
unit.assert_eq16(16'h091B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #598 a9a227bd-f176-4c46-92e1-37f7bd4f0268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 bcc2ad86-b6bb-4868-9b89-aed346cd7efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 6745c66f-f0e6-4fde-8a6e-86ff2a45b89b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 55ea762c-f101-428a-80d6-34db76b9f55e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 fb51c698-3f0a-4864-abea-4ed0f6d05989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 9852ae8b-bdfc-495b-83d5-4da072dfa36a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 45a5a6a3-acba-4db6-b86b-178c864ae691)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0816;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h09BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #599 881bdb99-c9ae-4430-ae64-612ebfba8f90)");
unit.assert_eq16(16'h0816, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #599 007746ac-f1d9-4878-95e8-daeacfe7c017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 4654e894-bf91-4a6a-8db0-af39cbe4e518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 912cc06f-1a92-4cf0-9da1-a7b72519a7a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 8da5b995-98b0-446b-84e6-4fa0ab547ab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 6cb58731-4428-4740-ba4e-1706f4924919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 b3f477c7-b192-415f-937b-8c3cb29e93c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 dd7cec8d-f7a6-49a4-82d3-a93deb1617cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h0C0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #600 50e5a50f-1e42-4a41-af79-df875268106d)");
unit.assert_eq16(16'h0FA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #600 ac4a16e4-2454-4c53-8b51-6ffa995e0746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 486762f3-caaf-456e-95f1-b948b4882482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 4a11ed61-a893-406a-a56a-93aae78a668b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 b2da15dc-e042-460d-ad8f-77679a0cd512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 47bfacaf-1e70-4675-938a-3d96735b6c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 02ce8612-e3f6-45d2-ba2e-cf3708ad528b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 b53f24c6-9bb1-420d-98d0-71abaf725290)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0455;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'h0BD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #601 25be36d0-05e2-4234-953f-fe1d1ecda965)");
unit.assert_eq16(16'h0455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #601 d6583132-881a-492b-b00c-cfd94a5cb0fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 29593365-0af0-4a9e-b45b-2b64b70f4e63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 308145c4-c5e4-4ce8-a6b7-967e43eb0bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 2d3d6d36-1411-49b6-ba26-bfbfe8c4dab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 7dbc2cdf-1dd9-4c26-a01e-e2a93ce924bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 6a993536-0549-4850-a772-6e4e403970f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 9c3dd8ed-03f2-416c-be9d-b1b2ea268028)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h026E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0042;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'h026E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #602 4251cf0e-8ab4-45e9-8b20-3b9c2c998b44)");
unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #602 5bc55b5b-4768-4ddf-838c-b27af925ddd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 0a387076-4e1a-470b-9995-efdedc99ddeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 2cd6bd83-68ff-4b41-a05c-e36a400b89c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 1b999d14-0609-4156-89b8-af34dda7d1ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 6e416616-d206-4fe3-937f-2f9246d3cbe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 492009f0-457e-401e-9514-4a277b1532a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 000a07bb-c862-4b73-a515-5185ea8bee16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0552;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h04D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #603 1bf7bd3d-3508-4508-b608-3b42fb05342f)");
unit.assert_eq16(16'h0552, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #603 65633def-10d6-4c8e-9662-1fc534155bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 156c2697-724e-4b34-8323-6f96a22f1389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 0b909575-52bd-4cc8-8f0d-b7b11a1bfd20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 27bba885-d872-4f52-8c75-b8b2bd0031ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 e07b91fd-ef5a-4613-8e6e-217a5cfb1b05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 b7b65b84-75b9-42d1-9233-82cf4db8aee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 7c547bea-a79d-44b7-a1a9-114a2f4acd0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0884;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'h0B86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #604 d5a888be-3398-479f-9728-a7eaa3031f59)");
unit.assert_eq16(16'h0884, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #604 59042abe-047a-42f0-99d8-ef4d2b4898b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 64ef3bf0-5139-4458-b120-42461c6d4f04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 cfad3472-e858-42b2-b250-86dfe817ea71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 3638e359-4459-43ed-9be5-3cd01a7821d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 bb5ea032-6117-4963-8fde-e9b9e4fcbb01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 f08ff234-8ae2-4813-a0be-1258f6eadbb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 dbd7f5a2-b465-481e-9f2c-3e7afa22c90e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0228;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'h0C9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #605 55c113b0-bd6b-49d3-b04e-beb04c1cc0ca)");
unit.assert_eq16(16'h0228, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #605 1540358b-52cf-4e1d-ac1b-a8896a581b3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 8dc927cd-bc42-4d44-825f-5e279eabbd13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 817d63af-b561-40b4-b46a-669659f3b805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 9f68f28c-f02e-48c8-b778-57f2b2ce80c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 7b17f548-65f0-4f91-a969-fb26f5b90d74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 afc4d47d-8798-4075-8fa3-c17d206dc07b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 128bd292-d2aa-4826-b427-aca66230897e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h002D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h0B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #606 6e5cca93-e139-4707-a4d3-6d644a8032e9)");
unit.assert_eq16(16'h002D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #606 47a1b510-71fc-4fae-9f54-df1444c2d62e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 60a120bc-25b6-46db-8cc6-69ea4a283855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 67dd9f9f-b526-4548-a867-0bc8a43de537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 a345331f-a030-44a9-8607-5a4cb7a6a7a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 149ec3e4-c6bd-4de5-88c8-4a70474f1eec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 5d15b0e3-e468-4964-b579-83a435efab5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 9b6e588b-c484-469d-a8c5-59f17c53252c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h0D56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #607 13741235-4cf7-4b41-9b51-f79e415a671b)");
unit.assert_eq16(16'h06F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #607 eaf4721b-8e74-4c8f-b7d7-6baf52aff8b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 1f5a14ad-626e-4e2e-8669-75bcaf7be344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 2071f4ae-bd27-4250-b53e-1bf4229b34c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 f58d596c-ec94-4088-8cde-ee1ad5903fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 4b08c3e5-7b20-48da-a1d1-bbc8934a6a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 3e57ea4f-b049-4815-8021-faade9bc33b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 57800896-b743-475d-a3e0-604795f0fcd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0758;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0053;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h0758, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #608 9d3c46b5-aa7a-41de-8595-42980b08b9ea)");
unit.assert_eq16(16'h0053, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #608 0703a309-0506-4f9a-a552-85c8ed169852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 1c0ba46d-3222-4e02-8289-80983fb548d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 93bcc7fa-bdd6-4bfd-bee7-007af14cdda2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 480fdf50-4ebe-4afe-b619-7367d04d4367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 27a34199-796a-479b-8c09-e3e156f13526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 4e23af74-f391-408a-b7ee-3831048cfea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 87bfbd77-8a46-488d-8deb-0fa7464c0f07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h017D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'h0C1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #609 b3ee7040-04ec-4bdd-a48d-6a9921986d8d)");
unit.assert_eq16(16'h017D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #609 a84c60b3-5719-49f6-b2ea-322119464905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 9d3cc10c-2710-452a-a228-1a15e4687c58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 8c54da6f-2fb3-49c1-ae64-a10bdf8f52ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 07b874d4-ae27-4ce1-a59f-a9afafa672b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 9f66138a-6d0a-43a1-85d8-170f0c1bb26f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 3004d29a-066b-4c8f-b406-49da17eea20b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 5cfdb1fa-03b8-4369-8969-b5869e4b96c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0036;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h0036, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #610 31e805ed-d490-4bf6-b429-9ca93513d866)");
unit.assert_eq16(16'h08A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #610 a9f6ef81-ae3d-4efd-8ac5-74aac0e3d30a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 c6eae858-1437-4ec4-972a-2116dd0b127a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 2519689e-5dd5-415a-ae90-972db9e7e80a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 eed821a9-0be2-4827-9833-5d4b4c6ea7ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 6bdc3864-10c5-45b4-bfee-789fba2ee3af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 26827590-38c3-442c-b075-8fd553c3d5b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 0a6b2c63-6f2a-40d3-8fe0-ec2a4cbd121f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'h0A9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #611 aa42f2fa-6821-45f9-8b03-149a5b7d1707)");
unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #611 57be7798-6f47-4263-8d9f-0e924cf00841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 9a830537-ff77-4cf5-ac97-c3bc014e3641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 25bc5e0d-5ddf-42c5-a042-159d7ffd3afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 00499364-8fc5-4c49-b931-d34d175bad6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 258b5429-6901-4462-a227-f8f9675b44b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 603d8564-fd2a-4d7c-87cc-4e1d169cc528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 9f093043-b271-46bc-9cd2-25e4a8f3ca20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0556;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'h03BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #612 ef71de0c-f67f-454f-ae01-5513ae3c5451)");
unit.assert_eq16(16'h0556, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #612 39fdc219-2725-4993-94f1-db7773f8eabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 64f3c5e9-b558-4e0d-a07b-241d7eab33a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 7c613333-7cb1-40cd-b185-1006b9df83f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 dff62ae8-a6dc-4700-98c8-7c7ccf198ea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 79da8f99-b260-4dc7-8b61-5c3b2d1aceb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 37ac2225-ec38-4527-bcd3-def14611dc37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 0529f88f-b97c-4303-ac05-65bbddb11235)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h094C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h08BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #613 c68c33d1-252c-4114-bc9a-a9f9002b4f2c)");
unit.assert_eq16(16'h094C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #613 ea89160f-ec32-42bb-a4d7-15d6fb3b0367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 2f05b48e-5a1d-4f31-915d-f3e3e92aa8dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 84340b9b-9bef-4777-bb8b-5be9f32b930b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 8e189c6a-a384-4395-aac4-177d1737b977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 6baa6c9f-46a3-48b7-8ea1-c10f82048492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 d76cfed6-c883-4e2c-8222-173ba8889d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 889c815e-8710-45e6-be1f-9cf437707585)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h063F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'h063F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #614 ce77c271-4242-43f4-8633-b35678ae0507)");
unit.assert_eq16(16'h01C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #614 d5c5406c-020f-4eab-931a-1656abb7ef76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 caba9af2-1856-448c-bb41-36b3e1fbc72c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 78b7278a-5c87-44fd-b30e-65ed72feaf8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 25df6518-b630-4a29-ac31-04b28caf0c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 09ffca87-456c-4705-936f-1f273b8dda34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 90508a35-564d-4262-8942-c122db90d8e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 c8fe86de-dab1-4b0c-bb81-22c039ef083d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0658;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0863;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h0658, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #615 e45b2985-c07a-48f0-a139-debc25437a10)");
unit.assert_eq16(16'h0863, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #615 83958312-bb7c-4e9e-9e4c-e955dec2b8ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 36ef9f74-01a3-4098-8160-a83c2d1c5ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 75f6762f-2a67-48a7-aed9-d7e45a14f812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 39546ca5-a9db-444f-8260-12d640d0e2ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 61544489-2dd6-436e-b97c-f1a87d83aed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 04bc3746-47e1-44f6-af94-4909134895a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 b4404821-0424-457a-a11c-c0495eb11c77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h034D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h088F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h034D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #616 be654588-698c-4d88-bfd2-1f7c6cdf3f69)");
unit.assert_eq16(16'h088F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #616 6d1b82f1-362c-4949-a256-126963ead5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 909d10b3-a1fa-4008-a73a-18722445774d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 9231360c-2fad-4154-9d55-f246d209eee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 04e2dd8d-f195-4d86-98a2-3dc85c1f52dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 0f1718bf-13f2-46cb-8ad1-ff53fb2bc571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 53d1ea76-2d09-4a0b-b799-a31b5e0d12f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 fd373ca3-a12f-43ee-9394-422f5e2430c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h01D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #617 f7ed8225-38c7-436f-8c16-54daab4b3f06)");
unit.assert_eq16(16'h07BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #617 5b4a560b-faa5-4b73-b103-18fab97b7cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 f7b95f82-3e05-42d3-8002-56a171d76b10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 09de6941-fbe0-4bea-945e-ae4616dd7d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 17617ee2-1748-4adc-b7bd-d7b96df0241c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 c605257b-7925-4004-8f01-a9751155dc96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 070535cc-97ec-4ae1-ac9c-f6a85d070ee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 69abe7b2-aa19-4435-815f-85e04a134c10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0439;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h0439, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #618 3b58d856-6f14-45b2-97c6-f955bc95272e)");
unit.assert_eq16(16'h0AA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #618 6d90c347-786a-4ebe-b5f9-3888d5052e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 e94d356c-8cdc-4377-ada9-a8df4dcf4d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 f2450a7a-30b8-4ad7-8531-dc68e668a5c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 e1bd0953-0755-4196-9876-8f40e206d77c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 63026947-7b59-4bd0-9b73-7be9c8dbb9c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 e334bf71-ae34-4558-8659-bea61209f5c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 295daed8-fc70-4433-bc43-c5ceac131582)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0954;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h0AB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #619 3f4ddcaf-dc72-48e2-a5e7-2d22af92b710)");
unit.assert_eq16(16'h0954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #619 45a38149-79a3-4ed7-ac70-923d27280aa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 d01f0e8d-c6c9-4318-92b3-99562d75f9b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 38c4ee1c-6bed-4987-a44d-e6720b437cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 912e9117-256f-439e-bdfb-4c6cc834361e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 95c161eb-6165-47fb-ae30-c862ce7695b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 d8a8c37f-9da2-475a-a227-68f151555502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 5af8b4e0-dae2-4e84-8dc1-e46b3c56191b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0459;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0675;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'h0459, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #620 511844c9-d4c0-4894-958b-fbf71ac549e2)");
unit.assert_eq16(16'h0675, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #620 9ce9e62b-9c6f-4aef-b3b5-33b3d6295112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 48352809-22f4-4665-bc34-2ac73ec380a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 26c04995-cb30-4c5d-9cff-d29d1f2992f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 9e8bc694-867b-4078-846e-f54eb849423d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 d9a8b388-3239-4ef2-907d-9f3f079a8424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 9804163a-db3a-4b58-b9d4-3b89dd1a31ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 e584686f-c023-4c6a-9ccd-db543ca2a484)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h0EBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #621 4c85aa40-6071-451e-ade1-cb024c5ec922)");
unit.assert_eq16(16'h0DAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #621 0b4d3efa-1736-4a40-aef8-4e93b14dd250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 7011f28a-16e3-4905-86dd-7ff7d22f520b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 77026ab5-f6a4-4949-b599-e594bce8c62a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 8bca30bf-224f-4618-acc3-c3d352ff0328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 2c496833-a6b6-4bbf-a2ca-83428c98eedf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 fd23fe53-3c59-4129-ab1a-9436e8e4c172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 cb8dc045-6bb2-461b-808b-fe9f0372679b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0789;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0800;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h0789, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #622 6f53c150-a5da-44b0-8ce8-fbeb11ea27cf)");
unit.assert_eq16(16'h0800, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #622 876a3b16-d6ab-4c02-8ef2-cc3360d59d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 f2298d9f-20f1-446b-9646-817b94ccdf04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 3733ede1-5c96-46d6-ac45-331099c72bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 10ade41e-aeb9-4508-b749-5e853c7bd6a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 a4718a77-9d4b-4975-9b6f-b5f3ff3850a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 fccd0717-cd9d-4b25-b91b-c8d75125c0d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 0ba327d6-607f-4890-bce0-5f81b99fad27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h0C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #623 2b80900a-2fbe-4b8f-a79a-28dc5d165dda)");
unit.assert_eq16(16'h01E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #623 f2f626e7-b9b1-44bd-916a-16b565b1974a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 667dc8fa-c040-40b7-8d2a-cc0a6e100574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 01024dc2-4ccf-4ba7-a913-8f60c579a045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 67847b35-c2ae-46de-89cf-4d6a18b02e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 98caa936-b34e-4835-878f-bf81df505fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 8f7734d6-0edf-4ce6-b7b9-b70e2b24835b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 60f1b618-16b1-4e5d-98bb-348ca5847ff1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'h0E60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #624 f2628e84-80f1-4958-b6dd-f9b3cf814625)");
unit.assert_eq16(16'h06FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #624 00252e1b-6581-44f5-b858-c77c4fdd1303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 cdde0c8c-fc15-4b8b-9a3a-023d27e99597)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 9ce1c9e5-0f2f-49ea-8738-bab2543a2bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 555fa6e9-28cf-44e8-8d68-2d5c39f0e71f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 4273444b-e89f-4a2d-8182-0ca3126a5562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 74586c21-a643-4b27-8321-4a9e1ccb2557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 7aac94e6-c009-41f9-ba34-6696971861f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h0FA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #625 6e3855eb-d81c-4e2b-93b1-55c5ca68686b)");
unit.assert_eq16(16'h06CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #625 2bee053b-1d0b-409a-92fe-19ceb494bca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 78174d1a-c9ea-4cfd-bf86-c7d263276a51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 2ba31298-b2b6-49f2-83a0-7f18fd181ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 e52fc9b5-1b00-45a3-8535-7073ec09befb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 98b8edef-0b3a-44ac-ade5-708ed51ce7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 43111886-5c3c-4f69-86b7-30eeeab3b5d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 30e8dfe1-813e-4df8-ac12-8c9454112240)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h05A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #626 5fb8ba54-9b84-4b33-9224-a5fa170995ce)");
unit.assert_eq16(16'h0EF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #626 d52702b2-3b63-4c95-9373-e177917ae5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 41d42035-2df9-4bc1-a406-49940eadf200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 949c2cba-7349-4183-8fa6-2396bc5e0d5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 3817b5f2-2d17-4ec1-9cb0-f43cbc7713df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 53635514-2f1d-42d1-8beb-c90b6db16487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 a4657b6f-08ab-4a67-ac48-663af7df8fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 23319685-2d71-487b-a749-5094957d6fb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #627 dd8802a8-a440-47e8-8355-884510eab271)");
unit.assert_eq16(16'h00B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #627 66b57c2a-3b6a-48fa-bb4d-041fd82eb770)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 5477887f-7689-4b12-a7da-caea58a3ffe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 73cf4e5f-5a55-4fcc-a0ce-a31e76366d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 9a6c2c5b-0c91-43b0-9636-7ab50abd38d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 1c240e2e-5751-4310-85e0-ed5cc8683d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 d40872cc-a626-4d66-88ec-b9c18a2ef06a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 2c09a897-7741-4e05-ad61-9a284cef0e87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h0CB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #628 53336143-85cc-43a5-81ff-dfc7384e07ef)");
unit.assert_eq16(16'h02CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #628 e7e3d716-4c06-444f-a1cd-26407eb4dec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 c59f904b-470e-4ab1-8e30-7bc3ec42cde6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 0b069961-0586-41d1-a3c8-e32c936edbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 31c71373-3ec0-464c-bf82-c5fb13584886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 2174915b-5bcc-4567-be38-53c6517c3d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 eaae00e8-7e16-42f2-8bff-5ad9b995e99b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 b91887b6-694f-4754-9723-2f9c568ea91c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h0BBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #629 72bb1774-6569-47da-af72-1479035055b7)");
unit.assert_eq16(16'h0A73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #629 8b26e59e-17de-4a92-8381-9084fd8577ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 16265de9-4c8a-43fe-81d5-693cbb16ba23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 41a12df8-0c12-4837-9ce8-132e5ae8016d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 7f13687d-1da2-4c0f-bb92-1e80bd964ef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 9beda90a-09ff-4b73-80e8-0c46693ec7ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 fb81ed32-f896-43be-aa96-54afcfce5669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 c2bab0ea-8234-4b82-bf2f-5e81a845fe42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #630 6d9b0ad8-5ae2-4829-9f20-9569961c69ea)");
unit.assert_eq16(16'h0D1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #630 d7b91695-4d3e-4543-929c-a3c887d0475a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 f1f749fb-fa25-469f-a0d4-56c9e35eb19f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 d2765fab-0ea5-4c2e-b2b5-50ac5648e2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 76ebfa1b-63bb-4c42-b733-0d462e4b9850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 322c5144-3184-4c25-82fe-d74753ac183f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 d34905b7-d7ea-4374-9073-ac06e89d8909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 1c82c935-5f40-4083-83fe-31148a2022cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'h0A89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #631 d2c651e6-e1ab-456a-81a9-665f0de6b366)");
unit.assert_eq16(16'h0EF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #631 7c070711-a909-4185-9438-3bb2ff485d06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 d04e92c6-b457-423f-8b32-ac769e702cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 bd55b19d-18ff-4e0f-9c79-b88020a01fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 7f708f90-5f4a-4777-a389-370d3cbcfc93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 8bf7c286-8913-49f8-9067-0cd6b131704d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 eeaf8f29-fe83-47c9-aa2d-2d01308bf686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 3d7cfbe4-fdd2-4939-b852-318d655a5ec2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h036C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h07BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #632 0a78edac-2fc4-4375-93b3-2f5dbae8d2d3)");
unit.assert_eq16(16'h036C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #632 1edf95e3-13e1-4246-8311-a26800f7bdbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 9a408c7a-60a1-4330-b882-027f8f67c2f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 e9cdbadb-9e8f-4362-b875-cae1103152f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 79d11242-3611-4d97-9c82-6c4d39ce4123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 731642df-f0b2-4f60-8c98-d2fc93e45f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 6767e417-10a1-4567-ad1a-8d415fa389fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 9a0164c6-05ef-4ed5-896e-337718deac16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'h04F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #633 8234b458-1ec8-4e45-a745-30172397de5c)");
unit.assert_eq16(16'h0D77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #633 c96089fc-b14c-4814-9395-a3ee46ab3888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 cab33189-adc2-4a46-88b6-8cb0bc147fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 d1f5bc6a-83f5-4691-8beb-97fccdba6344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 66305ecb-e376-4987-b66c-badae98ac55b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 6bc691ac-9cdd-4e11-b211-0e14db646daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 4391010c-8528-4a56-9b18-fcdc9f732af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 0231afdb-06ea-4b80-b5ac-484651682c36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h0CFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #634 2e62b9d0-2f41-41b4-bb48-b6d24fe11fba)");
unit.assert_eq16(16'h0AE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #634 e19b5669-7cf2-4ace-8096-582bbe0ea4c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 a831a430-bfee-41fb-8e80-d554077a4aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 6fb1dcae-eff7-4497-93cb-0d6c08002040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 b9a01a43-3f7b-4d90-8e5c-7a187e5dd3a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 de3a1d98-2eff-4151-ad0e-af94f8668141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 9a25e20a-9dc7-4221-b6ff-fa1de5f65c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 b64035d2-d3e3-4e3c-90c8-bf4ead0c22ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h0D44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #635 6c4d591e-5be7-4472-a8b1-0a63d9bfdf2f)");
unit.assert_eq16(16'h0FFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #635 e0690fc1-6867-4641-be4b-0631e15846a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 088820fb-7e74-4852-b3cb-c99c9543b30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 40364af3-a7ba-42fc-a256-bf1e3373f4db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 513424d8-fff1-4e4e-b575-a12d7374a747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 cac1dd4d-fc54-459b-b62b-17c595137f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 aa1a9066-9de6-468f-893f-d8ee169683de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 4357398a-1986-43fa-962b-6a43e722ff34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h024A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h0D68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #636 1b93047a-f316-4e38-bdb6-b3d6cf9d7fad)");
unit.assert_eq16(16'h024A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #636 4b87c338-a930-4be5-b8e5-dff1d51440bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 ec24d4a5-412d-4f0b-ad01-e1a51845ac96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 202cb5dd-66e9-4c35-9187-4f23224cc0c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 7efead5f-6225-45fe-b00e-25d74d0d8159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 12a288c0-3a80-4449-acfc-010be8a25c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 cbeea9e6-d4ab-4a0b-9471-20ec5cd2139c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 f8a71fd4-d434-4b74-94f5-9dc1dab39ac7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h0D35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #637 f29f0d56-0d8d-4f79-afe6-3d7d1567efb1)");
unit.assert_eq16(16'h0B53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #637 b1a63177-3f25-4f13-93ad-ec94500dc698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 53ca503a-6013-4bff-8374-de341b2124bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 65d82afd-bd21-46f8-91db-8e517f2156b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 c25920d1-0458-4317-927c-d7a701f59c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 fea5194b-0608-4b63-81bf-775f543665fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 f239f6a3-f2b2-4059-95e5-952e4472e862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 a4ffd660-3c78-499a-aaef-711e2d621a1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0612;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'h0BBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #638 e1d1ab95-7352-443d-b337-97e37ec5f243)");
unit.assert_eq16(16'h0612, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #638 7724eddd-d520-418a-8ed5-555d60106629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 6b061122-4250-4483-aa2f-5a8e59064c2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 96393319-2024-4efe-acbb-d56cfb65addb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 309756d0-5c15-45b6-80ae-6b39ed33303b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 fa7f9e93-770f-4611-b5a2-dfc33ba94d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 d56d3473-4b1a-4e01-ba8a-9a1b1dd6352e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 9a0b2b50-8893-4f14-b0ad-8c31142c0f1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0443;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0396;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h0443, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #639 0af598d2-da57-4f21-901e-321429dac21f)");
unit.assert_eq16(16'h0396, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #639 fc26a60d-8c3d-4c5f-9d90-81b2620aa952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 de663d61-83e3-4c28-9b7a-fd1c9e1a2e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 aee1cb0a-f1ea-42d7-b03f-ad6c5488c3fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 2a4ac1fa-36d8-4a06-b332-a225c195787c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 b42de5f3-1478-4023-bb3a-72e4c76157a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 e570565d-2955-43f8-88d0-6d69ae063950)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 5e288a90-2b2e-4be6-93c0-ffaa169e996f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0746;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h0746, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #640 91ba2aff-ef32-4592-815d-4cd93545855f)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #640 e89f95db-3c37-476b-b350-145569086427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 95bbbb0b-d70e-4c69-9c7a-9b0aa03622c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 d87543b3-5611-4b24-862c-4813c6de6f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 fd62e789-0dc2-4653-8aec-40d4c731e60e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 29a6590d-28fc-4bb0-9283-532ec0e68e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 f9fa0562-c2ff-477e-a733-f8224900447f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 9dcc3e28-69f2-4e3f-8448-04418fe9fcb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0159;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0023;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h0159, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #641 a24b303e-62e5-49f5-accd-35a6a61e99ee)");
unit.assert_eq16(16'h0023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #641 8c4b026d-426e-41dc-83c6-55106d257496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 b1421998-61cf-47aa-9e0b-7c81bc6be531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 6f715b3c-b5a4-4190-9ddc-e9249cc57ec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 fc2e5879-69fa-460e-8a54-4305d3701ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 1bc7f179-50c0-4765-8981-43502d3619d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 1573c1d5-2f85-4bdf-a693-646a678dee34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 9401f094-0e8e-4c91-84e7-5b3c436f8ed1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h080B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h014D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h080B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #642 ac5ba4b6-f8c5-4a78-bba5-f189a5586567)");
unit.assert_eq16(16'h014D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #642 14f6b91c-11a0-4d8d-944e-9f91e3216a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 5aa3664c-4466-42c1-848f-b21414d3b67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 c6cfc98d-daa5-46de-b8a1-350b2e0f2383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 0bb08aa0-9532-4eb3-bd05-c8b12072593e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 995ff11a-a339-4804-a472-a852df9ff1d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 64ac5ff9-f34a-4e30-8a0b-094315fb7b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 855c6183-a452-498b-990c-d1721ba76e74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'h07EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #643 aad988cb-0cd1-41a0-b7d9-ae42172e9bf9)");
unit.assert_eq16(16'h04A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #643 881cff60-e568-4bb6-b9b3-6ea0162f44a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 7ae609ba-8929-420d-94f7-58107c9302da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 458f0786-66ab-4154-8e32-e3d84de53622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 79ce7a23-0383-4822-b392-ca7949dbddf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 8a5f59a1-c4f4-433b-9634-2b94e2e17ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 10d721f4-35ff-45f1-8224-5386747ea723)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 ac7ee5cf-13f8-4238-8ae3-a83c3897c7cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h01B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #644 9aae85ae-e055-4a80-901b-bde2a3c507c1)");
unit.assert_eq16(16'h0AC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #644 65a1655b-e5dd-41c1-ac41-3751d5cdf58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 3e18a409-1eba-4d88-b235-00db8136b474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 a2fabe3b-f159-4bf0-aed1-9c968a8106a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 4514f430-b0e2-4f33-927a-f8c9e70b6aa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 75e11ab1-8cd9-4cc3-aa94-fba564c0d6e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 982a03de-aa55-49b5-a1a1-4430deb1f9e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 7793a644-e37c-4017-999a-5613902a08e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0636;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'h02C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #645 bafcf58b-77a7-48dd-849b-c743d68a80d5)");
unit.assert_eq16(16'h0636, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #645 648ded8a-b4bf-44ae-bdf6-18c73b3d79dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 29172475-3306-44f1-8e64-37ea67b21f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 a25d7a76-658e-42b3-bc53-29f1dd5689c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 3f84e607-0719-4f98-9924-22f7b392c3f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 f547a0ff-e863-4f96-960c-8ae6e1da17ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 100aaf0b-6360-4aa4-9a9a-a6a6c4074602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 e0117db4-f4be-4109-95ef-923f98bf2841)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h01D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #646 79c22207-c2e8-454f-95d0-c13517c6fd96)");
unit.assert_eq16(16'h0FDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #646 c3d72834-1772-459c-a970-9d498cb5d336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 31bb4278-23ac-4607-8796-6c8d310a2c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 1076a5df-7c06-44db-904e-8707e2daf086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 d345937f-f6d2-454a-b7ba-5c6b1a7a0d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 17d236f0-90dc-4fac-a856-efbdb0443473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 b05c8be2-9c2c-4766-8438-c830ea6891f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 b96cce29-668d-40d5-94e3-aa62d567eba7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h0C81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #647 ed4af80c-7762-4799-b710-4c26080a280f)");
unit.assert_eq16(16'h08D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #647 b94efad9-e37d-405c-bceb-2041cd766d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 bce32b6d-d647-4a29-a508-87457d98d91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 927b2925-1b37-4053-811e-221c341cee59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 2f814009-03d3-408b-86f8-eaf1d425df87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 409a6871-cebc-4ce4-a0ff-011f76aef7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 f478eac4-e914-41a1-8b8d-49c84b7c85f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 64233425-d564-4bab-b20d-2fec79d1c5a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0770;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h0695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #648 b9a35ddb-a1c4-40d8-b8db-8c42c191b292)");
unit.assert_eq16(16'h0770, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #648 f4d2e854-be81-4558-a260-d1755f1d26fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 8f0b482d-847b-46d2-b4ee-76b24884f951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 af606bd5-2f66-4527-a994-7f87942d1dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 f1b845dd-af48-4212-94b0-7b0a32407c89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 505c4d47-091c-4fcd-b526-54c76b17bfbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 da2e13da-1049-4269-aac6-47ee78414f55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 4bc889b9-473d-4514-b74d-4487a262e59a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h0F2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #649 5c724658-cf61-492c-8b68-b0fd6ba9ab51)");
unit.assert_eq16(16'h01F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #649 c0a87ac2-08e0-4aa6-888c-cf148a38b1a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 bc8e98e8-3229-40f5-bae1-a871948e7fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 e89d858f-630a-41e2-9435-ea7ebfb0ca79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 1b963a0e-8ca7-477d-b0c3-48cf4c6db442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 853f07d3-ec78-40fa-81c9-30ce2475f8f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 1dda938b-c4fc-4585-b05c-d909cf598198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 f3bef898-0e3d-4210-999e-691e6b1ee512)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h087E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h087E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #650 167da56e-559e-48f5-a575-890f70a957ac)");
unit.assert_eq16(16'h01A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #650 e731250c-bb0a-4400-813c-2c99ac32a903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 015a7dc2-f9c8-4cce-954f-379640988ea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 9fd271dd-5fc1-4421-b9a0-519591bae2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 d3cd8752-853c-4549-b6a3-25912e009abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 a89665d5-9ad1-4027-9913-6219b53cd328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 80523236-1e2f-4127-9f50-f53714b42f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 f2da0ee0-119e-4225-a839-057a8ba1b737)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h017F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0060;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'h017F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #651 cec153ba-db3a-4270-9d60-fb3f93b9f28f)");
unit.assert_eq16(16'h0060, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #651 0d5092fb-b1b8-40bf-8b19-4a996c9ea1f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 488a0564-0044-4c8d-b509-c00b7a103b7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 87bfaafd-67e8-48ac-b0fc-d60511c6eb0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 44cbd689-0b11-4328-a4df-434bc9dd0e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 f4672ec2-8a0e-4c76-9ecd-05be7e617ac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 fdda2151-ed96-49a7-add3-5191abb54b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 ae13c7e9-7d66-4c4a-a9b9-7a751c666378)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0934;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h0934, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #652 e08559a7-6e84-444b-8c91-db1c11f50b0e)");
unit.assert_eq16(16'h00CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #652 8cb658d7-56a3-4611-8570-54952fe98217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 1aef2dbc-5e68-4c88-b4d2-3f51bd5e74b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 994d678e-58f2-4ed2-b48a-e30668891b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 9c431745-f9db-4b0d-bdad-f1e63d8253c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 71071e92-3de6-4249-ab49-49eaa6bb6cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 974bde96-86e1-4f7a-9431-5d082cd3c68a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 b5aea65c-87db-4d8f-aa99-c3d62482e369)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h079D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h079D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #653 039cfb93-b348-4816-a103-8dcaf4fd7a82)");
unit.assert_eq16(16'h0A74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #653 20c0ab8c-8b2c-4a25-ba6c-b10757c52e7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 c95d0c88-1d86-41fb-b3ba-c01699455946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 f687527f-3602-41aa-914f-3dffab11014c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 f78eb868-dc78-4dad-8a55-0e3af6b127a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 9aee9f22-2786-448f-8e1b-6881e988db75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 1ad1a539-ded8-4d4e-be5f-77343c54c253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 ea733336-bbdf-4566-9e47-b804c477a4e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h0C83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #654 b5325cc8-ac21-4fa4-a5b3-1bde2bb5616f)");
unit.assert_eq16(16'h0E48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #654 4327bed8-6260-4c1c-a445-0c447c087f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 e882c11e-b4fd-4284-a9e4-322f50135f20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 5cad2444-da37-43cf-a727-ade25581d4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 9afb9e60-2f96-4b60-8cb5-6d84a237b004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 31ea695a-ed8c-471b-9401-4c537a9fef89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 01fd8c7f-a162-4f79-afcb-a5f65665898b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 1cb4fa1b-3d4c-4e32-9b2b-aa891d4fe831)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0235;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h0235, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #655 409007ef-b71c-4ece-a691-055712136972)");
unit.assert_eq16(16'h0B23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #655 5f713e18-be06-4a5c-979d-c18d2b685659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 c3c93e45-961b-442a-9d5f-f58dae56369d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 99d0d9a3-8d55-43df-8a89-6ce1934d80f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 280cc538-034e-4a20-9476-a3b27ac32aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 937fac67-9e38-4aa2-a273-c06e6c1cd3d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 01eb09b4-7338-45ef-92e2-74e8a84c3a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 b98356bb-01a1-4751-8b63-755c13192f88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0678;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'h0678, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #656 5a7fd550-45ec-45b3-84c2-1e864872b61d)");
unit.assert_eq16(16'h07B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #656 413adcdb-a4ed-4e6e-ba85-0d116db5a3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 5c4bee9f-59e2-4eaa-9fb3-9fcfafde541a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 0177d837-b849-4b56-96f0-624f782013da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 93976d97-7358-42b0-bd75-b5669d62237b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 adc549e4-0e0d-4614-b8c0-7d3f1f9b5d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 188a6920-2a1f-4573-b20d-0e94e87c8d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 f8edfd5a-27c1-443d-89bf-7504eefde3f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0817;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #657 a5b480f1-a84e-4be3-8253-1c61a6235994)");
unit.assert_eq16(16'h02DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #657 701cee7c-207d-45f9-a0c4-704925a35bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 86731aaf-3a8a-49a3-a2f0-aac0d083f738)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 1d4f725f-5b44-495c-9361-3ad215a64c9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 6deaa2f2-1af9-4a08-a68d-04d883eb980e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 0d6a6197-7dd0-4d14-8674-bf67bf765d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 ce5826cf-77ab-4d83-8669-c0067b021ad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 d4fea3ee-cda8-4732-99d0-c2d42b5663f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h04CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #658 09b31188-71d8-485f-9cb6-8691c6af062b)");
unit.assert_eq16(16'h02F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #658 d1d4a277-18e4-4827-a9c4-6437697eba6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 030e840a-e4fb-42d2-8a59-bd0fee2d0036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 8c9aff11-322a-476e-855a-6d19bfac1087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 2ae84062-bd4d-4a75-9c2f-9e7543b24c19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 d3447c34-a39d-4f38-95a0-80aa78615e69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 23516455-6c63-43da-94ff-0ec80348ff9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 dc6e8b6a-df12-46f8-977b-1892112e7ed8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0365;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h09A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #659 65a65a15-9c1a-46b1-9406-68d7880a82de)");
unit.assert_eq16(16'h0365, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #659 fd4d860a-e828-4267-9079-29f145d5af45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 6600e28e-c35d-4c19-b0de-290ad9e44c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 fee46e1a-ee83-403d-ba9b-b198fd82f26b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 7d7916bf-37f8-4fef-9c58-087bc51a8848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 c5ae1a0b-178e-4b67-9e7b-42e8d54bc29d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 6442084a-5780-4396-bde6-062da3a82539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 6f8cedac-b563-489c-ba28-a49f1d58b923)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h0A45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #660 9653726d-bbd4-483f-97b1-6ef8b3c23448)");
unit.assert_eq16(16'h03FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #660 cb40181b-bac7-4a34-bf55-540b79c2081f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 5133dd18-555f-438b-9425-f106fdc304e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 79d85eba-6c89-4fd1-a967-2d5bea5b2559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 fdf0841d-f903-4498-9be6-6dd10c246d43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 6f900ca5-7ab5-4433-9bd2-744c146405dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 6e6e8b76-b4ec-4843-818b-24d473c4e096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 451eb8e8-bd78-4874-9628-23f0ca28610b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h0B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #661 8c47ac74-c79d-413a-bb52-d8db6b43cfd6)");
unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #661 14da01e3-f209-4f7e-b370-bff2956bd398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 0ac3ccb3-b5e8-4aad-80f7-35188b56cb6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 63e74117-1e75-4fea-adec-23237c8d69c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 79b10cf0-f338-48d4-87b9-ac0e1f02d0fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 d12c3ff3-6b46-4e71-b33d-460709528bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 bea50c6c-95b8-417f-869e-f22849b7abf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 389a7016-5f9e-46e9-81f4-51d983299078)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0669;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #662 129123f9-74ec-44bd-9089-5ab75ff0bd73)");
unit.assert_eq16(16'h07DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #662 63d5f935-e57d-4ff3-aed6-608d64bbd451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 6552fb24-9226-4c92-a892-1416dcd3812b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 09c61931-6a16-49b0-a93c-f260984fddbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 86c0a0e1-58fa-432b-ba01-eebf4b5c8bc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 46e3a6da-1041-4f58-b9a3-47797eeddecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 8bb019c3-0a39-4205-94e2-72992907bec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 40d24fd7-a5c0-4dbc-badb-b7b0fe714d27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h065C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h065C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #663 8bb4ffba-9e08-4ab5-acea-7b615bbff4ff)");
unit.assert_eq16(16'h0F8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #663 291c4d58-057a-4bf6-a3d5-517073fa6a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 e94468c7-b15f-4212-85f9-417f8fbd202c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 1bdd34c9-b8d8-44e7-83d7-fe562c11a348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 c06984a2-e4fc-4e75-b0c8-7c5935702e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 995aaf4b-76ba-4bff-ae97-6530768cfb93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 b44627e1-d9f1-4158-b002-531c0aee80ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 e22a064a-0327-4843-977e-63e2008842d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0699;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h06D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #664 1693950f-7be7-4f6a-bb6d-a5dca3981d17)");
unit.assert_eq16(16'h0699, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #664 96315f4e-936b-4ea2-9992-37c23f7a1ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 518ef0ef-f093-4ff1-9999-181e2730bdb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 82d4c9c7-479f-4b00-97cb-5540dbf5307d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 07a55e4a-0ca5-4932-a3e0-b8ee514df1bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 a5f0b8fb-314c-4bba-a6e8-6ccf31f13d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 3e618620-a499-4b4b-9eab-998e98693f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 42fd2135-7b06-494b-b5a3-df909f2fc2bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h06B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #665 d03c87d9-0edf-4a2b-bbb9-fc581563f4fa)");
unit.assert_eq16(16'h0A47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #665 cd14e455-7332-4086-ad48-df6b27f267e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 21a0026c-fbb7-4b1f-99ce-655712620e96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 d5be0bea-7d1e-4878-9009-e2cf670b5826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 191852c6-edb2-4c68-9474-d743d0783e28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 c1709f7f-de0c-41d4-a735-1d1a0f494189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 042298d3-a484-4619-a67b-c34b6ab5a567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 7042b781-685c-411c-8dd9-e5662e5ce29c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0307;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0479;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h0307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #666 8e678000-b931-40fa-b6d4-685fd50ab57b)");
unit.assert_eq16(16'h0479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #666 b67bd93f-5c10-4734-92b3-d38d0c0c1339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 a978302d-3d38-4ada-b283-d15bbd81b343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 f9a133dd-8e2f-4505-9a8a-ce6bf0d80b88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 9a8db16a-4f1b-446d-8205-0016a1d86175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 f8ce09f2-06f9-495b-b732-a8740ab2e987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 9a605f54-636a-4c74-bca4-c1873e7df82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 9985f2e8-97ca-4377-afb3-1778432263d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h06FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #667 adff25d2-55b0-4ebe-ba5d-6f0b8d8e1ba7)");
unit.assert_eq16(16'h0A7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #667 f5b51a93-6423-4b3c-9c79-d828220d2bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 c66bb5b3-dae5-46fb-b9e7-5a21abf9ebba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 e1aaf826-3fa3-4705-9152-2e135510471c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 3c357348-a5c7-42bf-ae20-b4904b99e7fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 46132c62-d0b3-49bb-983c-e8ef6882d16e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 b32918a3-763f-4835-8274-6ece0eafb881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 38993fdb-2c9e-4cb8-8d1e-bf20dedcfa4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0223;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h0223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #668 84de3932-fc41-46ee-a266-054b01dcb773)");
unit.assert_eq16(16'h0D0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #668 9687bbc2-7078-45ab-bf80-1b3af8712943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 690d7a65-d6e4-466f-892f-4c4b605835e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 0b3666d5-9e86-4cbf-a2c7-faab962b6212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 886f5abe-4eba-4ed1-8523-f7684ad9248e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 b605d440-d8ad-40e4-a060-22ab52503bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 b535f1b0-d2f3-4f12-81ea-4c96e0a55fdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 9e091dd8-067f-4bc5-9068-de2f9e405fdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0566;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h0566, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #669 a8687889-3c66-4a36-a639-c3d83b5cdb9e)");
unit.assert_eq16(16'h07F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #669 0af83ed5-48b6-481e-9fe5-2593838a27fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 03cc13dc-5f8a-41fe-ae1b-5352e4698caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 18f84009-81f6-471f-a007-188ba8f88ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 bb9e2fcd-830b-44db-8ba8-f31a4edefe2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 e1ba2332-7656-4a8a-bdfd-c13fd9c3e80d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 808bd40b-1884-4c31-ba75-2fabdf6bdb70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 a1de30c4-c48c-48bd-8675-d5b745bcbc48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h0B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #670 3144d69b-7087-48f2-a40f-5b0d29b27f15)");
unit.assert_eq16(16'h00F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #670 63a29397-1452-4993-a5b6-115298917d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 a75f99b5-5ff1-425f-8489-6024f47cef0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 cd3d4124-4f4a-40b9-b68e-5bd3a26778ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 39e4bab6-0063-4e40-aa83-a91f5e28b6d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 da71bfd5-8526-497b-978a-49e5908f163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 dde22396-1124-474d-b7a6-1dfba95dbd81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 197b5572-21a6-4e26-939f-56dbc9177380)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'h07AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #671 f6a3dd3d-3a6c-4833-a21d-92048622a15f)");
unit.assert_eq16(16'h06BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #671 13e2f4b1-f7c1-4121-8e3b-d74c11f64c37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 652d8e5d-ba5e-4add-ac33-2fd60b4c9593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 ec87c314-d667-4f68-b1cc-220169484897)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 d254c76c-97a0-4bbc-8a4f-b7c133c5dd01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 f0762537-3644-4d02-9b0a-29f967bdfda1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 d226b285-a773-4e0f-9055-ed77a8cb8fe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 2be2c50e-e10f-422c-a42a-53eec611f516)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h051C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ACA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h051C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #672 46c5d59a-13e0-4791-8bfb-1a643e63ab50)");
unit.assert_eq16(16'h0ACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #672 055d269d-7bd8-4be2-b5e3-17469de0bc67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 736eedf1-62e0-4d4e-8537-8a6ba4b9755f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 612adb42-1009-4592-afa9-dbfc9daaee09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 ee9810e3-46d8-4e34-84b5-810af85ac92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 ce3fb8b0-8844-4eed-b5f2-117a44927f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 d690cb2f-5ed3-4012-9f29-91ab7903ad30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 0ec12b76-5921-4b71-9b0a-d79ece72ee39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0333;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0068;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h0333, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #673 c2cb2bfe-5ef2-405a-aedc-85bb8428384f)");
unit.assert_eq16(16'h0068, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #673 29125543-b001-4b67-b4a6-b8fe783bd521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 0e14c07d-0e9c-43ad-acfb-0d814261de68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 c342ab6c-da20-4a41-ac21-310ac7629e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 a4697625-520b-48bb-b121-6b7a5ee5d67a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 1cf6b88c-92a1-4a49-85ec-63d82f2e50ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 49b8b292-e842-4e7c-9f32-6fe6bfda766a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 aed8fc6c-52dd-478e-a4d9-af2eef1fa197)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0312;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h0312, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #674 d706332c-64b6-4014-a733-2b985d4d546e)");
unit.assert_eq16(16'h0C71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #674 a1e325be-8551-43eb-ade6-bb12a6e88c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 a1e4cb1b-bf06-4afb-aa3a-8bd57702dcac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 ba547f5a-32da-4ddd-b54b-33c23da832bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 e9cb862d-6c6e-40fb-9c80-41a6aec6fb05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 bd57bf98-02ec-4525-ab97-1cbfc3ebc150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 274050fc-438b-45b0-961c-c758e34ac37c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 f67e73fe-10c6-460b-a11f-dc23edbfa06c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0781;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0343;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h0781, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #675 9ba36b7b-b28a-49a7-aac5-905099d685e1)");
unit.assert_eq16(16'h0343, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #675 5ee91741-a360-4704-aa09-1560ca5416e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 07307110-3d5c-4c37-8fd0-2b94f31a9319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 6e8c48d0-a1a2-4aa6-babf-bbd4c41fb5c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 70ddf3e1-4fb8-42a2-bb4c-327835d44161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 199757c1-1dee-486a-b3be-84af1ea381eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 a5c4ccff-cd18-4e6d-8d09-8378db16d12f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 965cab78-e6ae-45bc-b176-c6aefa646f49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0362;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h0362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #676 053e657a-21a3-4cf2-bf46-cc3d83402f68)");
unit.assert_eq16(16'h02AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #676 649796d9-15c4-453a-bf4d-2a90ee325b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 085cbdbf-d941-47e1-918b-b55a90db7eac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 6fe15f51-bf39-4ff5-95e1-ec4e5ab3e3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 9119ec2d-3db5-4379-a2e6-35a9cad8c523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 7b18add2-9ee7-44e3-ae06-c924e6e35ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 f02dc7ae-9964-4807-97a0-c00c2f27a425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 3f81eaf5-ff93-493b-98a9-a95398998536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h0E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #677 fc61b812-7bf4-42e9-89dd-459d5c642754)");
unit.assert_eq16(16'h0A66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #677 b42a4866-90e1-49b1-b7ff-f04b1dc2b465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 b35b2a22-f0be-4b2c-bc3d-55f4873b0968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 62ed12da-7219-4fb8-945e-f8c7abaaf2c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 76d1eebe-e165-41d6-abb1-e42d68630e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 0fa7b656-7cb9-466b-bead-0e8702d4fc0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 be69bbf3-a23c-40ee-b425-7b6b6dfcb0e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 bda9db2b-7512-4782-8df0-c5d486c01558)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'h0F97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #678 df58ba8a-3fbe-4320-ad0f-42522a6f5767)");
unit.assert_eq16(16'h0BF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #678 2bbe2e39-962f-4416-a34f-af434563ee92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 a1d52cd2-4dc1-4e6c-9112-1cc6745ea07f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 45ec36e6-87cb-4007-bf9b-1ebbb414e2b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 956ddf10-8a02-45f4-9abe-19130019b4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 d1726246-ac18-4e1d-8655-b6f670818a52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 829232cd-c10d-4ec0-841d-6bdd363de72e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 cd058e0f-b7f8-4271-966e-758e5a0f30b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0578;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h0B10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #679 d1f61002-4274-447e-9b06-d8d1b82b3142)");
unit.assert_eq16(16'h0578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #679 7e525cbf-8928-45ba-bf8e-56a58e18bade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 5d0d5869-afe0-48a2-9b5c-933630c5db95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 d88cfd60-61f7-4f2f-b417-de9105c4ddf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 3177cc27-0994-4a82-8b79-161b84e5dc53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 a1cf5ea3-8644-4c98-88ab-0019f9853d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 9fb3326a-1f30-44e7-9a0b-3a0246e20a4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 76052063-83e6-4305-9cae-26f2712d4f74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0767;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h0E23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #680 90724e14-a15d-4528-a363-8c3ba45d1e31)");
unit.assert_eq16(16'h0767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #680 93a82aba-9eca-4db9-9f2b-d071ced7b495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 cc647124-90fc-4b7a-bdf7-232efe5cf901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 1d1994fe-f03c-4088-ab0e-0ca35e987641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 68533126-7ee8-466d-918a-8bdfc7d39005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 d243d51a-a43d-40df-9ed9-020adc192608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 9710d528-4327-4fe3-bbda-b92dd15c483b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 9c235d16-0d4c-45bd-ab21-c3ab24dcffbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h0EF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #681 f39d2792-a576-4285-a46d-0d3930c1f6dd)");
unit.assert_eq16(16'h0C47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #681 4d4c104f-c80a-4ec6-be69-0033208c4b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 44347402-d1c4-4bd3-b114-1469d1aa327b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 ea217737-f537-4c53-8df8-4bc9cbd20111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 68e5fab4-8bda-4741-b1ef-7d445160008e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 c18e819f-8bb7-4fcb-9d09-47c8a1f5a5f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 dccfc504-66fa-4233-9f56-fccae70e91ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 82a53123-39cd-4cbe-9023-d11374712711)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0402;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h05C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #682 0a138701-2e29-4582-b01e-71457b34a6c7)");
unit.assert_eq16(16'h0402, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #682 0edfe257-b458-4080-b802-2eec3f413a21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 e1198670-08cb-4043-a80f-8022d617784b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 9f698a58-8459-43c2-872f-52f18c74fc36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 06a7762c-a842-44bb-b912-3258413176c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 ffcd4bb6-3e82-4157-b5ed-340863e3315a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 f77003d6-5432-4b44-80ed-8f42e26745b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 78f05d59-e527-4531-a675-244431d369d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h028D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h005E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h028D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #683 cf51ec6e-862c-45f4-8787-7bf6d0e89908)");
unit.assert_eq16(16'h005E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #683 94a0c4c4-c308-459b-b840-e1060cc38e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 c9c8738f-bbe7-400b-9955-813e6dc027d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 15e4f72a-b2cf-4ef7-aec4-f85bf0db9ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 0b890ef9-df35-4f17-96b4-1b29bbdb4ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 c92e2be0-9057-4dc5-9cb5-2fb24afff5a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 6feeea67-5334-420c-bf50-eed9b855d787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 0e416228-cb40-4454-bfdd-4d958408d9af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0422;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h0422, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #684 d9cbb1e9-b8cf-4faf-b4de-9dcb60599562)");
unit.assert_eq16(16'h0E00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #684 d5e10f71-a947-4e20-950b-c3e8ddb64f79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 c58de3bf-d385-4c34-995e-5ee341b5bfe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 dab50420-9948-4cb2-a22b-9517a55b6481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 966f1636-a73f-46ee-ab94-619de4fe49d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 b4e7eab2-1395-4538-9e0e-0672d61a71da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 345457a4-f419-417a-9e7a-cdb6cbf9be88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 c5ce0c83-1144-43de-b213-0c7b9e747f3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0169;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0850;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'h0169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #685 cfe91d8f-0c4a-4d2a-a4ca-931b4d703bb5)");
unit.assert_eq16(16'h0850, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #685 f58d9e1b-9593-4f83-bd8c-40d27b8736d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 1babc926-9312-4752-99a5-eed8861c601b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 31b3cea8-e3bb-411b-982f-b9876c87a40f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 f932f4a2-5b4c-45c3-9568-99d47c20f1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 a4736af9-6ed0-497d-a204-6dd33eff6573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 e2704947-3940-4e46-a20a-28c89b62db19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 6c95182a-1c37-4794-be85-6314c98752b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0812;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h038E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h0812, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #686 3362a801-f9c2-4742-939f-3594ec891d9a)");
unit.assert_eq16(16'h038E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #686 d267da90-2fd0-46da-86ea-5cde9f4c0e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 61284b2f-becf-43ca-9c66-d1e685136448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 67d3d723-a54f-42ab-b073-fc5b768434c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 3e7c8a40-de28-4009-9cb0-e8c3a2630bdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 b033a307-8ce1-4f69-b55d-401dc1273b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 53944dc6-0128-41ac-937d-99570407836b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 dd8c3c91-919e-41be-9884-38f1b48fb9db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0518;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h0518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #687 dab12734-c789-40a2-a6dc-d00d76662c67)");
unit.assert_eq16(16'h0BCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #687 3702bcd1-45d4-46f4-9270-96be9af5ee44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 7786a8bc-6a86-454b-9bf9-3ba9002874d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 3ea51f2a-5f67-47b6-97fe-cc04a1cd3c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 4d94c100-1217-4e4a-a239-24ac738dd1be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 de2286e8-3a87-4831-8a55-bb4f29301167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 75f24a73-27dd-45e9-88f8-22edece257d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 5c09d72c-8ef7-4a79-b888-a0a55000f359)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0292;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h0292, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #688 b26bb5ec-bb85-404a-8999-755f67c45608)");
unit.assert_eq16(16'h0BFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #688 68de7e87-e317-41c4-87be-8ddaaca13962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 59e07db4-2c69-44c6-880b-5f6ca503eb53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 d5cc6946-fbaa-422f-b395-aebf9b179808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 3a4751c2-a0f8-41fd-9bd6-57c676df85f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 06966cc7-7baf-4086-8bb3-b1d13b0e2869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 11f6134d-44b3-44bc-b607-b2d1d0f4a50a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 8d98a319-e9b2-4289-a370-c578ef230f7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0349;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h03E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #689 faaeee53-8baf-44c5-ba84-506b40d3d823)");
unit.assert_eq16(16'h0349, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #689 3b33ccf1-7021-4eab-857a-1a5b1892215e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 bd18a00c-6a39-44da-8157-c875474aab23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 12fd88db-75f3-4590-a8f1-da6f8a117ef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 5bf12e24-1b49-414b-8351-f00458880737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 598ac767-009b-488c-96bc-52c97c0132b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 4ed85dda-e02d-4533-af31-a9d0f3d5b4f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 94c2a1f8-9f31-4823-8077-9a38426acabb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h067A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h067A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #690 48b7a8d5-8af7-45c1-b925-c40005c4cfdc)");
unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #690 ca832e13-40eb-41e3-803b-cdbad8c6869d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 b9f1a585-21a0-46c3-b32d-391716052077)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 5f3cf0e9-dc80-44ff-8b29-f2ba6996a84c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 47855d4f-45e7-4a16-8309-604d6c6c0d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 5b4020a4-0913-42d0-94e8-56572443668c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 04af4b87-40b8-481d-82a4-397b38ab2efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 7926ffae-84bc-48bf-8f3a-a06d6f625721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0317;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h0317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #691 0bc8dee7-f010-4405-93f9-a9ba549ce979)");
unit.assert_eq16(16'h077E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #691 d5c72c9a-5aa3-4d31-ae4a-bd281045964b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 94a0f2e5-16f4-4d7f-8b99-f49d592744be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 4868df5e-e018-4701-958f-ff2fe8778003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 82f5c3e5-1457-4824-8f7a-6415dbd0a5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 08cd758c-1507-427c-958d-59f2b6fef3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 939a546e-4e29-4ed5-ab76-e350d2ba1b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 29bb8b98-f6ac-4cf1-87cc-ce085ba46674)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0798;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #692 9d49ed54-34c5-4ba4-bf11-f197f0a9bd99)");
unit.assert_eq16(16'h0DC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #692 7750865e-e038-4830-a295-580eb8ec0a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 44d8d6ac-39c8-4ce3-ba18-82a248d54d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 79da6a9c-43e8-43ec-b0b1-51a3fbc3307e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 4a345ee3-bd8b-48e0-8744-3cd3214b4025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 aee9d412-3e29-4271-97f8-3b7772511920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 d19e76f5-f9f2-465c-badc-73512b371ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 106c8d89-a323-4836-a2b6-9e8ea10f9211)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h0B99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #693 f00f1aff-dba2-43b4-bb57-4a92ecabe0a8)");
unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #693 e9cc7a1b-6ec4-4187-a9ea-c9a19eede27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 f23623eb-3543-4c4f-a60d-6ddcab446c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 27ec1a7a-9d84-4b01-83f7-720b8e16439b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 3a061bba-03b5-4c49-b549-64b1cf0351fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 69a91393-7d0e-482a-ac0d-dd89960e1c34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 b39fcf57-9c96-4d50-9f2f-6d7bfc154b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 09018242-93bf-4f38-9078-32f2f57c1292)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h055A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'h055A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #694 71cdfc54-6989-479b-9402-ddd82e51ef7e)");
unit.assert_eq16(16'h076C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #694 4c04bf10-4144-4fad-9b6c-c4a425feefb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 aaea7766-cec9-4d7a-bbae-cdc6aed84d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 c3304bb9-4f70-4a22-adce-37f7c0bb6e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 ac526938-be79-465a-b55f-52a439110ca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 0a61ea68-ca00-4ea5-bce1-867e3ff6448d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 d0319c46-f329-40d8-abdc-09fd2d656473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 815fb63c-31c8-4edc-b285-a76515459565)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h01ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #695 b9088cf7-dfe5-4638-b4a5-22b5dad28b4f)");
unit.assert_eq16(16'h06C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #695 89cc22b7-b524-4488-9425-8b0266d27e6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 45d424b9-9986-4147-bc09-63dc255c3a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 5608d863-560c-46d5-80bf-a615b0508ffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 5b2f0989-dcf0-47a7-83ee-a71f1c1fa56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 02599eb5-8849-45a8-b30e-0d68b98d9750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 fa0f3ac2-0835-41dd-9292-3bd9f28b8ebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 5be6b8f4-89c2-44a3-9f7b-80e8c9affee3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0502;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h0502, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #696 578fac97-db37-4f03-9185-8dbf8cafcd46)");
unit.assert_eq16(16'h0CFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #696 23dd3fac-0d98-47b5-ab1b-1a0b0c7925c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 640a2601-7a86-4a1f-8a61-967cb352dcce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 84e7cb7a-b186-45de-8d8c-f656ab9b43bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 8ca759ed-b1f0-4803-a57b-307039b58a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 196a2593-e827-4859-89b5-cd59f8cdcdb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 48434c88-65bb-497d-bd2f-a7d7fd826998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 7306508c-978c-46fc-a623-519ca8a77fb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0042;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'h0161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #697 3f89af19-301e-48cb-8625-31bd96a0c98b)");
unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #697 a5a674e8-707d-4bb1-9057-4e4d89a2735c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 a1e7ea45-6c4c-407d-8fda-26bc66a4a9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 d98f8ba6-fa73-4cb5-846e-1a1fa4e4cecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 40b43220-945c-4f34-87f3-1454b3dadf3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 922c3dc0-6fbd-460a-8c40-88685e5088d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 4eb0a786-9c07-435b-a1fd-fc02e0ae5929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 1147fe4d-6f81-440e-bb1e-516485b1ff63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h0A63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #698 cdcb2e62-68f5-48fb-abc5-d694399acc12)");
unit.assert_eq16(16'h00BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #698 3deccfbb-1bec-4d40-8f68-282f6e6fa34a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 811f9c51-906a-4416-9939-f159925647e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 ba94769e-2342-4102-a912-0df003a32c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 1ef7edd9-8497-40ea-8c4a-56011a55cd66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 fec57914-52f5-497a-ae04-c08146832ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 3744a7d5-6436-4c99-aad9-3876a8431907)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 51068f4b-3a4e-44fa-a0bb-5f19245b7604)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #699 985122da-b934-4dfa-b92f-2fe90d3d2b5e)");
unit.assert_eq16(16'h0B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #699 c0fd0e34-a167-4a7a-9ffc-2032ab69356a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 dbd479d6-37b2-4a05-9c4b-01304cc184a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 ec85a8d1-8441-4443-88cb-88b8c75c49c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 7f1d8a02-9c6a-4d8c-8ff3-7e4656269d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 5478ebd9-7285-4c37-b91c-6c8dbce4d18d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 008aa67a-0fe3-4920-a665-0dfe1ff460f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 70a69e39-d8dc-41a4-ba53-0e1ae2a7bff6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0965;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h0965, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #700 0450efb9-aa8c-4426-9b64-058c438043d9)");
unit.assert_eq16(16'h0985, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #700 b4e4155b-7c7f-4d2b-96c6-3addab67f70a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 1e7b0818-75dc-4cbb-9798-2bd7d15f0284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 cc15dfbe-f926-4a94-b15c-774b842fc978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 8157ea09-54e7-4793-951f-28deff9da522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 8fc89d29-b2e7-4c7f-bee0-7eb69f28eaee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 f2f77f79-c101-43c3-af32-d2675bdf26f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 2410d0e8-4a49-4a3a-930d-16ec81c6e9bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h058B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h058B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #701 df374b30-d7e2-4de5-ac51-957ca6ca1807)");
unit.assert_eq16(16'h02D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #701 453a48bb-01f0-4558-9ab3-ab807101afec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 7e7b6253-5324-46b5-9d80-b708ac3feaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 46406300-e44f-4671-bd5c-24ac457dabbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 649a8dd8-9457-4fad-ac8a-853301ef4035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 2d6342d4-cc0b-409c-89bb-3d23ceb5c04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 7ce47574-733b-4c8f-af4e-5b5c15d42468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 61cc9c56-d6b7-4fb6-b9a0-ccf4d5e69fdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'h0C3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #702 726864b7-dcdd-45f5-97fc-1e5ad6b506e0)");
unit.assert_eq16(16'h0D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #702 f247d08d-f535-4550-a6f6-92e6ed8155ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 b9fb5ad6-1835-4202-a077-2caa799d6c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 e7383246-cecb-47a8-bbf1-25de297b728b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 230e677f-8f43-420c-847b-17c785a922de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 7987124b-bc10-47be-aca3-307ff9a97231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 c4a12702-1c40-45a1-a8b8-7fb35f0c5455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 a2bca212-2fcc-467d-980f-23a3d4b9bedf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h036A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h0B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #703 33d2d486-f4b8-4931-be15-f75188c82f6f)");
unit.assert_eq16(16'h036A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #703 ac15bfbe-4277-4b82-a300-5e6fda3983d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 59028e1f-87ec-4039-b038-ea98ceaf4b18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 f01f3e25-a738-4b3c-b98f-2c95d230b4d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 45b828f0-1187-4935-9f97-794365d54a48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 18104994-7c3c-482d-b43c-96a843ce61d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 3d878b43-0fa7-42c5-9641-02470683d658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 77a0dc90-4569-4959-80e1-c0dc511d5fd5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h0AB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #704 d86b398d-42c4-4333-8562-f5e15ba9ef27)");
unit.assert_eq16(16'h06AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #704 e15424c6-765e-4b66-bb8c-d7cb63731e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 6984bee7-9fa7-49e3-b4d4-36eadba92d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 ac063e3a-35fc-44cc-90c9-dbf3aa014234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 c8a449c7-9d04-4518-bd4f-bf11d6300d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 eb94ce48-17fb-4514-bb08-e6f04e2f888e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 dd05fdf1-e178-452d-aff3-272fb68e6748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 1dbfba70-069a-4a4f-b568-ede901b8bedc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0511;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h0C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #705 33a315fb-505f-47fd-837d-51edc3be4693)");
unit.assert_eq16(16'h0511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #705 4bf55e36-dc10-46bb-b0a6-55cc2ca5b587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 2c437dd8-dd18-4805-8ac1-f62297d8bb16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 9e1f596e-e361-4dac-8bed-fbb2cdb434b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 b891a083-9614-40cd-b4d8-e7d9e3e5221f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 d1f6d955-525f-430f-b3ab-16b23165a996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 c2ef9aae-cbcb-4c83-b74f-5821e779f5e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 1e037b17-093b-4cef-a87f-4306626b391f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h08C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #706 eb9e2ef7-80b7-46ae-89ee-1690fbd766cb)");
unit.assert_eq16(16'h0AC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #706 71c6f1b1-0a0b-42ba-8c0a-364dd3fb0837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 975baf65-9af7-40c3-94b3-c46092ad8162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 65d40d0a-263e-4b05-babb-0c39cd872512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 53a52429-5f5e-46f7-9f95-3267ef3be864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 48e805be-63b6-4140-8652-7bcc4fb8d7a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 59d628a2-4c7d-46aa-b05f-82cfd4ee026b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 2fed58df-6350-40f1-8e1c-967151fe714a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h078B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h06DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #707 6bca42f3-5052-4676-96a5-c492cbe223e6)");
unit.assert_eq16(16'h078B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #707 17b8160a-4ff3-44c9-899f-d831a7166e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 510627a2-cbb1-4eef-8e7e-30bc68e33842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 78a04f2f-c7f6-43c4-9af7-b1f43279853e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 024233ae-a64a-4489-a287-001db984f91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 44dab302-c543-4c0d-831b-fc2e4e9e96ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 337a0bf4-1d28-48a8-82e4-d2c59d3c8a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 6114a2d7-d6d0-41f4-9fce-24696269cae7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h029A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'h0F44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #708 36f5352b-4da3-4743-a8c6-6efef40b5567)");
unit.assert_eq16(16'h029A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #708 b0761771-7d39-4361-ab4c-abc437b9404a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 f898c274-99cb-42c3-98b5-cd69d6d4e2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 836abf63-1137-4c72-a1a1-7cafc7aaf56a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 a2ee27bc-63a3-49fe-b05f-bd93f120e187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 80044f2e-50cf-4531-93f7-a3de18b743b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 a612254e-e719-4114-894e-f0fa040dd106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 02a55f9d-1145-47ef-945b-38f6a2046c0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0528;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'h0D24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #709 86935a7e-3729-4a7c-afce-7ab6056472bc)");
unit.assert_eq16(16'h0528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #709 8eb699d4-0554-408a-beda-fb856a10bacc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 4fec8ae8-ce0d-4ebd-80d2-92143ee51f86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 72fb50da-43b5-4ddc-ad9f-0a80051f41e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 e9082e79-ba54-4041-afe5-25c6f3e4d3fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 92e11938-eb60-4a54-bb53-ecd360aafc34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 b7777b21-03ad-4ea1-bc52-42a02e1d4ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 f8382512-2631-44be-8658-b04bdc48dc3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0798;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h0E77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #710 7beca78d-0c3b-4fdd-8fe7-2dbd2213ecbb)");
unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #710 b2c92c8e-d7a1-493f-8920-58f923513144)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 bec59f4c-2125-4c15-bf93-a8712bef1acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 569c9a9f-cab2-4413-9c3c-9cf53ffa2427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 5c6df368-8b08-4f20-abaf-889b188dd31a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 0f72e92a-f60d-44bd-9389-82921c9aaf66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 2118b5e0-6738-44bc-928b-1c6691e4385b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 b023072e-1c48-4b50-ba69-0cb79e3269e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h0EE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #711 89f4a4ac-4def-43c8-8c24-62978eb892a4)");
unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #711 0b5bec18-ea7e-4ec8-8559-84ce8a6a9004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 cf16777e-dcf1-43ed-bee4-a4e73f08e26f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 dfdc595c-04f4-4a23-bfe0-5df4d3070f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 3f8c02e7-fa5f-4e06-abfb-b0a1ffa24dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 cd96fc64-043d-4600-a62c-1bb44d9dbaa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 70b3e303-c1f2-4b42-b7b8-eaeb4145abd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 e33711af-d9aa-404c-afe4-4caf8d10bdfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0938;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'h05B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #712 b23151ce-22b9-495c-98e4-d7e25e347b16)");
unit.assert_eq16(16'h0938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #712 5b6d8f79-f06e-4951-8401-88f52f0ebad1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 31b19bb2-cfd5-478f-8f82-bd9a1e9fd667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 282b0798-a14d-4e22-a102-a2a93f0d93ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 77b3cb4f-cfa7-49c0-ba38-403077744553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 e6b1b083-d258-4439-83a1-5007c63d0fa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 ccd8b958-b13e-4bb6-9d44-470125277deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 568e91dd-2749-48d5-a512-2443b48bb61c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h0D26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #713 a5a5a8cb-72b4-44c2-a186-29ddf96e7878)");
unit.assert_eq16(16'h09B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #713 f2aec594-6ebd-4813-97c9-555f0b7627f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 c266da29-3f33-4ad4-9bfc-74b5d7f669c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 1bb6009f-4a75-421b-ae51-b9d8ebeb94d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 e2a1cfbd-62d6-48f2-b549-9c567f9427db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 2a710d02-6b41-4d59-86d7-240b71abbd62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 cd20b0cb-e679-4b6b-bc2f-0d57c8bc3521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 5490b712-bab8-43df-bb9c-039d60d176f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0275;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h0275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #714 ec63d7b7-8425-406c-b886-9fd35d9dd808)");
unit.assert_eq16(16'h0127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #714 dd620842-b4a5-4229-b027-efdce51e5be6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 a110c92b-6dcc-4f14-9cfc-fbb7d7634c6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 ce7e9fee-561c-4c3a-82ab-fec4ebf63fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 b4f5272d-8f2c-4195-a5d4-3b54d9de682a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 91ab11f0-7b83-45c0-a445-1bafb1d3e255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 a62edd86-5e03-4e44-a7d8-457e3c8defe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 29162c3a-d0fc-4686-9146-64ebc1874298)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h0E52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #715 9634d73c-3bbf-42de-a58d-2da1b7abedf6)");
unit.assert_eq16(16'h0B27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #715 216d44af-9064-4283-b5da-672130f30f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 c5105293-0867-4b65-8ad0-76074a0bd6cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 534db8db-92f5-4f15-8c8a-ce2e841a2bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 7ad41053-d82a-403c-adc8-e4d627f29451)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 f46aa02b-57b5-4398-9ab2-fe1cbae580f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 7b338c20-a867-4286-bbd6-7ed5f65b7b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 7cecdb41-9c91-49b5-a3d0-ecdbbae12cf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h0D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #716 804326a4-d3fc-4285-8d4d-70e0a7e44f7e)");
unit.assert_eq16(16'h07E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #716 0ee62901-a78c-4c2c-a56a-bbd0e9a2660d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 cd82db4f-dfd4-47a0-ae65-e446cf58bca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 a1bfa942-a72d-41aa-8530-6b98fccc0053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 1afc3547-3d4b-474f-9f1a-540edb20d353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 f30b536d-c2a1-489d-897a-f181c944d856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 fe814384-0a66-42d0-8db7-b2ccd35b01f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 3270de3e-ff2a-46aa-affc-df0fdbb25202)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h0E2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #717 3e7933a0-705f-4aa3-b9bf-866bce11f05f)");
unit.assert_eq16(16'h0CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #717 6ecd8822-669f-4a9d-9d19-442be29f4a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 c20acce5-60d3-43a5-a854-580544c748c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 0c222b9f-c99b-4037-85a8-0c51ba482f40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 88458263-8e1e-41ff-97f1-c93e00a63217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 717c122d-1c15-42a3-a4f0-d87405c0e39b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 f2bec053-e669-40a7-b6e0-96791a5d8554)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 940fdeed-b19e-4f35-8e79-95e0a80cbc91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0791;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h0791, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #718 1625fdfa-2641-4d1a-9dec-c6324257ba7e)");
unit.assert_eq16(16'h0E72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #718 4dd4b36e-02ee-4e10-98de-fc34dec7434e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 6c43f491-96bc-40e5-a56a-3d2aa26cc154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 3172078b-8467-4cb6-b841-1456b248972f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 f8528f8f-3e78-43cc-9a82-d425bcda3d93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 3305b831-28d0-400a-ac77-16a0c8d66372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 91a0db62-f38d-47ca-a197-758162098dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 9a0eaaf2-119a-4afa-a791-bcb6f06f536c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h0F32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #719 00a8787b-5920-4d03-bc7d-d8ab56f42bd1)");
unit.assert_eq16(16'h0C51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #719 74a96f62-885f-42b1-aeb7-9cda8a93cc9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 bf0bc3bd-9710-466b-b676-8e9728179293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 74a3af81-2cba-4ffb-b05a-ea522dc41e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 a5662e7c-46a8-42fc-bb72-35830d6a57e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 215a0b2c-215b-4231-95f5-7ff17e50362d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 6767ccfd-be22-437f-9c56-f6494e0f1229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 0de99ace-322a-434a-bfc8-7f4262d60da2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0705;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'h0705, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #720 6de0b0de-7404-4dd4-b69e-dd2e7f206ff9)");
unit.assert_eq16(16'h08E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #720 3ec97c70-4f75-4ddd-b8de-1b8f4ade176f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 15fd5930-0849-4c1b-90dd-eec2f7a444c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 a5a03db4-4ee9-48bd-b2c1-70cf2f4f5997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 e0a354dc-63b9-4666-9c04-d1a19ed911f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 fec0248d-350b-409c-8ba8-28c4868830ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 0b634e29-abe1-4db8-a820-192db27975a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 6bac3990-5989-48a4-8ec1-b96e1a5eee77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h021E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h021E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #721 a1fa9ffc-57df-4cb0-ae24-44e1adee3f35)");
unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #721 14308ef5-14cf-4549-af4a-003ca64d297c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 2bd29727-ecdb-40f6-913a-b3e583bc1f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 1e1ee8d1-4a0b-4267-a0fa-fc1bdd506330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 abe56dde-01a0-4d94-965f-b13f90bb5198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 cd6dd132-80ea-4690-9617-aca3fdbeb48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 a7cef066-59a2-4d18-8f3f-d2bec4dc726c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 6f6edd26-4d1d-49a7-9e4a-d98258f95bc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0687;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'h0D5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #722 700c86dc-9c83-4752-aea0-2915358f0ae8)");
unit.assert_eq16(16'h0687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #722 c3fded50-0cd3-42a8-8680-ba225f32cd54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 22c952c6-d592-42c0-83ed-16715e9d9369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 309c2634-040b-4cdd-a195-f7183b8fb11d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 90f3bedc-5829-46ea-b8f9-ac4e2909d08e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 da9ae6de-add8-4bee-9eee-6fdd85ead97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 95da2091-3521-4986-aa77-64cb5f537462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 2c621e8b-267a-4a7c-bc8f-5f9c87a4959b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h0D0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #723 63d4942e-2220-468f-9fa8-3ecbe3b4b21c)");
unit.assert_eq16(16'h06E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #723 919f4a4e-a998-4cab-89df-e9707ad82858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 52c80004-6cd3-4c30-aae1-9b67acf7c6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 8e5d3409-f323-499a-80ff-02dc5d63632a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 3cb48aa4-25d8-4192-8191-80a1ce791058)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 a41acfb8-d2a9-4159-86d9-04c76593fbf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 7d6e3013-c5c9-46fa-aa66-ccb42b833902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 d968592a-1c1f-4e83-8389-607a6a92724f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0086;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0150;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h0086, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #724 b70e4e7f-31e1-46c6-acb2-2452e08766e6)");
unit.assert_eq16(16'h0150, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #724 f549df81-24e0-4ccf-a85c-b0b17f6ed343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 d8f32671-35a7-49e5-81b9-ffda793bb464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 4e928f36-2bb2-43c2-97af-00d6ab6e0be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 4746031d-39b4-4fd0-8658-2b57c468a5e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 37dd6fee-6d29-4391-b409-c8ec5d601fa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 3b8edcc3-641d-4d30-9f87-4c51eba19db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 1281db34-b494-4033-a7f8-761195d41093)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h0C81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #725 c7f9bd59-1fed-471d-98f2-086e68bfa97f)");
unit.assert_eq16(16'h0E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #725 3c023a16-fb44-4e99-b43d-509d357ecb65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 7ca5cdc5-99e7-452b-9c07-e95c02bef408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 5ce0b78f-eb78-4209-9eb2-4f588647f5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 55cb6210-5861-4cfa-ad17-597a6a64df3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 eb461dc6-aaba-4ad4-9c8f-35177b969708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 fef3fd57-9894-412b-a3ca-64588bf7450d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 13d51c9d-e702-48e3-a336-8e8c3dcfde65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h086C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h07CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #726 bc64b0cb-49e5-46e9-aa0e-2e84b489ca74)");
unit.assert_eq16(16'h086C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #726 2f65d05a-d448-400b-b979-7636ae9496ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 6d2130f4-d28f-4e66-879f-d8c592524c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 2400cb94-f4e6-4c52-a036-65f495fe6cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 41d97432-2be5-43db-b6a1-2113900ff070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 e4319bec-40aa-4ac8-8fe4-81c5b72f15d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 74013570-5bb9-43cb-a921-ba498707c2d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 18a244c1-8cfa-45d2-b8f7-848438451c82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0937;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h094F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h0937, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #727 d3443b7e-2df6-440b-bb30-401577809d33)");
unit.assert_eq16(16'h094F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #727 cccf0369-bbc3-462c-8a91-f1fa3193204d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 fe0f1c32-e3a1-48c7-a04c-62b2d1a26e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 2a30824f-c1e8-43a0-8a0d-ac53045eb457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 1393a918-6f01-4405-89f2-947d7859f288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 dfc89dca-6582-4105-a125-de5cc6f1fa02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 6e49b46e-edb9-407e-9ccc-e92762a40603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 4adefb2c-fdd0-43b2-abfc-e18d4c85eec8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0346;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h0F5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #728 9d31872a-19a4-4a46-85c2-d74f7ba5481d)");
unit.assert_eq16(16'h0346, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #728 31c90d59-c998-49a4-aa1e-dfa312efae1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 afced42d-5bdf-405c-8d77-71dc4aef2346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 b9872c00-7c01-4ca9-8f6a-40dd4e323f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 06556cea-74cf-43a3-9817-df3a79ce85c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 39cd2b79-f6cc-4633-9f8e-07c0ce6bd0e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 c7dae35f-1428-4b0a-9d30-f79c4dc284ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 71dd6b6d-4b81-4374-8ee4-edb50ef9a792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h097E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'h097E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #729 57fb28bc-a7e4-45ec-85d4-2555c36744b0)");
unit.assert_eq16(16'h04CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #729 176bad05-551c-41fc-be6b-4647d41e24d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 a8d2d992-02fe-4d66-8e10-dc6853dc1c5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 af20bb33-06fc-4030-949a-06bb7d04a037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 5ac4aa05-6a9e-4b86-8853-ae884c9f73bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 9a6de7c7-2d60-42a6-9e9c-187b4ed0acdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 707d780e-fa27-4081-a17a-f16e5741e011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 986dce33-31eb-48b6-8355-a9f8ce47a881)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0679;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h01B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #730 97100f42-6556-4000-8948-4b42b49d2c29)");
unit.assert_eq16(16'h0679, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #730 a3bcbf38-a7a5-4a30-9ce9-6d955c91a13a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 f387a180-126a-4c75-a5a4-21b9beaf5399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 cad50d88-9a90-4171-bcdb-7801eac34373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 a9f6a0ab-1c3b-41ea-8361-cb2eb40e0ca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 770b81ad-b774-4ea7-96ed-b3f9fa726462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 6a0f00a5-5800-4338-999b-3f639f75dc25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 de95e1b0-0f59-4ee4-b940-6f3f1d564a4b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h068E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h0C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #731 dba27712-d61b-4691-8a80-55256c1184a7)");
unit.assert_eq16(16'h068E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #731 449008fd-2ce3-4c62-867c-8dfc01cb397b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 d6c7188f-f67a-42e8-9033-6a5974be32a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 28c474f0-f2ce-4e92-8109-916fd63ddc97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 3843a11c-d9a0-42f0-9db6-6fe6da65e8ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 c572f2d3-38ca-4a17-8955-97e209813b90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 17fcef0c-d834-4d40-8801-7fc59bb49976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 13c6c809-0ffc-4868-a847-817d8432e2c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0734;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0828;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'h0734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #732 588a908e-7c3b-4c5b-9b0d-5737a5e9a503)");
unit.assert_eq16(16'h0828, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #732 b41bde1f-5d5a-4e50-a1d1-2641afd99add)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 8e025bd7-080f-41f5-a66f-dc36fc3c5340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 42dc6978-8350-4c91-b4df-d07c8322333f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 99ed7f1c-8e0a-446c-abff-3e05ea50e744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 3449725c-df99-48e6-aefb-fb8198e5e4bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 ff89472b-f18e-42af-9237-5f8da0b1cfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 d690b9fd-e352-4b37-87e6-ce5813cea24a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h0D46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #733 59dc0e0c-36cf-4365-ab82-31c826792a94)");
unit.assert_eq16(16'h0BB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #733 f39c85b8-ff56-46cc-a0e7-fa1b23dc1736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 9a4d24a3-3c7b-41a2-8c53-5eb73d7a274c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 b7371bc4-2cdb-400c-b2f2-5345408c39fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 6e07b6a4-43a0-4906-a236-9e91fb6e89f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 588a761d-31c8-4d1b-a495-2813f7031756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 19500fce-0d7c-418e-b32d-caa00c16e6c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 df18165c-0194-4cf4-8f49-cef923171aaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h0B5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #734 aaeb4de2-90ca-4aa3-8074-d20c034ba605)");
unit.assert_eq16(16'h0B80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #734 1fe49334-38f1-44ab-a159-16ad79199a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 68c825a5-4f68-4a7f-b368-8edc46644a08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 f5456bdd-4257-4fb5-8a98-4a6e517c7a46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 3d2a6216-9e76-4fc5-92c9-2a3e4fcc5fce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 ed16d4b8-21ab-47ce-89a3-f61ade05ba3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 d0c286d2-bf91-40c5-874c-80454bc1c4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 c296f68d-e065-4ceb-91f3-e30c10aa4209)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0844;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h0844, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #735 80f46a5a-265e-4aa8-9945-0cf1bfcf9be0)");
unit.assert_eq16(16'h06F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #735 4ad7c4eb-50ce-48cf-97f5-316fcd4b204e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 b2a0a244-04d5-4d02-abcc-01dbcca51986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 b9dbd4a7-0d1d-45d6-8db5-1be68753b88a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 ea240427-67ae-4653-b4df-6a4413c7180b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 4f780124-54e2-43ff-91ba-b8d2c42f0b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 36007adf-6e58-4dc5-8c06-c364dab5b82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 d642213b-bd82-45dd-bafe-1cd1546ecce1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0882;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'h00B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #736 ecb2f22f-b2dd-452f-86ab-be7b209bc947)");
unit.assert_eq16(16'h0882, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #736 6c4b787b-54d9-414e-913b-6f71a28ef347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 0cb56405-5b93-4047-8286-5177f2538e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 63cc9565-fd9d-4df4-afb0-659df4ee42ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 8825fcba-f221-4526-9936-fb9e648feec2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 118b687c-22a0-401d-b367-311c44ed291d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 c7036738-6e8b-4926-83f0-2e3a3e9d8236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 d547738c-3a9f-4003-bf9d-8a3a0442779f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h00DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #737 a93ed9de-0ca0-4919-84ad-8c66d20a3d52)");
unit.assert_eq16(16'h07F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #737 b6c8ae54-6574-435d-b691-060077259853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 644b5769-34f2-428a-a801-46ca55d1ad48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 313fa28c-3c4b-4f98-ab2a-461aa2942dfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 08853a87-012a-4c53-9cfe-e19f2b42c7a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 4c800e1f-38cc-4df9-bc22-2805950d12de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 136e793b-63ec-469e-9e96-bad9e75fea2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 ea4868d4-dc94-4f8d-b0c8-208a7c637c13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h08F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #738 fe0ba26a-49e5-4478-abbb-55907cd4e604)");
unit.assert_eq16(16'h0E87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #738 bff1f97b-f7ad-4c18-a43d-d32af7def887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 edd10f5c-bc15-4446-a2fe-154aacf7298d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 89361723-1288-4e74-8871-0729a8936857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 f27209e6-2047-4cba-b1d5-6a560481152d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 97f9881f-a125-4b42-b4a0-51bf87267ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 93b8ead9-4187-4dc6-af4f-d529f4cce2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 94554e34-5e49-41e2-81ef-972a29e0a5d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0244;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h012E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'h0244, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #739 7ab2c1b3-ac8b-498e-87f6-85354766f967)");
unit.assert_eq16(16'h012E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #739 d283f6d2-6cf0-4d8f-923f-3b8cc90a1130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 19a2f4ea-d50a-4802-be14-fa1d8ca0d002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 24a77082-e802-49a0-b803-a66b6b192aa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 cb5610c1-7ba2-4104-8377-367f58f739b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 781a20ff-b4a6-4b30-bb18-6fcbf731d750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 beb36bd7-7094-4734-9765-433e4e566a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 f8be52ae-c406-4731-8647-1d4f59f327f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0269;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h0A93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #740 157bea95-6272-4e6d-808d-4b5333500181)");
unit.assert_eq16(16'h0269, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #740 5cb30a3f-f094-45f8-b660-871af538850e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 657de216-1712-49c7-bffb-9ac92dcbdcd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 7712537c-9316-4b49-9249-b50bd51c0f4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 6c216b21-0fea-40c8-8f46-1ef3d4e3ff76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 4f2c786b-e89b-4e3e-b555-d6d7b199128f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 b6b70668-f3e4-42b5-a6d5-2509f19e3f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 e47ea46d-e392-4c9e-9b3c-7814edd1aefd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h0C25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #741 7691e313-b5ec-44b0-ae42-3a75f276b250)");
unit.assert_eq16(16'h0EC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #741 239efecb-52a3-4136-bdf0-e18a85cb81e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 b7fb3830-8df3-4ca4-af87-9fd9b49f4f4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 7bf5129a-d868-4cb3-a0d1-56affd031cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 ac7b3bb9-eb56-4d4c-a31a-b9ca2da72277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 1c6779b8-3d24-44fc-bad1-7bd796c146b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 321854a9-e124-48c0-be19-98a3b4fa44fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 71e1673e-e9a6-40d8-95a3-06394ccd5f2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0579;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0759;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h0579, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #742 4231a522-a8bb-4b56-b8bd-e088876fbce4)");
unit.assert_eq16(16'h0759, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #742 d2600b62-a0dd-4810-ba01-4475a95332e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 eb2f44e8-feb3-44c0-96a4-777faa412295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 8a90e9d5-6fce-43db-ac70-a567e47cbdf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 31eb6326-a158-472e-bdb3-4f0a2fd9649f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 c235634b-1d4b-476e-8982-c75efebe5050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 ac374038-8302-49d7-9ed9-c3cf8d123a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 8d87cc4e-d697-439e-9603-f086a21a2d0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0774;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0852;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #743 dcf91c9e-f7d1-4dd2-8ff4-228300a38c03)");
unit.assert_eq16(16'h0852, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #743 2c37501a-3945-4f87-aa3c-e7dd02c5548b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 280a90aa-662e-4a3c-a6a0-089834ab3c95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 a5ff84e5-dc52-4a02-95f7-f83fbade2dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 45f50f2c-16fa-4a86-ae74-f0e18332459a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 baba8437-80d2-4f5d-b90d-e762e1dc0e12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 0905467a-fb63-4435-981f-3c24a108632b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 f116fb09-8f03-4438-af92-03673a436c72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0404;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0067;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h0404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #744 19ad55a0-9233-4729-80cf-b26bd67ccb54)");
unit.assert_eq16(16'h0067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #744 8bf95823-1cd4-4b41-bc58-c88c4f1ea8df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 24aa4b5f-d8ca-4d3f-b100-295390ecc564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 8c6239c4-52e8-492d-bb95-e2cdadfc1fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 ad0cc3f1-5a54-4017-bffa-c384aaec0b5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 67f5d453-8ccc-44f9-9186-3cbe910425b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 364b0adf-2254-4266-aab3-bbb6aa05dcc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 c9cd6e94-8109-4cc6-bcb8-d42eb237711d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0351;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h0E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #745 d19f8cf3-9aac-4694-ae34-c9e32618e7fa)");
unit.assert_eq16(16'h0351, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #745 f56dd055-d85a-4b7b-8214-a103265e7235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 4bd0f6d4-631a-4775-bf8b-9be91f95a128)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 f5957f52-7462-4e27-bbc2-2dc3cf66be31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 ed5adfa2-27fd-48c2-8541-d1cae074a127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 5eeadfa2-d21e-44b9-acfc-57a016af48fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 744ad823-4799-4586-90d8-ff7e30d50edd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 a92db746-93d8-4544-8c0f-7ef9f23169ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h025E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0889;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'h025E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #746 542c66aa-6597-46ee-9877-a0304ef226b5)");
unit.assert_eq16(16'h0889, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #746 86be65a6-79c7-451f-b1ed-7aa81088b3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 4ec63fdb-dd21-42c7-825b-1055e97c193f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 9dba9e7b-d208-4f8c-89e9-94454e3641bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 23f6fd9b-aba3-49a0-94e0-67bf5a904f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 d499cecc-2dd5-48af-a76f-d844d7417a37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 528d79b2-ca2a-4fd1-819d-1d470acbae1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 002420b8-91cc-46a4-9725-b55b2006fee9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h031F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h031F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #747 fe3f2c36-092e-4734-90ef-291f5a62e721)");
unit.assert_eq16(16'h06B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #747 6b018059-57b9-4fa3-ac44-baa11890ea6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 9392a139-38c9-49dd-9c37-c9088d8b2e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 1d2628ba-9b94-4967-beae-e0bf6d6102b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 362faf46-1d34-4cdc-b2b6-2acfc9a8bdeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 2a61b33f-7ee3-43ad-bff3-f1192e82a0ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 874b40a8-eb64-4d86-9bfe-207aabe7d498)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 e6295919-cccc-4ea6-8895-8b9559f6ee7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h015D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h0EB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #748 17a55b46-c914-4bdd-99c0-8a80a6fedc0e)");
unit.assert_eq16(16'h015D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #748 7bb47b44-adb7-435a-b2bd-287168ac1e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 c5cb1e3c-3fc9-4bdb-94a3-57edcd896e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 0415a8a7-5912-4af1-ad4e-b1bd1df7dae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 3dd9cd61-1575-4bba-ab07-f749760c870f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 ed6c7eba-abd2-4256-9cb1-efdce603e426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 9902316e-17d2-4128-a67b-8b3b67d54afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 e6182346-c3d3-415a-b051-001874ca5634)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h009D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #749 5a98aabf-7022-46a3-8096-ef40f2071617)");
unit.assert_eq16(16'h009D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #749 072a32e5-42f2-4b9a-b60c-0fdd349e7c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 7dfc5bc0-a87f-4a35-a633-a0e78d457d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 644fbdcb-6718-4e1a-8626-e1fff098776a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 e11f6458-cb91-428c-aa29-aa49381ee06e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 beb5ac89-651c-4064-b194-6461a792637e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 4d5a7194-c73e-4830-8c04-10f0d261e2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 1e488e02-702e-49ce-9e50-1c1aa9554629)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0202;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h07D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #750 23aeb990-2a4f-4025-8aa3-72005f65464c)");
unit.assert_eq16(16'h0202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #750 01f95308-d730-47bb-b427-e2373baeb432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 3443564c-29ed-4d2b-a29e-8ee902963b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 e8375397-a945-464b-a5b0-314e1401bf57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 bd2b0913-0380-4a6b-a992-fb6dac4c97ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 e5ff6010-cef2-419d-91a6-1a2e1c178528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 bb1a6012-8c90-4a84-8a0f-6709862d123e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 8e64535d-b3a7-4755-aa8c-c114a4563478)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h065F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h065F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #751 3c51860d-d456-4196-8a13-be3bfd671456)");
unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #751 9675f8b3-00e2-4077-8900-b9d238fce2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 290dc05c-0088-487c-8e85-adb7c044a331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 1331d402-0781-4fd7-be54-e75d6dc94b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 69cb39b2-e56d-4efc-9fb7-68f20757fedd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 bc0f9e2f-9792-44f7-8e6e-8b138b04b28b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 38646a9a-9087-47df-9e8a-df61defffcd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 8ae5f274-652c-4b59-8ba9-2448d432c186)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h065D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0907;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h065D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #752 b285dca5-6d64-4f1e-bab9-d728acaf3318)");
unit.assert_eq16(16'h0907, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #752 428311f7-4bf4-48bd-81e1-cb23a72ebc56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 1f97696d-9a03-4348-9459-cde293e6d2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 111b584c-a85d-471e-9fe7-5d43481d783a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 d663ef49-7e05-4d43-a7fd-2b5bdf656b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 e1294e14-7489-469f-bc2a-62f62c3693bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 b981013d-2fc3-4cd9-8f39-152827908f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 1b4893f8-54a6-4915-9240-aae37a787d8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0607;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'h05F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #753 5aef03ee-f017-49f2-a0a2-66dcdf5ee236)");
unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #753 7badf6a7-df08-413e-bf12-ef101510c4cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 3bdc694e-23fa-472a-bd23-e4b8ae17cce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 7bb0f866-580b-425c-92bd-3d336c323afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 bf8834a7-bdea-4f89-ba78-5b41759d6b2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 f6046dfa-3eba-4cd1-bb48-7610de42555f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 440be6ab-8b0b-4353-b7b4-920dec0d85f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 c05f972b-0e53-4067-823a-f3c9ba15a251)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h038A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'h038A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #754 07415352-5c5b-4cee-bb13-9c5b641feac9)");
unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #754 27bde725-094e-4653-8b6a-9824e43664f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 4a449e97-854e-4f2b-bb06-6417ff338736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 7e621468-a4b7-44da-bf59-5d563e232528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 95398db8-66d3-45cb-97bf-dea9d5256027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 d9e6f93b-1fec-46a8-aab8-78aaff1cf8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 63af2e60-f4ad-435a-86e9-6810b09e14ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 573543b3-8979-4976-8e7e-893378713dd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h09BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #755 8f128b22-fc2f-49c3-8cc0-5a7a8cc2cc2e)");
unit.assert_eq16(16'h06AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #755 6635cd9d-69f7-4689-8c4f-32a335093d98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 54de482e-e746-4fd1-85d7-c01e94b5e4f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 810084d2-9e60-4585-8183-bbdfa0bd521a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 1e72ece2-e280-4ff2-abc4-186fc48f192b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 097cae5b-05b9-4e5c-be43-e7a6e523fd3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 b6c57ae7-8a8a-49ea-be2b-0bfa91045545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 bab8f71a-3977-4dab-9b94-1a2e67a27400)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0267;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h0267, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #756 fc216c81-3af7-4d4e-b8c1-40804aeb87cc)");
unit.assert_eq16(16'h0C77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #756 efae0831-9ab5-4e03-babb-de08886bd500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 0abfb173-c1df-4d65-b4dc-13d3ad7f0c28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 a400fb43-c4ad-4694-bd31-62aad727dd5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 c454730e-b8e5-4378-9ec8-1393e0170c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 75a4d2a1-226a-40c7-8001-eae0f3513e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 8618e37b-9783-4e22-a18f-81f1bc2723cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 df9938b6-6433-4e7c-8580-0776786bf4fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h0CCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #757 8cc5febd-557a-4927-92c0-d9d40215b9d6)");
unit.assert_eq16(16'h0C35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #757 98fd7a7d-ec40-45d7-93d9-976308ab6b2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 7a465937-50a6-49a1-8b34-6fac8503024a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 c2bba5b2-854c-4eb2-b0c9-a0b0e1d4010a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 6a788f07-198e-48e4-91cc-a3b726ea5347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 b5e74863-9203-474b-8e0e-db1a44c8b8d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 bd8e08e0-7170-41ae-b772-fe64373ae5e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 3fb2aa78-ec28-4f23-a3bc-a9771e64ed98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h026D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h081A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h026D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #758 69d515d9-50f7-4e56-8ae9-0b135b818049)");
unit.assert_eq16(16'h081A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #758 445b92b9-b9bc-422e-91b1-e7d89b259c1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 9393fe1c-9602-45e8-94f4-377ac8db4649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 924e5700-4fac-4740-976a-9557dbda3f91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 8340e968-49ca-42af-914e-43d33e65cd1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 636eba0b-e2b1-4ffa-9c03-3ac283629905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 2b306c5e-8f1c-4a07-b272-76d42b1486f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 3d7076a0-e312-4a67-aa1e-306835885115)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0447;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h0FA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #759 af673fca-a657-48af-a287-d156290d5e7a)");
unit.assert_eq16(16'h0447, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #759 5918e096-0ba5-4ea6-808f-a417712f348e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 f1f0a474-b635-446c-bcfb-5a17e96a4d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 0a45e2e5-147d-4f28-a0ef-805af2ba5d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 869592f0-3647-4cfa-9743-5b7156f12e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 170c0be4-fbb6-4ed2-a33f-cd9c330b8242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 dcd42a17-c90f-4312-8da2-263e7afab2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 6dfc3b34-9a18-4f5b-ba8c-77c2e83c1cc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0989;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'h0989, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #760 8c25fbf0-1c24-4451-8620-16b16b321cbf)");
unit.assert_eq16(16'h0D09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #760 9a55c532-5b8d-4aa7-8cc4-5b60e453b5bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 f91ac992-d02e-47ff-b966-3ea070e9bcaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 8a22d911-23b0-4e27-bd6c-5e08249d0f69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 74396117-a224-4405-9624-e205941c90bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 a8338d49-bfb9-4d2a-b1fa-083dfe23d04c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 8135943f-b0fa-4952-adcf-79407e232bd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 87d2975e-06d4-4260-97af-5dd620777525)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h0D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #761 3c50eff8-b18b-4300-9dc6-98a46645603c)");
unit.assert_eq16(16'h02C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #761 9b1ed61b-0a84-4702-891f-3f9e2a4f39cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 3d4572cb-d2b6-4343-9f9b-c0add017529a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 32d5c167-1078-404b-9438-19420641146d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 8446a482-d18b-4f1d-b414-e9308cc4aec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 dd76626e-3d1b-421e-b99f-50b8cb513fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 4e89cc8e-57b0-4458-8abb-520c2b4b225b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 4c8a4288-ac78-4a77-9e84-46e543c711a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h01C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #762 348544cf-f2bc-4ee1-9b64-7108a9ba1682)");
unit.assert_eq16(16'h0DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #762 9d93ec27-e594-433e-87b2-8d38d84ba8a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 4fda54ad-30a9-4244-879c-9bbbcc365a72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 812f8136-9c59-4372-9873-64a19b27c534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 0ae643f0-f842-4e4e-9fd2-100283e7a7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 a7118fb1-ce1f-4704-839f-8ac1a03e7bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 62f3dda2-0800-479e-8a26-1218c2eaf526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 9fb3ed05-b524-4dab-b41c-b18e628510c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h02F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #763 742606df-8690-4bee-903f-55fd6654caaf)");
unit.assert_eq16(16'h0A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #763 08508fbf-7fae-4e13-b884-2456672013ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 a00a11eb-4e59-4c60-ac74-4b1bcaa2d8de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 05b9b7d4-72a9-4281-a3e8-a68ce0150dc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 3b053ac5-5890-4605-8007-efc2a38d4e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 13036c27-67b5-4bdb-ad1d-e268869c95be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 e0f6e9bf-21f3-4f60-9b90-874ad363bad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 1a09c3cc-9aec-4b3c-8516-c3921ba2cbed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #764 02745e47-05fa-4a70-9e7e-e961da8f45a4)");
unit.assert_eq16(16'h06F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #764 c2a2f769-cc66-4eb7-90b0-bf23b739d747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 0bb0ce12-e5ed-4fda-8cd8-2322961572b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 c5118b86-b375-4714-8ae5-839ef8ab7bbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 034e8028-3fd2-4be6-a12d-7db72be966bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 e28e5ac7-b364-4cc4-abb4-6e4772b5ce87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 de7f5798-8799-4150-9e37-fd1488e73528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 1a7abaa3-41e5-4900-8178-9500083a62bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h031A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0285;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h031A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #765 77aabae7-20be-4b17-ad89-84fdcaa96211)");
unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #765 a2009be5-3b67-4eae-9cff-51d2f0eae3b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 3012323e-1bda-4086-863a-a163317b42a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 5946d191-0f5b-46a1-b45c-c79fdd6e0850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 a9bea78c-79b7-4c44-a50f-169567fce013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 f3312bd7-e48f-4a9a-bf6c-53ccbb272ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 c9907f73-777b-4004-91b8-96ad2ad7fb47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 57e485e3-2f35-415b-836a-60d8aed26b5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h0B1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #766 5c080237-3e08-43ff-ae21-1ffa3058cf5d)");
unit.assert_eq16(16'h03BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #766 adda4c17-5607-41e4-ba95-7534ca012ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 7d533087-7bc9-4e7d-b0cd-f7c3072dc0e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 4115a726-18be-4ea4-90e5-7c548c486b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 860fdea8-a22a-40b8-ba3f-80a7c0808321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 952491f1-12f1-497c-9fa4-0e6db0b04cdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 df8cc07c-a54c-4857-92c6-f4b6b8ac3afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 153b477c-4fad-4df4-b666-ba18da71fc9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h0C6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #767 c82b65a9-96bb-484b-a35b-e7dca00b703d)");
unit.assert_eq16(16'h0B4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #767 dc1118df-289e-4995-98a1-c1f646a81195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 02973cc4-4d6b-4fb6-9ff2-5c8c4dc4223f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 e228f9fc-d560-4e6b-bdd4-ff95b03d48aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 449ce591-fac6-4363-97aa-8bc0f2c2f594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 cb704cba-f86f-46ab-9d9b-15aac281a877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 b9343743-b02f-4fab-a143-62247e959a8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 5b5d6703-9584-4b34-841e-c2ff58357362)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0332;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h02AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #768 4e8ec862-27e4-49e5-bafb-939baf7df261)");
unit.assert_eq16(16'h0332, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #768 05475aa9-cb23-4a5b-8583-55a184a71b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 9d7d704c-4d33-4f5b-b983-ed3ffafdebc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 7183aada-cdfa-4716-acd0-baf2db70b2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 10550d98-dd42-44ca-94b9-242de03d9e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 eed6bac6-ff06-4052-9b87-617eac173ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 3835b195-dc07-4145-b162-7e7ed0ae891f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 fc9e6f06-f1e6-4e92-8338-9daddbacc1b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0107;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h074B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h0107, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #769 de2ca614-503a-4e3d-8a22-0e6b9b355357)");
unit.assert_eq16(16'h074B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #769 7039dae0-46b6-431b-b529-4478d87a58ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 ab648095-5307-4466-aa09-54a0467bbcac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 1287c238-2bf0-4731-b665-85d1175a9ba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 1921847f-bc73-48f7-be5c-3b5b2ba86171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 c1536339-b951-4ea2-89a1-fbd6303c4c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 2679e705-5807-4b22-8b66-56b3b1f975e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 39956350-65ab-4cb4-ad95-be8a34214432)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0726;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'h01A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #770 b433e64b-0b3d-4ce7-8d1f-58ec62c40ece)");
unit.assert_eq16(16'h0726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #770 ab78ee14-e546-48d0-a197-169cccefed4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 a7f3d24c-661d-4eae-805a-a629cde75396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 f4f8e11f-a4ae-481d-b77c-512fd022a019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 a4a3cd8e-c410-4bcb-ab8b-989f7c6ee4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 d7f60a7a-91e6-4b34-b0fe-79916a67eb8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 54910cf6-aaab-41a1-bd4d-8af7b5276c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 9980f2c7-8e28-4135-87a5-0ecd5e3c2b05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h075B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'h075B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #771 b105f70a-b49b-4f7e-b148-d3295829ed40)");
unit.assert_eq16(16'h0635, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #771 191fe688-9d24-4891-ac4d-4d34d3032793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 9d243682-2f2f-43a4-b6ed-90058b7a879d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 4f9184b8-63a0-4797-9921-b1407de461cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 3eb56f8e-126c-4a35-bd97-a60df3bcf681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 d4ac578d-30bf-44f2-acd8-d4e7d6e94045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 7d9305a6-8de4-49f3-8b3b-9b2e028c35e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 7be390ee-5de4-402a-8b56-ac753230bd88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0745;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0746;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h0745, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #772 57318258-3380-49e3-b12d-1c31d2e89ffe)");
unit.assert_eq16(16'h0746, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #772 e3d0b5e9-5f94-4fce-93ff-7f0e40bcc461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 90e57d26-964d-467c-a862-e054a3687b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 bbc552ab-674a-4439-8833-70da188fef18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 b9d95aec-8be6-4701-a9cb-4e1be2a4e512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 a5b95711-8831-4058-a2a8-6ae5308c9439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 8685c9a4-f065-46e5-92f6-f93b459d2c7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 7ab49d07-eae1-44ab-a5a1-80c894bfa7b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0744;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0572;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h0744, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #773 1e3fbe6e-11c9-4960-a823-aaebc31a8304)");
unit.assert_eq16(16'h0572, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #773 f9cf62e7-f8ef-4f7c-b9f0-1f01a99f9bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 0ffb2fbb-d6c9-40d7-ba21-eb5b66d15f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 48408392-fa76-463c-add4-556a1357dfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 f994284d-d0b7-4ba3-a22b-5b9911524454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 6463d5ea-2b14-4678-83ef-3d7c1b6a09cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 a1e19c5b-aaf2-4d6c-9cd6-9f912a0eaef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 16f75828-5f7a-45e9-9bf8-56d1429b19ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0570;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h0EEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #774 1cd69eac-86b6-4eb6-804b-dc99ddda47c9)");
unit.assert_eq16(16'h0570, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #774 aa7aa724-bf96-4943-a790-e7ead0e14752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 58caf607-e907-4e07-a313-e6cca4703a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 9c67310c-f0d7-4817-845a-735c579fb26c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 2428e1e7-06aa-4b4b-a539-5b87edf86db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 f8e0f5e4-bee4-4667-8841-f50143f2c87d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 5a8cbe2a-20ff-43c8-bb97-18040f6e6267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 97337a08-4a30-40ea-bafb-d166472d3f6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0150;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h0150, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #775 c20a605d-04a2-4eff-88e8-3d993ba72581)");
unit.assert_eq16(16'h01B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #775 87f1d50f-c215-4808-bb36-3f9e077842d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 6aef8beb-5a09-40c3-88e4-455594d77e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 3b3fcf20-9d07-40cb-8f68-97c69bfbf153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 f8c436c8-7952-43f6-8ad3-096ce6ff713a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 7f915110-5655-4efe-8438-2003567a1b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 c4aa09f1-2301-4635-b84e-b06826d9fa2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 9c46b202-3eb5-4bf4-a514-21967e07fea2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0447;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h0447, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #776 8a34c35b-126a-42ed-9c6e-efceb4e544bd)");
unit.assert_eq16(16'h0DE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #776 0e6b15f3-7310-4c71-a7da-bbeab5cb80e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 ebf3b0ad-6dac-4807-ad21-b3e40f8d32a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 8bcb70f0-a530-4c8f-a22a-c20d5db937d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 4e5670f1-e3f8-4f16-966b-9bd410777a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 0238299a-76d1-4d75-96ab-1dfd11af2549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 1489bf82-bf7e-4f91-b9a5-3874a5b7ed6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 b255582d-93d0-4233-9c98-c423968dadde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0497;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h0D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #777 db35b7df-c4dc-4a00-a85f-9d29b63b3e62)");
unit.assert_eq16(16'h0497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #777 89ee58f4-90f8-469d-9999-66c4a200dcc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 b21a299d-a69c-4943-9806-df8ce2abc972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 3b511644-d832-4fc5-9bc1-2f4febdbfe60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 5623e9e9-1148-4844-b644-e549b042fd6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 071039f7-7c1e-4a2f-8f3f-61782f82f4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 20329e48-9037-46c8-abbb-85501467ca86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 7f23d990-01c1-4249-8ad5-7b77b5f94e23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #778 104cd47a-b297-4a68-be77-b07cb0eedd0b)");
unit.assert_eq16(16'h0A5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #778 ed108d96-56ad-496b-b603-0a6688222025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 b30722bc-c0b3-40ad-b466-2685e847f687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 b1991af8-dbbb-4b7c-bc7f-1b1eb20e2eca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 32b74fb6-cba3-4281-bc84-7e6d83dbaa67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 54c67906-88ee-4be2-ad5b-0c5cca0439ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 187aba12-8465-4cfd-8b3f-4931a5307dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 f65087d6-0ff7-4ae5-8d46-f6b839e46286)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0001;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'h0001, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #779 af210e00-13c1-4dac-9525-47a37da2a182)");
unit.assert_eq16(16'h0D53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #779 1073dea5-42f3-495c-9373-c16babab7850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 2955a955-cf22-4bbb-9b24-32dc16f223fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 f7915b17-27ff-43b1-8ad8-d3a9a1600339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 2a1e88f4-4db1-496f-bdd6-93720b13d6e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 cfdfd9f0-2972-4248-9b67-0d92d11b0357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 eaec4fd3-5603-4eb8-a460-100012c44326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 14dc8233-8b3c-44b6-8b6e-feed8b7f88bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h011D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'h011D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #780 88c53d2f-8dd6-490e-93d5-8aab88785c19)");
unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #780 68fc7438-e55f-48ec-a8f3-f6f5d836ec85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 4a58da7c-979f-4113-ae74-9ff5fbac0a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 fd0c656b-f530-4d2e-99e1-947b901a269b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 7c56d096-765a-45aa-8aa9-a2a199f2302b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 91d476b2-3562-42f6-93d3-4657eceeede0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 8b2fbe0b-9bd7-45ae-a000-076b2cec1e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 83ac646d-b003-4fe1-bd6e-630ece1ba75d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h030F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'h030F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #781 15785f4c-9ff3-40ab-9ad7-7215e2b1c0cd)");
unit.assert_eq16(16'h0C10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #781 87ff40f3-01fe-4fdb-ad61-82b9857c91b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 da686f41-02ff-4fde-be15-7dd088564aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 cff8cb1a-b230-4b1c-8d03-0cd660bc66e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 cad290bc-a65b-4146-8267-d7972da5593e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 08d353d5-7ae0-4135-92e9-e95df8040c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 a43350ba-5e82-48ee-bbbf-b9f9a73aeffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 21a3b441-dbbd-4754-a827-29be51ee689f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h028A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h0C54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #782 312ca65e-3ede-4539-ba63-eefa0560f6fc)");
unit.assert_eq16(16'h028A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #782 0bbf3f8f-a53a-4cd3-953c-f87d75878085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 e1eb8f45-4ad5-4d99-b819-342d1ad72837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 140870aa-6c7b-401d-af76-e444c4574645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 7a30c000-a15b-4474-82e0-5e081d557db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 9b6bf62a-4ac7-47d9-b18f-56f72072d69d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 e4d7a9f0-6ea2-4b07-91da-96c44adf7b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 70c9f4f4-9e29-46a2-8ee6-958a92a503bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0050;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'h07D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #783 2095818e-4b61-4aac-9758-2a99967ede1f)");
unit.assert_eq16(16'h0050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #783 0e854073-c483-4221-8d3b-ccb33f9eb57f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 ef6afd29-72ad-4746-8d32-5ad7ecee8283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 8dfe761b-4d73-481a-92b3-760d0717596e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 51bc5559-e7b3-4111-b8a4-f8aa14e0abc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 5d279d1d-75f3-483f-8af3-e72be900b221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 2a1905c6-80c8-4915-8597-ce20db6c6db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 02240efb-e548-48ac-92c7-9f19c50be874)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0613;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'h07D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #784 dda46569-e904-4151-8549-7b7f5d7a01ab)");
unit.assert_eq16(16'h0613, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #784 951d9bbf-464b-4060-ab1e-5b89e50156f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 6a7e672f-e03b-4ab8-8d0e-cc5f24766252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 1fa263c9-35cf-4219-92e4-922010b4d8cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 ca084f35-40a3-43a7-8eac-a4a8b6bd9e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 eb2660e3-a958-4af1-95e5-e43d30b65da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 dde71fa6-a0af-4d56-8a50-70d89a4113fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 85080ae6-bc1c-406a-9a75-5187981ef4ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h0AB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #785 07f99e13-d7ce-4d24-9d23-e55ca01aa6af)");
unit.assert_eq16(16'h0AA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #785 a0ed5518-8844-4040-9141-76a8b701d970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 a89a8cc7-1f21-42c1-8553-b9b2a3b49de1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 f3c1358d-ed63-4a5f-9c6a-372ea6532079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 d15bb31d-e0f0-484c-accf-37aa5042659d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 019f63b9-96a1-41e3-99da-da286ca62d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 d0e9b98b-9ac4-42a9-9d03-4c4d3712bd38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 afbdf391-5b68-4f7c-8b9a-333c5814c613)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'h0A5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #786 72eb1e98-9a4a-4456-9140-3994d786d806)");
unit.assert_eq16(16'h06F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #786 5a50ef17-a116-48f0-94d8-9f7b3d782e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 a7d834fb-2727-4da6-b9df-627ed436c0b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 23e85f85-6485-48e0-ab3b-99ec947f33a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 976a9929-5818-4110-b961-54d738c2403e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 645e946f-fe9c-4397-b667-8ce8d2cbef69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 52297b69-2891-466f-bedd-9d02079bc89b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 7c34d9eb-5672-431a-9aa9-c46685f589d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'h09BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #787 27aae220-24a9-4b6f-b854-dcddc687d283)");
unit.assert_eq16(16'h0DE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #787 692d5159-5b29-40e0-b0f8-6a4226460309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 21dc2d5b-e2cc-4e4e-9eee-280b1eca3876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 6b2c4f50-b905-44a9-b71a-3a4e7e251da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 bd9abedc-5666-44d0-bf2a-a0ffaec776c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 eddf710f-63bd-43e6-93aa-829ba9f04b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 4f88d36d-b9dc-406e-bfac-8e7671a42307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 d8f4f9ef-927a-457f-8573-2191595f8120)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0513;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h0513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #788 4104695c-7d41-4ce8-b7e9-a0fc5d375c5f)");
unit.assert_eq16(16'h00BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #788 25d014a6-f535-4687-83fe-0dbe0c4fb9e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 2700ab98-0856-4710-b84a-0ead0459b2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 534ae78d-539d-4515-b3dd-51b5e518a649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 64477a2c-279c-4382-b4ae-4e570e3deb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 02e250a4-c133-4ccd-830d-7a8dffde4ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 4578390f-8ec7-4a38-b99a-5bcae99a5ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 4aeac19a-dff6-4784-ae83-5b9048bad18f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h004F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h05C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #789 4c8d2437-c601-40ec-9dfb-25852c5f5669)");
unit.assert_eq16(16'h004F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #789 13efb603-7873-432e-a842-129abaa07da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 7eade563-4423-4109-a1e5-c2d2fb51eb0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 804e76c1-dabc-4d3b-8456-8079aa97265f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 d9316fce-fe4e-48a8-bbfc-fc9310396a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 7a1df090-ccf9-423e-9ce4-2cd8ff3eebba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 3920b637-1c23-4cb5-929b-1c7af7a9cf0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 3e77a353-6659-486f-b61d-7fcbd5c10331)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0323;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h09E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #790 120ed970-9fb9-4dc3-b4f4-4d3720359581)");
unit.assert_eq16(16'h0323, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #790 7976bf2f-3669-4934-b9c1-16f2415c01aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 58a3ebcc-be60-47ae-b2f5-17ef4a6c85b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 f009e84e-1511-43f2-87a1-3c08335d02a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 c8ff44ac-ee10-4f15-addf-f447ccce441e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 0a0200bc-b234-4fdd-8218-62e52bd0f53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 78e7eb0d-7f8d-41a9-8008-59829fb74465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 527c89b8-96b1-49e7-93d8-98017d5a3f56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #791 29a58f13-16d1-4bb6-8570-685ee8ce09d8)");
unit.assert_eq16(16'h0CA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #791 1ca3e7d1-4709-49dd-b1ff-a77fa4fa3b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 113b93ba-9e33-4c7c-a07f-5f4789d61a70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 7ac7cffd-4158-4d69-bee9-e26c92676e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 9d459c66-d897-4886-b9dd-041a541ed65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 80906a53-0d1e-458c-adb8-f68bea149956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 8a107435-44b2-429f-8854-7e0d8168ded3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 24b196a7-16d8-4f70-89be-e84063a63252)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h0FAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #792 6eeb22a4-dba6-4033-8f78-f27e050eadde)");
unit.assert_eq16(16'h09BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #792 1680d047-d247-418d-8d25-763d174a99d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 098ebc38-c2a1-4ddb-b011-f15a86954c39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 f6a0389a-d8da-4fd8-8d0a-d04d2c330448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 eca9e35c-0ce3-4524-8fee-bb255b816c37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 ade34d00-2812-41d8-96e4-ae7490c57d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 17d0fe7c-55d1-41e5-8e42-70cfdbee0636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 5538076b-c507-4149-a50c-97fc6aa62e9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h066A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h066A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #793 511f397e-30f8-427a-9610-fbb0588d8cf9)");
unit.assert_eq16(16'h0DB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #793 f53b4889-b921-49f7-ba36-87c8104bd92e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 00c2695a-4276-4fe8-8bb7-757420e4bf5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 68f664bb-1b34-4a50-bbef-d807617473c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 5c31c898-81bb-4743-9bed-ef268afe9e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 c2b73db1-f14f-419f-bc9f-2406f6dd1b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 11166cd4-bfcd-4b83-a4ad-5f56dc6e4ed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 58582c5d-36db-445a-b7f7-2da38f7dbd31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h0A01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #794 ff3e53e7-5dcd-4678-9968-196ca0b0248c)");
unit.assert_eq16(16'h0CA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #794 0183af5c-b3e0-4b01-bd6d-cc3e1edb8931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 a7cff441-3503-4ae0-96cd-262600432c13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 013c6137-1c44-4093-83ff-b2a12bac2f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 c43b96d8-3059-4fc7-b322-29508d0a3f9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 759eed44-112c-4a17-bf9a-ded3b760533c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 f03e2d97-8b48-4413-953f-c9a832b7bb03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 6ff61ffc-c99e-4c40-8a00-19cc5d80b175)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0957;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'h0957, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #795 7f736fbc-6c5c-4c92-9a46-23183678a6c3)");
unit.assert_eq16(16'h00F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #795 ff8ba7e2-4236-40ea-9541-787c1a5a0614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 aa1ac924-27c4-4bd5-bb02-c6d626571dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 acb2539c-2b80-425e-952a-aab0450735b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 e86570bd-f6da-4468-9f83-ba5f839f372a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 489ce773-48e9-4c74-8165-7aa9f96f5f9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 b65fb0ba-0a34-4ffd-944f-a034124c7fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 c6c60583-b51a-4071-97f4-8bc2cc1fe9d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'h05E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #796 ea691a94-601a-465a-afa8-82bf7d9b9792)");
unit.assert_eq16(16'h05EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #796 48b4fdbf-7efb-4ede-8e68-ddcfdd16869e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 1b52a881-d9bc-410b-89ca-fff2ca1b47fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 1dbbe170-bfcd-4c59-b666-85b202ff9bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 dd57abcb-6538-490a-b2a9-b313cf4fbe08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 a32b0adb-6a2b-4831-a30d-a7a651bc1e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 92471885-148b-4373-8041-598b88ee10a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 6ecf6091-5b0b-494d-adaa-24b2ab0e64da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0308;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h0308, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #797 d758cd11-085d-4ef7-b563-1b0023d7142b)");
unit.assert_eq16(16'h05AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #797 370e17b0-18df-474c-b95e-0f02cc109b79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 451ec2be-9816-47a7-80de-85ec7745771d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 f07d2c24-e60c-4835-8cec-4fe011a1e127)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 ccae22d7-63ed-4920-8ffa-a241727a8732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 d2ebd224-6d02-44cd-9570-b6936482e49f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 e6d29d24-5645-4e64-9650-318761652e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 251eddb0-ef56-4e80-b832-7b2c7ecdd4a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0388;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h0388, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #798 95d90b77-d8a2-46ec-aade-a446b00cebf6)");
unit.assert_eq16(16'h09A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #798 430fffc2-1cee-4e8d-8208-4521feaba53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 8092e7d4-6f9d-49fa-ba97-a3294226d73a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 1fc342c2-1cd4-4d0e-9fd6-a929d2cbe217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 d0f67d40-3af8-4e2a-943a-038f413cdf7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 74c3fb04-7bc5-4904-bc2a-f613182f1c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 04eda483-12f6-445a-a708-6947fa8ca492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 499313dc-3ee8-4297-8a4e-6ec1fd9d94cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0783;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0006;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h0783, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #799 cf3d54f4-1611-4b12-9abb-8fdf0862ff1d)");
unit.assert_eq16(16'h0006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #799 7f8361e9-cb6d-45fe-b852-8a67703e8217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 106dca10-d4f3-4301-a9c4-d59882d77c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 0e4d7a1a-97d9-4ab2-8871-f67265870db0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 a36985b4-5e3f-4059-8de2-fa5776018179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 d41c3618-14ac-4377-9cd4-14fdbd4896e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 d0e4aa8f-2eb7-4d1d-9007-f3e327c7f386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 c5a58297-d51b-45c9-a465-697998115e05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0369;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'h0369, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #800 232f30d6-ebb4-44c4-91e8-b1141b4e63dc)");
unit.assert_eq16(16'h0B18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #800 1bb043ce-7bbc-4819-acdf-7c6c82bdc959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 b6b0c43d-d219-4926-aff4-408a8fd8fab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 8bc975e1-2c59-4b5a-99ba-e32509f0a293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 67e00e5c-d833-4029-ac0e-2ff4ee5c6515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 983b90ab-6415-4f5b-9b15-0e18fcd0179a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 6779add2-c228-4e41-983e-fcdd879b1516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 3c53cf9a-c19d-4049-bc73-32f4f5b288b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h04D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #801 b62fe9bf-cebc-4944-baa8-899f6a124f6a)");
unit.assert_eq16(16'h00D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #801 9e845e9b-d88b-42f8-9a18-b96cd316924c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 ef8429e1-e9e6-4793-8f0c-932e3e8a1cf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 c0c277cb-f306-4472-9216-e4e03ea78bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 d81c4f13-6ce5-479e-afca-d12d32f3b534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 42c1154f-6627-4b1a-b1b4-84c832973ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 e97675e1-f093-4e84-9969-cb7f62487d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 5365e185-1b28-486e-8e9d-e3925e795de2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0255;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h07D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #802 ed188f3b-8519-4e32-9360-f0dc892fb977)");
unit.assert_eq16(16'h0255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #802 9129e071-6fe9-4778-9f80-0c53f760a629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 37742382-75bb-4300-8154-c3b552cd7404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 bf294d9c-3e81-47da-9816-de59f8d0d9e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 b439416b-bcb4-4b83-99cd-6750074723f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 5de2195a-91c3-4ced-8613-4f48d42ac39b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 e3c1c63a-527c-4338-a32d-2684ff960b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 62716f4c-635d-4c35-aa67-4d4878867972)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h0CF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #803 52ae8fff-27af-4999-8760-106a494b7da6)");
unit.assert_eq16(16'h0A48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #803 92c46dcc-9ea7-468f-a53d-537363ccdf2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 8422d5e8-38d7-4ee8-a95f-63ee364f6956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 824adaf0-e3a8-416a-b630-e58d0eed8ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 0d0f681a-3911-43e5-ba96-51074b31a30f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 24a4274b-5c76-4555-befc-70a3db6affc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 05bcc53a-a590-47a6-acfb-33b6f8dfd5ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 2e6e545a-ac8e-4a72-8cd7-2669b87ceb92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h081F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'h0AE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #804 02d3f233-cd3f-4550-874a-86c48efdf883)");
unit.assert_eq16(16'h081F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #804 5e41277b-ce31-4d80-8e74-1d0eda2a0bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 12c39b7a-0ce6-471a-b929-32a5af0302d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 03ff599e-d337-4419-a85b-64110363d07b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 1b0d4872-6334-436a-8c60-1c138af49d64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 28b99c24-192b-49ba-a97c-78b30aab7938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 4cdee400-e509-42c6-80e2-10856a9368c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 d22bbd57-efaa-4971-83aa-8bb359ff873d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0342;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ECF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h0342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #805 4a93c5a3-6b47-40c9-9cd9-30132f257471)");
unit.assert_eq16(16'h0ECF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #805 e1508152-4ec3-47f4-be43-a4b432cfc367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 ded16e3e-6359-4f2b-9385-607b4faa2fe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 5071d12d-9152-4820-8e2d-508c84ed328c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 ad5817f6-761a-4a37-b6b9-7d9acfdd5130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 4617c4cb-5baa-491a-b27c-d7dbb0d08b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 9dbb2927-8713-46bd-a5d6-23faa3b03373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 e68aa3d7-7c4c-4ad1-b25f-05926e78f21f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'h0F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #806 1bfadd2c-2bea-49d4-9b2a-5a99eea11e02)");
unit.assert_eq16(16'h02BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #806 9b1733ec-fd23-45f2-91d0-74ad0a3f853a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 76ea64a6-d56e-4ad7-8a56-99e317c25822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 1f893440-f76c-488d-bb9a-e8fcbd2e8223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 2b2d2fe5-a73c-4bcf-9ffd-01d07a1a8777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 648e3ab8-9756-4a51-a2f4-e1634667a806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 7ec7d012-0bfb-4b0f-87db-810bef7c2471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 771f0d41-1816-4d3e-98ff-e7a7542b7594)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h02D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #807 646bb901-524e-47e4-92f1-7edc98e475f1)");
unit.assert_eq16(16'h0F2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #807 063cb575-a784-4e4c-98ce-47e264d9d849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 71091420-e08c-4a02-a769-20df706b4b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 6e6e882d-8e72-4d4a-997c-7d62d3487d13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 14850adc-a695-4c85-9d6a-b32056ddf86d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 e70d55bf-9a27-41a1-907f-811ded6242b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 baa9e6f8-42a8-4ed9-8048-ca4a63ee5a63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 60ddd3ff-57d6-4611-8189-2a5665598d71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'h02D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #808 ec43de7b-035f-48dd-8d59-1fa86343d2d7)");
unit.assert_eq16(16'h0D55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #808 a9ab678b-8c60-49c5-917f-d4dda85a840c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 b7198cf1-db21-49db-8e8f-11d592e020aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 bf83d2cb-6b5c-49db-a8ce-dd8028213874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 726573ba-deb1-400a-b2e4-4d9d1eab7b2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 41ae3bb8-d3ea-4585-afe8-65f1cbb7a5df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 b0e241a6-69e3-4773-b896-f088d83a8d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 2c77351f-f0fa-4489-b036-a1fc76f48534)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0420;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0107;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h0420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #809 1bdb1793-9f41-4839-afa0-37fac5a41ed2)");
unit.assert_eq16(16'h0107, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #809 2e25474a-3bce-4d4d-b1cd-f517c01ae3b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 71b45095-5b97-47f8-9c1f-849b5ec70020)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 6b400188-4f95-4b72-9921-5e62108094ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 efca10e2-2088-481d-aae0-48a8997a7a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 8d3c099c-8f3b-4303-8ab4-73838895fac3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 84d8fb0a-64c2-4e36-ae89-59ded478c2e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 471d4be4-797f-4a0b-9994-8b49f985a854)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h0BE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #810 71713d4e-4c8e-4667-a177-16809a460c8c)");
unit.assert_eq16(16'h09E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #810 85291c70-d6c6-4374-8ee3-eb573248cf8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 2c565ac7-018c-4802-aafd-134b50a29232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 e4193446-ca5b-4afc-86dc-e556e3d9d412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 5b0c9d07-ef7f-4d9d-aaf6-844c56ad3f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 97227e2a-e029-4271-888e-4ed575773104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 1a15f30b-8037-40a4-b89b-b5355007c9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 10fbaee9-c8b9-493b-9af8-3e5e8b3026ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0282;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h0F99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #811 b4882102-cfca-4476-a339-7b4d44ada120)");
unit.assert_eq16(16'h0282, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #811 8816a552-ea27-489f-beb4-2b166568119f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 3084d11d-ddf9-4544-b362-0f5e20f32adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 8b8d1ad9-2b89-475c-b882-341881d01c65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 60625bc2-c2dd-4299-8882-c042ed6cd46d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 7f02ec8b-c9f3-48ed-9e4b-5ab80fc44ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 e56ce7b2-2ff5-45f5-ae1d-3de379c869e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 e7ccdd61-1e0f-4bcc-baac-4b0bff238adc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h099E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h099E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #812 171b34c0-6abc-4947-8070-d0ae7c89b715)");
unit.assert_eq16(16'h0F47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #812 e506dbbb-b985-48ca-8542-7ddb065ae1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 ccf6d4fd-dc7d-47bb-a82e-23f975951779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 57c8378c-d4aa-48d9-a07b-1e3321bb73b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 bd5f6dac-fd0c-43d4-adfe-e6a51fc372fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 e7a7d21f-ed83-4975-8fb6-26b0b86bb8a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 da9aca49-9118-4c26-81b6-4a7e1582434b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 03342213-097d-458c-95f6-70d1e914f460)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0052;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h0E08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #813 d5baab8a-ee74-47bc-946e-8a2067209161)");
unit.assert_eq16(16'h0052, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #813 a8c400f5-ea19-43ec-a452-32697e5eee94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 92c3b1ff-6609-428e-8754-3e26ae901b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 fe7ccbe6-5376-428c-ace3-4848322cdaf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 e85605b8-d71a-44ab-9fd2-d12c0a5e9594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 c009a902-965a-4d72-86f0-3d192d7ed53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 b5606087-dad8-401a-af4d-2b317ed638f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 f80d9c8c-99bc-4ba6-bf93-e04d6bdd5de4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0693;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h057C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h0693, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #814 eb37e931-692f-4e6c-af8a-47bec6cb0a1b)");
unit.assert_eq16(16'h057C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #814 d306bd75-b659-42d8-8852-900a360d5d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 4ae2dd30-600d-4745-ad51-d298447602b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 d7f03870-22df-43e0-8f95-ed784b61549c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 4a616366-3569-4b77-81fe-b99b5866c064)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 e3eda033-ae6c-4746-a8c1-b8dc3064ca25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 caa6dcdb-d032-450b-8b01-2c22cc9aa1ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 e05a24c1-e37b-4df1-ae82-47490f308244)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0569;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h0569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #815 7694a12e-b2f5-4394-b5b3-6d7f621e2f80)");
unit.assert_eq16(16'h08C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #815 fae4a1c0-c05a-4794-b2e0-2d6543347b70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 f4b403b1-f12e-4567-9be3-d5eedd092fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 7614712e-65c8-4edc-9c6e-908c47dc3cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 484aa921-662e-4275-b7b3-6b55e37955a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 019ee66b-fd10-48f6-b850-2fd1d11284d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 5375a017-cb81-4ac1-8f94-d0356d9bebb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 be179dc6-2179-4687-9d51-da8efe8ff86a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h060A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h060A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #816 4c953249-8841-48ad-b8b1-69fa27da53a5)");
unit.assert_eq16(16'h0FCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #816 a1ef6155-eae4-400c-a5b1-d061b3bd2d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 2eb67e3f-21b3-466c-9b92-80190f20366b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 9d713e13-668c-43e9-b70b-14a20a92ff33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 bbabb371-f369-4d8d-9ab7-650e7408a243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 493f9569-b569-4f16-b6dc-9304ec54454c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 5e5707a9-e2c0-49fe-9e28-0a0974d1944e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 35aac068-2e0c-410e-ae91-8e578430ff23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h043F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h043F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #817 43b72024-c3c1-441a-a51d-03f4a3d005cf)");
unit.assert_eq16(16'h0A56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #817 df6e3eb6-d4b5-40c1-a1b3-77a160d466bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 51a7089b-4cc6-41aa-ad5c-56b957b64381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 3b00958b-5189-4a57-8e22-dbd5e2fa76e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 ff20fd61-c031-4359-96d7-a3fbf26ae180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 5e6759e4-564b-4b58-a1a0-d4c112e34fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 6eb1546e-4dee-47f4-86a7-b9e2bfae6dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 9c159dc2-bdbc-4d95-9046-70937f3e1cea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0239;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h0239, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #818 ec233e12-7ba0-43b4-bd3e-a25ef77aeb28)");
unit.assert_eq16(16'h08B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #818 1d620c2d-fad0-4438-b53b-a57d63fc51f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 7ec61225-dbe2-466e-89f9-30c6c5c3761f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 0108f435-6df8-430f-952c-fb31ab819b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 f271853b-de96-484a-ad5c-d2066701e6c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 615e5ddc-9f3f-4f86-9aee-87ac4e90c720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 a400bf03-2781-400c-8b1a-825d3521b473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 c79d64e0-97af-427a-9b6a-82136c40a8cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h01D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #819 2bfcbd07-0d12-49a2-b969-04ca443d500c)");
unit.assert_eq16(16'h08EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #819 278c482c-87d5-4817-b4b2-c29e8572fd8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 e4ed23ce-de55-40bd-966f-088940f69160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 cc9985de-0d8e-4433-832e-c189b36bdc63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 5f890973-2238-40c6-886a-851a302a6cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 553ac5fb-608c-4ffa-869e-9d02cec08e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 5234e830-a10c-4524-b9a7-2b8f6359a3b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 2c2b3019-ba54-46bb-aa48-dd27a60883c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0803;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h0BAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #820 f7b44141-98b4-4140-8c8d-53efb22caa5e)");
unit.assert_eq16(16'h0803, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #820 3ff66764-c9dc-4fe8-b022-3bce4c10a54e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 57feac37-9876-450d-b18b-f8e068963e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 dd1a4970-69c3-482a-897a-5000ac86c71a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 e388138a-8aa1-44b1-b850-7190aa18b3fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 c1b2e4ef-e096-4293-a1a2-6b24f12d5f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 b1d9c55a-b4cb-476a-ae73-b42d0fa9132d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 6297415c-12de-4866-8bf8-05634a7d8792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0198;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h034D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h0198, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #821 76fb46b9-41e1-4c39-a7f1-d267bdb33f29)");
unit.assert_eq16(16'h034D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #821 8cacd54b-1570-4ac7-b263-19109542eacd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 43bc446e-dcf2-44aa-b5b1-269c085903b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 3278bdca-26ca-4be8-941c-2087c0350553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 fa1f5ad9-658b-46e6-9c0e-397e75ce3960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 7c08fb68-9388-4e34-b42a-aa31887e7c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 47e69fed-2d19-46b9-bae3-0ad65c5a4110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 785ed49a-c7a0-4221-9714-096d9b4c8f85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h0DA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #822 662b2041-6edd-4842-b0a6-8c3c7af9c346)");
unit.assert_eq16(16'h01D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #822 365b3d32-4c72-4a2c-8bda-5fb7d2e14022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 167fbb47-5f22-43a2-8f3e-793128b0fff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 8f81bb25-78ad-4563-aa7f-4da4e63e9d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 703fe504-d1ef-44c4-9a5a-c7881f52af2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 fe845fa9-4bda-453f-8bfe-20cfd3b57413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 edf85954-49b1-45d0-891d-cfa114f4db93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 39ea02c0-40e1-4064-af07-d4860d16de71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0751;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h05D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #823 21859233-8a64-40ec-ba3c-a86acb4ee978)");
unit.assert_eq16(16'h0751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #823 1ec83a97-ba2a-4026-bb6d-4d272c36e792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 1b54311f-18eb-4ff4-a755-7eca8915fc08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 e5ce3ff3-ab3d-4403-a430-6a491fa37417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 e966a3dc-f7ab-41e8-8d71-e889d0704840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 0b04bb2b-b6e8-42ac-a85b-dc99c09cbb26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 458472a7-4709-4d2c-8f6d-42830a1896aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 0144aa59-c9b7-45cd-a76c-1eb54ffe2c1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #824 d7297cdd-efa7-434a-9aa1-905d6fc456b1)");
unit.assert_eq16(16'h07A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #824 8e4a8456-9b00-4b80-a46f-ac66118519bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 c2431ff0-26ce-46a1-9842-97c0c26dd276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 23b874a3-9c87-485b-8bf6-745510d3d4a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 35e684d8-1aed-487b-b2ed-729b51fdb297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 fed825e2-8c75-47c1-9eb9-728099b91f39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 94d4c697-44f4-40d7-b244-70ab67b4b5ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 31672099-bfc7-4303-9cba-fd2de29f9cea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0513;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h0CE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #825 380f0869-9836-4eb4-aafd-2584ba551442)");
unit.assert_eq16(16'h0513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #825 cbaa5a4c-18c4-4952-8c62-aad742f7f7b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 3ad2ee7f-b407-4403-9c2d-217012df34d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 dce0e544-7511-4ce5-9313-fec34a67b419)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 e6514dfe-adcc-45e0-a918-92389dedcf05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 935c4ce6-397f-4a82-a25b-4a6dc25f01a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 6eae07ee-b71c-45b5-b181-beaab29c1e1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 a8dc85a9-e7b4-43b1-b731-72583f0bedcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0623;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h0E0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #826 595ba831-678a-4b74-a4be-d7e5a20f532f)");
unit.assert_eq16(16'h0623, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #826 ec1c21e6-54b8-4bf6-ae7b-c6035d3bc630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 cb813ab9-2e71-4096-94fb-1bc4184bec59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 22bf11e6-24c9-4643-bbbb-a3be807cca98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 dd2b9950-6051-4cd2-9d43-8df01722155b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 32ff7092-b088-4176-9d4d-d8f8bde26d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 2197297c-e9e2-440e-8974-59acbbd21366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 da09fdab-a3c0-4f6f-9556-ecf3e0765352)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'h00DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #827 4fdcf737-01ea-4e56-8464-cd0b78f77e9b)");
unit.assert_eq16(16'h06D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #827 9c40ba84-3952-4fe5-b979-3818cdaf76f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 3860050c-ff97-4db6-ab19-c65ffdf7e3e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 566ddd10-21a5-4764-a1b4-a41f86e513df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 2ce77347-a58b-4f8f-8521-5fb3b661a569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 0c60ce93-d9d1-4def-a128-12431f0e10e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 9228d351-594b-4fe2-9089-3774441913c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 164b70fc-eb29-48c1-86ad-b0944eafacb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h00E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #828 a686fdb1-9ef1-495e-8147-a0a5cd4b5fea)");
unit.assert_eq16(16'h02D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #828 c9534ceb-fd0e-4bfc-bc0b-a2145ab95c4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 d6c7b26b-5f24-4568-befd-5d123a0319a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 e6d4cdce-1f14-457c-aa3f-a96cfd0e0e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 17da061f-aced-4021-bec6-c6ad11b36914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 2c2c9760-bdbc-4e61-9044-f4a750182869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 caf35200-e002-49d7-8a38-847730d61969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 7e6dc34c-5ce5-4ebe-bb19-99ae5b50208d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h034E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h0F46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #829 c3f83ddd-ea06-4f3c-90ee-059a1fb4a55c)");
unit.assert_eq16(16'h034E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #829 e6b29fab-377a-4680-95db-72591cb32a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 251625b3-795c-4187-8725-0c5230917a4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 c6fb424e-6395-48e4-bc18-f63714ebd24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 64849fc6-67f8-4b37-9b5f-30f3411c78e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 fd75a40c-8ff5-44ed-bc90-f44950d88c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 2b8096f8-bf78-4e30-aec0-45030878d30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 eb1e9b9f-f904-4252-bc0b-86eab0256407)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h0A12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #830 60e81d18-5e80-426f-8140-7867cdd1efdd)");
unit.assert_eq16(16'h0CDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #830 6d5a6b2d-ec2a-4ae7-9209-b9a57a4e90d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 934a33db-57b0-4525-b696-5ce2337879cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 45fbacc4-a22c-49ee-ab60-dbd8876c524d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 621fb7ab-757d-4332-86fd-57664493edd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 fdf18bf6-94e5-4407-b1e9-1de883e544c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 d58ee499-a5fc-4a89-b402-c43653f85c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 b2e0e40c-d7b8-4f0a-a071-12f63fc1449b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h004A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #831 781100ae-5cfb-4843-ad6d-a31e6ae8c8b4)");
unit.assert_eq16(16'h0EA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #831 9c0c2d0f-0258-4893-80c2-e44ed4eaa6fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 9a8d12c0-e5e9-4e91-ade8-75f312b85855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 5f047f3e-5eb7-498e-8f2d-70847681de11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 a32cd315-d2ae-4b3d-ac40-0815c03cdb42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 73e43a5f-e303-4e4f-b772-ba3cd928725d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 742dca87-4621-4dc5-b9ee-507f714b6ada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 29b34749-1d6c-452d-830c-b0fd28de01ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0438;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0944;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'h0438, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #832 bb70a7f8-0a28-4aba-9397-1eaf328aaa33)");
unit.assert_eq16(16'h0944, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #832 d4b48e05-3d2b-4bb7-a257-599073727015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 b7362727-447d-4f1b-a5f6-6adbcb9c71bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 b4cb780f-b957-498d-b214-6c9d003d2e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 dadcc1d9-7191-4d10-88aa-0cc41b2a0fef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 2e84357c-acd7-4c6b-a5af-a9d9a11026ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 818a7319-d93b-4c74-9b53-e6c97e24d875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 c9ed4e84-4f27-40ea-b529-ec93531223ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #833 f910dca3-b9d9-4a2a-b254-5ee813e6d93b)");
unit.assert_eq16(16'h0B84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #833 b4590661-af44-406c-95fd-02a71e8ca1c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 634cec8f-28a2-41ac-a88f-583d7987bec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 17e0539b-bd5b-41fe-80ca-3e84ca42c8c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 4006b9a2-4826-4f3b-956b-9ce44d11193e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 4a6ef867-e665-47f7-a6e7-07204231d069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 207d14fd-75ec-4b58-9c68-69549f082aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 d05c1b03-dd37-4646-97c2-f9ce6d6699b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h0DD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #834 8b58ade7-e77d-458a-9860-d67cff984a92)");
unit.assert_eq16(16'h05E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #834 bbca58ff-20d8-4208-8d68-309329b101d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 0d20f8dd-4149-431c-9ccd-f26d2d21988d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 038e46b2-061c-43ef-915f-45083764e7df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 0c424317-3bd6-442b-a130-20023803331e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 aed1831d-3367-4713-8fa9-642cc8973a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 3c82c01b-cf89-4fde-9e65-d9746edbc608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 a9a01cb0-5ae9-456a-93cf-46e59f344222)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h022F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h00B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #835 d7fb3531-ddc2-42db-a7a6-4b7c36150faa)");
unit.assert_eq16(16'h022F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #835 f76e3b15-5586-451b-9449-1aedc716f2f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 6369d454-8f3f-4cc5-b217-4589ad63de66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 202e81ba-a1e9-4b3b-bc84-376daff7b7ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 b8a8b919-5d25-4e6f-8d07-c9de55fa408e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 60f11d9f-6bca-4a06-bd8f-ad3319f4c94c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 0113b4a6-696c-456a-b198-3e5dbbbc07ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 5343ca2e-b020-4b59-9981-39122ee1e4d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0732;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h03DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #836 a503bfa6-3c34-4cab-8ad1-459f6ae671b6)");
unit.assert_eq16(16'h0732, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #836 5bdc3a01-4470-47a6-80e9-f15bfcc206e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 00ab8c6a-84c7-42fa-ac21-7037d7a45b0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 e571ddb4-b074-4f6f-92fd-4faabcf4ecc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 f1e58f07-c04c-4a7b-89e3-1749831c0c4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 d2b5957f-cd89-4958-a1e9-f8be9d4fb687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 69e2856c-24d5-49f5-9dd7-43e04ef0d73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 c076cd3b-ebdc-4391-860d-8007d4a9614d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0509;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h0509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #837 6f5b7a4f-c371-43db-8c24-0b58a206c420)");
unit.assert_eq16(16'h03B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #837 8ea0d72b-eb1c-4f84-bf19-df3bae47eb75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 e06725fa-9e40-4633-88ec-2f6d4313102e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 9204b40a-a0f0-4d08-b60e-e46898d42493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 71e46fa2-c172-4007-84f0-ca217dfeb8e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 a9ef5c48-e10c-4a74-b3fa-b3fd70e3eb44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 5ce7861a-fe75-4168-9d8d-f1f4f8e6fa5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 6f86ef72-ab86-4a6f-b278-a9ec1bd300a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0515;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h0515, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #838 66ce75cc-60fe-4b29-a97d-59e88e793b19)");
unit.assert_eq16(16'h076B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #838 9cb673fe-f4ce-4fcf-83ff-e06ca0676752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 483c3703-0214-48c9-8389-d829f6321114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 d9acd83e-51f2-430b-a8d3-522b674d3c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 26db6dec-40e2-421f-b1ea-c80c0092798c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 509aa1f1-354e-4f6d-971d-244406c0bd15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 977b7228-b70c-4cad-8b2f-e3708220daca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 962ddc05-183f-40f0-a7a8-8fb7245d46bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h0CB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #839 d8c82ff0-a999-47ff-97e3-daa7db9200e1)");
unit.assert_eq16(16'h09EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #839 3d1fbb3c-5046-4edd-a850-6fcb640b2fce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 cfa0427a-f9cc-4ed0-8059-fd59c787b5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 3452faa8-1b53-4a14-b7d8-23c3bbc0868e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 4a5348df-6d57-4d96-82a0-d0362c98ba7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 15bc2a58-5e69-456e-a299-71630c765315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 a50def72-7f75-40b5-b070-551114206ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 2c99f306-035e-4d7c-baf4-8b5214d97f05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h056C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'h07B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #840 441be578-352d-458f-92a1-b16071513e17)");
unit.assert_eq16(16'h056C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #840 28b6e7bc-a1a6-451e-9623-800a15462a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 f3e46493-44f5-4244-938b-98180a59dd41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 ac5a6be4-ce93-4348-a260-7dc6edb1d630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 035ad788-b363-4c48-89be-f6f0b43d7e53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 33414bbb-47fe-4e66-a8ef-2ca1677a864d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 44e7c095-b1c3-4d32-b109-fc705897af47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 cb1cdac2-5cd7-4a54-afa1-bac5c54413b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0959;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'h00DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #841 770c8430-6b71-4bef-9436-6b1e4ee5b707)");
unit.assert_eq16(16'h0959, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #841 e80219d5-fa18-4baf-8119-ee3bd702c42e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 bd8ac623-d859-446e-b791-3c8424451273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 dec33a73-fd47-41d8-91f7-2311bb07e442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 1a5e7736-4921-40fe-9a08-9b1334de633f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 ddc89945-b87b-43bf-83e3-8673ce97fe9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 420d2f83-f9c8-46be-9a2c-2fa36d676bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 0c0aad92-6bbb-4bd7-aa0e-7af0942522ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0128;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h06BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #842 4853a285-be3f-4ec9-b75e-90021f6e3cc0)");
unit.assert_eq16(16'h0128, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #842 4992f0ca-ebbc-4ace-ac6c-516220d9bb99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 bbcc0cd6-7106-4851-86ef-5e7aad41d983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 54d39e3b-7ddc-42fa-871b-07ed767ad8ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 0cda5eaf-0de7-4668-9d31-acee2cc6d783)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 16c04eb0-1894-4b83-84a5-c25f519d58a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 cc3231b5-5e67-40b7-8ad2-8761eb831d05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 e5a74f7a-c85a-45b3-91cc-0c99f97aed54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0876;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #843 1e75071a-55bf-4f4d-be19-446aadfd5561)");
unit.assert_eq16(16'h0876, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #843 4fb40f20-1c6a-49ac-be57-95d4d2a45283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 e1e731da-3069-4d8d-8b63-1e4821af5501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 d3bffef3-6eb3-4b3f-bb6a-ff5c7ac688a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 498c693e-74fd-4ce5-840b-16ac6a93694b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 5c765d5e-e3e7-459a-beba-00c9085fc1f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 97bc8353-70a5-409f-ab17-0d23cb9b4396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 3b3cdd6f-45fa-41de-af3f-e45ccef83ee6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h084E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'h0D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #844 812a8322-d3ea-45a7-ab23-fa72621012b8)");
unit.assert_eq16(16'h084E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #844 1c5799cb-92b2-4911-b31c-82fd3f89abad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 0926aa7a-1915-4bec-8f5b-b12b3ae99aa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 9430c253-db5a-407c-b7b9-4711661fdabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 de5e3760-9b2f-437a-bd47-72af2147b12d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 361f1a50-7bb8-442a-ae89-0d5b8d828867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 c170addf-3290-4479-b4ef-f56f9e5027fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 c6eb499e-1bc5-45c9-a0e0-1b53ce8cdf7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h0DC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #845 1dab359d-3da6-43db-bb4f-011672dae3a5)");
unit.assert_eq16(16'h04E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #845 9f315766-c8ea-4e6e-b4c5-2afc107373e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 8c67819e-0984-4af6-8c4c-e47d22a256bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 c17ce1a3-8ea3-485e-b0c1-21cd9396782a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 41eb52b1-91e0-4e67-a4fd-44eb6a5212c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 bfa179bf-cdea-405b-9aa5-573519342957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 034ff835-4fe8-4051-a8ea-6da2fbbd0e6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 0a26ff9f-9c80-41a7-8099-c52eeaefd57b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h0B32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #846 623a46b2-5052-4ca1-b817-82d6d8f4a76b)");
unit.assert_eq16(16'h00F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #846 659b2af2-6ab0-4e43-8109-ea72116b8895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 20da8b4f-d4ee-4ad6-ad03-41277f8e5d7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 24de3153-4d92-4166-b40f-aa024d52846e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 b74985e4-9016-4cc0-9328-3adfabaad05e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 84677187-ea3f-458c-ae2b-9256a4304b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 2e377505-aedc-4d3d-95bc-33f033e2ca35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 04afc676-5089-40af-8dda-2339194bbcdb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h0DE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #847 b22722fc-45c2-437b-a8ab-309fbfd9c0aa)");
unit.assert_eq16(16'h0AD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #847 1dc06a1f-bc10-44d6-a684-f6b24b415f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 be1079de-536a-4dc2-80a0-84bbb2e80cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 074eee9d-1085-4ca4-ab28-6ff4acf54a65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 f96eb68c-4857-42dd-a40b-b34def820aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 40810268-c82e-4a5f-8f19-db11ef20bcfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 71145ce1-a90c-4677-be49-d95a39a15e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 2d26b609-37c1-4e88-ab70-26bc138d457c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ABE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h0EE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #848 7a3222e0-6c10-425a-a359-5e365a823ddd)");
unit.assert_eq16(16'h0ABE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #848 2db87f8e-097e-4aa4-b883-dc3d7e9d244b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 6b477f08-2a49-4e63-ace9-6a5044c7c783)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 99612ca8-da7f-4227-a5e5-5ad7dd5db206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 79eb302c-b982-4d45-9b5e-7d9539120e76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 ebca2739-e876-4efa-a192-2356d8d9147f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 759ed4f3-2e6b-42e3-9ec3-c4874c2fb0dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 99760dee-c51e-44f2-af4a-65d1079cd158)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0330;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h0330, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #849 5aa6d9b9-bd4c-4108-b541-1c45149b94fc)");
unit.assert_eq16(16'h03EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #849 5a9331e2-b6cd-41ec-8423-498a8a248401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 6f6c5891-f2a2-4418-ac50-41dc6859db1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 3d51c384-8d27-41e1-bfd4-5a9609e95c16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 7f41b714-ffc1-4c4c-8915-b3e905776f74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 939f9972-2af3-4c7d-8030-4e6117aca72b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 7ab2829d-0147-4cfa-b15a-b4aad1d84280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 e2535480-e1c1-4b7d-98b4-858a3eaf5f17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0614;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0928;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h0614, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #850 6b134288-8f88-4fbf-ad0d-df9de0caba69)");
unit.assert_eq16(16'h0928, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #850 86b12c7f-9769-437e-9f4e-37c4f8bdc7cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 d6f23be5-6f6d-48aa-ace9-4f03e9a60170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 d739fb7d-1aa8-42c2-8b7e-b506a3b1a1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 4c58260d-0872-4b84-9b9d-8098da8a0a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 853c890d-fe4c-43a9-9f5a-a19c30bc5b7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 103f6b4f-bba9-43fe-a8a1-60de4c1c3692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 2648b9b6-4efe-4bca-b671-f52032b9e33a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0583;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0095;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #851 94522e81-8c04-43b2-8ded-8d0dd3630a0f)");
unit.assert_eq16(16'h0095, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #851 29d7e05e-cc76-4cd9-8748-e373c2a0096e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 1c06ddf1-bc0a-45fd-be63-ce7b254cc59e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 1e6ba4eb-b9f1-4188-8b46-9cfb1024e2e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 836132bd-9065-4140-b1c7-b386efab233a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 046c7c23-08f7-4908-9413-1150e8532534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 027f7299-f745-457a-8f0b-69f54ee2ca92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 88f707f6-6fdd-4c0c-8b63-bd7e9243d1fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0780;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h0780, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #852 75ded1bf-b288-419b-af45-b16a65ba245b)");
unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #852 b391dbec-1694-4d6b-ac6c-d5c69d3aa9a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 5705593c-6b0b-484b-a16f-e7234c5dba5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 ee3ebf43-d4de-49c8-98ad-7d99f36def46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 1d7cd6d1-b406-4be2-87d4-6e975c044e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 eb732aca-a018-4534-a2cd-ccbdcbb4602b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 37a2bcf0-3c89-4683-9f43-1be17f0a3b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 57011ed2-6c44-43db-9cb8-d36f639ceae8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h0DB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #853 e69a2a83-d542-42b8-995a-214d52d09df3)");
unit.assert_eq16(16'h03B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #853 5277cbe6-9d8b-462b-83ce-b143a5d1fc9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 44e82ff2-cb67-4d17-8dc3-78f073da7b1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 7cb29e03-5eeb-4ea2-b556-004b4a62b0d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 83fa02e8-6572-4c97-8a0e-3abad11a1453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 3ab9648c-b0c0-48e6-a99a-0e8c21a0cac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 46374c92-a9c1-46dd-bfb5-7fd221bed86a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 c4a2bd35-03eb-4b78-a88e-56203ca0dd84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h0F08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #854 86f9870e-d292-40f4-8c31-73f4cfaa4af9)");
unit.assert_eq16(16'h0DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #854 bcdb25d7-7a8a-4e4e-bbd4-c1ad7daa4532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 06210e06-ec8e-4681-8113-fb66fb27d5a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 a3d9619d-6259-4ae3-85cf-af903deeeb02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 05bb5ea3-e0e4-4e92-9fb5-6de34ca15ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 101cc270-8743-4a37-a19c-7b73e3ca680f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 8397da0f-3ac2-4f21-801d-abe3bc480cfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 83df09d6-8f0e-4d79-9558-75582ff39a2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0329;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h0EF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #855 32e314e6-4d11-4053-b343-936f3aabf59c)");
unit.assert_eq16(16'h0329, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #855 930e9abb-5658-4956-9d41-7c2551212e9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 7a545abe-6ee2-4cb5-916c-45438ac29dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 c525db44-3afe-4954-8ecd-150ab095c870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 a33bc660-e349-426a-8082-1690fff5d39b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 55d89bcd-1598-4290-bdbf-3a44712e2660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 b13e6bc7-4318-44c6-948b-e7eadd176fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 6a4b20b1-9d8c-4a23-a462-8de9bae8d25e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h0D9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #856 51255866-c070-4c37-a0ad-94dd98a013f3)");
unit.assert_eq16(16'h0D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #856 10b52701-cc35-4fbc-949c-45d0ea5f622d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 ac51b30e-a109-4cdf-80e9-d55d507925a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 13d3eb70-8d61-4c38-a0c0-c33ed34246b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 a739d1aa-3f54-4b3e-ac6d-4298bc13b066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 016f0bd2-f550-4030-bed5-d9a25997ab5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 34ba4550-bf41-4c73-80f0-b354d9f27590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 34e13afe-53e9-4cf9-aaf4-e25d0dcaeb22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h001C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h0C34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #857 6aeb503c-76cc-4431-b437-dd3e7d256dfa)");
unit.assert_eq16(16'h001C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #857 ee5f3087-491b-49c7-8dee-8e44fd639585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 982f5b43-75e6-41d8-97e0-5963799edfa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 c00f9a7a-e1f5-4a81-8e12-157914c9abeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 21eac6ac-5e51-436c-802c-93540159ec3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 95fadffe-8990-4b93-913f-624f39a634d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 854f0d22-8413-47da-8817-c5d6ab49345f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 d8ac4c5b-3c41-4da9-acb3-2a1424ad1710)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0254;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0571;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #858 b2971799-f844-4849-8cf8-6e0f3ff2ace1)");
unit.assert_eq16(16'h0571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #858 fb92dcd3-3e40-4955-8aa7-b0bb0cba44a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 59016108-a346-4c51-a0f7-cd81add7fc45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 6f13ed21-6a49-4aa2-9a86-b3d2a18794b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 8097d8b7-6bf5-4848-90a9-55d6f740b019)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 907fca01-0ed3-42c2-984a-e0f9acd31da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 f66dca52-2a90-491a-a67c-a99081ce1c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 8f2a67dd-390d-4344-b102-7c54b3417d77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0248;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h00AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #859 7d9e114f-0c40-465a-801c-ad8377fe5d8c)");
unit.assert_eq16(16'h0248, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #859 7214f02c-3ca3-4df1-8b61-b44ffe70b64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 c4f4e0f1-1201-4435-9ae7-6b86b4712fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 2d8157bd-1d2c-4c4c-804a-9364570f700d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 72f8298e-a958-4873-b0c7-8b61cdd1a332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 e7042c37-019d-4c9b-8e13-17d15d6c6b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 30c73c86-b9ae-42d1-bf8f-ffb5533b932d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 1c6cc85b-9f6b-4afa-b9a0-986798e4f44a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0727;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h016F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h0727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #860 5d4ab166-e653-41f8-b4dc-27f9c0f3f61a)");
unit.assert_eq16(16'h016F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #860 9042d5fa-2385-4be7-80b7-c4e5c63e5a6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 dd705528-2bee-4286-99d3-e139f4052c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 e1bb1299-4f2d-454a-9acd-28dfe864c019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 27733d4e-3b8b-4967-87e2-9de3897269b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 9175a668-a6a1-4571-a606-3b0da48be740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 560a24c0-fd4d-4f31-b2e7-d8b3e807dbb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 f18aab9c-58fe-4c30-a0af-667da128acd0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0531;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h06E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #861 8a0d5e9c-8e8e-4380-8d34-e0eb97fb2730)");
unit.assert_eq16(16'h0531, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #861 dd8c3839-c1f4-4c5f-9043-6da8e31b0b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 b8de02ae-a9f2-46f3-a769-c05b57c0fac3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 640f591b-b015-4290-85e5-8cc616e5c45e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 fda9afc1-86a7-4dc2-bf17-3c2218d8d1ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 18d388b9-c8f2-42b3-904b-2802ce056a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 8637ffb5-1b65-4c59-95a0-f0dbc04aec1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 533503c2-3c68-436a-80c9-7ef415e503d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0552;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h0552, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #862 cdb22b40-a5ff-47f0-92c8-8bdeb5afe65a)");
unit.assert_eq16(16'h0D72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #862 91ad8401-2b53-44d2-ba69-47f0716c07c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 1ad1ed10-1f6c-4b7d-85fe-73a865b99ef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 0333075c-9d47-4578-9033-70705a2e155e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 42ef2ee5-a298-4fe1-bf86-1fdb3d5f5f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 885f9178-b47a-4a78-aea7-a12fec6fd653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 f4e6adef-0516-4800-945b-288b3a322751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 b2710d79-b1f3-49b4-a390-00def26b6c2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h05DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #863 0614a573-7de6-45d5-a36c-c12b5d53c053)");
unit.assert_eq16(16'h0F36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #863 92c66e3b-0687-4e46-a495-b37fc83571ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 0b70dfc3-9e9c-4f9b-bc94-5571a1822956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 f22e04bf-cfa5-4f46-ba3c-dad949e32d54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 1acf0cdd-5893-4f41-a78b-9c572d9c4455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 aa2227ff-3b24-4c2e-8ef7-45db5fdac236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 e186f4c7-d8b7-4894-86e2-eac4db8b84eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 380fd0c3-561f-4835-8f20-a3155ea57ce0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0815;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'h0CB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #864 f44fe741-09cd-4365-99e7-f3878dafd2da)");
unit.assert_eq16(16'h0815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #864 f8597fb5-e89e-4409-a042-3732079b751a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 c0b855f8-e72a-4b26-be87-9b2132569359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 297f084a-a6cc-45e8-9844-66a30d4f860e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 7a523c00-1678-48c6-875f-4f1e3e9ab4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 94a27759-1234-4fe6-a0f4-a1598c3ceb95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 deca51ec-bbd3-465d-a3be-d090f36ce187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 8d02040e-eeec-4eb6-b15b-9d4e3a768acd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h0A47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #865 0b48b3bb-db47-4da4-a62d-e0f5d2f2d3b2)");
unit.assert_eq16(16'h0A50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #865 66a85ced-9f04-490d-a613-812cf01bace9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 176d173e-9bd5-4d0b-95b1-e50edb258ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 9d882769-8dd1-4f45-9cc8-d04d0516ebd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 70b74a8d-a6ae-45a0-8af2-d9191eb8b894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 6eb76646-7bce-40fb-be40-03e116f14330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 64f08fce-b067-498c-9173-f693813a03ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 dbc9f300-1f29-4ffb-bf7c-ca2963ce497e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h0F95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #866 dcb98bdb-cee1-4c09-a86d-714b67c6b55f)");
unit.assert_eq16(16'h043F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #866 e3599f9b-e2cd-44fb-af60-ac7bf2be0a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 01c387b9-5328-42ac-9cf1-ea881b0d8637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 cc1efa3c-0c71-4b3a-b9fe-b471ca486a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 1524a92f-14f3-4a84-8cd8-871a88a3fcc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 d4b9f9e2-be69-4c85-8b84-b70730f0f481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 bd96cc77-2a44-48ea-a90e-9f3563879df9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 ec8c4a80-cbe1-40b1-bec3-3dda61ccc26e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0760;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h0760, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #867 ff0ed164-baa0-4420-abd1-ba110f8ab507)");
unit.assert_eq16(16'h01F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #867 cf7c0cb0-a5ae-453c-aad9-37da99c31987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 e151c45e-af3e-42f3-91ef-972200db51cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 80edf17f-23d1-45c4-99ec-af8828f176f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 d46b978e-9b9c-4c40-81ea-1f3733bb0359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 4c782463-965b-4458-a745-a552b7704b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 6f1f77c2-cdd0-4d1e-9b92-6c35dcd13652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 37edadde-9461-4fb6-b27d-a1ee60c7b200)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h09B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #868 3d2370b8-24fa-49b5-8f56-f918e25aebbf)");
unit.assert_eq16(16'h0C61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #868 c333b51a-bbc1-49dc-8beb-21b68c48339f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 e558389a-a254-42a1-b6dc-825c8c40931a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 6ca1344c-3a2d-4a79-a9d9-274d13f7eede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 d92f1e34-92e6-44f1-9b25-4c546a25aba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 24e8a781-a515-46fc-b0a3-d8687967891d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 8218558b-08e2-4264-b4d5-099246d216f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 902a72b5-8daf-4469-9bc8-7d8b61d1020a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h092E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'h092E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #869 70d12d13-349a-4af5-8a32-f65786edf847)");
unit.assert_eq16(16'h03C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #869 787675d2-63f7-4a13-b749-6eb6194c676f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 b288da5a-e48a-42fb-9f38-fedb1cc4f22e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 c260f889-1e2f-4e0d-8bcc-2162d4ac62f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 a9b36062-8134-461c-a5ac-e191effe4170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 a82d1f62-6e0e-4058-af46-be6a6a245684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 a1e6d426-ae49-499d-835a-ad3aa0fde9da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 bf1043b8-8789-46b7-95a0-724773dc73ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0779;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #870 7d52f2b1-0e84-4bb2-8dec-4a5ae79a2e34)");
unit.assert_eq16(16'h0779, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #870 c2d65ff8-02e6-4a03-b1d1-1446f21b80e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 98d5167c-e6d7-4521-a93d-31099ab2189b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 d345717e-7bfd-4889-bdf4-f89b0f75427c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 4be1e84b-ffc9-40b5-b69d-fb35da733a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 7fb8b4b0-72ed-4b7e-bb51-059c3f74b938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 beb6ee28-1286-443d-95a7-44044ef6b610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 ff1f4396-5fe0-4076-aff9-ac847827916e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h038D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'h038D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #871 4e117fb4-42d4-42a3-b3a9-8c1cd68f12a0)");
unit.assert_eq16(16'h00FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #871 17271771-6f48-44d4-a95f-930ab965f413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 d95c64c4-573a-4b74-a59d-79dc5f3ef4f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 979a681e-7ef6-48a5-8e0c-66378399cca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 0e0955c1-6a74-4c04-876d-8cf6454ebf23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 d85ef36e-ec00-476b-8d4b-c7a35a7d0faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 e916834f-5a42-4c0e-9968-c0284ade46e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 7418ec64-ff24-471f-ac0b-d24542c3436b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h0CC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #872 7bb1fc77-8a08-482d-8e8d-bbcf63c06178)");
unit.assert_eq16(16'h0D0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #872 b84daeef-25ca-47c9-89f6-0afbb0e38c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 d087e6da-baa7-4803-8c0e-da8187467840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 7d4f1635-f2a5-40ec-a6d6-179c8ae60bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 24da1134-a9df-4151-bd51-17c45ba988bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 1a5ce5bb-475a-4d2e-9ef6-2306431bf638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 3fb7ce46-3930-45a5-9934-e6ff06eb9c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 60e6e5ec-e54b-4d1d-8e95-9e2caaf48c2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0589;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0022;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h0589, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #873 48d4fb97-a2a8-412a-8c24-f53a5a023e66)");
unit.assert_eq16(16'h0022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #873 60d1102f-2d5f-4dc4-b374-efd4659225e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 3c4437fd-17a4-4bcd-bd71-7f8928ea040e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 8313fdac-1dc0-4ed5-b9d3-43bdc4f4f4cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 51ef487a-afa4-4cb7-b8bb-2fd253ecf501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 f6dc82c5-4180-45a5-9f4b-ee4f5e82d015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 185205c6-2b11-472e-883c-ce2b5d0c9922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 75fe5db6-c72f-4bfa-905d-23beb63e9134)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0866;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h0866, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #874 61c4e724-021f-4c9c-944d-c7d4ec3fafe8)");
unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #874 5f494379-6ba6-42b7-878f-810da8bfbd4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 78048379-04de-4d31-8dae-456b621c9591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 b5b94356-abd9-460e-8292-3cb32cda5d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 a88a968b-a5a6-4e45-83c6-0268806682a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 26f80518-1597-4a5d-80cf-63cd511feaf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 ffd981b4-2e6b-42dc-9140-1479b0e0dd18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 697e5488-2321-4e83-b603-adf9c8668d8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0201;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #875 056275d0-2570-4e53-aae2-dfa93388cec7)");
unit.assert_eq16(16'h00DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #875 7085eb81-8e37-4aec-aec4-83718f862dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 b134fbce-f0d4-4ac7-b6b4-201bc81049c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 e194c780-3072-4565-9b5e-b5cda1da95ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 0e417923-2776-403e-bd15-3b9ea18042a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 52720d53-bbf6-4222-8be3-01160367d079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 9ee25fdd-c334-4c89-9e62-123fb17ae6d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 b6d1a4fe-3cc4-460c-91eb-71355aeda99b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0721;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h0721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #876 be363c25-83ae-4b71-87f4-e872c8d458e0)");
unit.assert_eq16(16'h02B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #876 2fbb3759-4af8-445a-8144-aa4148e51f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 7c9edd7b-fc61-45fd-a49a-0e8a87153875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 ced234f3-7c36-456c-a8dc-1c5d2fea1451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 a860b0e2-bcdc-44ca-aadd-d3344ba9eb32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 44c29ab8-6427-4c3a-86d6-caa0fcc630a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 507fc696-1400-4d23-8424-edbfdc9e6e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 f1d72aba-998d-4f0e-abef-c7a9f1be8534)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h0FCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #877 a8097710-6b3a-4a50-a1d2-23e30403ff9a)");
unit.assert_eq16(16'h02FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #877 caf71fd3-36cf-4768-b9e9-ed5975bcabee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 59742e69-141b-421b-abca-e401ab8e8ab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 733a2fbc-0ae1-418b-a06a-b1c9634fd555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 cde0b432-1985-4346-bd9a-faa343ec99e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 6eaef3e5-fec9-47eb-8c86-c5a8e93b9db8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 8cca9a0f-074f-4182-8332-5d6583034467)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 3be3b169-673a-4a62-ba7f-c304e28ecbc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h0D14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #878 9f51af71-5cf4-4ef1-ab08-5bf6c99dbe77)");
unit.assert_eq16(16'h05D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #878 cd8a670a-38b2-4cf1-a1eb-c2c6c3928c80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 56a54c75-07fc-437c-b6e4-1e6dd9fb1b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 364f71ad-c1d5-413e-b04b-53b7df225198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 c6ba26c3-6f80-4638-af17-c2ea80145257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 97faff02-30e6-40cb-b131-5c59e65b01c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 1eaea455-3984-4b17-acfc-2ce1ceafd7c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 c64c9b28-4073-4215-96a5-d5c871f18b98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h0F35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #879 665d7630-6d5f-467e-813d-3fec51c86fe4)");
unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #879 6bcd62ee-28aa-4c2c-9a90-7598c4a944d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 002a6f26-f381-4dd1-8984-0e77e4994970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 43974222-eb86-45e8-bec8-2f823b5c2baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 a4ea5439-9c16-4b8f-87af-d91827688bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 a053f9bc-fbfb-4861-ac58-c27b25cbb5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 48cef87a-9aca-43b1-9e1b-d826d3060b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 dc4f5783-5330-43a7-b918-fad9e09fa90a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h02F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #880 158c4b78-0226-4054-804c-14b86606f494)");
unit.assert_eq16(16'h0C12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #880 ad7e3c1b-3df4-4b7a-a45e-5f39363080f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 8094eb05-6f25-4249-99f4-a63d83748248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 b295cc38-fe5e-4287-adc6-3e39d25e12ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 2a4a5ab6-75bb-4bf4-a41b-c25b60aa9214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 39793ff3-22b7-452d-8a9e-8a03d2bca4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 f68c345a-63c9-4dd6-9e37-8a2d9de0d204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 7bb9e36e-8b0e-447a-8642-1da9417bdf66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0450;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'h0450, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #881 d0f04d86-7a59-4872-a1b2-8a3f728d8cdb)");
unit.assert_eq16(16'h05B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #881 c1aba5ec-c240-4852-88ba-22282c5a078d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 7c10eb0f-9047-4d5b-9acc-4a34ecb68b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 84d4fb7a-0c47-4e0a-b961-412e370922a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 cd4ea327-8407-49ee-979d-7f8a9863fd60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 946feb35-9816-45cd-a5c2-e7add7d8bbd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 a2be2104-d8c2-4706-8b19-f3cf99fe44c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 372934f4-2b61-47ac-abf4-4f0959634767)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'h0887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #882 d570c3df-f17b-44ca-9a84-ea8f4a8aec9d)");
unit.assert_eq16(16'h042B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #882 106c60fa-2442-4f6c-9ccc-54c6bf27fd72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 70cc2524-0d1d-4f08-b348-a80c750882b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 ee6cf491-09ae-4d7c-a1a5-4b6915fe19a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 3c4b088c-a3b2-4a2a-a233-94b1571195db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 d7df3078-0954-4e72-af33-f8744954acbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 9a3f55fe-610f-4ae9-87f4-f1c4e589cb8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 55a8a242-e04b-498a-87c7-e09ee991048f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0456;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h0456, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #883 042f01d0-9d58-4c42-9982-20f8e077ccbe)");
unit.assert_eq16(16'h05F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #883 2226bfd8-1724-4ac7-a132-3c95bc3f617e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 e9ecb8f1-a83c-43b2-ad28-5b02bbf5e942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 9ef9bc97-93ea-46e2-bc74-c2b21e087293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 2cbbde75-108d-4ea8-93df-7055764d2d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 524112f0-bb74-42b0-a93a-27628c4fd6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 65c53abb-35ec-4ba3-867b-ed004b45452a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 6b43fa0e-9e8d-434b-adf1-6e86e2dd6d8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h09F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #884 d7bed9b2-6023-4b28-83c2-2bb7f4394430)");
unit.assert_eq16(16'h0D38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #884 e34adcd4-0317-4940-8c0c-41efe920db14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 9bc87528-e3b7-4156-95da-cefef311262d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 4f04b3ca-17c7-4ecc-9ca5-94c2a2e11552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 5b018e60-8bff-4815-a1f3-d5ed123d541e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 d887182e-55f6-48d0-ada3-bec5f533d291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 8950ec5e-de00-46c3-8ea5-132320b75ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 70720e18-dd5a-4c3c-bf83-eec7313bf5bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0072;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h0072, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #885 d493407d-22b9-4d38-9e6b-3c72e898b559)");
unit.assert_eq16(16'h0CEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #885 aaa52100-c85a-45d9-a8a4-f245715402ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 f3366e8e-5ea5-45a3-a468-378e1c3cbf65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 1ca7bf9c-fc95-45a9-885d-7bea9fe3f0c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 38ac55ae-7f9b-4c01-91b8-29985294c05f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 9af6e89c-49ca-4830-9df3-5396a3b2f44a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 e1aea107-748b-4c6e-ab0e-fb79cc06ee4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 847ddc28-5e80-4dd5-ad7f-3f10308a2152)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0856;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h0F0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #886 ba5a636c-ed81-4413-935a-34cd518d464d)");
unit.assert_eq16(16'h0856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #886 aa980901-ba23-4768-9a24-0f39ee2ee566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 d51dc18b-d132-4b0c-82e9-ad71308c87e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 b6ee715f-2393-4bf5-bad7-b3d59d7e932f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 028092b0-8418-429a-b436-9848db256e36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 7ccfc96d-77b5-454b-bb07-e270b0c69947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 40f23cd3-ccb6-4baa-ac2e-93a4aac6353d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 044a906e-bc5d-488f-9998-96c896343573)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0255;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h01E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #887 d1e9f037-6eaf-415e-8c50-b6f53467c64d)");
unit.assert_eq16(16'h0255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #887 a4c776a6-db8a-4077-8448-14bda8a2f33d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 2b1f8ae1-892c-49c6-a34b-1ae834f53187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 ae488e24-9975-413c-9f75-c7026d95dd01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 f07bee0b-8e94-4019-bfcf-7a6794a502fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 5c6b4d51-e977-44db-9995-3b1aa756180a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 b83f3d59-4e10-41bd-9e92-740a18564178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 6b8c54d1-dbc5-4a50-a9fb-8d2ae39077bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0281;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h063A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h0281, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #888 c7e62db4-f949-419e-9807-71a474f3b80b)");
unit.assert_eq16(16'h063A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #888 90077c71-4304-4744-a96d-36c991b7dc50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 06b5364b-67e3-405d-b986-c2fd648fe988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 d8d9de7f-a5d6-4ea1-b31f-48f287273738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 0d219da7-a642-4b27-8eef-c0258468c879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 8039a7e1-5943-47fb-a11d-16dd4544abf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 3fe1efc3-2568-46f6-bc96-67d1d7bbc1cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 a5f2ec9f-6078-46ab-aef1-6bed4ed331f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0017;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0940;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h0017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #889 705dbe6d-ce3e-4ce0-8b7f-68ca416f4480)");
unit.assert_eq16(16'h0940, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #889 b87b7ae2-72b5-4e64-af99-7043783bf2fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 5847613d-1532-4e2b-90d7-bb41cc0af701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 b07c880e-d9c6-412c-83ef-2a9842b983ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 671a8fa9-ea5c-4ebe-b0ed-a96e6521da61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 e83f63a0-7c12-43fe-b1e1-e8cfd15c52a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 ad08ced1-fc36-4c4d-b4a8-afd95089a96f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 1011c208-3aef-4995-afc7-dde3d726f934)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0320;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h01BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #890 b4a60e7f-1a34-4e94-8c3d-c9571caef227)");
unit.assert_eq16(16'h0320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #890 055dec61-8023-4fda-8f23-bec202d92f71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 d91be826-86c9-4073-ba64-1d5f4c5d3d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 73948f4f-e89e-4ff1-bb57-304e149aa164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 5b351d5f-c934-4c6e-a798-cd72eba9a948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 17a49ea7-63e6-4916-8d60-f609555a8afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 5ae07954-d212-4329-b9a1-493d0422b0a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 280dd2ca-8798-488f-bb56-89bc7d466011)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'h06C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #891 3ce8c6a2-3852-48a2-b166-1e9a151f25be)");
unit.assert_eq16(16'h06CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #891 932b08e0-08a0-47ef-addf-77b0e291be7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 30065499-91a4-4473-887d-643f01a60b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 715ff7a4-e8af-4c0d-8b99-1de665e2dc38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 d9b25cd7-ddab-4cc1-8548-31d9b1d81f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 8a5790b4-15fb-4171-9043-346c0d8e0d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 68cba4ba-c241-4147-a4ae-1fda225a0f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 c6d62cac-685b-4415-bb68-34a14dfb7d31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h038B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h038B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #892 883f2d22-b933-4c0f-b856-63986354dc1e)");
unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #892 9ad210ab-5517-48e2-900b-44158af79943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 8b996df3-4673-4d35-8513-05824f24b384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 445b8014-c366-46fe-9747-9731750667ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 32d85e96-e279-4544-816d-8bb544d16da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 9d261675-388a-4ae5-8475-10ee16c7e924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 fca3b0e5-85a8-47c1-b436-52826226001f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 e679eb0b-24ee-499c-91b3-e23d8f88bba2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h086D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h086D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #893 cb5f87c8-999d-46cf-aeff-715df8028e43)");
unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #893 a1f8e988-ee96-4181-b445-61d1e3ceac6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 85873a6b-8178-4968-bcce-0d8f131d0659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 5b2be654-3b31-480a-ab43-9427efa433f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 dd7c9cf4-44b8-4489-aead-85d0df9b2f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 a86b1a0c-0a17-4f41-9a69-a8d16c1b7b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 27390ec2-833c-44c9-9c23-27161a1aee46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 206a17bd-d218-482e-9924-27d51195325e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'h0AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #894 35c32f90-07ee-4dfe-b91f-7790dc9feeef)");
unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #894 384f9216-6713-43b0-b1c7-f8a65656008a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 1ee61192-1263-4873-b0e7-5d69a0f54818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 700123a8-e42e-4eda-b7a8-5221df1f972c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 98744fe8-1eed-4952-bcbb-e11c7e255b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 754fd44f-eb35-4cad-a204-d6dc895a249c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 73f4285e-b9a7-4f06-94ad-4f8dc604dfbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 c8ce073a-b1b7-481a-8b02-08deaeae8388)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0669;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h0EBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #895 4caacb47-b140-41ec-ab09-d234dbe88579)");
unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #895 2dea8558-3676-4dac-ae93-618638728ad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 53198913-6e7d-41a5-bf8f-9c059a66dc51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 5a23cb07-2ee4-4708-9012-d6cd99206bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 4a64ec34-7bcb-4e51-b200-13b0005d5cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 d73f01e3-752d-4b9a-8f84-4257437e1059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 7b31d5bf-2e16-4004-985a-d155efea2f26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 d6785e72-e410-473c-9e16-b9522927c567)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h0E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #960 7f5a265e-de0c-4b05-aa41-0ed6b434975a)");
unit.assert_eq16(16'h07F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #960 e2b47bab-7f44-4af5-86bb-637391f06b9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 c565f7e9-c2b9-4d84-a278-ee4dc928932c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 2dec5d4c-dfbe-4a76-b3e0-da305f7c9deb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 9fda8c17-124f-4bef-b682-b16214f7a36e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 3c2e501a-7e4f-4033-95a3-d59b4daaa980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 aa1e94a1-6e26-4107-bbfc-43ead1cf118d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 0a13b4d9-8ffe-4ad1-8265-6f3b3b75375c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0936;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h013A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h0936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #961 24ca6f18-01d4-4fb8-8c29-adcc4769b189)");
unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #961 b1c305ca-209d-4938-a4c9-e6d94fcf3ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 33ed3a50-ffbd-4b82-a4dd-d1a786696afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 5055b1b1-79c8-46d9-bde7-3be42e95ae81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 12bf82ab-2072-420a-a515-e0e6a569f807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 4865e638-a431-4496-8ded-0aee969d5d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 68f50aef-53c8-4726-874d-6000fda76f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 843652c6-d299-4c6f-948b-3985ba26f00d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0134;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h07FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #962 e8b6fe79-b28f-4a3c-9ab3-272761793796)");
unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #962 d9f05d4b-9239-4e38-b8ba-c05909e8deac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 d5423417-1cb2-4474-97b8-238273cb7b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 5e9b6f6b-c541-4674-a4eb-510ba6719c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 ae50cac8-5c0e-4a12-aa87-e0be7a6724d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 8476f0de-a298-4f13-8e52-68f91c9f8799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 8642a18d-cd08-4489-b17b-d40d08fcb778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 ac1b09ca-b99f-4b4e-bad3-b6d1a3c16a53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'h0E7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #963 699b0be3-5af1-40a7-9c35-f1b18522bfe8)");
unit.assert_eq16(16'h0B48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #963 8232ebdf-2afb-408c-87d0-cd88e9dc6ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 4aa5e379-f1ee-4267-85f8-6f6433178ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 c5a3c22b-e449-4290-bea7-2ed365e2b5b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 3c4ee8ae-dc27-46f0-b887-8f959749ce24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 be95c43e-e080-4665-9da4-94a145ae9054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 e4cb56a5-f10f-4920-a59e-fd261f733d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 8b232719-560c-43e2-9a17-caf9d11adb2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0859;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'h0859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #964 f9909cb6-0ba6-4280-9846-c41e7b211de1)");
unit.assert_eq16(16'h04C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #964 40e388d9-a84b-4df3-9c60-e96973f72ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 1d4bb6e6-b58d-4b89-8b2d-1792ca1603bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 535a7c11-456a-490e-92a7-80b33c71479e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 f50433da-f46e-463d-99ba-27b23f7ce6a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 a4a56bde-06c0-4c64-ab91-fd2db3f88184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 c338176f-8ba2-433d-8e7c-2408347372af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 9c463cbb-cd4c-47db-bcc5-bf7ad17eb081)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h083F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0070;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h083F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #965 4fda2ef7-1a34-49d8-881d-e5116702866b)");
unit.assert_eq16(16'h0070, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #965 060f5474-ff75-4811-b83d-8d4b4805f7f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 75605c6a-9009-48b4-aa5a-697837d7e326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 682deb70-475d-47ac-99fe-8db719c6cd53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 845d1c00-8345-45ef-ae1e-adaa329759b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 ef1f4830-4bbf-4bbb-b3ad-7c5780b5bd3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 d02168af-3bfa-4665-893c-b5dfca365e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 e63a9368-47ea-4409-a747-d10bb3e3b58c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h07CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #966 f0ed3789-c802-4abb-bde8-c6c3fe966268)");
unit.assert_eq16(16'h00C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #966 24c35e87-82a9-40c8-9d0b-236a214009b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 0085f18e-8f01-4fa5-9943-740460c07108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 896686d7-2cb4-47a5-9d2c-1e8c2e5eed8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 6558366e-af36-4746-a88b-4aa277782d95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 63cb3595-eb42-487f-8094-b44e4e13ec93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 ae1945ea-5f99-4b7a-b0f4-11bac2207a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 a8924638-22a1-45fd-bcc6-931701998cfd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h000B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #967 187d4fa2-07b5-46c1-963c-37dcad8aa50c)");
unit.assert_eq16(16'h0A09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #967 0f194f8c-7470-4171-a865-eb8d83668a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 9b0715ee-d3bc-4ff9-b84c-1f36236fc9bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 b7430b62-4f86-4458-976a-03a5868ca33e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 afa58cb5-7cc8-4559-9027-1c069eb8a1b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 7db03f56-fa4e-4cce-8438-974b86de57c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 2765ce53-91d6-4dbd-9ca5-d923588398b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 e0c1129e-c872-4dad-b595-77a00e5ae431)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h05C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #968 5eb8e04c-5b96-4d6a-bfbd-57284773cdb2)");
unit.assert_eq16(16'h03D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #968 e399c80a-e0b6-4711-ab5b-2bf879b7d5ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 d4aad86e-3a38-4a4c-8a69-1c62f3ce3cbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 51ba3b9a-40a5-47c8-a663-daa66ca61e28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 2838c265-2e19-4f92-b775-531501963aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 aaac7d62-d6f3-4882-b39b-c45f5e289451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 02e38629-c09f-49ec-b961-da63d6e45eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 5d07e2e2-c945-4de8-aa0f-fb44d2b0c674)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0397;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h0397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #969 61a63ecf-d69b-419a-8642-a56f25404e57)");
unit.assert_eq16(16'h090B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #969 3a713299-f348-4090-af7d-ee58e44458a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 1422abf8-ac64-43b3-aa62-af1c2461e2db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 eacde305-acfa-4dd9-829d-3f28ec837cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 2a59c725-bf25-4fba-ab98-f191efac514b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 05c808bb-3e05-4e62-94ca-408b02858cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 1cf3a81e-9132-418b-a2dc-441595486449)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 71ea040b-fa9b-43c0-a69d-f97c8f50d2c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'h0CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #970 0c96a25e-8891-4d2e-b4aa-c3a0f38b9f0b)");
unit.assert_eq16(16'h0B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #970 918d8d2b-6b32-4e11-8cec-1d6444f89dc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 167df280-07b6-49b5-8e63-63b0343fa422)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 eb712f98-7422-424b-9051-14771c45e478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 471126e1-96b0-471f-8886-ffe043e54b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 0e4f3243-ff8b-4de0-a121-ad87178ecbe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 4748ac7a-67cc-4d53-b27c-02f326fa1c62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 f5643352-c6c3-4a51-9fc1-93b4cd6a3a7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #971 d32e0278-0778-4aa0-baac-674553862421)");
unit.assert_eq16(16'h0A72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #971 bd29424c-100c-4ce4-94f7-71610ce3d12b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 5b5b2e6e-b691-4e59-a536-f73816937294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 716e94b1-ca1c-4355-9102-7a319e309de4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 458fbe97-f21a-4b4d-8c52-d3dd1934e9b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 16eec671-edfd-40f8-982a-09e29703562d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 a40ff7e8-02f4-48e0-a403-b72f396deee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 0f29e6f3-32c7-4920-801a-00083c909fe5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h0CDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #972 90ec6141-fcd6-4cbc-9cc9-51aa9fc69248)");
unit.assert_eq16(16'h0AE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #972 b00ff1b8-6c97-48d2-aa87-aeff5ded8f5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 3b0c7119-7e8e-4953-9a23-3408e08716f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 f690adbb-7b60-452e-8f93-97b1d24f92d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 09206112-fb90-4df6-8825-74fabe7226de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 45162fd0-f351-4eb2-8355-d3d10f15f7ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 ef37889d-8caf-4de7-b8d8-6bfbc559f6e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 5263a912-feb4-44a9-9cc3-81617faca1a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0438;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h0438, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #973 82cd77f3-3c7a-4f05-8ac6-2f891b6e228e)");
unit.assert_eq16(16'h08A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #973 a5fdb615-7ace-4a6b-ae50-9607c0858767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 b1598eae-0e65-40a8-9f89-57987fd888f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 a9486c86-7a9c-427c-a788-99fe4736a40e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 d302c060-d1c8-4f5f-a7b6-ed79fc0e9ad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 1c9c2e7f-8762-437b-be71-33939d3c4574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 af612972-3539-4556-84d5-201dffd7c263)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 32cf7425-0939-4b78-b1fa-ce49dbe576cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0332;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'h0332, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #974 dd682c15-ce7f-4672-b4e7-890738a02663)");
unit.assert_eq16(16'h08E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #974 1ca3e316-247e-4ffd-b4be-524733e8560d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 ec835a20-38fa-424f-be19-e708d2f7524a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 8cef1488-a2d9-4749-9798-9f3637d6fc46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 89dd459e-fac5-4faa-95f0-de498c832ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 8e857792-76aa-485a-b441-ea0b9d612d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 4a5d5314-8da1-481e-b358-66afc83ca3e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 835d79fc-8b54-4fe5-a572-3c7baf755dff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'h0B9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #975 20c1a031-b8f2-4d00-b03b-fed55d165d4c)");
unit.assert_eq16(16'h01F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #975 b6939763-44cb-42f8-a059-44f13de15b90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 4856a434-26c5-4a8e-8aa1-4c7725c0b10d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 21778cb0-159e-4eaf-b1aa-de65976472e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 4c66121e-5866-4180-9585-ffd9961cc05d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 378f2f42-ca5a-48ec-8ccc-ffc71270b20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 425210f3-071d-432e-9e01-72a3d2b47f78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 8f46c15f-fcf7-4c80-bdd5-9f88de8a5709)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'h02AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #976 77c3cb33-cb72-4b39-9a40-bdffb97db149)");
unit.assert_eq16(16'h05CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #976 dc2ca02e-dc25-41d1-9ed0-521fa3e55c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 68c8420d-f892-4ea7-a5b0-6f3cdb5bbbde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 9cb5786b-b2eb-480b-94b1-a572d74713a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 68ca9b7f-49fc-4dd4-a31f-5fb0417eec44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 4c5070a5-88e2-401a-b9fe-8f5c8f09070c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 955aece7-d6a4-4f40-a9f7-663f1b91ac68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 14c1e63f-5d1a-4537-994a-2ef564997e21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'h0AAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #977 68c54631-d290-4bc2-84c0-8ab9c86fa61d)");
unit.assert_eq16(16'h00BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #977 ea74e028-65d7-4074-95a0-e9de904d1254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 ebc3bac9-7827-4055-95e0-5e3d8f555674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 8a9f4be2-0d83-41b9-abcf-cd55b9186481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 6e782e2a-ab47-445e-b11b-f9c80ee2c71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 3da54926-ac63-402f-a67f-8026577c840a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 4734f0e7-2e30-49b5-aef2-5c05d5cf6355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 7b8ba82a-3e99-45f4-9210-0c81ddcbd30b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0886;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'h04EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #978 05b7f536-bee9-4256-bc9b-0c010a088326)");
unit.assert_eq16(16'h0886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #978 2decdc88-424e-4d64-807a-8985ade96733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 67ce8f44-8492-40be-8e14-403ba94ae140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 072ba636-6eec-444e-a5b7-d510ac04577e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 52ccc14c-fc8b-4dc1-a32c-1cb2c703603b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 16baffe3-a699-4805-a630-d1bbcb524121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 55f5cd99-427c-4675-afcd-64961efa397e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 c9c6b39a-cfe8-4c41-a972-c179ff4bf649)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'h0CFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #979 24d45c29-0dd6-4279-b1e8-ed3f4098facc)");
unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #979 0c49b7f9-042e-4585-ad53-086ced37dadf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 a86acbfd-2eeb-471e-b839-6e30e92f4be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 42ad564d-7649-422d-859e-eba24fc9afdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 992f27e5-e2d1-42d1-9909-97f2b8e64696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 aa23a917-697b-42b4-b10a-77c04004635a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 b7e8b2b3-7f25-46a0-8446-8e87d3388f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 01d67a19-ec54-4d06-af66-e2c8f430ef07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0497;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h09B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #980 12f29d25-f547-4a64-a0ee-b156600491d2)");
unit.assert_eq16(16'h0497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #980 51bbf043-9d50-47d2-b196-3c333c661947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 2cca7ef2-5b22-412f-988b-5f050287334f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 1133a737-1240-4e3c-951f-ca534b8d4145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 ca467ea6-fd6b-4a60-a9d6-bb580c343714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 0a635abc-796e-40d6-b2b3-728240f4b9f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 c758f835-22f9-4c95-975f-8e889d9c0b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 6a6032fc-0e27-4684-8b90-86a96eb1347b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0276;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0991;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h0276, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #981 ea78617a-57ad-4dc0-8a1c-ecdcbe9ce4da)");
unit.assert_eq16(16'h0991, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #981 a4d25162-6501-41e3-bdc7-ed44fc306cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 ed996600-1d3a-4199-b52e-ebdd56b0772c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 a72ea73b-9797-46b2-8c93-a06c13794593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 c1353cdb-b432-4d05-bedd-3e4f7b0a6988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 931bbb2b-d955-4b48-9dba-40e8da10c2ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 b686ecfc-c30e-4050-b1b3-6346e7123c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 07bb0fd4-8b40-413e-bbf2-195dfe99d84e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h056D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h0DB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #982 4ec75015-b821-450c-8a2c-28dab41be10b)");
unit.assert_eq16(16'h056D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #982 97478c26-04fb-4a5c-ba1a-f6417a7fe766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 a3bc4982-746b-4973-859a-5395c14e2120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 e07f43a4-1c38-452a-b4a5-1375ecb7b94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 9a9339d8-3836-43fe-8944-98dc0c1004d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 b37dbc78-a293-442e-9381-c7c1168e6532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 24f8f056-c532-4105-9ffe-996587a61b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 00d5b549-6600-474a-aacb-54f404603200)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h054F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0865;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h054F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #983 21e7668b-b38f-42b4-b6c3-7217c5a9dcea)");
unit.assert_eq16(16'h0865, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #983 8891233b-ba33-445f-a3bd-89513120e901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 bd243c5c-4d1d-485f-bc6a-70eae8194fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 181226de-e361-4b56-9109-c696e69a2d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 6ac426a3-a37a-46ef-b669-2013f8d44e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 a4b3aa9c-2c0f-4e32-8ace-e9bf70629c0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 eadf86ab-d2d1-43d3-a997-5ec606673446)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 b7686c19-6cc4-4499-9ee3-16d29c8f0582)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h06BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #984 d877185e-5e85-4159-9361-ba79921f54e9)");
unit.assert_eq16(16'h09A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #984 88b6a5d6-2175-45b8-a681-11aadb799b2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 b65b75b4-4be8-4135-a0da-3d517d9e40a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 9bcda8ad-ed29-4b62-8b74-c151c9ea4250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 dc24b090-34fe-4718-89f6-7000cc3d9b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 3aabdb09-175d-4d30-8ca5-10f0ef15b468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 7d6b7bad-c300-4c8e-ad1a-f2217cfebaff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 c98b630a-b978-4b2f-900b-642234185bb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h0D63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #985 b0fafaa6-46f7-4c2e-a00d-ecda68a74331)");
unit.assert_eq16(16'h0D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #985 e8cc81f8-ed91-4120-8c39-5e905886075c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 8252be64-4fb1-4f25-9988-3f860c6b7796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 154fd6a5-8f55-498b-9dad-a63ebf65c3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 d552f10c-6b8d-43f8-aa2e-25a460bbb45d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 559daf8a-b077-4ff2-a7d0-966757465750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 7d391743-7c8e-4ccf-8272-17a6bec77027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 73db734d-c4c5-421d-939a-16a823be2fe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0036;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h0036, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #986 e619db8c-a8db-4c63-954c-cb09c5ba5772)");
unit.assert_eq16(16'h0CE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #986 676fab43-50b6-49e4-8dff-f2e21c79f6fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 82d061f9-cd60-4924-9e86-1f5ee5b66471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 52eda4bd-00af-4469-bc50-4c708f4c104c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 38d461b4-e6f5-4d3c-bbcf-dd3e3deee526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 9a22c014-adf1-4804-ae43-27cafb255055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 0211c839-093e-492c-b100-86cc4d0a7749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 b4009dda-e3ee-436a-a74e-125a3a488028)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h061D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h0A77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #987 74323586-a1a4-4832-b764-99e7f6dfe4aa)");
unit.assert_eq16(16'h061D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #987 a292815e-320c-40a3-a5c0-0004375e9a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 9d584fe9-1e66-47b2-a721-c9de14dba031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 dd05b035-5bca-499b-8d0a-c06fb43fef97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 06472757-cac3-4508-a6c8-1c8d165d9ae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 250e853a-0d08-4849-baf2-22a5d10f6746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 58aa0681-2e2d-48ff-be68-1342f2c9730b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 67571a11-a8c1-4d69-a081-b53ebd93bece)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h05C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #988 2b8c0d41-cc7a-4cc8-a1fe-445584253caa)");
unit.assert_eq16(16'h0DC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #988 9edfe50b-a54e-455b-a5b9-af046c36a977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 fa68ac6b-7194-48e5-9411-6ec9890a97a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 2832205e-85e1-445f-aedb-f318f04febab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 d775ef46-e510-4db1-9ec4-62e6227c2832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 40979346-cec4-4e40-aa17-576f2931f75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 88f7e0ec-cd48-4a71-8cf9-60ae9b0559fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 8dcf578e-c9f6-45be-83ca-9328c9872390)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h0A62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #989 66f610be-40a6-4a4b-bcf1-6b359f5b089c)");
unit.assert_eq16(16'h04EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #989 fc4d47b6-69cd-4a01-83b3-f3525ab9b53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 3e486241-102b-49bb-bcaa-c5f8bc19a48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 8a489a60-ce9a-495e-b352-30e7ee03cb88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 2b4cc863-a11f-448b-abd7-00af927a26e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 daa399cc-9fe6-411a-9f55-46fece370231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 d0d0e0c6-c534-401b-94bd-ccfbfefaf38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 cf54187d-31eb-4f06-86bf-8c2824972fb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0489;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h0489, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #990 29591b73-ddfc-49b2-9f16-9ce78da3c378)");
unit.assert_eq16(16'h01DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #990 298ca234-ac58-4f35-9491-f3648281f870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 fbd8b0b5-e5d0-47bc-a219-182f714b1af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 ffbfb338-8fe6-452b-b817-6e020b757212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 83ffcc0e-eda1-485e-8276-ab04aa2d88a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 1d8738d8-21fa-4ade-93db-e3540786b2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 97e6a84b-f663-492d-bb6c-b00c1e4817da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 2a19dc28-c192-4cad-99a1-1dadb4f3e7b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0811;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'h03F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #991 331b234f-e695-4aed-b331-a378382ae39b)");
unit.assert_eq16(16'h0811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #991 b73e1a33-1a88-4fb8-977c-f5636d42ff84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 780839dc-b514-493f-9946-ff3e4ec910b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 d3660a78-17e5-4410-9e8a-bb0a77ca512d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 e8f0cfbf-6fe7-414c-bf78-dd836b29c735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 11c1f3c0-31b8-426e-92ce-e80f40f8cebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 547abf34-d5b5-404c-8d72-454eac8c8759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 34ddb96d-6ffc-4390-a477-1f75e876b627)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h074F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'h09BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #992 df702ae5-13a4-46f4-9196-a906abcc3122)");
unit.assert_eq16(16'h074F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #992 1df45a6f-785a-49c2-b8ee-08b132f7883d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 c2a2f187-74ff-4aa3-9078-fcec94fab3ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 7c704f27-38ef-40f3-8f6d-22e09ed90e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 d8c65e45-633e-454d-af09-40d85bb2d5b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 fdc11779-abdb-4a76-8dac-cfef5e4754fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 525c59d7-2374-4adf-9845-f3754097215d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 b9e8f105-9845-4646-ab4f-107b2a069ca0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0297;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #993 a6b073db-63d6-46d6-98e5-5fbbbf831f3c)");
unit.assert_eq16(16'h0297, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #993 ae4e0230-8cbc-4f0f-96b8-766e44eb4757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 e52f6c1b-c935-414f-b60b-6d2bb32aeead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 858656da-a9fd-4fb5-8213-236359d6909e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 037fb80c-8374-4926-a0c9-3052c8dac2db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 fb93ee37-c692-43b0-88e7-32d58cf2d3b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 a7612a5f-68fd-4c78-a77b-0f12b3e2a0cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 752d909c-550f-48aa-8c13-8a31aeb9082d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0564;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h0564, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #994 78d844b2-2b3d-4afa-9a11-d1fb3f521d7f)");
unit.assert_eq16(16'h0AF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #994 a64fd458-06d7-4e77-9abe-3fbee36bedde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 284ef56a-5cf0-4e59-88b3-1f80b1e72362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 aeff81ff-cdd8-479a-a08f-825b540cc6bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 8a39ab29-8d68-4f26-b2b0-fb360c931bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 3df41e63-7cb6-4101-a5ff-c293608fb3ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 59f4335d-6b03-4438-917b-70bf096be437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 226c6789-7c54-4f3c-a8ad-05e1bd4c6295)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h080D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #995 ad89a412-be67-418f-ac9c-d698daad97d9)");
unit.assert_eq16(16'h080D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #995 0dd9836b-1e02-4dd1-8dfc-51bdd88c1fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 e3f15fac-cd5c-4a3a-b76c-941882e69c82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 62160cfa-cb77-4ba1-8f78-1cf31c1909c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 823b4f26-3161-40dd-92ef-b3aba192cd83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 d4196022-8a35-4df2-ba09-9e5e50d611e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 4bb6cc0d-d4a9-4860-8457-3af1e4ef5ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 13bd5f3f-0650-48ae-8a36-637776a18d6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0063;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h0F09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #996 0a420268-3993-407a-9845-0e607b1fdb75)");
unit.assert_eq16(16'h0063, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #996 f9c3ebc2-697d-47dc-a2f8-3d750811ffbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 47698340-f28d-4f5c-8944-4fa9c6459686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 a64ce511-7085-4366-a756-3d9788484705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 6967a530-b8b3-4b37-933d-ea47f60f1654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 cd246361-086f-4863-90ae-5632072b99e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 0bfc3c7a-babf-4512-b1db-a3b9e8506bd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 67ae06fe-2730-4122-868a-4ce79bce0ab5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0499;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h0FFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #997 fe877833-48d0-4c1f-872b-76f1cf2298e2)");
unit.assert_eq16(16'h0499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #997 d1d4129c-7bdc-4599-9f13-dfccf56d4ba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 fbd32b47-c07d-4e80-9949-6b0a205c1fe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 8596a815-9b36-4981-b34f-c4541306afb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 1d030519-0110-4d9d-9cb7-27cc00d211a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 fd955a25-674c-4422-8f00-5c63e30c061a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 149de16d-7f4f-40fd-bec0-c5e7594e0132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 a95bc144-f351-4008-8788-f1a442ebf67a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h0BA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #998 2f6e7ab3-f83d-4937-be48-00aac7ad00be)");
unit.assert_eq16(16'h0729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #998 d8837936-96d1-4780-9cfc-76ac691a9ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 81faab21-ec57-4565-a8fb-0d44be68aeb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 3a54e5fe-4dae-4d97-b060-2a3ea6d9ef2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 683ec5ab-7d2d-4b49-a370-a32c64b872b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 20cc3cc5-d233-49ec-92f0-0f3b45feee8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 413b16ba-f242-486a-a8df-17442192725e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 4d8d244f-e4c7-4880-8d69-cb9f29621881)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h0E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #999 11b9185d-62f2-49d5-a90b-a052669d592e)");
unit.assert_eq16(16'h0D82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #999 ad55ccd4-bcc0-4e17-9a23-c7c398416b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 0898898a-83a1-4985-ae73-4007331b030d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 2452d754-506d-4237-8fa9-72a37771939b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 e19917d4-826b-426a-b52e-7c80a85558b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 f7567a89-ee63-4c23-80be-199263c582ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 03e2d663-21e6-471a-9521-cbca72298697)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 6a5801da-781f-45ef-8b9c-abbc77bb884d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h03E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1000 4d4aa261-d38a-4ac8-a8ee-11b85179e333)");
unit.assert_eq16(16'h0D5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1000 e78631e6-fa1e-4845-8584-1deb95509bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 401ac186-a593-49b4-a2c9-739ae91729a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 c82d986e-fe5d-4402-bbde-a5f9662b3cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 0a1e7ef3-efa8-41d5-bfa9-39b9fd8220fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 b499c098-4d8d-47ee-8d8a-b3dd133a3295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 f6ebaef3-7bf1-4006-b86a-26bd9f615a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 b7efd317-f698-4e71-b564-b8dc28d24a7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h0BC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1001 eb05b4fd-1e48-4288-9f60-db5565574ace)");
unit.assert_eq16(16'h08E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1001 bb83e8b8-d4d9-43a9-b51c-e13ae1efdd85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 f2779241-278d-485e-8499-b4ec93ed751b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 a9bf1828-32f3-4790-9d04-c3d1db6683c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 8086c2e7-4ddb-4bf6-9eed-a8056c7300df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 c1079935-5ba7-4bf1-a293-b8ec74fec6e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 b5dca920-cb06-45e9-ac2b-da586edf4c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 a6fefc91-63b2-442d-a748-ba0427c7ff10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h092A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h092A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1002 c051265c-00cc-4c2a-818d-f59b6ef89af2)");
unit.assert_eq16(16'h0EEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1002 d908b1cd-4848-4874-afb1-854be100e361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 23bb6b85-2149-4d8d-afb4-4e91fe9aeb7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 2fbc2695-93ab-49aa-99f8-e389974b626a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 73a1a919-a9e3-487e-9eb5-e9822fb2c987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 c1f3aaa3-3693-4229-b200-fe413c679b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 99ed8137-6805-4987-abb7-30d5359918b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 3f94a742-2aba-4e23-845e-f3eeebb77aac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0546;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h0F5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1003 f34ce269-db9d-4201-a1a0-7910b00d0a8a)");
unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1003 4434231c-1bc3-41f9-816c-cfcc1b883a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 9386f3d0-82bd-4e0d-a4fe-2115c584bf8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 8fd27183-d00b-43b2-bd9e-a99de390bdd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 f904a026-e7b7-41ec-a18e-3592bf94f8ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 b6c40966-0880-426c-b260-865681839ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 da962db0-2480-499f-ac9e-45a3405d6a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 5ce8f79b-8479-4681-a42e-822019f4e2c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h0BC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1004 dad521c6-6302-49e8-954d-69c0b5886966)");
unit.assert_eq16(16'h0529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1004 cbb0a2ed-dd63-4030-8890-b21f30ed84af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 5cfbb2fe-49f7-4149-ac00-8855dfd63400)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 0da294de-a724-498a-9e28-f1a039dd1118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 6d3ea6f1-df67-4500-89f5-fad154db9049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 36b9e9b5-2458-490e-8863-c0d027edb364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 d2269e10-bfbb-456c-a6c3-786af7fb0f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 100c7d3a-4f2f-4636-9c2a-cca74620951f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0398;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h0B51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1005 6f415f18-c646-453b-8912-dccac86ab52b)");
unit.assert_eq16(16'h0398, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1005 c1687d0d-47a7-4eae-97af-46da3b120708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 0331274b-0ce3-4324-bd28-ba187ca60f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 4c7946f9-0694-4f4e-8a07-1b008af1459d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 914c4b83-ba32-4390-9543-7b1b81a75e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 8df655e4-5e39-4799-9ddb-eb9714555f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 254a6c1f-923e-42b9-95bc-0de58a81332e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 231e00fd-786b-4d11-b95d-d6f3de734010)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h0AF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1006 94223fcd-c41d-48f2-8114-fa18f16a3c15)");
unit.assert_eq16(16'h0CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1006 13a8d8c1-cf67-435f-8cef-e4de14647713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 6998de27-1fd4-4d7e-ae5a-f8481b84579d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 222ef6fb-90f1-4671-9ab9-7b14ee04b542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 fdc007cc-1870-40d1-9487-e3c00f5d7cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 bbc83b69-5e85-4070-bb55-51d6ed736c22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 098f0ea5-8cc5-4e3b-81a4-7494bee052f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 6d54a6ae-e1fd-412e-b0cd-7b958c3dc60a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0315;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h0315, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1007 10b34ddf-3a7b-4182-bc1b-3771ae76e440)");
unit.assert_eq16(16'h0CFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1007 3fdb8364-2c7b-4bc1-b362-9f473cae182c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 75ecd434-dbcb-4c21-b058-592e2aa4e347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 19923108-1375-47a1-bde1-89a85b35d50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 bed327eb-9182-4393-aa1d-38f28d16e46d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 8aa459e2-58af-4881-acef-bbce8e387a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 7eec42a3-0bd4-4ee9-b018-1e2f12acf9f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 bcacb94d-7718-4671-a6e0-150319851223)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0810;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0747;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h0810, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1008 11e53af6-7aef-47d3-87e8-050beadb72e2)");
unit.assert_eq16(16'h0747, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1008 6f7f56fb-4a19-4ca4-a3eb-41b65e797ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 f0d3bc8b-d959-4637-9779-7139f3d980d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 a43494b7-d1e9-474e-b3c3-2a5da7d2ebe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 9df84d70-2cdd-41eb-bb81-b4813427640f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 4dd6f02b-c118-41fe-a238-119cdc8f5812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 6e8edf7c-4a83-473e-83a7-2038bac3a76c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 5e9c3cca-f026-46e1-ada1-5d68bc1e66fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h073E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0220;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h073E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1009 e4b1e4f4-b65f-43bc-afab-d9a65130ad69)");
unit.assert_eq16(16'h0220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1009 122fc272-9b99-497e-89cb-e263e4ddebea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 b95d1bcc-0471-4d36-be5e-8af561e3cf7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 2d98e216-1ac4-4a66-affe-b4e65a191234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 1c44d269-0c47-4c57-bec0-ba27e775f57d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 26bc3230-4481-4418-8234-cf8facdef7d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 f1c21925-a773-40ea-97ca-f48ed34d558c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 b332c327-2722-49d3-a2ff-db743dd379bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h099A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h099A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1010 9caf9541-6b39-4d47-b381-e8550599af03)");
unit.assert_eq16(16'h090D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1010 a3b6878f-79d1-4bcb-90fa-67630c1f3a48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 56950352-dd6e-42a7-86a1-404c08b55723)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 07b3f4fa-6a58-4a6a-862f-180afe50da4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 3868231a-52bb-424a-9210-bb365d34f384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 5e59bed6-69e7-4600-aa54-ea85b2c2e7d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 800d421c-8d21-4945-851d-e764e019d711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 6bc10ba8-13c3-4662-9a5e-eff37dc6217b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h078A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0558;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h078A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1011 951d1a5e-38ee-4cb7-93b5-18c226ce1aa2)");
unit.assert_eq16(16'h0558, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1011 16269bcc-a1b9-435b-a4b2-62ad8cfee102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 1ff78c66-1ee2-406b-ba84-9624c8738abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 8d142da7-1537-4527-858f-eedf3b088eeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 6988d4ac-6393-4cc0-98f4-cc326adb83be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 9c30a82e-3025-4593-869e-eb3aca1d86cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 50657156-b219-4f4f-9a11-c77de48073b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 b466f17b-2acd-49bf-89b5-e904ed98b919)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h0F8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1012 05316ef6-102f-49e2-ab87-2fac6412fa1e)");
unit.assert_eq16(16'h0BE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1012 46837e5d-5d96-4065-9935-127720e8999d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 ffea8b26-8fde-4b58-a266-6af7cb1c4ac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 85c5f621-de3d-432b-8872-3bdce254ffd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 6c67be1e-0fae-4971-8235-56568a753215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 08d08823-8aad-41bf-9d0d-f2d41e5b5e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 09098d2f-1f3d-4db0-bc20-330282b99216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 8cbe83c7-c047-4eef-8d5e-0bd498276ecc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h061A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h061A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1013 37c9753a-2710-4cfe-80eb-de6a3ae4c23a)");
unit.assert_eq16(16'h0F2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1013 0dd3a43e-7830-4cf9-9055-1309f54ea699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 eca0603c-5046-446f-a94a-6768d383e3e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 b95a703d-667f-4a57-adda-d36147d279ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 1c0fb677-270d-4bca-ac6c-fb64fac3ccb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 3343c36d-1cac-419d-b2ee-170b4c9a0ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 aa94cb6c-6caf-4545-9df5-67a18ddd4ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 5d465081-89e7-498f-b72c-91a6fe4cde1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0393;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h06DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1014 f2c5c57f-b100-40a4-b917-2559dd78025e)");
unit.assert_eq16(16'h0393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1014 9dde8df5-3c0a-47cc-bf04-1b43e53227fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 060e3000-817c-418b-a118-c54487ffa33d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 4df36b35-8f14-4556-93f3-79d9312209b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 215c841c-71fe-426f-8655-bcdf931256a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 be7ca1cc-6f88-41d0-b4fa-adb6e7a7caad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 ad19a83d-68d6-4a8c-ab1d-62ca1e67d94a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 8aa44c5d-5355-49e4-a2d1-db822b22a033)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h055F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h0FB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1015 21ae63f0-4819-4916-89a8-634f1028019b)");
unit.assert_eq16(16'h055F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1015 bcc948a1-579b-4e42-afdb-a0fb03f0c8ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 fb4d6966-1ae7-4967-bfdc-44e13d0635e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 8d6be283-ac0a-4f7c-a677-6fda7f7a96b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 11f59814-ee49-4c58-8866-28a251ae4a3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 a8d22672-dcc3-49be-9f19-444829a1e511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 18091910-09e2-45dd-934a-2d8f2f55a008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 d1b4545a-6c6f-4101-b4fe-7e6e69810062)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0124;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0761;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h0124, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1016 aef4a674-1350-415b-b71c-a01eaa3e6af6)");
unit.assert_eq16(16'h0761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1016 c98e4240-4138-43e1-94ce-ec22530554c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 8ff9d5d4-d92b-46b6-ab53-09ffafb937da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 1f908781-8631-4ae8-9a0e-a50256d68594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 d51fee22-111d-477c-acb2-da18e9a2ba74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 c3d45264-479e-4406-878b-3f609de2545d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 c8339738-417f-4187-adef-3c34a2e9cf38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 a78f4f40-996f-405b-93ef-a42ae47dd51b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h04AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1017 fbf532ef-d8ee-4b73-a308-0f279bf0578a)");
unit.assert_eq16(16'h0EC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1017 f5d1c0db-017a-48b0-a62a-7f09d578e538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 c5b0ae04-011b-4280-b68a-8d5117af8545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 6af06781-c06b-4d6b-9360-28b11764ccd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 79ed9473-ea14-4988-a64b-e0e3c5537228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 d423e2b0-980b-4aa1-ae70-6458b94e2456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 08f1a054-4f5b-429c-a5c9-d9ec285ab48e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 8dc562c4-e2fd-4ddd-b6f1-b9c0ef1583a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h06B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1018 1fc011ce-617a-4141-bc19-28537b830816)");
unit.assert_eq16(16'h05B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1018 4dfd9341-1ffe-4e9a-8574-07f3e90f5689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 c4bd573c-527a-48c0-917c-10f88caffd10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 f0f0b413-cccc-4cf8-a46d-ce47d19049ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 93d2c9d3-3506-46d6-a33e-6dd4880ae621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 bbf2eb8f-da49-4830-9788-42a8c8492793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 5b78c29b-cf05-4825-b57f-3e47c83a4b75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 88f08ffa-77d3-45ee-a6b6-5b0b52d8e61e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0374;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h0FB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1019 a6ee5f1f-246c-4f19-b334-3aa09aab80ee)");
unit.assert_eq16(16'h0374, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1019 6570dd46-21b6-463f-b962-abfab9bf5e0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 b9522e1f-ea5f-430a-a4c4-952bfe56bed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 c5a03210-2e0e-4bff-9304-bd34f8796c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 09e59cba-d29c-4b14-81bf-036017ce5133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 58e4cc46-399e-4eea-91dc-839a6b57b4f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 5f124702-5568-4c74-a437-27da3c4d1f35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 e405075a-86f6-49ae-9fc2-720cfc3e999f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h0BFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1020 c0e9fcd4-57bb-46dd-ad27-a16461dfc604)");
unit.assert_eq16(16'h0D36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1020 cbe02073-ce40-4f13-9c8c-4003fd6340b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 dfcf12dd-5038-44ec-8290-3263dd215f33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 5fa2fa67-f775-4793-8d27-3145ce80646a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 fea008e0-04d4-4f9a-87c9-08ce70b89631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 bf12097f-3625-4ccd-8bad-7723793d1f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 b2d58047-e1ff-4c2c-9241-08445080752a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 8f036fe7-d510-44d7-a34f-32d60c0e7e90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0131;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0573;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'h0131, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1021 bf95fe76-da97-4bb6-a85f-70e3f62280f4)");
unit.assert_eq16(16'h0573, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1021 165cd28f-0db7-4a5b-9c98-c107f5cd6cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 de3c1fcb-40ff-404e-9c3a-87bd89ab3731)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 b011bb73-80db-4b30-bcea-1997e351b603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 274c22db-b7b8-40fe-8724-1f844d94c387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 f00009b5-f7bc-44c8-a86a-40702d79ed4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 49405bdb-02a6-4ea1-ad21-2970b5428089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 53d7f4d6-b8b0-4982-8dd3-74fe6f636b48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h000C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h04B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1022 db20024c-8ec6-4f67-adc0-08eed35c96e8)");
unit.assert_eq16(16'h000C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1022 5716c3f4-ebe0-4685-88d0-f6252df58e67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 c8fa62f1-86b9-4b87-ae88-8a2a0239c114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 bd33abe6-a3ab-4bfc-8c36-0aa6f044a2a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 602dfb71-b9cf-441f-85f3-fa14667dfbe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 a9d4c563-98dc-450e-9a23-a3b227ae978c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 d6fd6783-2cbd-45b2-97db-f1472dcf0f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 77d2ef08-826d-4a13-83cf-51bd2f95c9aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'h0B4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1023 a1477533-518c-45cb-a8c9-434b1b8d11a3)");
unit.assert_eq16(16'h08CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1023 87d9ac69-ea8a-495a-b099-da15d284975d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 a7386e83-2bf7-446d-a662-da8545e1d162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 5d9b530f-1148-4246-837a-0be35d7bb902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 017a084b-0ede-418b-8eb0-c954f192f4f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 245c31e3-cd02-4044-b95a-198663eacd76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 a6114f68-62bb-4b25-a07f-b8825a285836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 ef92daed-ca06-4cb6-b445-da4bc28a78e3)");

#(CLKPERIOD / 4);

unit.finish("ld8ixiy ('LD r,((IX|IY) + d)')");
