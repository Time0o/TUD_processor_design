unit.start("ld16popqq ('POP qq')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAC37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3B12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0584;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #0 7e6ea002-01e2-49a5-9980-f9c7dc08b189)");
unit.assert_eq16(16'h5F71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #0 cd4c6136-9a3f-4af1-a692-eacf7031d9eb)");
unit.assert_eq16(16'h3B12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #0 8a1b5e83-1dfb-4044-9c71-0b34439026c7)");
unit.assert_eq16(16'h1B06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #0 96e87fe0-33e2-4638-84ac-b29ed4d19a94)");
unit.assert_eq16(16'h0586, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #0 bab04765-ee08-4fa6-99b8-b37cca6524a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 2d622b97-c871-4203-ae73-7f068c82f859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 d19fb5ee-6579-42f4-83ea-524504acbba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 67f22fa1-a4ac-4d32-a28c-f5c091c67dd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 c3e8b1b4-0bf5-4086-a9ce-5ec4988c3867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 24a89747-3ae5-478d-b170-8856f48c2c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 2b870014-9bbf-4025-b0cb-20aa0c101ff5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFBA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5950;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC93B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1 16bceaf8-a2de-434b-82ce-70fd0a558b9b)");
unit.assert_eq16(16'h7032, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1 b02f99c6-4b8a-4489-8f32-b2448c8ceaef)");
unit.assert_eq16(16'h5950, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1 8138d4fb-e985-4245-8d3a-0ce7c799225a)");
unit.assert_eq16(16'hC93B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1 daaf95b4-7fd5-4ac7-b342-181dc0c4aebd)");
unit.assert_eq16(16'h04E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1 891e1190-dc96-4c56-a94d-1d4eeac4c9bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 309d9531-e784-40bf-aecc-c6a5cd8a2f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 cd6460c6-4380-4cb0-8eb6-de36af1fd27d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 4b4129e1-9983-48b6-b099-56e7c8ab225b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 0ec29353-f47d-4c91-8993-dbdd8f52b5ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 15f0147c-7b86-4ecf-989f-232d56e3cded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 5e272461-bc41-4cee-bb23-d5eb37497fa4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5EB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h455F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #2 17ac9397-1ff2-4890-b8a7-3f8ccbcdf274)");
unit.assert_eq16(16'hD063, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #2 dcfb3430-4954-45c0-ae6a-d0152fb7c206)");
unit.assert_eq16(16'hFA91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #2 135f319c-dba2-4d42-93be-8bda3da3f451)");
unit.assert_eq16(16'h455F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #2 0aa3d947-e259-4bd4-8fbc-37b4e2b52eb9)");
unit.assert_eq16(16'h07F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2 3045064a-6d30-4f3b-972e-8b8fa9eb1995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 60a9b986-096f-4fc8-bf98-33a0eeff64be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 c400241b-5f17-431b-b675-41b83ed40b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 123f84e5-8538-4fa3-ad2c-f075728b9968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 4487b292-fa04-4dcf-af37-0dae5057e338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 06640376-9169-4127-a570-5dc5f92ad921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 7280f12a-b83b-4025-b280-057c00bbb918)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h157E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB37D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7315;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #3 95a974bb-103e-4263-88f6-b59cbae350b4)");
unit.assert_eq16(16'h498D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #3 a3a75777-26b2-46a4-8466-bb6c25ff06c9)");
unit.assert_eq16(16'hB37D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #3 5570a327-6c20-4d2c-afb6-c663c2f0b634)");
unit.assert_eq16(16'h7315, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #3 da894753-9e0e-43e2-a30c-06b0da54d3fa)");
unit.assert_eq16(16'h09AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #3 d69a9a4b-737a-48da-80e6-09300ab9c351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 a3beb454-9d78-4d55-b6fb-4935b6ac699c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 ad4100a8-5a95-4007-80a6-9d8a17241f2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 d3a4bf87-1f78-4d8e-b91a-b2da14949b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 1d3a2e52-0ac8-4c83-a4b5-6dd98cb98a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 ddd13f4b-922b-436f-a120-135ea05f1c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 d770274e-71e4-49c0-9b10-4ba1ce8c71a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1DB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h689D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #4 d1cfdd96-a6b1-47c0-9cb4-ecb17558cd92)");
unit.assert_eq16(16'h41A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #4 87c0add5-e406-4c4d-a277-2ec95aa9bb24)");
unit.assert_eq16(16'h8F62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #4 ea8ccc1f-9470-4675-aca9-d2b7830dced5)");
unit.assert_eq16(16'h689D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #4 eb11d50a-cdb4-4f72-a10b-17d649093f60)");
unit.assert_eq16(16'h0E5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #4 f0072eaf-b335-4686-8b13-94ae549cae49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 fcc77a30-562d-4d23-81b2-5a589facc2d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 74f064ad-031d-4554-9f72-3fa3e7c861a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 11e70a30-1c95-46e7-a07b-586a8f076d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 21fa6ff1-da1a-48de-9310-513d3debca40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 00fb93ec-49c6-4ed1-b050-bbbbaf0c436b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 88102ac7-4b26-4760-b3ad-3e76095eafe5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h63CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3DED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h43CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #5 fb1191ee-a53f-42e8-9d92-defc73c6754c)");
unit.assert_eq16(16'hACCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #5 71486ed2-25f8-4c08-b992-5d14ec25387d)");
unit.assert_eq16(16'h3DED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #5 575cfca8-5ccd-42db-91b6-dd843dca6464)");
unit.assert_eq16(16'h43CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #5 d76d65b8-bcfd-49ea-a2c6-162af8da06cd)");
unit.assert_eq16(16'h0613, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #5 15f7ddad-fba6-4784-9add-2418543f9cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 112bfeec-fcc4-4544-a9a2-6291ad4fcfe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 3235579c-553f-452b-92f4-786e69b518e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 46bb5767-194a-462d-89dc-351ba4daae5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 ef2d5143-c4c3-43f4-98d9-dd9320117f44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 23cd2789-46aa-49cd-bb38-307cffeeff3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 9be29be4-94c3-43d9-a115-d18ae44976fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h11D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h13D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h174E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0113;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #6 3a292dc5-aeb8-4767-bb00-e1c03d938631)");
unit.assert_eq16(16'hB3EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #6 c468ff6d-a84a-476c-8862-2be3ba8fd8df)");
unit.assert_eq16(16'h13D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #6 16cb9ca2-cd44-4828-9845-235653c7300b)");
unit.assert_eq16(16'h174E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #6 9ce63593-7b44-4a30-80d4-9ba79d559255)");
unit.assert_eq16(16'h0115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #6 a89fb055-6256-47cd-9d1d-519dbeffab71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 0e05a7c3-e317-445d-8021-98694280260f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 827f4eda-ca0b-4480-9a43-da4de2ea4d73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 c25b6aa1-038b-44cf-a483-f85bf3fe8eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 6ef4443f-0eb2-4b3b-8c2e-faadb4a14af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 8b28e35e-dcb8-4e0a-8503-efee16d6bea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 a0b7d904-5867-453f-98a9-c652d9dfcba9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h487D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD893;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD32C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0966;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #7 daff0674-2f16-49e9-86ff-0378ec0db0e8)");
unit.assert_eq16(16'hA16F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #7 48b3ffcf-ff63-4503-b100-027cfd7bd533)");
unit.assert_eq16(16'hD893, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #7 44c0b938-6e99-41a5-876e-a600c72887a9)");
unit.assert_eq16(16'hD32C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #7 44800fae-5173-4bde-b3f7-76374a8a4160)");
unit.assert_eq16(16'h0968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #7 2e4e5f24-b355-443e-b947-45c97082d0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 aa649815-56a7-4c59-8acc-3dc17ad39192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 c84b19cf-68e4-4596-a300-fef8a3a24beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 2f133d86-33ca-451a-8c27-24478e3d72ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 026d6822-abf6-417f-8b23-0e01a37e7d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 99e26888-3487-4888-825e-86021049ee47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 81834e84-f956-4e76-94d6-4306a4c9fe36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD25F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h113F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0226;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #8 ae702e37-c4f4-4bf0-b19e-7fb2bd3463be)");
unit.assert_eq16(16'h33BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #8 c0a901ad-3039-4361-af77-0f7e27465bf3)");
unit.assert_eq16(16'h6B8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #8 500b53db-881f-47b9-8b84-0d5aa19a5632)");
unit.assert_eq16(16'h113F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #8 40a19c97-1f13-4f70-b6bc-05a030ce0500)");
unit.assert_eq16(16'h0228, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #8 dd1231e9-5dcc-422b-9908-890fc4326443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 3fff0bf3-8cd3-4ea2-ac45-5b342bc50f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 f37857b0-a138-4932-9dfc-d4ddafadfee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 ae00f33e-7416-479e-b981-0dd41e9cfb97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 2edc53f8-c38b-4f4c-9934-e1800b5bb937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 ed3835c9-3628-4647-a90f-3ddf807359b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 4ef0a54f-5325-4f78-b168-9f127bb0167f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6E0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9AB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #9 a5992f10-1ea4-4c61-bece-47a0480846c7)");
unit.assert_eq16(16'h64A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #9 a04e8929-8a5f-4aa1-8ba8-1f88b6225e05)");
unit.assert_eq16(16'h6E0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #9 1a602a6a-a4b9-4740-9c63-f640e0308b21)");
unit.assert_eq16(16'h9AB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #9 0fccd947-7e10-495c-b073-a837544fabf3)");
unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #9 4817c76f-0909-43e9-88da-d02c1f6beccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 7b77f905-606b-495f-b726-4cc20a979347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 e280ae0b-9b14-4beb-b0eb-b6d5752d722d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 78bac13a-46c2-45d0-a110-d7d550a65b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 1bad212f-b07d-4f83-a13f-f5c57d310c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 7d25b120-910b-47a4-9dde-046d231ae37a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 58055394-adcb-428e-9be8-7ea9820d6e76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC84C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #10 1b5ca0f9-5f07-4d9d-a490-fdc0cce532cc)");
unit.assert_eq16(16'h54F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #10 c214ac05-a82a-4caa-8751-4229e3dd3874)");
unit.assert_eq16(16'hC84C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #10 839887d3-6541-4759-bfc3-7c54ecfb9476)");
unit.assert_eq16(16'h7E14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #10 6feb3d5e-7350-4261-a68e-14bbae2847d5)");
unit.assert_eq16(16'h0C62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #10 a6f929ad-92e8-4eb2-8fb4-68370ef6d3f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 f53107bc-7aad-48c1-96d0-5682f9200779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 80f62252-f8fd-413b-82d5-ecbfdca25ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 2938a68d-28f5-430e-bb30-67c8caf8b09b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 495a4e14-ba91-4d3a-9347-4882088b4e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 e017470c-f68f-40d1-be22-5f89f4785fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 c13af739-b809-46c6-ba27-3ccb01ac9613)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD348;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h10ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #11 53e54426-a6ad-46da-95bd-f384560de498)");
unit.assert_eq16(16'hEA97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #11 3c5c9387-4226-4962-86db-507d527d4b19)");
unit.assert_eq16(16'hD348, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #11 864ec1ae-9ecd-46ed-a741-a0959edaf758)");
unit.assert_eq16(16'h10ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #11 287100ed-17ff-446f-bfdc-90d7d9270e28)");
unit.assert_eq16(16'h040D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #11 f4f81a93-4941-47de-971e-d80b4c237e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 2103984f-dac3-4998-b6d3-f1096be60349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 da0f1284-e3f2-493a-a4c2-8fb94c502885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 14558f28-5306-4689-8186-5f3ee31e318a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 7a75929a-236c-493b-bc32-4285a22025a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 8407170c-4ed0-42de-962f-aaa4777d9e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 2e26b8a8-5319-4572-9da1-671039b19a00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h165F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0995;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #12 fcd35022-d643-427b-b2e6-acaa7ac843b9)");
unit.assert_eq16(16'hA739, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #12 40d0d43c-5021-43cd-92e7-4f901b9ecd32)");
unit.assert_eq16(16'h41A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #12 2027d072-af46-4173-8ee6-209dc477552a)");
unit.assert_eq16(16'h165F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #12 090b3a0c-b294-4f12-9c60-8363cf2ed2f7)");
unit.assert_eq16(16'h0997, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #12 4629b91b-3ccd-4081-be3f-07fa22d5c0c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 6f717e71-653b-454d-8bcc-6fc6938824b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 70ccf1b2-0c31-417d-a531-7ae262640c23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 18147dad-3028-4c62-b240-cc474be2e9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 0b5dfd9e-9206-4ad6-b564-67a495070885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 1e1ec2f3-b476-483d-81b9-79bd7b6bac2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 fb63f913-ab83-4b6b-a45e-8b33dce84647)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h62D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3BFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #13 a77149cc-b1a0-457f-93f0-75bc75013c4f)");
unit.assert_eq16(16'h596C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #13 ef7d33d5-9d83-46d6-b4bc-2450f629bbf4)");
unit.assert_eq16(16'h5E10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #13 3d159b81-2009-4e9d-b683-214ab85aa9a7)");
unit.assert_eq16(16'h3BFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #13 f3f72c00-097f-431d-b937-17f5b6dfa399)");
unit.assert_eq16(16'h0E0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #13 1b10c7f8-4d6a-47d0-af5b-c1a10b29f6a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 d1c2bde5-3781-4b1b-aebc-015b3316bbb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 3b5b84e8-3696-4164-baff-ed6e8c29f894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 bba17858-c98e-4b9d-961c-4bb554fc83ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 7b074ffe-54f0-48ad-9b1b-cf8a1fcbd236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 663a1473-d050-411c-a631-c23e9deb5002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 82691c36-f03b-4014-8cf3-ab99511146eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h13F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h52F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #14 75f988e5-eebd-41a2-b232-7e22648f81b9)");
unit.assert_eq16(16'h57ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #14 f1588e6a-9e83-4bda-a16b-764ca831f9b9)");
unit.assert_eq16(16'h52F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #14 7761e766-2d6b-45d6-9cbd-2bad4708225e)");
unit.assert_eq16(16'h0D75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #14 e33984bf-fba6-458e-9d8c-c0007e09fc93)");
unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #14 9bfba87c-58e6-4171-8d9b-48fc62f97497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 36d33880-af75-409c-a6bd-76d8599ff2ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 63a14be6-5188-4d38-b567-5a072219f587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 27ceb004-655e-4638-85bf-a8c2c7b0845e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 10e3139f-f039-4d09-8e18-fb21c5917b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 31c09c8b-4262-4b02-a145-c620b0b1ca14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 1ea09c9e-457e-472f-ae9d-fca41b6cb5dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA209;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9BFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #15 b5d0fcb8-0754-4e69-a129-52953445addc)");
unit.assert_eq16(16'h5616, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #15 b7f097b9-a291-40e8-b811-cb82bc010b60)");
unit.assert_eq16(16'h9BFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #15 25e30e52-f26b-4d0f-9752-c66625362a13)");
unit.assert_eq16(16'h2DE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #15 979bfca3-17a8-4857-baae-5397b11b3eb9)");
unit.assert_eq16(16'h0DAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #15 976b9b57-25ae-456e-8b04-817c77c82336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 cd674f00-0f1e-45a5-96be-243d685fd835)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 f44d4eab-331d-485b-9d11-3587ec4f9b35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 93fcf3fa-1f9a-4fad-b638-313cdd743806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 0377b7bf-a89e-42bb-9a43-21fecb7bc255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 1c78ad16-eb2e-48ca-8c07-d39d64d64414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 306ce644-ca39-478a-a6db-07bdae007037)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6370;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h52D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC584;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #16 57d7dd36-e5dd-4332-aca9-a8ef431e6d33)");
unit.assert_eq16(16'h29E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #16 7c24612c-6208-40bd-ae09-2702634bc8db)");
unit.assert_eq16(16'h52D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #16 aa761386-b7a8-4223-a073-a7f848c89fde)");
unit.assert_eq16(16'hC584, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #16 aa39f1c2-f433-45af-9974-f6caa0132d66)");
unit.assert_eq16(16'h02C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #16 393664cc-8953-4568-a828-44af3da57632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 c97cef94-1422-4c96-ad3a-14d358382e70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 fbc92796-0426-49dc-9baf-006ff1d12797)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 32412c87-5f4b-42a7-ad0e-e572230dce1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 6d7a5ad1-7532-4d01-bfaf-408456e7eff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 a1b91c77-e82f-4996-a72d-0e6aa2d6c7ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 7302e6f3-c56a-48cb-a43d-d4e8ce84fd23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h40FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h350C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #17 db7d9f4b-22bd-4ace-a638-bb852b47f2d2)");
unit.assert_eq16(16'h9F42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #17 0ca61e95-9696-4188-960e-c1c8945cca65)");
unit.assert_eq16(16'h03AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #17 9d3dc5a4-c690-47f6-9aa7-b7d288784567)");
unit.assert_eq16(16'h350C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #17 a2632cfd-23cb-4cd7-b562-b4a98ca3f837)");
unit.assert_eq16(16'h03F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #17 92807f66-75a0-4551-88e8-05d5e2f59889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 dd0acd34-61a9-4998-93aa-c5f98244c141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 74653dab-85b3-4d19-a799-33bd952c5d72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 69bcbe34-0e2f-4c33-b9f4-78991b99a753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 4eeab13b-bcd9-4515-bdac-9c48a9c4b586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 05cae928-8874-4226-b9b4-1abf5c30d98e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 fa5826a5-f502-46f6-b252-99c51daae9a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5861;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE39A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2ECF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #18 8dfec7cb-d0a5-4454-9c90-5939f78f5968)");
unit.assert_eq16(16'hCA92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #18 c2932ddf-2762-47e1-86c8-354c73089f13)");
unit.assert_eq16(16'hE39A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #18 38aeebb0-d1f8-4307-afa6-a61620b3e583)");
unit.assert_eq16(16'h2ECF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #18 1a3231c6-4e4c-40fe-8b38-8c793ce638d1)");
unit.assert_eq16(16'h03A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #18 d7919ba3-c2b8-4785-9139-5617bda21c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 78aadb77-5699-4868-9515-9f1c19f305e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 513f039f-4082-4f62-bcc6-04887627f82f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 9cbe1ea7-552e-4937-ba27-0ac7e8afdc09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 3b0ee692-33c1-49de-8299-213a47f226b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 7f251d1b-1b67-4bb2-950f-7cd5e900b933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 ad1f2b32-9e4c-473d-b366-ea16758bafcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h49B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h63EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0881;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #19 f3f6d622-ffe8-4b37-921f-d0dff0e01f2c)");
unit.assert_eq16(16'h75CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #19 80249141-66e7-45ce-97ed-1c0eda77adf1)");
unit.assert_eq16(16'h07B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #19 b68f6053-b347-4697-b41b-1bc5274ddcaf)");
unit.assert_eq16(16'h63EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #19 663b1db4-ea8d-4c1a-9ff5-b929d6b79c60)");
unit.assert_eq16(16'h0883, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #19 3ec52ad5-2d70-4f31-873e-83218a479765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 77ee05cc-ed0a-4585-830e-4c704c93c382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 50aed2fc-5578-4e6c-aa02-bcca943e17b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 b6f2cfc5-ff94-4f0f-955a-016f40723100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 542a1535-5134-49d9-abd8-da852ad9b378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 2f367b94-a00e-4ca5-b90f-2e8fb32953f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 97678bb5-9349-46d9-b4ac-22ece2986197)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7EC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5713;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #20 2b77c691-6638-4ebd-bf2f-e16456f788c9)");
unit.assert_eq16(16'h03E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #20 2f3c3061-1972-4339-9db5-fd6d4026ff82)");
unit.assert_eq16(16'h5713, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #20 61aafc57-ba8c-46a8-a3c9-7d67dea6ec82)");
unit.assert_eq16(16'h5E82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #20 bfc9d88c-bec6-469c-b29a-e689798b811f)");
unit.assert_eq16(16'h0E90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #20 69eb3a54-4239-4aec-8e05-25ea35d0729c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 2fe66dd3-6d93-472c-ba51-f7b9ec684c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 4d459897-79e8-4528-ba94-421a5bbba4a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 ffc027ce-d6ef-42d9-b687-ba0bb2a807ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 c4277ac1-121a-4831-bd06-b0cc0cd82975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 b602cfd0-a92d-4ee5-b643-d98e9471efa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 993e9da9-0d6f-4fbe-a832-0aac0d8593ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1800;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5B8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #21 418ccc6e-5e1d-4117-adc3-38391e7a58dc)");
unit.assert_eq16(16'h9668, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #21 787070a8-15f8-4f7d-b9ac-112419d47e90)");
unit.assert_eq16(16'h1800, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #21 01953368-a9f0-4b6c-9295-5e021d9156d9)");
unit.assert_eq16(16'h5B8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #21 a08356bc-8492-4c6d-b61d-05b196632e03)");
unit.assert_eq16(16'h0AC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #21 a00ae02e-68ac-431b-a533-d3f0fc229ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 aad25da4-b0b4-4a80-93d3-d15c864ae8ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 f19b4903-d757-4e8f-9a71-d1b60236e614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 ee660701-ebc0-4493-88a0-3ebdd2384093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 d460dcbd-b65e-48e9-ba76-42ab737119b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 f12ab57a-3dd9-4ae0-8326-ebb218b555e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 132cb995-c37a-4249-88b8-0ef8a98a43cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h60D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC878;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0649;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #22 21365b7d-848a-43c4-a378-0d7f11426c71)");
unit.assert_eq16(16'hEED4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #22 a9e2f113-5cee-44e3-9452-7a87ac56c7a5)");
unit.assert_eq16(16'h60D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #22 5d2a478e-d654-46fd-a1a4-8abc55dd2168)");
unit.assert_eq16(16'hC878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #22 60a74ee4-4299-4ba6-8b20-e4ed27d4876f)");
unit.assert_eq16(16'h064B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #22 9930d1ba-56a8-4994-9dde-810db629e8b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 8ee1d654-7bd1-4010-a9dc-49a5dc8f19c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 addeba2d-a737-415a-b890-e1a3b99465e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 b05a5b3b-356b-46da-9a2a-d674e607c178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 21603e15-8e99-4adf-9588-5b20ec414432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 75378869-c095-4d4c-8441-b6cc850781b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 5a659a8b-0f4c-43ea-8cf1-7fc9e173e01b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA4AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #23 a675e85c-7467-4cbd-a871-f49a83904e78)");
unit.assert_eq16(16'hC4BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #23 4f057ee4-505b-49b0-b053-4d70b13d0571)");
unit.assert_eq16(16'hCB15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #23 8b7d7c14-45e2-4014-a371-9bd67a27e0ac)");
unit.assert_eq16(16'hA4AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #23 c8dc1224-abb7-46ce-88bb-a635da531182)");
unit.assert_eq16(16'h04F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #23 67636120-6597-4e87-a020-fd9417aaa3a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 978deaa6-b7fa-4479-b401-3917caf1a226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 405adff1-ed17-4a06-b90b-3222991ecaff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 aa4a992d-2aa2-4588-9549-c45af3668e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 692766a3-1320-4e8f-9a6e-ecda9d393273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 20e5a85e-be9e-4c39-bf3d-1191276af2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 3b36e6b7-bf58-408a-bec8-5a7b515291a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h036C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h296B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4024;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #24 d95eedc9-4c78-4dac-8da4-708cea9ef44d)");
unit.assert_eq16(16'h9588, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #24 79092f6d-bd6d-4b1e-9ee1-aebbb64b8ea5)");
unit.assert_eq16(16'h296B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #24 a1a38fe3-64af-4397-9afd-3821caf2d0d1)");
unit.assert_eq16(16'h4024, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #24 08e50131-5998-4ded-80c6-df1be11d5cb0)");
unit.assert_eq16(16'h03AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #24 636fb41c-9b96-411d-b38c-5505ca4e423b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 40f7ae42-aa8c-43cf-9db1-af9ade222494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 4798edde-c934-471b-82c8-d22829cf5f97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 7cb05c8b-c976-4d89-b59b-edd527bdc8e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 8d1339dc-defb-4dea-8a5b-139a967a5e32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 9e6a2624-6c37-44c8-89fc-6558c1440264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 e471e13b-2fd5-49d9-8116-7331c5105a02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDED4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h32AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h454F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h064D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #25 ef5df359-4ad6-4ea2-afe3-e42427c2b342)");
unit.assert_eq16(16'h4DCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #25 1cb5e551-1f3a-476d-aff6-e6dff0b0791c)");
unit.assert_eq16(16'h32AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #25 b46d153b-d5b3-417c-8787-945f9c72893d)");
unit.assert_eq16(16'h454F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #25 5877fb97-a2d9-4bcc-85f9-6898de72cc02)");
unit.assert_eq16(16'h064F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #25 756dd6d2-0a27-48b7-8a7b-93302c135af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 b1eb8efe-0831-4a77-9450-5c9ee65f0ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 038ba9e2-1ff1-48f5-b3f5-2af76f3ff9de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 33929c29-5731-47cb-9d99-d7c6dbff0279)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 e722c63a-87b8-45a5-80d2-90de0f3ca0d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 3b5d0866-ff75-4d00-8e7a-702d0d67e343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 3692a619-4437-4d70-abd1-33062f951230)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9009;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h419B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDBCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #26 e835e964-87f2-451b-a726-4df6f3ea92fa)");
unit.assert_eq16(16'h4CD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #26 f1b734ae-5c57-43f0-ba66-22cd2c060284)");
unit.assert_eq16(16'h419B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #26 4eac4ca8-4ada-4637-bfaa-05bf41a6a049)");
unit.assert_eq16(16'hDBCD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #26 d4ba3015-f481-4eca-9dc1-a53c26ad8486)");
unit.assert_eq16(16'h0CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #26 488578e8-5864-4fb1-a2e2-90cf373d5468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 b1b793b0-023f-4e88-b75f-5ade7e7034bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 91f6ad83-800d-4253-bf95-ca0d77837ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 1d32b4cc-2535-441b-999b-29245d38a09e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 2976e67d-55b2-405c-992c-ebcf68c1fff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 01b39e1b-5fee-402c-be94-61d36e84592a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 a8ca36b1-2831-45ab-8557-080c00cde9c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC615;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3442;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA189;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #27 55c57d9e-7a4c-422a-8d8f-7423ef6f15f1)");
unit.assert_eq16(16'hFEBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #27 3a287971-ef39-47ab-8d0b-50f024c96933)");
unit.assert_eq16(16'h3442, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #27 719fc61f-a58c-47e1-8553-f827ea94dff4)");
unit.assert_eq16(16'hA189, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #27 0198f795-6593-4a33-bbff-772ac1051ea7)");
unit.assert_eq16(16'h087B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #27 b1750bd2-5ddb-41b5-9a24-ca45b2195e18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 136ef23b-0183-4875-82ee-e62dba1b0ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 92637716-e3b3-4089-8148-bdb0ceffb398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 2e26969c-acac-4aa5-914c-156089c7f271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 e42b50c0-54e8-4b0d-8d9f-3d4c6ebabc0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 db5fdb10-7a66-44cd-9dce-f5d004fb8002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 e91ea0f0-989d-4c50-b626-a52383d52304)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF79D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2998;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #28 7f04f53a-966b-444c-b9c7-95340c42cfba)");
unit.assert_eq16(16'h3D8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #28 0441118c-2c8d-4e07-aaf3-1a937437590b)");
unit.assert_eq16(16'h3F0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #28 d474ce3d-9fb8-49e5-a188-813ec24019e7)");
unit.assert_eq16(16'h2998, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #28 5949c168-d3dc-409e-a046-a8cba46acf3b)");
unit.assert_eq16(16'h02C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #28 8d29896d-579b-4546-bd3e-5d0999b3be65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 01cc0234-ed0c-42f4-8baf-e1412a9f6925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 70a05024-f5ca-45de-9a5a-77312da472c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 db4174d4-9daf-45b8-9f84-98808d2b2ea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 123095c6-9410-46be-879c-e0ef8597e3b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 5325ed88-41a3-46d4-bdbd-60216c3d6406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 d82e0a75-05ea-4e6d-9283-b5e8bfd40929)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h306E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h105E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4752;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0465;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #29 c7849c0d-3260-4d9e-a67f-aeef2ed5914a)");
unit.assert_eq16(16'hA8A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #29 f171bd84-704f-4bef-9db2-bdcea8026d40)");
unit.assert_eq16(16'h105E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #29 72e1ab18-84a3-4f54-8385-3901b503b2cd)");
unit.assert_eq16(16'h4752, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #29 948ad748-2e68-4b7a-a74f-c1653ddc7fef)");
unit.assert_eq16(16'h0467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #29 f96222c7-ea19-4b59-a179-62fac6286894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 f9b02aa3-e745-47d9-b09d-99e482d03e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 5aeb2815-e867-410b-8051-8953a1d6a0b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 fd08f756-1fbb-411f-a3c4-cc9cd7ee10c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 fad8420c-dacf-41bc-a6e0-909c016241d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 34ee41a0-548e-4adb-a594-5f3583e12d81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 a8f5ec80-07ea-4f33-98e4-29c6af54bae8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8DFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9491;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDED6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #30 2388e8b3-ac18-4a91-a95d-614676aa2f6b)");
unit.assert_eq16(16'h4B2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #30 00cee43e-89c0-4983-9797-b6f8a4e09663)");
unit.assert_eq16(16'h9491, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #30 5df4a408-f86c-4502-8b0d-1ed98945c0c1)");
unit.assert_eq16(16'hDED6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #30 b77d8640-77f4-49d1-b242-eae3f44ce56e)");
unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #30 4d81da9e-9b73-4b9f-901e-2f8f6042e301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 20802be6-7f8a-4f5e-9435-3d208883890b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 7a720b76-96ce-4c7a-a53f-9e38ba211fee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 b1797117-5038-44b1-adf6-c7ba338a6ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 b5951278-b901-47bc-aa59-670620e55eeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 167bb0a0-c61a-4381-a892-e39c7a56b130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 ec343a6c-11fc-4ee1-8580-bf7f6e4b3adb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h216C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3E9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #31 d1b3079e-f693-40f8-8a81-69f473e90c37)");
unit.assert_eq16(16'hCBDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #31 e3543b9a-8e7f-48ce-9c54-bd3e0eb46b81)");
unit.assert_eq16(16'h2A5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #31 0721b64a-ecf7-42ff-8c86-d36763065cde)");
unit.assert_eq16(16'h3E9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #31 495ef99e-0bf2-48f8-9b48-9fa8d75d6666)");
unit.assert_eq16(16'h09E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #31 0d3d4467-d08c-4c22-8b23-0bead90d5eea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 6e85985e-0050-4457-9d85-0d2932aa4073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 d8963167-601b-4bcf-a8fb-df378d1b93fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 357569e3-ab83-422e-a9b2-fd3397e9b9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 cb6b8b55-e371-4819-ba93-332161c3a36f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 c4ac86af-a86f-4dc2-a3f2-9f69b112725c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 25fcf4e3-e830-464d-b91c-1b1b0163b0cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h18BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h00EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2539;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0177;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #32 8ec4cd26-cac4-43cf-bfb9-7586e559bc32)");
unit.assert_eq16(16'h910B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #32 31007ce4-018f-48da-a8bc-15947b2386b8)");
unit.assert_eq16(16'h00EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #32 e5122d0c-102d-4c35-a5bc-e7e1b090b05e)");
unit.assert_eq16(16'h2539, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #32 ceeb347c-16fb-415c-8497-987e53c10f3c)");
unit.assert_eq16(16'h0179, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #32 a422d7f9-a548-400a-b6af-0d77eb623f32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 4163b2e2-4b3f-4d33-823c-9dcf400fb57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 791b0d47-57f8-44da-9749-c43ffaa33e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 60a44fae-c63b-456f-a84f-f2156ef78a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 65dbeca1-199c-4dd9-90af-dca0d17a59a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 e0c57a9e-207a-4ea0-8586-44299b5e2aa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 7b9325f3-896e-48ba-9cfb-0f16a4d9b45c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0257;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0481;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9ADB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #33 66d8fcb9-de25-4173-b619-70113dbfa4b8)");
unit.assert_eq16(16'h0EB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #33 a92b15f6-25e8-4782-b0a9-6286e0d13401)");
unit.assert_eq16(16'h0481, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #33 df267502-9e8f-44a1-abcf-3c5197f16ca8)");
unit.assert_eq16(16'h9ADB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #33 b4bccfad-de1d-4d25-8c10-fef1751dc79d)");
unit.assert_eq16(16'h043D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #33 c942ad90-a588-44fb-ad78-430a991f5851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 593b0bcd-921c-4203-8866-be991325c617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 0d43e921-83aa-463e-b809-87b78d66568a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 4bc74c0c-cc20-4ec4-8d3b-f5f15d2d6bd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 7aab30d7-ba4d-4218-a2f4-5825ecdeda05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 1c0b97ca-f418-401e-9fe0-2a3986dc218f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 2afb3dfa-a0bb-4db7-b387-193e0bc14cf1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3FD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h70C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #34 2487885a-f387-4a04-b2c9-85dc1355a621)");
unit.assert_eq16(16'h8DC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #34 b208df2a-1131-4883-98d8-fae9eaaec465)");
unit.assert_eq16(16'h3FD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #34 b4434aaa-10f9-41a9-a122-87a7dd26648b)");
unit.assert_eq16(16'h70C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #34 5eeb2560-4bd0-4964-a73a-e171942d8875)");
unit.assert_eq16(16'h0B10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #34 c9db2352-4d8f-4b24-ab0d-494d141bda78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 9c799726-7f64-464c-a4b2-0e8254ac3789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 55e2dcb2-9640-494f-bfc0-279b381a4470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 5e542c96-fab7-4533-aa9e-64e78b17039a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 53a97633-917e-4fe0-b18b-1b6c06c380a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 fa59d48b-d2eb-45d4-9d77-b48a1eed93cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 fac0561a-b905-4257-926d-0a8abc86a9a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB89C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB951;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC4BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0347;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #35 25ae53d3-b36b-4cdf-8290-9733e5c9aaa9)");
unit.assert_eq16(16'h4537, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #35 74ebc19d-b27e-4c38-bdca-9dffa691c720)");
unit.assert_eq16(16'hB951, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #35 ec1a950f-efb8-4609-8b90-e3732286c613)");
unit.assert_eq16(16'hC4BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #35 473cf3bc-e1e2-47cd-b432-e1f59fac10f3)");
unit.assert_eq16(16'h0349, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #35 fb88da87-22ae-4548-85cc-bb99545a6798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 5605c019-79da-4ff6-b544-5026a314224a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 de999b38-ac69-40aa-911b-03601c4d9baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 71c1d007-5f07-4e75-a026-d45671017b46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 c85d20f7-2b75-4071-826d-bd8ed2e6764b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 4c6ccf5e-0280-469a-82a1-0dea0f61eb6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 7cfa647b-d065-45f6-a090-ba1e1fdbd1ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4DE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC26A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #36 9cbd3158-002e-46db-a63d-75077f5a776c)");
unit.assert_eq16(16'hCD17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #36 1fe35fb0-ae3f-4289-9383-8a0d94f1ff5e)");
unit.assert_eq16(16'hBB2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #36 a63576a8-a98a-453d-a750-ee4f1aec6221)");
unit.assert_eq16(16'hC26A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #36 e3dfafec-2828-49be-a45a-5ebf973b2829)");
unit.assert_eq16(16'h0C07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #36 5da09a7f-0c65-41f8-94a7-d7e72eff3742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 2bf83103-c2ff-4005-8570-8cf12d420dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 8f49fe45-deca-4a4e-982a-cb0febefedde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 3d61c8df-a862-4a3e-addc-b24b1d4f817b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 1730e58c-0635-4172-9164-47a2f35b3944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 8a189c09-a902-493b-8bfd-9eb125d5a682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 0a5f4bbf-e47d-4cdd-a299-4e9ea05eaf6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h368A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #37 d795184e-5a44-4c27-aa85-3adc251df524)");
unit.assert_eq16(16'h1064, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #37 42daaef3-bd69-46ce-a635-194153b44fa2)");
unit.assert_eq16(16'hAA62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #37 fb741f85-981c-4bb0-91fd-e27ea558804f)");
unit.assert_eq16(16'h368A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #37 8854a3b7-31d9-4180-9994-39f85c5fa79e)");
unit.assert_eq16(16'h0D38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #37 da0ad972-1af4-4a08-9629-efa13636efe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 86e37794-0327-49c5-9824-a908ceb05379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 71d7d6a7-96a3-4944-8625-51d57777123f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 61c38587-9c6b-4ec1-9b4f-247b888685b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 1af8e578-89ba-4719-8fa9-5053c986707e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 64605da6-3f7e-497f-95dc-413bed94ced3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 e58a3ba0-5c38-40cb-93e0-5ae4cc4a309f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDDF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE018;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD1D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #38 e0979839-aa60-42fc-9aba-214384c6833a)");
unit.assert_eq16(16'h10C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #38 5bd47108-6fe6-4c73-8008-7f65238251a1)");
unit.assert_eq16(16'hE018, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #38 0f1e4e6d-2868-4a46-9dff-9d207ccdc7cb)");
unit.assert_eq16(16'hD1D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #38 ab68458b-8571-4f23-bd72-c1220e585027)");
unit.assert_eq16(16'h00B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #38 048c351c-a44d-436c-b9b9-ddadc7edcee7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 4b02955c-75f7-43cf-a118-a1a793fb22d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 48e00853-23c7-4b11-a5c5-12051dbad908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 104ebee4-125e-48e7-b5f6-667a95016d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 8c7b55a4-28a2-472d-8b70-03869c475eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 29809072-bd8c-4792-9402-0aee21bc0e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 760d78ba-6ee2-4a96-a71d-debd03175da3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h74B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2095;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #39 0d1ded53-64e5-4e52-bae3-38807f9d7220)");
unit.assert_eq16(16'h47E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #39 4be0418f-4960-472b-9c4e-ea1208c4049e)");
unit.assert_eq16(16'hBDD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #39 d9e25a35-d7a6-4c94-8cdb-00239ac7fe99)");
unit.assert_eq16(16'h2095, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #39 563fe84a-ea81-436d-ab44-c514051b9aab)");
unit.assert_eq16(16'h0FA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #39 d8416b1d-7a28-4e17-be60-69b877f1ae6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 aa16b868-54ef-45d6-aed7-03aeced8d262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 6c017472-a252-420c-8836-1b410458ef09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 0bac4143-b134-4714-ab99-6bcc30c8e28c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 170e57b9-fdbc-47ed-8571-05891b9651e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 d966cae3-f378-40fd-9cbc-75aec9f9c241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 e107549a-b345-4aea-b183-fd3f086e3b40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6536;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h47B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC916;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h050A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #40 9c502ad7-9fe3-4961-a7c0-76ee57f36c51)");
unit.assert_eq16(16'h5CA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #40 521e88da-15eb-4218-b187-f54634f692db)");
unit.assert_eq16(16'h47B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #40 7c236ccc-0c6a-4a26-8ea0-197067a7cf14)");
unit.assert_eq16(16'hC916, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #40 9ab0036b-ad70-4e67-881e-ca9440c357ce)");
unit.assert_eq16(16'h050C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #40 583c63e4-b516-47a1-98e7-cc9e8fd1b667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 82541217-b160-4f6e-9465-67e67b51b5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 ce23835c-2746-4c91-85c9-c8e0f10f7ade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 d68350cd-244b-490b-8659-5e2c130bda04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 c74046ad-7e33-4f14-a648-0bb89f994da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 e14af9ed-a58d-46d6-8ed8-5e3325a4a71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 2e93fef2-6cd7-49ae-a46b-74428a8e7751)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h855C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDF9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h080D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #41 265238aa-9386-4e4c-843b-73d61f2df029)");
unit.assert_eq16(16'hBE39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #41 6f68ab30-1adf-41da-8abe-5eaea7e0f48c)");
unit.assert_eq16(16'h855C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #41 2d652c14-c763-43ea-8c59-5529897dcb18)");
unit.assert_eq16(16'hDF9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #41 1e668b6f-1d83-48cb-b2ce-3e4c4956b3d9)");
unit.assert_eq16(16'h080F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #41 306957b3-ef71-4962-8917-e37bca5c53d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 48d91e0a-1545-4101-9c9d-67c75af217b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 bf35b0b9-8df2-4ef8-9e61-21e608b13be6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 fdf392ed-62b0-4b5f-9bd3-f7354592eed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 fb97e59d-a8a0-427a-a56a-b9a4e3f9fde7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 33c84ab8-f6ed-4f1c-ac94-f0dbf9864d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 fae59be7-c2b7-4b2c-a98d-3faae1f00323)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h528E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h889A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0027;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #42 bcb3372c-2292-406e-a312-9d4d04c5d68a)");
unit.assert_eq16(16'hBBD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #42 838ed3ea-5166-4eee-abc2-c0953313cf76)");
unit.assert_eq16(16'h528E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #42 28ed1899-080e-40af-8984-a2c600a9f006)");
unit.assert_eq16(16'h889A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #42 2198cd13-f49e-4d31-9431-1b23a9e8ba8f)");
unit.assert_eq16(16'h0029, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #42 523eda55-cd40-493f-816f-d1e464d90353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 eaab608b-0c90-46ec-998a-d6aedd6e01ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 2e305af8-dd03-4e81-87dd-9a517afe5d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 2f9c988e-4807-48b7-ae76-23cf12a151a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 d9c8bf6c-e082-449e-a9c1-903002af9af3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 c5542f19-301d-4fb6-b785-eeba5ee4fc18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 8f371765-4992-4b2f-b9dd-55f71c3ac629)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE93E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #43 c303f4e3-5254-4486-844b-c5d235894fa6)");
unit.assert_eq16(16'h6B9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #43 d63d445d-e5f3-43f1-84de-dbe979e1be7b)");
unit.assert_eq16(16'hBC3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #43 1f31c4b8-b869-4f3e-87b9-6ba61304ee6a)");
unit.assert_eq16(16'hE93E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #43 7c7d76a6-a782-4e06-b135-aacd56835826)");
unit.assert_eq16(16'h0FED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #43 aff40952-a6df-4aa4-bcd2-008838422d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 ab17494f-8db2-4155-b9a8-a34ecd354acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 6867a836-5167-487b-9bf4-4af3a229a049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 c76dec42-a7c9-49a6-852e-fec6729d06a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 64540430-199f-47e3-912c-f421cea00054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 6753d19c-f641-41f8-a4c5-c5e285201333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 0a5903b0-8751-48b3-acf8-85c103c1f2cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9ED5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6190;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h231C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #44 e23bab5a-3277-4413-8aff-0280fedc3f11)");
unit.assert_eq16(16'h8B31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #44 ec1e1985-aedf-495c-9cce-d61a73cb41c1)");
unit.assert_eq16(16'h6190, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #44 f993c9c5-0d66-4273-b94c-38cabf467df4)");
unit.assert_eq16(16'h231C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #44 5b85f7fd-64bf-4e1b-81e6-d70c3e6a5a7a)");
unit.assert_eq16(16'h046C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #44 0925ac01-0c5c-41bb-8c19-74e681e84f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 2b6b8457-826c-4c95-ac9e-4e5730ad8532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 0534c188-e641-42fe-aa66-cd2381b768b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 e773e532-385a-4087-9243-80be1976f25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 d57ec8ac-da19-4c53-99f7-24b2a159b1b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 ced0df15-b2f3-4b73-9549-7d95ea49c561)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 67a21f64-28de-4495-b3ad-8bd3373b6c86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3108;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB9B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFCD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #45 120436ab-9fde-4490-a5d1-fdb9d10dab06)");
unit.assert_eq16(16'hF2B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #45 33d847ba-b02d-41c7-aaa4-8c2ca7cc5f49)");
unit.assert_eq16(16'hB9B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #45 bf90631a-fc02-42e3-82d4-e38bc1cb7acd)");
unit.assert_eq16(16'hFCD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #45 55ed79d1-c31e-4b12-acc9-33e35806242a)");
unit.assert_eq16(16'h0DE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #45 4c3eabeb-40ea-4335-9c2f-9c7573831b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 af655ef3-1144-4ee9-b3d9-a2bca394c8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 c334f7fa-e1f6-4b18-8cd8-03db209a2236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 e6db4cb5-6d00-46b2-8a3e-c344fa7e5cf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 a91699ae-0458-4d1b-9202-c15c856cb8a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 a8033875-228e-4689-9d87-9394e8f5b912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 06255f7c-563a-40b2-97d7-9df68d34764e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4EF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA58A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF52B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #46 b8379c1a-32b3-4a44-a3c4-623d7d7e35a6)");
unit.assert_eq16(16'hB0DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #46 f6dee081-f394-40b3-b090-84b519f1f792)");
unit.assert_eq16(16'hA58A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #46 13909dd4-cb9c-4a27-9eca-9c717b333f6f)");
unit.assert_eq16(16'hF52B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #46 4a703a82-ac2a-435b-90e7-c5ae6d8052b2)");
unit.assert_eq16(16'h0F10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #46 97fe3a5e-19a6-4c20-a615-b3be9c344586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 9df59354-0702-49e8-b6c8-2bbe48051d1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 e29ce0bb-5640-4490-b025-e36f8e996161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 e6322b0f-4535-4900-8453-c8dd21d0e7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 4af0ba6e-9a3b-40f0-bad9-432c63e48169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 ffdd9685-ca03-4481-ab65-e9718fedeabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 6c2a0ad4-bbff-4c28-9a58-da931b0aeb7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6774;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h49E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6883;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #47 713abc63-ce29-407e-820a-2ad55c2e9d9e)");
unit.assert_eq16(16'hFA5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #47 f235a0a2-370c-45e8-bc1d-1089ccd0476c)");
unit.assert_eq16(16'h49E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #47 9b00e32a-870a-4df5-bacc-d2c71ffef0da)");
unit.assert_eq16(16'h6883, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #47 b78067fb-2123-4efc-b4ab-e673a9a4dbaf)");
unit.assert_eq16(16'h0A2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #47 3f76e8d6-a76b-476c-91b7-790c1726a52d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 e77d84f8-ed9b-4137-bef7-f6fa31f1f6c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 081ac6db-d036-4af2-9993-b4e6ea43a773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 6a746fe6-acdb-473a-8379-1b97c43ffd3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 8a01b092-98e8-41ff-8775-f30838ec1891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 14e74d2c-5f90-40b4-9f99-c0fcb99dab89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 499e22d4-0b54-47ca-bba9-ed0d8fe3f8ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2010;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD30E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #48 5f2d19e9-4604-4bf0-92b1-5c88f4d573b1)");
unit.assert_eq16(16'hC58C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #48 4f9f971c-2052-468b-a15e-8baab7c58f7d)");
unit.assert_eq16(16'hCF46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #48 ba3094c7-4b32-497f-a690-0de2b0c56ce4)");
unit.assert_eq16(16'hD30E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #48 46ddef9e-8583-485f-9f34-1d70ecff7f2b)");
unit.assert_eq16(16'h0D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #48 240e2fb8-0697-4fd9-983d-20bca8f88e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 c52cc7ed-c523-4a4e-8220-e53551b5c7cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 06c0753e-e535-42ef-be0e-71f282c75e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 a07784f4-fd32-4c00-af4d-886b47b6394a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 87708e10-6bc9-472b-ad1b-e0fa651887e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 69863bfd-25a8-442d-be57-64a77d801c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 206ee456-af1c-4a38-b932-a14f22e8aa0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1363;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC345;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBAB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #49 ccd27f80-7bf1-4553-8c32-7780e880fdf9)");
unit.assert_eq16(16'h13A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #49 393fe8fc-b34b-440d-99d7-3dfb8377ebfb)");
unit.assert_eq16(16'hC345, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #49 42aafb8b-a93f-4d61-b413-e9c40c36d50c)");
unit.assert_eq16(16'hBAB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #49 d9e37d99-8e6a-4e75-be06-40322d49166b)");
unit.assert_eq16(16'h0BF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #49 88840782-b463-4544-90e1-96d3218dc326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 83f3b5f6-3545-4f3d-a3a7-2c530c76557b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 db553352-7fd4-45a1-901c-20ba4880d645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 9872d58e-747e-4189-bb82-a8295eb55d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 4423b31e-c610-4138-b2b7-a8e840fd1c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 62e47c69-9340-4a9b-8d76-ae9069d4954c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 02444bd9-bbb7-4d0f-aaec-a237667fa2f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB62E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0681;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #50 283bd430-fa26-41ab-a00f-41aeb478fb4c)");
unit.assert_eq16(16'h1163, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #50 afa99071-173b-4666-8bfd-87cb47df3938)");
unit.assert_eq16(16'h2A09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #50 06cd2c62-21f7-48b9-90df-8ac5f18dce48)");
unit.assert_eq16(16'h8BC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #50 134433d4-be02-45fd-af67-3a1bc54b907a)");
unit.assert_eq16(16'h0683, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #50 430da613-2320-423f-9f80-184b42908c2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 f1a717a5-a4b8-4845-a329-abc5301662e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 d507d49b-5bd2-4855-a9d7-9ac1a67c6c45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 6634d633-4856-4d1a-9af8-a38ebabe70fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 c72ac1d6-d14d-45d3-802d-3ddfdc4b46f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 25bb8904-c212-49a8-a441-e4df5a5f5913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 53414fb1-9e56-43a7-884a-f33f2b8aa7ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCB9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6828;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA0BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0531;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #51 3fd93639-7603-4c29-99f6-feda67208352)");
unit.assert_eq16(16'hE508, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #51 bce2fbe5-0a6f-43f0-ba32-7a47310e7053)");
unit.assert_eq16(16'h6828, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #51 f89ec9b9-9401-4a3f-ad9a-45956b5e8173)");
unit.assert_eq16(16'hA0BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #51 8bc762aa-d4d0-4e40-aeca-cdf84b21f553)");
unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #51 c0e3b696-9007-4028-8955-9c2d5f2239ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 ec8be828-e62a-4969-b639-a3dd14cf6ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 4c4ab348-fa84-4609-ac73-36771aaed379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 3dfdcd0a-88cd-4a2b-becb-7e49564fb345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 26a7fbfb-0b27-4663-81e9-b786732655fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 5d21bfa5-d643-439d-8004-4b2bf393f46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 d0061953-c8bb-468e-b064-b9a68f7bca70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFB99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE2EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0374;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #52 24690060-9624-4a0d-964e-903f21966d78)");
unit.assert_eq16(16'hC43A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #52 aef9d72d-ce83-4221-bd9d-c53e8b1655bc)");
unit.assert_eq16(16'hE2EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #52 6ba20718-c906-42a5-9bf3-ad1270e33d7e)");
unit.assert_eq16(16'h6F09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #52 2fdb8e57-6e81-47a4-897c-143771c4d17d)");
unit.assert_eq16(16'h0376, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #52 0737023a-2bc7-4dbd-97b0-0938e1ae44c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 5c2c7cfb-3797-4fe4-a8b4-86db45b6d076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 430b7fe5-2bfe-4607-875c-805dcfe55f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 1de6997b-9b37-4c08-9f7b-fa8b7ee6eaab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 a5e6214c-8814-4c3b-a273-1c8a9868dce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 0f49337d-315b-498f-9ed2-df451b26d1d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 9ca4373f-b8bc-4782-a196-f5c95ad3b250)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC689;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0392;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDBDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #53 a0e9ceee-3452-4b0e-be62-11047ceec487)");
unit.assert_eq16(16'h30C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #53 e6f6d5b9-235a-470b-8be1-2435d688299b)");
unit.assert_eq16(16'h0392, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #53 6329213a-051d-4d10-b8ef-9dd2380e9feb)");
unit.assert_eq16(16'hDBDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #53 c60d1f0a-8dba-4427-ad48-4ddc29eef56a)");
unit.assert_eq16(16'h00CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #53 fab301d0-2a40-4b34-a4e7-c8f386e1cb9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 b375806f-851d-493f-b205-95d19d29feeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 447090d3-62d3-4317-92f8-9391b5b4fb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 3d4b21cb-c8a6-48c7-a6a4-c10df61f6f1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 f2d9ae8d-ebf7-4fa6-8358-73bc85b30163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 cbf666e9-bc86-43b9-9718-ef6ad270b60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 40987874-7d84-410f-908b-9e438014c26b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7756;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB06A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #54 2629ed7d-b01f-47c2-99e8-095e58194bc9)");
unit.assert_eq16(16'hF25F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #54 a36ff4cf-b2c5-4c3f-bf4e-8e17fe9d0c02)");
unit.assert_eq16(16'hB06A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #54 49681936-9eb2-4124-9ff9-32998068a958)");
unit.assert_eq16(16'hD031, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #54 4aed7d8c-e932-4c75-97a4-da1865515188)");
unit.assert_eq16(16'h0EAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #54 99e4505e-6b31-4cf7-989b-8f9d34d15da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 2e918f29-f135-4e38-b1de-76a2062e4ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 c43cc34b-e8e4-4507-a6b5-42a4c6c37000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 7c4fd663-707d-4edb-8e63-b4e5b215a3d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 833fef1a-8b2a-4842-8ec0-50708a77e6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 d1a5a3c5-6523-4d94-a301-5fe5fc97d8b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 2ccc3d60-5820-463d-bdbd-6db2a255f241)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h477E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #55 0bdcb9c1-57f3-4084-a6e7-9bdcb6d966a5)");
unit.assert_eq16(16'h865C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #55 12f91f5d-c223-48f1-b427-f229388435bf)");
unit.assert_eq16(16'h477E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #55 affc0eef-fae3-46fd-a2be-12106e376eb5)");
unit.assert_eq16(16'h0F10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #55 06d729fd-b2b6-4e39-b5a0-1af6f07a370e)");
unit.assert_eq16(16'h0CB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #55 ff611065-45aa-4ead-b0ee-fa08b4dbcb96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 dbda009b-8aac-4ca1-a2e6-6528a0bb2913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 40244582-2d96-473d-90e5-204e70ac6e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 81dc4af4-5916-4b84-b6ae-2bc892e83f56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 94f2529a-1fca-4197-b379-d1fe65d873e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 389b1548-b558-4175-9fbb-27079cd1e8d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 e41f07be-977c-4479-aaeb-97c06a7d56c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h148B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h04C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #56 a730dfbd-e948-4396-9d1a-01a2a822bf21)");
unit.assert_eq16(16'h0431, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #56 000d2fe9-1fb3-4208-9e0d-f0d43dfab28f)");
unit.assert_eq16(16'h04C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #56 e891c8b5-9bea-47c1-89bb-4d0b95b8fa07)");
unit.assert_eq16(16'hF2FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #56 6791e87d-d6f0-4fc0-ab04-0f737a8f0fbd)");
unit.assert_eq16(16'h02AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #56 a80cd562-64d8-4512-bf49-982f9c381508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 41396771-e7c4-4826-b1f8-503748077398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 e1834877-299d-4078-abd7-8f76f546400b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 fe445212-e3c2-4d09-b831-ffd968d4488b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 5c2ad378-5563-48db-8e9b-323b44ac2340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 ad3d3ef0-1175-4449-a0fe-46e5a7e9c7b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 18587532-b781-435c-ba8c-485ec25c3477)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD05E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #57 0e2da78a-d8e8-4212-a7be-0e524beb1a66)");
unit.assert_eq16(16'hA878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #57 4cd584bc-6dd9-45b8-951e-a3cdb61b0720)");
unit.assert_eq16(16'hADEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #57 3bd626c3-9e6b-4275-9c9a-e24091e9671b)");
unit.assert_eq16(16'h7BEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #57 a8cc33f6-c895-4248-9090-23a65e786689)");
unit.assert_eq16(16'h0D58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #57 494319e8-a96a-4856-b3fa-37dd65306f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 67e1fad6-8cb1-4893-8363-1116f5c5c1ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 8aec1253-1925-464f-a8bf-cce396bd2515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 118e87a1-ef2b-4590-b98f-bd5f6dca190a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 877d2e77-6bc6-4ba1-b618-060a43849380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 145240ca-9fe0-449e-bc17-c6c047f8650d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 5b29bf5d-8a17-4bd3-b18c-debc219a4533)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4947;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0288;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #58 1d82def5-a4f4-4a99-b883-c331acd209e7)");
unit.assert_eq16(16'h520A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #58 f26cdaec-52a4-4bf4-b20d-cd8b6320f937)");
unit.assert_eq16(16'h69B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #58 cdc81400-d29c-4253-9cab-6ddc9959a7cd)");
unit.assert_eq16(16'h4947, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #58 03696828-4b86-4a13-b7c9-3d913e97cc10)");
unit.assert_eq16(16'h028A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #58 dda36dcd-d6db-4657-8361-c8c55d238375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 6691d6e5-5deb-4e08-8d15-c3260b43c695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 6e1126da-ff18-463d-b041-385f27403b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 08e1fb0f-6fd1-4cf7-b87c-04090bce3f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 7f94912b-56c8-451e-b947-ed1218088880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 f9ca24ec-6b4a-479e-973d-3c059e5117c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 22a36cd5-f7e8-4b01-b25e-8edf32f9d911)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h682B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h10C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #59 6773cfda-ed80-4469-8966-b831287520b3)");
unit.assert_eq16(16'hEF69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #59 f5a5288e-f64f-461b-b7a5-809f9f439e5d)");
unit.assert_eq16(16'h9D7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #59 13f25e6f-8518-46d2-8081-a346230a94c2)");
unit.assert_eq16(16'h10C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #59 983ad241-c29b-4dd0-8bfd-f9b5f0dff061)");
unit.assert_eq16(16'h0AC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #59 c61f700e-56ee-44eb-89b4-026beb5079a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 e42efc01-ee1f-44e0-ab01-b682fa3ed890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 898d484d-d63f-4e7b-b60a-9309d1a11995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 de7a3d63-d54f-4479-a0c8-e3e78e782f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 a1bc5765-10d1-4ce5-ad18-45fe42271a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 8f42d715-b9b7-4e83-ab20-2e80c4c9c31e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 2e5eb509-4205-4e3a-8a0f-dce28bece9b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9EC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h81D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC3A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #60 15fcaf46-09d3-48a1-9776-46e39c15089e)");
unit.assert_eq16(16'h2C8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #60 8364d3ed-ea08-4ba8-87be-5b7a1fd91522)");
unit.assert_eq16(16'h81D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #60 962277bf-015d-489d-80fa-e53155285509)");
unit.assert_eq16(16'hC3A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #60 5956b7f7-26f2-427a-92da-03b72b6ef1a2)");
unit.assert_eq16(16'h03A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #60 4379e1f1-df5e-4f2f-b6fb-41f314079571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 91254141-8d05-4bf0-ac09-d36561accd71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 7865d118-7619-47a0-9266-6b21c7c1c2bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 2fefd55b-4e7f-47c3-8966-28b37aa83715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 19edb09b-ca53-40fc-be62-fbc06491ba0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 41967ea3-0092-4323-9638-941e47bf5cf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 5b427c5f-c24d-4dfd-be97-f27b0b1b456d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF7B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBBA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #61 b63e8c74-323d-4f2b-bbeb-683f4b8ef450)");
unit.assert_eq16(16'h7B53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #61 330ec7a9-7878-42b9-abb3-34a0f5ad0e82)");
unit.assert_eq16(16'hBBA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #61 51d3b438-f485-4236-befd-54dfc089357f)");
unit.assert_eq16(16'hAD72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #61 1696a5c9-987a-4706-9ace-54df02b5f97e)");
unit.assert_eq16(16'h04B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #61 6149d2f8-4889-482e-9141-1f624b8756bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 9bd0bc23-e8a0-4092-8105-d0fc920b894f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 a10dcd5d-f673-479a-9ef3-6e80f47350df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 462db7bb-5226-4b27-a0da-b1cc0706e9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 6813f685-3500-41bc-acd5-cf1b2c872483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 d4eb6a95-4a90-47a7-9f8f-b76be062a136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 39ae6e0c-0fe4-481c-8f6d-7c7e93630870)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAB27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9622;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #62 318977cc-3049-4b05-b0c5-0400d935d14e)");
unit.assert_eq16(16'hFB72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #62 c8ca360e-c072-44cc-91ae-04b2e408973a)");
unit.assert_eq16(16'hAB27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #62 4400634d-7e30-413a-a24c-42ddefe39050)");
unit.assert_eq16(16'h9622, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #62 76a432e0-4e31-4a39-b797-ea089eccaefc)");
unit.assert_eq16(16'h0BAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #62 690002b4-8eef-49ea-91f5-ede30c92b23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 8ae98bc0-93ff-460c-b854-8649d4ee25a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 90d24411-1cf3-4468-a259-b08fc7d7566d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 d5d2a33d-f912-4f85-98bd-5ceb655def9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 e39f6cce-1855-406e-9373-27e411fdb2a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 2033d004-ba28-4ba4-ad55-ae54a61de300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 0168a918-44c6-4b10-bcb3-4dca71e1f420)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD15B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h38EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h13B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #63 4a2811c4-6f56-4b89-ae38-b02a131566c0)");
unit.assert_eq16(16'h2BDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #63 0c201282-a32d-4e9d-a39c-082d0c0b2593)");
unit.assert_eq16(16'h38EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #63 c1b84e2a-3f64-4765-b271-14ceeefcf1b6)");
unit.assert_eq16(16'h13B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #63 00206670-81fb-435f-89b1-22e7b2573ea4)");
unit.assert_eq16(16'h0EC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #63 e6e0883f-fb23-4910-8a0c-024e36eb9ea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 b3bc02aa-8c76-4fc4-8f94-8725d16feb66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 d288d1c2-320a-4003-9c9b-74d845b22188)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 6cc99190-f86b-4640-a45e-53bc9d4a834a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 c888079b-28e6-4be7-8d96-0bdfc1cd4e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 926fbec6-9525-4c75-aff4-d1055d5712b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 58a1c1d4-25b3-48a7-8994-a59c08caf0ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF69C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #64 ab6177fb-3087-46bd-a4e7-05c98a59f3a3)");
unit.assert_eq16(16'h4189, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #64 976fa96e-5ee9-4c9d-beed-24dcf5aab688)");
unit.assert_eq16(16'hF69C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #64 e6c755f3-46ce-42da-a27c-cd2b7e77de44)");
unit.assert_eq16(16'hCC6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #64 ea910b9b-4a45-49d9-be04-0f552a0c39cf)");
unit.assert_eq16(16'h0ECB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #64 d23a7224-9efc-42b0-a4a6-cf712a1731f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 e77c0f06-ce52-473f-b1d1-79f20c30cf4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 66087e3a-b01c-47e8-a7df-79e34566c59c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 bc372d99-117e-4ded-be1b-2dc2bd7d2bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 51b698e4-907f-4c95-804f-2f60dc2114be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 fc6a19a4-e50f-4af0-a2c1-ab167b909c69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 d137d02e-6562-45f9-a42b-1b8163ece497)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD3F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8DA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #65 9934faae-1ef7-494a-9f6e-58abe5463d71)");
unit.assert_eq16(16'hA1C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #65 4e12c323-d173-41c2-b5b0-e29543ff51a9)");
unit.assert_eq16(16'h82BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #65 3eba1bc9-7efc-4014-8547-d0a6353d212b)");
unit.assert_eq16(16'h8DA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #65 57741709-4fef-4236-97a5-9ddd17553e53)");
unit.assert_eq16(16'h02DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #65 0dab8418-5392-4b7a-a4a6-aee265ad2f32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 b07dc07f-5686-4991-8c86-a36a33450b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 07c5b877-6c29-4e1d-bc85-3f0aea4ae61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 2aa991a3-fe88-484d-b2f5-80aeef6c2234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 698119a1-5e89-40ac-aa77-229646937ca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 db8bee21-c126-4b44-90e0-c7a28365ffef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 6c5a0e0b-731e-4284-a64a-2e87046e4f56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0E54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h06A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBCE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #66 bbeb0453-732a-4c9c-a2d0-b8cea8036a2d)");
unit.assert_eq16(16'h950E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #66 c387daa6-0e04-4a85-8a80-4289dea32e17)");
unit.assert_eq16(16'h06A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #66 133ccf1c-3b64-473e-99d6-c47951790d27)");
unit.assert_eq16(16'hBCE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #66 a444e8ed-8bfb-4eb4-ad06-fb10bad726c7)");
unit.assert_eq16(16'h006E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #66 15a3fa92-51c3-457a-9a32-760eca8f5ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 49590180-fe9a-433c-91f8-7405fd800151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 ff5d1532-98c9-48e1-87e2-3ef60052de9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 0ef36da2-98f8-4ab8-b7b4-599d88062caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 5f98978a-3fda-4ed7-8df6-94f5eabaa8ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 15f62f16-83b7-45f8-82b3-48f5fe626540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 383794e5-0051-473c-bf2f-16a9182910de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF4CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCDCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h48EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #67 6e1d3a9e-0d16-4363-a1fa-249284aa9f12)");
unit.assert_eq16(16'h25C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #67 1ca27f6f-384f-421b-8fcc-17300e705f31)");
unit.assert_eq16(16'hCDCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #67 59fb1b49-2a66-4548-97ff-2d4f80d8038b)");
unit.assert_eq16(16'h48EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #67 306fa9a5-1f6e-4f12-86fe-ed67644031d2)");
unit.assert_eq16(16'h0A14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #67 443feb4e-2ed5-41fc-9563-77f438249e1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 dc59c86f-a0d8-49a1-a054-654c984ed2c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 1b73bf58-0ded-4a58-864f-a4e0ca06f819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 a9402dad-1a1a-45f4-9747-3919852e077e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 7f2b285b-fb34-4856-a294-24dd81f1e8f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 a35660cb-d978-427c-bdb4-9022efea0f96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 85ba7aab-3f76-41fe-b7a3-3b96d1e0d24b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB85E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #68 3f3a1f29-c3d5-413c-b177-736d2126126b)");
unit.assert_eq16(16'h8688, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #68 a6bb3def-c8c1-447f-8a6b-75cec1da8012)");
unit.assert_eq16(16'hFB2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #68 4a803a13-fa81-4d9d-b7f8-760a902e4368)");
unit.assert_eq16(16'hAD7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #68 b6a98179-d09a-4a4f-80df-b7ecb1cbdf5e)");
unit.assert_eq16(16'h0BEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #68 3a2be2d1-1b78-45c8-8207-267d38da87bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 4b416540-76e2-40f2-b26f-45113662b427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 8a7b6869-57bc-487a-9ab3-678e9577a989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 ae04d357-1c3d-4ebe-a135-0992a8d49c25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 b99e68a7-66f8-4457-baf7-ae0a0c34cc34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 6b970503-b457-48b6-942b-38b2b62910af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 72554ddc-97fc-4e60-a309-d9ae06af2ea7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h350B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h01FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1610;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #69 2413bdad-9714-451e-a97b-1e15294fb8d0)");
unit.assert_eq16(16'h7067, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #69 22e2d4ea-d5e3-49fe-b8b6-7e6001c6590c)");
unit.assert_eq16(16'h01FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #69 2bfbc5a4-7c94-4fd5-9eb0-76a2a9161fc3)");
unit.assert_eq16(16'h1610, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #69 fa059f3e-8e64-44ed-b064-52b57e8d8c39)");
unit.assert_eq16(16'h0DFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #69 9cd97b0d-7e52-4848-9474-af9bff5e1274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 39593647-1418-441a-b4b0-b97e11214c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 e45d9f65-202b-47bb-8d7d-5a85edd6980c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 b69a29a9-5aee-40e0-8927-cbc51e52c3ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 4cdfa9d6-9c22-430d-af48-6e3e9aad59ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 0aee2622-288d-436e-8e11-de58207c0ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 861cd8a8-58f7-4832-bdbb-355886322760)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCF06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF127;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD606;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #70 d3fd584d-3f88-4c20-bab6-849c0114eddb)");
unit.assert_eq16(16'h6CE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #70 b9447dfa-d173-4efa-86a0-0041616f1583)");
unit.assert_eq16(16'hF127, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #70 de7a9f4c-104f-4d54-bece-4a68c9cf5282)");
unit.assert_eq16(16'hD606, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #70 dd40dc7e-72c9-4896-aa41-32232eb1032d)");
unit.assert_eq16(16'h08FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #70 f772d15a-044a-427e-89b3-cc32aa105026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 e0adcb46-9623-405e-96f0-c4ab730c57bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 1a8dd934-f418-4982-9908-95e13a00aece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 d8bc6718-0a15-4bb7-9ad1-95dadc5a84fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 d2833d7b-b614-4db7-98bb-30ceaf0558e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 6da46c6a-4e31-4ef3-b390-df8492a5aea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 1fa23694-129f-4377-b07a-feb7d71d4824)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h54B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h631E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #71 c8e8f8e9-199f-4230-be73-83d33957ad2f)");
unit.assert_eq16(16'hB2EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #71 8ed426b1-c805-4eb7-9afc-c9d0baf392c0)");
unit.assert_eq16(16'h54B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #71 0b5b06bd-a9a1-49d0-9153-ed498052ad1f)");
unit.assert_eq16(16'h631E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #71 47431ec1-9a14-41fd-b509-5a472a4418f8)");
unit.assert_eq16(16'h0B47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #71 bcf8c200-cd57-43d0-9a92-3e5caae41010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 47264b73-3cbe-4d34-a68d-b7bf8e518879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 1de6e4fe-7b5c-4394-8955-c4d34db484df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 fa5038b8-ab8b-45bd-b19e-8c545da2b17f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 8e505f91-da62-4d49-a98d-a80aceb13fa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 13f70102-aaaa-44ad-8302-5dad02d2c320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 cb01d9c3-699d-49e9-8123-121dae942bd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0FD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF679;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9BD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #72 85d8b1a7-6ae7-4900-80a7-3e2c72358fdd)");
unit.assert_eq16(16'h6546, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #72 80e2c2a0-ce69-4690-b37e-f80f926899d9)");
unit.assert_eq16(16'hF679, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #72 d3c8b1db-8337-4bc0-93e9-6bca51966811)");
unit.assert_eq16(16'h9BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #72 20ae9640-71e4-4cdd-910f-17cbe94f25c4)");
unit.assert_eq16(16'h07D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #72 66b1b573-a7e3-4ca6-b29b-2ad87bb22c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 d326a7d0-f680-4f72-a74f-c9915523b507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 bb5eca4b-ad37-4842-aede-ac1616ae2fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 370dd65c-ed5d-44de-aa90-1da862261eda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 d5c90c82-948a-45a4-b856-790d3b33c611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 0aa843e3-8f35-46bd-b1e2-ab7157a0c661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 41697051-346f-4d82-8de4-4ff05de3fcd8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF545;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3151;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #73 d3770b2e-745b-40e0-828e-24367fc43085)");
unit.assert_eq16(16'h5A39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #73 10cdb5d4-2abe-437f-a4f9-c015a23e6fec)");
unit.assert_eq16(16'h3151, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #73 25ba471e-ceb4-47c9-8c83-86ae996240ae)");
unit.assert_eq16(16'hFD26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #73 fee915ed-7cf2-4169-8cc2-858951c8010c)");
unit.assert_eq16(16'h00BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #73 480d8a62-1538-4fc9-9b6b-f3df54021d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 f29f3ece-93ae-4351-b2cb-8e1b6496934b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 67abc4eb-172d-43e7-90fc-0dbdb00443e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 1a32f21a-8ba7-47f4-8527-4a3a4c629876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 a026024d-204c-4d62-babb-2c314d637bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 a82c2bbc-dd4a-4c22-8ec3-a8d44975a76a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 d152cb2b-91c5-4589-a813-228dd7459c00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC5EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0832;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #74 8979e7f0-fc20-486c-a447-78c3fa53a203)");
unit.assert_eq16(16'h619D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #74 1217a48b-8f60-47ba-ae8d-4fbf7cfe87ad)");
unit.assert_eq16(16'h0D45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #74 1f70b547-4aec-4a98-a43e-4fbf8f562c95)");
unit.assert_eq16(16'h0FC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #74 02e0feda-b951-4e3a-aff0-9edd127ea9f4)");
unit.assert_eq16(16'h0834, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #74 ff2b18e3-3132-43d0-ac90-40ae8d9a29d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 1833f6d7-8615-4dbd-96b6-dcbd3963bbac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 031a0a99-e3a8-4dee-ac3d-b347be0f2db2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 7a51ccb7-2bb1-47ce-a695-42da3cb47e77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 5397474e-8bb1-4ed9-a377-0f3f85929341)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 4d918e26-595b-4b99-a73c-5088d6f24ce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 6e5e85c4-7634-4c1d-afd5-81634819b193)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h82FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE522;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2AE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #75 d536151d-2ea2-4e62-b022-c88eeb82a010)");
unit.assert_eq16(16'h6299, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #75 b63db957-dc15-49f8-932f-f86cea7cdee2)");
unit.assert_eq16(16'hE522, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #75 8888116c-895e-4240-825b-4b88076044bf)");
unit.assert_eq16(16'h2AE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #75 067f520c-0926-4240-ad2b-132d2eeb5ff3)");
unit.assert_eq16(16'h0C14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #75 41f4e793-ea52-406a-afef-37b0f140e6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 c974220b-e228-4097-84eb-b33d0a162ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 e2f74074-aa42-4d8a-b1ff-ea9840defc66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 2c30a501-a4cc-41b3-be0f-65ac32d6924c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 444ee5d1-87d7-4c40-bf39-c0db7de84fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 26dafb61-7aff-4d89-8e89-1c0613601692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 a8f749b2-876b-43f8-84a6-5c7ac8c85366)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h90C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8309;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0178;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #76 211ccd41-3208-481d-8660-e54eff3e857b)");
unit.assert_eq16(16'h8191, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #76 d98944b7-da63-418b-baf3-955f2a1990b8)");
unit.assert_eq16(16'hED90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #76 ec3723d0-f264-4cf3-8e9b-794110b8ff65)");
unit.assert_eq16(16'h8309, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #76 93c4cdfe-904f-4802-b893-2e84212513e6)");
unit.assert_eq16(16'h017A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #76 e77d9a0e-a053-4994-b662-37fc7b9e0ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 bfc39046-6ad2-426a-ae41-1de2722bbb3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 5cfe709c-96b7-4272-b244-a5a313be7e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 16f069ff-ee03-4858-b04d-a0176c4fded6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 8b257274-a4aa-4b0f-bd9a-0d61aa789a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 837ee5cf-6f92-41a6-a96a-caee8f3f59e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 8df0c595-3143-42d0-a03e-f93b01d366f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB6DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h855A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9A25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #77 5302176d-091f-4afc-9a7b-84b7c8650308)");
unit.assert_eq16(16'h1C74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #77 c08359c0-279b-4a30-9399-cd6a5d9c4952)");
unit.assert_eq16(16'h855A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #77 b17f07f2-7428-4c71-8243-fb19d15a3fb1)");
unit.assert_eq16(16'h9A25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #77 ed71d618-1583-47ba-8b8a-649627b3a302)");
unit.assert_eq16(16'h0CCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #77 cc43c62b-0ae0-4f1a-a71c-e809a2129bbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 21275349-e969-463b-a8af-f6ec7e7bd5ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 c926c7e4-62c8-46eb-af99-a18d0f6c33b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 59b209b8-352b-4c65-b50a-1d28fc173aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 cda8f272-8078-4ef0-aaf7-159935a1b1c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 b54b6457-7233-48a6-b8de-11d137fe3e18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 3afad280-6842-4d80-89cd-40c065faecab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9DF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1CCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0772;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #78 269f0652-aba5-4005-997b-64c090c30148)");
unit.assert_eq16(16'h5D83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #78 56d38684-b23b-455d-af50-1a732e0a1fb8)");
unit.assert_eq16(16'hC2D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #78 e0e98ef0-4331-43c9-bac4-bc4e3bc63770)");
unit.assert_eq16(16'h1CCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #78 62613cea-bb7d-48a8-93e3-459713cbb431)");
unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #78 5d42fd34-8cd4-4afe-a211-e72125c992f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 c0454b13-bcaf-41cc-a487-ec0d502d7346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 c6b3ab46-64f6-40ea-912b-0b25d3aa7ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 dc917ca2-8ffe-4946-8062-cc61571a30be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 6ff8ac27-6442-41d4-b02a-d62746b67209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 b5580b68-854b-4da4-b76e-2b2ddd5041d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 aea0d81b-a30b-444d-82c8-44b08b85e720)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h481D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD123;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h20FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #79 5bf9b6ab-8337-4069-9349-4223200d9ae0)");
unit.assert_eq16(16'hD63C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #79 95001d85-648c-4d3d-bffc-543ca13f5822)");
unit.assert_eq16(16'hD123, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #79 613ab95f-1abc-44c1-b64f-12b0d0c2ecf2)");
unit.assert_eq16(16'h20FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #79 c544a060-47a4-4e52-9381-63389a9055b4)");
unit.assert_eq16(16'h027E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #79 b1009b82-ab9d-4987-8b24-f5020684d6f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 d809d11b-9f54-4521-a2e7-bc4ff1514c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 30c85a79-07de-451c-98b2-ea96396e0a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 7c9e8142-12f2-4d4b-b69e-b7eb2283b19e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 88957d40-efb9-47cf-a8c2-1dd76c8a5252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 a0b4c616-1b1a-49d2-a9ba-6f5c47503a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 ec77c3b8-3097-4018-9238-020efaf7b122)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC8F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC1D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFECA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #80 8b5d0af8-1b3c-4a42-8d1e-71fc0ae784b4)");
unit.assert_eq16(16'hE406, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #80 199d5a75-566d-4a7c-b418-b7753db5d71f)");
unit.assert_eq16(16'hC1D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #80 c16685f1-de8b-4c36-889d-076a4eefc075)");
unit.assert_eq16(16'hFECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #80 86ca40b2-24d9-4a42-aa78-2132df34e881)");
unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #80 f050e995-ae29-450c-992f-298714ca79ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 3ef9e83f-5650-4ebc-a149-d6b1755e35e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 74a81752-96a8-4f77-b7a7-7d68f14be077)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 27a6ee93-6ffc-4448-a6e3-017c1515b9db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 50d56e8b-6950-46e9-b44d-4187b113d8af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 f28d72a1-3a59-4d70-9384-0a8864ef0fce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 43d15a79-16e0-4157-a334-7881e30f74d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF86C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h365B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #81 e7458aea-ea52-40e8-b35a-8fcae191c322)");
unit.assert_eq16(16'h980D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #81 1de5fa65-ceec-4fa8-9150-f097e8ba7400)");
unit.assert_eq16(16'hF86C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #81 5b570e06-ac21-45c8-92c4-2e824b387643)");
unit.assert_eq16(16'h365B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #81 c2e9916c-cee9-4e04-a8c4-96da2b330c30)");
unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #81 b60c76f7-f306-4782-967b-c4c96ea58f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 1db62f92-4ec1-4bb2-a7f3-13b5e9936022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 ee97a8c5-8ff9-4a85-b919-0d6e2b472ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 630a0294-14a2-4dff-886b-7433a20ea23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 d3800394-7965-49dd-a3a6-d922c5d4232e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 6052457c-93b5-44d2-b6b2-0bc40959aa4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 7dfe39b2-3f5a-4ec3-8911-9b65152f147c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0838;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h721A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0099;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #82 a32302ef-9182-4cda-8364-bf2add14e9a9)");
unit.assert_eq16(16'h79BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #82 7d9388ca-47dc-4968-b608-d443ea2abd29)");
unit.assert_eq16(16'h721A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #82 553af46f-56ac-4fea-beb7-978b0efd8e0f)");
unit.assert_eq16(16'h0BB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #82 e571466f-9005-4e7a-a51b-34ca9b9be465)");
unit.assert_eq16(16'h009B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #82 a24d20ee-ba8b-48a5-8cdd-97ace7158efa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 b7fe9d0e-da1c-4c2e-9f85-598f421698bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 476296b1-de26-49e5-84cf-2b2264b00ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 d42e8678-c97f-4576-8968-67e23321e535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 d5f725d0-e09e-42de-bd63-e129d8d8f6bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 3fefcb92-72e1-4b85-967e-c7bc649c3b73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 7480db47-caa7-47af-b912-5b1abfa26ee5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h52EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h843E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBADE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #83 3f7fbf8c-ad77-4f67-ae53-427f13921790)");
unit.assert_eq16(16'h0093, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #83 da4810e0-bde3-473b-8221-c1febe47f476)");
unit.assert_eq16(16'h843E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #83 cb859233-58fd-4b5f-b92e-62def8a1bcf7)");
unit.assert_eq16(16'hBADE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #83 cd33f5f9-9486-4449-bad0-a6b85083132e)");
unit.assert_eq16(16'h0C93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #83 3f2a8837-717e-46cc-923a-ce4b059ae106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 5b10cca4-bd82-4593-9caa-21449a02684a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 c2e1bf4f-dcba-4863-ba75-21d910ad2dcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 3287623b-d6df-4eff-9142-a7b3db333912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 ec589d22-6fb8-4095-9ef9-d8a208572799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 26220dfd-724f-43c7-8558-c8930ee28b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 a021af22-953b-4efe-9b72-42466ca22405)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB0C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF924;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8EF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #84 64e25607-04f2-4003-b0ca-17b003c88469)");
unit.assert_eq16(16'hC12D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #84 97a36d0b-1a0d-4b46-b82f-c60ce69ddd22)");
unit.assert_eq16(16'hF924, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #84 f46b95c5-8dfc-4114-82f9-ca3a83cd109b)");
unit.assert_eq16(16'h8EF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #84 873618b8-ebb9-4504-b15d-ff9802dc6711)");
unit.assert_eq16(16'h06E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #84 71fc6ee5-c227-4e58-a709-b6cdb7f1baa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 3224544f-4ebe-4bcf-8f22-71d0d205f0ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 1027df12-bc82-45e9-b28b-9563807c3950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 2572301a-a16a-4775-9ecf-c6670262d786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 a016ac58-ff6e-49f5-a396-e505a0e7c9ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 b44f228f-3b15-4c26-9ed8-a62f29d1e465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 444c79c7-03f5-4b61-936b-61ab9ee43d27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1023;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6BB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #85 eb3291f3-15ad-492a-ae29-0a05d09b7bdc)");
unit.assert_eq16(16'hE1BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #85 e56be3d0-0b45-412f-8120-d9ac7f60d9dc)");
unit.assert_eq16(16'h1023, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #85 fe71cec1-6e86-4353-b704-41f31d0b5d8c)");
unit.assert_eq16(16'h6BB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #85 a6015cb5-1521-45bb-8c1d-cc77f7225088)");
unit.assert_eq16(16'h0C80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #85 3629c565-66ca-4e59-9a0c-a83c14c133ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 1cce6698-f109-4b6c-8055-43f8686c1dfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 9ac83363-5e37-4ef4-8a03-e11f94431e88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 a26960fc-915b-4658-8d89-320fa3f6822c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 703c951a-9ca3-47dd-8c46-e2603db38397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 08128300-2ab8-4918-9199-517d603cf4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 034fd5aa-4661-42f9-a23d-7e22bb448422)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6FAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE172;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #86 b919ba84-1644-410f-abd7-f0b5441cdf6c)");
unit.assert_eq16(16'h02E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #86 a3785339-9512-4b71-8a6a-44e51a0fac3b)");
unit.assert_eq16(16'h5B82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #86 7b951653-4abc-42e1-82e6-5cc22fb44e20)");
unit.assert_eq16(16'hE172, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #86 0ff47998-c8bd-4a8c-88ed-18a7395e2059)");
unit.assert_eq16(16'h0DC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #86 67646ce9-ffc0-4e1d-87a8-1f2fbe147185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 7924bb16-59dd-4102-a795-97dc69dfb002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 cdccf26f-d402-4d7c-b3d7-0b3a17c0feb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 658d40dd-c2f9-4de5-a69b-9d71d4348cf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 c3cade92-3ce4-4f54-8b04-5ad9446593b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 26db6e9a-b6ff-47b7-b49c-e85ee04d6036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 b075b001-caae-4ce2-88e2-cfd77a9b1f1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1201;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h257D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #87 6ae0183a-62b7-401c-abc5-56b9852f0b02)");
unit.assert_eq16(16'hD069, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #87 b3f7aa7c-88d7-4fd6-8fea-d6b82efc56ff)");
unit.assert_eq16(16'h9B75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #87 0ecb574d-458c-4963-80d9-ca21b64d80ec)");
unit.assert_eq16(16'h257D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #87 f87de162-88fc-48db-8ce1-b21abc837018)");
unit.assert_eq16(16'h0D0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #87 567253a0-f662-4675-a4af-0d2eb6ef6e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 fbeb548f-3e9b-4c80-a171-c30db7e4616d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 583cb0b4-e543-40b7-8ac5-6a3dfa671c46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 273b15d8-fddb-4713-a173-06556612c37c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 5eb9fd71-2779-4ee1-aaab-da491f20508b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 b11d981b-542e-44d9-8aec-8e50b3057aae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 12ae2882-fd22-4f43-b468-0c8e04bfa66a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h564B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #88 5a3ad959-be3a-47b5-b0bb-144e6499d90a)");
unit.assert_eq16(16'h295B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #88 0b3fb837-5a6b-4c8b-a6fa-e4ca2f7ea8c9)");
unit.assert_eq16(16'h3C6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #88 e30f1a28-bdf0-43d2-861e-407d22489c5d)");
unit.assert_eq16(16'h1B8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #88 848db510-bddb-4f3f-9cfb-f1016113cd2c)");
unit.assert_eq16(16'h0E6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #88 f2aeac48-e0b0-4c7d-b81d-fa9813d35b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 4abdd8c3-4436-4e36-9097-01e8c905dba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 29015222-e143-4593-86dd-fc088692e51a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 ba640d5e-88db-4fad-96fc-ae005eb9af95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 a32f4f3b-a150-4df0-aa9d-4479d36e2414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 40bde28f-8d5f-4a2d-9328-b8a3d42aa13e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 85c14570-c567-402b-9d69-1484cbb63494)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC26B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h48BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #89 b693b4f6-9cf8-471b-8b7e-7731f303d2fa)");
unit.assert_eq16(16'h0EDB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #89 cc455077-a0b4-4582-968f-3bfa2bc48778)");
unit.assert_eq16(16'hCE0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #89 ee0e8e57-2a8b-4799-a90e-5012cda32457)");
unit.assert_eq16(16'h48BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #89 cd2fe3da-33fb-4494-ac67-f279ffa219bc)");
unit.assert_eq16(16'h0623, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #89 219c006d-d649-4b81-ae67-b7c2dfc4c085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 f11c4f4e-13bc-493b-a339-b91007a33d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 ba4c1b7f-4075-45a7-a7bf-f5e81510ec1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 46cd5d04-23d0-4661-bcfb-c373aa6d8219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 875480a2-da3a-49ae-b629-555e7b3ffc20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 805a4b57-6fad-4aa8-bfd9-de139963e63b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 3592d519-e17a-45d5-a157-3bbc6c35713a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0538;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC978;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF408;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0128;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #90 6af008a2-a9d9-484d-84d4-e4c0a588ac88)");
unit.assert_eq16(16'h173A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #90 8d54da43-0df9-40e2-913a-eec6856af0da)");
unit.assert_eq16(16'hC978, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #90 6ffceac1-eaa3-4349-9222-22acbe0b40b0)");
unit.assert_eq16(16'hF408, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #90 5b959c1f-063e-4394-a61a-e7a5b28a55b2)");
unit.assert_eq16(16'h012A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #90 0d9bb466-beba-4c7b-9ba1-d977e35aaf04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 a237f5fd-31dc-4403-8fe4-b7f4289446be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 7a48369f-caca-4e14-a40f-353f9008e733)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 3606481e-d9aa-45a4-8806-c00fdec2571a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 d0b5fc18-5781-4368-bcb1-bf1b9f493b84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 0337f532-9bc4-4aad-bbb5-38cf62e781f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 9f6379df-6205-4e2e-aad9-ab433c0f758e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB757;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h01B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD12D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #91 674c6c1e-3984-46ee-a3af-f90f15fa2206)");
unit.assert_eq16(16'h5176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #91 8c4ea081-1ace-4525-988c-0746059b5381)");
unit.assert_eq16(16'h01B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #91 a1f6f5aa-83ec-4314-a654-e8ba59dd8011)");
unit.assert_eq16(16'hD12D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #91 0d8192b8-0a89-4033-bddc-68d8eb8e6151)");
unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #91 fd8dd167-a248-4332-85ac-6025d3672c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 7953b4b9-7876-414f-89bb-32925a28d6dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 495cd7ed-c368-45e0-aef1-c48560cdcd84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 c6e4bb77-4ca3-4d82-9b6d-52bfc0372970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 d94bda24-1b05-4777-a560-019e17ec78a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 054a6b30-449b-4d45-8ba2-7f496054ade3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 d8596a15-8f36-43f5-840b-f8adaa12e61c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6AE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCFD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #92 6a769949-a63c-422e-bc9c-dfc8f47bb0d9)");
unit.assert_eq16(16'hB057, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #92 b8084624-ec46-4d69-9922-5a710c056fae)");
unit.assert_eq16(16'h8C54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #92 18add463-42a6-4593-a285-496989aab499)");
unit.assert_eq16(16'hCFD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #92 0a4e5e4f-c147-436d-9036-3a0ad7aee1ab)");
unit.assert_eq16(16'h00E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #92 0ce55955-83c6-4afb-8113-93895bf25b4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 eeea4c97-2803-4e88-8121-8e67089e0ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 4473d39a-52c0-4f95-a71a-68e32c8a9de3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 5a849235-d5ae-4345-84f5-5aa692ea97a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 a336b785-174f-4620-9293-aa6817a698f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 9f33300a-75a4-401e-a7ab-f5fb0cc884a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 8694b411-fdce-4bcf-b2a1-38a73151457e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h649E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #93 13211814-36f9-41f3-936d-6725d078c728)");
unit.assert_eq16(16'hDA68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #93 755510c2-f73d-4a6c-a5e3-2fdec79741f0)");
unit.assert_eq16(16'h649E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #93 4c53dd65-12af-4d4b-af1d-07060ec50f27)");
unit.assert_eq16(16'hDCDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #93 b5ed4c8d-1396-4b79-9796-74fe5f248892)");
unit.assert_eq16(16'h0A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #93 bba92415-764a-4f8e-931a-a566d33cf1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 ee70efe2-2c0c-4e9c-a0c3-c0bfb5753b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 45d20dde-ab10-47e3-a3fd-19ce14af55ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 bc7793df-1e6a-4a6d-8247-862e95ee53c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 a8283bf7-ad81-4038-84e3-2e8502f824f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 ce8861a4-52ec-4479-9703-d5b84b0daf7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 5ac28c90-b15e-41fa-bac1-c7a2a5299074)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8399;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h95E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #94 f4cc91fe-2633-4874-b351-c0d755ce8aab)");
unit.assert_eq16(16'hF2A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #94 70072592-ef0c-46c8-8ca9-6caaba786ccc)");
unit.assert_eq16(16'h8399, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #94 d53d5b77-9513-4d7e-90e3-90b1e2751d3c)");
unit.assert_eq16(16'h95E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #94 8f9f0443-73b9-492e-b808-097fa90e9f8b)");
unit.assert_eq16(16'h05A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #94 2bcac8cb-c25e-4082-8688-81cbdcb80b93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 27902b08-4292-4654-ae79-09335dbfa9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 394d1730-0a65-4356-b372-29d4a468e8f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 d585042e-3423-45c0-b756-ee620be1c406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 83b8b1df-da03-49c0-b55f-e1f82a660233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 21829b12-b5a1-4e34-a2d3-d909a2e07cbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 cb96e66d-ea1d-407c-8a96-a5cf5871b525)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h67F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2BAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h23D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h032B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #95 e8aacb6a-8d68-450b-b2f1-db047e2fd67c)");
unit.assert_eq16(16'hE5EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #95 a00c9fe6-ddf0-4e7d-ace8-6d8f84707c8a)");
unit.assert_eq16(16'h2BAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #95 7631b541-c955-4b5a-a411-79c0c70f7e40)");
unit.assert_eq16(16'h23D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #95 6dd803b7-e150-4b0b-b55c-a38278362e69)");
unit.assert_eq16(16'h032D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #95 4501785b-5861-4c2e-b60c-e526d9c2e52b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 86243a1d-c39c-4e0e-b5e6-2dfaf5510773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 77d71307-a2f8-46b8-bc7d-6ef7792090d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 91e372cf-d9ae-4f21-999e-6fb328fe1e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 8cc25714-1924-4626-bfda-bb94b6df7936)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 54bd61ec-3a96-4a62-9e60-91d7ee6b010a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 b349bbf0-bf6b-4254-a28e-7fe62d5a6feb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC7A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #96 ee9a4ba4-1b81-4dd3-83e8-3d3c391cd594)");
unit.assert_eq16(16'h0563, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #96 f6f6e06f-6d2d-488e-a64e-4ae9024dca42)");
unit.assert_eq16(16'hC7A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #96 49c5c650-64cc-442b-b42e-425d71cbf715)");
unit.assert_eq16(16'h58C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #96 54b28ba7-df03-4a49-876e-113a405dae5a)");
unit.assert_eq16(16'h0DDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #96 a7835458-6c8e-488e-80b3-194d1090a8aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 61e6064d-4987-472c-86a0-d3d7ab5a111a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 02a72569-8e9b-4352-a484-5e8cb3d0c4d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 e1d641ca-eaa5-4627-8426-3cac8e01851f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 17287291-898a-4787-b92c-97677689467f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 1124a421-9898-4261-b7d0-dc0af3bf6c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 4503ee8d-7168-4866-87a6-5e49398304b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1B6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h02CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBDAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #97 e1acf645-1e2c-4267-bf05-d36035553438)");
unit.assert_eq16(16'hF82E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #97 964c3959-8482-4cf8-80db-fd4acf855e50)");
unit.assert_eq16(16'h02CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #97 55842090-4eea-4397-a841-5a37b2ab4a3c)");
unit.assert_eq16(16'hBDAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #97 d2d88df4-28bd-4edf-9d05-0981fde9253a)");
unit.assert_eq16(16'h0BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #97 8ae5bf6e-80b5-4436-9a53-58b9c62025cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 0a7f5334-1af6-41b6-b569-ddd3a12202dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 ee8784f0-6191-49f9-9977-7b50c15721bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 f4545931-5653-4a7c-8c7b-52edd5ec0bc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 10e2d6b8-b56d-465c-93ef-35f2b885a788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 5d2015f5-872f-48a0-98cd-29e418ec7319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 c67b8e5e-c59c-4195-928f-dd4c9c457e09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC68F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7900;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #98 a69ae04e-bbbd-48ab-a970-f0b9380d1b8b)");
unit.assert_eq16(16'h77C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #98 f91afb50-1d2e-433c-a38d-4a0598137755)");
unit.assert_eq16(16'hC68F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #98 3825afce-48ed-4609-99fa-0655053c6f29)");
unit.assert_eq16(16'h7900, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #98 7d5b4f0f-6993-4e78-a399-b3e9fc9cfc29)");
unit.assert_eq16(16'h04BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #98 ac4eb6fd-ef8a-4f60-a3c0-090e4d36a3ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 a696314f-951f-4136-a5d7-5aca1297d4cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 00fa92d5-7338-4efb-a729-b3de0eaefa9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 b174b5d4-cc72-4903-ab59-ba39d3713a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 578bd962-15c6-425c-b103-d037a310896f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 78ced731-2fae-40f0-8f90-4006da749574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 99904f80-a091-4bf2-8779-744f042f6125)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h430A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCA78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1890;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0794;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #99 ab6f6fad-8b95-4be0-9325-8a2b9ded5733)");
unit.assert_eq16(16'hAF77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #99 eba7e3f6-8047-4714-9830-15c272e45133)");
unit.assert_eq16(16'hCA78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #99 629c4f0a-cec1-445b-8adc-5ecf7b888380)");
unit.assert_eq16(16'h1890, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #99 67405dbe-6dc5-4c3b-84b5-881a91abaec4)");
unit.assert_eq16(16'h0796, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #99 393bedf3-a4c3-473d-99aa-782f2ed8e850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 d46e43fd-97e9-4d5f-9a83-b5d559f4d252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 ba00203e-0df4-4c98-ae04-87e5ac0cf276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 0d6760bc-60d4-4dfb-99f6-1a2c7885a129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 279199e5-2959-4ace-ab87-8cc9cf98bd5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 e3b6f853-a5d0-4395-a433-4ebd3e8ce099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 91db524d-95fd-41e8-8603-970f9e70cd83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD5C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBAA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h911C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h087F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #100 b8330592-94b5-4bf2-957a-4b4fd1f76ddd)");
unit.assert_eq16(16'hFB22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #100 47e43436-ff97-490c-b06b-2b527ff8cf09)");
unit.assert_eq16(16'hBAA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #100 b0eab78d-f1ef-48c5-b2ed-3f11df633ff2)");
unit.assert_eq16(16'h911C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #100 4648ffd4-87d1-4198-a011-5129fe771ab3)");
unit.assert_eq16(16'h0881, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #100 c9646cf6-db3f-410e-a9b6-404277eaeeb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 e3163fbe-93ad-471d-a8f5-925c304b064f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 c5135fe3-5768-48e3-a396-97a4c7b15d2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 a32adb78-d3a3-49f8-8577-d393d52e16e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 3c6807d3-6f3f-4542-8bc0-d2b7d010346b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 b2e0a4d6-c951-4fac-8420-a866e633d095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 1cf70d04-7dab-4e13-be01-1bb854c5dde7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8990;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2EC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCEDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #101 e20d2faa-bafe-438c-a5c1-14439bf6e6ec)");
unit.assert_eq16(16'h5D5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #101 3c320f90-ebe8-4be3-af85-0b8377f4461b)");
unit.assert_eq16(16'h2EC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #101 9700cc8c-0099-4e14-8fcc-c46feab14923)");
unit.assert_eq16(16'hCEDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #101 5a4a5625-b3bf-4e3a-a046-ec27774f641d)");
unit.assert_eq16(16'h05EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #101 4cf438d1-4b82-4ed1-b17f-75ea28db1a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 4f78d442-fee7-4a1c-9ee6-3f280eed68b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 4a0a48f1-dc96-468c-aa48-bf59085ee786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 a4da0ded-b7a2-4f18-b4e8-33a6c42e75e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 37c07be9-58c2-433e-b050-ad3c867610da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 ee25370a-1c3c-4e2a-af52-42c7e37cdd33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 ffb4bba9-ed62-4d8a-bfa9-4727ccd3a438)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h316E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h757E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #102 dfc1c04a-aa1b-4f28-97c4-c4f45b7922dc)");
unit.assert_eq16(16'h313A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #102 4cac4c62-bac3-45a5-91ee-722e18bf0c9d)");
unit.assert_eq16(16'h316E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #102 8acb8f88-d9e4-41fb-9904-42bc15bf95ff)");
unit.assert_eq16(16'h757E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #102 9084255d-a71d-43c0-9556-55b639240165)");
unit.assert_eq16(16'h02B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #102 f5c4d7f5-c8cf-4e7e-acdc-b4acbe53c547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 77853081-c0c2-4a31-870d-0fa430a07d04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 cf4e8ad4-a30b-4488-b942-886cce9e412e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 1b5d31dd-bc22-4d86-a584-5bb5da902532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 15eb7c13-448c-43f1-9fe5-df203a3df3af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 6bb36588-457f-4c77-a0a2-6a0002ec0df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 bca332ed-71b8-49a2-97c3-1e28dd1428e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4BF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #103 1e910493-8f39-47be-a4d5-95d9ade0da98)");
unit.assert_eq16(16'h2AE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #103 02ff0a5f-0246-4e1a-9871-d0e9e9433662)");
unit.assert_eq16(16'h4BF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #103 7a3f1c69-1f68-4cf3-a07f-b2dffc218fae)");
unit.assert_eq16(16'h3881, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #103 006ac928-3159-454d-bd48-f1696a4c9652)");
unit.assert_eq16(16'h07FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #103 e62a96b7-3fc1-4004-90ca-dfcb183bf213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 97d2d4ef-8e46-4de3-ae7a-6e1bec0cc2b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 cbc0cd75-80a0-48b9-9093-08dacdd05f19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 664f3abc-7517-4a99-b2dd-da8390041a5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 5ca5c208-e6d8-4b2a-81fc-4884004c6696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 5250b7f2-ae5f-4467-89a3-c0f07d1b3f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 a3b3e707-9fd3-4894-8cf8-521d6e6e467f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5DFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAEB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0480;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #104 b2b4969d-92d2-4806-ad2e-7a73a373b5c7)");
unit.assert_eq16(16'h9C7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #104 f3b43bca-803c-4af2-b9ee-5cfa60f1f365)");
unit.assert_eq16(16'h5DFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #104 3deb1d6e-fd09-4eab-83e1-9c58e6b6aff3)");
unit.assert_eq16(16'hAEB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #104 2326c156-6aee-4ccb-9d60-4a0947e976fd)");
unit.assert_eq16(16'h0482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #104 11a0694d-afed-4b19-addf-8ab50eb81c53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 95f68e2b-7118-46fd-921c-b029e1643c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 62d2216a-232d-4889-ba6f-8d978d8ddaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 320b5796-944c-4908-b5e0-b9de2fe38caa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 87a6ae8f-e33b-463d-8f16-59c61a80874a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 28e4987d-44ca-4982-9ff0-a7b5de67dbcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 30282f45-6a1d-4255-a5d7-946e93fe8653)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h66D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA74C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h072C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #105 56caf5ea-ce65-4859-a0f9-81df85f64d2d)");
unit.assert_eq16(16'h79BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #105 49817695-6b90-4278-ac3a-5c32630bc86b)");
unit.assert_eq16(16'hD2C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #105 d237300a-7e68-45c7-aecc-1d8aeab2d7ed)");
unit.assert_eq16(16'hA74C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #105 9a364d15-5286-4de2-8ec3-0c7534dcab2f)");
unit.assert_eq16(16'h072E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #105 278d5331-6f82-4100-95b3-f7feaa204e29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 1163469e-05be-40f2-b1f7-dfa9e00fd429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 f4840d7b-935d-4a6d-b829-42f7faafbe82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 99371a00-721d-434d-bdf1-f1acd3c9961e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 15df5428-5fbe-4827-ba82-cf3b0d30f640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 db15b3f5-3b45-4b92-a14a-f832b3a6d533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 88796c7c-bf8f-437f-b46b-e87c06275a04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #106 d756102b-a065-40af-9d66-20b307184521)");
unit.assert_eq16(16'hFE0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #106 562f8e70-8481-4baf-a3dd-298dbe5df6f5)");
unit.assert_eq16(16'hBC49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #106 25964abc-b9af-4301-bdf3-eb19c4055620)");
unit.assert_eq16(16'h7CA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #106 5dd2d89a-5dde-409b-8f0f-43a547702471)");
unit.assert_eq16(16'h079E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #106 df18e46c-ff67-4968-b64e-3791325a1349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 99e0ba98-b38f-40da-9b78-a47366ebbad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 57956977-5187-4e4a-8f51-0a5f8fe00945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 85c62bc9-f457-4ebb-9f98-1be9ab52d9c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 27ad582e-728e-405e-8215-38bbcb171be5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 83738753-5673-47b7-b783-8f90e57c2bd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 881f52ff-ff6b-4f8c-bb2d-07f08afcbae6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h757C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h76D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #107 aed25282-a919-4b08-977a-0c99316fa031)");
unit.assert_eq16(16'h9DEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #107 4b377c84-2331-4082-8fdb-ee23ff4d7697)");
unit.assert_eq16(16'h757C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #107 146baf00-fc24-4125-ad92-3e5594f2eb1d)");
unit.assert_eq16(16'h76D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #107 c8923b96-323d-4b8c-a35b-1731a4ada78f)");
unit.assert_eq16(16'h0E66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #107 73eff17d-a41e-468f-8192-bfdba6d06cb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 066a01e6-dee3-496d-b3ba-88dfe4ab4009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 306a8bb5-e698-4948-ad0e-2b7bff3b2dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 46862266-6797-4ab2-ae42-5bbb69ad0e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 e13834ed-8177-45bb-8839-0c470257f26c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 c9a7f5a9-b43c-406f-a04d-4158e4ecd9da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 1f68e3a3-6e2f-4d2c-9942-bf6d56c6788a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEF25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h063A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #108 da0d1ad3-4ec8-4252-a591-26dba4a20891)");
unit.assert_eq16(16'hEC12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #108 023abdf8-0afa-4469-b2c4-7eb69b0f8961)");
unit.assert_eq16(16'h063A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #108 b2e6d0f5-5524-4697-ba9a-57288335c989)");
unit.assert_eq16(16'h0D9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #108 768cc08c-7919-41c4-b6b4-159bb21ca9fa)");
unit.assert_eq16(16'h0BD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #108 50380730-ee4e-4d83-afcf-a9f7fa27f27a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 686b791a-d0bf-44e3-a344-c392259ce9b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 41bcb917-33db-46fc-b2f0-63a5cdfd2f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 b79e2944-e5e9-4ab8-aefc-9d88197697d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 1e626502-57a0-49a1-93ba-764b0040d2cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 ccf8892a-def6-41ba-a4cd-5794ff501601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 273c3064-f346-475e-b1a9-f5c56e9a845a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9244;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #109 30224905-a7d3-4579-96b5-5cc1a7e1af45)");
unit.assert_eq16(16'hB420, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #109 841d8144-e46b-4870-af92-22cb144277f2)");
unit.assert_eq16(16'h9244, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #109 899e849b-5be6-4fa4-aff3-cc2ef3848b1e)");
unit.assert_eq16(16'hAB89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #109 a88b5b18-e55a-4601-b91c-81024955d1a3)");
unit.assert_eq16(16'h0AA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #109 d2c47009-60e4-421f-9597-762a16bd017f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 90248920-bc45-4a92-a837-4e6bb54a2b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 ef6945cd-cbb0-4e15-8696-ff0488304bd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 c5afd782-f9a3-4d17-8668-8bcb9daaafd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 9f96fe36-a3d0-46b2-b81c-931d0b67fb27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 0481c79f-2a62-4081-a85f-45eea3be2872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 38ca2890-0376-4782-94dc-b7ba19174f69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF9A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3B49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5751;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #110 dacca3f3-c575-43ed-96db-f5cec4a0486e)");
unit.assert_eq16(16'h51BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #110 b52be43c-cc81-4e67-b7f1-e64d91206002)");
unit.assert_eq16(16'h3B49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #110 39cdf969-e9d1-44d6-838f-a64ff0e2232d)");
unit.assert_eq16(16'h5751, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #110 45b6127d-1fd1-4a9c-8045-877e4953c0d8)");
unit.assert_eq16(16'h0B32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #110 a6e3b231-9fee-426d-a0d0-f77ca93414ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 6b1e66f6-0b3b-47d6-aa11-c8503c54b94a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 5a6b4bef-046a-42a5-842b-93d907612834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 88947b95-8135-440b-80c8-3ce6e64744da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 f6cb46a6-f5fc-4a90-ae2a-e0b8ff1fc0eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 b796844b-0823-4191-a8f9-333534afe54a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 56a4e428-e797-46a3-93bb-4c35f18a872a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE74B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAADE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h098F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #111 da112b05-bc3d-4ad5-801e-a35f848e0326)");
unit.assert_eq16(16'h7EBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #111 18768063-7237-49e9-8f65-324c71596037)");
unit.assert_eq16(16'hAADE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #111 3f49bafd-381b-4ba4-b8a9-6d549659b120)");
unit.assert_eq16(16'h098F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #111 44820503-1b0b-448d-aaa2-517c88526073)");
unit.assert_eq16(16'h06B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #111 f2ddaf3d-9102-4821-bbe3-3bb13991a850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 fa7936bc-c0c5-432b-bdef-8d3c694b0095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 c3b6f6c5-d1e9-4cab-86d6-8e8d9d10a75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 18bd820a-3250-4265-b5a3-8f51e3a4f7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 b9470131-2b99-43b4-8d33-aa0ace03b5f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 aa53ca39-840c-4c91-a1b4-3f354a4fa4db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 b63b7e68-2dd2-460a-9cea-fd21555b6f87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE82F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h928C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h794E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #112 b0bce55d-3774-4c0e-97b1-7554a5cea0df)");
unit.assert_eq16(16'h70C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #112 0a86a6f0-6d5e-48c1-92ab-6c3ab2b6826c)");
unit.assert_eq16(16'h928C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #112 7f3d714c-d885-4db5-acf0-aff16e5d74d5)");
unit.assert_eq16(16'h794E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #112 78dc52ea-7506-4bff-8a76-bfba0cecc73e)");
unit.assert_eq16(16'h0D8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #112 1f09b0d3-5607-4cce-b0a7-a627e9aef74a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 5ea93043-bfc3-404a-a1d7-23378df7fdbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 08cb22ef-234c-45f4-b804-ed86941b9bef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 6a7d9ba6-3c35-47b5-b784-ce903dcaa10c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 fcaa8214-96bc-4b3b-8656-500a39a39ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 31782337-b4a8-445d-a021-3edd1de027a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 e8ec7fba-79e5-4e8b-93c6-0758f627ab3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFAD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #113 a9b0c0fa-9eb8-4e5e-bf8c-e0964e621133)");
unit.assert_eq16(16'hE1FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #113 561ae2e6-042d-4b70-9b92-9c153e01c433)");
unit.assert_eq16(16'h4A49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #113 1a1d6b78-ee07-454f-8cbb-0d056bdab22d)");
unit.assert_eq16(16'h7CCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #113 43a6e775-d0bd-4e73-9fef-ea5174df99c8)");
unit.assert_eq16(16'h051F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #113 bb289d9b-1b0f-4c42-a86e-4101604ef75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 e33916ae-2135-4ccb-a405-f9dd640c62a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 7d1bf945-9e02-49cb-a311-7b2f27e053b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 4c825bec-42f9-4764-8b25-87ed4a9b257e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 96000b4a-d40c-4f7d-b710-08de5f75d29b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 6a8d3d95-00a1-4fe2-9367-9499ae0d4819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 a323d1a0-95c9-4906-80ea-25342eefd626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD867;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA06F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #114 f26e43f6-e11b-45af-8609-1b36cbfae247)");
unit.assert_eq16(16'h623A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #114 f730d2ce-3419-4f4d-a45d-3e22e935e140)");
unit.assert_eq16(16'h6A51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #114 b2a2f733-da3c-4cf0-961e-c86e72f1f235)");
unit.assert_eq16(16'hA06F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #114 454b28b6-b9fc-470a-a61d-ef5c9e51bed3)");
unit.assert_eq16(16'h0930, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #114 51bb5b33-c343-4393-b155-0d997fbd6b46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 cb8dd51f-a1b6-44a5-a3f4-c1016cee0aa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 30a361c8-42d1-4941-9613-71001bafb5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 aa3a441a-972d-4dfa-9dac-2185b903d4a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 2db902b5-c32f-4b65-b6a8-8fb7d367a000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 835bf966-9d0f-48f7-a6dc-9e511eedac70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 16e1564c-1e4b-4877-81cf-14e1fa4d31e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h48DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h091F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #115 df7d6b69-bb81-44a5-9606-a668a6989c64)");
unit.assert_eq16(16'hB8AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #115 37610a2a-eb71-4d6f-bdf3-faab13b0cb17)");
unit.assert_eq16(16'h48DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #115 8412ef93-ff9d-484e-ad42-7fd9b7c1a407)");
unit.assert_eq16(16'h091F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #115 cb2423fe-3a57-4330-8eed-9e7334d36e51)");
unit.assert_eq16(16'h04C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #115 bfa74036-decf-498c-a2a4-15c8e5dcb593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 d89e458d-8302-40c4-a8e7-b8f1df4da7e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 bea95165-a484-4ef9-a962-8d270dbaec3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 e609553d-5f4f-4215-b8df-0aed6b1e34ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 a1bc5684-9549-4f4c-b139-59d11bccb8e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 5f82a415-de8f-419b-81a3-44f7b42934b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 26951768-381a-4884-a869-6860ddfb443d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6A8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1956;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF99E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #116 25d0d865-3aa9-48ce-8ffa-37d0776fc821)");
unit.assert_eq16(16'hF5F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #116 0f3de686-3a1e-459c-8aaa-48f8cfcf5696)");
unit.assert_eq16(16'h1956, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #116 64f5340c-84a2-4645-89e1-b6e694dc40a5)");
unit.assert_eq16(16'hF99E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #116 aa0f6657-66c6-41fb-bef1-526fa904b767)");
unit.assert_eq16(16'h03F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #116 51d0040a-90eb-4f9d-a4db-f80ec5cfe685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 18edbdb9-bcf0-4338-a1bb-3c3f1d5deab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 12501fb3-e8c9-4baf-8f34-07ccf5233771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 4433a39a-73cd-45ec-ba82-07e59f3ec156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 9cb6c02a-880a-4d45-a348-57afa5cca281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 900dd4b8-0bee-4575-a675-863d44d1d510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 1144ecc3-b479-42e0-91cc-87d15df2e377)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDDFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h10FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA39B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #117 2fea93c5-e9ff-47ec-8b93-e37e3d4b0571)");
unit.assert_eq16(16'h2EB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #117 46dc7613-8efc-4659-b18f-8e6f0416e09d)");
unit.assert_eq16(16'h10FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #117 b584e894-256e-4db1-8e39-83e19350d524)");
unit.assert_eq16(16'hA39B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #117 7897cfb2-f3b3-4c76-b8ce-8dbbcf8b3c4f)");
unit.assert_eq16(16'h01C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #117 70447c10-9942-4ce5-bb13-5c2327bcb874)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 312b7898-0753-4bac-ace7-0979a9df8602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 a73c159d-54f4-410b-ab14-88ae460b1b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 af6a8810-4f84-4854-aac5-304075bc8d54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 716d4dc4-27f0-4168-8577-53942d079cd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 f9b30513-54a5-44d7-b3a7-89c363e88679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 319f11f0-3d8e-4b82-9dac-ca68acab3c58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2632;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA794;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0144;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #118 76765179-c838-417e-96ad-481f14e34f8b)");
unit.assert_eq16(16'h2242, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #118 9f64c7a1-eac0-4505-90d1-a040e872e7a6)");
unit.assert_eq16(16'hA794, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #118 ba429cde-8612-4268-95c6-cd2fbd83aff3)");
unit.assert_eq16(16'h2C01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #118 6d81a636-a08c-4506-9648-13cad465f80b)");
unit.assert_eq16(16'h0146, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #118 660a7f81-11f2-4c8f-97ae-f75fa3747189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 0ca78e9a-f548-41fd-8fee-565610b50c71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 7d7f8744-7b9d-40d8-953a-020c5418b8fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 f284c7af-d8d7-4372-9b49-35e6bf85fb6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 a0a4f1be-c752-4768-b2ad-ee6612ed6a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 27473487-82a3-48c2-a699-160d8e33f626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 ecf0fc98-031a-4bc9-96f2-138ce5c45df9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB4F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h478E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h094C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #119 714a0987-910b-4d5b-b62a-14a620aef71f)");
unit.assert_eq16(16'h8945, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #119 63d57aec-9ee0-4ac0-bcbd-03f2b0812be7)");
unit.assert_eq16(16'hB4F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #119 d638fff8-2ac2-4435-b4e9-99e744f71ca5)");
unit.assert_eq16(16'h478E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #119 b91152e1-7c13-49b1-90eb-e04be221cdb9)");
unit.assert_eq16(16'h094E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #119 d7bb627e-ce39-4148-87e8-8ec7174398d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 4df0f6dd-8abd-47dc-ae33-16898b8c6a27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 f845c3b2-ad62-407f-834a-6bc81d75a4fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 9f87d8aa-d087-4647-9b11-bf138c1932f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 31b7d242-5b98-457c-9c0a-0fac6b1606d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 3e75adf3-f5c7-4005-8dfc-91d229b3368b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 7af30f0d-a9e4-450c-ae6e-5ce978617f6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCAE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #120 b5536b83-89e1-4876-883c-fa788f500431)");
unit.assert_eq16(16'hC4B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #120 2c5ec7e9-622f-477d-892f-7dc5da33d887)");
unit.assert_eq16(16'h4D5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #120 9e335f1b-4b58-44fb-a363-fc7ae3999f6f)");
unit.assert_eq16(16'hCAE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #120 293f10cb-1507-4696-befb-7233ee69ce8c)");
unit.assert_eq16(16'h0696, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #120 83eb12c8-b09e-4a67-98e0-d1e8eeb9aa66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 8b72cf78-630d-4e38-94e7-fccda0a2cc0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 4bc0c68f-67b2-4038-bffd-281972b46a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 6a72be68-7e7a-4635-9e7a-d7ade0e165ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 023b70f1-ddc9-4630-8937-8b29d908c265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 9657acf5-f4e6-4d60-a0cb-5b83799712ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 d6f9441d-7bac-4a49-8f25-01264c6550ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCAFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9260;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h846E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #121 ab386431-e71e-4f65-8402-ec0da92ba505)");
unit.assert_eq16(16'h19C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #121 eef46db3-8fb1-4eb7-8d0d-c03783f73d8a)");
unit.assert_eq16(16'h9260, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #121 da53f3cf-5008-4c79-a893-d9b1d71546ca)");
unit.assert_eq16(16'h846E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #121 1b885601-c9cc-4361-9f06-b86ae2ee4c16)");
unit.assert_eq16(16'h0C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #121 df27003c-0350-435d-bef1-cff424ae0ab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 cf87e66f-86a5-49c3-be95-19d1ce6c7e95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 52724366-e9ed-41d6-b336-ef019f5261ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 7ac394d9-5533-41ee-9d6e-805cce78099a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 abfbb36b-f097-4a5e-885d-c628d14ecbfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 92e4cd65-6f10-496f-a908-6062a163fb0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 360cd962-8572-439b-afb3-9eb0b3d77455)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBBCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD761;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0451;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #122 dfc9ee78-bda3-4a98-930c-b043f88833ba)");
unit.assert_eq16(16'h9CB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #122 9325e08e-56af-4c0f-9254-12bdef8db94b)");
unit.assert_eq16(16'hBBCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #122 63a6268f-9334-46f6-abb3-a55c3534bc27)");
unit.assert_eq16(16'hD761, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #122 4ae6d160-3a12-417c-82d5-a42ae2ebad14)");
unit.assert_eq16(16'h0453, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #122 f9f8ea9f-c49a-46a9-a7eb-9b27495568aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 2e784cad-04fb-45bb-99f3-e29ee96c728b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 809da94c-c252-4b38-9c63-25d3f809caba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 d28c6050-1532-4c11-9dbd-2339a66be479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 315f42dc-d9b3-4aa4-974e-a147e7ed0f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 d31610c8-edc6-4bba-91ec-39114dae6c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 8c64a9e4-3944-4b93-a6d9-43f52dcce547)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h40B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h59B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE865;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #123 29ca4c11-e6bf-4815-882a-9b4c36027d60)");
unit.assert_eq16(16'h4BE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #123 e959002c-df2f-4cdb-bb60-51397f63894a)");
unit.assert_eq16(16'h59B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #123 c21b0ed9-b6b2-47af-9fe4-db23f77b18f5)");
unit.assert_eq16(16'hE865, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #123 b3e3447d-7137-4bb2-9f7f-896e743a78f2)");
unit.assert_eq16(16'h0CAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #123 b655ebac-6d3e-43ac-919e-11a9a5b2d383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 472b1018-6898-4bfc-9158-153c9858131d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 f5e5fed7-ad17-4c95-baed-236766af2ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 49cf8105-46b0-430a-b2af-ebcd1980bbeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 b555acff-1d5a-4d63-9066-7469cb34eb7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 e7f1ef6b-1c65-482f-8aa7-d042dded04fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 4ca1e2c6-90d4-42ef-811c-d9597611c3c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8AA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA6B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0129;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #124 cb84e276-5cde-473f-9465-312a8bb679ac)");
unit.assert_eq16(16'h67AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #124 e3d8b969-9eb2-4ff7-846c-0fa024a53a90)");
unit.assert_eq16(16'hA6B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #124 9a0001be-e952-4b6d-9ceb-aa044c1bf791)");
unit.assert_eq16(16'h0129, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #124 7e2e2942-5407-43c8-9bbc-49b4fa6c0805)");
unit.assert_eq16(16'h08FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #124 79e63c32-e54a-426e-bdce-a038c341c8f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 12a240df-ec7f-4006-bf90-4696f1a2d147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 b61d850f-d7d6-4ac5-bf46-44d2a46dc870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 a1c05cea-9e54-432a-a133-3817462dfd81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 d58eb17a-8c77-4fcb-9926-ffcec91ea311)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 19ca3159-d485-4e29-84f3-6201b396609a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 1147dcf2-d608-4320-b18b-6774e1c493a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6352;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2E2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2AA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0307;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #125 18f057e1-9446-44f0-96bb-a75f96cf8a4a)");
unit.assert_eq16(16'h0349, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #125 19792d56-7dad-4cc9-98a6-fc34611a9ba4)");
unit.assert_eq16(16'h2E2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #125 f96fda20-e179-4155-81c5-46ec7d1ea2e3)");
unit.assert_eq16(16'h2AA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #125 09256535-2ec4-4019-9ef2-70f76fd6b98e)");
unit.assert_eq16(16'h0309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #125 d1e45d4a-f21a-46ce-ae99-29df9d0143a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 d79774c5-70f0-4802-a0e3-e2994f16cedb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 2a5db482-c2a6-4f4c-914c-4666381996d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 29454ed3-2b84-4568-ae16-0afca23f4650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 763b3ed4-5cda-40bd-a3ad-1dfcf2d77249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 9b27c7a1-a4ef-48fa-b15a-a9eee32d68b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 c656cebe-6701-46e5-863b-79867ab972eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA773;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC940;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1851;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #126 0fcb825e-bb16-4120-9593-f2f4762dedfb)");
unit.assert_eq16(16'h2FD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #126 22a73e43-f21f-440c-88c2-ce8573533286)");
unit.assert_eq16(16'hC940, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #126 c2f70de9-1f0a-4f1d-92a0-496dc17f4784)");
unit.assert_eq16(16'h1851, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #126 f82598e0-ccba-474a-861d-663c7bc03a2b)");
unit.assert_eq16(16'h0C9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #126 09dffdd4-b3a0-4368-9b80-bf28dd774a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 3ffa4e71-d457-4094-ae78-ebaf8969928a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 b9bd8bd6-257d-41f2-bb25-dac8b2c37658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 7ccd0828-8388-4908-9ff9-c22cd8fa9ffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 53cf8c35-ffde-47ab-9370-bc0019c198d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 19599b9a-ce09-4c70-85af-8a95e717fc9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 9f1e4927-ad40-4761-9e70-0aab4c442618)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0392;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #127 8314b0d7-1140-462a-a69a-646ebcc18a53)");
unit.assert_eq16(16'hF4FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #127 c271df71-df49-403c-b1c6-513bb1dc4dd6)");
unit.assert_eq16(16'h6C1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #127 2c267652-27b2-4b97-ac3b-351d51b550c9)");
unit.assert_eq16(16'h7BEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #127 b2e32cf9-73bc-49c2-a010-759349df9d56)");
unit.assert_eq16(16'h0394, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #127 50cf02c2-947c-4ab7-afba-5b0ea9c42887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 2d4e611a-f44e-4bab-afe5-cbc8298e18b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 bb7818b7-5b0d-4008-83ca-11df8cc60e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 450aa7bb-e917-46f6-bd0a-07396e2b2d7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 a0cae253-b5e5-4b53-a8ce-695f4bd787b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 0f2bae36-1d80-4d8b-a169-f292a69343ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 9cc95c13-83c3-407d-a5ad-d22505213088)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD540;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFCEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4E71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0134;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #128 24dcf09c-4120-4526-9401-74ca5443c3f0)");
unit.assert_eq16(16'hF3CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #128 6474e4bd-c7a6-497c-94d3-faadbaa6b099)");
unit.assert_eq16(16'hFCEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #128 66a8ffe4-2477-4661-bcd1-7b64b3e092ec)");
unit.assert_eq16(16'h4E71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #128 fe941f19-beb5-4814-934b-13c6e725fcea)");
unit.assert_eq16(16'h0136, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #128 4053da3c-85ba-4ff4-ba5b-d7cc25e697b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 4e5fcad6-058d-4500-bc5e-577fe1c54d69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 3e315f5d-84ad-45ce-b586-9658f26be2c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 4bf3c1d6-31d0-4ef0-87fa-6cd38854e2f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 10d23e4f-a2d1-4fb8-96cd-b16f30f61822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 0d8e3261-d7c7-4712-ad28-b54c9365f81e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 57b8f557-9515-4417-9012-85ca8655ef62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFE27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC3A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h75D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #129 cc7d30a9-7dd7-4349-82a9-db019a0cf3a7)");
unit.assert_eq16(16'h516D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #129 bcf9bdb6-2e01-46c7-84a0-01e4479d7a02)");
unit.assert_eq16(16'hC3A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #129 8b798b15-da8a-4b3f-8705-10c9cf0fc74b)");
unit.assert_eq16(16'h75D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #129 39d8ee61-4202-453c-83a7-668afedf3651)");
unit.assert_eq16(16'h0ED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #129 1dc3ab53-889d-484c-ac21-a4436d1d4022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 6ca29f22-e84a-4e9c-bc0e-ec9e8d3d3ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 6d9db696-d825-4ce5-874d-a82071496dd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 57396fe9-3c34-4a81-ab47-4d2290417063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 3577f313-3f5c-4c0e-8e8c-8b4b2e78b4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 d1e72c6f-8152-453d-ad15-4a82facf9038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 c23705c4-4fbf-4e19-ba1c-6ca8eefee6a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7B42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7175;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0272;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #130 1da9e45b-b9d9-4cc7-b069-a7fb6deb08c9)");
unit.assert_eq16(16'hC250, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #130 d8e8ace6-0efa-4eec-bbe2-3c8fa3a088ba)");
unit.assert_eq16(16'h4F5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #130 923537bb-ff73-42d9-982e-a54a96e8abba)");
unit.assert_eq16(16'h7175, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #130 45f1042e-791d-40e2-bb1e-aeb209016531)");
unit.assert_eq16(16'h0274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #130 75fd6177-3c18-40f1-99d5-02e04cf20202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 83d77437-d73d-49f6-889b-d7a337194bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 4a181b5b-28f7-40e9-aaca-de2b22b12ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 7a892b0f-e569-4f6d-9def-6fd742212402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 c3ebf12d-52e2-4477-a569-d9c68db23deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 02af3c89-38d6-45b2-8e67-d1178080756e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 4a064339-fc14-45d7-841b-f58f92766590)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC926;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2B14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #131 2ed2c600-4112-4793-9792-5f2609480968)");
unit.assert_eq16(16'hB36A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #131 97ee1312-6946-4c71-a513-1d460f052852)");
unit.assert_eq16(16'h3E6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #131 13401c86-41e2-4fe1-8757-a3e0083bf5db)");
unit.assert_eq16(16'h2B14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #131 bd15f5d5-104e-4fd6-a6d7-fb03165f2cb5)");
unit.assert_eq16(16'h08EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #131 fca6c7d0-9c85-499f-a099-c69fe2106516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 5816ef90-dc49-4b03-b5fb-0d4a3e0894de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 feb72e09-8a2c-4fdf-8810-5545971d6ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 5846d22b-bb58-4281-af57-40eda5a43da8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 c148fc54-ef34-4c6e-93ee-dff69710853e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 61a98496-406c-4271-ba69-b0d83b309929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 ccfccc6f-5342-4d55-90f9-09995b6a56cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF30D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC713;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0770;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #132 edef01ba-5a67-4484-9149-57e385020459)");
unit.assert_eq16(16'h131D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #132 977a97b9-1f91-4a7f-9fc2-916e9c3d8314)");
unit.assert_eq16(16'h6A69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #132 6139c28a-93dd-4e19-ae06-00e1e1a135d5)");
unit.assert_eq16(16'hC713, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #132 7e1ec158-fcf7-4460-ad39-ae59ad544825)");
unit.assert_eq16(16'h0772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #132 75bf8e7f-ec38-4408-ab48-dfaea035b805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 89eacc58-1c3a-4cd1-9304-1cb26285de9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 266fed90-5cdb-4ab8-9d50-c435108233d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 32645485-9a4b-4a7e-a740-f84b5ad3eb51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 d790e814-9dbd-4314-aa33-01b4757e259f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 cdef2aab-eb5f-47e5-8f2d-9018745eec6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 353b7c79-d6c3-4e0f-ada9-fbca30a1ec1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4D0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h152A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #133 a01f0913-8338-4b98-bb3a-1b703b732c17)");
unit.assert_eq16(16'hEA4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #133 721aacd9-c92a-4abe-8aa2-f3a4015fc90b)");
unit.assert_eq16(16'h50C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #133 1f6349b2-6462-40f8-a5cb-ce3ba793aefd)");
unit.assert_eq16(16'h152A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #133 f5d7456d-54ee-48c8-aa81-d18ad05514ca)");
unit.assert_eq16(16'h09CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #133 bdf67353-f62e-4b2e-8708-5051bc4a0ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 6258d4a6-9fe9-4693-8f05-448274f40efc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 975a4f3b-4e75-4dcf-a61e-1aa641c36238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 fcaf708d-7b1f-4465-aeee-44a47c7301de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 a5bd91c7-d2b6-4e93-9c7b-ce9ec988a608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 34e775d9-d6a2-4c91-8b12-54e9ff23f6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 1ebe1df0-87b0-4931-84ad-0cc3134e0855)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h63D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0019;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #134 f6d80683-7729-4261-be50-dec1db6cba0b)");
unit.assert_eq16(16'h7F0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #134 3309a780-618a-4d83-ae0c-aa363642c2af)");
unit.assert_eq16(16'h9C44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #134 4b7a2c01-f1c0-4dae-b1ac-c3ccc9ff28bf)");
unit.assert_eq16(16'h0019, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #134 774e682a-0fd1-4117-985d-f0a68d50e0ac)");
unit.assert_eq16(16'h0DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #134 44c8d199-92ac-4e60-9479-6899e5c9e056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 e37d47fa-f8b8-41e6-aa63-84467f13ae59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 f52a52ba-0682-4af0-88e1-da8013a147a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 db47e937-547c-40a8-a7c3-188ec24a25d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 f554ab02-4c3c-46b4-815b-a331b8f27781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 987a30de-084c-49de-9952-df9b4602a494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 b1222346-6410-4b5a-bc39-68081b9317d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h22BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBED9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hECC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0243;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #135 6586d61a-be8c-4003-b864-63f107e985e7)");
unit.assert_eq16(16'h27A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #135 a72a595a-fc2d-42d4-a7c9-977b601980cf)");
unit.assert_eq16(16'hBED9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #135 5dfd1cf4-16ea-4036-ba06-2a5bce14a0b6)");
unit.assert_eq16(16'hECC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #135 a02f2915-fc3f-495d-a192-893f13010604)");
unit.assert_eq16(16'h0245, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #135 f238e8d6-fe7e-4180-9c36-e1b09b8acff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 aea1d5cd-9b2f-4488-af2c-3bbde2f5787b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 1a228824-d70a-4391-ac26-8f61d382dd33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 bfd45259-392c-4cad-957f-d85656dd4b62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 38b16e99-4db7-4c15-a6af-adfbdf80f959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 47566b20-856b-480b-bb35-e04520601d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 43b319ac-4f41-473d-ba56-fac92b570d60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7DFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3B1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #136 d9820fad-1159-4b23-afea-19a2d6aa6c61)");
unit.assert_eq16(16'hF26C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #136 09f6c920-3306-4d43-9a6d-3e9daba193ac)");
unit.assert_eq16(16'h3B1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #136 16ba90a2-c5a3-46e3-b851-1d496e08d838)");
unit.assert_eq16(16'h1C0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #136 2363381c-5bda-4e91-922e-77ba78fa5882)");
unit.assert_eq16(16'h0B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #136 feb70630-cc61-4c90-9ef7-3017f0348bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 7891498b-c2ef-4814-b997-ec3ad6a01c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 28c824a1-dd57-4b64-a4b8-4a5c7725408a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 f8a07940-d42f-4d64-9b9f-22c82998fb7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 aa3509fc-0071-4f99-a1ba-5d14be94be47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 8f6a7084-6db3-4bab-8d2f-a838b4f392f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 9f00918f-8a2a-4678-a8fc-d50b44d2c688)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3823;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9547;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #137 9f9c7f23-787f-4b98-ad66-56a154d701ff)");
unit.assert_eq16(16'hEB15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #137 77768da3-cb88-410a-ac5e-c5ec40df447b)");
unit.assert_eq16(16'hF9A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #137 c9c1efa7-92f7-49fe-9dfa-79b0c890ddde)");
unit.assert_eq16(16'h9547, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #137 c2cee7c1-ba72-44cb-b012-9a23a5d602d1)");
unit.assert_eq16(16'h04F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #137 81430970-5cdf-46d9-bb1f-e7938e6d8e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 32d4f5ec-12ae-4ded-9db2-19ee385251cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 2e1887df-5f36-4130-8563-e849dd367220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 ac7f3509-9180-434b-9510-ec0c469daf9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 995b8924-33a9-4c14-ad1d-f9b9f35fda7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 4f4b83f5-ae0c-4b4e-a39d-f9f3c6611479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 e2ba73dd-909e-4ed0-bfc4-a323752bb65c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h62C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE517;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB4A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #138 4bf8087b-886f-45ea-85ab-03ac71cb923d)");
unit.assert_eq16(16'h2C63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #138 a5440b84-2d07-445c-afbb-1f27ec45fa15)");
unit.assert_eq16(16'hE517, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #138 c3c06422-e336-49c5-ba8e-e747cdc4fb67)");
unit.assert_eq16(16'hB4A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #138 ab8d4e51-7282-444c-a510-2a88bb3d24fe)");
unit.assert_eq16(16'h0BC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #138 abfe6d67-d267-4c84-8595-6851bc5bfa6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 afbfe9ac-69de-4f4f-9bba-589922d59821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 fed95bf9-500f-47c9-b4df-049f3e237d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 ba05fc9c-c602-4d0a-a3ff-1141fcc11dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 8fc26c97-a838-4d43-9eac-8ee18bdfdffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 ceceb2d5-d797-49c4-a44c-d28207c7f385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 5a895ad0-51e8-4d5e-b65b-7cc267d800dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCFDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h97A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA2B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0877;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #139 02242132-96b0-424f-9e4f-23cae57374fc)");
unit.assert_eq16(16'h64A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #139 8d27a00d-e629-42ec-a661-340f2fa22d9f)");
unit.assert_eq16(16'h97A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #139 a4b72fb1-edb1-4687-b6f4-801c48e773b8)");
unit.assert_eq16(16'hA2B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #139 f460bda0-180c-40f3-9067-51aa98445aaf)");
unit.assert_eq16(16'h0879, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #139 d08b4040-dcda-4768-b418-5bdb6998d8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 7167813b-e5b2-4f80-a960-02f6a0b617f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 0a556277-089d-46f0-8bc9-df5024f191ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 64af2137-c0ca-42b7-8f70-e188538e925a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 039e98fa-bd66-40f5-aa13-2f629a8734c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 02e72f17-b0a0-4b34-9711-97ecade26cb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 e3f79c95-a8e3-410e-98e4-8b752ce144be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h75F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD402;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0294;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #140 eac441df-a2cc-461a-827f-34a716c9482f)");
unit.assert_eq16(16'h4570, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #140 2a5566f9-617a-4152-8465-11297846021d)");
unit.assert_eq16(16'h75F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #140 15a5a038-cfd2-4f6d-adef-dbc6f757312d)");
unit.assert_eq16(16'hD402, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #140 ed403115-2e3a-4001-9ac1-f8597c6566f5)");
unit.assert_eq16(16'h0296, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #140 083b0d7a-c5be-4e79-a228-1596084171c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 66cb9835-f82a-4e51-8ef4-5c86dc8de55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 32969ce5-afa4-4f61-ace5-8229b784c236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 a1dbf6bb-d30c-44c8-bf1a-602fef17748e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 52c61940-aee7-4747-b292-b6157956e4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 ec51c431-36b2-49b0-8ce1-084bdbc97661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 8c524261-df64-42b0-9bb4-0147cdf4d9c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6245;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5AA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #141 ccc2d62e-2104-4067-9b58-1b2fdf78239e)");
unit.assert_eq16(16'hE3FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #141 ada9cae6-ee70-4096-9050-96c5201914c1)");
unit.assert_eq16(16'h5AA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #141 e030bb09-a37b-48c7-b5f8-084c7be4f32e)");
unit.assert_eq16(16'hFE94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #141 9e59ead0-ef42-430e-bfb6-79b8891aa93c)");
unit.assert_eq16(16'h0FEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #141 972a9d03-bba1-4265-9231-5ccc56418142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 25299109-f7a5-424e-83b6-256e1689dd10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 4a9ef7ae-5ef5-42ae-821e-fd57898a3aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 14a7ff85-df68-4895-af09-878fceb31c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 31c26182-0f1e-4f71-b41c-06ae01c1aee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 3d585ec0-b607-44ad-adde-740e549ada23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 b00c8d06-a827-46fa-8ca9-8794b5ba429a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h33F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4856;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0957;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #142 500bac57-8d5e-4499-bd4b-e509cadadf00)");
unit.assert_eq16(16'hF895, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #142 1478adad-02ba-4b74-8af5-6d3de6bc3efa)");
unit.assert_eq16(16'hCC8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #142 e3746b3e-a5d0-4552-b1ac-610154654386)");
unit.assert_eq16(16'h4856, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #142 902fba01-a9a9-44a1-8475-147db2a60a84)");
unit.assert_eq16(16'h0959, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #142 af626290-86f2-44fc-8cb0-1549721743ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 4ab9395e-7497-470e-8b5a-6c311568167b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 864cc29f-72d5-47a0-8123-1bd7156474e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 d2160ff6-8235-47ad-9efe-334cb3f0f5ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 e309baaa-cf5f-4bbe-84f7-d3c66bffdc1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 8d995c69-d02f-4282-8ab3-91778c4a6308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 e5b7a255-2f0a-4eef-8f44-764264929c57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9ACC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h95C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #143 7d22ebde-8f6b-4178-b80a-be6ff7025f1d)");
unit.assert_eq16(16'h56AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #143 6e421492-bedc-4554-b104-1c969e7fc0b2)");
unit.assert_eq16(16'h95C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #143 e2167d9c-9254-4901-87c6-8e51960de17a)");
unit.assert_eq16(16'h2F5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #143 de08c3c7-75c3-4ea9-a3af-cf1ade7facb8)");
unit.assert_eq16(16'h0E6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #143 6b7db1a5-8b31-4f80-9d68-732ada3f43eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 0cffddac-1fbc-4e60-bc58-42abc92cc0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 b10ba731-7b2d-4bc0-ab71-c2152668e0e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 d66dcb02-acdb-476c-b781-c5958f01cda5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 e6aeb8cd-c75d-40e1-9158-7feeb392bfd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 3e2f1c3d-3cb1-455a-aa2b-9987006aa7cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 b72b5204-24d3-4f0b-ae9c-2f6a9b0aedee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h48FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h31D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6FE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0226;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #144 d48dcff0-5f43-4591-8e10-02141e7d334b)");
unit.assert_eq16(16'h33BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #144 31b46cf0-104b-4924-b1e7-927916e3b6aa)");
unit.assert_eq16(16'h31D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #144 2f210f00-c419-4311-890b-46a2fdbf493a)");
unit.assert_eq16(16'h6FE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #144 d7b0bccd-f30b-45a7-b9f0-435e2da88583)");
unit.assert_eq16(16'h0228, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #144 db9b2a79-a614-4e9d-af30-0dcc070bae62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 e6271158-d52f-4745-b4d5-da2f6c95b088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 8baa7fde-53d3-43e7-9f6d-0f6f0b77e089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 b9b995c9-21b1-4d12-98b3-e87732f4062a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 f62ebd17-b5f2-40bc-bb07-20d50fa49083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 132f3ce2-b57e-43c8-a6bc-d621f9fd4c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 8d2db1ff-9a27-4afd-b02b-d9167a5ebb4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB454;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD87A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #145 2e0070b9-5d0b-4bcb-84de-2f49e15292a5)");
unit.assert_eq16(16'h93E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #145 5395a8e1-4db1-4e78-804a-25a790bd8fc3)");
unit.assert_eq16(16'hB454, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #145 7b5d4169-3c24-44ec-8661-37115ac8562d)");
unit.assert_eq16(16'hD87A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #145 b57a7fe1-396c-460d-ae12-70e9e11ff6ca)");
unit.assert_eq16(16'h0B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #145 16e47cda-7b9d-4bf6-a1f9-5df895d12bef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 a5ceb3c9-5d6a-4274-96b1-fa1c2a9546ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 6912eaf5-bbb1-40e5-9d23-1af9d00fbcdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 4d659c5a-e325-4996-8ded-29ab428bdd25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 51523270-f437-4ceb-8b09-2c50847e0a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 46797807-3d0f-42c0-875b-c63c6adf6609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 d68e2512-f157-4d5a-9ca6-23d820049a62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1383;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h985E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAAA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #146 0073f626-689d-478d-a430-756c8abeb1e1)");
unit.assert_eq16(16'h912F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #146 ddcfc351-98c5-4d5d-bb7f-30d60ac1d4d8)");
unit.assert_eq16(16'h985E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #146 82972d58-1709-4375-9855-aa7afdec434e)");
unit.assert_eq16(16'hAAA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #146 e4365ce5-8d44-4563-bb90-a09c80af6967)");
unit.assert_eq16(16'h0F2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #146 3cc8bf00-c68c-4edb-8ef2-6ad534d24857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 0bfab93f-5f52-4c31-8ecc-3b9193b4ed78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 984a0a97-460c-4b3d-8744-fdd2104eb522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 48867515-c031-405b-863b-88f2a79c9c06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 6fdff083-6158-4fda-8cb1-3c0e45358c81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 91f7abe4-2fb7-4216-a69b-db9fcb46513d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 df1b30cc-c307-4ed3-b499-5b4147bf5ca4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h031B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC4AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #147 139b1885-cdce-4e27-85c9-2178cdb51dee)");
unit.assert_eq16(16'hD200, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #147 c12996b1-3c9a-4db1-841a-d0db234e9424)");
unit.assert_eq16(16'h031B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #147 7d2be1a8-4d5b-4cc1-bb28-f26c070b0fb1)");
unit.assert_eq16(16'hC4AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #147 934f09da-6645-493d-9e57-4e4e61a55ece)");
unit.assert_eq16(16'h0C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #147 19e75ad3-4ad4-4a56-a9ec-cda4fbe4d72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 92feb860-3ae9-47d0-b1ad-7f1300fa4507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 7f274a6b-798a-46d2-b712-1b063d4eb822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 8de4c4a3-72b2-4c39-b758-54ade13b4262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 22627d9d-c1bc-482e-b604-081d0fa679d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 10554f5c-6b45-4e17-93f0-59609da5a360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 bc87292f-2b02-4e08-8718-34d5067c5483)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAB08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6728;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #148 03dd830f-f6a3-48b1-906f-3dd77254bf21)");
unit.assert_eq16(16'hF868, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #148 366cb00a-eb3c-4cc4-84db-4f6cfdb7e4f6)");
unit.assert_eq16(16'h6728, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #148 d354d1c5-5d45-4aaf-9205-79c767a1851d)");
unit.assert_eq16(16'h5D8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #148 ef2ed04a-000a-4db4-8ae3-421ee2cc2110)");
unit.assert_eq16(16'h053F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #148 c5c12a83-2a7d-4d86-bd99-f4509d00ed66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 99f8ea6e-7df0-4007-9751-d3258f0bbe1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 6e261595-1343-43c7-a500-0b746d81197c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 4d32ef6a-65c2-4995-9f47-0c6848fa39e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 ec92cff2-f390-49c0-a209-6ff8098bf779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 76d9d318-cbfe-46f5-a487-b82240a55ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 8128f947-5de9-46d2-927a-25888ffdf20b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h26CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCFD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #149 c9f55b8a-4db9-4d52-a062-13deab849e35)");
unit.assert_eq16(16'hF0F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #149 c01d6510-32be-46c0-8ed2-f847e874dc9b)");
unit.assert_eq16(16'h26CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #149 b649df74-04ef-4ee5-9b70-2f5c4db62c82)");
unit.assert_eq16(16'hCFD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #149 d70818e8-c2cd-4173-95b6-be451f9c5e55)");
unit.assert_eq16(16'h05FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #149 5c075fb1-5106-402b-ac3b-3f239fb42fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 ba76b356-e8cb-44c6-aff6-b13b5073ab6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 6be5ef97-807e-4ecd-87ec-dc168342a35a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 b5db3cff-b4f9-4fe4-8959-769ac3cb2805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 e39717fe-275c-485f-93be-29d4beaf6e9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 fa928156-ac69-491d-bcd6-f6f3daf5da33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 30b55538-d510-4f61-8b83-b1ed4ac353c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1336;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h31CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA289;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #150 72f36e6e-4ae2-442f-9eea-06f9d212da71)");
unit.assert_eq16(16'hEA85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #150 bad6d7c8-8bbe-4fd7-807f-c98435cd5746)");
unit.assert_eq16(16'h31CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #150 9bab2cd3-1d19-45d4-bf8f-b262135e510c)");
unit.assert_eq16(16'hA289, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #150 6535ec4f-e005-4694-8761-180220389827)");
unit.assert_eq16(16'h09BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #150 989843c9-ef97-4d14-843a-4164f087ab9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 6728a00d-fbce-46d1-9e1e-263571e49433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 fe892869-0de4-4d3b-bb38-6446bebbb4ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 60f65e56-2ce6-4a1f-ab0e-7df7578cb0b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 a6d8a6d3-c3b1-4f16-a9c1-738b5555d5a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 b6a47b5c-e87e-47cd-8800-4f92fc764910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 d8479636-89ad-469f-884b-00bdd656809a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB18B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #151 abe71d0a-f773-497a-b2f2-9e64c80374d3)");
unit.assert_eq16(16'h66C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #151 9e4d368a-2505-44b4-9039-41b1f589c880)");
unit.assert_eq16(16'hEBD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #151 02793995-6a67-4f73-9c0c-21ab84e5a1d1)");
unit.assert_eq16(16'hAC2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #151 77952085-f114-40b3-86d5-5b2abccf0f94)");
unit.assert_eq16(16'h06F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #151 2f4100e9-4cb4-4c7a-82f3-044823601e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 0726fb0b-9263-42b7-bc3c-1654501e6b14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 b35aae1d-90f7-42e2-ac03-7915b4b1164b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 c92fe556-9416-4f76-8dbe-c17db1bfb276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 f6a867cf-4463-4fbc-8151-1b817445a0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 5a068c94-8488-4c54-9055-55bc5956ce35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 4c080422-103f-4774-95b3-acaed4d05e65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #152 4490b625-5fcb-407f-8aad-1d17447ff925)");
unit.assert_eq16(16'h346D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #152 27317f67-a05c-430c-a660-4bab7e77f489)");
unit.assert_eq16(16'h50CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #152 ba644ad9-fdb0-4d60-8dd2-dedd7e3d8d16)");
unit.assert_eq16(16'h0B60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #152 f150aae6-7dbf-48d9-abac-d10b85d7508d)");
unit.assert_eq16(16'h06D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #152 a08e49af-2d65-452a-a589-76409a061ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 25b2cdb5-8ce2-44aa-8636-ae54e9cecf7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 4be0ea22-62d8-4eb1-a716-3c18742b7559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 12227178-1a9f-4d52-b0e1-5371c88dbdcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 73adc764-f9f0-48cf-96a1-eb0b00ebd6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 12496f3b-1bae-463c-9f39-83006119b3d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 7f53a0d1-6b47-4e2d-b26a-4c1351852498)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5EB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC13D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0391;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #153 5602e2d0-43c6-4ad0-b8e7-f31919e39437)");
unit.assert_eq16(16'hFE3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #153 0e6c8dad-adc3-4e33-8980-a1aaf6aceb44)");
unit.assert_eq16(16'hC13D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #153 9ceab61f-401a-44fb-903c-fd39b5d60418)");
unit.assert_eq16(16'h7A7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #153 00911a99-8e07-4c79-9034-7e267ee60e2a)");
unit.assert_eq16(16'h0393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #153 37b0ea6e-974e-4c17-a9f2-fc8e60cedf57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 f9bec634-85b3-4cc8-aff1-ed790cf78c3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 7eaeb3c3-34d4-4980-b392-f65f5ff17d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 902e220d-2329-454d-afe8-b890b5bca01b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 1c0a16d4-2c5a-469c-866f-c102b3c3a154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 fad63465-c134-455f-b333-b8730cb31e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 f5f5f059-c3f3-4918-8ce7-229ccfef01cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h748D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6FDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h50E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0527;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #154 4d5078d3-9178-4317-ae08-91b85015b2f6)");
unit.assert_eq16(16'h6901, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #154 5f79b754-76d2-4980-9673-bc7a73fbbfdd)");
unit.assert_eq16(16'h6FDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #154 6ed31610-f21f-401c-97a2-61c0277e31f7)");
unit.assert_eq16(16'h50E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #154 e1fd9e1a-cf35-44b3-9be1-1bf12c42d5b3)");
unit.assert_eq16(16'h0529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #154 61758b05-3a06-4c46-9c5d-34453202d9b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 e95d95be-9223-42ef-885d-f23f85a26dfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 91d7fc02-c226-4f09-9bda-4f958363c4b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 f7ded7c1-7c17-4f44-9444-a31b42816497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 9ae5deba-a860-4b1a-846b-21e75aa87075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 217b07c3-b49a-4233-ab0a-4832b8269151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 eab308bf-2b85-4b42-a4c8-ac969054bdce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA34A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE082;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h666E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #155 f492801e-9451-425c-8221-fa8a6e5fc26d)");
unit.assert_eq16(16'h9427, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #155 7f6d2e5b-005d-445e-948b-320b63fe646c)");
unit.assert_eq16(16'hE082, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #155 73e3afa9-5316-452c-9b8f-99bf8337949f)");
unit.assert_eq16(16'h666E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #155 705dfc54-79cd-49f8-ab03-1f8ebd1ef466)");
unit.assert_eq16(16'h00DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #155 c514adba-7966-4b75-b773-83ee2456c5d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 a4155630-c49d-40f6-b7c3-6ddd42d246d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 c7c4f496-9c50-42c3-a269-65a8b8eba9c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 d43d68f7-1b6e-47d2-8163-5d093734a7f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 5a675a13-77cd-4867-95de-14ccbd07a6c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 ef519e28-c469-4504-97cf-d3bb6e02b31d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 ff020b73-040c-4787-9718-df4a52a8e665)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5476;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h625F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #156 e36e3910-e4b3-4351-acac-8d1c94b7dbee)");
unit.assert_eq16(16'hE4AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #156 fc5c7985-8710-478b-b730-91bef04dbb96)");
unit.assert_eq16(16'h5476, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #156 5a4864a9-1be5-46a7-b0ca-3c403ba8db71)");
unit.assert_eq16(16'h625F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #156 3a6cfa5c-fd43-4ffd-a2b9-3f3b6c2a9a3f)");
unit.assert_eq16(16'h0B42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #156 88ac54af-4d0e-4814-a2a3-8448e80a1481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 9df2d842-ca00-4dca-bf14-f94829fa4e72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 fd3fe30c-c857-4a55-8dec-cb105c9bb300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 426cde9d-1c0f-47cf-aa31-7ca0e65e374f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 bdb0f888-5a72-4946-8b7c-d3bfebdb0bd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 78a92e30-4c7d-4e01-9295-6e5f3b6d06d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 bffee7df-76d9-48fd-98c9-0ffafa7b86a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0055;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB46A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #157 dfc9c68a-697b-41c1-b68c-dba076189984)");
unit.assert_eq16(16'h6B1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #157 8b53cc32-b3f4-4d75-941f-6321adf5c313)");
unit.assert_eq16(16'h0055, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #157 ea934709-308f-46ee-bd5f-724e43c82ecf)");
unit.assert_eq16(16'hB46A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #157 37759b03-f397-42c1-9c6b-de0f9e507251)");
unit.assert_eq16(16'h0B08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #157 1bf1b10b-745a-4548-9c93-f0562bc9ed1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 802c586a-5405-46b1-9067-ebb0dcc493f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 8dce4247-1d3a-4be6-aa8c-fbbb4d1c896b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 fe952c39-ea36-49a1-ac28-ecadff4d3887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 5f07946d-c4b9-4722-977f-99f0738c1e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 e2be0a25-148c-49c2-bd6b-51fcbebe702d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 b9f2f77a-986c-4898-9ca3-20162efafe54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h33B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9527;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC903;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #158 b0afbdbc-112b-49b0-8287-2f5b8b7e8355)");
unit.assert_eq16(16'h46F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #158 b4935abc-f4e7-4219-bd73-b8391600f07b)");
unit.assert_eq16(16'h9527, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #158 8106177c-d461-41dd-9858-cd094b3cda84)");
unit.assert_eq16(16'hC903, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #158 9cc01a3f-9dab-4a17-859f-c278a2ebc5d9)");
unit.assert_eq16(16'h0A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #158 104176d4-eb2e-43b5-9d54-f7977db7e490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 4503d73d-3a27-412a-97e5-02fe80a9901e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 e8dd7e2e-0dc1-49fd-8125-63efe099ee51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 6e09bb1a-3d48-4673-8beb-877a41bfc6ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 9079efc8-78bb-4edf-8a19-27b293482558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 8d49b20c-658d-4227-a16a-cfbbb366de66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 f8253603-509d-4b03-b6bd-e96628dad92d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA76C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h43FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h008D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #159 3d546eff-127b-4d69-90f6-03304ae219ac)");
unit.assert_eq16(16'h9225, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #159 de9d0eb9-2ac5-4bcf-9020-6b4b935f125c)");
unit.assert_eq16(16'h43FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #159 593048cd-9829-4c82-ae6f-5f4092baf5ff)");
unit.assert_eq16(16'h0C11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #159 56933855-5f58-499f-b930-98a0ba809524)");
unit.assert_eq16(16'h008F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #159 4261f1c7-44be-4b04-a407-d0347e3c4109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 d28390de-75f4-4cda-a514-b0cf7c90ba2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 4d760ea5-5ad8-4cfd-92d4-c11b913c0544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 9deede59-f446-4a0e-8e07-e95ff0add392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 c0f4b4dc-5f90-4896-a6b3-f3e537feafce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 23aae43e-2e01-408d-a3ff-e3a9523c807b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 23d8e217-ef56-4c12-94f0-be2740cb9f69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3828;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h059B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #160 8b2dac58-c833-4dc0-ab01-f31cebc83e7a)");
unit.assert_eq16(16'hA110, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #160 6036b2fd-2488-4c84-bcd2-f5ea97f2e996)");
unit.assert_eq16(16'hFA93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #160 4068c1b0-3c4d-48bc-ba65-bb6e7002a1ad)");
unit.assert_eq16(16'h3828, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #160 68e5b28e-a201-4904-9004-f3a3b728119d)");
unit.assert_eq16(16'h059D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #160 4e56af05-d44a-416f-a7b0-cd492cb113bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 fb4e6467-8ecb-4ab3-bd81-ace815eb39bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 ad0fbb8f-3385-4847-a6f0-3cd6dbf4960a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 0c9a76f4-9e0e-4792-957d-c5705e29b59d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 0f4b69a7-45b6-4daf-9dca-207d8b61d4c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 eccf9308-1666-40c4-99a4-0d708f5e5646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 e05dc4ce-b786-4b43-9128-4cf314ba950b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4979;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA103;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #161 8b9f58dd-c945-4e18-b4d9-9ab950916a5f)");
unit.assert_eq16(16'h393A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #161 6ec950cb-773b-41a1-9c52-74cae0b2aef0)");
unit.assert_eq16(16'hA103, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #161 b08e0f99-7623-48cb-be88-1b86f3a72f68)");
unit.assert_eq16(16'h47AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #161 983f814e-b8ba-46b9-a03e-5287e77fe4ab)");
unit.assert_eq16(16'h0FCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #161 d6447962-f7d3-425e-845b-f906f91577f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 9abe9f9a-7eb2-49ba-a025-316cdd0c0908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 cc584c36-3fff-4beb-83bc-da29bbdfa675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 4629b44e-c5f8-4c77-afa3-1667726ad6b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 a22f7331-1887-4508-8f1b-315702cade69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 496cddef-29d1-40de-a5b7-af5bdb71a3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 65a237f2-43ac-49e8-9915-01a2313ef7ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1D59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1083;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0608;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #162 3519d4d1-170a-4e9a-b88d-2217c270241f)");
unit.assert_eq16(16'hC8FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #162 1eecb36a-d162-45fd-98bc-df66a3073f58)");
unit.assert_eq16(16'h1083, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #162 72de0e77-ae9a-48da-84a2-6b18fa8aee66)");
unit.assert_eq16(16'h9DC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #162 7076184f-fbea-48ac-b059-7d37837953d3)");
unit.assert_eq16(16'h060A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #162 3a24049e-8ebc-4651-a1ea-d54ccd7f43ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 53519c53-e797-42cc-a78a-b5131d8102e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 c0aaf3a1-a552-48aa-ba4a-484b9fa68c21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 4a70477a-06a3-4649-a37d-d02ee3112cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 dd389263-e792-4600-a863-7065df342c2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 ca19e836-d450-4c28-a5cf-35a72b7a29c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 86ab59cd-92ea-4e60-83e3-87b978862588)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE765;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h580F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0954;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #163 d5d9fc89-ca1c-4d9f-b723-f17a732324eb)");
unit.assert_eq16(16'h7672, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #163 3d8d7585-9447-4145-b559-3a9bda0a3df3)");
unit.assert_eq16(16'h580F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #163 47a43c70-d3b4-4451-a312-0f52fd25fea9)");
unit.assert_eq16(16'h9FE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #163 77c1d2b4-7444-4d32-9908-cc7b2414d4d8)");
unit.assert_eq16(16'h0956, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #163 4f84aaa7-a384-4fae-9f2f-3d132b857938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 2219632c-1655-4cca-90f6-d7a7f941fcf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 4813d29f-e317-42e4-b36b-a7b77183d343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 a55d744d-666d-4186-8eca-807593c07006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 cfa965ad-6117-4551-8691-fe86f17d7838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 1c259b7c-6816-4f59-b171-d00f7ff6e924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 d00b78bf-9ead-4372-999d-552a397018f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5CB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h49CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #164 91c6d653-4fd8-4953-b430-3ffe03967afc)");
unit.assert_eq16(16'h193D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #164 16601fb1-f77a-4fe2-a446-cb4ecb54c994)");
unit.assert_eq16(16'h49CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #164 9547f021-dbfa-45b0-8c0c-00dca32c9f00)");
unit.assert_eq16(16'hEA76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #164 33f30d22-bdfd-4d2e-82c0-8287f550fa7f)");
unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #164 67685303-c6ce-4606-aeef-a2a85562da08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 4a3141c1-819e-42ad-8598-ac7ef21ca4e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 04b4bf42-bf8d-4848-a4a7-e0d09308eb34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 5b98e1f7-5f1e-4e6c-a460-afd6d361bf6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 6c03eb99-c2dd-431f-aaaa-7af1224981c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 7035f513-a382-43d3-ba67-3de74f08ccc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 a49b59fe-8342-4c47-ab7e-d4148cc4380c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5BEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h96F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h35C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #165 cb7fa0a8-f324-432f-851f-595bd91c7559)");
unit.assert_eq16(16'hAE7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #165 2edd55b7-eaf3-4479-9462-c6658f342eb1)");
unit.assert_eq16(16'h96F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #165 85204dab-b46d-4f66-a584-d52912fae52f)");
unit.assert_eq16(16'h35C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #165 995378d2-69f3-4e5c-8491-14c3d8bb435b)");
unit.assert_eq16(16'h0EBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #165 03720773-b120-4a02-8b09-d370846ca6ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 3a788f1d-5bff-491f-94fc-5bc1758d6d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 d6533aed-8780-47c0-aef5-8ce43616d94b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 efc15be1-5a3a-40ce-89d4-f34f5a3dcf22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 b8e4bced-5712-4266-982a-f66d1e3208a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 82739579-b2a2-4064-9a27-d75e673a6bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 51f91a3e-83c9-4b9d-b8f3-3a4e5c9ca4bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE16E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #166 11bb588d-5e25-4a02-99ca-628f86cd320b)");
unit.assert_eq16(16'h95AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #166 b6414357-4f9c-4445-afa6-f4f062c497a1)");
unit.assert_eq16(16'hC2BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #166 aa1050e6-99ce-47ce-a84c-fb18926d9265)");
unit.assert_eq16(16'hE16E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #166 40d41d3a-31ce-490f-a0d7-76aa7d2120c2)");
unit.assert_eq16(16'h08EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #166 3db81e2a-a576-47db-b44c-6bdecbf9500f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 19ab675d-1b79-4947-8b18-8ebcfc4d91cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 fa4db7e8-f3f8-4b61-b6ec-27836ab97324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 18efb6b2-afb5-40cb-b113-2708cc6e81e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 26d9ef88-c603-4d56-916c-0effc1ec2a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 b43a1e16-6ead-4e71-8864-279a7a47d13e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 f33f7b3f-8500-49cc-82bf-a2586e0e6392)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h62C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1799;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3BF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0090;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #167 8a0f1237-7bdd-470c-ad7d-44e8e5a1880a)");
unit.assert_eq16(16'h2E6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #167 94dc0baf-94a9-43ce-8d21-40e159f831e0)");
unit.assert_eq16(16'h1799, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #167 0e0c5a02-7a02-464e-8b6c-2e2833724fb4)");
unit.assert_eq16(16'h3BF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #167 df749f38-e8b3-43cd-aad6-ebb91a055d7a)");
unit.assert_eq16(16'h0092, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #167 b3b7afe4-dadc-41f4-8721-aa1c178842db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 fca42859-8791-4b35-8af0-a2e354cd199f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 eff48054-dd76-4e50-9644-ef01bc6ed1d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 54341828-f0b3-408f-ad3e-377157706c36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 d2556ced-07ac-4235-bc61-84dcf233d319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 fd01865f-7908-4740-9358-b7e63d0b763f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 3eaaed6b-6104-477a-9d78-53fad33e45f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4AD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h16AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF3F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0772;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #168 94b014ba-c370-425d-aa34-52aec457773c)");
unit.assert_eq16(16'h5D83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #168 9aa33540-ea42-4238-850a-983dd8453f34)");
unit.assert_eq16(16'h16AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #168 f4986ef0-c84b-4289-babf-65015c15202a)");
unit.assert_eq16(16'hF3F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #168 beff7bf9-49d8-45f9-b8af-6ce8bb1446e2)");
unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #168 c255d07b-e18e-4a88-8924-11d662de4e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 65bcf76a-2ec1-4212-91d7-2a60610324da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 bc308356-c0ac-4088-b6db-69132d84d9aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 5976af2a-0e86-49f0-9609-2b7b912007a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 b52941b9-8a48-4ce8-837b-572839df9b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 12418293-c0a5-4f23-9487-65e8d44e6c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 8aa812e0-44b7-441f-84ba-e925fbb16533)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC15D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD753;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8FC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #169 b9d6f745-b31c-45ba-9821-9b84cf89e8d4)");
unit.assert_eq16(16'hE1E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #169 a0709c9e-e00e-4239-9a6a-5cad99995f17)");
unit.assert_eq16(16'hD753, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #169 f0046d48-6dc0-4938-80db-362f2b45d2a6)");
unit.assert_eq16(16'h8FC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #169 8012fb89-af9a-4d67-8a88-c6985b5812f7)");
unit.assert_eq16(16'h00E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #169 76bbc986-c7b4-4188-b064-9429477a8698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 06e13ed4-bd4c-4067-be20-747a273c1735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 8ede5905-461d-40d8-a240-fc3a782e2811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 cdeeb5b6-b1e6-418c-9b3f-5f59975beaa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 f1f2d1fc-c5ef-4783-8cff-e26cae801da5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 817b46e0-31b6-45b0-9031-d84fdb0bb6ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 da440cc5-6344-4b8a-b32c-cf2fc99574ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA4A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD35B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #170 d41cea30-2898-44b4-967f-88ad0e25e2ef)");
unit.assert_eq16(16'h1C9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #170 30d4d701-dbd9-4978-9055-f48737d03740)");
unit.assert_eq16(16'hD35B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #170 398db96c-72d7-4000-aefa-bea5cc6ca5b9)");
unit.assert_eq16(16'h5695, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #170 1bde33d4-00be-4b91-998b-f2dd2882b885)");
unit.assert_eq16(16'h0440, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #170 e87f5af0-8f93-4f1b-86bb-d93e6ac61eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 af032a52-6fc5-40f1-8365-fec9228379bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 c3efd88d-36fd-4c84-9ac9-8d475cbd4838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 de1bda7d-888c-496c-a33e-b6ce56d8e167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 561533da-26a2-404d-a2e9-14eb41e755e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 b0c2068a-bd5b-4f00-aff7-55d316134a32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 6a838080-135b-4de5-86da-3f1f1517f9c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7388;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE1F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0606;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #171 3d4920ec-599a-4f35-aecc-b13363d4bc6e)");
unit.assert_eq16(16'h67A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #171 923df145-9bab-4232-8053-f44216940fd3)");
unit.assert_eq16(16'h7388, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #171 76dd440f-88b6-4606-982c-cc20793c3def)");
unit.assert_eq16(16'hE1F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #171 3c0cddfd-569c-4703-8a81-f56a063ddc88)");
unit.assert_eq16(16'h0608, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #171 02b5136a-3dd9-4ba0-b759-4916dbc8f631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 bd7d9d5e-2a00-4409-a5fa-9976cc6a5efc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 ab298fab-7eb5-4f47-b1b7-79ebcf7987dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 d0d41866-3d3e-4b93-bb4e-8dafdee8926d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 fe8ef291-ce8f-444d-83b9-31d29343f0cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 5ab7c454-9dec-4323-bca0-d79a7f953997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 32f58f0c-3260-4646-b43a-a61085d9a5ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h272D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3EA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5F97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #172 4118bc1e-1571-4528-9933-6d04614dbe1a)");
unit.assert_eq16(16'h0DA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #172 ade9b8c3-5cf8-495e-ad49-d7cf61dd3d39)");
unit.assert_eq16(16'h3EA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #172 522f918a-ae3b-448b-aec3-b866c6dedc97)");
unit.assert_eq16(16'h5F97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #172 213f53c5-1bab-4cae-a5bb-9fba920b29c8)");
unit.assert_eq16(16'h0CB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #172 62398aa2-edae-4d47-89ca-e5e54370a412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 3703310d-50ed-4575-aa3f-899bc0b75923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 eefcbc9a-36fe-4b31-8f1c-432d05b53af0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 37efabb6-f18e-4d25-af17-f864260813ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 6d7cf04e-fd86-4ac8-a2a6-3ea08e7ae2f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 c39706d5-d0e8-4652-bd48-7109e94081cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 e7734501-e6a0-4255-813b-fcedc766a360)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0794;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h65E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #173 b92d048d-a3c9-4f0b-bcb8-015c572cad22)");
unit.assert_eq16(16'hF289, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #173 08c65f89-43b5-4d64-b7bc-52253deefe8e)");
unit.assert_eq16(16'h0794, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #173 c4c1e8de-ce2b-410e-bbad-0b21d547ea20)");
unit.assert_eq16(16'h65E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #173 4e5810a7-772d-411c-bf06-018cfc186f5a)");
unit.assert_eq16(16'h0A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #173 057bd766-d4e3-48ec-a11b-1515887ce853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 ddd8e140-842c-464b-b96d-cf4114da883b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 a8d56c37-c708-43fe-9eb5-ffbc18f29e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 7a0c116b-2774-4977-944d-7421711947b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 861b3782-0949-471a-9435-8f35ae8328fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 e10c35b0-ae14-40bf-9da0-4e7060ac59d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 4fa851bf-d444-4e9d-a55b-dd22b945fcb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2176;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0419;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #174 067e13fd-82e2-4b79-90da-9ed6843be0f4)");
unit.assert_eq16(16'hDF67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #174 d17abf0e-9432-4c60-82eb-44366c3be76c)");
unit.assert_eq16(16'h2176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #174 7dc26a25-5339-4f23-81d2-20caccc6ad4d)");
unit.assert_eq16(16'h7E42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #174 b98ea782-420b-414f-b12d-f9b6593a0097)");
unit.assert_eq16(16'h041B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #174 9cd3b911-a5fc-451d-b4cc-a5ae1c0e0d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 b9c3efa5-cdfa-4f69-9232-d271e1616298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 efbc4047-9f20-499b-8f36-acbcfcabb651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 a2ed9410-965f-40c2-a1f4-44a8e28da304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 a3af28b6-e92c-4122-b904-53cfde5b71e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 71f96406-ff31-4ff5-9403-588009d7f3cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 a9760635-e1ae-44b2-b72a-58c6036b4b59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCF9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h005B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #175 84f91133-91ae-492d-a473-2e0f1f497f60)");
unit.assert_eq16(16'h1D0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #175 24d4e108-cf83-45ed-89d0-00d0f093630e)");
unit.assert_eq16(16'h8E86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #175 cbbeff88-09b2-4919-a6a0-80e2e3f85028)");
unit.assert_eq16(16'h02A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #175 82564644-ba47-49fe-aa57-1c086c3f7bef)");
unit.assert_eq16(16'h005D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #175 4f77b963-4b09-4a95-810e-6a56d42afb1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 46a95321-24cb-4877-8457-66a5f4fe5393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 41954076-8fc2-4255-9b22-fbdec2257195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 486dedb7-7638-4a4b-9947-9ed9be2a8618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 4b9251e6-8839-4171-8007-fc09cbdc539d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 c8be48e6-b64e-4dcd-9c01-dea3bf22effb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 6191a651-d8f6-418c-8e15-d5257eccf994)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1CE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFFE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h648F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0030;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #176 e4f2316a-7f55-4e23-abc9-0a79695a6040)");
unit.assert_eq16(16'hE6FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #176 4683a974-caaa-4197-bd48-73c20251b266)");
unit.assert_eq16(16'hFFE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #176 55e0cf42-4b76-45bd-a80b-de786d522138)");
unit.assert_eq16(16'h648F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #176 e5763b8a-8a94-46db-9ab0-9b3b773151e3)");
unit.assert_eq16(16'h0032, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #176 9ec21ed0-d82a-448b-a52e-bb7cdcb3c460)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 d3c9f3aa-da7f-44fa-ad4d-46b936ce831f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 8d3cb6e6-383a-4b43-913a-a430039b99e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 86c64d57-dcfe-40df-9dd0-369175af81ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 debfed64-f8c0-43b2-a7be-fd1a11a9ea2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 59067135-88d7-420f-b4f6-18eedb369550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 b85881dd-7470-4b99-a08a-e79c4d1dffa3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6049;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h954F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7186;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h024D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #177 b9eefbf8-e849-4439-9dcf-8c45239badf3)");
unit.assert_eq16(16'h363C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #177 7a430c66-d24f-4b51-a374-12039439b492)");
unit.assert_eq16(16'h954F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #177 cf7bfea2-6b67-4be3-a6ae-38d08ab85db7)");
unit.assert_eq16(16'h7186, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #177 e099bb84-5cad-41c8-bb15-df91056be8e6)");
unit.assert_eq16(16'h024F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #177 2831ad4d-bf09-4fea-94f7-cd8a7c4a407c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 390c9aad-ef88-4ed5-9b6f-5121fd72d4d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 39801138-d75f-49a4-89f5-18797496f6c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 6c4cf8cc-edff-4572-9adf-4816cdb1282b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 e38baf5e-ee9b-480e-809f-34caddd87916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 2f136a38-7c43-46fa-ac85-80256f58559d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 f259cec1-85dd-4424-b314-2e45436d593e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8EF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h58B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h61BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0970;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #178 126f30ac-377a-49f8-b21d-6f6a3e0d5f25)");
unit.assert_eq16(16'h7DE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #178 f2aa0420-f8ad-411a-84ad-5e29b2ce19ee)");
unit.assert_eq16(16'h58B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #178 4efb0d21-f337-46fc-84e9-44623d72df54)");
unit.assert_eq16(16'h61BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #178 a4dd2ab4-a329-444f-bad2-41975fe9e560)");
unit.assert_eq16(16'h0972, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #178 19b86395-b282-43ba-85fe-1043b62f8967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 8b756dd8-4c59-48ab-914a-18786e1bfa41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 bd2e22e9-ce86-4a6f-8ab9-87e0251b0651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 ed5fde1b-8e6f-42e1-81a0-42ac472b33a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 bb056cc1-54c8-4363-9bf2-1d028bb499a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 206c7e31-3969-442c-96fe-1471fca782ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 d0e193ad-9568-4591-b31b-e01312f1410e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h31F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3850;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #179 5409d574-b7ae-4f63-af1b-9698a036aade)");
unit.assert_eq16(16'h572B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #179 905d597e-50f1-411d-81a1-67801a5b6804)");
unit.assert_eq16(16'h41AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #179 cddd21f6-7119-4696-8c08-5f98b70d44e0)");
unit.assert_eq16(16'h3850, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #179 8630dd41-b2be-41c5-acb6-776fb580a539)");
unit.assert_eq16(16'h0BAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #179 0afbfd30-68dc-456f-bb38-edcca6a5984b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 d09e4a9e-6f1d-4b93-b901-76f54bc88f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 4199c829-a912-41c9-a894-d2325090a183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 90ab2d52-4baf-48c8-8c64-31ae331cc6ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 65083832-aa8c-435f-9377-d2d37fcb36a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 3fb1d0e7-bc3a-4456-bb92-8f44969f1f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 cd851c9f-3020-4854-a367-7c6ea8fc39ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1097;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #180 414d1e48-e9e5-4308-b9e8-b7895549571e)");
unit.assert_eq16(16'hB303, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #180 15d14c25-12f7-46fe-b82b-91ba30a1ac80)");
unit.assert_eq16(16'hB0E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #180 3c626860-64de-4371-8fdb-010c894f5f61)");
unit.assert_eq16(16'h1097, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #180 d882871d-17bf-4cc4-98ce-d27cee43e4a7)");
unit.assert_eq16(16'h01BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #180 512da258-00d6-4456-9573-7fd65d0a7e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 c91e8568-655b-4a83-98aa-57edd7b70f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 00dae533-976f-4485-a4fd-10f847050d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 5c924ce7-e4e5-4ed2-bd87-8bb266d431f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 d49da5e3-93f2-439f-a714-ce691f72e59e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 2b795cf8-dffd-459e-8ef8-06f6118a7981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 00bac6af-72d9-4aea-9916-8fbee63b2337)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #181 81a358a0-318d-4fe7-b7c3-017352b2a582)");
unit.assert_eq16(16'h6DC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #181 d2a171a6-cfab-46db-819b-cec765f9b2d0)");
unit.assert_eq16(16'hB0EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #181 ea349d29-e43f-49ba-822e-8ddbdddf2d10)");
unit.assert_eq16(16'h3C79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #181 d402002c-72b8-4d9b-b3b2-05728210c56d)");
unit.assert_eq16(16'h0E22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #181 53cc2216-ec02-41cf-92d2-7022fdc539e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 67b8e3d7-d1bf-42f0-a04d-65d1bfe19f85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 b3aa9311-eaa6-4441-b8a1-7fc5265ad925)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 432c2ee0-2664-49a4-a8df-5c17674a1f9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 54816059-5472-4f3d-b963-5af82fa9d2a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 50ee46df-f30c-4078-b098-2bec66c38e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 709f0e9f-49ed-46c6-b705-67510b230a4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB04B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8FC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5DAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #182 d40b72a9-2135-4d3e-b421-b9df5ab79c1a)");
unit.assert_eq16(16'h8E09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #182 a865c134-9363-4e3e-be14-60b5eeb66872)");
unit.assert_eq16(16'h8FC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #182 55b2f2ff-777a-4441-9e63-9ef8ce273370)");
unit.assert_eq16(16'h5DAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #182 1357e962-1b9a-458d-8b24-40d4237dae74)");
unit.assert_eq16(16'h0D22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #182 cbf5b176-3edb-4c9b-a5e5-b9125915511e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 0f72bacf-1090-45bc-aefc-d8435280453b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 806360be-df67-4a3a-84c7-4c09c8f29305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 b19ff4fe-7460-4b6b-9187-e91f603ee14d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 ba8f93e3-f5c9-4a20-85c5-3ef40eef5ae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 97d2dfe7-9bb2-40a0-b6b5-7922e7162f2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 186cdda2-3cbd-4178-ac28-c1a7220cb8c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7EBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6964;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1659;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #183 bba708f1-0dd4-46b9-b271-ccff29cf3bf9)");
unit.assert_eq16(16'hE0E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #183 def3382e-e2c5-4059-8941-f3bd47248531)");
unit.assert_eq16(16'h6964, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #183 d86abae8-2a2b-434b-a501-9ead06a96dda)");
unit.assert_eq16(16'h1659, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #183 c6661641-6db2-4753-a3ee-887b14ca6b9c)");
unit.assert_eq16(16'h05EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #183 d98f42da-81b2-4ad7-aa2a-1c75d56da2f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 1d7348b4-658d-4c7c-a1ec-2f2ee97f2de5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 d32496e9-eedc-4ff5-ab2b-e3adbe7e4de6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 69e99724-8476-446c-bac6-4d7285e3305c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 d67607c2-1fce-4c37-966b-58fa97ff0b39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 51c9bcaa-777c-4705-9ebc-83f5dc475385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 8109fe27-d6e2-4a45-a1b3-7a20fd85c528)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0135;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCAAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #184 e1fc5b06-0a47-45f4-a47e-5c6ce64d606a)");
unit.assert_eq16(16'h77D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #184 67e8d28a-c983-45d5-929a-55964ce16a58)");
unit.assert_eq16(16'hFD9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #184 b93a6ced-77ce-4d90-b5b8-4a22769e3d77)");
unit.assert_eq16(16'hCAAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #184 54f38b9a-bcc7-4e4a-9f20-0e154d394905)");
unit.assert_eq16(16'h0DF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #184 d94ac782-2eba-4850-b4c6-57b9d4b3a6c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 82b30544-ed53-4df7-91cb-62103b664e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 596af7a8-fa04-4d01-91a7-0f6326f420da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 2a1d4c7f-c03c-4f37-9b73-d07cf9028ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 437522f6-cdba-495d-bdcb-a594fb81a949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 8c2681ce-1884-479f-a9af-8546b77931fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 ca73ef51-6306-4cf3-9ced-74fef256abfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h31B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h041A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h19E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0583;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #185 a3325c2c-df63-46da-aad6-3a2f3d0d0bf3)");
unit.assert_eq16(16'h71A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #185 dab8e343-c175-4022-906c-602883735038)");
unit.assert_eq16(16'h041A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #185 d1ce24d7-505f-4719-b76c-73420cb84b08)");
unit.assert_eq16(16'h19E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #185 18291d0a-3fb8-43b9-88fe-9f3058124c99)");
unit.assert_eq16(16'h0585, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #185 e8b4b378-ce05-46fc-984e-9dacab808ff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 e720305d-d922-4990-a135-35b55bf9a89a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 e932e58d-7029-4c92-bd40-0fd47da46a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 907ce358-9a46-4cb2-a8bb-1f4c35c20990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 74515937-dc5c-4254-a296-9462713a9090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 bea71f32-c060-48a2-90e9-dcfd81cdc32c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 24af99fc-965c-444d-939c-bc7c395138ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9938;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9635;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h63B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0741;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #186 7f16dd67-cd56-43ed-8d1a-624e9c26a6d3)");
unit.assert_eq16(16'h494A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #186 feae4c37-39ca-41a8-bb3b-1d909b945728)");
unit.assert_eq16(16'h9635, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #186 6141147d-c945-4352-ae8b-2ea32de28296)");
unit.assert_eq16(16'h63B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #186 b58cec6f-b0ef-43fc-8853-8464d486cf26)");
unit.assert_eq16(16'h0743, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #186 1fc86006-a2f4-4d8f-aa44-6f914387a3a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 ab88d374-d806-43cb-bb95-e4f3d4235be0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 c61cae48-9ecf-4c7d-a02c-1ff0c5d6883c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 6f080f0f-3163-4424-bd02-4f186b303952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 8022dd66-ed74-4b19-bfb0-af4f71d80761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 c89ad9b7-1e2a-41e6-a860-0a4a68a57210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 7238d60e-fb38-4dd1-a49e-4ced072f3a76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h23E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8FD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0200;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #187 5d9f048c-0f9e-4143-8261-4f806dffc6bd)");
unit.assert_eq16(16'h9628, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #187 e0222a43-fed2-4180-b4df-dcaddca8ca63)");
unit.assert_eq16(16'h8FD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #187 557f15af-b9b5-49fe-a079-88e81849b892)");
unit.assert_eq16(16'h1C13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #187 b41a0c5d-9b34-47a5-b918-75192bd1f934)");
unit.assert_eq16(16'h0202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #187 68816b5d-5431-4cde-a692-02ada34c6e61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 7ecdd058-759f-46af-9fc3-df8d814e3ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 aecddc2f-234a-431d-8552-898218e73c89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 c146e1a6-af5e-467a-8b8c-fac0cbea511d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 448ed5e2-517d-481c-8e11-d58d5b8e4d6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 432ad69a-359d-4f93-b48a-fbf9d6fd963c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 8f1cec1c-0ea8-450d-a598-d6a43f2c737b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC1D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC498;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h005E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #188 da2bd972-7d60-471b-9cec-080ae5b03d78)");
unit.assert_eq16(16'hDF0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #188 f9603706-b623-4bdc-8b7c-e64aa3e7d023)");
unit.assert_eq16(16'hEB01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #188 16c8e814-6474-43fa-9164-5347cbde547b)");
unit.assert_eq16(16'hC498, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #188 657aaa7f-c8cb-4ad1-82f8-d3580b30fa92)");
unit.assert_eq16(16'h0060, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #188 5f52fda3-6c9f-4bc6-a577-07870ea957bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 61a873a6-7bdf-4154-95a3-95c84eb8b44f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 0dc9de11-c06d-4d88-8222-35e88b9ffa10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 7433b0e2-1637-46d7-8227-8e44c4288342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 4d50eeb8-ba01-4c12-9332-f4e2bbcdbc89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 e0df783d-eb48-488a-a703-3bb96257d23d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 cbf348f6-43a8-40fc-b52b-6eb096f9b23c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h522C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9AC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFDFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0156;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #189 6410c83a-a0ae-4a00-b790-00633852e0a1)");
unit.assert_eq16(16'h6D00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #189 dac9ec06-4394-4e90-94da-0b8dbb1e33bc)");
unit.assert_eq16(16'h9AC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #189 28d3fe30-0829-4cf6-a16b-8d822086cc3f)");
unit.assert_eq16(16'hFDFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #189 6cdd966e-5dff-4151-a795-aeddc1c24924)");
unit.assert_eq16(16'h0158, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #189 eed8d16d-12d6-4cfa-8151-4d995dfb8ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 d37c1910-ff11-4009-ac27-c68aafe50774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 9331d002-7d7f-411f-aa8e-2a92b8a61cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 53532f0f-575d-43ee-9d3b-7b0f280433ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 0ddd9edb-d464-44c4-b719-05561eec4842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 218ebb98-d641-4ecc-9008-88abd80ef60a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 dc5f4b7d-08b6-4275-9933-d5642ec935d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA6EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD510;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0960;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #190 04d38afd-8a13-4a8e-9f93-e59a7085e3b0)");
unit.assert_eq16(16'h647F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #190 e0dbb69b-e0ac-492c-ad23-902dc4f33377)");
unit.assert_eq16(16'hD510, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #190 45a2090f-aff4-4015-ac38-39205ee31bcf)");
unit.assert_eq16(16'h40B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #190 4c891af1-8f92-4d3d-8b3d-1f2d53297cf8)");
unit.assert_eq16(16'h0962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #190 9c35ab33-5570-4522-ba85-257286057454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 8a8a5ca7-e6b5-4b17-a492-6e18e52a89a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 da4ba72d-5a54-43b3-8a62-37fb995b52c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 e870ba2d-4815-4e8c-affb-11f37a99815b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 7114568c-b042-4de5-9db1-a3b760207fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 04186bd3-f57f-482c-8394-a8589b0f4f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 9e4489d6-8f4f-4574-9f40-555b692807a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3625;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5AF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3D59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #191 01c5b838-889c-4b4b-b434-721407e69a14)");
unit.assert_eq16(16'hD03A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #191 c67a11fb-7452-479e-93e5-b1ed17fc3e8f)");
unit.assert_eq16(16'h5AF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #191 bb0b5c5c-fd38-4af7-9fa5-575ac9e2b670)");
unit.assert_eq16(16'h3D59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #191 46ca387a-69a5-432d-9ed8-11bbfe73a6cc)");
unit.assert_eq16(16'h0C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #191 75ee466f-e6ed-4f32-8777-4a806affd9dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 77d6e71e-4eb3-47af-b04f-228481d29456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 ae88f552-73a8-46e7-8999-c4c1a14733d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 817fc26e-94fe-4d41-aff9-6d72c17860e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 4ca5665b-3567-4893-b370-be7a26b7b2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 86f7e28a-2cc5-4bb6-9b77-7c04e267ece4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 c8a064b2-1520-4219-ae2f-0de18db812c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h279F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h97C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6697;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #192 45e68e7e-c965-43d6-b227-a7424de7d89d)");
unit.assert_eq16(16'h637E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #192 f9f00ca6-00f8-4ff6-9414-13d7280824a5)");
unit.assert_eq16(16'h97C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #192 e9f5b1c1-4555-4758-a17e-54da5da0a85c)");
unit.assert_eq16(16'h6697, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #192 24b6e017-c9d7-4443-af65-354d9334128c)");
unit.assert_eq16(16'h06B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #192 43ae27b0-5180-4140-95f3-1df13b0df20c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 a9676429-d1cb-468d-a564-1915ec86aaec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 1f4f0007-5843-40f6-b002-6b147757f3a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 b9841b44-22b4-4779-ab0f-e59a5783643b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 56987d60-6a41-45b0-81d8-c42d0657ce6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 86be1324-dc6d-4165-82a4-afaa8537153e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 1c6091de-c29d-4c09-9e80-96364961aaa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h299F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h10D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0459;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #193 28ecbd89-aa95-4987-a993-315e460069c9)");
unit.assert_eq16(16'hF40B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #193 88e1f308-f17d-44f0-9093-55aab2540372)");
unit.assert_eq16(16'h10D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #193 6dff9c86-5c85-4d8c-8cbe-246316b9bfcc)");
unit.assert_eq16(16'h40B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #193 bf0977c2-ff12-44f1-b355-7355b4bb408b)");
unit.assert_eq16(16'h045B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #193 7015ba3e-5219-462e-bc2c-91d5dd4eb4eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 2de4318f-f5bc-4956-b3d6-79fd207f0c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 ffb27746-a46e-4030-bb1c-f009e7dc09eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 99406ae8-a27d-45b8-9b43-c60a33ed64e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 e7082899-2454-45c6-8c58-543dc95a3950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 e6a1b19f-ebcf-4152-8656-92001e12177a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 a34fdfd7-52bc-4f47-aa8f-8f96983adf41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBAEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6DB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB902;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #194 249a5dd1-0ebb-4624-b819-036df22ae2bc)");
unit.assert_eq16(16'hAB28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #194 72d93790-7039-48da-8b62-b1df6c38fb6c)");
unit.assert_eq16(16'h6DB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #194 1b359f62-dd01-4114-ac70-bb907ed2ef5a)");
unit.assert_eq16(16'hB902, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #194 85731244-f423-4e33-8c0f-1241f525e694)");
unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #194 ed31c8a5-c116-46c6-8094-98502773e06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 6f2a06d0-9c76-4548-974a-fa9633795232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 c971b2a7-08f9-4b26-bbcd-1353b5f7f9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 acfca061-eac5-4f3b-81f3-eed4f162584d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 c5055d7e-8586-45a2-8aa7-ccafc2b50f51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 650d6733-6bcd-4f04-986f-80122de9d9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 dc95b16c-1dd8-4895-a763-2ebf41bf971b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE7F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC71D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA9B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0647;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #195 ee3c768c-1cf7-4b95-8dd7-4286bf526e25)");
unit.assert_eq16(16'h3A09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #195 d371db07-e5e4-4aa2-ac0a-eb8cf7dcb018)");
unit.assert_eq16(16'hC71D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #195 d03a81dc-5acd-4505-be00-786a89cdb5f2)");
unit.assert_eq16(16'hA9B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #195 e8d5ae0d-113e-4ae3-95cc-f49c4477b615)");
unit.assert_eq16(16'h0649, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #195 db84e296-b3bb-40de-8883-c4e0c186dd15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 23204548-92b5-44f4-9764-30879248463a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 49adbfb1-ee6e-4c8a-8f15-4b9af92549a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 4d9a82e8-2c16-4d61-8216-d4b2c7333d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 6a8c5f6e-aa9a-4cac-9f8b-e2a94491a299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 cd98a59e-3cb8-4e6b-ac9d-cb67d763178b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 7d42c285-4dfc-4587-b9ba-de426b363afb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h095C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #196 d37b4968-4798-41bf-b1a8-0bbabcd83927)");
unit.assert_eq16(16'h6FEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #196 b7d77349-5f81-4699-978c-19623e108231)");
unit.assert_eq16(16'h0F67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #196 f28aa80e-4f31-4d9b-8198-fcb21e1c7a91)");
unit.assert_eq16(16'h4BEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #196 3420ab2b-46f0-468f-9828-9bb7f4f929e4)");
unit.assert_eq16(16'h095E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #196 98102ac9-ab39-4228-9adb-b4596878a3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 c11c460e-8f7f-4b21-85c5-1c28b33c205b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 baa410f5-7b3c-48f9-982c-70bb46bbf84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 2ecff7d0-9b89-4602-a02c-f1efdf1f61eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 c55d7b27-7e55-4cd6-87b9-5d301b5daf95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 3b441e90-16fc-4926-a76e-7e2b1f22f3f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 58f83412-17a5-4766-b047-4b23469447a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA171;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h48C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h189F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0539;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #197 5ee9240b-3a83-4f94-9c4e-7b4784c3ccc7)");
unit.assert_eq16(16'hE796, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #197 f4b2e40a-cb03-4f1a-8930-3913e48598bc)");
unit.assert_eq16(16'h48C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #197 0ff0a2b9-a4c1-41c5-8d64-f8e6251a3f47)");
unit.assert_eq16(16'h189F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #197 dd0ce5d0-461f-4f67-b338-a53305de5c9e)");
unit.assert_eq16(16'h053B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #197 a6fc6332-2031-4a6f-b92f-6f01faf45a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 6caa3ae3-a230-4ae5-af38-fffea1d740dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 5fc53c85-461c-4e5d-aefa-008eb813805e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 dbc2106c-aff1-4689-bf50-83fcca355c24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 ca3b0714-5988-492c-b6f4-2b79e3e827f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 195f1bb2-6cd3-45b7-b7d2-30c2dbd9ccf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 2bddfe0e-ff53-4b18-96d8-61c74d9f5d60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD23D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #198 d940ec5b-45ad-4055-b6c8-aad43cc60362)");
unit.assert_eq16(16'h1C4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #198 072e7c4b-6e16-4c7c-bf50-469ee90540a8)");
unit.assert_eq16(16'h8B57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #198 19cabaef-40df-43a6-8754-674cf7ec7b27)");
unit.assert_eq16(16'hC0B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #198 15fbd146-cb0f-4fb4-aae5-c0bb369ec0e2)");
unit.assert_eq16(16'h0E3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #198 45f7a79d-ec74-4a1d-8ba1-2cc44592441c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 a7722468-50fc-409d-acde-75bb99f8baf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 a2348c34-02a0-4999-a678-1829acdb6be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 746d58dc-eac9-4ebe-bb96-1b0de1ee492e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 3a21b2d2-a4ea-4f91-b3a1-4509000b9ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 e3cb1cbb-6b10-43f5-8aa3-4928204cc706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 c53dcff9-9920-4dbc-87bc-e49cc4ea6f2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h89AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBCFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h185C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #199 5c7d449b-8710-4c1f-bebb-a51dd12f1988)");
unit.assert_eq16(16'hBBB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #199 2d6f5fca-cdb8-432c-a40f-0f1a6086ce5a)");
unit.assert_eq16(16'hBCFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #199 5a1740f0-8d0b-41ef-b0c8-3b4ef8100c09)");
unit.assert_eq16(16'h185C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #199 c81ef15e-6621-4704-b694-2c715686a8df)");
unit.assert_eq16(16'h0F9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #199 6997455d-d32f-427d-9448-b376a5212875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 199e1c8e-f2d5-4b6a-a2c8-c65927ff5630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 c8d8f745-ba63-4265-9159-29825327a648)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 abadf430-0410-4897-8a94-6026e28bbd68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 ee0b53b3-8945-46f9-910f-3e284a9da7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 95527625-25f1-4828-8825-5a3dd3644b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 ca30f9d2-c4ab-4731-8fb2-ae7c377ca411)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h24E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8913;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4850;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #200 924bc4b2-28fa-422e-8b8c-3b8c7aee9d62)");
unit.assert_eq16(16'h89D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #200 65a22af7-7d66-4a42-b6fa-2fb01136a252)");
unit.assert_eq16(16'h8913, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #200 4d7ebe6d-c52a-43a4-a3fe-00c6733f7bf6)");
unit.assert_eq16(16'h4850, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #200 38769aa0-b9df-4795-bf01-e2676eea6f45)");
unit.assert_eq16(16'h0FB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #200 9ef030c7-878c-46f3-b8ea-1ee438555da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 01310784-d35e-4f7d-98e5-674be81ece83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 efc46156-55d2-4328-a054-4bc5a40798e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 e0616727-7930-489b-b6e2-ca015c0c96c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 ab5f7fc0-2a3f-4c2f-b5b0-56d8367ebcc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 8fa2bba5-9d03-4d16-b774-6c3789d3bd6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 420e602f-18fe-45d2-9060-2136c1ca7513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA767;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6EFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF36F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #201 e2dfdc5a-b1fe-484c-b507-20f96093ba01)");
unit.assert_eq16(16'hFA4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #201 d43f22ee-8f86-45a0-a329-e26e3a6998c9)");
unit.assert_eq16(16'h6EFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #201 de70d40f-ad9d-41cb-987e-d6739edcaf7d)");
unit.assert_eq16(16'hF36F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #201 c3b6a8d8-0408-4b8b-a6db-2bca0a9ad4cf)");
unit.assert_eq16(16'h04A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #201 9323a73e-87cf-4a83-b575-6dafb2e3c168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 7b51ca5c-e763-4e52-ae10-d71b2f9154cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 ee5cf66b-e70f-4ce7-aa9e-25fff2d5b415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 8152fef6-80f2-4880-905a-579dbb7dd96a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 f1c74f3f-4381-4a98-8c5b-807ce504f1cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 6fdd5d2c-2f54-4dff-9c3f-32fd06812485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 03f3377d-c417-406b-af49-229d85e36924)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD254;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0625;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE4EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #202 bd297782-61d8-4eaa-8c1a-69fe6d9e2c74)");
unit.assert_eq16(16'h9F0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #202 dea018f1-9a02-4739-8a78-e4f208557c46)");
unit.assert_eq16(16'h0625, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #202 60f613ff-8434-427c-b231-a8d936d10fbc)");
unit.assert_eq16(16'hE4EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #202 dad41292-12ba-4f64-9345-fb99877a55de)");
unit.assert_eq16(16'h07FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #202 ac89dfbf-56d6-4655-acc6-dd1db2467f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 4df90149-9371-417d-8577-a939442186e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 def7e6b0-8b9e-48e4-bffb-304732aeb6d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 796588b7-945b-441a-a80a-a60061067caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 96304153-3814-472e-87f1-6bbdcbd0b4c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 cee759c3-cded-4728-bfb3-d93722838f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 2fb20dc2-b7f1-4a3f-b8d0-85987143545e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8AE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1CA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #203 fa963274-2564-496b-be80-32f6961f363b)");
unit.assert_eq16(16'hFCF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #203 27a6fdda-d368-4d31-aed8-c41558831253)");
unit.assert_eq16(16'h8AE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #203 c0cc6c11-f2e2-4425-96be-3e6d3de44882)");
unit.assert_eq16(16'h1CA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #203 fab07161-b20f-4379-87f5-781db1bbcc22)");
unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #203 eb4af9e4-df22-4ae8-b34d-a888e11c52db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 fc9db02c-15ed-4995-bb5b-fdae4356bd9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 11b84346-3c12-41da-91d9-2c6575fa042f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 b141f528-d78f-463a-9649-25fed229d526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 ef48c411-4aa1-4bf4-b252-ec8850160abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 f7029a2d-57db-4973-a18f-ee2b85aeb254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 cb677140-5c5b-4ab2-8057-03a2969fe156)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEE13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8839;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0569;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #204 94fa178c-590f-4dee-9bea-b889d6afe307)");
unit.assert_eq16(16'hDB3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #204 e774799d-8a14-4c87-93c1-c369f4a64b6f)");
unit.assert_eq16(16'h8839, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #204 ea897963-5f21-4a43-bd52-dd6af8ff10e7)");
unit.assert_eq16(16'h47EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #204 302d056b-17b3-4a13-a38d-16d7a7e57e67)");
unit.assert_eq16(16'h056B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #204 cca59368-80bc-47fb-ad41-3f42318c1a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 26dd304d-6275-4c72-9348-d401a6ff0b93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 7f5950d7-99b0-4ecd-a151-8f5828cb1ed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 4daab767-3724-4e14-b9e9-9efed9801bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 a08371e1-e996-4d5c-8209-9e4cc6b08758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 0d2a0b63-686d-4f65-8301-d2db981f99ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 df84c4f6-5790-42ec-a3e0-58cec72ce3d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7A76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2861;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #205 1c2998cd-7205-49d8-9f68-04197a2fb24c)");
unit.assert_eq16(16'h2E7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #205 65b736dd-844c-4d43-8f3f-e45ca83f211f)");
unit.assert_eq16(16'h2861, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #205 610cca79-180e-4cbb-aac5-0496601db449)");
unit.assert_eq16(16'h58CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #205 d6cee033-51d6-4f38-ac27-fc7fb1187b4a)");
unit.assert_eq16(16'h0785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #205 cc9613e6-79ee-4ef2-8ecf-84720b7bfa0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 b85168d7-4969-41b1-9df1-e147d6e76c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 7dd4061a-231c-4ae6-b477-13f4a91643a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 90b982f2-4abb-4d4b-83c5-5a64a2c7fb49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 36422eab-f4fd-4fd1-a2cb-425140fba55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 bc4f8cb9-51de-428e-9b66-3630a3ae02b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 b55d35d6-ad1a-4751-b71c-7d5433768af6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5EF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4B35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7865;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0038;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #206 f47d2e40-6ec5-4f17-82bd-3bb27b944fb9)");
unit.assert_eq16(16'hE430, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #206 cb8542f2-5bba-4033-8916-30c150811d19)");
unit.assert_eq16(16'h4B35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #206 50834e70-b4b1-4746-9936-a6cad416ccd5)");
unit.assert_eq16(16'h7865, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #206 99d89792-a58e-4f39-aa28-f92c257d58cf)");
unit.assert_eq16(16'h003A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #206 b92bf85b-1f52-4e82-81c3-2fd1c1fe8139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 e2d60562-ccaa-4517-a67b-5e75a751fa66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 1e7903a8-d15a-4e02-8302-386ffeed48a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 d255429d-a4a1-483a-91fb-cfcee439392b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 128fef3e-82db-4354-8626-f7b429aaa321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 eb938474-a35e-4dfd-a4d1-4ee506b56cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 1c5e4b19-7aaa-4af5-bb70-50da98a09e51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9934;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0ACB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #207 9e13e0db-391a-4bde-a16f-66a35a0b6b47)");
unit.assert_eq16(16'h807E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #207 f62e1c9b-6063-4c09-b74a-95c15cc04160)");
unit.assert_eq16(16'hFA68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #207 ded1f90a-326a-4048-989a-582a2fcc2fe0)");
unit.assert_eq16(16'h0ACB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #207 cd12734b-2ae6-41d3-9c37-f6b2f6c08ce4)");
unit.assert_eq16(16'h0D1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #207 8e57df53-3475-4c7e-a147-a7feabe24762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 0077ce80-bbfb-47bb-8b80-5d49bfc55e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 80f49ca0-ad69-42db-a013-3b36721f5394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 8af73243-243b-4f27-8e4d-3e3d31a4e7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 7504aa7a-8f62-4b0f-9113-a95b8db1ad97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 301a6567-d8c3-4b5d-91ac-34aa55dd3603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 0396f3cf-7437-4104-9e5d-424c455ea626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3ECA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD96C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0578;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #208 85cf732d-7e55-4c1b-a377-542c37463057)");
unit.assert_eq16(16'h194F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #208 a305eb14-644d-42dd-ac05-f33c57c04caf)");
unit.assert_eq16(16'hD96C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #208 9262e031-e040-4435-8152-b89a389e66b5)");
unit.assert_eq16(16'h56BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #208 37632077-6131-4adc-b774-68461ae31577)");
unit.assert_eq16(16'h057A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #208 534f958e-d7df-4f13-8341-cf41d4b6b777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 85e4b443-099b-4ba3-9bca-25b92002b71c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 e1f2f0ee-574d-4c9a-ac79-ee133429b1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 db9a7aea-b4eb-4c27-82c4-367040ffa044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 cc046a37-2837-48f0-8278-b28e37b068a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 a360c7e0-e7c6-4d8c-8b79-ddf008b6164c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 2b9d23e3-fe02-4318-bdc9-ef67e33cd4e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h62F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h83F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #209 8ef82172-f5e1-4334-9640-f9c173186325)");
unit.assert_eq16(16'hF88E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #209 6384d161-e7bf-405e-b38a-549e1e92664d)");
unit.assert_eq16(16'h83F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #209 71cc91ac-b647-4888-b767-5fd86252b658)");
unit.assert_eq16(16'h4BF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #209 7650b018-3192-462c-9328-0a99067b83fc)");
unit.assert_eq16(16'h02FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #209 6febc510-a348-4c20-b4fd-1e5b5d429fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 730d005c-d018-4c67-833d-5b9b5f87c644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 56818ff7-e12e-4daf-a69f-a134717307bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 ad057401-f4b4-4dd6-bb7d-5c95b1423c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 cbc82d9d-4a9d-4cf3-b451-aa880009e863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 e728a26f-6413-428f-b899-3b5f7b50ad49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 2ed8b6ec-3d45-4df7-8dd4-de175056f73b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCBED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0600;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #210 6ccc6106-2392-4025-8959-b3fcc957fe06)");
unit.assert_eq16(16'hC52B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #210 52523d34-997d-4989-a8ea-0956c557b376)");
unit.assert_eq16(16'h6A04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #210 723a9d05-3d5e-4f45-a837-42dd06cdf9a3)");
unit.assert_eq16(16'hCBED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #210 135ce856-541c-4ed0-9918-73083a0ff1bf)");
unit.assert_eq16(16'h0602, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #210 7d84b94b-7384-4e81-8118-484507d98482)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 412eca48-3f14-444e-a692-00ef9cf66780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 bacc8418-84e0-44d3-b1af-d1547b571c78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 3d4bac9f-7414-4ab0-849f-485550cfe856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 58356c7b-c675-4d3c-bcb2-507a2f29447a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 5eef747c-5047-4068-8582-20ee8e18e44a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 32db642f-890a-4e4e-a2b4-b004d2f44454)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4454;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h14DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9655;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #211 88752a74-079c-4055-9f30-afadb03670c0)");
unit.assert_eq16(16'hB6F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #211 88f61fbd-4baf-4ccf-9210-3260eda103d7)");
unit.assert_eq16(16'h14DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #211 4d441787-b6e5-4ed2-a8fc-649fa4a13934)");
unit.assert_eq16(16'h9655, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #211 409b61de-72c3-4834-aeab-f51d0829b552)");
unit.assert_eq16(16'h0EF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #211 1e513fdf-172c-4b84-b2bd-48a3b19a957f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 2a316599-76f0-4b2c-a8c3-d5396ec12222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 6a8c6e25-4731-4fb8-9996-7154a25be2c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 1ed6b0d8-2a6b-4bc7-a66d-7d1d06665980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 28eb8602-a664-4671-af8e-5781a7c0232a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 22ecc49e-2dc1-4be9-873b-20bfd762c974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 f271b842-65be-4386-8c86-c9709c2021c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7786;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0298;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #212 17b9fbd0-d164-48b3-9e25-365458d70145)");
unit.assert_eq16(16'h9370, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #212 6036f134-20bb-4728-b559-c8132d0a7419)");
unit.assert_eq16(16'h7786, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #212 5800e289-efd9-4fa8-9106-05f8b003e264)");
unit.assert_eq16(16'h40E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #212 c827ee13-9e44-4f68-9b94-86a5ed60a8a0)");
unit.assert_eq16(16'h029A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #212 7f5ec773-5eb8-4f3f-96e7-fa9683640230)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 78531eb6-a576-44d6-bc27-e03f55154c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 5cdb9c8a-f73b-45a1-bcb6-193c8e773272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 f7ccc574-9293-4cb2-af17-eb37228c5299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 7a8b1cb0-63ec-4cca-9ebc-cc4059b6cf5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 3cbc8a88-113b-470d-a2df-e15016c4800c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 4674d112-396d-4c16-bdc6-48f7d96e1792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3DAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h61FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEAFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #213 c5f75943-0a86-4089-ab9e-0b3e0b1d3bf5)");
unit.assert_eq16(16'h5D0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #213 964503bc-6744-4f0d-b0b3-612317292ca5)");
unit.assert_eq16(16'h61FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #213 d8e7c90b-7dbc-4fc6-8c14-db66a4aac89d)");
unit.assert_eq16(16'hEAFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #213 99bc1368-37b8-4f37-8a46-bd691aa81a4a)");
unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #213 6f2f9e44-fd4b-4cc5-b080-b5404f56b266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 ad38453a-dc6c-4f36-9976-7819c9a528cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 03a023d5-02eb-4750-beed-191fed213a7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 1dfb1f87-0f1b-4377-81c9-a848fdc5e403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 c9fb553b-8288-4822-b8f8-7a947c7cfc04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 50b58fcf-c431-4b4f-a59b-7c005b7f37a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 f40cb372-80a6-4c7c-912a-fcd483fb0045)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0985;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEAB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #214 6866d8e4-c3a3-486b-ba11-0732478da020)");
unit.assert_eq16(16'h0899, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #214 a8f74ff4-2c7c-472e-8ae0-e1f6189760b2)");
unit.assert_eq16(16'hEAB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #214 5c18805a-a648-4bbb-8690-15a171ad425b)");
unit.assert_eq16(16'h47F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #214 be365800-dc2d-45fe-b875-9d37f3b53e3d)");
unit.assert_eq16(16'h06B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #214 4f53ce88-ce92-4d6f-ac75-ffa5bd46c138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 4d2ea5b3-2085-4016-9096-3340c6d4d84a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 898b73f1-00f3-4a55-b4e5-c5c130cf62f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 e1274c33-5e21-4c18-bf63-370ca637eb07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 9b137b56-128d-4073-a859-e92556e8440f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 d46eb726-a7dc-40bf-a18e-5599c887491a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 59b8de0f-e4d4-4b54-bee0-0d7f4222f6ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h28DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h516D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0448;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #215 26b2d50f-4f93-499f-990e-b65a0a73bd2e)");
unit.assert_eq16(16'h1C17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #215 9fcfc5db-2efe-484b-bd5f-4943f0baf66f)");
unit.assert_eq16(16'hB0B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #215 a5360e8e-bad8-41e1-980e-7299315a65ad)");
unit.assert_eq16(16'h516D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #215 783d0222-8eb8-49e1-b1d4-26d2d2726053)");
unit.assert_eq16(16'h044A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #215 4dc7eca4-a33d-4687-b88e-1a3e442a3da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 490990fb-73db-4f9e-a337-1f53e375a5d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 a94dd90c-f575-4071-899e-d44b3a8b78bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 e95c399a-663d-46a2-93ad-9db377c05345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 d16923c5-f35c-49db-9578-308b6e7b2deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 78f021c2-44f7-4847-a8ac-d5a303fecd60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 dcd2622b-cce4-4caf-a4e8-31eeaea2064c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h93B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9DF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1E70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #216 9ef35578-027b-4728-b335-ec01591020c6)");
unit.assert_eq16(16'h8550, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #216 f22bebce-3049-4184-ba4d-8a8704bd484e)");
unit.assert_eq16(16'h9DF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #216 fd60f061-804b-4f82-81db-47d10e6e167f)");
unit.assert_eq16(16'h1E70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #216 fa824ed6-ffec-4e17-b310-1e628e82526a)");
unit.assert_eq16(16'h0E80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #216 7688bd32-d99b-4104-9375-19e54ed23256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 5846c2b5-b42d-4345-8566-b70441c7ce8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 986bf213-14ab-4048-8be4-751aefcf9edb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 b4b2ef92-53b5-471f-be13-be97d187a900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 7a80bc10-8f88-4f6a-abdc-cbca97f290de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 23d2adc8-8f50-4b6d-ba6f-458afd6b4581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 0ee4ca9f-2758-4d3b-9571-f78fcf1d853c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFBC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA4CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD1A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h003F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #217 129fdba5-feb6-489e-8e5b-67ff27b082da)");
unit.assert_eq16(16'hF9E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #217 10547155-7324-4aae-a583-d6d39b6c1434)");
unit.assert_eq16(16'hA4CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #217 cdef0cf7-9790-47a4-a4a1-fcd0fda875ef)");
unit.assert_eq16(16'hD1A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #217 66cbed53-de2c-43e8-9961-a98ae2a0c4b6)");
unit.assert_eq16(16'h0041, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #217 90ed84dd-0203-4b30-b2d8-37950ec1c4b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 0d13ca87-f248-4b93-9017-d3b587daa0b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 7803d0ac-a04f-456a-9771-69a5048d3cef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 e297de9e-c26e-46a4-9002-2d0ee6e5e7f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 2d90891b-e8b4-4dbc-b2c4-4281c94ad235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 36c3f7e8-43ed-4c52-bffe-04d03029429f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 046d5d6b-5ca6-44a7-8eb5-8c686082fb80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9268;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA56E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0267;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #218 cc573279-9b63-4ded-b592-e5416c74e959)");
unit.assert_eq16(16'hB300, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #218 4322e2e5-ef6a-4b85-9b90-1c7e6a612f9d)");
unit.assert_eq16(16'hA56E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #218 b429ff8a-1b0c-44ed-9e02-5752994a0211)");
unit.assert_eq16(16'h58C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #218 698f613b-b921-4488-a987-c3fcf3b3d96a)");
unit.assert_eq16(16'h0269, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #218 ec08c733-054e-40c8-af49-7b2db8a51040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 e844edf3-c714-4d75-bd23-12408018ffaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 a1ce1770-dfd9-45ea-a16c-de400fb1f86f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 6ef93c08-4a7b-4e85-b53d-8b390474ba06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 9bc6060c-54cb-41bb-940a-08ba29c33a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 254bf2ad-224e-4f90-91bf-5eb25747a57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 36055c05-7c67-4269-b7df-16c862cbdc5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFFEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB4A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h085F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #219 e066235f-06af-41c7-b75a-2cebb5233c59)");
unit.assert_eq16(16'hE12D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #219 07e5e780-eedb-4f29-8dd7-4bbbb86e6b6f)");
unit.assert_eq16(16'hFFEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #219 ae1f5dcc-c677-4f1d-8ed9-2669948b9687)");
unit.assert_eq16(16'hB4A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #219 010ee653-2c47-48fc-8e52-8deb32561a28)");
unit.assert_eq16(16'h0861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #219 3107e05e-fc10-42ad-ba01-bbed770331b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 999b9449-da63-4be7-a9a8-f079d69064b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 d5af6f11-af6a-4eb3-9372-a788c64c4cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 8ebad67b-2863-4910-8133-3c5d0ce0c2f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 78a74b45-3785-40f9-825c-f6faf583b930)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 f9f9aced-1847-4876-a9a4-69b4f411c0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 9f9e1d7e-d9ca-4ba7-82f8-07a96360f7d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0689;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC538;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #220 a3fade01-2a76-44a9-a12f-d2eb5f0503f5)");
unit.assert_eq16(16'h75A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #220 ab7c1cbe-8202-41a1-99ba-5000009818c5)");
unit.assert_eq16(16'hED38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #220 2fa3d14c-53d5-4243-8ecc-e18f9f8608e1)");
unit.assert_eq16(16'hC538, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #220 61b294bf-616f-4002-b327-9a09564908c1)");
unit.assert_eq16(16'h03B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #220 1872f2ea-0396-461d-b658-47c835c4308e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 f209717b-ada9-4f7c-a0d1-69718f947c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 aedbd732-0637-48a6-995f-859cdc7a365d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 fcb62508-c32b-4934-861a-6d928b84ba23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 34fbd413-f393-41d8-ab08-dbda30eb56c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 eee47d97-f7a2-4495-95bf-895bda6bac42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 811fa23e-aed8-44c8-a6d9-6a7802330cc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h451E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD63B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6D59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h042F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #221 232c8466-a925-40b4-bf13-4b1416efe024)");
unit.assert_eq16(16'h64C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #221 5ef42995-8d04-469a-91cd-87a9ecf1fd22)");
unit.assert_eq16(16'hD63B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #221 a808b237-1535-4e1e-950c-70f6e0e6cd1c)");
unit.assert_eq16(16'h6D59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #221 4ad6b98d-216e-47fb-98e9-04bfdd94280e)");
unit.assert_eq16(16'h0431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #221 887c7a0b-d581-44af-a9ea-4d3ec12a7f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 4bbac2e6-f338-4c07-a468-d72e7f7d3229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 ddf48ae4-14e1-4e5c-84ac-1897eb8510ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 d8f65007-7d09-406a-94be-9499cd636e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 e9b13e72-080f-4e19-8bf1-de306c3825f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 8c540e62-20e6-4aa0-bf51-7534907177bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 b0b59838-3bcc-475d-ac19-8e1539352e56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0476;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2BD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8CD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #222 b2d68c42-db6c-4e62-9c74-6a0637522308)");
unit.assert_eq16(16'hDB0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #222 c2c9437f-0da7-4af7-9076-3182a49e8673)");
unit.assert_eq16(16'h2BD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #222 bac2303d-d33f-43b5-9eb6-01f3c38326a7)");
unit.assert_eq16(16'h8CD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #222 4177ac64-8664-4906-b37a-6a600f1360cf)");
unit.assert_eq16(16'h0C8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #222 a9373216-3984-4470-b6e2-2721061e1cb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 db5dfaae-3c96-4668-a5eb-0a91033e220b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 70b16732-66fc-413a-a100-f04fac32eb71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 b7c20861-442e-433d-beda-c76854322260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 778be2ac-4292-4d11-be0d-aa582df7df6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 34364c5a-4fb3-4e2e-aa27-b7bc245db8ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 33b6abd1-d488-4818-85d0-5853566b9367)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB4EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #223 c24f3c57-255d-4d28-b71a-8581034afe30)");
unit.assert_eq16(16'hA1E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #223 ee976ba3-f272-4bab-8fd4-26814f541a82)");
unit.assert_eq16(16'hAF3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #223 b9c96dd7-1ba3-4d33-b7ce-ab64a91d8ab6)");
unit.assert_eq16(16'hB4EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #223 784ca48b-01f4-4674-b672-1501f92803a8)");
unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #223 ba990d54-dc3b-43a1-bd0f-23c3e31605b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 3dca5a46-0aa2-4319-8a79-85f8cf881595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 99d8987c-df5d-4347-99ca-e6170401bda8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 c0b88f03-d995-4229-9242-19355a1e2942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 b2368981-954b-4624-bbe9-63d7a654f3e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 40d50748-b1f5-4cec-9b58-5e5c6d030511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 7405263e-0594-4927-b806-0a8cc2505bbe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC957;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #224 dbd7a410-7ea1-4c8d-aa64-bcb9b1876609)");
unit.assert_eq16(16'hA957, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #224 6664147e-d6c8-4f9c-84b6-813adb339283)");
unit.assert_eq16(16'hFD83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #224 07175386-8c04-4f6d-9133-656700e55fb2)");
unit.assert_eq16(16'hC957, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #224 71aaf8d3-8bde-453a-a188-abe1933b73d2)");
unit.assert_eq16(16'h0F84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #224 5119b5e6-3bde-4c40-944e-c8590668b7ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 5864fd4e-0501-4256-9d5f-e5ad88fb089e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 b640e92d-bb96-4e1a-8bb7-7221531ebea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 1d2bb600-3531-46a0-af94-d4ecd005d081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 326a0c7d-bc97-41ab-b2c6-09088d26a531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 3360d6c2-f201-435c-b487-4868587a955b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 3938a7a4-8f5f-4f93-8a9a-c12a0d5a0285)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h00E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF4F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #225 afbc6c9e-7604-4807-a8ed-7231662490f2)");
unit.assert_eq16(16'h3A61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #225 215c4f22-082c-4690-8569-1c116fcc67b7)");
unit.assert_eq16(16'hF4F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #225 22382e75-1665-48be-8d4c-56ef6aa0f4fa)");
unit.assert_eq16(16'hF684, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #225 37ec9372-d57d-4020-9726-729ee0f86297)");
unit.assert_eq16(16'h0A4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #225 49639875-603d-46cc-ab38-1b018c331836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 067af823-5f4e-4ae6-8680-659926966291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 aec6f244-1c5d-4eb7-a63d-1ba1fe8cc4ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 f6109e06-5e25-4380-b6cf-f6aa63928731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 7b5c3454-6e99-4ce8-8f96-e66845754f6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 6777040b-1967-4516-888e-0a502b875835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 06d04725-b1f8-4ea9-aadf-569693493990)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h080D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA720;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h954F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #226 6c390f1c-37a3-4b95-b03e-c5a14184dfa6)");
unit.assert_eq16(16'hF34B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #226 51aed739-a1ff-48b1-b433-fb311128fb8a)");
unit.assert_eq16(16'hA720, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #226 e6424249-6fdc-4233-90ff-8d9ec3702395)");
unit.assert_eq16(16'h954F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #226 e4ac5cff-ca9c-4819-b345-f8c54ca6c7bf)");
unit.assert_eq16(16'h03D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #226 f9a35461-d958-46d5-8336-96b788f501bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 16ec8a7b-7871-4d3d-ac24-75ae1c880144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 c0278ad1-0e3a-4948-826d-ede856b67b87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 4a3a5f23-7df7-4e45-85f1-d223597d8f42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 738e9ec0-7d7e-4f1e-b694-78f20d8d7c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 8439f8a9-662a-4e78-aff8-b39021d4c835)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 85e238b0-e2c1-4a06-9061-74f2e89f6c95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4477;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE86F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC113;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0940;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #227 92b5180f-b941-43cb-8f2a-b6b283b250c0)");
unit.assert_eq16(16'h3D93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #227 9d3f97d0-fbfa-4a34-b3da-73a8aa2ccb95)");
unit.assert_eq16(16'hE86F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #227 bb3bf4e2-4878-4e26-8598-45a9f9a2743c)");
unit.assert_eq16(16'hC113, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #227 e8abeec1-e1ad-402c-838d-4db7a9332268)");
unit.assert_eq16(16'h0942, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #227 c9812cc4-38e9-45f1-b6f6-5481dec01702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 53a399e1-522d-42e0-afe4-5bbfefb6a0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 b0f8da2e-300d-4027-8605-8dd529752a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 b8822bb9-2a76-4e33-bb1b-2648c8bec654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 50a18203-c302-4df6-ac53-59f3247e5af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 3b2dcea6-665c-4810-b58f-e482ebc642a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 72b6b7c7-08f2-4044-90b2-152427fd9e08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1BCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0B57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h68C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #228 ed666e85-bbac-4023-9737-ebe0a30d9915)");
unit.assert_eq16(16'hAF73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #228 7675afae-3d2a-48f4-9dfd-4f824332137e)");
unit.assert_eq16(16'h0B57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #228 972f5deb-a0a8-4f00-bd1d-f955b849395a)");
unit.assert_eq16(16'h68C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #228 09f852ab-7af1-45ac-976a-2006508ceb57)");
unit.assert_eq16(16'h01DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #228 43b0751d-685f-481c-aa3f-b81dea19f317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 7da1e8f1-293a-4687-ac96-1d8efb7e66e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 3dbc8280-69ee-432f-8d83-9a9407091ccb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 9bbdfbf2-a29d-49fa-a5f5-079bc8c12c65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 d066342b-e716-44c6-af93-584c43ae8723)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 44a238a0-0479-4514-9a9f-43c39d1a7eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 3e072ac3-8de5-4d33-a5b5-990af8e94f24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h14B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h992E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1103;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0625;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #229 ebbd1d38-3b2a-46ae-87ed-a483d7c8a2b5)");
unit.assert_eq16(16'hF62B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #229 fccd854d-b6d1-490a-97ce-8decef6990c0)");
unit.assert_eq16(16'h992E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #229 fcba40f2-f3a2-448d-96b5-5dfb956fc618)");
unit.assert_eq16(16'h1103, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #229 335a2841-f9ef-48fc-8312-37e304226d0c)");
unit.assert_eq16(16'h0627, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #229 11fac0ff-7cdc-4c08-a751-a4c70ffa3e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 ed40e923-b9f9-49c8-be10-c8d8c39c2189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 80659dd3-5ea3-46ed-b56b-e1cfce184dcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 81feb68d-c843-4587-92b4-4c2d0dfbb710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 b82cceed-0013-4c6b-9dc1-ee07552f214f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 741aadef-98b9-446c-b552-237ba75741fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 dbbdb660-aa85-4f02-a29d-353a19a7c6ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h27BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h44C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0018;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #230 c865be97-df02-4e86-8952-1091c5a1504a)");
unit.assert_eq16(16'h2E55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #230 2bdfeaa2-2c17-4ddc-b2fe-9bb59b9ce029)");
unit.assert_eq16(16'h44C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #230 30869059-dc78-4301-9acc-327fdd8d69fe)");
unit.assert_eq16(16'h0EE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #230 98e8d01b-416e-41e7-8ed8-7d5b87ec7174)");
unit.assert_eq16(16'h001A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #230 b4650019-d4a7-4233-b23e-0a34fa07f928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 0d8cf80b-691a-4313-96d3-69fe0969a4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 89c805a4-4856-4e38-8fd6-30ff894c75fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 cdaaa52d-6563-4192-aa31-a046d89355cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 725251c9-1e07-405a-bfc0-e4539d5e6da8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 b9e4d710-7f78-4024-b9c1-263741009a6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 34cde999-1c86-4452-8759-4839f9912566)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA181;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h93DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5F9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h055D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #231 a7037ce3-15db-4dfa-a93d-61a8b983ee0f)");
unit.assert_eq16(16'hDCD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #231 89f2c90c-6fec-448b-b69d-360c0be4b413)");
unit.assert_eq16(16'h93DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #231 13f419f3-0f47-4dc6-a026-b868efa474ba)");
unit.assert_eq16(16'h5F9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #231 980e4403-5ab6-4bcf-80ef-cbaac9ef9c49)");
unit.assert_eq16(16'h055F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #231 c6696050-a6ba-4c41-a21e-2b891d88c005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 9e8a0b86-8c68-4f54-b11c-f707994ea006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 d0398ba6-936d-4b89-b7c6-db806ac8ca39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 ff272b46-71b3-4809-9398-9d35a95f9d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 2e7339bd-0fcf-412b-9f2e-6669995cfb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 9a05bf98-8fc7-41db-98e4-26768b6b0a5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 b14e586e-5c6a-4666-92d5-f1751fe25956)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC957;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4FBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #232 ce9392f6-01d3-473a-9711-667f595d62cc)");
unit.assert_eq16(16'h377F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #232 23f6de5b-bf4f-498e-95b4-734c60566da3)");
unit.assert_eq16(16'h4A64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #232 a7dd7562-a3f5-43c1-82ed-a4a4cd9b55e7)");
unit.assert_eq16(16'h4FBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #232 038a3c47-e819-4256-884c-eac324cae2bf)");
unit.assert_eq16(16'h0A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #232 14994e0f-3141-45ed-8bed-4432647e09fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 be6049a8-4f6c-4b63-8826-c2ed37ca6bcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 cd77d4b3-208f-4015-a4d3-41c0a0e6d2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 b2f6300c-bd24-4f64-bb96-e541087172d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 9ef385fd-8cf7-43ea-9fa3-804f1cb15822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 482d53e1-b31f-4092-9469-c73f1452aa1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 782039dc-9ec1-4c31-98cc-78976629c98f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3607;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #233 59fd8e8e-1985-4bf9-91ac-15dba547f6d1)");
unit.assert_eq16(16'h70DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #233 188c5a8c-5a1f-4b39-a347-5e3d75c1e02e)");
unit.assert_eq16(16'h3607, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #233 aa6f5acd-dc3f-4e24-be93-3e0136d30678)");
unit.assert_eq16(16'hBB9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #233 a700e24f-d1e5-4f96-839e-e27b9c822228)");
unit.assert_eq16(16'h06F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #233 52ae12d9-b75b-4909-95e5-e4d2f6399774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 b035453a-e121-4732-aa81-6a5040adcd11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 ff7bab4c-de50-4229-aaa9-a81c641dd5bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 fa88e3ba-9580-4766-bcb2-e7a0c65afa7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 f4213df2-bd39-42a4-9b01-abb255704581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 4bb39898-6232-4d5e-8ac0-54ba3f57b627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 3c90aa76-d445-4dad-bd93-434d59320eb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1874;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5084;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0545;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #234 69180357-ed9a-4f9f-928f-df8c303e0e58)");
unit.assert_eq16(16'h2E0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #234 697ddb18-8ffa-439a-9e59-39c971d2e531)");
unit.assert_eq16(16'h2A1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #234 7422a74f-a2e6-4c8c-9024-91f2b29f9467)");
unit.assert_eq16(16'h5084, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #234 01f841c6-52a8-4f94-80ff-b69d8eccf937)");
unit.assert_eq16(16'h0547, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #234 ae351a28-e00a-42df-82b7-f3ad4a842324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 c6e9c0d8-4fb9-48cc-ad75-100ea167dcaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 25441e74-e4ad-4d57-b75d-0e782daee3bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 b80b0d8d-70d5-4b01-9860-7fdbd42ff046)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 43539ff7-1473-497f-aae3-f34eeb38a369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 434a56b9-3fb5-4ea9-af3a-450e6ab22258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 b2032f0e-453f-4261-80de-b49a0a030535)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5379;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h86BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4471;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0257;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #235 34a6628a-a413-41e1-8d48-6875a5b8a8ed)");
unit.assert_eq16(16'h97F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #235 883510e2-bece-4a6f-97b8-08c7e8b460ca)");
unit.assert_eq16(16'h86BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #235 8f97868a-902f-4c37-9f7e-79a0902f8b36)");
unit.assert_eq16(16'h4471, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #235 c33eed8f-e955-4482-87b8-8cd1de20898d)");
unit.assert_eq16(16'h0259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #235 511869ee-b5ec-4ea3-bb7d-8db6070ae238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 14ad858a-8cab-456e-97f3-7249780f1b5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 c2ea1d20-45ab-40fc-b1b3-56fb6fcfeaa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 149e3b80-3019-4b91-9b42-ea329b227cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 e376bd1c-43a4-4920-89d7-f26de78deacb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 30332885-8a72-4fe3-b551-34b6f6558f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 f6c6546b-e85b-4981-9e21-6df34b109f58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4AE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA724;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h66EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #236 3e0544cf-1532-47f9-a6c1-d3d77aba6d0b)");
unit.assert_eq16(16'h1FD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #236 081b80e7-5617-473a-a151-28ad5448179d)");
unit.assert_eq16(16'hA724, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #236 5bbefc1f-ef89-4338-8b35-6e4a0bb1ea7b)");
unit.assert_eq16(16'h66EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #236 8dc36296-9e76-4c02-b55a-0773f01606c3)");
unit.assert_eq16(16'h08BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #236 6acdb4a7-a8b6-4d28-93d9-cc1d999c16e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 a062619c-f6d4-4be8-9e04-594aeda92e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 d42bd053-8e44-4230-9fd3-bb19f64b32b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 6ec81db7-5b81-463d-91a3-94d00a8f9b95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 e3e8b7b1-3033-40f7-8e3c-cdf3b39ca8c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 6629c448-a782-443b-bf3e-bc543afe6d5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 77da4dbf-8c29-421a-985f-a4aadad8787f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h980A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBFB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5165;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h068A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #237 9175257e-ed0c-4b32-871e-da2d9bc7a890)");
unit.assert_eq16(16'h4C4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #237 c1353eab-4e6f-43a9-b52b-1635193aa0a6)");
unit.assert_eq16(16'hBFB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #237 a300399d-9804-4b69-add5-ad131c33cd74)");
unit.assert_eq16(16'h5165, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #237 aa333205-5bc8-44fc-8282-53a81c844e23)");
unit.assert_eq16(16'h068C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #237 d83cfa2b-79ac-46a4-8c73-b06e68a139ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 f8b537a9-17a3-4e29-a26e-7b0da10b0897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 ae6be9c4-49ef-41f3-a09f-e44f5a7df3ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 fcf5592e-31d0-4c23-a4cf-68ef79fd88d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 536ec24d-40b4-45e8-b308-e4f1645acfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 d5fe63a5-ce1c-498d-beb4-b8be4cdac652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 10746c01-77bd-4490-a421-23a8e596b868)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7198;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD8BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3351;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #238 b66f5e34-48bb-4804-b654-2b55993d968e)");
unit.assert_eq16(16'hCF62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #238 caa27200-f3bb-444d-a5aa-5c7ac10e4e66)");
unit.assert_eq16(16'hD8BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #238 2936b09f-3177-4950-ad28-f3abda265ad2)");
unit.assert_eq16(16'h3351, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #238 6d8dc5b3-4b21-4cc7-a5fa-28bd41e26042)");
unit.assert_eq16(16'h0B20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #238 e220c253-348c-484e-a9bf-8b27ecacee53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 e98e8933-d784-4d57-aa82-1a448a47db70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 46dce605-e1d1-45a5-807a-c965ac1aa037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 9c736d1a-59fe-4931-b58d-5e939d1bcfa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 66ce100e-e080-40d7-b6b7-883e3afa2d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 c2f66647-d824-4c24-aecc-5a570c644edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 f6db7038-3b74-44b0-a5e0-777c2c906bed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF272;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h87FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #239 3bd53911-e2e6-4ff3-bfac-ceca5f8196e0)");
unit.assert_eq16(16'h7113, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #239 3a6d18c3-52a2-42a6-a7c6-fda80617c97c)");
unit.assert_eq16(16'h87FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #239 7e8bac28-a752-48c4-a17e-5dc6d0845ae4)");
unit.assert_eq16(16'h5D56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #239 15d2e7fc-ba59-43d7-8d78-0a38345a8adc)");
unit.assert_eq16(16'h0EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #239 d42dc0ec-ed76-4a67-8ce2-a2e0b4f49f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 e3bd14a2-a70d-4325-997c-6019231b185c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 49954626-80bb-4af8-a0d8-6c7e05a68ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 ecf76a53-e5c9-47a0-9bd6-8359e4f8643e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 69358c8e-3dbb-4c65-9a43-245af3f2be13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 e8e9ef4a-81f1-486d-b86f-d35c8ef380af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 e226aabb-4350-4141-8a62-f750b8bcfe11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE10F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h34CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #240 b8cc6f2e-5214-445d-a3c9-deb23a451eb5)");
unit.assert_eq16(16'h43D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #240 6eecf994-2af8-420b-9eb4-11889b9ab238)");
unit.assert_eq16(16'h8F6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #240 b82948c4-c379-4306-8e1e-46a78ca8a9db)");
unit.assert_eq16(16'h34CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #240 3f77fc18-6b34-48a2-943b-8d358cdab1bc)");
unit.assert_eq16(16'h07B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #240 25758f90-8404-4d01-9689-51d1fd5f8e58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 debe29f5-148f-4fe8-8603-3d163e1642d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 b3503b6b-52dc-40b4-9c9c-89531b3e0e87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 ffd25605-c8a5-4f84-9974-af09fa1308c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 1516b2dd-c37f-4ac3-ad4f-fe8be7a22829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 5aa6b27d-4511-464b-9942-7b9de694dc68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 f2e35a31-0b84-4011-a45d-c3530bbf4295)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC9A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE67D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8984;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #241 441d2bd4-4870-4cf1-acf7-8f7226e2cc98)");
unit.assert_eq16(16'hB944, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #241 ac2f2f35-7a81-432a-a53c-0625e86aa2bd)");
unit.assert_eq16(16'hE67D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #241 ec3ea46a-e1ee-42bc-8fe5-0f21c12ae331)");
unit.assert_eq16(16'h8984, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #241 a8da891a-f912-45d1-bb64-dc859a171be9)");
unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #241 98af246e-9387-4100-9767-f7b97dde7280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 76f0352f-4a6d-4748-b8fa-a1bf5c805c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 2d35656a-e8d3-4084-a1d8-581efda93067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 dd30818e-2481-455f-bccc-7642233502c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 f728e8bb-e824-4901-99b1-a37c30778bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 f5646d25-aefd-4929-8500-5b3f1ebc659b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 6d8c5587-eea1-4339-aca6-f777786fde81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB1BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h314F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0894;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #242 8b8de51e-7fe0-48ac-9b8d-bf9134f15084)");
unit.assert_eq16(16'hA638, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #242 aaed899b-f1e6-45f8-b932-4cd8976b814c)");
unit.assert_eq16(16'hB1BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #242 848eb8f5-9476-4cd2-bbbc-bf3f7c578edf)");
unit.assert_eq16(16'h314F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #242 6d8149e1-38be-4a9d-b692-efca604e640b)");
unit.assert_eq16(16'h0896, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #242 b494c4ad-7791-4530-8274-af30b3ccf280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 95715560-9390-471b-9c98-f47248a0c07c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 e0ca5592-f250-4503-99c2-42444f1faade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 f5ece1fe-cc07-4dd0-97ca-7e1c274d897b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 7c54b89e-3f69-454f-8476-3bc10d4abbca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 7de32cf3-a112-41d2-9d85-0e82ea3d2ffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 02ee4a93-3d43-41d0-9a71-a9a76874e913)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h850F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h57E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h075F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #243 8309aab8-4ba9-4f23-99c9-3d7a52b28295)");
unit.assert_eq16(16'h0C31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #243 ee40a5a5-a8ce-477e-84b0-0998aa63c1cb)");
unit.assert_eq16(16'h57E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #243 f934ee4b-1305-4c56-a5f3-973acd21ee63)");
unit.assert_eq16(16'hAD6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #243 9a1fa6d1-22e5-4a65-873a-f9a2df38bef7)");
unit.assert_eq16(16'h0761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #243 b732299a-00b8-4dba-ab13-4bc608b313b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 9f9ec2a5-5e24-486a-b84b-74eec3d29d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 51666139-1898-496e-ac59-e3da09ef3423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 6b97f0a5-c01c-4d21-a6fe-0d71b10aa5a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 08a552cd-aaa5-441b-8b6c-43c2df888d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 9a8ffe5e-d6d6-4fc9-a142-ee390adef63d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 d61dfef7-5941-4f12-a858-1b174c28cf80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF35E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0677;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF7A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #244 7ce56a9f-1f88-4283-beca-24229a4e89d3)");
unit.assert_eq16(16'h9D90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #244 226b39c8-be0d-4350-a7dd-f7587a7d433c)");
unit.assert_eq16(16'h0677, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #244 de902eda-e7a6-4642-924f-f4c8ecf24547)");
unit.assert_eq16(16'hF7A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #244 d890a384-dec9-4f88-a333-34ca53517ee7)");
unit.assert_eq16(16'h02F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #244 e02b80ee-fc07-48df-899a-bb30cef66634)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 43ad944f-6119-4726-98a8-662a97a85295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 e7d93335-c605-495c-9c1e-e9ad14798b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 f7f32d1b-1a47-4a41-bf99-910eb6fdba81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 e5632cea-a90a-4b1f-a46a-bd47a3f684bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 1b31d70d-57ca-42bf-ab98-915a5f70d579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 07cab5e0-7033-4c1e-b5e1-f61b13b30659)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8744;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #245 deb64cbd-735f-49b4-bad8-095001982440)");
unit.assert_eq16(16'h896F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #245 93ede52a-8441-4af8-9878-4752428afe6e)");
unit.assert_eq16(16'h0D55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #245 b338d6c6-5dfb-4070-9017-9012f9bfbc89)");
unit.assert_eq16(16'h1F15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #245 19d96fe5-9a62-4b62-b192-88889e273dbb)");
unit.assert_eq16(16'h072B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #245 17d21f33-1912-479a-ab03-a31dfb0a00e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 8ea95f5d-abda-4520-b357-43484af186ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 0895dda0-8957-49e3-a595-3c7fe1c6b531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 0092a1ed-3e2e-44b9-9335-65dd768bb666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 13afe1a1-8e25-40a2-86cf-c2d46da55607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 87740f49-e7ef-481b-968a-b3b1534c39a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 2cc9273f-855d-4510-9501-9981b2bc23c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7A40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBBF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD64F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #246 c4b555f6-e2b9-4fd0-919f-c0d7898c6f40)");
unit.assert_eq16(16'hCDA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #246 56fdc46f-f196-4354-905a-49185ca20023)");
unit.assert_eq16(16'hBBF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #246 782e9d44-25a0-473f-a05e-aed965b7e61e)");
unit.assert_eq16(16'hD64F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #246 b5b45bf3-5607-4ff6-828c-81fffd2f5db8)");
unit.assert_eq16(16'h0EE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #246 64d65af6-7355-491f-a26f-4120b857e885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 38a887f9-078f-4ab0-aae3-e81c350bf688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 7ca8dc4c-a985-4eaa-b9b6-8ec659084c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 7f8ed3a1-4174-4ad5-9161-665bb083397e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 1392a7bd-cda6-400a-bbd5-7f5dcdace9be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 645a6956-2e92-46c0-a079-8a2e22c9a291)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 81655087-c5f7-4eaf-9321-56314dcb3495)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4BF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h33E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0821;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #247 81bc4632-0032-42a2-aa08-508bde739e16)");
unit.assert_eq16(16'hED09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #247 7b3ff88b-ae4b-4f1e-aa17-4b7d1017c361)");
unit.assert_eq16(16'hA1B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #247 ca7a5395-8fcb-4b4a-8faa-3a42115dbe74)");
unit.assert_eq16(16'h33E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #247 25287924-5a19-4b15-b68f-dcba825d90f9)");
unit.assert_eq16(16'h0823, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #247 7a190bdd-c8ac-40b7-8f9f-392cc1889903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 996f7ca5-e5ab-4729-8a3d-86937ea7d932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 ccd43493-c11b-4034-bd81-6f7fa75b752e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 4eae9972-4bff-4cb1-b80a-e41ecc2a5005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 3440926a-f954-4239-bd39-56b5d2c01fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 228e1041-8fb6-4fa0-a2f2-6dd9cbc21928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 8c40b93f-961f-439a-b15e-88859f7da58d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8AF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #248 657da340-595e-490c-af2a-12a8f90a4319)");
unit.assert_eq16(16'h7FE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #248 30259773-1bfb-4163-be27-a957781494e0)");
unit.assert_eq16(16'h55FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #248 43f75ac4-5532-498c-abc5-c13e669cca9d)");
unit.assert_eq16(16'h8AF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #248 d34c416f-3c3f-43ec-80fd-f7158476d473)");
unit.assert_eq16(16'h0A6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #248 9d333c9f-e061-486a-83c2-f80a3629e353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 67e17476-04cb-43ef-a964-9f4a0a6f3a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 9fa56561-1117-4984-81b1-fdd6835aefc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 7e976e48-831a-4f2f-a573-be6fcdef22cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 809ab1b9-47cb-4377-ab99-ac36e7c9b4ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 8b59dc79-d1c3-40b9-9205-ea7e47dd4f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 dbc6a6d2-cd3e-4f86-bca5-3a255e717778)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h60C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h36E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #249 40462199-b28b-4a33-b881-c2cac7c991eb)");
unit.assert_eq16(16'h747F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #249 2e560f14-bfa8-4c1d-a2c5-72437881d785)");
unit.assert_eq16(16'h2A6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #249 217aa73c-41eb-4bf3-b8b3-549b2bd5fb18)");
unit.assert_eq16(16'h36E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #249 bf93da6f-baa5-4c87-bf09-8990c6e9be5f)");
unit.assert_eq16(16'h0DAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #249 782fdb00-02b5-4b23-b6d8-9dee1dd80e0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 8b3e9bc2-aa7e-4458-86f6-5acbadb77fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 4fa6bd89-675f-4343-9900-c058a572827e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 77e5e6a4-0a8d-4bf3-a80f-75352a73b855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 b65e48f1-27cc-49e1-80f2-dcc12e76756b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 9b73b8f5-5c59-49f0-a03a-434f1bc6507b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 922622bb-772e-46c5-b7ba-b4e7434e0ad0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5818;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h86BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1261;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #250 d75ade48-5fad-47ae-abf2-8aeac20bf512)");
unit.assert_eq16(16'hE624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #250 20dd7c18-1eda-4276-8821-a8fd97aecaa3)");
unit.assert_eq16(16'h86BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #250 231f9eee-3281-4eac-9719-5f6ebbd62038)");
unit.assert_eq16(16'h1261, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #250 b9796193-c995-485e-9ecd-b4a02cf1401d)");
unit.assert_eq16(16'h0AB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #250 3272145e-5fc2-4253-8282-d8ddc256a497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 3192a610-e2df-40df-8eb1-65493a1cca60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 9a8cfd29-d40c-48b2-a20c-39f4fc68fce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 4a344dee-7adc-4a99-8820-985bf67191e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 38c4a620-c08d-4a35-8a6b-a56d960f66c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 d47ae451-66e1-4770-8bf0-2a94e77c0ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 df6ff96b-30fa-45d0-834e-9dee4262d059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4D35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6219;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF46A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #251 22217610-6d73-4cff-9e5a-140ed691eede)");
unit.assert_eq16(16'hD89A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #251 06c834b4-f507-4e3e-a1c1-848caa080f13)");
unit.assert_eq16(16'h6219, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #251 2a9604f7-1b79-4619-876c-71ade3c55ee0)");
unit.assert_eq16(16'hF46A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #251 83641e45-c257-4f4b-9bc8-bb367156048c)");
unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #251 80017d81-dcf8-4241-950f-dbeee39e3bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 b152681a-1765-487f-8447-f1659417aa95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 b6d3d22a-36f5-49bc-a7cf-f1e989f290b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 83469f09-5b74-4cc3-bd99-0f17cc14c772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 f4edd5bf-3228-455d-b141-d79e649f3d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 e9556d73-2fab-49dd-88e5-129a9f460ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 dd25cba7-c58d-46f3-9026-19eb98f22c6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h546D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0970;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC14B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0848;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #252 39de27da-5fc9-46dc-9762-363929317a08)");
unit.assert_eq16(16'hF951, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #252 f3cdd428-e96a-4544-9a30-8ec07e627292)");
unit.assert_eq16(16'h0970, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #252 cd2e4d5f-3637-4257-b1b2-b0956b77e40d)");
unit.assert_eq16(16'hC14B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #252 5adeeaf9-0417-4463-838d-0802ef278f78)");
unit.assert_eq16(16'h084A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #252 d9ffe97f-d31b-4bc5-9f22-5d47a230cdf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 28814fa0-e8d0-439d-8125-a27bb1b41bd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 babead5e-02da-4da0-9ae8-babda86db0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 8f50edc5-f801-467c-949c-dd04da7a76a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 b6b77d9b-55b3-4885-8a1c-a4379198f9a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 fed6d015-04ff-430f-9384-9e847e6c5934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 f2268ae2-57af-44bb-9fcd-5c08edc9dc4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B77;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h18A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0424;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #253 3face85d-a96a-4dff-87e3-cf334d20b1f2)");
unit.assert_eq16(16'hE1C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #253 2e1c05f7-7294-4a71-afa3-2b2de6f5b6a3)");
unit.assert_eq16(16'h3F19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #253 dc9e9cd8-4d83-44f9-8775-63fa00ef3728)");
unit.assert_eq16(16'h18A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #253 250b6b12-5acc-470f-9249-442557de57f0)");
unit.assert_eq16(16'h0426, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #253 5cf4d5c9-178d-47ac-8421-230130048dda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 5cd5bb73-f2af-452e-a53c-6863ebbb94f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 050083b5-81aa-4045-88ee-b4bbce43f553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 42ca6881-78c9-48cf-9906-ab3ce9deb122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 1f4be31b-869e-4fdf-81a0-9988504db3f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 7503c888-1d9f-4c24-8d2d-a6adc5002b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 c884b60d-a650-45f5-b397-b2116d3dad66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h77;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h77D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0016;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #254 fd63b1fa-cb7c-456a-bb2d-aff2e0d2221f)");
unit.assert_eq16(16'h2248, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #254 82980a86-510e-4a31-96b6-4f13d2e0f78e)");
unit.assert_eq16(16'hDF62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #254 e0446ca6-550f-4e6b-8519-cc43aabe95cf)");
unit.assert_eq16(16'h77D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #254 169cf555-6958-4834-9347-a0934d537701)");
unit.assert_eq16(16'h0018, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #254 6c72db32-107c-4988-9722-77745a1d44f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 8c422843-b7f1-43eb-b229-39f17b26dd63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 f805f1c8-fa6f-4f9c-b59a-6363be5f1b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 9434516a-d863-490d-b975-f9049349f0b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 2b8d3e40-0707-4dfb-a5c3-0dad1cac3d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 5de7200f-57c5-4d5c-af3b-d674c44d58bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 0a3db958-54a4-41f7-8bd9-dc174a56f4cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hADF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2DE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA751;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h086D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #255 a548b252-1a13-485e-b994-5113c05ede30)");
unit.assert_eq16(16'hEF7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #255 80a6ebbe-159e-4235-be22-714d26a8300e)");
unit.assert_eq16(16'h2DE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #255 54b10839-2bc5-4020-9120-8980c2f53f16)");
unit.assert_eq16(16'hA751, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #255 4ea39032-3680-4768-a907-e3f60911ee8b)");
unit.assert_eq16(16'h086F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #255 c6fdb281-d957-4255-9982-365b7d5240a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 2853324d-7807-4f3e-892c-7afb27223f12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 c6ece4c9-5d5e-40e0-ad87-0be843b72b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 155f5f4d-f120-453f-a26b-7e00282f8f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 5c9cf112-ba6d-46b1-a4c0-f54d1ca3f48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 b7551c56-8cbb-4dac-9389-6af6e6b9a736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 7d3a4fcc-e6fb-4006-9ef7-b130e9db772d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h10B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB906;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #256 fb2dfaa4-6dfd-4ddc-a040-8c37a3d035cd)");
unit.assert_eq16(16'h10B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #256 9cbb3252-32c4-4aa8-87b1-5ed2c6bbdb18)");
unit.assert_eq16(16'h71C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #256 002e5e4a-0c9c-429b-a61e-907e57950d31)");
unit.assert_eq16(16'h0D0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #256 b2777ec5-ac61-4ea9-90f9-62533d61d831)");
unit.assert_eq16(16'h046E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #256 60759bcd-47d6-4e18-9bc1-7447578a21f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 a86da2b6-166c-4cc1-aed5-e070fe35f5d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 418a4de5-7c2a-4112-a037-20bf67aa2f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 47426add-d015-45c9-906c-9718d6513fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 30f90576-2417-43f6-b5a3-b223f238c72a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 c518b8b5-6eb9-43a4-a94b-4d3fca2a97aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 ccd80aae-e4a3-4b2f-a54c-e53496247012)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9349;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #257 5646cd8f-3f2b-421c-a2d6-90c75fdcf691)");
unit.assert_eq16(16'h3D6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #257 3c709f62-58ef-4622-9e51-ae290b99dc35)");
unit.assert_eq16(16'h4CD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #257 f27acf48-d976-4eac-b6fe-1b46be2c1fc2)");
unit.assert_eq16(16'h1C85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #257 61b6b7e6-3eb2-46fc-ac08-6d52f24ae80d)");
unit.assert_eq16(16'h03C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #257 1c949dda-e9b5-462f-9b3c-0c96ebffa300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 431afd68-196f-4845-b481-65ae63a818a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 230ce9e4-3a31-4c4f-94cb-69570862196a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 7aebaa96-e016-4688-9e90-006ce9098460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 5492f808-f855-4dc1-a17d-5777e5475752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 bb97cb2f-df22-4482-b53f-7507b27fe7e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 1945aa99-2515-45e3-8e17-eb2e5c279e42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4011;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h121E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #258 06e886f6-9ea2-4883-a556-d6c514e67351)");
unit.assert_eq16(16'hDA9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #258 af471539-b273-4cf4-b7bf-9ffd44c9fa4c)");
unit.assert_eq16(16'hAE3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #258 5cb348b6-2749-44d1-adf8-7117edae8881)");
unit.assert_eq16(16'h121E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #258 24a52f91-a524-4bd6-85a0-c3d2011ce9be)");
unit.assert_eq16(16'h0F67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #258 73865c71-0ed6-4ef9-9737-5867f0587c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 562ebe83-a43e-4ebf-bc87-d142d494a47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 fe14e8ba-c868-4a1d-88eb-8ca71c799b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 6b11fbb1-d11b-4fb5-8edd-90dabf811d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 04ad4b8d-e24a-400a-ac9c-ec659eedb261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 8d16f19e-b731-4b80-9368-cabfad30dba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 69228cbb-fc78-4f6f-a2a0-3f620ed4353e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF2CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0313;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7B22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #259 a60bd57b-f650-4d58-8057-6c52f514f10d)");
unit.assert_eq16(16'hF2CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #259 36c4610f-30e1-420f-90ef-6f2747538587)");
unit.assert_eq16(16'h0664, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #259 fa4b5a19-cab7-4337-b508-81cf26efb3d1)");
unit.assert_eq16(16'h7B22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #259 04d85ccf-d665-4b8d-ac88-f7a2de55f87a)");
unit.assert_eq16(16'h0F02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #259 eda1e6d8-d205-4429-9331-3bb56857a40c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 007e4c92-2e5b-425b-82c5-9bd20a015885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 30bbed87-e3e1-4fc8-ad84-acef98bf75a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 fedfdac1-05ba-4cc1-a7a4-10954e6708ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 e98e3e45-9682-4be5-aa2b-3e3f735421eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 91153983-eb87-4b9c-8bd5-2714680f076d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 4b4a24fd-6cdf-436a-93ec-2c04bce00197)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC61A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #260 ed4812dd-2345-41de-bcde-a9d6fdf11d15)");
unit.assert_eq16(16'hD0BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #260 d76c0171-99d4-4ad8-9d50-a4edf0d48b76)");
unit.assert_eq16(16'hBE99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #260 37b86830-4d4f-4be9-8270-c88059cd4a80)");
unit.assert_eq16(16'hC61A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #260 e587ea3b-be44-4b28-abe0-9abc51b14f23)");
unit.assert_eq16(16'h0EFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #260 055700a9-1451-4bbf-9ae3-0e349400d6df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 f7a3fffe-9510-4fe9-a132-bedc5a539129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 098dc36f-ebe4-4de9-84ef-341ab62ebf71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 2e479a85-5b3c-4bf5-ae9d-35eccd51f9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 0ffc60dc-331a-4494-adc9-9f1afeccb16b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 278076a4-4389-43fe-8fbe-f3ae007a0203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 1b91925d-4829-4ac6-b771-9ed906498b72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFD1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF14C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h076D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #261 e4b4ae82-9d65-45a0-a4c8-c9d312cc6b19)");
unit.assert_eq16(16'hFD1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #261 d64eea7f-2ad5-448c-8ddf-7eb66f4d0051)");
unit.assert_eq16(16'h5778, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #261 596b5294-a71f-4f26-aa2f-13ff0f897038)");
unit.assert_eq16(16'h00B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #261 9c727b8f-6a2b-4c31-b494-6d94da1e30e7)");
unit.assert_eq16(16'h076F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #261 bfc4c2f8-c6e3-4d14-9d23-d6b00f780f7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 eb6c01e9-a393-4173-b9a7-8ffab84406ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 211ce973-4042-4370-a285-ce116a7e0347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 1a121167-c147-40fb-b587-21735ef3c268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 f692be5d-5fff-42d3-aad8-c1e52f0270f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 fb256a51-af25-42d4-b8cf-a55168ff3bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 2dbe256b-4371-4de9-b7c8-5eff32b6d557)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA205;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB5EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5AD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #262 bc0e7f36-ca20-4256-8042-3b56f2685cef)");
unit.assert_eq16(16'hA205, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #262 9e478f1f-2f56-44b7-85b8-1a9288e2619e)");
unit.assert_eq16(16'h21CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #262 5199b20e-87fa-4942-a74b-5ba4069dbc39)");
unit.assert_eq16(16'h5AD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #262 67d5d65e-55ac-49fd-8202-a0bcf870611a)");
unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #262 af0ebf20-c145-47fb-b607-98235a159950)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 4062c9a3-33f9-47f9-99d8-ae7a06a04960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 787d9dc1-3b0f-4788-8034-b87c0f7398b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 013e38ad-1056-4613-9209-b3de9c2ea346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 6740eae4-a98e-4a88-b772-68e45d4d0db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 e88b55a9-744d-44d6-816d-cdbbeef8d83b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 22609c98-2082-4d9d-b409-33aacb0a1bd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF2C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF45F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #263 b60c2522-c728-46d3-a543-3ca07aa9a155)");
unit.assert_eq16(16'hF2C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #263 b206454a-8708-4b85-af15-bd9d9b4748da)");
unit.assert_eq16(16'h72F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #263 16b77c0e-19e2-47f6-895d-19cdccf4a18b)");
unit.assert_eq16(16'h2F0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #263 995989af-cf62-4025-967b-1434c50d3307)");
unit.assert_eq16(16'h02CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #263 0141443b-e178-4988-b3af-d1e5208de937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 18209739-3acc-4670-a367-80a97d58733f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 47aad999-a2d3-47ca-8f4c-bb9672449802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 61cb8dd4-0753-4974-9829-bdb357519d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 ba4c58f7-66ba-44e6-a687-849f9c6e193f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 5cb54621-7692-4892-ae1b-39eb90747d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 af35723a-d929-4417-b7ff-eacc92951ca3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCDA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6754;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h701B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #264 a4e791bb-ec74-45ce-b41e-559c58f5cfb8)");
unit.assert_eq16(16'hCDA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #264 5f182f9a-783f-48b0-b2ff-9c7fef5e0b2c)");
unit.assert_eq16(16'h7067, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #264 217590ab-4dd0-4fa7-9fcc-7cca40725025)");
unit.assert_eq16(16'h701B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #264 534258f3-f0ad-439b-bafd-a7cba62d3480)");
unit.assert_eq16(16'h0DFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #264 23ec3427-c428-46c7-823c-e9847e1295a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 bdb5364a-7090-421a-8847-33d6863bc56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 b1873d7e-ad3b-4fd4-b745-04e36d86423a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 7e57cc7d-3b0d-47d8-98db-71bb4576c1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 1d31038c-010f-48ef-82bc-9c41b590d7e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 d3b85fe6-7f0b-47d9-a514-655583e0547a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 4698f050-5c9c-4ba6-83ab-a172420879a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF01C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC86E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFDCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #265 ea3505ef-6b20-43fa-96f8-2c4c1d950692)");
unit.assert_eq16(16'hF01C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #265 efdc0700-0dd1-4ccc-87db-2ccc7b6e6ef4)");
unit.assert_eq16(16'hB2F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #265 7815f005-9b7c-4bfb-8a11-2ddad49aa512)");
unit.assert_eq16(16'hFDCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #265 6a57345f-abad-4d66-b144-7eb916531293)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #265 f0e3949e-2929-4082-a4c1-16797a86f9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 b9f02540-cb69-4a64-b658-2b4928c3bfa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 f064cf63-aa3d-40ca-a9c2-04bec330f53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 e0d224f1-0290-44be-af97-e0c61a0185bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 0825afad-790e-4e60-88e5-23db87397812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 73ee33f8-c4e7-4b33-a6e6-92d37bf7becc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 6947634a-1b56-467d-b3e2-ac298be16fff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB55A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #266 7358758f-749a-415b-a6ba-adbcf937ce5a)");
unit.assert_eq16(16'h57B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #266 80f7b1d5-dd38-4cad-91fa-cb8d76691e68)");
unit.assert_eq16(16'h76D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #266 83e61fd5-151b-4a88-b10c-4fdf72167bed)");
unit.assert_eq16(16'hB55A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #266 8d6f2546-d3fd-4e25-9245-b5d5ba78ce0e)");
unit.assert_eq16(16'h0DD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #266 dad765e4-fd05-4ca0-8f27-9622a29232dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 a28bf6c4-8675-46d9-993a-02c03dfb7d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 c9ee7553-24a3-4778-ac9a-12f9015765f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 090981bb-207b-47a4-85f7-1e7fd8844d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 ef44c23d-6993-4c6d-86e3-4042cb4efa5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 44e9fc01-7222-40e0-9762-43f7c7620559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 6f3d6078-08e3-42bf-b3ee-762e970d6736)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h034F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h51C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0385;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #267 19b09a22-c1f0-4580-96ab-d5613d929e8b)");
unit.assert_eq16(16'h034F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #267 1510c7c2-1ac1-4931-8960-3f2dbf7f6e66)");
unit.assert_eq16(16'hB649, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #267 097f1ebd-1464-46f3-8454-6e080cc878d6)");
unit.assert_eq16(16'h51C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #267 899931cf-3d52-41e0-8fff-5c9e0dbfc0ba)");
unit.assert_eq16(16'h0387, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #267 a0301bdb-4a4b-45cb-a954-9279c0e4ff42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 fdf07d0b-f7d3-4599-9a56-74d96439cca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 6cddc1fd-8383-482c-a05d-0042fecee279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 f7aa05dc-a145-4895-943f-28a116805e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 f36d18a9-f651-4de1-9ac0-6f6a226c7029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 77612758-4a83-489d-b1cf-84e782885b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 b7c833cd-03cf-44f2-a969-2ed37484075d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h89BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF005;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2BCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #268 f3b476da-48a5-43df-a2e0-0fbd7131b000)");
unit.assert_eq16(16'h89BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #268 76788fa1-d24a-44f9-ab41-e982e7d5ae93)");
unit.assert_eq16(16'h56CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #268 7d0a9800-0fdc-4106-bd9c-a00ee77a4c36)");
unit.assert_eq16(16'h2BCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #268 ce31ffa2-0e1c-4943-b727-d43b1ce2d8d5)");
unit.assert_eq16(16'h0D4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #268 b4820bef-a2da-4cba-9d82-982290948d6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 dd27ffbe-9149-4e38-8c7a-6d47c8eaf764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 2c7d34b2-3c3f-432d-b327-077674530410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 2883f492-7375-4e1d-9987-e0c0a2f62f66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 75eafc3c-c702-4bbf-9dba-f5f68f212332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 1c751ee0-6a2f-48cc-89f0-392c1fdc573f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 c69d25f4-b798-46d5-b7c6-bb2cb6a173ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9265;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #269 beb2c8f8-b6ec-4338-903e-741d19245e96)");
unit.assert_eq16(16'h9265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #269 be4d75af-9579-426d-b3a6-7a0c9bc7f248)");
unit.assert_eq16(16'hC4BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #269 9b5c213d-cc55-4c7a-a793-a1b71f795768)");
unit.assert_eq16(16'h7BC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #269 26fd90f2-ebbb-4dcc-9876-3617ff444f9c)");
unit.assert_eq16(16'h04F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #269 28a2e76c-4858-49f6-bb44-783f17d3c69c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 d7d0380a-5b05-4c6a-a5f7-508a12cee9e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 151e061e-6130-402e-9f3d-26ad12e0b6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 3216863e-71c2-4ff5-b5f7-5b9a3d8ad56c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 c37f47a8-2974-4769-8adf-0039b59791e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 f0a038e8-bb99-4847-a069-3cacdaea56bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 48cf33d8-a20f-4ead-adfd-6f83429f1217)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC1AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC8E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #270 c7809bea-24e4-47e4-857a-cfb020a5172b)");
unit.assert_eq16(16'hC1AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #270 054d668d-1c48-49d3-8272-8937dcaea80a)");
unit.assert_eq16(16'h7DEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #270 4aa4643b-c7da-47a6-b48b-b308ff0f521b)");
unit.assert_eq16(16'hC8E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #270 20d89cd0-8679-44ef-8d16-01c510baf531)");
unit.assert_eq16(16'h0E53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #270 12dbe7c1-c5cf-486e-a1dd-563c6ce4ce0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 540cfe5a-cbe9-4ac0-8ba1-ea933dafd2f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 5798661d-eb00-4d36-a29f-4ff8a2b13188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 b691ecef-8097-4bff-b3f6-806d4edf8545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 54fd9159-be1a-407a-9446-c29c733d4f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 b6bd0d06-8971-42c0-be8d-a5005874349c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 c1f43101-f27d-435a-8bcd-963ac7c0e89c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE92F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7708;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #271 c7704248-e24e-489e-b898-182e06c696a5)");
unit.assert_eq16(16'hE92F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #271 ed5a6edc-f111-4a7c-818c-18f184764c13)");
unit.assert_eq16(16'h6546, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #271 f251c61c-b885-4fdb-ba45-ab4b1f6c979e)");
unit.assert_eq16(16'h59C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #271 22aa1b2b-9b5c-40cf-bb2f-898ba7770b22)");
unit.assert_eq16(16'h07D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #271 948a439e-2aa3-4300-ae58-9d1ff861729c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 99bbd669-9d43-4a20-9dbb-f821230bee3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 8ce9f6f9-9ed5-46fd-9458-5383434c2873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 028fb12e-92d5-47e6-ae7a-c2edd02471ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 7b7dfd03-94c3-4fcc-ac13-cc51c4386930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 cec1b681-a9d1-45de-a6e0-971f6019006c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 56c59d49-79dc-4455-8ce6-f88fd9267432)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF6B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFDAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0447;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #272 b1a2deb3-02e5-4222-926a-f28a6914c72d)");
unit.assert_eq16(16'h7E9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #272 7ba1d9d2-bcdb-4786-b84d-a24ae763e9e8)");
unit.assert_eq16(16'h17A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #272 764a9359-95c0-4b97-8d3d-e560f32f63d7)");
unit.assert_eq16(16'hFDAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #272 6794a172-6831-4899-af71-1f3dea74507e)");
unit.assert_eq16(16'h0449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #272 165105c9-782e-4743-9857-ae4a579b2584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 d5787597-7d52-4993-a3bf-e674a3ae91cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 ce61bc27-d5bf-4b4d-9b18-6cb12462f92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 db78b7b6-6263-4dc6-a75e-142442226962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 88453144-8ea0-4256-a6e7-61e6f5e6d420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 123eb813-db93-40b2-bc1b-d941c3f3afb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 7bae2ae2-f5af-40b0-94b0-6e0f256915b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #273 dbc64baa-fe43-42bd-8dfa-1416f84a8ef2)");
unit.assert_eq16(16'h4B9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #273 a16fb7b4-082e-468c-abbb-10b06dc0b0de)");
unit.assert_eq16(16'h6A6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #273 6d7ea6cd-c070-404b-bba0-a928646831c2)");
unit.assert_eq16(16'hC1A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #273 900360f0-f982-4d84-bc72-c1491a44f69b)");
unit.assert_eq16(16'h0FE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #273 7823deef-1e67-4d32-8fa0-8613809bcbdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 cb0e391f-44f8-41bb-bd30-780e47dc2e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 cf3b4383-b54d-49fe-a0ed-e6c3d37c089c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 fe489011-f4b9-4477-9f7e-71b5f54ece81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 eed986b6-b434-4372-bcee-efeaa4641912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 06aba216-450d-495e-9a7e-3127c31f0d7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 acd95b8d-4614-461f-b8a8-b19b20464590)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCB8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3817;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0308;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #274 a1854414-66e9-44f6-a559-478aff1c0229)");
unit.assert_eq16(16'hCB8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #274 3a20625c-3e2c-4646-a7c1-4bfb6a0c8896)");
unit.assert_eq16(16'h7A03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #274 94035a8b-b333-4367-8ebb-22d65ab4455a)");
unit.assert_eq16(16'h3817, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #274 f600de8a-9fe7-42fc-8a75-24629b4e8d3f)");
unit.assert_eq16(16'h030A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #274 2714ef42-5e91-473f-b624-ae68d372402b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 45a2cf36-a971-4910-b4c8-dd5e9f7da2a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 74eb4691-9870-4cba-a8bd-14e20d9fb3f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 5197e226-030b-426b-86c4-d907b1a93f72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 3be4fe69-0786-4cc2-bf65-2b1ac03c0e78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 d1bfb95b-482b-441a-b36e-a0b5f8b4b9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 15e92572-ab0c-4909-aa97-e837f5c416e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAB13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #275 584067a3-3fd2-4540-87b4-1738b6a0aa56)");
unit.assert_eq16(16'h84AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #275 4cd388ff-59c3-4bf0-a449-0334408a8fec)");
unit.assert_eq16(16'hBBEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #275 cb868386-29df-4994-9e85-e4ea12a061a6)");
unit.assert_eq16(16'h84CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #275 df744144-7809-465a-bb7a-0e666a992320)");
unit.assert_eq16(16'h04F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #275 08078a0c-22ed-4e26-a86a-cadad05b31ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 c3c178af-b062-43fa-ae18-7358349a5a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 b826de59-5376-43cc-9553-506f6bc2fa42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 27b67a02-ebc6-483b-a7a8-3590219a8228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 17ec8365-d8c6-470f-b651-54ebbb3c11f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 cd32be6f-842f-45e5-973e-beb888da93a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 2527bc0d-0521-4944-a5ce-7c4cd5a11e34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h18FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0140;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #276 fec0fffa-d7f8-4f8d-af41-479b041829b5)");
unit.assert_eq16(16'h18FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #276 45d93550-872a-46be-8ccf-75992116dcf7)");
unit.assert_eq16(16'h8015, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #276 4cec0e9d-7029-4158-a090-c4d0ca7ce28c)");
unit.assert_eq16(16'h01D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #276 45c99ae0-e7db-4d2d-801f-07b940e07396)");
unit.assert_eq16(16'h0142, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #276 8f170d0a-8fc5-4212-8628-723acd6e162c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 da55e417-ecd9-4a5a-a9c0-2f7ee749cba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 e3b774ae-0c0a-453a-88b5-8b3dc3093fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 e547acc6-29fe-411c-bbaa-6af8f03224ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 f221b7a0-0e83-4e36-b9a8-7ea9a5e516c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 379d28c3-9d77-4584-b9f2-1df40c040425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 0b5f5c19-5702-42d3-8955-9f8795d060f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF2D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF6BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0080;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #277 8d389b8e-86dd-4177-89c0-fda310e59cc3)");
unit.assert_eq16(16'h2A10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #277 ee00db6b-62ea-4e79-8a06-f387d1966a72)");
unit.assert_eq16(16'hAD9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #277 a8173cf0-6778-4b5c-b61d-444a24d54879)");
unit.assert_eq16(16'hF6BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #277 f994d6b0-59c3-4d34-859f-b7466987c190)");
unit.assert_eq16(16'h0082, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #277 ffdb3f39-e721-456c-be4e-4224cdc15478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 d1e69039-672b-432c-a11c-3fc0e488d66a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 efd48b4a-a3eb-49e8-89ee-8ff7ec363813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 c12c2547-1572-42a1-bbc7-82ea6620b70b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 a4d45118-2d7c-40ec-872e-50a281762891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 b48cc1da-21b3-4cfa-b633-4ce28d6c9f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 b503e857-f0c8-4f3a-be08-c701977afa9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h633A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h819E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #278 19734f92-6cd2-45d2-aa6d-40cd6c5a4578)");
unit.assert_eq16(16'h633A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #278 8e7a8454-3d44-43f5-a582-4d3c9c95b7d1)");
unit.assert_eq16(16'hA269, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #278 4d2ce437-013d-4af1-960f-2f2374825671)");
unit.assert_eq16(16'h819E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #278 e6ec2704-a477-4b23-bf81-dd5015a0cd9b)");
unit.assert_eq16(16'h0A80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #278 8d850d56-ed29-4eaf-b41e-db1c8d35e62e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 3e1895e0-d875-4d6d-aeee-105def48cf9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 7d8065c1-a319-438f-8213-0496d0ea0f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 b7f860a8-bb0e-4004-a081-c72f66db080b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 eedf575d-256f-436b-b230-dba1b46baafc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 3c166bcc-35fc-43cd-b424-57866e1b9047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 2e4be5d9-01de-4a2a-930a-a2d4069c9201)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD9D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7111;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3287;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #279 54a7412e-ee2e-4d33-aac9-fce4c3138aab)");
unit.assert_eq16(16'hD9D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #279 6a92ce38-1e4c-479b-9cff-6086356d78c2)");
unit.assert_eq16(16'h904F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #279 6150b0f4-8e58-41ea-bb87-89cc18cbb1f7)");
unit.assert_eq16(16'h3287, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #279 b89c349a-bca7-483f-8bb3-e18112be5a07)");
unit.assert_eq16(16'h01DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #279 e6692e94-3ba4-47a0-9ca0-ae30dfa68205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 dc7fd374-f900-43af-b871-77fb19a91f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 b70c6e94-2b3e-4361-bb85-b5bd216023f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 290c3922-3431-4fcd-97e7-e0a7159b874d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 05d7d267-939e-4c28-8317-bf5a43723db0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 b709651e-e10e-48fd-befb-31058858f67e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 a0c1e65c-d702-4bd4-8975-a9a654e3ffea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h06B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h084D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5BA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0738;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #280 2616ed6e-105c-42fa-a597-c6474fb7d18b)");
unit.assert_eq16(16'h06B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #280 c9084119-2991-4932-85f0-4c9932453358)");
unit.assert_eq16(16'hED45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #280 9494a240-72e8-4b45-9d36-ae721baebbca)");
unit.assert_eq16(16'h5BA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #280 97d3c590-2ea6-4e44-8173-bb0539069ab6)");
unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #280 6ee9868f-5fe7-4b08-9182-a5bb3f313dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 628f06c1-3ee3-4c5f-95b6-8e17d47fd70c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 9c8028d3-1816-4b4c-b590-5c31eb8c2248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 9f4fe427-f271-45ef-93b4-feeab1e5f668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 d2c4b763-f068-4794-a43f-c858e31fc489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 e57ecd9e-9f00-48cd-a81a-e243e47579b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 70017dff-7919-4bbb-b5ff-ded817321154)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA08E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0544;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #281 c2c6f6a5-d265-4b3c-9472-2504eb3e80fb)");
unit.assert_eq16(16'hD8AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #281 8d84754d-4637-4c4e-9a1d-c5a3d97aa4fe)");
unit.assert_eq16(16'h0AD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #281 a676dc9e-b1c4-4986-b00c-6c888670518d)");
unit.assert_eq16(16'hA08E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #281 391ce5a2-4d3a-4a93-8555-c9679eb671a3)");
unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #281 f3063aa1-86a1-436f-9638-697fbff1ca78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 c131971f-1f3b-4943-a6bf-8290cc5b099d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 bf5f646c-d6b9-4272-8c31-0aa144a95f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 e8c57971-b291-42fd-ac84-5ee3d02a75b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 7ff62197-f81e-4a25-96d9-019bcbe5a3a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 8e330fe9-b066-412e-966d-c166d28fffe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 8f49d1ce-ac37-4311-b721-346354bb3ed6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6BF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4A8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #282 694a4f96-8a74-4ed0-8d43-90dfcf5c8bc5)");
unit.assert_eq16(16'h4C68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #282 b1e96060-c428-4d7b-8d06-524ee492b67f)");
unit.assert_eq16(16'h03E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #282 f64758b3-fd32-4be5-9cf2-f6d9d51f945a)");
unit.assert_eq16(16'h4A8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #282 d58faad4-7226-450a-8a83-68076162e925)");
unit.assert_eq16(16'h0E90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #282 4e02da08-1d6a-48d2-8899-bf9e97b51678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 8c7e2594-cd6f-4420-b41c-916ccc366693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 ece70f7e-937a-4aa5-b7a7-3bee1ee6ff4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 266ff802-c660-4e6e-a2f1-413300750bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 7b4d8591-a4e1-4beb-9438-4533a2acdd56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 eb114c7b-d9af-4100-bcb1-88fbeefe9f27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 fdcaf20d-9a5f-4f42-b779-76c05f80dc7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3E31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h179F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #283 d1ab800f-7e67-4d34-9dd8-4290c9986166)");
unit.assert_eq16(16'h3E31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #283 f04bf6e7-eba0-4044-819e-35081c9bc963)");
unit.assert_eq16(16'h204B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #283 011672e7-ce9a-4cee-8040-96ea7bc37258)");
unit.assert_eq16(16'h179F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #283 1b15b699-9430-4925-937f-3aa61b22660b)");
unit.assert_eq16(16'h029F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #283 ad4958de-0ffe-4a75-9bc9-0a78a7336be6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 9a9eb6c5-2829-4081-91ff-99fa5259a3af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 04b37139-6889-412f-8964-e9579b63b17b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 8db5b828-2d5c-4699-ad5c-f6bb3a8b9025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 e0485f02-5c13-4aad-b387-435a2018a631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 b1f75752-4e6f-45f5-9d0d-d7e272aa0977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 8ea05600-e57a-46a7-9942-08cd3aaf31dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBBCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9572;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h020A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #284 bfd913f8-1bbd-470d-9aab-64ab94fb22b2)");
unit.assert_eq16(16'hFA61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #284 556ea05c-1940-442e-8a1e-8c92650e3179)");
unit.assert_eq16(16'h15A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #284 ef34a6da-5bc1-48ca-bdd1-da53a3bede05)");
unit.assert_eq16(16'h9572, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #284 1de2b26d-e2ed-4fcb-bd1d-386c9c5a9a88)");
unit.assert_eq16(16'h020C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #284 754291fb-0226-4d87-b0ac-962448ba3a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 9bf10a62-ff28-4d21-b722-8f10e1bd1457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 7abe7489-945e-4214-9ed7-ba7f31312f9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 0101500e-8808-46a3-8030-8b3c35e9ccb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 05781a37-1c9b-4c59-a6f2-549170fd6b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 0c3d25a5-b89a-47d7-b737-eac615649b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 1d867a73-b9d0-4a59-93df-75a5328e2a3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h681B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0B8C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3779;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #285 eabfa156-dcd7-478a-80c1-a00e6019a99d)");
unit.assert_eq16(16'h681B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #285 42afa426-4bb6-4e1a-8c1f-5448fe78f044)");
unit.assert_eq16(16'hE425, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #285 cc0ff820-45d6-45ab-b48d-54bd1b958b23)");
unit.assert_eq16(16'h3779, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #285 8037ad1d-d180-403b-b4d1-a3a715981fc1)");
unit.assert_eq16(16'h0B8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #285 018e8ed5-1097-464e-9264-de9fcce47557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 53c8f722-9278-46bb-8af4-95a8a19f598e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 7242600c-0b00-4c18-8b9f-27f9e9c8d082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 764ce576-ec83-4720-96cc-c007a74445cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 61eb18d9-0c7e-4504-b3b4-9d48b349c391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 f407cfd1-7068-44ad-b24c-0bc9fcd5be53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 25af2e23-97d7-4cb2-ade7-3935e82e9d0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9FE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0482;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0011;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #286 5967c3cc-c0d7-4c69-9207-f94d8aedb05f)");
unit.assert_eq16(16'h9FE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #286 6e34c1f6-74f0-4ff7-898e-7c2f55b6a77e)");
unit.assert_eq16(16'h7484, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #286 0053c155-4012-4c04-a86b-231722de497f)");
unit.assert_eq16(16'h0482, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #286 481976ec-18ae-482a-9846-45d77f0822a6)");
unit.assert_eq16(16'h0013, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #286 a4594923-7415-405b-b0c1-faa257522a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 dec70f5f-8d9a-4e25-9ccf-5341b7c48772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 73817018-225e-4d84-b7b8-023c3fc3c419)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 a09d8f7f-4869-4e4f-97c1-7ccce389c8d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 567539db-1832-4029-b9ee-5527b51cc4e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 c5fd4ced-c9ca-4cb2-8f74-58a4e1ffc3d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 262d8e5c-1ce2-4084-b551-cc2dcd3c1c20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF41B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h67DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7943;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #287 5682f236-f885-40cb-a208-a72a2324311a)");
unit.assert_eq16(16'hF41B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #287 c6187c20-a914-4e6f-8fe6-ee26ca2fb8a7)");
unit.assert_eq16(16'hB354, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #287 310f5af8-3a2f-4f9e-b64e-0139231665b6)");
unit.assert_eq16(16'h7943, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #287 c56a68a0-f247-4a11-8bf3-728f54a4a8b6)");
unit.assert_eq16(16'h015C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #287 97bea039-6eed-4529-9dd4-76027b8751e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 56cd2e84-1b5b-46cd-b6b8-6cdfd787986e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 01e06252-ba20-4e94-aaff-4fda91e5b1f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 3c3acf86-6c65-4524-9a8c-c12c38af4720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 572e5c59-c6d5-4248-a208-27e47235c91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 d8c5162c-e990-4d27-84fe-14ea98deb504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 8398c003-1e1e-4cb4-b9ce-3e33ba53ef80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h09C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCD46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #288 735865e3-1240-4bb0-9ac8-9e4f0d86fc80)");
unit.assert_eq16(16'h09C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #288 3aa9962d-8dd4-4296-96b7-27c5ad3658d4)");
unit.assert_eq16(16'hAA4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #288 36fccd85-f0c6-4562-8486-306675e00ceb)");
unit.assert_eq16(16'hCD46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #288 a989729d-a9ea-4567-8a8f-ba9ed1202289)");
unit.assert_eq16(16'h0A8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #288 963b762b-2894-4cf5-8f67-53561b267252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 40bf0932-5302-4b8d-b218-c3e4267a7eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 c294b893-e6c5-44f9-8ed9-25a7d66d0731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 e65a26f5-5a48-4362-85c4-283228d8551a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 ef891a2d-30ba-4496-8c66-50adde13eef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 fd3b93ee-8c83-4675-a207-baddec4173bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 9e991969-562c-4c23-89d4-7d0f904e8c60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9EAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #289 e8f578d8-112b-490e-9e71-fb177474c1da)");
unit.assert_eq16(16'h9EAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #289 fad2c9d2-d32e-475c-80f0-3709796f7b9e)");
unit.assert_eq16(16'h68EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #289 42483aae-5e23-4899-af3f-2ed262a7912d)");
unit.assert_eq16(16'h6B30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #289 e2a32268-7f03-487d-8cd6-d43d23c4ffba)");
unit.assert_eq16(16'h0AC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #289 92756c06-d7e0-4456-ba61-eddc989d14c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 ca03a79a-912e-4bc2-8108-99e18dc4abbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 d03bf864-9dc9-4755-bc66-ddb420b1df65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 2870125c-cc08-4c12-a9f5-87e86eb75344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 f3b5af32-21f4-410e-a643-a43739bd37cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 a8502fbe-8780-496b-949c-2416ce4ac48a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 42c201bc-7f68-430a-b557-16135a763ee3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h83CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h093A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #290 a7310877-4836-4922-8d76-d3911050f17a)");
unit.assert_eq16(16'h9F46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #290 60e4f29b-2cc0-49ff-be78-af1b32032af9)");
unit.assert_eq16(16'h713B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #290 4e6fadeb-6ff9-41e3-89f7-693d3d90c524)");
unit.assert_eq16(16'h7C1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #290 2ac54b9b-64f8-42fe-8156-221662af01ea)");
unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #290 53a6f081-566a-45e5-853e-6f747f28c1a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 73759438-bfdf-42cd-bc56-afaee23be359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 94d7d714-c254-4c5f-acd2-f3914d3c25b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 73821750-a1c0-4cbe-8a85-26d2b50fdc54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 4dd2f198-b347-4074-8dcd-3c57f0f2de0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 e9d5e539-f196-4b3c-b62e-c71b180c270c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 78e691fa-5c1f-44ca-8f2f-428d98c2af48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9852;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE6E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6524;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0337;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #291 12c60d82-095b-4864-9dfa-586d4191e974)");
unit.assert_eq16(16'h9852, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #291 4a4391ce-7eb6-4bdc-854a-ebc27b67bfb5)");
unit.assert_eq16(16'hF66B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #291 03991149-bf74-4b3a-8850-339e6145f10f)");
unit.assert_eq16(16'h6524, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #291 b8546c28-5fff-49d5-91f1-aa92a8c3cb4e)");
unit.assert_eq16(16'h0339, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #291 65596f22-92b4-4d0b-a75a-58ba443f6bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 d2fb7526-997f-4e0a-a98c-eb936ca34ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 0504dab0-4ac5-4074-94c4-e36156ad3361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 2b40db57-b1a7-437e-aead-90c473d2c94a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 48a492a3-cfe2-4c0d-9e4f-1a8878c34b5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 e8f8a1ce-add2-4bdd-8d5e-5645e2d87521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 374db514-01e8-47d3-8da4-7226b5014f26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFAD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD084;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h99DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0752;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #292 59104a2e-2b1e-41be-b42e-2d3d793bfdb8)");
unit.assert_eq16(16'hFAD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #292 53c4c615-c4a4-4d16-9615-a160600ce25d)");
unit.assert_eq16(16'hB042, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #292 f2fa4c58-89a3-4949-aafa-6b6a99f0b2fc)");
unit.assert_eq16(16'h99DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #292 7a7995d8-b0a5-41cf-abe1-d0cd429048e0)");
unit.assert_eq16(16'h0754, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #292 63012d17-3c68-44d0-b556-f1a7768000ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 f1f905c8-3858-4b78-b836-7558ff0fda57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 77fdb212-c512-4490-a983-963d088019f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 db2e299e-81fe-4b81-95e4-c6ca9b3db23b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 7f2b6f1d-6d55-4ff9-ad41-cc127864cfc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 c7c703e2-09cf-485d-b4f6-c4ac453680a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 a171bfe5-b99b-4ede-b55b-285b25bf3518)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h36F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h731C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #293 bc3e0b47-7fc0-451e-9cad-d6638fb091bb)");
unit.assert_eq16(16'h36F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #293 ed7821a4-a6e9-456b-9b0e-b22e41db6e8e)");
unit.assert_eq16(16'hBF72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #293 6aa7f2a6-5a95-4941-91e7-6aa0c5d5bd71)");
unit.assert_eq16(16'h731C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #293 5de66369-445f-45cd-a163-3d165ee56841)");
unit.assert_eq16(16'h036C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #293 5c8204a6-13c2-48c7-8fcc-ad0edd8595b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 7bd7cf85-eaf3-455c-83ae-842da77b91b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 b7d7971c-bd62-4b2c-a259-1b332a25b687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 89c9aa0f-5848-4f9f-82c5-041fbaac08d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 7e6a66a0-e79b-40cb-88bd-de10fe01dbf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 f1e5f4f7-caa0-4cbf-9b70-16d2770cfd79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 70c63122-61e7-4d78-99b5-ce07af45ba7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD380;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h66F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #294 5e07073d-48b0-434f-bb88-00a1fda073a0)");
unit.assert_eq16(16'hD380, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #294 95ff9841-86f2-4420-8db5-a2cb39135694)");
unit.assert_eq16(16'h1708, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #294 5e40e56b-05d7-49b0-a599-eb5bbe975aea)");
unit.assert_eq16(16'h66F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #294 2e8cce79-f02b-4966-b44d-6e4ebe74f007)");
unit.assert_eq16(16'h0B38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #294 1ac3f95f-c7fa-467d-9cf8-61180cd73d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 1caf4c07-676f-4e90-9d4c-3d7fefd1c508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 34120b67-fc7e-4ac2-a89f-e400eda7b411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 f70e0445-d61f-4e14-a1c1-80680c8ef2e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 7fc50fdd-135f-4590-a851-7e378040710a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 3588704d-ab7a-4861-921d-28bf939f68da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 d092e4b7-68d2-48a3-be2f-d6f7378ba807)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0DBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC14A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #295 ba9ef092-8d1b-4bfe-814a-f72fa4e8e0bf)");
unit.assert_eq16(16'h0DBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #295 afba3d5a-e49e-4f94-b82f-9f5e5ee11919)");
unit.assert_eq16(16'h0CD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #295 c7319793-6609-4e58-aa82-263d5aa51b02)");
unit.assert_eq16(16'h3F56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #295 34e659f3-5a07-4395-8699-2555ad60c339)");
unit.assert_eq16(16'h04E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #295 baea1b62-5df4-4ad8-a329-02fd03e30299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 40da8969-3e0d-4e06-bb81-85fd982da5a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 607cb8a2-e433-4538-b64e-5bd0b69abacc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 e330f383-f884-4960-bca0-00f3385e147f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 dc2bfb04-49f7-4fd9-8174-6552cfd303cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 6813ac33-5326-4fa3-8cb0-4efab0468db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 b36db3dd-c907-4a53-83f4-245e2c329ea1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD65E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3CFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #296 a541173d-44bc-469c-ad45-eae53b21fd96)");
unit.assert_eq16(16'hD65E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #296 76e0dd13-c68a-4939-88fa-0cd931e41940)");
unit.assert_eq16(16'h1ECF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #296 04372084-55fc-4cac-8463-91ef15a4e43d)");
unit.assert_eq16(16'h3CFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #296 93f0d46e-5383-44a6-85e0-479989c52fff)");
unit.assert_eq16(16'h01D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #296 b3655aa1-a1f7-4ebd-aeae-57d4c2399aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 42b1365e-019f-4352-b69e-ed1a86a5968e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 cbb1c1b3-9fd4-4a94-bf33-562097d172ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 90504e80-0d7c-403d-8139-0c5773598b1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 32ab0cf1-186f-4a1a-92bc-368aa3b2a6f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 7d56e12f-0e28-498f-8ba5-aeef1ac0428e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 13733c4e-48d1-40e8-a002-2a318f9c6793)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h579D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #297 14aa155d-7c08-46b6-b26c-f91b2942f096)");
unit.assert_eq16(16'h7E28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #297 d671e5ad-9bf8-46a8-b847-69dbee009fa5)");
unit.assert_eq16(16'h2F9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #297 89d38e4a-05c9-47ec-9cb6-5cd8d12e60cf)");
unit.assert_eq16(16'h0B2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #297 d835244e-0321-45cc-ae0b-a331c0fb78a2)");
unit.assert_eq16(16'h0E1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #297 e362741b-e979-4344-b266-4dc4290f1146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 69686342-4cde-488d-bd17-28a127d6808a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 f5b6038a-62ba-4745-ab1c-cb6cb087c484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 977f7900-97f9-4593-8426-f416c5e4e7b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 d96ed5db-0ac0-41a1-93f8-8e859cbe12f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 3bcb5541-52d6-4360-a167-b36d00de48e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 a135fc30-4417-4b35-947e-a2115c31a791)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6A48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9FFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #298 e8bc93f5-81a9-41fc-9bef-2684071a5ca8)");
unit.assert_eq16(16'h6A48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #298 a898d6af-0a32-4265-b0a9-723aebba8d0f)");
unit.assert_eq16(16'h1954, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #298 6b27c706-974b-44e3-a8ce-b52908182644)");
unit.assert_eq16(16'h3A2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #298 450e63f9-edfd-49bd-9d53-dd2f3ed6acd7)");
unit.assert_eq16(16'h0C63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #298 abeeea9e-e3da-4d1b-88ca-53e5fb31faf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 1a24dba5-789e-4301-87af-20fe8b31bead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 edf4c897-17ad-42d8-ac16-4c31fc2be558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 32d1fb88-f013-41c7-a0ad-49a91cc598ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 4cbb84dd-c08d-469a-96dd-a9d5c06f79c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 d7e99e9d-336b-4fd6-9dde-42dba0042e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 bff43611-666c-4462-95aa-c54bcbbc27b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC562;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2443;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #299 1258ead0-f64c-4287-84af-ec4847fa3daf)");
unit.assert_eq16(16'hC562, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #299 9cc1a92e-92b5-4d53-b7c1-7eb877d02a66)");
unit.assert_eq16(16'h1047, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #299 4d348e86-901a-430d-8c08-c8a81f935406)");
unit.assert_eq16(16'hDC15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #299 9980ab9b-8ad6-4404-809a-f06e1236290c)");
unit.assert_eq16(16'h0DEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #299 9629046f-464c-4938-92d6-10632f49b485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 e88acd02-6b8e-4e76-9a15-872ec05a1d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 eecd29a7-57bc-4160-8caa-f18bfd158e4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 42d0f479-f65f-48f9-b5cb-739697a7d8f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 87dca312-f90e-4eba-ab82-cd517703b3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 939908b2-a7e4-4bcf-818b-4fd8c879d59e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 26b4d83c-c806-434d-9b6a-107133444768)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6082;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBCE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h57AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #300 40abed9b-79db-4c86-a3fd-c13829aaaf7d)");
unit.assert_eq16(16'h6082, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #300 c6992904-6ed3-43a1-8f25-9c046ca81ed1)");
unit.assert_eq16(16'hB420, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #300 f9551cc9-94e4-4aeb-b81f-0f8ee32ba2e7)");
unit.assert_eq16(16'h57AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #300 a10d6912-85c0-4f0a-b567-87285751f9f0)");
unit.assert_eq16(16'h0AA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #300 f50060bf-6c50-49f2-aa7b-298b949b19f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 cb9bbf4b-0656-457b-b172-d49d02e2c7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 0eab8554-07af-44c8-8ccb-01df4dd45848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 aaf3c20c-9599-4754-b745-b6d68a89adb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 6bef10ef-ad90-4d79-b3cc-9a60f97f19ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 00bed062-a0bc-4bd9-928c-b0b1acfd4ec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 9975cbc9-071d-4392-b8dd-82f7e33efd90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9A78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h92A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #301 bd24826b-6eee-4c42-8d18-f17f7558978c)");
unit.assert_eq16(16'h9A78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #301 ec75e35a-9c1b-4287-b903-06d0762c2f95)");
unit.assert_eq16(16'h206D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #301 18f9eecb-5452-45b3-b93e-c245efffa3d3)");
unit.assert_eq16(16'h92A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #301 a398007a-f15b-45d7-a9ed-b378ee9d2717)");
unit.assert_eq16(16'h04EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #301 c1eb06e4-a1f3-4451-a1e6-a1a95c858873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 ecf3ccc7-d3cc-4268-9a3e-51095d3775ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 32ef75fc-3284-4035-a280-b1634f3da145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 e9e054eb-04c3-48d3-badb-34edbe80132b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 6b314ac0-977a-4e76-80eb-215b98277317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 6640bbbb-5f34-497e-a818-fe7d689bc903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 d6c0d8f8-8a69-4226-9b7d-3aeceba08cf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC769;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA82A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h473D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #302 591889ea-fba9-4120-bb2a-8bedbcccd00c)");
unit.assert_eq16(16'hC769, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #302 6ffac2ef-0d33-4b47-aeef-b3769cd27659)");
unit.assert_eq16(16'h3070, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #302 381e3b6d-16db-4748-b4e5-500c4c7079d8)");
unit.assert_eq16(16'h473D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #302 9bacaaf5-de07-4fa5-be9d-e340ac0536ba)");
unit.assert_eq16(16'h0DFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #302 b3702c2e-f638-4fac-adc2-12fd175d0ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 3ab4f68d-f630-4242-844d-20df6c5064f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 f77feba6-4ba4-44de-9273-394d78926c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 dab89a7b-a345-4fdc-8442-2e5944932ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 9bf9834b-ac34-4ca2-81eb-4f2609324be8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 a8d7ba9e-8c0c-49be-ba6e-a990ee771af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 22d5e1b9-9830-4d2d-b845-fe8353235c82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6AC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB845;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2392;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0210;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #303 18fa1641-d68e-4061-afd5-c84161c57423)");
unit.assert_eq16(16'h6AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #303 dfb4187f-3f69-4f98-b3d6-1a3e4c2ef0ad)");
unit.assert_eq16(16'h9441, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #303 54de4ef3-9b09-456e-a96a-7e1fe2f479b9)");
unit.assert_eq16(16'h2392, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #303 e0e825a1-ae2d-4301-b9ab-aa4500f13b51)");
unit.assert_eq16(16'h0212, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #303 8241e817-9aac-4f0e-8cc7-7841f746b196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 19e2f195-533c-41fb-a516-151d5b6c3973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 06d7cad3-7fa7-4e76-8f9c-6b11929b11ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 c6fb885b-988e-4edd-b1b2-f8029f642ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 514fa9a7-05d0-4b66-af9d-43dc588e24e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 1a256539-fb0e-4f42-acd8-d3b75d000080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 c4325e76-d127-4397-93f4-d6b39eb2aa2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB270;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF82F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #304 a5ef50a9-4237-44b5-8600-039d8bd149db)");
unit.assert_eq16(16'hBFE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #304 fd14c44a-14e8-4610-880e-c8a5fdb82eab)");
unit.assert_eq16(16'hEA1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #304 c1749be8-9b7d-46f9-a560-dd576c867db5)");
unit.assert_eq16(16'hF82F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #304 c15c04da-feb7-46b9-9465-839393aa7272)");
unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #304 78e6585d-09f9-4d18-9e2f-f2f46d5a1724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 1950a6b0-b758-470d-8ee0-bae29ddbb0be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 d71163cf-2ff9-4d1e-8707-06efdec3e1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 67a37ea4-9d52-4a9b-a048-b406af8b4760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 b3672f23-b262-4159-9049-644cf9e63012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 fbc6cfd0-3bf7-46e4-9813-5216ac72d0af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 101ae0e3-21c1-4706-b63d-068c6ab43f59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA046;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0055;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #305 1920ae5b-8694-4764-9ec3-2a2a2413b15e)");
unit.assert_eq16(16'hA046, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #305 c543e1b2-cd95-409d-9817-a2485ad278a9)");
unit.assert_eq16(16'h2F81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #305 fd326c97-6bd2-4798-934c-ee5d2a3010f3)");
unit.assert_eq16(16'hAD51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #305 ec4a335f-93a7-4cfb-ac59-5f0c4b9c25d2)");
unit.assert_eq16(16'h0057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #305 4dad8b19-374c-4d05-8d64-3e4d735a7f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 dd22bf67-fd54-49d0-a78f-4fe337b7d20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 3fb14c5f-3e59-459d-af9c-d95e627a7720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 8c9d97ff-a892-401a-b99d-3d555f2fc771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 88d846b4-78a1-4dac-99fe-0af0c5358a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 077855f6-cc6e-441a-80e8-64be07ef4755)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 d2c5006f-6b85-4403-a58f-21c7df2ff6b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDACA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDBB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9890;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0927;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #306 e6b42789-b2b5-46d5-9d3f-839c73e79333)");
unit.assert_eq16(16'hDACA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #306 9ee9a55f-e0da-433e-be86-5f3097e11f20)");
unit.assert_eq16(16'h97DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #306 edf26a88-cdd1-46ec-ab43-91b927cd41e8)");
unit.assert_eq16(16'h9890, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #306 d558d133-f0c5-4fe7-b554-863ff9a3f020)");
unit.assert_eq16(16'h0929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #306 2e75fd84-4ea6-445f-978f-6f4dcc08f8ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 0d7cd12d-f52b-4415-9798-c11914aa0c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 b860d768-e208-463d-a121-105db9458520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 0c6f9264-eaf8-4f0e-bd79-e41363717f1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 42814712-6882-48a8-bce9-332fa8d8776f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 96bc57c6-3241-40d3-9450-d9fd8246fe58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 e7788ed9-1622-40a1-988d-4aa8422341f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1908;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #307 a455d338-1d67-48f3-aec4-b6db78a876da)");
unit.assert_eq16(16'hFA13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #307 b2eb6577-e70d-4ecb-a886-6d2e69b38c8a)");
unit.assert_eq16(16'hC845, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #307 4df18723-c195-4cc4-aaf2-d506077e6cd6)");
unit.assert_eq16(16'h84BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #307 6178c51f-0003-4d3b-9e3c-790ff0fd7dd3)");
unit.assert_eq16(16'h05E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #307 6dbef9ca-266c-4317-8895-54bb72c60388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 fdc1395b-ea7b-427d-8893-c223ba791276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 33bc7254-aa32-472f-a844-6ea8b8fc4dbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 f701335b-00fa-47c1-bf64-e6fcdee61305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 9cd0278a-1173-4d9c-a9e5-17eba4ab1c91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 2b3dc2a9-d96a-4742-827d-6a9334548fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 ad664dd2-9d50-49df-9ef4-706b7b9de15b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9626;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h28A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h102F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #308 0063d5e5-0caf-4dec-840b-b5a979d7ae77)");
unit.assert_eq16(16'h9626, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #308 ebd9c979-55a2-4c45-9934-4090555546dc)");
unit.assert_eq16(16'h02A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #308 92f6d692-1d93-49c2-affd-2fe28e622631)");
unit.assert_eq16(16'h102F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #308 aba25c6b-ee96-44ec-b2c2-ccd562ea5245)");
unit.assert_eq16(16'h013C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #308 9d80e787-3370-4149-b359-8f1fb1835610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 d8531669-c7dc-4003-804f-ce3bbd5e8c4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 338f7e66-ba21-444b-ae77-4788b948a027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 2e94e4dd-11b3-4153-a3be-7996ac95ea44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 b165dc9c-ec17-400d-b917-1a733770bd70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 d822f6a5-acaa-47fa-b9e0-8bdaa58ec171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 ecedbbdc-7f96-424e-98a8-6f2932ff4abc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB164;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFC65;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5434;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h018C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #309 7e0d6cf9-b067-4023-baec-0e031514ce2c)");
unit.assert_eq16(16'hB164, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #309 501237e9-8585-4028-aae3-5f5bed0ef342)");
unit.assert_eq16(16'h0958, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #309 774da880-89fb-4dff-98e8-3402ef9f0b8f)");
unit.assert_eq16(16'h5434, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #309 3f2ddafe-2af5-46b9-94f1-d2a02fc181a9)");
unit.assert_eq16(16'h018E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #309 ccbc2097-56c8-41b1-9a57-2d60334d3916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 5344ee47-6590-44ff-a922-5d1648719002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 48035b78-872a-48ba-8dd6-0930242175fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 217f6120-e72a-463a-ac89-91f4e0ae65bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 1970a0b8-6b04-4559-93f9-f57858562f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 5b8862a7-6957-48a1-af63-8d8b3e53cd8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 87bde299-0710-4c87-ab67-a8cf3178b048)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFEF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1F44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #310 2ade928e-747f-4044-9efd-36f9a1c9b2c5)");
unit.assert_eq16(16'hFEF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #310 ec390f24-e766-4b80-99c7-ddbd01b05eae)");
unit.assert_eq16(16'h0899, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #310 33ec0f5e-7348-4b09-8067-e9fca033a69b)");
unit.assert_eq16(16'h30C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #310 d2fb3bc1-f1a6-4cd5-bdd9-97046d26146e)");
unit.assert_eq16(16'h06B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #310 7cc6948a-1476-44e5-97b1-41c075b146e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 9ed6d9d2-4eaf-4a27-a95b-903fa810ed03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 8866efb3-f64c-4114-99b6-79c355b1a1d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 c2682d48-8ded-4afb-93e2-2ca1d4db291e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 3f3b0fd3-5c40-4c7f-97c2-3d7cddc18168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 4b1bd421-0db8-455f-a21f-64fcd3c00bc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 3e26432f-7058-4013-8b3f-2adfefb60be5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1756;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h31C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h64B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0441;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #311 0392d3d1-2f87-470b-8094-2ae51dc108ff)");
unit.assert_eq16(16'h1756, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #311 885b096a-dfe3-4b7c-921b-78c5642aee67)");
unit.assert_eq16(16'h133B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #311 623f7f4f-ff4b-419d-bab8-a5190afae41b)");
unit.assert_eq16(16'h64B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #311 c1446d11-89ee-4fd7-8119-deffd0086b87)");
unit.assert_eq16(16'h0443, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #311 08c4565f-d84d-4db4-838a-608e6414cc46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 2594ec72-0a40-46a5-85e4-ced1f167a0a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 736f9bcc-d49c-41b5-a184-b2eb6d9e49a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 70059ac8-decf-4491-a0a1-6a851ab1a51d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 ecf31971-606b-4888-8fbb-eebc25c558bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 3c500c9d-ef7c-4519-a3a9-b040301e0353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 73bc9cd3-b052-4316-b503-9deb3c1aaa39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9C5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC1B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8550;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #312 c91e79ff-d787-4f50-a74a-fb370d7d3cab)");
unit.assert_eq16(16'h9C5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #312 b8ce29c6-f0a4-4ceb-9064-e64534f6e77a)");
unit.assert_eq16(16'hD96B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #312 c3bf9b26-5227-4222-a4b1-9f3a9135e3a5)");
unit.assert_eq16(16'h8550, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #312 9412b62b-7442-48dd-8772-87721eff94aa)");
unit.assert_eq16(16'h0C0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #312 2d82c033-9add-45fd-96d3-b7825ae03a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 845fb431-9a54-425e-a7c4-740f347b9db1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 c683c1cb-b078-430c-9934-d476b4cedb03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 2cd7d0ed-cbeb-4aba-b06c-0dd9af6e9afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 bd10977d-911b-43c9-b5a6-473b236aa519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 407203f6-9c68-406c-8275-b24bc3cb3b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 a1ae8e0a-9c8a-47d6-b8e9-fa2797842a97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1141;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h24CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB5A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0770;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #313 8962bcf0-26f2-43a3-a956-b05063a41059)");
unit.assert_eq16(16'h1141, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #313 f577b622-b739-4c08-9b21-9ebec888d37b)");
unit.assert_eq16(16'h131D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #313 0ee42a0c-6d52-48d0-b069-01309dcc93b0)");
unit.assert_eq16(16'hB5A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #313 c0a9172b-a413-40b1-aa02-98b3feced064)");
unit.assert_eq16(16'h0772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #313 40bada0c-242b-4a45-9df0-d65549d641fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 dc3a6ed7-9f34-43f9-bc01-737bf3ff9bf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 2dba9785-aceb-4d2f-8809-df5cfedcbf03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 2599b989-fff7-4b7b-ab9f-d61bc4e92837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 650ea310-cadc-4595-b7ba-cceecfb0e140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 4b50f3b3-576a-418f-a068-2ff20fc1dd05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 0d02b314-29ad-4917-b35a-0815030c80d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1840;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA8CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE210;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #314 f524e200-0e05-4490-ad7e-5b28c0092c9b)");
unit.assert_eq16(16'h1840, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #314 b295c4bf-785e-4ebb-95da-cbb20b329439)");
unit.assert_eq16(16'h3AE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #314 8da92a13-4c84-4346-9d5d-dd20a7b4f619)");
unit.assert_eq16(16'hE210, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #314 94d97631-a6af-4922-b7fd-1adcde2585c2)");
unit.assert_eq16(16'h0129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #314 1dcce63f-7e28-4aa0-9d77-5cb15a07f105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 94c08b8a-a091-4401-92f7-335ed5d2dd46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 2dde3979-8df6-4330-ad24-ea10b0fb4f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 714684d4-f0a8-4b1e-9326-03e39951c408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 24d5e1c1-cdec-4518-b3e6-5ccba793e136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 d121ced9-ad7e-4a3b-a106-6c5e53661709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 a3563fbf-6744-4561-81df-f920807676e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEAFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h95E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0738;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #315 8b0f6b4b-f2c7-436f-b990-36e0aff7aed8)");
unit.assert_eq16(16'hBE10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #315 e28b69dd-62be-4263-a36c-0cdce3b27ce7)");
unit.assert_eq16(16'hED45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #315 ae74abf4-b4f1-4a12-a415-b7bd8ccd5d29)");
unit.assert_eq16(16'h95E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #315 0a3e8def-62e5-44b8-9803-4cd86c72851b)");
unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #315 ab5b0866-23f2-4447-81f0-cb79b97dda7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 f735a787-9d53-47eb-8016-13a2f328cf00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 a625bbab-212c-4eb9-8984-e510e83f4f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 65de4179-4cf0-480b-bd30-97196e4d9ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 f4d3e764-ae44-49d1-8280-0208e95c8d2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 b7e579cc-0b19-40ac-9288-4ec949d775a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 0577f839-83fb-44b7-af3f-83942287aadf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h485E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #316 2ca3e761-feaf-42c3-8f4c-6d269c93e664)");
unit.assert_eq16(16'hDC50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #316 79989250-3367-4fbd-bab9-22938efdd00d)");
unit.assert_eq16(16'h3F7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #316 5633a1b7-ac04-4656-8a8c-ae0f2cc238ab)");
unit.assert_eq16(16'h3B97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #316 27987723-920f-41ec-b0e2-cc0593034d24)");
unit.assert_eq16(16'h0AC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #316 7f2ce12b-1dec-428b-9f65-1b69f811a19c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 7d409482-84c0-4a2d-bdfd-5d57f0f850fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 529d0e2e-3646-40f9-b58b-15e667fc4870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 ebe323f2-8f53-4255-890b-3f313a98b05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 7b73015d-fdd2-4445-8891-2b9de17c9c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 7e617898-0866-4d33-be26-6525e3ce6f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 6d2ef9ba-ef34-4c70-81db-c26303f1dc08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h65B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6E10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h202E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0365;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #317 25c8cfc6-3640-4d60-9522-dda42223ea0b)");
unit.assert_eq16(16'h65B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #317 dd02fab5-b93f-454d-8547-45c66c7843d5)");
unit.assert_eq16(16'h4DD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #317 2d029a24-d0a6-4825-a122-411a010720e2)");
unit.assert_eq16(16'h202E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #317 0d62bfe6-43b5-4069-92e0-275c34dbf74e)");
unit.assert_eq16(16'h0367, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #317 7ff0ab2f-efac-4668-b6a9-1ef93dfeab85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 3baed580-93ca-482d-941c-82bb2a813ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 c7f531a5-85b3-4a95-95dd-6b1b06fa8b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 6d02514e-184c-4b0e-91ef-e058aace3249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 4d0255fb-1547-44c3-8f13-6213b837cf07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 226e1241-d24b-4614-b874-5ac855c8b9d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 7c29e7b8-59ec-479f-a44a-034783a2b6a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4143;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2350;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h006B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #318 e0e69698-445b-4acf-bd07-f14ca7786507)");
unit.assert_eq16(16'h4143, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #318 9fa4c191-85a3-4493-a348-464c80863085)");
unit.assert_eq16(16'hB496, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #318 7831dbf2-ce67-4719-8eb3-7b0bc5446229)");
unit.assert_eq16(16'h006B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #318 63a1adc7-165c-489b-a724-b81d8d4e6b27)");
unit.assert_eq16(16'h033D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #318 e78f9981-4402-44f2-af66-69d905dee6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 329de099-3406-4ba3-aa17-583dde5bf45d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 522b5258-f523-4596-8d4e-a59cd077c035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 938801e8-9359-4bab-a33b-18ceb2b542db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 8bb8a9f6-4723-4eb2-aa73-1f090495bbc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 5654c97b-965c-42ed-92e4-808364708f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 62ae8e99-0c90-4cbc-9e66-c48159b0cb0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h52BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h941D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8FA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #319 6f3ec1c2-e759-4130-917f-a0fbaa79f705)");
unit.assert_eq16(16'h52BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #319 1a1e33e4-08ac-404c-abcd-aace21362b72)");
unit.assert_eq16(16'h288B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #319 1126e822-dd7f-45d3-83cb-d5707f29452f)");
unit.assert_eq16(16'h8FA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #319 2e2ebb8d-7e81-4c49-a852-bd5ab56bb4d2)");
unit.assert_eq16(16'h01B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #319 83153c7f-4373-4176-abc5-634b27f2f2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 9e5e3b64-6085-47d0-8c75-5cfecf8adb4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 5e32b363-021e-49aa-941c-8fc809580cda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 1126c739-3c11-4165-bbc1-e6f7d465afc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 071cefda-99cd-4bb7-89b1-5d92eca622e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 f46b753e-6edf-4876-b0d2-182b774ffdf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 c5e0d2ac-64e1-4eda-8bf3-f85a558e0aba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h053F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCE20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #320 e9ebe982-fcdd-4932-a57c-a438fa77ddbd)");
unit.assert_eq16(16'hAE91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #320 2b23ddcc-1c6c-4547-8403-c4681b39a679)");
unit.assert_eq16(16'h108F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #320 2bc4c770-f7cf-4f4e-9768-2866f0145b89)");
unit.assert_eq16(16'hCE20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #320 169dad79-d10d-46a8-b02e-edeb2175e5ec)");
unit.assert_eq16(16'h0B9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #320 bf283c3e-be22-4841-bca8-9634e9a75c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 bb292960-dc8c-46e8-a6dc-9a248311354c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 59366da4-fc52-4911-9f78-3f53625b1457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 e2d0cb43-a7be-466f-96cb-523f4f4063fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 c7b1dc93-797e-4901-9739-40dfcd1847fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 2b436f30-e285-41cd-9edd-0ed05c368767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 1c6f2b92-3c9e-47ba-82d9-4d3ad0f3abc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD28C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h52AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #321 a0610c31-42bc-4e92-a3b1-97bdad9f1b33)");
unit.assert_eq16(16'hD28C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #321 ea5504c6-e7cd-4865-8323-22f838e14f01)");
unit.assert_eq16(16'h0899, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #321 b6c2aba9-6d68-47b9-8057-3d23dacdfb3b)");
unit.assert_eq16(16'h8A80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #321 7aac6b1c-da90-42b5-8812-5a1fe7c7ecec)");
unit.assert_eq16(16'h06B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #321 1cbd0b10-cbb3-4100-8f6a-208b73e25e8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 2ef918f1-6fba-4bb9-a715-50e60cf9c675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 53728949-c170-4ce7-9f15-ccd02c4329ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 27b52ec8-5043-4d6d-a966-a2486f3466e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 5237e69e-55ba-4e77-b4e6-3116a6f72237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 57085583-ab29-49e8-aa95-57d98a1b3771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 e856888a-70a0-4067-96b7-840cdf845faf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD173;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE079;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h024C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #322 f0c4dd72-007c-4bd1-b45c-ab768369a4f2)");
unit.assert_eq16(16'hDAEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #322 fd7ace44-35ad-46b1-9940-9d630bddd577)");
unit.assert_eq16(16'h3C65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #322 d8aebe6f-19b2-490c-89cb-cffe1bad8e7d)");
unit.assert_eq16(16'hE079, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #322 e16a536b-4479-436b-aa04-0bf705b76c63)");
unit.assert_eq16(16'h024E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #322 dd40ea32-e4f4-4861-a99f-b7e20dc53974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 648045f1-d09c-4eda-b87e-6e6241a46969)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 e5204053-7758-4dbb-a543-5862b276e10b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 5e5229a2-c9b0-43b7-a5b0-ca56040c77a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 3f735954-2879-40f2-91f1-01e1f5c5d5f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 8aa7f59d-7e37-4797-aac1-531a0a4864db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 3c5767f7-2476-4fe7-8645-0aba2d5559fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7CB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h356F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0581;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #323 f475d55a-dae8-4ac7-808a-1b32edbf1694)");
unit.assert_eq16(16'h7CB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #323 5476774b-13a4-4e5a-b6f0-1b06c0c25277)");
unit.assert_eq16(16'h207B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #323 bf01e1cc-20a9-474d-a1f3-147727987632)");
unit.assert_eq16(16'h58D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #323 1b1109e3-2b83-4226-a9a1-4bb48c58211f)");
unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #323 0688a248-a52a-4719-b78a-3f3d0658203a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 4229f738-6312-4cd1-974e-b83acde5c442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 6f1b7a40-b87a-4e89-bd39-1f527289f0b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 0bab681b-75ea-4f77-9054-d8ee7eebf3f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 0fb7fb1c-1dfd-4a23-b1b6-78ef7269e0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 ecd37b83-79c9-4c74-8dd4-cb1c29caf69e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 c786ca80-184f-4bca-9972-0db26b0cc5c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h876E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0065;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #324 86893791-bf98-4941-8baf-585196267609)");
unit.assert_eq16(16'h876E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #324 adae2351-dc6d-4a52-93ca-1886b87d53af)");
unit.assert_eq16(16'h990E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #324 d670af06-25d3-43d6-a582-89cc4620c278)");
unit.assert_eq16(16'hFF53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #324 ed8bd2b4-b2eb-4063-a910-38121ab4fcad)");
unit.assert_eq16(16'h0067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #324 838948ed-beee-4a07-9834-cb6b701c6cd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 bda1f58d-5c86-46a5-8ce5-2ab96279c336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 90efb1eb-d7e6-4890-8260-e7840b99efe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 f162df2f-b185-4bbb-9dc5-0e90f48fceb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 ab63076a-3ae7-4b73-8a48-512292eec68f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 a644dfa3-4129-4274-8433-a007dde04fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 fe29e0a9-4350-45c7-8c01-5f3f327daad1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7838;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA720;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6535;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0628;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #325 9e6514d4-cf60-49a8-afca-023f7d507b90)");
unit.assert_eq16(16'h7838, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #325 d5a38a1d-9a3d-4ad4-9758-da864b3e36ac)");
unit.assert_eq16(16'h0C97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #325 f5c0f432-5f16-45ed-bfc1-f0aca2348a56)");
unit.assert_eq16(16'h6535, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #325 1f59aadc-8b30-4260-a866-ccce65a653c8)");
unit.assert_eq16(16'h062A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #325 4afc7ca3-32d9-4d51-97c7-8ca46eba9bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 615988b0-4e30-443b-9c5a-f57524bd4b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 16399437-5612-4c06-86d6-e92d4e9e8172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 e661dcf1-5d2d-46f6-b650-c1e78682d38c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 46fe2d25-4b58-4f25-925c-fcb582833bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 7435b59a-be49-4116-b962-a69132e25e2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 b5c0f0d6-ecbc-44e6-9730-0edf2175b310)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h346B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1494;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB925;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0136;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #326 d0ec9386-7acd-4aa4-9f92-ba4fef4fe957)");
unit.assert_eq16(16'h346B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #326 d7ab9b31-149f-4986-a4dc-a3d5167c3915)");
unit.assert_eq16(16'h2D81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #326 699a010c-a8e3-45e0-85d2-0ee02fa0a6cf)");
unit.assert_eq16(16'hB925, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #326 d23a70df-d14b-4f3a-b63a-ae4c797635f0)");
unit.assert_eq16(16'h0138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #326 ed63d29d-d090-45fc-8551-d51012f87887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 5168a563-0a81-4618-a339-f9ae8e289dba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 f244d1f6-e56b-42b1-8187-24e471cb188d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 74916fd9-62a4-4262-906e-f29ccf5d0987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 bec39f36-0d9e-4803-ba9f-22ff8b902120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 4cd6e06d-3dbd-43ee-a5fa-ccc1e4b9ea5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 e36a50e6-5734-414e-8632-ee2b7cd895cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h962E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h187B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #327 d384221d-b1e5-4d63-8525-cb76258048f6)");
unit.assert_eq16(16'h962E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #327 55501ad1-b056-4066-a50b-dc28f727592f)");
unit.assert_eq16(16'h2F5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #327 ffbc777f-2179-47f5-9a4a-693d3e78abaf)");
unit.assert_eq16(16'h7E1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #327 77cd5d8c-8579-456d-928f-af9370340644)");
unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #327 49b26b6b-68b7-4715-8b29-eaf703319d5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 06b076dc-e828-48b8-bbb8-b522154baca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 3fc3ed84-fd5d-436e-a9c5-c8ac6fb4c00d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 968663f5-0682-4dab-bf44-1dbc6ee1780b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 6a3446ea-94f1-4f83-a996-9de7aaf9354d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 180879ee-4508-457c-bdf4-10867728abff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 8d856265-9226-477d-8729-ab3e82779491)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF394;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA384;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #328 2123a4ad-754f-4d6d-84ae-5829c8941583)");
unit.assert_eq16(16'hF394, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #328 5f2fc59d-ea2d-4dae-a107-7fad1256c467)");
unit.assert_eq16(16'h9BEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #328 14fc5da5-eb9d-4962-845f-54d7dbc875ec)");
unit.assert_eq16(16'hA384, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #328 553d6323-50d1-4ec5-b317-e7085be883d2)");
unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #328 502220f2-7865-4169-a63e-89c2dd00b225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 aee8cb41-ff8c-4481-ac95-1cef17a72e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 c81723ab-c1ba-4544-8d5e-3a028e8dcae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 809b5dd1-664a-4042-80ec-bdf3663602bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 c105b486-5e2f-4343-acfa-798e342febd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 ea4b9864-87ef-46b8-830b-f18993d545cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 1945df59-a7bf-43bb-9c77-4eb5a424c358)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1093;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA4BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF775;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #329 5c2eafd5-083a-4435-a9d6-839bc5c9762c)");
unit.assert_eq16(16'h1093, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #329 5e2774b2-6c15-4a7e-9d49-cd3e60205a09)");
unit.assert_eq16(16'h7C28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #329 264331cb-6e51-4ab7-8b19-38929fd178bb)");
unit.assert_eq16(16'hF775, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #329 1d12b2ad-c9df-4db7-b02e-d65a2235dd05)");
unit.assert_eq16(16'h0FB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #329 d3bcf2f2-4344-4bda-9532-737cf6d206a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 eb9a5996-c4a6-4d96-b189-9e377848bd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 4192b132-6137-40fe-ad60-d8b1614f54b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 d9dfdc0d-0fb4-4a80-b029-e3d35fe65d34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 31e6d049-9f83-475e-9eec-615d429b8073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 77488351-5148-451a-9b14-6f68703874a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 e767560b-5b0f-409c-81ea-02241fd231ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE143;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBA12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #330 bda5f0e9-5104-413f-9464-42ad990ebd44)");
unit.assert_eq16(16'h9CC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #330 6c9be88f-a963-4ab7-81b6-5c5f4aa6932f)");
unit.assert_eq16(16'hC601, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #330 3d26998b-9567-4412-b886-9775bb9a077d)");
unit.assert_eq16(16'hBA12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #330 bf165258-962c-4166-87d2-2667d5fd012a)");
unit.assert_eq16(16'h06C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #330 0e2181be-12ca-454f-ad6a-ceaec9a9ac05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 88d92a21-6f9b-4213-aa7c-6cd685678776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 a753ea81-fc13-44f3-a065-caa4de8af680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 8c98f488-a2ee-47fb-a223-5cebc9d89d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 92470377-99f8-4229-bb70-7fabf9ec336a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 5820b2c5-fd99-4411-a1dd-a71c2dd0c41f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 cc805b9c-7441-4fcf-9187-35e273213d3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h81A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAF2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #331 0a282d42-6880-4b47-84d1-9acf927ff353)");
unit.assert_eq16(16'hE3D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #331 f2b39c04-1691-4685-b80c-3f97a1a420cb)");
unit.assert_eq16(16'h82FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #331 92d70e08-ce68-4658-afb4-8a56c1ba47bb)");
unit.assert_eq16(16'hAF2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #331 0e8ac35a-a74f-4a98-a0ed-f32a131a5e09)");
unit.assert_eq16(16'h079F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #331 c576438d-4ce8-4a51-b067-b2c39d611f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 2a4579e1-3121-4523-9bfb-2dfa49e86ffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 d4388fe4-78dd-450c-9628-5335f9f7a287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 903be8b6-2121-4bea-84df-1c722b85da6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 24e7d849-0914-4089-b7dc-a127e54d0942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 0663d807-f566-487b-956c-85fe1ad5faff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 e86ae894-14c7-4490-a28f-aa98f2ffcac5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC39A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h959D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1136;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #332 82c4fd39-89fb-4e82-80cc-4d65414f8178)");
unit.assert_eq16(16'hC39A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #332 372602e2-0320-49bf-8f83-37ea328d8655)");
unit.assert_eq16(16'h78C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #332 b39b534a-04ea-4097-a97f-957b0e6211b4)");
unit.assert_eq16(16'h1136, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #332 a28e9d33-0ef8-47c4-af9b-4bf9d02975c7)");
unit.assert_eq16(16'h0C91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #332 3eefe48e-e1bf-4fa8-be89-414bb8e237dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 0c089a9a-304a-4ce9-a0d5-8024bd15ff98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 f57748a0-091e-4137-aa33-614436338036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 769fd7e6-bd01-452c-b959-00dae4d4ea73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 268971a3-dc59-4dd6-935d-ed9565fd27d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 19d29dcd-290d-4b04-b53d-9f0a538a7270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 7caa78c4-28db-4143-84f9-a7a8b4691515)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6A1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h19AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE233;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #333 25b97f6b-f576-4b28-a817-f0c1b7b13b4d)");
unit.assert_eq16(16'h6A1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #333 81910c5b-07c8-426c-9b77-158704490462)");
unit.assert_eq16(16'h2AE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #333 f03b38a3-ed69-4d64-a34d-c36ee274a773)");
unit.assert_eq16(16'hE233, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #333 a039b02b-ad6b-4495-89e9-a4de17a50daa)");
unit.assert_eq16(16'h03FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #333 39ab802d-98a6-4d00-8fca-b4b0bda15ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 9fa77f79-2f50-489a-9c4d-df920e9ae435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 48fd0d5b-4ca3-49d0-8960-0fc934b68cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 702d0248-3fad-4d66-9513-2279f66fab60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 1093a1eb-0cac-4276-920a-f38b38ca15fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 5493a2c7-f7c6-4ffa-9da4-bcdbabd319fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 3104d222-78eb-40d7-97fe-3b6c3b5bbf5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB5BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5926;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF67B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #334 68f92cf1-c59d-448a-87ae-1b24720d9134)");
unit.assert_eq16(16'hB5BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #334 1955fe70-5d8f-4caa-8307-4f9138810551)");
unit.assert_eq16(16'hC534, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #334 c80d8266-ab4e-4956-95fe-b16e44515c43)");
unit.assert_eq16(16'hF67B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #334 38a2ef6b-9021-40f2-b63a-91d54eff7595)");
unit.assert_eq16(16'h0D6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #334 5c4628c6-3079-4b65-8999-fc89b0c2ab3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 a2224a64-a6f1-4653-b2d9-a4cdc06cf33a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 ce86bc06-3ad8-42c1-8644-ebd8b903f835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 e9f9842a-f139-4aa6-8b64-6dfe09791f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 ff79584e-37d4-4ef6-8c1d-72f3ce6ac45f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 545305fb-a3ec-492c-9b05-766f2392ff08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 a6a710fa-f9ef-4b82-bd1c-d0988e80a759)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h029E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h073A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB558;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h002C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #335 c3ae5305-1526-44d2-837e-b538fb7623f2)");
unit.assert_eq16(16'h029E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #335 b828baa2-43ee-4b69-a6bb-0ce3c2fec35a)");
unit.assert_eq16(16'hC52C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #335 7676964a-6d45-43dc-bb90-8576baa9f63d)");
unit.assert_eq16(16'hB558, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #335 5fc8ac0b-6a59-4ece-a1cc-33132435dcd4)");
unit.assert_eq16(16'h002E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #335 e7a6225f-ad01-4f43-8c46-5145db2252cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 04adbe53-1117-4ddd-8fe8-9be9a9096e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 254cf855-29d9-4c0c-909f-90d131921c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 f9e403cf-e860-4ce4-bafd-bd99e4a4203c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 51df9e9d-94c2-45a8-a370-2706b93cafda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 731838a3-e43d-4f51-aab7-bed7f8109b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 db9e2b85-2910-4cc9-9507-479fded6b646)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD742;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #336 b093a6f5-463a-41c9-96ce-fd0840d8c545)");
unit.assert_eq16(16'hD742, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #336 1d899d82-d68c-4d8c-b658-3ed60537eaf2)");
unit.assert_eq16(16'h977E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #336 0b3159ea-d225-40fb-a40c-c3c3b200a4c2)");
unit.assert_eq16(16'hDCFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #336 3bb91190-cbbc-4de8-821b-544e6479cfc6)");
unit.assert_eq16(16'h0AD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #336 4b30ef3e-291a-460f-a497-6bb2a0de53ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 9059ce45-f819-4948-9f9b-10f0f476301e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 2c3b0f96-57e5-4b85-806b-46f2ae66b7ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 64da9ac2-d85d-47ee-85d3-74ea93d71601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 a79a53b8-d621-487d-980e-58f6a525adc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 3f0d3fee-48a5-452d-9ba3-d5e196de44fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 f87d43cf-955e-43f9-8381-12eb1405893c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8F18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h76BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5236;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0588;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #337 6bcfb28a-525d-464a-ab3c-2b104c360a8a)");
unit.assert_eq16(16'h8F18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #337 210cf080-70d1-42a5-84a9-c98a453cdc80)");
unit.assert_eq16(16'h6CE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #337 71bda974-fce8-4c6d-8795-687f73bbe869)");
unit.assert_eq16(16'h5236, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #337 18f286be-cb2e-4625-a05e-537de3e55f62)");
unit.assert_eq16(16'h058A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #337 fe4e5ebe-db14-4693-b130-0e7c0c7d3ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 d5593df0-d7ee-485f-a54d-f41e9fec142b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 4134ce6d-5189-4c1e-952c-7a5c795ce62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 7dafbf64-fc5b-4985-88f7-69846583f7b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 c2042f73-c865-4865-85dc-7274107d0c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 c8661f6e-e052-49f1-921d-804388615937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 a6cbfd23-cb98-4570-a441-acbf39b3d33a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA913;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h906F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h44DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #338 e8955b00-142b-4097-ad44-aa9353d47241)");
unit.assert_eq16(16'hA913, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #338 d600989c-b574-4638-8b57-e1a62735e34c)");
unit.assert_eq16(16'hBD9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #338 e9dbc2f3-3301-4372-bd15-4859784fd3c3)");
unit.assert_eq16(16'h44DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #338 32671073-e5e6-4acd-8497-3c086c2d3430)");
unit.assert_eq16(16'h06BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #338 b012bf00-fadd-413e-9b73-28c3cb86569e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 6d538907-689c-427f-bced-b45eeff672c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 f5bdded2-5213-44ec-9ea3-228c1b683d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 eb351f7b-67fc-47f5-b419-a8d0732eccab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 9d4f463d-8a48-430d-83f9-a2674209e229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 c580b17b-0b03-4c2a-9490-550b13c728c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 d9271cb5-e20e-4c28-a2e5-a3285b2b9d01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h532B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h42B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0227;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #339 17898a3f-1057-491c-bd7b-6ea467014870)");
unit.assert_eq16(16'h532B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #339 3a2b917f-0e55-4b81-b01b-ffe30ba89478)");
unit.assert_eq16(16'h9B33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #339 3b90ab2b-8f90-4906-8bec-f567254aea59)");
unit.assert_eq16(16'h42B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #339 6b30e631-6085-466c-82ba-28ec2b0ec658)");
unit.assert_eq16(16'h0229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #339 4d9edea4-0238-47dd-ab0b-34e8461915d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 3edf2211-adad-429c-a2f0-af51e1a8c298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 a9cb66ec-6b3b-4c42-8b16-2e84bb805729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 b99918eb-ec42-427e-b2ad-c8e4080dc195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 be2e2d33-a6bf-4e5b-a415-7e2d6e5b8ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 443fdddf-74c1-49ee-8076-1b50cd83e8c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 c220e983-7710-483b-8427-f3076566bbb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9929;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5F39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #340 5ddc4b46-db7b-4f6e-bf75-bd47f5170bed)");
unit.assert_eq16(16'h9929, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #340 2cac5fb0-193e-4927-930e-8972da19676f)");
unit.assert_eq16(16'h1021, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #340 8e9a17c8-6fc1-4664-84af-6ec1de2f1b40)");
unit.assert_eq16(16'h9DCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #340 948fc05b-0bbc-48f1-98b2-7066ba54bb80)");
unit.assert_eq16(16'h0BF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #340 d4438a6a-96ce-4d2a-b39b-d21b68f0aa2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 80f4b614-a85f-4435-89f2-9421838f3c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 15e388e4-67f9-49f6-899f-a391e0e1775d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 da3bd043-972f-44b6-81f6-ca558d930c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 c22445e5-109f-478b-8310-542973605925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 5a5b9c60-bbe3-414f-b08c-967f1738170e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 1c99620f-7680-48fc-832f-14bfc5ff21a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h70FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #341 edc1c427-b232-4f95-a73c-0ff5988cd35c)");
unit.assert_eq16(16'hDB87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #341 01b686d6-7611-45c7-ac4d-8207eb44af37)");
unit.assert_eq16(16'h7032, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #341 e22fae09-a48a-47f4-a472-ec5ca1283f07)");
unit.assert_eq16(16'h70FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #341 4f2efd99-dc14-4c68-9814-571c237f6bbd)");
unit.assert_eq16(16'h04E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #341 fcdeb4a7-d8f1-4b25-8981-ed56f442e39e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 887b5d57-ff43-40e8-b674-52fc8334b296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 c1351c0e-b31c-4b3e-9a93-60e228e6c9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 3552f96f-221c-4b86-a601-1d266ed1dfb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 2942ed3f-2ad4-4ff2-88a8-afa5a0ca1526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 4495437f-c6c4-424c-b0e5-4896b3cc813e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 b12b1dce-86b5-404c-ab5c-7c34b676d33e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5681;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC423;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5F09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #342 2fd4c786-cb7d-41a8-ae40-7fedad98b2b3)");
unit.assert_eq16(16'h5681, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #342 46983243-3aa5-4eae-8793-4bf54066f697)");
unit.assert_eq16(16'hA77D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #342 6bbf6625-fe01-47ee-947e-ee0c0e98fc4a)");
unit.assert_eq16(16'h5F09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #342 540d5e59-2aec-457c-8d2c-644c1e8e7789)");
unit.assert_eq16(16'h0BF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #342 d81db922-88cd-4f76-8c43-2603b30d1357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 988c1a6d-5de5-427a-9e6b-8e5909cbe7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 1960d60d-74bf-4457-bc7f-f0d163a09f17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 d04236e7-f580-4c59-8a1d-5c9abec04e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 f7baf6d4-bd94-44d0-8b13-b7acca90fde2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 8484a368-21fe-49bd-bbf8-a2dd44dae3f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 4dbc178b-bf47-4433-813c-4861bcfc8012)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD772;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #343 a8a9a244-b68e-47b1-9327-7ecfbe9a3d47)");
unit.assert_eq16(16'h6B00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #343 837920c7-ac9e-4a76-a0b1-3a652d4a95fb)");
unit.assert_eq16(16'hFA16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #343 6a0f2061-48ec-4f18-ac47-e3e67ca805f2)");
unit.assert_eq16(16'h4C45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #343 823c1f7c-870a-44c0-9740-73f53a0710f8)");
unit.assert_eq16(16'h06FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #343 e33b140a-8feb-414a-99e1-f4911442deb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 1aa73bca-7305-43c7-86af-3d190529bb11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 7e24cf62-f71c-4caa-870f-5d4187b1ca23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 39c1d91f-7f1c-4e9f-ae26-6a5eb776ecc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 dba20c33-4f75-4dac-96d7-a7a81914b249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 8d090e27-52c8-4ec8-91b0-9d438e9d4ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 bd67c952-f6d4-409b-9c62-2dee0ea91b3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC00D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h87D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h093A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #344 04a26d6c-3f5a-41ec-9b89-9d73296058f0)");
unit.assert_eq16(16'hD8CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #344 0f192cce-3665-46b3-9fae-206c45841e9c)");
unit.assert_eq16(16'h713B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #344 f17783f5-1377-4546-80a1-f06d8f0888f8)");
unit.assert_eq16(16'h87D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #344 f135320f-9f21-451d-bac9-c5520966c3e4)");
unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #344 34e06b54-21fc-4245-a18e-e198e771a851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 1eed81ff-1c7d-4b4d-b86c-fe44201ee332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 07a157f9-59cb-48fc-bbac-2d6cb032b6b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 f9f74176-577e-447e-83d3-29bbf422ec8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 e15a5704-9fcf-431b-ad19-c282d6ac5ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 16d2879b-b125-4ca1-9dd0-143f84b85b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 ba58a991-e2ab-4f22-a0c0-b7a83733e401)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB0D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3DFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h955B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h066A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #345 440055b4-81af-4daa-b1be-c9b6654008df)");
unit.assert_eq16(16'hB0D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #345 81111d8f-88d2-48d0-a3c5-868839a58675)");
unit.assert_eq16(16'h31EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #345 35ae9fab-1642-4336-b4ca-1dcc9b750357)");
unit.assert_eq16(16'h955B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #345 b236634f-2ecf-441e-828e-bb45f531d63b)");
unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #345 ef21aa0d-6df4-456a-b946-d6a5375bdec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 f6bc7dcc-ea0e-4900-9bce-d2f610bf8d75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 c1c5fd12-89a6-4890-8f9e-f5669b1b7792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 a78304ec-2d39-4de6-87b3-8935522397f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 4ca4ad44-fe6c-4844-8d61-e7f67fc47a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 451fa057-8b96-48c6-9b0c-72178d2f3ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 1fe4e9d2-c2ca-45e7-8391-3245828cb15a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h918B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB1D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hACEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #346 79c0d9ce-6feb-4114-9f6e-419156b6d72d)");
unit.assert_eq16(16'h918B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #346 a2cf6df2-a970-4d5c-8bfb-ee7f64b90e6d)");
unit.assert_eq16(16'h55F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #346 ce6324ed-6e85-4014-bfd7-cd0aa55661fb)");
unit.assert_eq16(16'hACEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #346 76f44792-131c-495e-9945-92a9e0d2da68)");
unit.assert_eq16(16'h0271, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #346 8e907c56-c385-41e6-af13-a88a93308c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 af030ea8-56d3-4b8e-823e-6552fa59a392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 f8111f37-1a27-4369-8519-e558b1b05bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 dcb69c70-8603-41aa-87ca-e3f650fd0de3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 2c6c7336-2843-441e-9744-8345c6287dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 661f5dfa-12e4-487e-b011-0f6ca71133ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 2eee0fea-d198-4612-8364-dee38ac8e8af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h568D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3570;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #347 4843a023-57dd-4e15-8344-60ea04049d42)");
unit.assert_eq16(16'h568D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #347 824cf7f9-9870-4aa7-8639-c03621991400)");
unit.assert_eq16(16'h57AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #347 e72cb497-3a82-4652-9f4a-aa3d1325d6a1)");
unit.assert_eq16(16'h8BCD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #347 cb52b255-1ca8-4146-add0-882024edbed3)");
unit.assert_eq16(16'h0CB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #347 749bbd78-43d6-4a1f-9503-996e84261ce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 b506883f-c782-40b4-9f60-ef6cffea31d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 d5f6f78d-836b-41dd-9bc4-ec860cae49a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 8c54eb0e-7bf2-4b45-aeb3-bda530dded75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 06cee4cd-10a1-463e-b4f4-1c163cb6d933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 37ffecec-7b99-4ed4-bdd5-287e3a1e10e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 16ada76d-135b-4379-a8f1-5b7dc909d8c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h46D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #348 56e906e7-d9b1-4eda-957c-0c26bf32b3b7)");
unit.assert_eq16(16'h5D19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #348 015457a9-eaef-447c-83ba-c22c1420a111)");
unit.assert_eq16(16'h959A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #348 cf92867f-e532-4feb-bccf-287708d678b8)");
unit.assert_eq16(16'h0D6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #348 9d330822-115f-4fbd-8a8d-7f58c3821c70)");
unit.assert_eq16(16'h0ABC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #348 b9a7fc74-687b-41a7-8493-594dd173fa43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 600af3f2-a7f6-441d-8c2f-a123a5e73edd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 e1d29612-6be5-4ba5-87a0-f75bc5e36eb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 b52b03e2-f376-41cc-a28f-7e353bb924bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 479d4f9c-2648-43aa-a207-e4f68bdda684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 488d2966-4694-4ba9-8a3c-407b8d66f913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 d2c3bc91-4423-4cdf-983a-2d05883b975c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h61A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3184;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #349 badc3550-3366-46e2-b276-f6db4c074a14)");
unit.assert_eq16(16'hCD68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #349 86c24870-19af-4526-aa03-a72b92f669ee)");
unit.assert_eq16(16'h4CA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #349 0dc0247f-9256-4b14-b5bc-12452fd75f52)");
unit.assert_eq16(16'h3184, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #349 2d1ab2b4-7241-4a9d-b923-5c9cbf26be49)");
unit.assert_eq16(16'h0F95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #349 a5c3933f-b5bc-4982-815a-22f63b2a6d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 c0f1cbc3-0479-4ae7-a1ae-7f0361e6aad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 db17c152-050f-46a2-8600-3017db7a2687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 92088527-5c55-4969-bd86-a4d156b6697b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 57cdb3db-742b-443f-85e1-e4b43e081fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 a254ba1c-cfe0-4d35-9de2-0f9d4ecb085e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 66c4f98f-58c9-4e9c-9bb9-f7fcbb3c6d94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF183;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD919;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #350 4ff21eb6-43e6-4286-880a-36236a5f8a88)");
unit.assert_eq16(16'h64BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #350 ec658470-76b9-4029-9bfa-f8b73fabcd05)");
unit.assert_eq16(16'h929D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #350 00da7382-ec92-42cf-be37-e8f60b2a3fd4)");
unit.assert_eq16(16'hD919, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #350 a8767fe7-6b7b-4591-bd04-b3f27ef67660)");
unit.assert_eq16(16'h05B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #350 75489127-7190-4ae6-aa66-9ff52d13493f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 fa0b30fc-74d7-4342-a6e9-192fe82980f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 d81a967b-6834-44f8-90d7-596d762c2385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 aaf34d0a-3558-4836-9811-768bda8f23f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 f0337573-f28a-46b6-aaea-1fe45b280359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 fc779c59-00ce-4b6a-80fa-ab21887cbd36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 c1cda460-aea5-4649-8c74-49bee8cbce87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC01B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8644;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0891;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #351 de616034-8285-4ff9-abae-71b40157ded9)");
unit.assert_eq16(16'hC01B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #351 3a3622f1-7b34-4ea6-80d0-12bbd26758fc)");
unit.assert_eq16(16'h5C9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #351 f1dfc981-fd02-4b2e-a41f-3bb141510bb1)");
unit.assert_eq16(16'h6AFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #351 4d92a3ed-29d9-4be9-a88a-806c90458690)");
unit.assert_eq16(16'h0893, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #351 1e5b26dc-0e45-40af-8768-c802acde7455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 b1ebc2b2-f584-4609-ac40-42a1eaeb8cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 73731ec1-3485-447a-afee-c7fc7cdcf5cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 4d189397-720d-4fb1-aa66-2456a5668708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 cd0554b6-c96d-468d-869d-123685de2633)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 36e7e666-a33b-4def-8f85-8c8dcf3e9047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 44e373a4-0d7b-4988-908d-67300eb550d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hADFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA604;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #352 0edb64f2-991a-47e4-9939-f6cfab947e47)");
unit.assert_eq16(16'hADFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #352 2444aed7-62e3-4cd0-a2ea-07adb13ae4e2)");
unit.assert_eq16(16'hB8E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #352 65f37b01-2c8c-4280-8d94-4cfd03446041)");
unit.assert_eq16(16'h3B36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #352 434672b9-c568-4f73-9e33-8504dfdf9f18)");
unit.assert_eq16(16'h0B43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #352 93d5e1ca-26ec-40ec-ae3c-157641765b0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 9e29228d-034b-4a11-ac1b-4c981aa8838f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 67b25235-d66f-454e-bec6-9440d3be8674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 c86dce51-4820-4b5c-addc-6dd7b6f7a2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 62e65966-98e2-4c91-b023-5db0f5f1f2fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 84ef0222-0d36-4fc3-8026-7703b3de1b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 d45ca08a-3a09-457f-9094-b9d305504b30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF635;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC72A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #353 52a2c5b7-961d-435a-98e7-5270281895d7)");
unit.assert_eq16(16'hAE26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #353 55a3a49e-6348-4bca-961b-7c55792fcbf6)");
unit.assert_eq16(16'h56A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #353 aa797f28-36f6-43c9-82b9-95a372d96dd1)");
unit.assert_eq16(16'hC72A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #353 704d2645-9c52-4b54-824d-67b878477245)");
unit.assert_eq16(16'h01E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #353 d3e6ad01-1251-4bc2-b623-5a34454c3251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 83d1d2bf-2391-4faf-9615-9efbcc7db5b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 d4dff8a0-30bd-4a92-9af4-863fd4ebb5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 e6557401-0ba2-4ede-83c6-2fdf8f9ddc0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 a18df72a-17ff-4123-84bc-6912d7864b19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 a2f89a67-69c9-4e7d-920a-ea8f253c9394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 aafc27a5-c50f-498b-8c17-92155c04681d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC784;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #354 ac6d8a3c-d58b-4c13-a578-e9e58cda8ebd)");
unit.assert_eq16(16'hCE19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #354 2f001263-4c22-45f6-98ee-246d1cc47367)");
unit.assert_eq16(16'h6AD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #354 0db44637-d859-4c7c-ba4c-0356dbc74661)");
unit.assert_eq16(16'hC784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #354 738bc85d-175f-4c71-9789-801a68cfb32a)");
unit.assert_eq16(16'h08AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #354 ed35cffa-33ad-4a70-910a-a1b5e4924030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 384a367e-3b54-4789-980f-d49e26f20bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 d461c100-7c1e-4493-b4cc-67321c693f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 37e8e779-8f09-4a76-a7ab-205d9de2bd90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 3d59f64c-3be1-41e3-b59e-163de71bdc48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 3b1fcf35-f5b2-48cf-a96c-834ed3c8901a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 f6bccd12-9ab3-4371-bb8d-a857553395ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h03D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3224;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h88BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #355 4bba65bd-fbb0-440a-9219-ce2b756f185a)");
unit.assert_eq16(16'h03D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #355 9310c5dc-da43-40b3-bfa6-2c7238f8c03f)");
unit.assert_eq16(16'h02BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #355 4daccaa3-5b14-40e1-b083-f900346ffb96)");
unit.assert_eq16(16'h88BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #355 184c177d-15c6-4c30-ac40-f4d746b9ff84)");
unit.assert_eq16(16'h08C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #355 4ae5c527-251a-45cb-931b-30b06d3dda0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 4a90b767-f5e8-4c57-a670-3dca298c0532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 df086512-78c7-4009-9c2b-9ca80ae18859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 def3188a-305c-41d7-96b3-2905c10b5205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 1667704e-9cea-4d2b-b071-7643b0fc2217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 795b4882-54a7-4a57-b4cb-c29deb26fce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 ef2f2da5-50b3-4628-b52a-a0324864f6a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4022;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA703;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0215;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #356 774f5a1e-bbd5-4e2d-bac0-2f4c76a279f9)");
unit.assert_eq16(16'h3A10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #356 377a76d4-f9d9-48e2-8273-2341226efd93)");
unit.assert_eq16(16'h0386, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #356 b78a8d2b-b390-4022-a714-dad59c702f3f)");
unit.assert_eq16(16'hA703, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #356 98aac860-2890-4471-8e45-413e9f760923)");
unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #356 fdf4aff0-d8b9-4e10-870e-1d8c3af8fdad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 90e6e118-5914-427a-81d3-eb6cbecd5141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 8f2b7e6b-ffcf-4c44-bd10-7d8af0847ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 e97859e6-afa3-4a6b-860c-dcf39382ae49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 574f4756-b3fe-4a0d-a2e6-eef3e91a7a54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 07836b88-15cf-45d4-a8dc-1a87816349a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 04a64e73-4b8f-402a-9a6a-c160d9f7e6de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC922;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0817;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #357 f9eec87e-e736-4acd-b1d4-ad673481ad32)");
unit.assert_eq16(16'h2C12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #357 e9f3f770-c587-4c4b-be94-730a2a53e2e6)");
unit.assert_eq16(16'hA864, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #357 eca0ed93-4410-4bda-bd0b-afa19915a94a)");
unit.assert_eq16(16'h4BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #357 95939fd2-a29b-408b-aec0-5e2a8cee8f78)");
unit.assert_eq16(16'h0819, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #357 7e6594c7-f01b-40c0-bd40-6cad317c1125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 d6d3bc86-dd4e-4866-96dc-bbdae1530365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 6bcf1a03-0518-419c-9fb6-2ce5a2c8ef6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 7733d475-bfac-4cf1-979e-8296ceeba62d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 01341ee4-03ff-4dce-9ad8-ed85e220702d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 0333e03c-b9ec-4605-83b5-e12e24d7b1d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 5d276fb7-ccd7-4db5-850b-b50c06c08a04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h92D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9473;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hED2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #358 dc0d9b2a-3924-4bb6-a00a-e55912e86d66)");
unit.assert_eq16(16'h92D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #358 31741166-5845-4ba9-be58-bf510da00356)");
unit.assert_eq16(16'h1926, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #358 867c1478-83ab-4416-886a-8726a7c4fa69)");
unit.assert_eq16(16'hED2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #358 94d0e637-5921-41e6-ab02-db90e7f012fc)");
unit.assert_eq16(16'h01EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #358 f02a2e72-2876-436b-98e9-73596323aeb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 2492f603-f69d-4731-a97b-a3055cb67761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 ff4d8ec0-4535-463f-b0ab-d295486f6cab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 c4ae670d-1df0-470f-8586-d58bd95cd1fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 7bc129f0-7059-4c4c-9038-3324b2bff1ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 6114ee19-051a-47be-a9eb-af2575f08f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 c8c92521-38d7-4654-8b80-667404fb0bf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h461C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAFA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA98B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #359 84a6b817-f8a7-49ea-a6c1-789f6de24aa0)");
unit.assert_eq16(16'h461C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #359 145057c0-c6cb-44a0-878f-0ce7fb344b62)");
unit.assert_eq16(16'hC824, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #359 2d17b013-bece-40d8-883f-171182a5f3b3)");
unit.assert_eq16(16'hA98B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #359 7e2db39a-1d26-483a-bf35-1514bff31e49)");
unit.assert_eq16(16'h02A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #359 071810a3-4c73-4f61-9d3a-5fafcc076188)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 050e0153-b16f-49f5-b492-b62420aa92f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 5e151ba1-81fb-44b9-aa1f-7d3b1b8136e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 735b562a-70c2-48f4-b7cb-f8bf8d0ffa39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 fc26d464-59a2-4500-aead-8ab47fcc10d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 71ca6370-bb49-49c3-88ea-6df1a5cb8886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 2ceb7a78-a65d-46bf-a470-cbf5b01ecc8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h071F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBF13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #360 cd96710f-7326-4dbc-b74f-75a4266dc491)");
unit.assert_eq16(16'h071F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #360 bd8233f8-11e9-439b-a8fc-cea183401270)");
unit.assert_eq16(16'h81A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #360 ff1f9d1f-9d9b-4254-b01d-60edba784a11)");
unit.assert_eq16(16'h1B33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #360 10a67fee-4c4c-4424-89ba-e6f8fbee5fbe)");
unit.assert_eq16(16'h070C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #360 00b8fb08-632b-4a5d-9454-21b6956953f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 d2f9032c-ae25-4074-8afc-649d7897e6d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 1e280ccf-9ffd-40c8-8834-0899b3a956fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 f897bc49-8421-4ec0-8861-173ec28273ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 501df28c-ba3d-47a8-964a-2c3caf7a7ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 a0b089a0-b9b1-4c68-8e8c-b26cfa63ae08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 990bf08e-8334-4666-a783-c2363615ea00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA147;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h801D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #361 eaecd8ce-3eee-4a24-abf5-1bfd7e1f9723)");
unit.assert_eq16(16'h96CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #361 aa9405c6-5d3c-48c9-856d-cf5dd5a6f435)");
unit.assert_eq16(16'h0830, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #361 cb12517b-e2e5-4555-9f83-a1b6cdd1ce6c)");
unit.assert_eq16(16'h801D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #361 8decab6c-ddfb-450a-949c-61030a6f4953)");
unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #361 5030bb37-fa8e-4c6e-a94f-21264e8cf61c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 492d80f6-1bfd-48ae-b8f2-747a98046b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 b55db0cc-c49d-40fe-9154-3e01a18cbae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 fce232cf-0bf6-43a2-8a72-b9110c0ba82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 bd72c10b-f3ab-415a-95a6-a92a46162f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 7bdcb059-538b-411c-b4d5-32a0e481a99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 792b0946-0c79-4cb5-aa44-4a5047fb05f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA3A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF073;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0100;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #362 6f97aab8-553e-4adc-9fa7-700f9d197266)");
unit.assert_eq16(16'h2B36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #362 b0b37cc9-ca1c-40c4-9478-af99697151b2)");
unit.assert_eq16(16'h9EE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #362 42442b1f-967e-44f0-be2d-a0fead12968f)");
unit.assert_eq16(16'hF073, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #362 dad915a0-518d-42cf-b669-54090faf4804)");
unit.assert_eq16(16'h0102, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #362 73b667a7-7b7b-409e-9d8d-cbc964c316cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 d28421b2-eaa1-4f08-a772-c5ecf1923ace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 c247a3bd-9e64-4fa8-a515-f10a623b0e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 5649e148-7563-4b08-9def-102f990fdf53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 7a1cd9b2-8b0a-49af-8900-955175b91632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 9aeb765f-3357-4d1c-87fd-f3ad660d90ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 b9d09fa1-f9cd-4662-9594-4daf7ded5a79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAAD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h20E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #363 d0d1e28d-bd5b-45f5-8cf5-392dd216154a)");
unit.assert_eq16(16'hAAD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #363 c2c11266-6a19-4429-adc7-5a583ae94306)");
unit.assert_eq16(16'h6BC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #363 1ec4bf20-a620-4a04-8184-a3104e706ca8)");
unit.assert_eq16(16'h40C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #363 f844f7e7-28e3-476d-a3b6-986657c68fc1)");
unit.assert_eq16(16'h0C0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #363 9b64cdfd-df06-41be-bad0-c66b3dc67920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 bb3a81ec-1864-4fc3-8680-60b2de118ddd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 63002e18-e97f-408c-8801-49e0ad75da78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 4e20e34b-d002-41d4-ad92-bb5f5c1374cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 63a772c3-aabe-40a1-93c8-96b2fdb0e65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 16f91fa7-d0a3-4de8-8d91-f40134507fb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 3187d342-6845-49dd-92a0-11b6053b119c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDCDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDB28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC96D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #364 8818bed2-20ea-492f-a1b5-e75358fab975)");
unit.assert_eq16(16'hDCDB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #364 edcfb35b-db78-441c-8ef5-40732f831909)");
unit.assert_eq16(16'h3440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #364 1d9b62fb-c2c4-4976-9e77-a13be45221ca)");
unit.assert_eq16(16'hC96D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #364 26ab001b-60c7-4a0e-b9e3-66e0d001f545)");
unit.assert_eq16(16'h0D6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #364 16f4bf7b-1936-4b53-a3b4-66c37e394bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 853e95f9-94d4-477d-bede-843f8a6a34cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 b240a444-aa6a-490a-be03-c076fe9cc2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 ef27cfa5-50f9-4e2f-aa30-0dfb98a4eca2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 645d5266-fdad-4f36-a3f1-0f75d5d351ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 cc547e8f-b20a-4dab-a8d0-d9fff205e624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 5407a4f5-ef45-4add-bb54-ea9af94f37df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFEFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD1C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0672;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #365 b74b0326-16a0-4d4a-9fa3-ee02f8d1939f)");
unit.assert_eq16(16'hFEFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #365 18b0c478-6d29-42e8-9351-6e46c302eb9f)");
unit.assert_eq16(16'h2BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #365 f0a10d84-68b0-4b7c-b703-ef9606c9d0b6)");
unit.assert_eq16(16'hB7DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #365 b1fafbf3-0185-4f03-9520-4f25c95d2688)");
unit.assert_eq16(16'h0674, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #365 d085fa80-f7bc-469a-8ab2-8f69ed4ca846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 2945b1aa-9169-4559-b46d-c15148b860f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 362d9bfa-58bd-4175-85f7-9fb9643979cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 079b7ffd-8c3d-4bc8-ba53-66c2609db40c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 4823678c-f411-4616-89a2-9b358cc4c782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 f455740c-57f5-4944-8742-95fe8d0ac2db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 4850bc0f-b0c8-4ce9-9f3b-c5796d864436)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD5E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0677;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #366 af7b9cbd-2a56-4cd9-a483-22dc82d893a1)");
unit.assert_eq16(16'h4C12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #366 091325a6-5089-4396-995c-cd748c2eec9a)");
unit.assert_eq16(16'h8563, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #366 02d5e6d5-92ab-4d45-87b9-c565faa7241d)");
unit.assert_eq16(16'hAE6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #366 ef34db63-8b2e-4b0d-adde-ad975a5f2d25)");
unit.assert_eq16(16'h0679, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #366 d365b878-49dd-46d5-844b-b292da1777c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 4e8e0b27-5a26-49ca-808e-316abd6b787f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 e4f1bb3f-7aac-4351-ac81-a81ec627e558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 d83107f2-8e46-4f65-95ed-e97ee82b05be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 6e413969-5bd2-44a4-9d04-5e3d9314b32d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 b6a2bb23-1eea-409c-8e86-d23c7775bf2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 beefa181-328f-4786-8e22-32b6ceee23e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9ABC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h51BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE21A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0709;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #367 669c33d2-87c4-4331-9af5-6486b2583fa7)");
unit.assert_eq16(16'h9ABC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #367 ae19b5f4-2a9d-4158-9e06-d3aad6837109)");
unit.assert_eq16(16'hA774, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #367 bbacaf4e-e2e7-438a-8b5e-e09f225fb96d)");
unit.assert_eq16(16'hE21A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #367 c7f93a0d-7662-4884-9bfd-d92f8b017dda)");
unit.assert_eq16(16'h070B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #367 ace24579-130c-4644-8e17-b2f5341e3d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 cc07d59a-eb70-4db5-bc26-1706b58bbb5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 9b2753c1-5347-4039-8c42-0eeeaa6ab2ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 47213d45-c690-4d24-ab5b-117d17609c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 b44e9713-c689-4f5e-aba2-e1526035fa07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 3cefe42f-eba6-4bb0-a183-b1747d298b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 4c88722e-b71b-457d-95f7-89985cd19994)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE39F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #368 20ef1afc-0faa-4511-a142-b9857fe71dd1)");
unit.assert_eq16(16'hDAAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #368 73d79c7c-19ac-402a-a918-67e79d7a2ede)");
unit.assert_eq16(16'h9AE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #368 2fe4bb4f-10a7-49cc-a534-85047f92af02)");
unit.assert_eq16(16'hE39F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #368 e0c783fc-eb8a-45eb-bfda-4690f1cc5b9f)");
unit.assert_eq16(16'h012C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #368 8cd3fe4a-ea41-41ad-913f-d67ce3f5ffe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 b81bf989-2e36-4af0-b875-dc3ebb2568db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 8aa63fe3-70ac-4d47-a731-1115c28fd114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 7f8b50ec-a18c-4a6d-a91f-d2ae8c1d3e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 7ba18463-9f56-485f-9051-06aed1613f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 1e077486-9ce2-42a5-a9cb-eb828f091eef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 4badab8e-c2da-437c-ba09-3200574670c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB260;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #369 240db80d-5eb0-481a-b6ba-8f680a3a6650)");
unit.assert_eq16(16'hBCDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #369 811a4127-0f1d-404c-9b61-68e182b27897)");
unit.assert_eq16(16'h96A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #369 22565138-37d4-44f3-a5cc-5a106b184a9a)");
unit.assert_eq16(16'h52C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #369 c34c25e1-1706-40ea-9a43-1038e4755fab)");
unit.assert_eq16(16'h0D2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #369 2b8846cd-f2ec-4061-9da8-7110666f78ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 b5b443b1-0b0e-432d-b7fc-cb9ddb789d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 c6698f3c-1486-4afa-bd1c-b3d109d32ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 cf283fa4-d8b3-4d78-a3ca-4ec525df35b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 658b91e5-fa7b-4732-9c74-54f5dee03d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 2c0644f8-fe12-46d8-816b-81ffcdd5c504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 3596ba27-e3a7-4e87-a719-44b72a52a3dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7D14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h70A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0894;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #370 19777670-d825-4490-9ab0-7d4115ef388b)");
unit.assert_eq16(16'h7D14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #370 ce64c868-825b-46cc-90c8-b23236b7aeb3)");
unit.assert_eq16(16'hA638, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #370 84d02d9d-cdc3-416a-9a10-0d64d284ce52)");
unit.assert_eq16(16'h70A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #370 fa64a951-3120-4afc-a2d6-bb4e1292e58b)");
unit.assert_eq16(16'h0896, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #370 7ed1a770-523a-4df3-a78c-3acb5ea5b6f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 b74c1ad4-15b8-40b3-9e73-c4228f86317b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 45b0c9a4-3578-4615-b118-b2cd0c01341f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 b7f1256e-c0c2-4ef6-983c-df6465dd74e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 366d2017-ad6e-47cf-ba6e-d0c44d85bcd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 419803e2-3e07-44a8-b402-e059a201be11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 5715ef98-5b7a-4e31-bf26-324d63cb607d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6004;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h308A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #371 c20b1501-7eaa-4fbf-b4d6-d25cdb386c65)");
unit.assert_eq16(16'h6004, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #371 403efbee-dc0b-49b6-a984-4562de6da66f)");
unit.assert_eq16(16'h27F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #371 fd321ea0-d102-4877-a41a-393c18db7ec3)");
unit.assert_eq16(16'hFA63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #371 a213d819-9094-4828-afe1-9ba41f2cb6a8)");
unit.assert_eq16(16'h06B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #371 b01dcc08-b275-4688-8ec3-a1bed90b30ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 efc783a1-5fd4-4cdd-a4b4-508efa8183aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 bc59ea47-96ee-4891-96ef-b74de28c5c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 ab5378e2-ee54-45be-b185-3fb78f06693d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 eae158b2-2321-4772-8ab3-d0f3350bbe9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 a68c87b3-ae2a-45ab-9c5d-710e6702e1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 c21dbcd8-a4e7-4266-beef-0ad14c8d3cf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7112;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD239;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #372 7461cea1-d858-4ab6-9579-b9a93dce8bbe)");
unit.assert_eq16(16'h7112, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #372 dca729ca-8a7c-498b-b825-c1f2ecc8cbbb)");
unit.assert_eq16(16'hD921, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #372 ead12f68-efe5-4e90-8732-bd2186a8a18f)");
unit.assert_eq16(16'hD239, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #372 dfa05dc5-3f4d-4076-b54d-3f9a78a14349)");
unit.assert_eq16(16'h09E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #372 e76e3646-c454-4e15-bc6d-89e14800f666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 dd1909ba-ab27-4842-b483-a6dea38cd411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 f0719db8-10ce-4aa7-b02f-1e02316aa874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 ef5bdd5a-3763-4c77-9e21-17e99e5753ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 2f68ac69-beaa-418d-a44f-7f2a5917dd80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 3952cb45-d22b-4119-9c83-b181ce83e0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 e0c114df-7f99-48ca-b0b8-c54ef0cef3ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h73A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h06CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #373 2c97864c-5110-4983-b6a5-7ef924cba993)");
unit.assert_eq16(16'h73A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #373 e1c9284c-43ec-42f8-b0d8-9ba15bf3a80f)");
unit.assert_eq16(16'hE7CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #373 dab58eca-2c47-41b3-b40f-859df44e371e)");
unit.assert_eq16(16'h7C3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #373 04398120-33d6-4b13-9c2a-f7f59ed71837)");
unit.assert_eq16(16'h06A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #373 cfecc098-13ef-41d0-8a54-d8ccb6d54da7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 e0d46422-3611-4d29-aee2-bd778c8fd408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 da57ac2c-0873-412d-b62d-92cafa7c2048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 1ecf2267-bb67-4dab-bd2b-35496919d86b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 24298f89-2675-49d0-bfbf-d9417cd88bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 8b9df6a8-d5fd-4e71-91f3-1af4f4022378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 0a8ff22a-c115-4259-9267-547453dedbf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1A07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h003C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #374 2a0681c1-b22f-46a8-b697-59d3fea79c78)");
unit.assert_eq16(16'h1A07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #374 7e62724b-bfba-415c-83ea-b230757f8366)");
unit.assert_eq16(16'hE812, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #374 d5c55d70-ff71-4b37-b821-0b85b5d2f148)");
unit.assert_eq16(16'hDD07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #374 ce671b48-ef94-4d42-8e3b-f227b8f394d0)");
unit.assert_eq16(16'h003E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #374 24fb9b87-dce8-4f36-9557-fe1500be7a1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 99f80139-56ac-4edd-80c1-24104b666ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 889277e2-88bb-4a3d-b35f-34a7cd1da295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 4949dc61-a7f9-45a4-911b-bbb93c8e300b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 da4ec552-2e6e-4f6c-8d3d-1cc23172c593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 526108e5-63fc-43fb-9c67-2f23381b9ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 5632fd99-79e0-4027-b5e5-d4239dc8b999)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9108;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0263;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE8B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #375 90a3fb54-268f-4213-8cff-987127026411)");
unit.assert_eq16(16'h9108, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #375 9d612376-c438-4053-a05a-54738aedc9a0)");
unit.assert_eq16(16'hA15F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #375 fc109c2e-5780-4ba8-b0f7-4eff88548ac3)");
unit.assert_eq16(16'hE8B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #375 41b7de1b-6315-4cdd-a3fe-914140e69630)");
unit.assert_eq16(16'h0A1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #375 164e7c1a-6cd1-4eee-a174-abd7effc6ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 9f048e2d-6ddb-4763-a637-29f600f49b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 06c99724-49c0-41bb-b563-f7dff2bfa577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 a87d75b2-5e00-47d6-8437-a2bb47a7e2b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 e8d47e64-006c-4fbb-82bb-66f0a27b1d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 cb15acab-63b8-4dcc-81ef-b0ef6bd1e2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 da79afc1-3ade-4eef-aad2-2b2ccf297fd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h44B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #376 76672a7e-da9f-4eee-ac45-24d6476d05b2)");
unit.assert_eq16(16'h44B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #376 b4e57d5c-a7ba-4bda-b9e6-cce06387d341)");
unit.assert_eq16(16'hC2A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #376 79d5cf78-5ab6-43e7-b9eb-28cf1d61ce95)");
unit.assert_eq16(16'hEA3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #376 794d52b8-002e-48ec-bcd8-e5b55d036371)");
unit.assert_eq16(16'h0A13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #376 dcdccc93-dfff-4b71-8e93-6736ec021c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 02053a8c-972b-49e2-be48-bc3a3c2beeae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 3bf4736b-ebb4-4a8e-aea1-f526a6956cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 f6590a86-08ee-4758-908e-5d25e5fae650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 2b6c5478-dfef-4efa-9636-90e29c329e03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 6b0488f7-655d-47e1-a6a8-28b79ae424c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 58e69479-e7b4-4476-aa84-0ac147f95305)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2ED4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h119C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE79D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #377 1e5455ac-5497-42cb-b76c-08abeddfea4d)");
unit.assert_eq16(16'h2ED4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #377 09985294-2743-4c26-91a1-6ec89673f39e)");
unit.assert_eq16(16'h4D60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #377 e102580b-00e8-4ff5-9a82-90f6c0f9e336)");
unit.assert_eq16(16'hE79D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #377 8efa5818-b888-47c1-a665-cd43325b0319)");
unit.assert_eq16(16'h09C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #377 ebeebc2d-6f0f-4280-9645-e6b0883e3c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 cdd5daf2-5b61-4e63-9d8b-3996b29db47d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 83785e09-828f-4ce7-8338-2d611dfe6258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 36a7a1da-bf1b-4c7e-945d-17bf7565c4b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 17ce825c-db41-442f-89e5-75cb99bf870f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 b43bf42c-b292-4ee5-813c-475782dc2b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 d0ae0e39-8dec-441f-8775-c68aa4afdb5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDD20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC19F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #378 2d4d82ae-f85d-4851-80ec-27d1b458b2be)");
unit.assert_eq16(16'hDD20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #378 942b5209-fa73-4dba-a596-ddc030853e6d)");
unit.assert_eq16(16'h7DB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #378 7f8e05bb-3b99-4be0-b79c-47e4f41411fd)");
unit.assert_eq16(16'hC19F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #378 b8db2124-f516-43af-8132-1a41e17833f9)");
unit.assert_eq16(16'h08ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #378 b7c547b8-9d33-45b3-9a46-5c23b4cf70f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 20c5cf61-efdf-45c8-bafd-4acd26a5eb9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 095683bb-6759-4c11-bf21-67e1a8152c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 a92441e7-9da3-40d4-87ff-e2354886a6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 6ab364ef-e90e-4b37-8e76-fac8b922645b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 bf919b28-4639-4a27-91b4-e685446e182d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 9bb9902f-edc2-41fc-8673-1b2f32162e8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE932;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1BD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA397;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #379 d68e26d3-48c1-4075-a06e-3ba49888e6a7)");
unit.assert_eq16(16'hE932, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #379 474ed9b2-bea2-4eb4-a84a-879a37057ef9)");
unit.assert_eq16(16'hC2A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #379 9cb0a78d-130b-44b4-a082-c2de72006b4f)");
unit.assert_eq16(16'hA397, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #379 e8d8d1b5-8be0-4cb9-a2a1-3e52829d845d)");
unit.assert_eq16(16'h0A13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #379 155f365d-7aaa-4f19-93ff-bc3543469ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 89f2d364-adbe-4134-9d1a-04c1413cd569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 682ddbbf-655e-423d-96f9-01d0761f0c8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 7a88bc37-0280-4a1a-bc42-eef20c712ae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 8b6c45c6-7739-410a-84f4-75bc157221a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 6e372031-3d09-4c97-aad9-a5a2bc57e9fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 c6aaf872-6457-4d62-a3bd-508df7569d91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD12A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2ADF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE068;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #380 254dd631-5cfe-4ee0-873c-ab1d015c4d0f)");
unit.assert_eq16(16'hD12A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #380 855bd328-5398-4de9-a7c3-60e6f521f1e5)");
unit.assert_eq16(16'h503E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #380 ee9a7b6e-8a56-4024-b169-3fa660613bbc)");
unit.assert_eq16(16'hE068, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #380 d6220205-6903-4932-815e-7e7c554cf0ae)");
unit.assert_eq16(16'h0B25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #380 1728b6e4-7117-4f4a-a98e-1c07e8105078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 1a55d7a8-378b-4160-9d26-d0b5e8f69162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 dee0205f-6323-4f04-9ae1-8bced381c7ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 f30aeaeb-ace1-4898-adaf-320b0afa46e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 09fe43ae-a693-4955-a984-999c78bfe6a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 dd77a7ca-fda1-40ca-b853-66ccf3be362c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 4e444f95-8519-4f99-bed3-55c83e085ec2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h32EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h14FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h74CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h018B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #381 366555a8-70cd-495d-9bfc-fcc0c5709497)");
unit.assert_eq16(16'h32EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #381 bdf96770-7df1-4c8b-be7a-548cfe453395)");
unit.assert_eq16(16'h584E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #381 72f039aa-d344-402e-bc0c-8ebf111dc653)");
unit.assert_eq16(16'h74CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #381 9a4bc943-2111-467a-9425-88a8c95ae92e)");
unit.assert_eq16(16'h018D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #381 793263d9-bdf6-4132-a073-3d56f1e9c7bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 34a3feb2-92c3-4bd4-9865-ce470a7843e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 23442672-51aa-46c3-831c-8b2640ec2811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 bb1befe9-9966-4988-90d9-300160c0a63a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 4cff8a0a-fdd6-42fe-8a60-8b71a886933e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 5af21df0-a84f-434f-9373-004e57259e81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 f07d4bed-6261-49ba-8761-44ccf6bc0da1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6E43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #382 15eb3f3f-75ee-47be-9e2b-e195ea0d1249)");
unit.assert_eq16(16'h6E43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #382 c111542b-93a4-4287-9023-71ffdd2d3ee4)");
unit.assert_eq16(16'h2D96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #382 08952834-8202-4db8-bbb2-d49c8b8fba60)");
unit.assert_eq16(16'hBE34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #382 a4efaf9f-0c38-4a59-bc51-4358bc5e8578)");
unit.assert_eq16(16'h0D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #382 ef58a6a6-ab85-46f9-a68f-c36d01cbdffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 0dd55e0c-3be1-42e9-a02e-22bf2e227c50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 dd35e376-d633-42b2-a489-80eaf67c34e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 dfc99dfd-a88e-49fa-a2d6-88ed71367675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 818716c1-a5ed-44ac-af49-d21d879d688f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 dac0d137-df9c-41fc-9bde-dc8cf27ebe59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 0e36e808-c42d-43c4-9dcb-eca9f0107993)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4EC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #383 bc3e4275-4235-4c48-bc69-6224b3d26cd2)");
unit.assert_eq16(16'h6F32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #383 ff545377-d7dd-4e0b-80ba-3619f621e533)");
unit.assert_eq16(16'h0959, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #383 3b083660-fc4b-42e4-afba-bd169583e04e)");
unit.assert_eq16(16'h4EC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #383 e5f2675a-008a-40a6-8be1-9f6fa763638f)");
unit.assert_eq16(16'h0916, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #383 a1e2c4f7-ebcf-4751-8a52-ebe8b7bdae6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 5e6a215a-e2dc-48c2-80ab-4802e53c094b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 f62e5466-fe12-4957-bcd1-3bbf28fe7f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 61af0cba-f66e-4695-a413-f63b7935cc81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 b4d19d42-298d-4a22-9977-cf8cbb393d04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 a2326aed-8f0b-4f63-8747-1b1975eee048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 a681bd00-0255-46f6-a11c-3e7d6c72493b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h964A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA01B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #384 2da84c4d-cd8e-492e-80dd-f96b0d8f690a)");
unit.assert_eq16(16'hE6C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #384 9f7ce062-3cdc-4abb-8877-fc2df86c6e19)");
unit.assert_eq16(16'h8C76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #384 aeaa98d9-de5c-469f-bde8-2f878b33ba71)");
unit.assert_eq16(16'hA01B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #384 5cca0b3f-6e17-4036-99e3-b9fa9a6f1adb)");
unit.assert_eq16(16'h0DF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #384 29561bca-9e4b-488a-9f0d-a550d0a04dad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 f133c603-06bb-40c1-ab7b-d1ade955a33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 2caab2c4-a457-4e62-b09b-c5bcec4afc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 6c91e76d-dcbc-48b7-b542-c284403551af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 2a5cf012-888b-446f-9fad-f11e0756357a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 1dd6e30d-30fc-4f53-88b6-77fd11a05cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 e4f3dc87-30ce-4573-8dd3-53349eebd34d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h85A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B77;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #385 f67f9cb4-2c52-4445-9844-fae474b099d8)");
unit.assert_eq16(16'h85A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #385 96821ddc-2d30-49cb-a28f-e29e1105f35a)");
unit.assert_eq16(16'hAD04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #385 69ae5cb3-b01e-4262-b646-d4094b594f1b)");
unit.assert_eq16(16'hFFAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #385 c11dc86d-42c7-43e4-bd6f-946d9e7b1c13)");
unit.assert_eq16(16'h0E92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #385 66c9e7ea-4b8b-4c7a-b7c8-0b41fc25870d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 45bc1c56-c3c2-44a7-bcdb-b3f9ab3ae792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 61cc6442-ec44-46b0-adc1-af364e5fbf40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 e476b5f8-3ae5-459a-aceb-2b498223adb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 7f5ce762-f561-4445-98fe-8cec8419393a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 f08e12d8-3b35-4518-ad7e-83025370851d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 6277b646-4354-446e-8e0e-29ebcca1581c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2569;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4FDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8282;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #386 4e08f136-8b2b-4276-b6b2-b197ad6f19d5)");
unit.assert_eq16(16'h2569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #386 24ef5749-cc0b-4401-83b4-d6351ebe1a1d)");
unit.assert_eq16(16'h3CD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #386 df9af93a-4829-4ba1-a853-8f7618587114)");
unit.assert_eq16(16'h8282, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #386 b873d790-3de1-4c46-a87a-40f04ac5ad8f)");
unit.assert_eq16(16'h04C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #386 ea78c872-7996-458d-8ce9-6ac2d25de873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 a66df7f9-fba3-4ad3-a5fe-a71c3762ad55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 62757641-bc3b-4be4-ae6c-7fb0ee4c6872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 a691a7f2-a298-4c05-9204-28d4dd6bcd17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 2e6f25fc-98a4-468e-a84a-e77703d3887b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 518ad422-abc6-465f-88e2-51f91b7cb502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 a61e6af7-8e59-41db-8a4e-0809eeaa73a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h456B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h61BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7D5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0901;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #387 7f94b1f5-0a22-4e82-8d03-179473119838)");
unit.assert_eq16(16'h456B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #387 2c9a53f0-d24a-491e-9795-5dbd944f7cf8)");
unit.assert_eq16(16'h6DBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #387 a574ec92-c71f-4921-b44a-cc6055e13571)");
unit.assert_eq16(16'h7D5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #387 cf8c5016-29fc-46d2-acb6-e8dd3c6ac266)");
unit.assert_eq16(16'h0903, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #387 093d3c29-e197-4558-bdfb-b73d3e9797ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 305155b8-87cc-42cd-8640-73b60e195ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 20d951b2-6b0f-4b06-87a0-aeb530f356b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 45f1ce48-0364-4d4d-8b35-13c584a0c2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 72f4f914-5532-4b5a-9342-1bae4e5d71f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 c5462b13-3ff2-4d12-8f7a-13fef30b36a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 25a183f8-d822-481c-9b1f-4029eaff8794)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE265;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #388 ed6f9c9e-467a-41ff-a8c9-6a2e4b40b461)");
unit.assert_eq16(16'hE265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #388 ba749495-86a5-4ec1-bb8f-e0961ac6cd77)");
unit.assert_eq16(16'h8B31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #388 64d097f3-01d9-4984-bc93-c0f94e1acbb8)");
unit.assert_eq16(16'hFD70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #388 c984ddad-d3d8-43ee-9cf4-f749766c621e)");
unit.assert_eq16(16'h046C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #388 52c7ade3-eeb6-43cc-a349-5b6074e978c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 c0d1dee1-572c-4b1d-af40-ac38463c924e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 3d729c01-b013-4f20-9993-70d5c6a6a4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 d496a4f4-ab4b-4715-be18-35a795a1d008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 8880d724-2f51-46ea-80cd-d14abbd007db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 c838e0c4-cc3d-4861-a25b-0e2704deff7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 6e3bada6-7d26-4824-859e-04c702b2343c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFAC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8447;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2214;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #389 5154859b-6065-475f-84ad-c5945a7bfae4)");
unit.assert_eq16(16'hFAC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #389 996d9df4-8f51-4662-8716-20af38c1787f)");
unit.assert_eq16(16'h749D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #389 063507d7-a259-4ed0-9a9a-e61aa6901a1f)");
unit.assert_eq16(16'h2214, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #389 7ceead0d-4d4b-46bf-bfa5-1fd208e42a8c)");
unit.assert_eq16(16'h02F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #389 e38c03b4-fcdd-46f4-add4-f9927596134b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 8d9f1b1c-5b1c-4f5a-a0d9-b2cff709fbc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 bb56862d-5639-4979-adae-9256967ddaab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 af25b347-278b-43d9-a190-feef108fd3e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 9afcdf0b-4f03-4505-9d0e-bce29029c760)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 ae2da9a0-1d3c-49ab-9904-2cdf6785a542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 b4d032db-4373-44da-9390-0d6dd98432ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7865;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #390 63b16382-bd6d-4701-8132-c0dbc6881ad6)");
unit.assert_eq16(16'h3D55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #390 878b0a83-0cb4-476f-9915-d62d8e52401a)");
unit.assert_eq16(16'h066B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #390 f1d9d117-7af4-4c8a-87a6-9f984618d893)");
unit.assert_eq16(16'h04D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #390 f9033648-fafe-4aff-93fb-635c7153ca6e)");
unit.assert_eq16(16'h05E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #390 5ee91a84-1d5e-4181-a259-82fcb1299d7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 95db802c-53e6-482a-82ae-0e3434a16ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 3cc89be6-a038-4d98-a792-84fbf6ea95a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 907931c4-3d17-4d30-a10d-60a64d385f76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 f3bde001-509d-4fb5-adf0-e68038529b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 f84eec0c-e814-46bb-93ce-9b8a34fd731d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 a70d3960-c88e-4268-9130-30b90558dde5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h49AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE5F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #391 f56bb99d-afd7-4a92-b788-147980c9b6f0)");
unit.assert_eq16(16'h49AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #391 c951c31f-399d-4069-95ab-3cfd0efa4324)");
unit.assert_eq16(16'h37DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #391 03742755-8da8-450f-91b4-d0aff994e7b7)");
unit.assert_eq16(16'hE5F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #391 34bfa47d-9427-4d2e-b797-641366b9cf1d)");
unit.assert_eq16(16'h0CC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #391 ef0a0606-03c6-42d0-b5a8-debb83b32719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 abf3ef5e-bb9b-44af-8e9d-8af4f5b50737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 0edbf10d-100f-46f1-a8b9-49b1b410c0de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 a9bbeba4-779e-4fe5-a33e-c8e05fd4558a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 1fd7ce1d-ee49-4d0c-9ec3-067a9a169cac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 51fd5409-205e-4d56-bcaa-e69b5761e23a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 aa682c37-b5bd-427a-85f6-9d16c5accf42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD269;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5F94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #392 659800a7-eede-4ca3-a6a9-00a172ad302b)");
unit.assert_eq16(16'hD269, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #392 af1d2e53-affa-4670-9ad2-255a7777a86c)");
unit.assert_eq16(16'h7377, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #392 3c9d7863-4fa1-4072-a10a-e820de44ce6f)");
unit.assert_eq16(16'hD684, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #392 363ee575-f4a0-440b-9ae4-6845ddc8db47)");
unit.assert_eq16(16'h04BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #392 88c5d13d-ea9f-4dea-90c6-9bab279b8e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 c2b50392-a08e-480f-abe2-eb13033d5dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 311db6f2-9c9c-4e45-845a-9471e0e307ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 5f162871-874e-4dfe-9d41-424b35522043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 efa23cc3-68f0-4011-83a9-cd6c073dae58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 3779d96c-1251-42a8-8537-d474dca5ca77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 33248249-8a08-4a63-92e9-a793c6826db8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2AD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #393 8496eefe-cd68-4772-9aa8-a447b6ee96c7)");
unit.assert_eq16(16'hBC47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #393 8e72f2ad-29df-4ed3-bb5e-b421e5b28e53)");
unit.assert_eq16(16'hED41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #393 df8ede31-37d0-4cff-b533-bc67cf2caf36)");
unit.assert_eq16(16'h2AD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #393 22ed9d6b-2dac-4236-9e1a-b2e113466b5a)");
unit.assert_eq16(16'h0E39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #393 d4e9a7e3-39a6-4cc3-ad4e-ae4a6cc3243f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 482a4698-c307-424c-8357-dd5e30222789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 3eaf3b03-c843-4c23-9073-d690e4c6d4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 49629d0c-5b67-4e35-9941-8f5df9ad7781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 a03a4d79-dc1a-493e-9fa3-791195464d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 4c1cbb06-ed24-4f74-b70b-a05430feedab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 015f686c-20b2-433d-b547-521a7e0564fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC009;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD2F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #394 6484a2d9-1d2e-4c91-a2d6-a377ea87aba1)");
unit.assert_eq16(16'hC009, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #394 bd583a5c-c9c0-4a5f-a3a4-41cf14c9a1ab)");
unit.assert_eq16(16'h9B84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #394 bbdb4b7f-a18f-4ddb-b9fd-daf2bd16ed0a)");
unit.assert_eq16(16'hD2F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #394 ce162a22-d34f-4e0e-b856-e00a358fcbfc)");
unit.assert_eq16(16'h07C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #394 a6668d23-08fc-4ef1-983f-c1e22b50bde6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 cfe6158a-4c94-42da-bacf-8e0be4b5b628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 57a164a4-e020-481e-8961-dc42dca0b75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 6e08b59e-f198-43ed-a24e-5d509fa98e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 68fd6044-f4d5-4e02-b0ac-1c9ace6ed513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 b1180c1a-ca26-43e9-9b40-03c3b8119128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 da37aad6-1971-4dd0-a7ae-6e17c556fa3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h127A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5FD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #395 62182951-24f0-4a6f-bca2-89dc789b4772)");
unit.assert_eq16(16'h127A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #395 e71db6b7-de62-4a7f-823c-41c35ee8cc6f)");
unit.assert_eq16(16'hF621, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #395 eedf5550-e8c5-4b31-842b-4916d60c831f)");
unit.assert_eq16(16'h5FD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #395 5441596f-a4f9-4a1d-919f-ae8e121f57c3)");
unit.assert_eq16(16'h05D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #395 fc3947f3-b0fe-43d2-88b7-bb94774de46b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 9f475473-a407-4bf8-9017-e52b2cc3b448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 91a2d36c-2ab7-4d1b-9172-faf4fa42ba51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 26e547a1-db38-480d-b640-4e82e45169c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 aedf5c25-e190-4a35-b0e4-f9bbbaaf9991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 7addc607-db90-4229-9156-6472fb75cce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 2c90d06a-0d94-48fc-8ca7-09232f506b08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE966;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h599C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #396 6f15a847-b4bd-4256-aa66-c1e2672986c0)");
unit.assert_eq16(16'hE966, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #396 c9f509fb-cf51-4ea8-83c8-3655ba006e1d)");
unit.assert_eq16(16'h5C85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #396 58b19fe6-61b9-42d0-b5de-7433de1d1a50)");
unit.assert_eq16(16'h599C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #396 04687889-ee48-499f-9e90-ca7aa23b0425)");
unit.assert_eq16(16'h0EDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #396 a55cd385-116a-4af3-b031-15005f1cdc27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 60b6aacc-63e6-4dd3-b5f8-f46b0d1c1c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 eda94e28-346d-4af3-ab27-94ef45e12b52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 7faeefd5-8448-4b54-8d5d-458dea405917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 5cb2852c-3d43-4e88-a443-4525cdd3a745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 5f387f89-e901-4d42-9772-3f6eae23e131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 2212b713-38d4-48bc-8c88-77cc1db52198)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCA2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDFC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0264;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #397 2a6dd5ae-f12c-46f3-9d35-c614f039933e)");
unit.assert_eq16(16'hCA2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #397 edbbc8b9-3d08-48ed-9021-8d24954a4db6)");
unit.assert_eq16(16'hC5E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #397 2cd9d2ad-8297-43c3-b1af-ff898deb8ed8)");
unit.assert_eq16(16'hDFC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #397 e427c77b-14a2-4888-9fad-fb91991ed3d2)");
unit.assert_eq16(16'h0266, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #397 c8daadea-3008-45b7-8d3c-be2b14efc709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 b5456eb4-00a9-43cd-8a16-20b41cba31e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 4a6e80a6-24b3-4daa-acb8-1bc3484313d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 392cf61a-f8f2-4eb8-a214-19b030fde11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 b175ac51-111f-458b-bf70-f85033c6028b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 d2560492-b905-4b51-aba8-37220a7a9bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 05d29371-b57c-488c-bd8a-a1dae1406d41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2438;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD5EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #398 804d2e43-3c47-4f94-a9a2-2377a4dd1190)");
unit.assert_eq16(16'h2438, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #398 32ce342a-e22b-4826-9488-1d7439359552)");
unit.assert_eq16(16'hBA26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #398 fcb71871-3fa2-4f9d-a086-b36fd886b502)");
unit.assert_eq16(16'hFA72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #398 5042496c-596a-4387-99e8-512e23af7c6f)");
unit.assert_eq16(16'h08E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #398 9eb4bc9b-f68c-4f27-a064-83e27115fe22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 2c3c913a-369c-4476-9d83-fae989feb12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 d532cdea-d3fe-448f-8716-4c782ff9ed28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 95e40a80-f00b-4699-81b5-6fd1cd99b0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 87935c7f-c044-49ee-a379-42c736cb4614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 936d6df2-b9db-4a79-ad62-75c647982e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 9ae9b1fd-69b3-4ebc-954f-20243b2265b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3E81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7464;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #399 0392be09-39ec-4467-94d5-d2c51cedfa4f)");
unit.assert_eq16(16'h3E81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #399 7803c559-5726-431f-ab60-23c2ca5ea745)");
unit.assert_eq16(16'h5AC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #399 d6df7806-aa8e-46a9-8b5b-ba33ef10e69d)");
unit.assert_eq16(16'hC858, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #399 07970b53-d845-4598-ab29-2c492ca300d4)");
unit.assert_eq16(16'h0D67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #399 14ebe43b-fb2d-4c1e-bf58-6586e082092f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 61cc9845-4ca3-4dab-bc53-6056f90ee299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 c31832e7-aaac-4f94-932d-7737de62b906)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 ed6c07bf-e5f0-49ab-903e-1454e16a648a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 d2c7710d-5db7-4057-bc41-11663ef3d3f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 b664ca0f-2d3c-401a-a554-3aebf692f568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 fe8736af-375f-4d59-89b0-2ddccc62920a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC009;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5724;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0490;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #400 8f20f2f1-2b58-4e34-86dd-0b8c99c1909f)");
unit.assert_eq16(16'hC009, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #400 70468c6d-63dc-403c-8bd3-3f242c9e6d15)");
unit.assert_eq16(16'hB349, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #400 b18c1cbc-8f70-4a94-a756-0cb8be93974b)");
unit.assert_eq16(16'hBF95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #400 d5288840-7efe-467d-9474-17cc177cbc0c)");
unit.assert_eq16(16'h0492, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #400 7162ee45-5d40-410a-9c44-0017b80b7b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 ff4264ee-4972-455f-a51c-b4d10c7075ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 0f0cecc4-3c26-40d0-95ce-f410cf89e48f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 1d1c6e5d-c5f6-46dc-afe4-bc9a4a3e021c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 fdfdc576-ca10-4b0f-aa0b-da0b2c2fb8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 299049d2-c17b-489a-aa9b-80716c522685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 a4a51d0f-7025-407b-bdfc-8c39d53bfd17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9704;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2256;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #401 1b984206-a3ef-4ae0-91d3-fd780fa3a916)");
unit.assert_eq16(16'h9704, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #401 fc2e39a4-2877-486d-ae7b-3ae804081f7f)");
unit.assert_eq16(16'hC001, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #401 066922c4-2070-4454-990a-9a909050dda7)");
unit.assert_eq16(16'h0B84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #401 8981ec76-ad61-49ba-8a49-e7be0884c728)");
unit.assert_eq16(16'h0ECF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #401 8840ca47-63b9-4e87-97aa-babf0d24a1d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 8e339e8b-603a-4c6f-9a06-ddc4be5571e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 95b6bc06-90f3-47cf-91af-dde8ecd50c20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 2843c1e9-11f9-4ac7-a616-511e3711ca62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 ce45c87a-fd7e-4d74-ae2b-ba86d194bb90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 a094ceca-b4a1-4d49-87e3-19b1bc99437e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 a9580207-2b4f-4c73-a8f3-1656f3a4255c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #402 44e52d85-fa3f-40c6-a73b-0a0ddb27a2a3)");
unit.assert_eq16(16'h2B47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #402 9bef963e-ffba-401f-b063-feb1b3d2f287)");
unit.assert_eq16(16'h2F99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #402 fd6a4815-702c-4d5b-99a6-0f1d1373f256)");
unit.assert_eq16(16'h78EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #402 bc383b6f-2890-430c-a2ed-6f326674b8af)");
unit.assert_eq16(16'h05E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #402 0618c015-9b86-4394-bf55-9ecc78f54703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 0e7a4348-0f2d-46d2-b463-f97a5fa400f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 e4c05124-3798-435b-a1b5-e02b9006926c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 9704db0c-42d2-452d-a737-ca50d5b3abde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 0547293b-1b00-4ca1-9006-0769bb7c7b30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 43febd08-d587-4558-addc-fb6052292066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 fa747473-3650-430c-96a9-51ade8edce16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB5D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6FEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD0F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #403 d5488244-1b19-4f4e-9921-d7fea600b15d)");
unit.assert_eq16(16'hB5D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #403 29b37400-c132-4158-8c41-d26ce9451a13)");
unit.assert_eq16(16'hEA1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #403 d7f6018e-d1d6-4e11-96bf-857ba1493ed7)");
unit.assert_eq16(16'hD0F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #403 7f9ddd14-21bc-4f60-8dd5-57e05fada266)");
unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #403 3dcfb96b-f061-4fa6-b12e-2d0bbcaf5787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 f4a42f5e-571c-40d1-bba5-5488c903f267)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 4f64e39d-0172-40f0-ad38-03120b22aa66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 1e53df26-2a28-4401-af80-3ad5353293b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 858b9c8a-d8b7-4a87-908c-bcf03f498795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 0b0619d0-dd10-4975-ad62-c710c2b0e39b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 999dfdd6-aa6c-4c7a-a788-d98209a39960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h75D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h658C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA88E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #404 c2ef1c86-4628-49cd-bbd8-3dc8ea214cab)");
unit.assert_eq16(16'h75D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #404 f231ee98-df91-494d-8332-8dc85944ffba)");
unit.assert_eq16(16'h27A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #404 79ef5833-e116-460a-88a8-8330f008baa9)");
unit.assert_eq16(16'hA88E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #404 8eac8945-694f-45b2-983f-44a8e84d29dc)");
unit.assert_eq16(16'h00D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #404 dd04c369-7429-44e1-b18a-d6748548cab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 6d8fe38b-8716-44b8-8867-d528dca7dac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 32fc1382-f527-4cfe-b584-95b566aa7594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 5b47c4db-68e5-49dc-ba4b-2b64b822c340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 89086da5-3b22-47fc-bae5-270fca3137ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 b943eb4d-bd2d-43a9-94d1-bf0d3d674d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 3d5f0973-8474-43af-86fe-b2bceb7dfe9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h200A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9040;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #405 2703062c-294c-4768-9dae-bea4e0f70eba)");
unit.assert_eq16(16'h200A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #405 b06e13c6-bc95-4d2f-a015-59a461093eed)");
unit.assert_eq16(16'h232E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #405 c4f4c010-80b5-4562-b98e-6193d7b4517c)");
unit.assert_eq16(16'h9040, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #405 0e8a0e3c-3cc5-4eac-9c40-424e67081a6d)");
unit.assert_eq16(16'h0DC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #405 ea92f014-23fe-4b8a-a07b-7eb285c89c2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 77f43175-50e4-4499-a19f-5ae5daa0ecd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 0150a0da-0f23-4e86-af68-ebc2b9a725ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 f06edb43-ac58-4db6-8116-1d0539a45dd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 1b05df1b-947a-491d-b388-134b3f0120a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 84e7ea15-9b9e-47cc-9dce-378d19aff00a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 aea25ae2-842c-465e-aaa8-44ee671b6415)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h33E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9EB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0403;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #406 4e5f248f-f403-4c01-91eb-baaf81064745)");
unit.assert_eq16(16'h33E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #406 ad33b48c-6894-4105-b925-0c3439e37aa9)");
unit.assert_eq16(16'hDE5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #406 a36864f1-d297-45e0-a9eb-2b82767c0e2f)");
unit.assert_eq16(16'h0403, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #406 6f09f4cb-a86e-4614-b1aa-bf0d8d1d682b)");
unit.assert_eq16(16'h0F86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #406 4888b7b5-3c34-4e1f-bdfc-6ee18af1227f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 5bf07acf-69eb-4492-a955-64b2af2fb960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 cf5154f5-a709-43fd-affd-560d8089bf39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 4d878c96-2c14-4a3d-a6e0-9a1e191c1449)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 09808aa0-5d68-4d4f-94f7-d5c091c6c237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 e000dedf-2e23-4b80-9c73-f62c66ee675b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 5500678f-cdb7-4a98-a7f0-82bb0f92885e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6FBD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h303B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #407 ade68cbc-c397-457e-8516-1e7a8186d947)");
unit.assert_eq16(16'hD7BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #407 fce39797-300d-4205-965c-d2e8fdce4696)");
unit.assert_eq16(16'h9B84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #407 4b5cfc97-2967-4603-a2d1-8d241fcfe50a)");
unit.assert_eq16(16'h303B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #407 185a5a53-6ad4-4a0b-81bf-f24627228f59)");
unit.assert_eq16(16'h07C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #407 8cf04d70-eb53-4f35-a0ee-6f9b3c4568da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 2350bf8a-1274-41f4-8352-82ad20ee645f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 518bf62b-c75d-4d43-9848-6c5a73f6a638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 550e3dd4-4d9b-4d78-ac3c-d14f61a35c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 c5aaac92-1b08-4d9a-a0a8-3c3665bc27c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 c32275c7-909f-4484-be5a-230752a310b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 38aa90be-d867-4fc3-a738-2e1e5fbd0ff4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC230;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h90FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h43DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0576;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #408 02e5cbf1-89d5-4910-97f7-4e6131f35130)");
unit.assert_eq16(16'hC230, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #408 86ac911e-698b-4384-a2ad-d1082c64f7ed)");
unit.assert_eq16(16'hC6FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #408 04297d14-5fb7-4b52-81b6-bdf76dcad82d)");
unit.assert_eq16(16'h43DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #408 646be671-a657-4ce1-b978-5fe4a342088a)");
unit.assert_eq16(16'h0578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #408 478fee85-babf-455a-8da3-c2a6c31dc7a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 4a64e0e8-e299-4149-a36f-4952836557a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 3403b7df-c2da-40b6-858b-259b05fb2fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 abc0a7d6-0b97-4ffa-a42d-07bef3c300da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 d2ba055b-9e65-48fa-863b-524c0e781355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 e41cff1e-ad45-4951-af41-97e9292a32d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 381ea956-ac7a-4acd-b3bd-1646d9d99fc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9425;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6084;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0274;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #409 6df640c8-95cf-4eb5-905f-184a67967142)");
unit.assert_eq16(16'h9425, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #409 581ce544-193d-4fe4-8e71-bbe9eb9a34f6)");
unit.assert_eq16(16'h62A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #409 1ab6f298-5b91-4b28-9392-b19f83ee9877)");
unit.assert_eq16(16'h6084, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #409 52de5656-d21d-4d03-8ae2-85bf64e354fc)");
unit.assert_eq16(16'h0276, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #409 062e74ad-660f-4202-9881-5f21f226743b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 8ecba64b-d772-4045-8437-796d5ad6143e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 47a533f5-2e93-4771-9b7f-b3cee9e6f288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 250501b7-3742-49d0-89fb-dacd265ff809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 23981a20-217f-4c42-940a-e2bde75b0adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 51f5940f-0118-4180-b4cc-0d87e4852d33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 26e4307c-fb58-483b-986c-cf4f590edf6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h99DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3374;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE6C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #410 579c609b-f57e-4d90-9130-ee978247d5dc)");
unit.assert_eq16(16'h99DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #410 b8a8e175-dff4-4c6b-b6e9-5749774ca2af)");
unit.assert_eq16(16'h27DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #410 17e493e9-8f88-498f-aad3-2ed4dee4aa70)");
unit.assert_eq16(16'hE6C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #410 cdb6e065-e4a5-4c18-af84-ffd01c80bd11)");
unit.assert_eq16(16'h0C67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #410 0d9f290c-8d0d-40dc-a0f4-cb27a437c10f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 4e19a1f7-4c47-478a-9100-acf04eea1a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 0d9f9b8c-0890-4d68-a394-60946458e828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 dd27d813-a384-42a6-98cc-f4248c968d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 2ac38084-3a4a-41e5-bc9a-c9cf0da6bbc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 8d3db927-9cd6-4f5f-a0a2-2cac43ec2306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 44cbee5a-5f72-4cff-9a56-25cc1df7017f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h897B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3976;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #411 96262bbb-c3c8-4ddb-a183-5d9bb12ec346)");
unit.assert_eq16(16'h4C2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #411 0138f7b2-f6db-4709-b846-638a662d6c50)");
unit.assert_eq16(16'h85F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #411 ad02ef65-5843-4612-a381-4d5851e2deea)");
unit.assert_eq16(16'h3976, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #411 b5760d8c-bc9f-4897-8c8a-f349b19bc8ab)");
unit.assert_eq16(16'h05B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #411 6f445de7-bacb-4999-b685-18f75f1d6ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 ad540f5e-e16e-4168-9133-be49751fb5b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 d8afbbee-f7d6-4fe2-bb34-d62ad60aba91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 647d559b-b768-42f8-8b80-0ddb0f0bc6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 6cda9ddb-f484-4de9-82cf-7a785852630e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 7642bf60-ef47-4055-948a-3bf26a76ebda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 4526c9de-78e0-4806-ab9d-047af30b06ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8FB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0501;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #412 b91b44fb-ffd7-49b3-a931-f9ba0430aa21)");
unit.assert_eq16(16'hCD4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #412 f0c10ee7-074f-4fad-bc70-8efee2ba0f24)");
unit.assert_eq16(16'h3A4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #412 ae9f837c-285a-4eda-9c88-75e3d5ee9852)");
unit.assert_eq16(16'h8FB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #412 0d17c1b3-73a1-4f90-852e-ec7d21aa8b46)");
unit.assert_eq16(16'h0503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #412 175c9b39-416b-4e06-aa7a-429812a62d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 c66b390e-339d-4b67-97c7-075395bd0130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 5c3d9cae-b9d2-4c46-b55b-5a6c554ed0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 91495500-42b9-45d8-a19d-931631197f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 a22a59bc-5448-4222-891a-df69eccb3a86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 3bb7dd64-69ec-4500-bd36-d750d491bcb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 7f3efb1e-ae63-4e02-8af3-a4a8bdbb8b01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7798;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h142F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #413 45dd4a35-63a7-48f6-910e-098352606585)");
unit.assert_eq16(16'h7798, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #413 85c25fcf-12f9-4cce-bcd8-9375646e59c4)");
unit.assert_eq16(16'h8D88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #413 1cf86b8a-dd38-484a-82ea-aba01eb027c1)");
unit.assert_eq16(16'h8B98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #413 01f5a117-d626-4125-bb77-39e62ead8a91)");
unit.assert_eq16(16'h0A7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #413 84495ef5-3d3d-45e6-ad26-af4eedcc16ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 8a096201-fb20-49f4-bee9-4b657a3a8fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 cce3ed06-e349-41e9-89e9-1c9ef3052f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 83dedeba-1557-4175-8e11-fc21ecd1918c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 4b496e9c-967e-48e4-8fd1-3ee2768c1af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 847e6589-eed1-4ab3-b545-4351b4bf0352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 f570b6bd-79df-4373-9952-075f8c2f3e4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h01F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h575E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h169A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #414 1c1b5442-f67a-43fb-8b90-1a43c2db7ec7)");
unit.assert_eq16(16'h01F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #414 39cde87e-c0e3-4657-9a69-902f41fe3a98)");
unit.assert_eq16(16'h9126, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #414 10b5c66c-e96e-4c24-b7f8-8937f4dc5b5f)");
unit.assert_eq16(16'h169A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #414 5f6540f4-54c9-4acc-a7d7-d0a2d910a010)");
unit.assert_eq16(16'h00C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #414 d6c258fa-4a6d-4800-b494-7d35858eeb5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 da323eba-7662-4cef-9978-1630005107ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 9706eb2c-a266-4497-8ca3-102c7716670a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 3a44c449-e2bb-42aa-a9e6-7254bbcb574e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 923895d1-7749-4ec2-bb69-cb941336a9b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 4fc24168-62a1-41ee-9d4e-8bf6375b5b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 07c76013-bd49-4b89-be60-2ac8a8d51300)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1267;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #415 04bbe2a2-c7a8-4a2b-bc11-eb3d29e6703a)");
unit.assert_eq16(16'h1267, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #415 81e452a0-68d2-4e8f-af67-6be2dfd6c659)");
unit.assert_eq16(16'h0D51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #415 445ea5ba-77bc-48c5-84e2-e91b2a04c842)");
unit.assert_eq16(16'hF764, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #415 d7dd31c6-b358-49aa-8757-1734f7f5fab3)");
unit.assert_eq16(16'h0ED5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #415 d042930d-7742-4c1e-979a-ef03568f6cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 5968db35-c0e0-4fe2-bff5-7bc85237372f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 68fe1069-0098-458d-856b-a7c8c6249c3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 e8d3da75-bb71-4848-af06-b3c0d66fcd8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 0b440f17-80aa-4d15-aea3-da4cc1b34268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 cab552fb-97bf-4048-8c11-a13380cd79fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 bc6f17a2-25da-4fb2-a4a6-1b160e3ddee9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4EB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB687;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8875;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #416 43830583-a9a5-4340-ac3f-af9c9c6fba7e)");
unit.assert_eq16(16'h4EB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #416 079a858e-a734-408a-ab8f-eae2b65c8bf2)");
unit.assert_eq16(16'hD47D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #416 0201497f-3080-4364-a340-354b95eb69b8)");
unit.assert_eq16(16'h8875, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #416 e8b5b58a-4564-4799-987b-5e284dc0ddc8)");
unit.assert_eq16(16'h06FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #416 d90d7ca8-2191-478d-a62b-63b8d4e528e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 fae105d3-e4c5-4ba2-9a3b-cf6c706b4e34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 654008b0-ca1f-440f-80f2-46f5ebd92e81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 f48df508-f965-4964-b753-5a1d47daba2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 d24e6bc6-d5d0-40f7-bb46-a16b02cf56c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 59ffb7df-18cf-474e-b3df-1162005b09c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 8bc7e296-8f58-4d7f-9f94-9c515cb1c3ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5BD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h798E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #417 970342cd-0907-4f6e-a6ac-dfaa1c1e4e64)");
unit.assert_eq16(16'h5BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #417 595f426f-2640-4f3f-a5e1-8388d00639f9)");
unit.assert_eq16(16'h9946, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #417 3d864209-b551-4629-8d23-31a8e7a7a003)");
unit.assert_eq16(16'hBE81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #417 c0ecc775-0fea-403f-8a55-92e2b62595de)");
unit.assert_eq16(16'h0B0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #417 b42df750-02d8-4f08-80e8-5eb4ac55ae4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 a6b489e6-4e4c-4ae3-8fd6-af7e85ab22b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 b79172aa-56d1-4492-9820-f36d729f0292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 83e385b0-5414-429d-a2e7-95745ada88d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 9e079d7b-ab85-4701-ae99-f5d065521244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 77aafe6c-7ffb-4753-9882-0a44a62595de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 e1cc6c5e-6774-4cb5-9bf7-e7c77a330e98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h958E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h94ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE685;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #418 5849be09-9021-4511-b152-82f9cb908d32)");
unit.assert_eq16(16'h958E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #418 cb857634-a16d-45f5-a7b3-a389adf171f6)");
unit.assert_eq16(16'h5375, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #418 25f3b9fc-5aa0-42cb-a1d9-b67d00781362)");
unit.assert_eq16(16'hE685, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #418 9a80e8ac-6b89-4cd9-92e0-4d855d9668b7)");
unit.assert_eq16(16'h0BC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #418 6aefee40-e381-4c3d-81b3-2b4f7850bc12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 07c24596-b10f-4fbb-b432-31adae0d1166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 5ad9b16f-b1e4-4b63-b150-4d1ecc2d444a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 751c05ca-922b-48cc-b1ad-cd32bb916497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 5c7881a1-ece4-4f90-a39d-696391daa7f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 05673251-275c-4cf9-9a60-144832b3d85e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 359916b6-ea3a-4ce1-b485-0cb09c3a30d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8BAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB745;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #419 ce7827ed-9b7c-4c85-8d59-3eee32e9ca55)");
unit.assert_eq16(16'h8BAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #419 dc636212-0ff8-4250-adec-32a07345b756)");
unit.assert_eq16(16'hBE2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #419 88c384fb-1349-449d-9882-a465bdc55a81)");
unit.assert_eq16(16'hDA85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #419 f8804756-969c-41a1-ab6d-1fa5dea4eef3)");
unit.assert_eq16(16'h078E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #419 02af0ad5-e9f4-40a7-99e6-aed30f48987d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 f45ddf78-942c-4dce-8c0f-3877c46e4120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 d8cf665a-2664-43a4-9e48-016d37b03501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 07eae4c4-f620-49fa-846d-a586d6391f7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 40d9e2e3-b98c-4bf9-bfbe-b3ed4f748a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 08e99a51-b639-4ca2-9df4-0fff17080d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 a0fe273d-aacd-40b0-a14d-87c3b79f03b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB619;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #420 cc538270-5241-4387-a410-9cf6824b629f)");
unit.assert_eq16(16'hDF06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #420 27ed0b6d-54a1-4cca-be00-3fc183a84fc4)");
unit.assert_eq16(16'h82BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #420 6de5811b-435e-4a2d-b104-dc9a4024475d)");
unit.assert_eq16(16'hB619, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #420 21244141-4eba-4a75-b353-f14093fd12d1)");
unit.assert_eq16(16'h0C3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #420 a3de83dd-2f69-4ef5-a21a-180d5eb129cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 65455402-2b0e-4cd2-a84e-7d2174a6a7ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 d317a237-e146-4572-aba5-c67c2446817f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 7fcbbfaa-df8f-4f32-aa00-624784b935fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 b229d95c-0759-4964-a9b8-199bdd70e9d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 2175fbc4-814f-4e6d-acd9-a5b70980de05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 2445a561-bd43-4ffc-b376-a30c4244493f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6FB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8F71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0975;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #421 5e6bae83-245b-4538-8a5c-ca3e168105e2)");
unit.assert_eq16(16'h6FB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #421 c1ab28e3-4965-45e1-bd0f-90de96f4be07)");
unit.assert_eq16(16'h8C0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #421 71e3169a-2c21-4b18-af47-67513887db31)");
unit.assert_eq16(16'h8F71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #421 21df1099-0db2-4632-9aeb-c32019155d2d)");
unit.assert_eq16(16'h0977, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #421 dc1606cd-f4fa-4fd3-9ca5-8193735a162b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 96f117e6-31ef-4bc2-92aa-e99c84b6ff59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 da1e5de7-807b-4f81-a57b-b26e35986843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 aa92115f-83d6-4d64-a4b9-bff03d350b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 283c0d6d-ce3d-4778-820a-6cd8fc9734e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 49ae7dd5-4bd1-4ac4-a218-9042762cf16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 49788358-aebc-4651-9b9c-1980de4e66e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h14F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7817;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD0C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #422 7c19ca6f-8a99-45ea-b55a-7663577e3be0)");
unit.assert_eq16(16'h14F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #422 c0db55a7-1637-4b9e-b8b7-0b9549b31a93)");
unit.assert_eq16(16'hBE6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #422 2141ff26-4547-4123-a92b-acaaece04680)");
unit.assert_eq16(16'hD0C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #422 6f0b3537-53d7-4f99-a822-70d78144f0c1)");
unit.assert_eq16(16'h0B31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #422 b6d96af2-5517-40ca-bed5-de5023212f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 3ae48971-1b21-4d89-8358-53e8df3a9e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 20f6425f-9adb-44cc-896a-341cda75b66b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 656fd47c-8448-4732-bb00-6e7e766683fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 38cfdf50-b932-48b1-a358-39a7e8284d63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 855d913f-2c2c-40cf-bd3c-02a4e52f77dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 52b3bd35-3cf9-4f67-a113-f6fda3e8230e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #423 66205b5c-8f60-4371-81c8-da12c78f7e7c)");
unit.assert_eq16(16'hBCBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #423 0902e044-b408-4f39-8524-b76a1937552e)");
unit.assert_eq16(16'h68EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #423 7f3acda5-09e2-4cae-8741-a3d166cd5b08)");
unit.assert_eq16(16'h08E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #423 e73d6cbf-0cdf-4bb7-b51b-bb2b606d6640)");
unit.assert_eq16(16'h0AC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #423 4bdf44e6-4581-4486-bb33-f79f498d6431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 cad19707-410c-431f-931b-24f24dd62c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 591472c5-47ef-4d64-901a-8832f8b793fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 b8a7722e-d7d8-4bbd-8f6c-2c12473d0486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 dba22e64-c63d-4695-aad1-b59639855e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 c031ae6a-7b78-44af-a9fe-b27fdafe303a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 8f5bae5e-dd6b-413b-af75-18a82ac831cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC07D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h254C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #424 af20cbdb-eb68-4c91-b547-1531ec30c9a1)");
unit.assert_eq16(16'hFC66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #424 b588cb04-717a-4200-943d-c3dbfae021ae)");
unit.assert_eq16(16'h29F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #424 bbcb3de3-c5aa-48ef-8290-5fd3f1b51553)");
unit.assert_eq16(16'h254C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #424 faaa58ef-318d-491e-9f07-b3b387b158f7)");
unit.assert_eq16(16'h0540, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #424 73d9759f-c01e-4850-bfc9-af0a51be8e28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 132c0741-3286-4acc-91e8-305b7066192f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 95c6584d-55e2-4cdb-9b56-1a633c0fb19d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 282804ef-64bd-4aab-99b1-53eb30251ccb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 bfbdafc6-69cb-4cee-a62e-9247b7895f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 a0a3f874-b473-436a-9cee-3277e87e18b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 a7837aa8-bc8d-443e-8c0a-8490d779da12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h46EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7EB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #425 a18c730a-a688-4ee8-8d62-004efa6a2921)");
unit.assert_eq16(16'hBC78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #425 1ac16b8f-c0e4-40fd-b15d-352bc09b529c)");
unit.assert_eq16(16'hC25D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #425 ee7174e2-9bee-449b-b261-f5277a73ba16)");
unit.assert_eq16(16'h7EB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #425 dcc040df-b9b4-41ee-adfb-89c4313ab8e7)");
unit.assert_eq16(16'h0A92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #425 2fd9256f-1967-42ce-95e6-e3fd60ab5ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 baac6dfb-e66f-44e4-92c2-fe798446d895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 13bed984-5aa8-4ea8-8615-783abc443cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 ba2ea477-3887-477f-b044-3c94ea4f8133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 4b2184df-d53d-4490-a88c-d56076c0879d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 1bf42c45-6c43-45bd-b7a1-873465349c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 219c10ac-a0a7-4d4f-b50e-3d85349baa37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC2EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB634;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #426 ded11e61-964e-4c02-9386-a783a7a53a73)");
unit.assert_eq16(16'hC2EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #426 82fd2d9f-0a78-48c7-9617-d5378690bdce)");
unit.assert_eq16(16'h5CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #426 600be7d5-9a76-489d-a44e-ed85c6f93e51)");
unit.assert_eq16(16'h0F2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #426 82140639-9f19-4540-b987-ede4d6e771ab)");
unit.assert_eq16(16'h099C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #426 a6d0b278-e142-4250-9352-b4a331e31025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 47e2aa05-7683-43e2-a06a-1bc26738d8eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 006e8949-2dd2-4ff6-a87f-e0d92ff53961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 19a51843-1d33-43f5-ad6c-f784bd658175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 f2df52f7-740c-48af-869d-9f8cc24b90d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 9b507a2e-9d0f-422f-8508-7343fc5325ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 6c05b26d-6d1c-46e3-b311-890b6eb8583b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9452;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7021;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0179;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #427 fc7cb9eb-eba6-4e47-a1b5-567d34e10535)");
unit.assert_eq16(16'h9452, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #427 024ce9d7-ca99-49af-bd55-4b4413ad7187)");
unit.assert_eq16(16'h6081, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #427 d789abac-46db-4e67-835e-31ce14671ea0)");
unit.assert_eq16(16'hD3E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #427 e5ba9bef-b0f8-4a12-ae2d-083136cc6f16)");
unit.assert_eq16(16'h017B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #427 a9a88031-5c64-4a20-ae87-fdc61a6c7472)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 ed387b43-d331-41f3-b0ab-8aab867e2918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 56baeb71-42d4-49c8-be16-791396e79f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 d51c607e-a626-489e-bf38-7bca3c20acca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 65557c76-1940-4b60-9be2-806aeafd89f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 105b5ef8-d288-46c0-abd4-7474b25bd0fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 0d9d2c59-2745-461f-af75-3e647589f374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD84B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h740C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h046F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #428 de5d57c5-25e8-4ac6-a1a5-a6de9b14fb7d)");
unit.assert_eq16(16'hD84B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #428 9b650428-5662-4330-884b-8aa942dfcf63)");
unit.assert_eq16(16'h89E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #428 ff6fca30-cff8-4b46-85fd-06d79137ccdd)");
unit.assert_eq16(16'h046F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #428 c89c5d85-19cb-4c2b-8070-4a22dd4ec250)");
unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #428 51dd0296-d5b2-4e97-b7f9-d8ceacc22e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 6a935cf0-2dde-4ee3-9626-ba3e24b976a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 7923a0a3-ee58-4a89-890b-6651f5d00c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 7740f991-329a-424d-99f6-6dcc2a8d804f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 6b353ad8-4877-4ae9-8ac5-6e092ae227b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 c41949b7-98c7-4993-8439-aa315eed4237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 41a33f98-166b-4c56-8002-35128ad75b90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE109;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h31F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #429 3e8754bc-a80f-467d-8a5f-c111016042d3)");
unit.assert_eq16(16'hE109, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #429 46e5eb17-388d-4a85-9c29-00b287f5a2e7)");
unit.assert_eq16(16'h9B2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #429 21c6f506-94ad-46f1-ab4a-35d8040a9b5a)");
unit.assert_eq16(16'h31F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #429 d17fcf3a-37fe-4ba7-9fc7-13ea6b7abcfd)");
unit.assert_eq16(16'h00EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #429 d35c0d9a-e506-4651-bf88-bc4f563bee9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 d7287cec-4e12-4899-a5bc-f426568fe7dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 27c7c49e-536f-4303-bcc8-968254af64d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 0bc7ab17-32a6-4d7c-8be1-15236d6d0cd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 9ee8823f-a1dc-441f-a10d-d360f417ecb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 45decb94-a039-4580-8a09-f579d0240609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 09ea12ef-372d-414b-932d-8f97466d5c61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h711B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBF97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFBDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #430 73cfc6a7-1463-49f6-86b8-07f3133f3206)");
unit.assert_eq16(16'h711B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #430 b474d798-8a1b-46a6-83ca-dfc88bdd8012)");
unit.assert_eq16(16'h309A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #430 0a6fd04c-ec1d-402e-b495-1a7b5adaeabb)");
unit.assert_eq16(16'hFBDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #430 7ca25dbc-d3c9-44f5-9646-ca090ddfec56)");
unit.assert_eq16(16'h0A5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #430 535d7d4e-a197-427a-bdce-ade69574a1f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 c13333d0-7ad4-47a6-90f9-533dd4df9363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 7af1898b-ab9a-4bba-9d42-4bd680bc958c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 60242605-f282-4105-b504-f50830444e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 13a9e378-0869-4e48-8722-cd3ad786167b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 f791967f-ea98-4892-99c9-d841abff0d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 f5b75e21-d060-4691-9253-00a5ea8b9b58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEF95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #431 8290ec7a-0af1-4617-8f8e-611425b59ef6)");
unit.assert_eq16(16'hAD85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #431 4f46f3f0-f3d2-4aab-b1b6-90f7946c7dc5)");
unit.assert_eq16(16'h01FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #431 4b00d1ef-2986-414b-88be-4db224768601)");
unit.assert_eq16(16'hEF95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #431 1b938b3b-73e4-4539-8bca-0abc06d294c1)");
unit.assert_eq16(16'h06F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #431 9ae48a71-a881-42a9-820b-41f4c9179f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 e747e60e-aa7a-4bb6-8f26-ba9bf156c945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 8b2359b5-d85c-4219-add8-4e935cf838ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 b4e1f3e5-bb4a-4ef9-9f7b-4bff607ecaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 d93e540d-9f5b-4e7b-aeb5-e9fe2209760c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 d79cf3b3-3fc0-41ab-a5eb-df3fe9b184ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 06197763-50c7-40eb-a93d-a451e1c84408)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF7B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8DE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #432 3133f5c1-cab5-465a-bba8-9d8a9fb3e202)");
unit.assert_eq16(16'hDA91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #432 58d1b43a-8a9a-4e0a-a990-199e7c4c0c8b)");
unit.assert_eq16(16'hC8C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #432 83d33943-b990-40e2-baae-380d7e8ce53b)");
unit.assert_eq16(16'h8DE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #432 547de283-5325-4577-af28-802b97e0ea98)");
unit.assert_eq16(16'h07B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #432 d6430b71-8698-4e79-8896-3b5b5c64991d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 5b4364fa-6c5e-4dce-b1dd-36474a9d31e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 b4df8419-0059-40f6-9ff9-5f0ac5897e90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 18b0ed81-ca27-4220-a85e-6e9a8d2c9af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 f67e675c-3367-4096-b2a2-91bc218c39ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 6101f8c6-5d7a-4e3e-81eb-6dca443cc52c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 747a9f8d-1824-4b8a-a8a6-c743dcc9f4c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2FA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF6D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h019B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #433 0cccfba2-b4b0-4224-b1e7-69c9b406ce25)");
unit.assert_eq16(16'h2FA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #433 d8388556-c2c1-456c-b73b-79ac3bdcad91)");
unit.assert_eq16(16'hD53F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #433 0da91b85-abbf-4d0f-92fc-fcac0ef47eec)");
unit.assert_eq16(16'hF6D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #433 2a6ea73f-9399-492e-8ef1-ea64ee21409b)");
unit.assert_eq16(16'h019D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #433 2f5b0755-5f5f-4073-a75d-3b3e953bb1a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 a7271a6e-213e-430d-add6-ba0898a78421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 2b0e87b7-f231-4aa7-a3a8-bfedf81dcbf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 d21a2bb8-95b0-4ff9-a55b-f67e51742562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 86408d10-54df-4de0-b121-d315c5c09ffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 27fa7d5c-6475-432b-82a5-60af1dd5c747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 48351d57-8860-4c89-b5fd-734821efc847)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8014;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF718;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF463;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #434 d5b829d6-a026-493d-ba17-bb5536e5de2b)");
unit.assert_eq16(16'h8014, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #434 bdeb965b-a6dc-42d8-9060-042ab773040a)");
unit.assert_eq16(16'hECA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #434 388a218e-dd1e-4f80-b0d4-1b352fb12d6b)");
unit.assert_eq16(16'hF463, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #434 f4b3d21e-831d-4c6f-af33-2f706e904ba8)");
unit.assert_eq16(16'h01D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #434 5599804c-9677-4cee-a51b-d262c2e3d886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 e31a0a4e-febe-4cae-810e-522500a97cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 d747f5f8-90f1-4c00-9579-a84e05459ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 14079ee0-a818-4617-820f-a9ca46deb21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 0dc0ddf8-eba4-4824-a379-9f90c98f0213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 316250be-0dc0-4e6a-9c5d-3d0b8af9d4b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 572672f3-bd8a-4d10-9bef-d77c978543a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h233D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7AEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0781;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #435 90645f5a-b653-46b5-b56d-a99828a22f14)");
unit.assert_eq16(16'h233D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #435 b19c0466-cc3e-481b-a664-b34516a17a60)");
unit.assert_eq16(16'h6089, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #435 b64a1003-10ae-460c-a015-6ffd0c9f4ed8)");
unit.assert_eq16(16'hD9CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #435 45ed8b6f-b60a-4579-b874-a60f121cec9e)");
unit.assert_eq16(16'h0783, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #435 fc523503-9e75-4e58-9025-c1c7b705b01f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 457863bd-f6d7-4895-b76b-d0c039f95351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 90e4b7f0-1395-49b0-8b01-3345c40e8308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 73efe503-6017-4791-94b0-ffd55a4e400f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 0650d240-0dfc-4cd5-92e1-808d770d78e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 2878ebe1-ee8f-44b4-b822-abff913d0a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 314ee4b5-6d04-4fb8-8060-69da8c4935f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h786C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4124;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h92BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #436 25196eb2-8364-419d-87b4-79a412816aa1)");
unit.assert_eq16(16'h786C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #436 f8de8c52-6bc3-46a6-b8e4-bba25c39b0fd)");
unit.assert_eq16(16'h633A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #436 49233ee7-3340-4bee-b1b8-72810040dfa6)");
unit.assert_eq16(16'h92BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #436 798e1e84-1459-459e-99e6-75d03c413a4b)");
unit.assert_eq16(16'h0FAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #436 04868c79-b1a5-46b2-b577-1eac4c9e5553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 d1158d66-e274-4f84-8c1e-6a2474392b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 bcbb8dc5-128f-4561-b77d-8cb32bd61780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 39183c35-8a93-4cc9-b873-f864195f0c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 c6c328ee-e3e7-42c8-a9f4-713e2da8b3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 bb8ed1d6-92e0-47a4-96d0-6b7febfa7efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 7323b1cb-902b-4aef-9a41-c110af45a412)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h840B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE71C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0812;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #437 289d45ad-5463-4772-b8a0-a7dd89b1d25b)");
unit.assert_eq16(16'h840B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #437 054137b7-a1df-41e4-8b8e-3d7e7a92b5e5)");
unit.assert_eq16(16'h2436, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #437 a0663ef1-ffbd-4dde-b6fe-58be25cbc596)");
unit.assert_eq16(16'h56D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #437 f7ebf92b-1707-4a42-93a0-0a1273a18b43)");
unit.assert_eq16(16'h0814, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #437 9dc80582-faf2-4d75-9476-0219dd7a30e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 7a842dce-b4c4-46ec-828e-6a068d853afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 84baa9e5-e5ee-4539-98fd-f9f08bf87de1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 2d57a650-8b03-441c-80f1-9b6574634e6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 7e75a40d-782b-4d29-ad0f-03ec4089f0f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 01d4369b-ef96-43c0-97a8-89db210c66b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 2b3977d5-9e51-4106-96e0-c62b98ce944b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h347B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC9C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0859;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #438 5a3c7f67-4e88-4449-bc03-fad3abf8d8f2)");
unit.assert_eq16(16'h347B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #438 44672853-1110-4977-a98f-dab682c368e1)");
unit.assert_eq16(16'h9D9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #438 82cfb8a0-fb0a-4f00-b210-fa26d03ed0d6)");
unit.assert_eq16(16'hC9C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #438 b08c5af4-5ca4-4b2c-9960-f813a69a3e69)");
unit.assert_eq16(16'h085B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #438 e4dbdfe6-ec12-4c85-9451-bb5adf2fe3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 ca41e2b4-bb37-4654-a5a7-108813f465c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 43162833-04a0-4a7f-b7da-ea6bc0d9a896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 64da9f7f-8f49-408d-a3bd-d508c05ef73b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 366de4bb-ca13-42d9-993a-9cf6dda65541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 7484142d-6d68-4964-9165-0dff76cebd94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 a2a4f751-44b2-4150-aefa-d60787fccf74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h290F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4B2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #439 4947f6a4-e4ab-41aa-9f6d-b5986d0e42ba)");
unit.assert_eq16(16'h5D04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #439 b2284757-f4d6-497e-917e-6242a7b4fdb6)");
unit.assert_eq16(16'hC1B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #439 7f2bd710-3ffe-4233-a7e8-4b9ecfd683db)");
unit.assert_eq16(16'h4B2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #439 5b6c3ab2-9dfc-45bf-84a5-85c2aef90d63)");
unit.assert_eq16(16'h00A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #439 75f4d78e-84fd-4fbc-857e-5a123a6960e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 5560da22-1b09-4192-80a8-8ba906fe7235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 785a2020-a3a0-4a12-b41e-8d0dbee4ddc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 e28de221-ac25-40f8-a73c-61a0c468b0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 712d15ab-9116-44af-828e-f1977de497ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 6cfa5254-69e7-4804-92c2-bb24122c7bd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 fbc0e14f-2548-4af3-aa4b-4ee24b43ebea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA66D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #440 3b127800-7afb-422e-a042-3c1008457633)");
unit.assert_eq16(16'h0C2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #440 cc0cf87a-dc72-4c1c-af48-ed02127119e3)");
unit.assert_eq16(16'h09B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #440 bfbf99e3-936a-4a48-b2b9-e167806c58d6)");
unit.assert_eq16(16'h97D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #440 8d550acf-e519-4693-8205-3761981c65d2)");
unit.assert_eq16(16'h0D21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #440 79062288-01ec-45a8-a6d0-1f5ab652d9c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 7655ec48-d9cc-4f14-bf4a-da8b3cd77cb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 d4773880-1930-46bd-9464-5d6b5f50faab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 6d65d7e3-0638-4d7c-827b-ca0012be55a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 d5862a7a-d721-45fe-bd60-13dfca9f5185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 372a6155-ef69-4aff-84e6-660d94c0021e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 e6bb36d3-1486-45e1-a7a0-88390388ba47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE5E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h149F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0116;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #441 cd850a48-f32c-41b6-9dbf-ce7251fa502d)");
unit.assert_eq16(16'hE9E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #441 a6bb3e18-66a8-4fa8-95c4-b4458b0399be)");
unit.assert_eq16(16'h37DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #441 b302462c-ed4c-4b7f-ac2f-1f5de113c062)");
unit.assert_eq16(16'h149F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #441 80465776-0d1f-4310-8bcb-a54c197ff232)");
unit.assert_eq16(16'h0118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #441 32c78e5d-d47c-462b-9039-9c6f1eb49b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 6426e497-0a69-43e7-a25d-e2793f11a7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 7278a338-bacf-47b1-932f-108da84b385c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 663337aa-1737-4f75-87fb-f2a438dd1252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 cc5d38b2-deb1-4ab2-9257-c8c8ff8e762c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 2e554be3-5853-4bc6-8e8c-9f1b7272e8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 ef5bb1a4-2fcf-41a5-a419-0fb6bd222dc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF331;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE24C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0739;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #442 0976d49c-c4d2-4971-827e-f1faabe22fc0)");
unit.assert_eq16(16'hF331, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #442 e76e0f24-08da-4188-8fc9-02dddbc01d82)");
unit.assert_eq16(16'h79ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #442 0a45eed5-74f5-4735-a7e3-3a58b7ec0434)");
unit.assert_eq16(16'hBD11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #442 9241b08e-fd89-4d1c-a142-01a853bff0d5)");
unit.assert_eq16(16'h073B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #442 36cf8372-08bd-4d0e-b9ac-454c239f6fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 82609cdd-eefd-43cf-9f0d-e497ea765a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 d4eb4eae-3553-49ae-9e3a-9214dd34ea9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 4205e3c8-0341-4efc-97f6-77a415193500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 36098494-a084-40d4-81b0-3ea76424e42b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 e86c2318-b2f1-4538-b254-040fe3a12ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 4ede7a88-9e1b-4ad9-b66e-81d2c62050c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8D1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB2A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #443 d15188d5-bf9e-4511-9792-6f73945c74cc)");
unit.assert_eq16(16'h8D1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #443 21a0184f-6f1a-4776-99f6-9cc6f0c25f06)");
unit.assert_eq16(16'h1072, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #443 8a7b1f9a-01e2-44dc-af87-bd04ffa28697)");
unit.assert_eq16(16'h30DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #443 9b03f7dc-65cf-4ae7-9105-a1de3d4d24b7)");
unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #443 d2c2d187-547d-47d2-b6a6-67a8449833d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 a4ee8be8-fd64-4ad0-9954-62e18422e57c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 7e8a897b-5bbc-4558-8031-ca16a033055d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 0b46b4d2-1a52-4cb3-8d6b-fe689752e4c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 11982baf-84d1-42dc-982a-f429c4888e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 d8108af6-da49-4f3d-9c64-0815df7929ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 c55f0014-f211-49f1-8338-b70005e3c977)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9D67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5408;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #444 19db343c-f405-4301-b136-59557465cfdc)");
unit.assert_eq16(16'h9D67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #444 60c7023f-ed54-4f80-8c7e-365acc95ba72)");
unit.assert_eq16(16'hFF49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #444 13b91857-1135-4213-b73e-80db9e617309)");
unit.assert_eq16(16'h4D96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #444 6edc31c5-20ef-4c15-8e28-4957b831ad55)");
unit.assert_eq16(16'h0A75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #444 9de92bf2-61b0-4608-a89f-7c6ca95ab9a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 b00c29d1-25f6-42f6-8c9d-184ac0643b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 7b8ff2c9-b59f-4581-b4ea-c68d91277da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 dd38a45d-603f-4498-9892-6028c2c8927f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 ca3efda9-285f-4a9e-ab2b-bad94580f9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 e60a946d-aff5-4b68-a77c-494361e0a42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 2b37132a-84e3-4590-acdd-9e42eed7ae43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h00A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3BED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #445 ae85fe13-8372-4810-9fbd-4e9ebf8ec284)");
unit.assert_eq16(16'h00A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #445 65036744-9fe0-4bd9-9176-85500efd4ac5)");
unit.assert_eq16(16'h43F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #445 8ff1752b-69b4-4682-9193-22a0bb114add)");
unit.assert_eq16(16'h3BED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #445 f0589793-b052-4f7b-8ffb-de4d96ce20e7)");
unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #445 5f07403c-2918-4a76-8c94-40fdb64cbf4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 595a5c6f-7d4b-4151-be6d-03f612bd37a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 34d57794-c991-44e0-bc7d-ce2950997aea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 f06a3cf2-ec1a-4ffd-9c73-32ab9ff53dbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 0519a1e2-def0-482d-98b0-6fd0b634c504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 10fa9b90-438a-432c-bff0-d74cb6d0d42c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 93851485-7c2a-476e-8b78-2e3d97a6c0e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h996D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE824;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #446 a4760e3f-5902-4c84-b4d2-a60e78fd30a5)");
unit.assert_eq16(16'hDF4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #446 0d4c9a03-7398-4968-8a47-6897d54ace89)");
unit.assert_eq16(16'h193D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #446 44fd7bbd-b2d8-4b28-bf4d-82097f2a7747)");
unit.assert_eq16(16'hE824, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #446 df2eb7b6-79c8-4f75-805b-2050b62b29b2)");
unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #446 12502aa2-f73a-4c32-b299-16446509d05c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 4ed7bf48-0e12-42ec-be66-f3917b0365e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 86a38f62-5065-42ce-8840-fa9bd1d6a710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 78fa291a-b85c-41e2-a322-431fea15ed81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 31d963f0-ca81-4edd-af40-a04cd84d5e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 74285d64-00e9-4305-be0b-369728d48b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 56760b4b-d47e-472f-8d71-c4d31d09e7a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C7D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0515;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h003D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #447 1bc1cb3b-6d84-41d1-8129-44c69af2c556)");
unit.assert_eq16(16'h5B27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #447 631fbe97-f518-4d7b-a854-f4bd5db2d806)");
unit.assert_eq16(16'hCEE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #447 6bad2891-29fa-4351-a9d2-6d47ff3141db)");
unit.assert_eq16(16'h0515, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #447 8a5e4707-bf33-4420-b0f2-d748a5704879)");
unit.assert_eq16(16'h003F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #447 a4d3792d-640b-44b8-9754-c74318c0fe54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 ba2608b0-a95b-48d4-86f9-fed7ef868e5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 27f38e51-7716-4065-a7c6-e57c784e2b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 5de84fdb-f389-45ea-9173-5d040bf74625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 2a4dee99-e7a7-40ce-a6e3-7e35d2b7ce84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 b972a54e-d2e6-4d4a-a0e8-29eaa69f5ee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 5547305c-4814-4813-b6e6-78b7d18210c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEA95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA26D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #448 0f490fbd-c11f-44d0-9e67-ce9a74790240)");
unit.assert_eq16(16'hEA95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #448 82af9322-f2b6-491f-bfaa-457ff09dae52)");
unit.assert_eq16(16'hACCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #448 944206fb-4be7-4e2c-9566-02adb28ad0f5)");
unit.assert_eq16(16'hA26D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #448 a591bbf6-32ca-47e6-8d19-bbcbf31b87a0)");
unit.assert_eq16(16'h0613, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #448 4ddb6cee-598a-4599-9950-b715c3dccfc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 c0cd7fd3-86e0-4cf6-aff1-029a3d987995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 f2803ab0-bb68-4103-887d-7be2fe620f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 1cb72feb-2889-4e96-9e1b-94de4b81e074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 7a803a37-66f6-4969-bda3-d7a2c614e8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 9210bd80-7faa-4b81-9bf6-698575e36745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 2d03849b-8d87-4376-ad94-4bdb0c4e09f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB305;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h20A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #449 c3c66f74-77ea-4df3-888a-4641f4630833)");
unit.assert_eq16(16'hC0B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #449 1c9ae949-d61c-41d5-a105-b15a8a2790ee)");
unit.assert_eq16(16'h39DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #449 ec01f80b-9148-4dff-accf-9990a9aa18c8)");
unit.assert_eq16(16'h20A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #449 194cc671-46f0-48c1-94d6-1941a88ce6b5)");
unit.assert_eq16(16'h0E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #449 a7b170eb-7d19-48cb-9c26-764b22ac673e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 7c84a725-d821-42c1-92d3-da36a52e1f49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 27e613c8-5dbd-43a5-8bf9-57dbdda64d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 e09d0acc-1bf4-4834-afd5-f3387b246be5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 fe1a51c2-35c4-40b3-82f9-23fd595238f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 0bc1bfe2-7353-4dd7-b811-6ca3bfd8126d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 024f078d-c942-47d0-91b9-3a2699e94245)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h46F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h447E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0580;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #450 6487ebb8-e1c1-49bf-a50a-174836276db8)");
unit.assert_eq16(16'hBC16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #450 0f9eb1e5-7bbe-444f-a925-91ecaf9a8f3b)");
unit.assert_eq16(16'h7BBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #450 31b82bc7-dbfe-4fdb-8c79-cdef49d41f4f)");
unit.assert_eq16(16'h447E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #450 0fd74e9d-9bcd-47cd-8c14-ca0d903caa6f)");
unit.assert_eq16(16'h0582, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #450 271c91f2-4f8d-47ac-82c4-47db8348b4c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 d6f5bacb-8265-4d4e-8fe9-cc3421633ea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 6c3ffb12-1a62-4c47-92f2-9d216c8a878b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 5fbed8dd-e09b-40d8-b989-e133c0b11580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 82333cea-946d-4ea6-8acf-0e408bb2d21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 f88e53bc-38d3-4f49-9d77-4bab4d084554)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 88f7bef3-4173-4788-85d6-51a3b1a3330b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB38C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0649;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA391;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h084D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #451 8d6395c5-2b91-41f5-a504-3ddec20730bd)");
unit.assert_eq16(16'hB38C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #451 d7fbd58e-3c40-4a12-ad67-344da25ed7e7)");
unit.assert_eq16(16'hBA0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #451 3117b1a3-50e4-401e-bb30-f37709ad194b)");
unit.assert_eq16(16'hA391, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #451 c0a002ac-889b-4f39-ae17-3296c8a825df)");
unit.assert_eq16(16'h084F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #451 9fd3b7e0-49be-428c-baf2-4887aad2518e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 ce21ec20-b17d-4dcc-b795-8feb13885fae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 d726df3f-aeb5-425a-af56-d73be5c9a3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 f9dbd1cf-79ce-4a35-baf1-d2284ccd71a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 627cf6c9-6a14-4f8a-b0fa-c759c5a45358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 3eb5006e-390b-4d80-93fe-2d7a4d9bda5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 1304d23d-cd02-44a9-bad7-d05b7901f227)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4FBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h161A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD630;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #452 f0f8e93b-a43f-4014-83eb-65676ca9de06)");
unit.assert_eq16(16'h4FBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #452 312d5c56-eb47-4815-a2c4-cd2ac2a1fb17)");
unit.assert_eq16(16'hBD8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #452 9a94b655-478f-4047-a706-4e43821e5e7f)");
unit.assert_eq16(16'hD630, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #452 08f9ccbe-35b1-4370-8c21-76434b0df359)");
unit.assert_eq16(16'h0F75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #452 2bf2e6ca-ec46-4063-a797-a961e2fd493e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 91d7aedf-2912-4447-8841-8b8e15c9485c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 f30ee7fb-4b56-47fe-9cb1-fdad8c179ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 516a693d-83d1-4467-8497-cbb3e9672f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 4233daa4-1a99-4e32-9ca3-8d89dc6aa053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 86d54423-7b43-47bc-8e75-b438cb6cca0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 03fe7033-9d9a-428c-ba43-4c27785d18a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1569;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h779D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5A34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #453 58684663-eca7-4c76-9544-0a232cb557b4)");
unit.assert_eq16(16'h1569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #453 75be067d-bba3-4b1c-a048-3fe29026b093)");
unit.assert_eq16(16'h2AC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #453 fce26763-843d-4438-9523-1d77c74cf4a9)");
unit.assert_eq16(16'h5A34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #453 1fbf0b98-f87d-43b4-8f56-629990a60ddf)");
unit.assert_eq16(16'h0240, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #453 a2cc9bab-4985-4a01-86d2-49d47cd3110e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 c1c5c798-d994-4351-84d2-d613f01b9cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 ea2d2451-d1de-4a69-8620-69a3f0f8200f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 9954fe38-b009-43a8-9263-f1b304694244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 ecd3ea73-da17-4c35-a8b5-f8c6d3197b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 6c1f3b4f-4977-4d17-9293-d2c9f6c23ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 be80adf9-8602-454e-9b71-83a1ecdd889e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0B5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9ADC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h087B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #454 cda1ea51-e201-400a-8980-c8712b35ce7a)");
unit.assert_eq16(16'h2BF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #454 3ffe55f4-26ed-45dc-b298-5176f1c1cde6)");
unit.assert_eq16(16'h9F2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #454 abfb6f3b-9aa0-463b-b1d2-74f591f0d2e6)");
unit.assert_eq16(16'h9ADC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #454 cae0a011-b1d5-4660-ae94-f31455b53b8b)");
unit.assert_eq16(16'h087D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #454 475b5ac4-7c5c-403e-a30a-9aec27fb4e4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 45ea1652-5073-4049-815d-b30490ba3d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 851af9a5-70eb-4d1b-a52f-8918dce920fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 993012cc-b8e2-4573-8a2e-5a05a0eff30a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 d8c45781-8178-48b8-9e15-42f8ebdee75a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 97b60e1d-f379-4cd0-ac3f-f22873cc51c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 a51fa2c8-10e9-4dbc-ad5f-c062425221db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD3E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3098;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA21F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #455 fdbb8ca1-7ac8-4c52-bc32-742ef2dd180b)");
unit.assert_eq16(16'hD3E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #455 a7e6c9bc-a9c5-49f8-8118-3e2e1c2f83fe)");
unit.assert_eq16(16'hFD39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #455 a74f2f7b-8980-4be6-aca4-56e17c9e6a30)");
unit.assert_eq16(16'hA21F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #455 4d853a64-6aa7-4d18-b7fc-d7f2fde0027b)");
unit.assert_eq16(16'h0E16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #455 e300ad95-d97f-43db-8e96-fb850228d4d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 e74122a4-41d6-46d4-a0dd-0936a01335c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 3a583fca-e6ba-4eeb-9092-2bf0fa5d209f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 d78fc870-8892-4a0e-9dd6-6a75b7748eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 cfe14145-fbbb-43aa-8449-2cb114e8af59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 31c9b26a-714d-4d41-933e-5ca905fc5fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 d1972e6b-ea99-4a8a-9f43-d628432434d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h54FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0308;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #456 f8766bd4-75c4-47e0-891d-4096ebe0bfaa)");
unit.assert_eq16(16'h57D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #456 fb9a3d2a-f9cf-4dde-8593-62b3aa4baf02)");
unit.assert_eq16(16'h7A03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #456 fdf31247-f2b8-4811-bce9-8e4cbfe9a4f2)");
unit.assert_eq16(16'h2C6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #456 72f10d28-ecfa-46ab-8751-68a8c657a4b2)");
unit.assert_eq16(16'h030A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #456 0da75683-1479-4c72-9fc9-4fa52c67b90b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 6fecedfd-a308-4f24-aa73-238f98c75d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 ed88fd8d-0984-48b6-b502-2a4f3f5f1919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 cae6d0aa-d8df-42b8-a3c1-6412b11811bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 71c7679f-0a85-4c85-9f5b-3ac5ed6c50ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 55022117-3cf2-4100-abe8-f20093573b05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 9f179186-32c8-4e3c-970a-61fb881d71a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h174A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h35A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #457 a63277d5-8702-4eca-a2ea-5f63481ded4c)");
unit.assert_eq16(16'h174A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #457 2cfdd058-2b5f-474a-bcbf-2f1820fa3c0d)");
unit.assert_eq16(16'h949F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #457 940990e6-0240-4fd5-9c1c-202dda89afb3)");
unit.assert_eq16(16'h35A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #457 d68bfa72-2c0e-433f-9635-18af99940998)");
unit.assert_eq16(16'h0D16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #457 8b0df070-3a6f-42a0-ac0a-7ca4a7fec130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 1bde8355-6fa0-428d-b51d-47b15b990c69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 065673a6-0c42-400d-8d8a-ec2f819e1b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 9777f8ba-3c84-40b2-be8b-074f8213f566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 c0b8b7bd-c0f9-4c5d-9b54-7c4c3facd6f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 4ab34378-707a-4b4b-ba63-12016e107358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 b3fd2879-f9ce-4e84-9871-c63a51b6e4f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB7D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h145B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #458 1f272634-2dfb-4543-b447-dae08c43f170)");
unit.assert_eq16(16'hB7D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #458 0aa397c4-d344-48ce-857e-172de304e89a)");
unit.assert_eq16(16'h2EA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #458 2feb621b-26b8-4ec1-ac77-fa068cb33036)");
unit.assert_eq16(16'h145B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #458 b5946d9b-e1a5-464d-abde-650846dad8c4)");
unit.assert_eq16(16'h0E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #458 dfcf9b1a-46c3-43ea-9fb9-d67b7f822511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 3052cccf-7450-4fe0-8f6b-9f9924fb5b9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 1e2c8861-d834-4064-b1ae-90c7eed0787a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 157bee6f-b220-4140-9fc3-6fb6f8c497df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 f1b3b3af-f728-4923-a6f0-7fa518904123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 457cff36-d75d-44b5-8d52-c55a823a1777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 1df3ca92-5566-4e2d-b080-e29930fd45b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h82F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #459 f3d6e441-0ba6-45cb-9b78-d60be9249d3e)");
unit.assert_eq16(16'h82F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #459 d5933cc0-600d-4f6c-a1a5-3cb15c31e762)");
unit.assert_eq16(16'h6981, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #459 614cdffc-b0cb-4f2e-90bf-652e9d040db8)");
unit.assert_eq16(16'h7D92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #459 15385d38-9882-4da2-aa23-7da291bb4551)");
unit.assert_eq16(16'h0A4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #459 8c60c3be-de30-4bbd-a276-b21886c5c4fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 422eb459-d442-464b-8180-376287db4e45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 86386792-e200-4cd7-89ff-3aa2ee8da810)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 0536cdb7-7896-4864-969a-00685c49dd1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 a57e4b92-d74e-4d10-a835-8a329d109a72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 cd427770-d896-4ed6-bffc-b49bcbe19581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 55cd7010-5e7f-4873-8a65-6d61989398e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFD04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h91B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1620;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #460 58a0089e-6283-4d24-8be1-58d816efec13)");
unit.assert_eq16(16'hFD04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #460 99afdd01-a1fe-47ce-b6fc-9f75dbb8a0bb)");
unit.assert_eq16(16'h683E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #460 1a5c5cda-d671-40b9-ad0c-dc53dae79b31)");
unit.assert_eq16(16'h1620, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #460 2a314631-3150-4417-8096-56bfaa0f667f)");
unit.assert_eq16(16'h0DB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #460 6e6bfd5d-db79-494c-a53b-cfbbf5019ea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 e1e7578f-5073-4119-8d52-5b1d6446a125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 95fcfff2-57bb-4112-a363-36fb12e14cd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 fb9129ca-68b6-4037-8938-7d99ae46aa4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 198ece97-46b5-4c2b-b4f1-3c9a376a786a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 c095c4fa-6218-4ab7-b695-558e2f451c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 a961e969-6720-4b4d-b4bd-474571681183)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE41F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h676F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #461 074a1a1b-5ef8-4a41-a330-ab4cea1568ca)");
unit.assert_eq16(16'hE41F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #461 bce7dd7c-3dc6-4b9b-9ded-3a4f53e79ee4)");
unit.assert_eq16(16'h4F6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #461 ad6a2079-0768-4cf2-ba66-5e589d648a3a)");
unit.assert_eq16(16'h9F6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #461 6575ec7c-9ae9-4c11-8a91-fc61acba61df)");
unit.assert_eq16(16'h0DD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #461 6758b575-09e9-4379-aa68-aa52c291a597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 cd270a59-2e87-4541-82ee-92a8665ed5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 f4aeca70-9e2f-490a-89da-b912719095f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 24c128d9-53cf-46f3-b5fe-0656ae9b3d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 6b4f4a05-1ed5-41d5-9ca5-0e06bf317c8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 18b63148-0bb5-412c-bb69-cd20d0f2b5f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 7aa01f29-bc8d-41f2-934a-0d28372f7d0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h126D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h87CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #462 7d974315-2b84-4f6b-a106-e7b9721e264f)");
unit.assert_eq16(16'hB8DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #462 237773b9-cedc-40a3-9c04-70254bcd385e)");
unit.assert_eq16(16'h4BFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #462 4fccd9e9-e0c2-4d19-9ad6-2a0f8948671c)");
unit.assert_eq16(16'h87CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #462 1d14249a-ed6a-4df7-b0e3-5f828bdf8578)");
unit.assert_eq16(16'h029E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #462 0c16c62e-ba01-4594-aba5-f4ca43927459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 299f7a7e-b4f9-4f11-aa88-9795f576f252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 bf96b1dd-69c4-4b15-8868-01f543f872aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 b2e91c37-6e57-4546-9daf-027c811186f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 e0b72b0c-f810-4af5-aa6f-66ed3fa0d160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 8a03c4ef-a309-4b3c-9890-fa5cf910098b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 787bc3b4-bea0-48e1-bf0a-c7d76078ddc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEEEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF4DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h770E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #463 95445af4-20c9-4d8d-bb6d-1c77cbe05cb2)");
unit.assert_eq16(16'hEEEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #463 24f0a74d-7f4d-4d08-996e-83880ab519c7)");
unit.assert_eq16(16'hE1BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #463 bb52b2f6-0b92-4265-8c9f-bba543c5fc5e)");
unit.assert_eq16(16'h770E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #463 e1f88a18-91dd-4e0a-a293-e192a4a1f1fb)");
unit.assert_eq16(16'h0C80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #463 b930fc39-b1b3-4ffd-a3c5-9937525ea247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 c2d9bddb-ea17-42bf-976d-95a07780286b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 c33ea32b-8cde-4cbd-9669-38e6bad7187d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 660a7637-7ab3-40a1-8932-44380a7cdcd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 845095dc-ee8d-4dd6-a479-7e16bef920a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 8aabc9a4-a1ea-47a4-accb-f5157045221e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 17e6fe5b-d6f5-4d45-9e40-410af0cef6ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3AEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD83D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #464 7e1a05be-ad58-4b8d-8e0c-f660fc9332d5)");
unit.assert_eq16(16'hAEAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #464 1179e6b6-f5c8-49db-b1ae-bb30cf30ba14)");
unit.assert_eq16(16'h17DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #464 9818454c-50c7-43b2-b8c2-7b4a840dad43)");
unit.assert_eq16(16'hD83D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #464 08cdef98-5ed8-49ee-971f-7bf51218df5c)");
unit.assert_eq16(16'h05B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #464 db310462-0068-4f56-8394-631d9331913c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 07638852-00a1-4d20-a461-1d1168bc7710)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 308ba464-35cd-4ec0-945e-1e83eba3861a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 ef7f157a-591f-497a-a51e-93ce7a9a8896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 fa0c54b3-30ce-425c-88a8-a9bf284c4a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 62392b87-ffa9-4887-b6ee-ecf6e46e49c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 a84d86ae-24f6-4d32-a903-84a376cb69fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD37A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA50A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF416;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #465 59d66d56-ce0c-4f41-abc8-58fa60e420c3)");
unit.assert_eq16(16'hD37A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #465 b10e7bae-6072-435f-986e-2e39b4ee2310)");
unit.assert_eq16(16'hE8CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #465 94ee698b-ed8b-4f8d-b70c-309d0acd6fdf)");
unit.assert_eq16(16'hF416, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #465 6da0ced0-5b82-4142-bdb3-d3650422dfbe)");
unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #465 856142d3-6c70-4d80-895d-a42ce69d8fba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 c9f8e68f-d170-4636-9d53-0f7ca69ee877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 89ba8012-6394-434f-8447-70ab19a08d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 ad1fc02c-0249-427b-8350-550aa1f93ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 a0e10357-cddd-4581-bf81-ce60a62f0451)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 8b916b23-6bd9-4787-8b73-dd6ffbf97083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 f98d6cd1-2f09-4072-a4c4-8cc949112af4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5CE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE5F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC451;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0470;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #466 cf1a6311-5106-44a5-8e18-fda5eff845f3)");
unit.assert_eq16(16'h5CE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #466 ad4a8ec3-9479-4002-8d8f-16c6924f836b)");
unit.assert_eq16(16'h88DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #466 ca0ee28e-bd04-43c4-9354-7158c6c25266)");
unit.assert_eq16(16'hC451, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #466 0bb7776a-b60d-4fcd-84f9-48e99c22adf2)");
unit.assert_eq16(16'h0472, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #466 956b7b48-b7dd-4560-bb0b-8a68b62bb925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 9f7f4455-5185-4de2-a873-feb53fbac119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 d912c690-a2e1-457d-9270-01402d25d4b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 254cfe31-acaf-4f9a-b69a-9e880c1712ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 45a1c14e-6dbd-490f-8462-ed4fbf4a225a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 3b213e0d-cce4-48de-8e33-3177c1ccce24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 3423834c-44b9-4bed-94cf-7b5150df20c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h213D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8087;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF78E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #467 5555a8ad-3e72-4598-ac5b-b2efa32b3f1a)");
unit.assert_eq16(16'h213D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #467 82262780-bb5f-4f32-91a8-138cccbf01ed)");
unit.assert_eq16(16'hE043, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #467 52285a85-2608-4dfb-ba94-12c6c857aa1b)");
unit.assert_eq16(16'hF78E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #467 01e9481e-479f-4629-8df3-5889558f07ad)");
unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #467 7d00235d-896a-41b8-a196-51bd2d8dbc00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 671cf244-3632-4dab-b642-2f8b33e096a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 b815407f-4ad1-43d8-9c60-7bee760d829a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 a71b5a04-57e1-4266-a3fe-79a158155d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 3e71f211-5452-4519-97ab-2c25bb9fc967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 a3a454d5-b0ef-465e-ad54-67a5f6442db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 5bf2bbb1-4bf1-48cf-8334-a53d05aab160)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2E51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h204A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB5F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #468 c315d1c0-1a9a-4f61-979d-b92ac17f73ee)");
unit.assert_eq16(16'h2E51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #468 dc7b0d3b-313b-4daa-aedd-95bba3b4cc27)");
unit.assert_eq16(16'h2EE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #468 0c7ca2ac-4ae7-4e91-93b6-430bd4aa362d)");
unit.assert_eq16(16'hB5F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #468 ffb92d43-41f8-4016-9dfd-ae7be24f0f88)");
unit.assert_eq16(16'h0AE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #468 9f29a9fa-20a1-4bb0-a311-ed48baa9e9c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 3dfd490e-c4f9-43a9-92d1-7756d033130d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 b2df1010-cff6-4d84-8aaf-7622be02b639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 6b60966d-9b5d-49a1-812a-7de503a181ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 91110a84-8581-4740-ad45-22c8925ee0e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 9d724791-c555-4ee9-b7d0-f21df6914119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 523acdda-9856-4d97-95c8-202431c098c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h04D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8981;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4076;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0276;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #469 58d913bf-47dd-4da8-94ac-545ed2e1e337)");
unit.assert_eq16(16'h04D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #469 89025d2d-c10f-4523-b204-8ac975543f3d)");
unit.assert_eq16(16'h8D60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #469 1bdea305-1893-4b98-992d-bdb292528247)");
unit.assert_eq16(16'h4076, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #469 5c8c0842-b902-447a-9c57-ade7892291b3)");
unit.assert_eq16(16'h0278, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #469 9408c3c9-40b0-4877-bec9-bf8384bda89d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 39469862-b535-4d25-aeef-0c078e522c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 8b84880d-c59d-4820-9509-d843b5d3b7ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 7f97ea66-6f81-45fa-98bb-a85f8ed9ebf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 dfc2a9e3-5ac4-40f2-92af-f7f4481a357f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 b41490e7-7150-4dc0-b18f-f9f6d23ddff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 f35ec4bd-3394-4e86-a494-1d299d89b6c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB442;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h009A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #470 af4fdd98-d555-48c1-ad8e-a912527e66a7)");
unit.assert_eq16(16'hAF72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #470 c3702075-d9a2-437f-b002-50845aed1999)");
unit.assert_eq16(16'hD979, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #470 b2f56b4f-6bbe-42fe-9e60-ede3992fda2f)");
unit.assert_eq16(16'hB442, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #470 638ea29e-feef-4c09-bbb8-64f34a368a9a)");
unit.assert_eq16(16'h009C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #470 f9ead09b-667f-484c-9cc4-68b88bc48846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 1dfa9c5b-c1f5-4cf0-9e21-1c8f1d48133d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 d7e090da-d79f-4f6d-946a-add9c4f957d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 f4923772-e7de-4a85-843c-3c2cf7887420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 fc1f28b4-d9b5-41bc-845a-81de484c9ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 123b655b-0e04-4e6c-bcf2-b9536502b5af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 e17c8772-6c63-490e-851d-a759a2119a69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h42DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE628;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #471 f0f9dfda-19b1-4c44-8d52-1828601c4313)");
unit.assert_eq16(16'h42DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #471 b4efb627-a198-4704-aca7-dee04e6edf46)");
unit.assert_eq16(16'h12F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #471 65694e37-705d-434e-8479-7cdae3dbf20a)");
unit.assert_eq16(16'hE628, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #471 d7f2dcc2-065a-4110-8eb4-dabf34e66c02)");
unit.assert_eq16(16'h0E4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #471 34f70572-85e2-486f-baeb-70685d70ae19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 5a82f194-5562-4b7a-9f95-9cbac8912ea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 4cf86673-fa41-4336-a7cc-a1c90b669bd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 23656c6f-8a68-414b-a363-f6dbcf069c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 c5af51e8-95dc-4da4-a653-8c46df616af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 bca2b6ef-011f-4a3a-8d63-c8028ecaca4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 d9da070d-ea0b-44ea-955c-60fc3679c55a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD4E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2455;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #472 057a3a94-bd3a-49d8-9d4c-295b2886e2f4)");
unit.assert_eq16(16'hD4E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #472 fad4115a-6726-4fa5-8436-eba5121b165a)");
unit.assert_eq16(16'h8C21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #472 b6ca2e49-1097-483b-a579-3613293bf78f)");
unit.assert_eq16(16'h2455, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #472 e3cc0280-f471-48f8-9d57-f440ca5ef540)");
unit.assert_eq16(16'h04FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #472 eda9685c-7c43-4844-bfb9-6610f3bada12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 b17f71f0-d63a-42c1-864e-944492dbd178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 2b9935eb-691b-4e30-9df5-15f829dd5f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 8a05be4e-1f67-4e5a-86cb-548ad38fd671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 d1d9c6c4-33ed-40af-8ed6-a622bbbd79ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 051d8073-c0c4-4caf-b680-3616969aa530)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 23cdc645-eba3-4a12-8d4a-2e412c9fc374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7624;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h763B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h075D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #473 46542dfa-44da-402a-b0aa-45b00b37094a)");
unit.assert_eq16(16'h7624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #473 5bd6ce82-0f45-4796-a870-019c3ae02c35)");
unit.assert_eq16(16'h0241, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #473 f7d9d235-7fc4-4c21-a80a-7313d48f41bf)");
unit.assert_eq16(16'h2C9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #473 e2b7a0e7-7d54-40a5-81e5-3bebb8adaefd)");
unit.assert_eq16(16'h075F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #473 440ce0fc-db22-40e7-b231-eeede0eb3b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 0190166a-4453-40ab-a5fa-50bd4f69616c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 b706a45c-066d-4dba-b674-d6266c27bf1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 277b9799-7b26-45d6-919e-6e981777914d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 15db320a-c98e-4c37-9daf-ea656c7ad2fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 b68d90d6-cbf8-42fa-b543-6bbdf9be0c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 93ba7ec2-2374-43a5-a56f-d13f9e1e3c84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0977;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #474 38f5c5e9-f1b4-4699-8fef-0e4c83d5f973)");
unit.assert_eq16(16'h5F2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #474 4e2cab98-e8f7-423b-b1a7-7627fafedd71)");
unit.assert_eq16(16'h37C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #474 9ed50d4e-6f9a-422c-b787-ceaa245b0095)");
unit.assert_eq16(16'h5C4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #474 81c01e4c-619f-4bcd-b01b-c90921a6c276)");
unit.assert_eq16(16'h0979, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #474 195fce5d-e7de-434c-a5f0-4ea7d492b06c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 61fb11b0-0f84-433d-9d21-1895898fc26c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 b68daa0b-0559-4fb7-b849-9250ca9bc6a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 b4dccd6e-2291-440e-94e8-900202c4288c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 6e9e51fd-3d8e-4c84-8b84-869783d2edb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 64bc8d9c-af58-4bb8-aace-808d1c47ad3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 35671c2d-b77c-440f-9abe-de6bba7e6dbe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB4D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9170;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0190;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #475 943303bc-c23f-4b80-8fc4-51a0f1338bbf)");
unit.assert_eq16(16'hB4D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #475 581504fb-95e3-4c60-ae50-a76dfe414ba2)");
unit.assert_eq16(16'h66C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #475 dca92b02-4c1a-4428-8d5a-89af9f6f481d)");
unit.assert_eq16(16'h9170, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #475 328c2479-d20c-47d3-90ba-7055ac00e6d0)");
unit.assert_eq16(16'h0192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #475 67f83a4e-0f9f-4b76-960a-4f99f0a90749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 ab91c314-0699-43ab-83dd-0e9abd155613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 89b03032-5e05-4b77-9048-d422e17a2095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 ea6feea4-d93f-440d-a8df-e344a8eef136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 df4cdab3-4e1e-4a3d-b817-713a1a50ebb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 59059073-d631-4c02-a95f-1dfda3d1b130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 64028180-055d-4d0d-957b-3928a93e5833)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA918;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h083E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #476 1b44d4c8-5e7b-44e9-9c72-4a22510104e1)");
unit.assert_eq16(16'hE5DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #476 703d2e46-b5ab-487e-aecd-8756e552a356)");
unit.assert_eq16(16'hD731, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #476 d0296f94-498b-4fa4-8f4c-ec51179facac)");
unit.assert_eq16(16'hDB95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #476 47f7c50c-8775-4b0b-8135-74e818c22ec2)");
unit.assert_eq16(16'h0840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #476 cc4b0ba1-2b27-4ed8-a484-9d23dce8d12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 b2ecb1e1-6909-4aec-8f1e-bf4dff7f5619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 e0f80647-e095-4d4e-a1c9-1b5805107576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 53a8129c-162a-4ed5-a88d-852ec8335ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 c8e0868a-8481-473b-a82a-a7f34ca8a402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 72fca6c8-c99e-435b-a817-6603d71a644d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 824353e9-cb05-43c3-9f90-056204a64b52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1621;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h406C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #477 db2292d9-3aef-46f9-92cb-0b9a948d4648)");
unit.assert_eq16(16'hBB0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #477 32c55b78-7d7f-45d9-bfaa-b6247c0629bd)");
unit.assert_eq16(16'h0D3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #477 0a284471-2ce4-4313-9026-7124f23c7fbb)");
unit.assert_eq16(16'h406C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #477 6c8dda64-b7fe-4e28-9f0d-a453b03ed3d3)");
unit.assert_eq16(16'h0C3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #477 e6f5e775-e8ef-4c7e-af0e-bfa79acf3d9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 7090c76c-9c03-4d79-a1cc-227bd1eba918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 aaa91399-1793-4cba-a16e-b32c6935f7c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 3df7a46e-1b99-4b7b-ae07-87f6d890856a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 e5e9ef99-fc60-409a-9b08-224a62681339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 6ea1e538-7a17-49e1-bd61-ce8889cc4e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 1ec2193f-9351-481e-ab1c-fd4116c67efc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC65F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF897;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #478 8dd360e5-ef1f-4a29-b6bd-d426bfcc9f93)");
unit.assert_eq16(16'h3B29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #478 4ad4b50f-52b2-48fb-a894-72180ccf1995)");
unit.assert_eq16(16'h9435, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #478 93c9b737-a29f-4654-ac91-0d8bc123eb46)");
unit.assert_eq16(16'hF897, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #478 384f6016-9966-4375-be80-bf4fbf9da494)");
unit.assert_eq16(16'h0C78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #478 e5bfdef8-b850-4c52-8fb7-5c9a9b8c355f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 df67d694-9f97-47c8-a355-79cdf84aadbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 a6f6eb05-e2f4-4ccd-a965-cd4e0602f756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 8fd295bf-8f30-4fd3-b917-9a6ed8b77546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 fa4d5332-7db3-4e43-9689-74c8ae51228d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 c9978cf3-d3d6-45f7-aa8d-09d5760d2967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 3c6b57f8-1120-4baf-9b91-fbdce72742ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD501;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8911;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFB14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #479 258a1f89-2d65-44ed-ba32-c8a33a766704)");
unit.assert_eq16(16'hD501, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #479 a5434f09-0afc-45a9-861a-ad3886d036f5)");
unit.assert_eq16(16'h980D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #479 fca7ae29-71c8-4129-80a2-524a90394e25)");
unit.assert_eq16(16'hFB14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #479 841d556c-e366-4b0b-98aa-79f3d754f769)");
unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #479 4ce2cd72-f35b-4159-9aa4-21e3fdedff7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 26c46da5-bd3b-4d2d-b59f-7697679d46c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 e31ff2f8-f04e-47a6-b371-b0e432f6d4cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 3a3ea33f-60c1-4574-8c83-63a8ddc4690d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 101e29b7-2799-4778-8399-873fe4fae8e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 2a7b166e-359f-445a-9888-3d4f95628c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 f9a3423a-c9d7-46d2-b469-5db62e1b9873)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FCB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA47B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #480 112ca2e5-cea2-4b1e-9204-4c3ddb36b28d)");
unit.assert_eq16(16'h3FCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #480 660543fa-eafe-4f9c-8a3a-7bc87116c8d7)");
unit.assert_eq16(16'hC403, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #480 e1a8f675-e841-4cb2-aa18-b0b2ab8c1d27)");
unit.assert_eq16(16'h5D2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #480 b96bc175-b80f-4182-9078-1a44e7bf7cf5)");
unit.assert_eq16(16'h0E25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #480 47424404-3cf9-41c4-8977-296bd9680883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 b089b947-9a04-4cbf-ad96-cf70d71c2c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 ff7cefcb-ae2b-4d78-bf2a-b7a007c95046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 f57c5314-23d5-4d14-b1ed-d28c9efcdb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 ec05b21c-cadd-41eb-91a2-b023548a8269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 7ad264b4-a4a1-4335-a337-a1c55bd6c188)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 4e63ede4-ac81-4616-8ace-b2183097c400)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEF01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2C14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1A38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #481 36810412-050e-433a-98e8-fdafe1e17e3b)");
unit.assert_eq16(16'hEF01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #481 0ea12079-0d2c-4d39-85dd-e3cc8c08a7aa)");
unit.assert_eq16(16'h5B7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #481 71581514-de7f-4e14-ac97-92511b46f609)");
unit.assert_eq16(16'h1A38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #481 f77d1924-ae99-4463-bfa9-1c53a61e8f02)");
unit.assert_eq16(16'h0E6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #481 645b6f04-8e48-4201-8910-d1ae9853d018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 fa57bb99-a996-4768-8bdc-969742300769)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 7d74bbe6-595d-4912-a2a3-34d8ca34c812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 479ddfc1-74ec-4c09-970e-7930c7d468b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 080221fe-5fa1-4c0c-975b-61aad6cb1486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 9c648abe-4e52-499b-a4a6-f7f4d27dd297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 885d6920-554c-45b9-9736-b59535cc07bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1BF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5F09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3418;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #482 e4cb1ea7-5bb5-4213-8d3a-30ef2b2cc7d8)");
unit.assert_eq16(16'h1BF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #482 44d2e72d-28a0-45e0-958f-9e7981a1733d)");
unit.assert_eq16(16'hAC2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #482 c6e0e509-38bf-468b-8281-e39b35783277)");
unit.assert_eq16(16'h3418, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #482 fa5390f1-6c7b-467d-a8e3-7029c9cadc04)");
unit.assert_eq16(16'h0A97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #482 f539cff1-b7cc-41d3-b043-3d83e3fd4c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 a3c9e4df-3d80-47d7-8da7-291ab2565885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 cbffe213-6f20-4b4c-9e3a-726e2ce9bc03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 90cf30d1-6f7d-4429-9a55-3063e12bc750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 1f43ed63-1a13-4b9b-84db-27bcb24cb63d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 bb03ea49-4cb2-461a-aa92-92c37bb7341f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 9e9c06e7-3cc1-45af-bd98-1eed2134d6df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2199;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3249;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAF41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #483 f6e4cbd3-5837-46b9-aee3-3a89b6c100fb)");
unit.assert_eq16(16'h2199, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #483 5152f42d-aa33-4034-a142-ff923b5b8e24)");
unit.assert_eq16(16'hFBB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #483 4f2ff6e1-95df-46e4-ad05-a06bb2bcd52c)");
unit.assert_eq16(16'hAF41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #483 08d66c4c-20f3-4dd6-bde3-3290ef577df9)");
unit.assert_eq16(16'h00D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #483 9e2189d3-9990-428a-bdba-f9229a81a656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 60db4ea5-b3b1-48b7-9c57-fcbaf4b7c9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 8663ce5e-2d42-4458-a8a5-25886bdb4e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 2f8c1881-7fbf-470c-a5d4-8d3ddff53994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 d4ffd81f-8d4f-431f-941a-f4161cd85ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 17ff82bf-5831-439e-8127-92bec87ae426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 690dcecd-bed5-44d0-b095-fb08bb2b3362)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCEE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #484 809d41c4-4a24-41ad-b3a9-28c73325b257)");
unit.assert_eq16(16'hCEE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #484 e388749a-82ef-471a-904f-8250c709d987)");
unit.assert_eq16(16'hFF49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #484 10f34438-5940-4f85-8a61-cdddb0235f9e)");
unit.assert_eq16(16'h0A8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #484 aaf3638d-bebf-428a-9065-9b55e3746484)");
unit.assert_eq16(16'h0A75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #484 d4a1cbfd-a910-4afb-8292-4db0acdb95cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 7546109a-cbe9-4a3a-900f-8d95948da3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 795bc9e4-e08b-4a10-a176-3ce69258b20b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 eac15671-7059-4d41-8523-34155b2a51fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 a2881e45-f6af-4c4a-bac7-89a0a5bcc7f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 6433fdf9-40f6-49b2-9952-8a5b020d3285)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 7f3ccba7-a531-437f-8bef-4ca980753874)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC0C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB667;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0466;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #485 62f557e8-832e-4917-8981-4edcaa10e70f)");
unit.assert_eq16(16'hD0D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #485 2a5f229d-16b7-453e-8e31-2ab2f30acdbd)");
unit.assert_eq16(16'hB6A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #485 07c59a90-7777-42bb-bc07-89407c5de707)");
unit.assert_eq16(16'hB667, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #485 ece30bc3-641f-4ddd-b8c7-1f265394259a)");
unit.assert_eq16(16'h0468, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #485 134726b2-cecc-4a0f-8ad7-4263410bd1a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 f9c2f322-2e64-4720-858e-e91a585337f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 2f982247-557d-4a9d-b1da-449fcc7fe5c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 c553abb2-6212-49fe-b52b-41ac2b2dced3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 63326d7e-c44d-4610-9a86-304f38962f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 d5e991f7-08fc-4080-8e2e-883813108a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 1a273ecb-0437-499c-863d-55a8df2d6b2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD97C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1EFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3FF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #486 47981653-30f2-4cc0-82ad-e2639a660549)");
unit.assert_eq16(16'hD97C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #486 cd3bdc0e-2d19-492a-8d10-43930eaf7e6d)");
unit.assert_eq16(16'h953F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #486 afba4298-0a28-492a-ac40-22bfdc88063e)");
unit.assert_eq16(16'h3FF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #486 90814e19-5939-40d0-be22-cdef225b1bbc)");
unit.assert_eq16(16'h0FBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #486 f1edaa9f-41f9-4ce5-a9a8-095031c83f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 44509b26-16d7-4d3d-a037-5ea4e1309e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 f3163661-0d79-4729-ae6d-81e9e9803b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 b21b7a23-56a5-45ae-a045-6080cf9f2cc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 793be539-854c-4c5d-ad31-9a0acacbab80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 b139b177-6514-464a-b91d-5cb2e13afba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 8dcb4fc6-bdfa-4d86-a990-5cbecc69d49b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h35E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4A06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #487 9d0dd299-1cb5-4c9e-bb34-6096c9420521)");
unit.assert_eq16(16'h35E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #487 2ab29c6b-ec7b-4610-bad5-7f71824569ce)");
unit.assert_eq16(16'hEA1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #487 c5d0a56c-779f-40cd-8e49-cec1f74c3e95)");
unit.assert_eq16(16'h4A06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #487 33390340-217c-48e4-beec-828515b9cc5a)");
unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #487 863b3979-59fe-49e7-8f16-19557a785942)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 afa4f65f-1a06-45d3-bf16-01e5d49afb8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 db90f27a-6034-4fc4-bfaa-0cf7eaa89a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 62db01fd-83d6-42c7-8e8b-5756815910e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 4e1b566a-4b05-4c7f-bac5-3303b7553752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 e1e053aa-1510-41de-8bc0-0830a4d7b806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 1d13ef9d-62e6-414d-8eda-ff8d1f4ed79d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2389;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #488 f9c5f73f-74fc-427c-889a-bbd372087a03)");
unit.assert_eq16(16'h5E48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #488 38dd793c-15b2-4d85-9f75-ec40e074f3d4)");
unit.assert_eq16(16'h6277, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #488 32f08132-05b7-4b89-a4b2-da9271bd9476)");
unit.assert_eq16(16'h2389, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #488 77c9cc28-c7af-4a8a-bb81-62534f9db770)");
unit.assert_eq16(16'h02BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #488 ec379cfe-f953-47a3-841a-cac84fa107af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 81dacbf1-7294-4fe2-8db0-f792824e00c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 ce00cb0e-08b2-41fc-967b-aae4588b6aae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 e5926784-f31c-4dda-9272-5e48e0ce5287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 fd08e588-33e1-4b19-94b0-30323fbe5b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 5475d652-c20f-465d-b3c0-34d1ee7c83e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 ffe6afd3-ca7f-4e36-bb73-a83460e4489e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h914F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE773;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #489 117fb85e-6fe8-4452-a861-b8bf4e3f97d8)");
unit.assert_eq16(16'h914F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #489 c477c2b5-04d3-45f8-ac4f-4a57f8805a55)");
unit.assert_eq16(16'hFFB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #489 073e5667-1578-4c9f-93ea-9d97f26e5e1f)");
unit.assert_eq16(16'h6B62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #489 8ece3a69-9024-47e3-ae41-ac84e1484c3a)");
unit.assert_eq16(16'h0A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #489 7a27a3ee-f7e5-4f47-91fe-2373919955fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 4a4a12d1-c62e-4b11-8ce7-454a76e67ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 0f5afca5-91d0-463f-828a-f6338f06ab9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 13119829-3476-4450-a681-99c7c32752b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 f1caab6c-3a43-4a4c-bc82-c98627ffaaa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 1905f063-b6a6-4d09-9ba7-8e31bb9d78d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 fbfc25f9-beb3-47e6-ba78-3fa6db049531)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h10A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC577;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE97A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #490 e9b5322d-07a5-4d55-9023-9f3a6fd47cf7)");
unit.assert_eq16(16'h10A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #490 da887991-489e-42cd-be27-efffbd606777)");
unit.assert_eq16(16'hCFD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #490 eec2e1f3-6ff4-4077-8b11-d0e3f1bd8622)");
unit.assert_eq16(16'hE97A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #490 48f56c05-1c4c-4610-be43-7d51220d3ccb)");
unit.assert_eq16(16'h01D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #490 f2938b78-5095-4560-92d3-32fed1bcf6c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 765e1a44-0e21-4a70-b650-f55f3f963c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 b71b3a90-8ae4-4fae-baf2-f2268aa25011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 2e01d584-0efd-4366-8ca2-f0c4b4509064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 e9c0e594-24fb-4940-bb82-e7729113a402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 87b57556-ceb0-4e66-99ff-233365bacfab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 d2b1e09f-fb3d-4cc5-8395-66332e3a3877)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1439;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #491 21a6327e-d739-4ad9-a5d0-c02380a9a618)");
unit.assert_eq16(16'h1439, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #491 ac546782-b977-4d63-b28b-28f64842afb2)");
unit.assert_eq16(16'hA0F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #491 4910e1af-67ff-49e2-ae54-5ebeec80bd16)");
unit.assert_eq16(16'h0AC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #491 30600882-d235-4915-99eb-e02cae31ec77)");
unit.assert_eq16(16'h03D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #491 e9e35661-a07d-4708-af26-0fef6bbf40e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 dbe6a80a-5eca-4fef-ab0b-a77b008ec92c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 694940e2-ae0c-4b2c-99d5-f078fc1b44d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 6343b4f6-bed2-4dd4-9688-88015d86d47a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 43bafb58-4778-4665-98fd-2dba9b000879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 82921dc1-dda0-40ed-8e85-0d6794f9298f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 ab2ee80d-6d3b-4c91-b2ce-de590134cf19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8AC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF39D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3DA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0376;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #492 fbbe8a61-9988-4e8b-849a-46a8127a6641)");
unit.assert_eq16(16'h8AC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #492 89463dcd-2b21-4628-a6dc-c48e31c47446)");
unit.assert_eq16(16'h9CD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #492 cff058ef-7c51-4629-b0eb-3c93e9ad4936)");
unit.assert_eq16(16'h3DA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #492 55c269a8-2f2a-45eb-a944-b5b0e86c1e46)");
unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #492 c24e38d3-0edd-4680-a540-a8fcb873dcf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 2544927b-afac-4ae5-9b47-41c4196b4433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 b8b5d32a-480b-48a8-970b-b7f3245b35be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 749ae024-1f1c-4971-a7f7-79db1f144326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 6f98a2a3-74a0-4b84-a318-e89d14e38f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 d109f4e2-1dba-47e3-8fbc-470d52bbfe72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 d3c3d01a-5d63-48a2-a3da-a80294ae24a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3432;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5FC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #493 378c2001-3089-4391-b77c-aee9eef7b5c2)");
unit.assert_eq16(16'h3432, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #493 ba4baeaf-8869-4585-9e7a-5d3efd981b39)");
unit.assert_eq16(16'hAF27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #493 25f5031f-217d-45b0-a027-a66ba3dfda81)");
unit.assert_eq16(16'h5FC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #493 21c2085f-3820-4c12-94e0-e72ff3c033cb)");
unit.assert_eq16(16'h0C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #493 865e38b7-49fe-437f-8d61-587fc6917ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 ce4f9650-0e57-4b8a-aa9e-bc48d2cbf5ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 7b795e3f-f328-4865-9a31-2b70ff6b3af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 f1c54cf6-7a19-4dd6-8b14-7e221682b919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 a5946336-d527-4bb9-946c-d73f2c40a61b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 c849528b-878a-4e3b-8aa3-3390a6424e02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 65b83dc7-8f19-4550-8855-31207fba6d47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h32E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h658A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD4C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0451;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #494 15bfb9aa-b8dc-4c58-85ae-2514dca5599f)");
unit.assert_eq16(16'h32E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #494 3a6f526c-44b6-4921-a9e6-18555d8c30fc)");
unit.assert_eq16(16'h9CB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #494 83b25e6f-09a7-414b-9ef0-873932333b29)");
unit.assert_eq16(16'hD4C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #494 08828eb8-ac0b-4ddb-a828-29d2f4bf6b80)");
unit.assert_eq16(16'h0453, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #494 c3df7c74-278e-4f55-98af-7b3fb650e8b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 483ba305-a5dc-47fe-a581-abda4a2d79d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 4c2db310-2f52-45b6-9754-6e8d8d66d7da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 043692dc-dc95-47a3-a0ba-1123e3eb6135)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 d6ef4b45-0832-4f52-a9e6-364dec79b8ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 48bde49d-1b26-4a6c-962c-ebcfc8eaea91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 6a103b36-d019-4f19-b63d-eced526bcc6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3EC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h47B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF820;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #495 a88ce42c-d66f-4a9f-8768-a2e1c1757e68)");
unit.assert_eq16(16'h3EC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #495 012f5b8d-1975-4547-9d46-491b0df118f3)");
unit.assert_eq16(16'hEFAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #495 fe688f6c-1b86-46b8-ba8b-dea9c9a6106a)");
unit.assert_eq16(16'hF820, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #495 9a6fdb81-e60f-4586-b108-5dff2e4a2c1a)");
unit.assert_eq16(16'h0E75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #495 adef2bfb-fbd0-4d5d-b205-1cc5c0afc65d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 bb8a3e1e-9dab-4f02-98c6-1c246980bf76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 81c13e6e-52ec-4130-8973-421d22478802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 26bb66bb-3699-4a73-bb4e-f3407c155d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 9a1f3a84-d4d0-4122-bd38-d9c5ac0c9a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 a96ff962-689c-4ae7-ab27-c8827ac28219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 7fb6e48b-61de-4caf-ade9-8376b8640a18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE0E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h54F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #496 c0e6fc62-d6d0-4e93-8590-c464e961e091)");
unit.assert_eq16(16'h9B3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #496 6a0fc098-3f56-4489-a9f5-59f05cfe52f3)");
unit.assert_eq16(16'h354B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #496 44712973-05b5-478b-9181-3d8b015828f4)");
unit.assert_eq16(16'h54F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #496 8ac2878d-960c-4697-bcd7-68053cfbd01a)");
unit.assert_eq16(16'h0C77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #496 a63f811c-596f-48c8-adf5-59d236589e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 e70b6793-b3d9-4b3b-9d79-f702999b0afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 c65ff79d-1b3f-49d4-8a56-5fcfef41768d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 79d24ade-2280-47d3-8efb-fe9863bab7c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 9e0f005a-3b9c-4515-bdeb-c0dd757d52d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 cc2b69fd-0d6c-4e03-aa4d-52b92c63c0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 ecfbaecd-5f0d-4535-a889-c01c24540f87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7687;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h83C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #497 23f7cc5f-e4b9-4e64-bc56-5021885cf235)");
unit.assert_eq16(16'h3D80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #497 a2bc825c-8d65-4423-874a-9fec260bc3a9)");
unit.assert_eq16(16'hBBEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #497 ad3a620c-f42a-4ff5-be3b-9e6aacdafc45)");
unit.assert_eq16(16'h83C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #497 ebb14ddf-4dec-4cc0-9367-1dc9df08b3fb)");
unit.assert_eq16(16'h04F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #497 d6cee486-6ad8-4ed4-81f2-907e7ae55179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 8535c7f3-5ab4-4908-b6d9-6a1890fdf9bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 f1b4674c-2ee4-4e0f-8527-81170459f9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 d73d760f-b1fb-4cb8-b570-10fb5e099584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 6d37cc6c-9362-4467-8a38-a15232f21641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 bbc9bbfa-96ac-44b4-82b8-093049c242bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 d847b186-f87f-4010-a71d-2283363fa743)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA8F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAA96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0381;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #498 cae380bb-4eb7-4147-a9a0-4ebf94c531b8)");
unit.assert_eq16(16'h57B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #498 2750a41d-09f1-4c92-a50f-abd8ec50274e)");
unit.assert_eq16(16'hD0A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #498 917445ea-6cb3-465a-80f8-37c16603fc31)");
unit.assert_eq16(16'hAA96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #498 8cf97624-0598-4c15-9d8c-6c718ec432ae)");
unit.assert_eq16(16'h0383, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #498 262e7687-c3bb-4892-abf8-faccaef429cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 6412947d-81d8-4ce3-9237-7895e7293bc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 df9d99ab-275a-4fd0-a7f6-49c62f18005d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 06629b43-8342-4fef-9cee-ea4e5ae00881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 91c387d3-cf92-4ccd-ba69-cea0fe19eaa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 7ad33674-f63c-49d6-a093-e6fc8ec415a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 66337628-72d6-42e1-a9d1-7f8abf36f297)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h90CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1ECC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #499 540172e4-ddd2-41b6-928b-c3d4a4c802cf)");
unit.assert_eq16(16'h90CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #499 f0003e40-469b-4708-8982-bb76a7ca57a1)");
unit.assert_eq16(16'hE698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #499 9f6b0d98-5780-4bcd-86a5-ba3a07025865)");
unit.assert_eq16(16'h1ECC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #499 0815d0a5-b6e9-45f1-9081-77f247f7dbfd)");
unit.assert_eq16(16'h0A58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #499 ced78a39-2017-4340-bd6f-bb88d8b87183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 bab086fe-b3e8-4a3c-8e45-3ec729f488b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 90268921-ed91-42c6-8191-f21f9862935d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 2c2e70f2-488a-4e01-bd22-e9008f97cbc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 81f48f6e-5786-4d0e-af24-870452fad0c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 0b0b4515-f814-440b-bd95-7cd2611d9510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 b199b9dd-f5f0-4bd8-a5af-cceb58a41ba0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4FAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h690D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3FE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #500 322e5ef6-f44b-4358-910d-3a9d37ef35bf)");
unit.assert_eq16(16'h4FAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #500 d924cfa0-e82d-4c7e-b7fe-91a70f5f35a2)");
unit.assert_eq16(16'h4997, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #500 abfd9905-ec1b-4b7e-8408-f46646dc1b11)");
unit.assert_eq16(16'h3FE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #500 4aaab5f1-8232-4fbf-9c4e-d3e0de74ac60)");
unit.assert_eq16(16'h0A41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #500 5fa9d34c-f61e-418a-b286-4d39800a4246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 291b3711-6f5c-452f-bcee-773bb79ddfc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 c0c36b97-3ee8-4875-8518-a6436cc74553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 cfc0372c-6d8a-4cdc-aea1-46d8c0ef593f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 8edd7b4a-febe-44a6-bb46-f9eb652bd322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 1b5e051b-bcf1-4890-80c2-e368bb6869a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 c1612862-8841-44d2-bdcf-331a14525c17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF943;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5580;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #501 b6e1d292-a63c-4069-96d8-fd482edffc6a)");
unit.assert_eq16(16'hBDB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #501 61950911-b49b-41d2-82a2-3360f9f5b699)");
unit.assert_eq16(16'hEEBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #501 3bcf9633-915a-40db-ae13-6c4443005995)");
unit.assert_eq16(16'h5580, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #501 b97f2dae-fda6-4f73-8ce5-301bd28e8e2f)");
unit.assert_eq16(16'h0FB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #501 43b2db78-09e4-4604-b75d-4277bfd7272f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 90bca101-d5ee-463f-ad45-961918a0e7af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 b87fcd43-f602-445d-9bd3-0a14677b7dc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 14886f3a-756c-4191-9d09-95c98c9f2e50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 fe1563bd-3d6d-42f1-aa2c-f18ce0da8be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 ab61cccd-bf1c-4746-b2d8-f4ea99ea358f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 09e2261c-7fc6-402a-bbbe-ca3aae895fd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h70A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6558;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #502 eea5adf3-722c-46f1-bfb1-bb6062637970)");
unit.assert_eq16(16'h70A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #502 a1fd90ff-977d-4b3d-b9cc-2fb457d707d1)");
unit.assert_eq16(16'hECC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #502 a9ad9efb-600f-4757-b6b0-9f89fcd6ba44)");
unit.assert_eq16(16'hFA7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #502 b2664f9d-6446-47d3-afb9-6f6161efb4b4)");
unit.assert_eq16(16'h09B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #502 5a35477c-7de0-4167-8ac8-d755951d738e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 4d179454-896b-4e15-9529-c08bf1b8b5d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 04c7e59a-b7ff-45e4-9748-736ec04ac53b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 71bfdf49-73b9-46b9-85d3-8d492d2c1f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 39e3e9f7-8b1c-4ffb-b2a4-03489f6b2303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 b76cf308-7c3f-46a3-bb63-da3d3c8a20b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 75d1836d-1021-42e9-b613-10468c1d4f33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB2A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h416A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #503 a0f5aa43-32ad-42c8-b193-c13f41037e7a)");
unit.assert_eq16(16'hBCE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #503 8105643b-1f24-45b7-b866-7709cea25040)");
unit.assert_eq16(16'hE591, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #503 195e5d85-b13a-42dd-98a0-8b62661f3a1c)");
unit.assert_eq16(16'h416A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #503 8932aa9c-919f-4517-b66a-668892a425ad)");
unit.assert_eq16(16'h0EB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #503 4571d375-662f-44eb-bdb1-5c6d25eb07e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 a8564be6-21d5-4ca5-b104-b180ba43b22e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 c6b40f82-9d67-4aa2-9238-fccd2a1459a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 f82d6f2b-7717-4aa6-850c-db76886fecde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 ba6bbb09-26db-4f8d-840f-3f89979561eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 0eba6d69-df3e-47fa-87c1-a1b174e5dccb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 b55dd1e5-838e-470d-b2f9-9a5b48f505ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8558;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC768;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6939;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #504 e8c0de08-951c-4286-954b-95fc3dd4b7b4)");
unit.assert_eq16(16'h8558, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #504 6ba61bb4-c86e-41ee-b710-cc79f8de11e9)");
unit.assert_eq16(16'h3CE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #504 e0f23f12-465a-465b-99ee-48393051fff9)");
unit.assert_eq16(16'h6939, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #504 00a41788-5367-47d4-9951-d877fbbde7f6)");
unit.assert_eq16(16'h00F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #504 239bb695-47e5-4ebe-966f-e349b5e5a042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 30cbb91c-1333-4b3a-9cfa-0412997f7f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 237e724c-150a-4a69-9982-b1ac274548cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 62690b52-231d-4ef3-b525-c7e7fc8c6a7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 339fb80d-8117-4f98-a827-fe523faf214d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 af270d4c-c4f1-4f7b-875a-77ee464b0ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 bc62f0c3-1bf6-4503-8110-b5cbc0fc1d6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD134;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA9BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #505 8e84746d-cd95-4369-8364-9becbb323125)");
unit.assert_eq16(16'hD134, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #505 adcb881d-e604-4da0-957e-dbfee180d712)");
unit.assert_eq16(16'hF229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #505 b202b2a7-6463-436a-8798-71761f2fe856)");
unit.assert_eq16(16'h9F25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #505 c6e418bd-8fad-426a-b9bc-a5082ce5198a)");
unit.assert_eq16(16'h0CF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #505 eebe2b76-6cd9-4147-8bd0-cf4780c6be16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 f4fe7717-45be-4371-ae70-c787bfecf6d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 ad169090-d62b-47d0-89cd-3f1d8924f7e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 6edfa05d-1dd1-4130-8712-75813dea83d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 d6fe7f48-573d-47fe-857d-3b3ab2cf1743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 badac54a-af14-43d8-8e97-88d68d33578c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 fa3afb52-ab75-422f-98c7-cf92e60d3021)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDDD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4B92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0866;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #506 b3c7f318-bd56-4fe8-96e4-da516e09ee68)");
unit.assert_eq16(16'hDDD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #506 6292a84c-66a9-4bb0-95c5-7ce951e02368)");
unit.assert_eq16(16'h2842, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #506 6c545b4c-7d6d-4fd8-a467-492413ca45f7)");
unit.assert_eq16(16'h4B92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #506 10ca008b-1458-448e-99c6-36bb34be377f)");
unit.assert_eq16(16'h0868, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #506 5f3741a1-14b4-4326-ab12-b85e54052758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 2566775c-6edb-44d6-9868-e4b291dbd4a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 901b1218-70f2-4151-bacf-a1ed656ef90c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 4a3607b1-04d5-4220-82e0-39f55a2afc96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 8b4a513c-345c-4966-a18f-7e6a31ab08e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 4c0e67cf-8ef8-415f-8d22-1188ee938af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 f4a8e4bd-7ab0-41b4-87e0-0d41c5360875)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7881;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1436;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #507 a6f2093d-c52b-4ab4-9de7-263d3f3a4fae)");
unit.assert_eq16(16'h7881, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #507 841f22fa-0144-41c6-96a7-33cd8520da52)");
unit.assert_eq16(16'h0FF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #507 1e6138a3-ab24-4d82-bb7b-9305c01ee0fd)");
unit.assert_eq16(16'h0C2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #507 ffe03acb-f37e-470f-850b-47c4ba7f7053)");
unit.assert_eq16(16'h0C99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #507 38c46412-860a-4998-8422-c544a263b8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 69e96857-95b4-42d1-a4bc-38a112f1536a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 e44336bb-938d-4201-ae04-564c2ba34fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 88a00c98-3be7-4fb8-aaed-ebc8c2f815e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 abb03441-7ef8-4b7f-bada-12ec6eaca8c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 e9e48f3b-dda7-4815-9adf-fde46cdcc870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 07b53729-abd8-4ea8-8e67-8c0de974a7aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9246;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9DCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #508 bdb2a9b7-5a36-401a-a8b6-374e02679fea)");
unit.assert_eq16(16'h9246, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #508 c1c21540-d57c-44c8-af25-4cbca6af66c7)");
unit.assert_eq16(16'h1C74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #508 85fa46cc-a900-4d20-81b6-61aa76e1ff46)");
unit.assert_eq16(16'hBF3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #508 df6995a7-b663-4259-a84e-1b17d14a761a)");
unit.assert_eq16(16'h0CCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #508 3094d9af-2e07-40a5-8856-783178accffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 5538b4a1-a80b-4762-b8c9-a83ed33522d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 00ddb2c9-a4d3-41a3-92db-21e361334651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 9fc357ed-1c6c-49fe-9763-563f3e953246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 f64e1d17-0887-48c6-91d2-a16d6eeff1eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 3b5810ec-7652-4163-872b-2521f84d1013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 741b5768-1644-4d10-ae90-ce882a5d07a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h27C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h83E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAA2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0858;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #509 b3256b1e-33bb-47b3-97a8-a1d92ccb10c0)");
unit.assert_eq16(16'h27C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #509 f361079b-1b60-4b73-87b1-12ebcb55e9d3)");
unit.assert_eq16(16'h9A75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #509 2b3ec186-fa73-418d-b097-f77422d3777c)");
unit.assert_eq16(16'hAA2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #509 5b7678e7-f38d-4ba5-aeb6-0913902065f4)");
unit.assert_eq16(16'h085A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #509 1992afc0-ab02-4c5e-ba32-c1f6f88b4d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 9a8b5164-ead5-4b73-b48e-0143d21d1104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 e042739e-d266-47d0-adae-6d813e571e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 144333d1-0d8a-4e40-9019-b0703938f1c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 8e4e5a72-e3b7-490b-b599-f1c9fd9bd3d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 e22cf145-b42e-4458-8e5e-8512fc282dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 ca5bba48-d83b-4f09-aced-3e8083695e2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4DB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0960;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #510 834c0b07-ebb3-4be4-ada0-0bf545638a75)");
unit.assert_eq16(16'h4DB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #510 390edb3a-40f8-4c3b-ae07-9a3225a42c48)");
unit.assert_eq16(16'h647F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #510 eb58bcdf-b785-4f4a-ab91-e0cb1a1a672d)");
unit.assert_eq16(16'hC6B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #510 b6f82f6b-aa06-423d-87a0-f1642701195e)");
unit.assert_eq16(16'h0962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #510 702a3bd8-9b7c-4b87-8b2d-a0afab8e6169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 79242b4b-d5cd-4a37-bb64-e5927dc3be28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 161f6d0b-78e7-4aaa-9dd3-317cc64993f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 fe3ed29c-b2ab-4b24-be3e-37bdd1574cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 d0672869-9c63-4f88-9626-7ab90090ae5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 9cd93ea7-d592-427d-a200-e8b2ba4322ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 14070c72-8527-429b-9586-f81914aa49b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h27D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h981C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3ECE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #511 09e3c5d8-1b1c-4b51-b075-6651acac752c)");
unit.assert_eq16(16'h27D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #511 8efd3195-e57e-4516-b044-123b1e75ae6c)");
unit.assert_eq16(16'hF3A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #511 6f070e10-8268-47f8-b7e5-f5fcdc13d02d)");
unit.assert_eq16(16'h3ECE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #511 46173334-b7d4-44bd-97f5-1970be13298f)");
unit.assert_eq16(16'h0735, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #511 4b53951e-8156-4485-86ad-4dd0e5f4908c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 0c890a49-17e2-40ce-8b38-68b3a2443239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 70884d7b-1507-458c-a299-dcc73d091f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 73aa65a2-9baa-434e-94d4-841d16519f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 ab21ca9a-eef9-4494-9154-4cd82fb00f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 0a653176-e3ab-4a83-aca1-78f1bca4f299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 f97bd1f8-7f6f-4cd4-9cac-92faafd4f19c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h55DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h055D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #512 2dc7b91f-7294-4361-b669-5d3435d675c6)");
unit.assert_eq16(16'h55DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #512 11de9dbb-d282-432b-8fd2-760b7e1588a5)");
unit.assert_eq16(16'h4F4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #512 28d754bf-8f82-4e68-8546-cdd916081c8a)");
unit.assert_eq16(16'hDCD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #512 63a832c9-da2e-4c31-bcb0-613e24bfdb31)");
unit.assert_eq16(16'h055F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #512 8cea137f-9e01-4672-8254-5c98bb457e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 abf45b5a-16ce-440b-b17c-1040ac7eaa97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 5954bace-9cf8-409b-a2c2-c9e117e73775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 022ac18f-4bdd-41d2-b210-e5543ebd7d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 8e266945-0d0b-4c22-906e-b50c8a9dcb56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 fff56c93-015d-41f8-a86c-edc707a00250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 94338f22-4bb7-43e1-97b8-8b9e5b619f5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2D3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1634;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #513 762058b9-a126-4250-9619-3557d1b23798)");
unit.assert_eq16(16'h2D3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #513 092baae1-7657-43f9-927b-13f9e64a61eb)");
unit.assert_eq16(16'h1634, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #513 08e052df-ce24-439b-bc17-9c1df6a7f80b)");
unit.assert_eq16(16'hBA37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #513 1626a64c-eca7-4982-b7a6-d926df3d0eeb)");
unit.assert_eq16(16'h0A6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #513 e2b13d1c-c33d-42c6-83bd-2145a0f34fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 7fc4b17f-1398-4003-8ed7-67ef8b1c1797)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 eec080f8-6181-46c5-8a25-71be98634fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 fce28f4b-8ee5-4e2e-af7c-15e6f3c6e9f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 b0fb874b-e660-41e9-b7fb-ee578e7b6548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 584d337c-b3c4-4a54-99f7-5a98ef3a9a56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 c8d67082-5591-4216-a0ee-bb85e7a8d97a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB180;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6CE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #514 672fa2f5-0aa8-4cfb-bef6-3d8344179eb7)");
unit.assert_eq16(16'hB180, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #514 054950e3-2e4a-461e-9b05-07e8eae48d31)");
unit.assert_eq16(16'h8F3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #514 9266b345-1d29-4361-a3cb-1765a59ab72a)");
unit.assert_eq16(16'hBA9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #514 b8091929-7cb3-40b5-9b64-ab1efff44356)");
unit.assert_eq16(16'h0E8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #514 03c15116-4dc2-483f-b687-e3f6d9c8152c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 81f54fde-42ca-41df-8e93-e007b43e32a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 35df2b47-8783-4c37-a2bd-2e58c9ba3513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 57288bed-9f6f-433e-9c99-0c961dd6eaaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 36a26837-c243-46c7-b95f-5073584f6308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 d88b08a2-cabf-4d6f-bdd8-fd14a1a2e9b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 01070758-bac3-4ddc-b2c7-78ad56c91a0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h88D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h986A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #515 e11e18c2-ec7a-48c7-ae3d-a7c5a87475c5)");
unit.assert_eq16(16'h88D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #515 17b0fe96-9bbe-41b0-86be-e4bdda96614f)");
unit.assert_eq16(16'h1A3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #515 f9790894-2906-4ce5-8edc-c24544c13c89)");
unit.assert_eq16(16'hF42D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #515 8beb0e8d-3cda-4b63-ac7f-182ea3be0532)");
unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #515 f1e78c7a-64f5-47ac-80c6-9af951b1491d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 08429ade-739f-4cdf-b93b-cd5705351ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 1f85a64a-6d88-47fa-8416-0f30bfaad6f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 1dbaad4c-6277-41f8-ae9c-3a09b3922a8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 62936594-74ba-4367-bfb7-8c7dc6e336be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 c02bf549-d4e5-4ab1-b96d-56021e42fa23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 72dc90d6-b5b2-49de-b58b-f1a423596c81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7CC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0578;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #516 cb130814-6653-439f-b68b-3aa6a2c28761)");
unit.assert_eq16(16'h7CC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #516 3bb18f1f-a2a1-4675-a785-4ef2595d0b9d)");
unit.assert_eq16(16'hFB49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #516 988d022e-715b-4a05-8abf-4aca1d16b621)");
unit.assert_eq16(16'h194F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #516 aad3ab0d-c702-49ad-bbd0-f4a78742e94b)");
unit.assert_eq16(16'h057A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #516 ae49a835-75e2-4d1d-8735-95ab87a29703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 833b5f7d-f7ec-4fcf-8d64-d4a75897225b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 9f6a846b-8850-4e7b-878b-deebb5382642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 3b2b7d0a-9ea9-4c2d-8fc2-c4fc31b9d43e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 98dedb10-a22a-4479-83ca-a59cabceac85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 7e111831-f5b9-4252-99ba-faf2654643f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 ede47f93-a152-4f40-af08-ddeb85df6b1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1A63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h172F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD0B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0125;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #517 27105bf0-f473-4661-afe8-6d2aba99d7ab)");
unit.assert_eq16(16'h1A63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #517 fd3c71aa-8694-483e-990b-a2374cb50751)");
unit.assert_eq16(16'h172F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #517 08241fb0-229c-4931-baa2-3ac29836fe80)");
unit.assert_eq16(16'h9ED4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #517 e039900e-d19b-4f79-b7da-ce44447d369e)");
unit.assert_eq16(16'h0127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #517 8cce610e-13b0-4508-ba2a-7d95d64077dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 78b309d9-bdae-47c7-ba3c-17b9f69fed8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 afabfa45-e15d-4313-a12f-c6d6757f5be8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 6d949b7d-ab29-4f60-a194-2288f7016c9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 c34a913c-966c-40c5-b817-ca4b86181996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 5601abfa-0ae0-407d-9e30-3e2fa3fd40b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 87928f16-3864-4700-ab97-5f703ebc5e7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEAD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4074;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC4C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #518 ddcca516-3123-4eca-8b3d-4db2ddc302fc)");
unit.assert_eq16(16'hEAD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #518 2c240c6b-7f44-4e5e-92f6-b80fc62c0599)");
unit.assert_eq16(16'h4074, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #518 e5ecc673-a45a-4ee1-a115-74c76e66ef8b)");
unit.assert_eq16(16'h31A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #518 8ad369a4-602f-482d-ad4b-9803ad56153a)");
unit.assert_eq16(16'h02A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #518 8c0c70e7-c5b7-4a4b-a902-38057a7b3e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 e95a2e07-a952-42a7-9abd-ce1a8f1a8f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 29a47679-2917-49bf-a899-270dc3dbf8d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 52176b0f-26c5-4d25-8475-4d28f89f9b1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 fdcf0675-db51-4b92-8e31-0d653e2d37dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 fc9575fd-fbe3-47fc-ac86-6df420181e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 2e021e51-a819-4f63-a794-fbc069f833bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2FE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #519 ff52063b-3640-4463-bcc2-3108c8099995)");
unit.assert_eq16(16'h2FE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #519 06804a23-faa6-4c90-8dc5-8f41d77e63ca)");
unit.assert_eq16(16'hEF1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #519 74eaa1d0-79c1-413a-b433-5e8934179b24)");
unit.assert_eq16(16'hBAA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #519 afa60a99-810f-4b9b-8ed2-11f5e925f73e)");
unit.assert_eq16(16'h012F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #519 91a1d56d-2324-4b6b-8300-aac4a4450fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 963905c3-07d2-43eb-90af-4d989fab19ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 0f74b7d0-1cc3-4ccd-b48b-a0abd9070dd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 60dfc8e9-71cd-40a9-9850-2423a89d2eb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 ae078b9c-6d2a-4854-93d6-3e938d1e8041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 5d90af3e-74f4-47ab-9627-bdcd74b86e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 12ca5366-4d7b-489a-b262-8210ce64b5bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0376;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0195;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #520 98ca0a4f-c53c-4094-a5d7-490cde637989)");
unit.assert_eq16(16'hBB13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #520 2439bc58-1600-46c7-95f1-71df3454fa20)");
unit.assert_eq16(16'hAC09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #520 524d5c2b-6255-4dcf-9629-9c8e28d11b18)");
unit.assert_eq16(16'h8ADE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #520 1a7c9020-3821-4bf3-ab9f-44415081305d)");
unit.assert_eq16(16'h0197, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #520 b52d2469-8e0c-40c7-ad38-b83c0275dc4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 986814b6-8ec0-4e81-85a3-db16c32416ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 b28de8c9-e518-43c1-bcd8-5a0f341f2f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 90958692-fb57-4f3d-a8c3-b9c0a36f74ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 cea91403-5b60-4609-ba02-3db8b6c9fd74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 8d9b5b35-0f11-4d34-a753-99f711ee255a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 e890ddf6-a9ea-43a5-8a57-a3c21020a208)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC55E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #521 259807b5-b0d8-46b2-9a19-cdf7152f0e9a)");
unit.assert_eq16(16'hFA78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #521 dfecfdd1-7aca-4d58-b37d-cc73e481fe6f)");
unit.assert_eq16(16'hC55E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #521 0b5d861a-8704-4a2a-8f50-2ccd88411dc4)");
unit.assert_eq16(16'h08D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #521 e8ed2c90-e1d0-4b4a-bb01-dd55c5007d78)");
unit.assert_eq16(16'h00AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #521 acfddb2e-2c58-4808-8842-b56cb1abda5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 8fd7d92b-42b1-4c2e-97a0-b7e6916590f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 ace41552-6899-4d97-b010-63e5dd512cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 78c78ccb-6ac6-456d-b9c9-f57cdcfa38c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 23e3352f-35eb-4fc8-80ca-1856e94a8e7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 fed49432-c235-483a-bd69-2cb24c9937c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 8cd0a077-6f66-4b34-b063-2cb2be8e26dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE379;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6190;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0723;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #522 5d608fc6-1387-42ab-8dba-2f789b028b45)");
unit.assert_eq16(16'hE379, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #522 f69fb496-1c0f-46c1-8e1c-d49b9c2e0974)");
unit.assert_eq16(16'h84CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #522 92999551-7ca8-48ac-9b1a-e53fd6d4107e)");
unit.assert_eq16(16'hAED3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #522 27ea3dee-e91e-49dd-82eb-e635aa19754e)");
unit.assert_eq16(16'h0725, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #522 1beaf29b-ef4f-4d1c-bfc6-c6fce9f0774a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 d2736b7d-6f69-4f6c-a792-0514255f3026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 e53d14f8-a241-4efe-bfac-b5fd53edc57f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 bd2b7237-dcce-4b91-91da-24c423628f9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 901ab549-3b6e-474f-b860-d07890c44187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 6f6875d1-af7c-475e-8c6e-5c3c327a1f07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 1aebce22-07f3-46e5-86ad-9f2d9bb94afd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h45EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0E4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h490C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #523 0d01b23e-316c-4361-bdab-920405d84d2b)");
unit.assert_eq16(16'h45EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #523 d01d712f-19bf-4e7e-906b-812e7f006be5)");
unit.assert_eq16(16'h0E4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #523 1ac59782-f3df-4905-ba4b-12678c26fa98)");
unit.assert_eq16(16'h1BC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #523 edbee527-ad88-4bfd-8dee-cefc599fe41e)");
unit.assert_eq16(16'h0F16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #523 8d76bb9f-0b31-425f-89af-9dd130d36ab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 4bdf18fe-5fad-4693-8d64-fd29590e3068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 1a313659-32be-4dcb-801c-d30ae360d116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 c6eeee66-e466-402c-ac11-16b0c29ef3a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 8422f4b2-fc2d-4e99-b881-2c7cfb35dcdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 3dd5821c-ff3b-4a34-80b9-005ac955eb25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 dc2c6252-98a5-4467-a5ef-04d1da0d7b35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h91FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h568F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h70C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #524 297c8d93-daae-46c1-bec3-1b4b66430a87)");
unit.assert_eq16(16'h91FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #524 16864a60-8f91-4df4-8474-daf7c95b3e76)");
unit.assert_eq16(16'h568F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #524 e6fdde29-f0b1-4da8-b7c2-8fddfc4961e9)");
unit.assert_eq16(16'hF22E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #524 78aad156-0846-468b-aed9-69a3ee9066a1)");
unit.assert_eq16(16'h01C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #524 ab6f70cc-a8c2-4c8f-b0ed-c51ea37d11bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 658b2840-5d68-4bd1-b53a-5a62ae2a0f80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 bea0d250-0fc5-4453-be0f-f578234a47f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 50ebc012-12b2-4f55-98e8-3ba039fb4b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 01710337-bba5-43b3-aedf-696ae0cfb849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 7cffea02-b3a5-470e-a214-b896e9c2b386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 2418f68c-a950-4214-b0a3-3e951849ebad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h518E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #525 b6a32975-4c4d-456d-a595-88c7c424ca32)");
unit.assert_eq16(16'h518E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #525 1dcbe4f5-ffd3-4b69-ad0f-50f25a4140ab)");
unit.assert_eq16(16'h9B01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #525 f98e6997-f7d0-4af1-83e2-1731bd8c4346)");
unit.assert_eq16(16'h18EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #525 d2b4867e-0002-4c2f-8d63-b00b9844a3e7)");
unit.assert_eq16(16'h0EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #525 d7274ea9-c9e7-4713-a46d-48ab5fef1346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 46e3c438-6aff-4dc2-a76a-2ea8ef492139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 c6630658-b1e1-4b28-a5f6-c18f4c52c577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 f12ccae5-a558-4ab8-968f-c0caf6569448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 f96f002b-bc18-491e-9088-0d34c218ac07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 b2448508-102d-4088-81c5-fa2a7aec0ae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 0195da6e-d150-4d45-9aa3-b22ea145371e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC288;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4153;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8731;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #526 334c1087-e9ba-4810-a44f-5fd42be2d475)");
unit.assert_eq16(16'hC288, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #526 2349a5d4-005a-4853-8a0e-2abc9c83d9b1)");
unit.assert_eq16(16'h4153, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #526 85d360f4-ed7e-4289-a491-336653bedccf)");
unit.assert_eq16(16'h989D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #526 85de437b-025f-4a46-932e-82cb9e8eaa60)");
unit.assert_eq16(16'h0BD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #526 ce896946-bfa9-4b82-9876-b1a53e5b7ac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 9f4816b7-edf0-439c-9dff-82d5c7dcefc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 74a64d55-23ad-40c8-925c-0f215d044564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 031737f7-9aa9-4ad8-b709-ea3d942a4e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 359373bf-59e1-4bf0-bd74-271c9ea0608b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 e5d9b08a-14be-4861-a322-14972422968c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 1fc49470-ac88-4227-8bb1-1e41550d976c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1FBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h49C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0048;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #527 9b24b361-78f3-4e3c-b057-f72dee143d90)");
unit.assert_eq16(16'h0A98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #527 5af0d980-578c-42ef-b1d2-9ca49359159b)");
unit.assert_eq16(16'h1FBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #527 a94a1d03-3eb6-4719-83da-ab1308232e82)");
unit.assert_eq16(16'hC2A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #527 f46aff41-d484-44ac-a21c-623aa17e8982)");
unit.assert_eq16(16'h004A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #527 0f425c17-fb64-45ea-a65d-13ad86c3809e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 d12e4b68-b467-45f1-a8b2-e77ed71d1303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 b1469cf5-b2f9-4b04-81b1-a09a8c1c24a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 fcf98600-1ed2-4a45-a2de-d9f959902396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 d16a3e08-724d-48f5-8e3e-a7e5dd911108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 8ce6721c-0594-4782-85c9-c58f48e89a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 37167548-d008-43ec-bf11-02e309498419)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFAF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #528 00be16db-8b10-4fa3-b260-f03c644ee9ea)");
unit.assert_eq16(16'hFAF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #528 e85366b1-28be-4881-8129-9d7c780beafa)");
unit.assert_eq16(16'hC4AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #528 aa44a941-e726-40af-a9fe-fa062bb36563)");
unit.assert_eq16(16'hCB9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #528 9857f039-ea19-43fd-ac58-4192d8a10de4)");
unit.assert_eq16(16'h0CE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #528 afa93db1-dfdf-4527-9908-7b6264a56ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 a665a5a5-b3db-453e-b979-8804b26f0505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 8f27025b-2897-44fc-ab07-67caa31660eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 eed97570-3987-476a-a765-bb11de26a3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 82d68a9c-11af-4928-b19e-f291a3c2534c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 5f4872c5-1717-4cd3-adc4-bb137c7aa845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 8d36f0ba-fc94-4b28-8a67-4c077846e090)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE806;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6980;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #529 7c2d1013-d617-4d98-8997-b61134e5f7fd)");
unit.assert_eq16(16'hE806, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #529 57b54d25-1bc8-4069-bae6-0b120050a89a)");
unit.assert_eq16(16'h6980, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #529 c29d01ef-4255-42b1-bd56-caaa631b0551)");
unit.assert_eq16(16'hDD44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #529 d2b51636-e4f3-4a53-a768-c98dda3b414a)");
unit.assert_eq16(16'h0221, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #529 d95d0d33-c846-441e-a883-29f875d855a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 5df15ef7-a382-4139-8049-b18760615f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 d40d4272-4a11-4e88-8b9a-00edcaddb2fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 3a4b8b72-891c-4931-a83e-8df59857d59d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 f58eb9e7-7346-4a32-9e28-3645214c3872)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 77c93298-ad91-45e6-b9aa-3fa9c6382f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 4e150d2c-00c9-4400-aac9-5bdeea8c6fd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h65;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h140B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE2C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD210;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #530 5d5404ac-b9c0-4c11-bc12-6df8fc4d08fa)");
unit.assert_eq16(16'h140B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #530 214ca35e-4466-49c3-91e4-f1f1def196f4)");
unit.assert_eq16(16'hE2C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #530 6546edd4-d103-496d-869c-0d9b2405a5d0)");
unit.assert_eq16(16'hBA9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #530 2c81a860-61a8-41f4-9a65-a839c9afabb5)");
unit.assert_eq16(16'h0E8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #530 8127b736-0176-4594-81d4-9713d8ccdca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 71ff6645-6e5f-4e65-812a-8846af3256a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 d06089ae-7047-4b80-b3e0-6801a53dd460)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 8392a0a0-d15d-4fea-9309-dbb9ced01e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 f6abcb64-e94b-4dd3-9307-419410d163cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 50ce1dd3-122f-4b92-8874-27cf9cde1d7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 8a406597-3764-4b98-b2d6-540fc03bc442)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6384;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h147C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0175;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #531 30f7970b-dbf0-4318-8af8-1c0bd3f7c77f)");
unit.assert_eq16(16'hAA43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #531 b83e4f09-f00e-4944-9278-12486842cc1f)");
unit.assert_eq16(16'h6384, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #531 48a75dfb-572a-42a8-b32a-d5c145bbbd67)");
unit.assert_eq16(16'hD3AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #531 dc5bbd07-4292-4dca-8fc6-409eed5b3992)");
unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #531 b888a7c0-e080-46ee-8cf8-b2c33893401c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 e6a9c05d-1897-4d91-8364-78876dda845b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 356ee1d1-e403-41ab-a52c-2e19605f132f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 5db23b88-2bae-44f4-bdac-268565fb3fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 2757c228-d77b-423f-b484-2c9daf4de2f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 abe3192b-2fd7-4b79-b6c6-6120bc50599a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 21c12ac7-fb08-4120-8890-a05e6f3c6e54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEC8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3206;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #532 0b13cbc1-fc02-4956-afdc-a1e05b18cc30)");
unit.assert_eq16(16'hEC8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #532 04d9580d-fe0d-449f-ad33-ce588210c2fb)");
unit.assert_eq16(16'h7B58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #532 e5f5f46f-fcda-4f9a-b0d9-bc8119d6a5bf)");
unit.assert_eq16(16'h729B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #532 e26b9926-c1ea-443c-b739-2034fe21368e)");
unit.assert_eq16(16'h07C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #532 39d4580d-eef6-42fd-ab2f-7e308932195a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 f052c907-2873-4113-ba92-b0de285842dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 9f0b6e0f-3d65-4c1f-8bad-d5c05a3c5474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 268c2242-589c-4463-869e-ac325ef096e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 0d03bd51-2729-4d3a-ab78-5a6b32c2e7cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 427562be-3508-4259-9a5e-4e3bac0e1cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 27e7cd7a-cc34-4698-baf4-d5142472b603)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h360A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA270;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #533 b07dc185-b39a-4641-a8d2-433fd6760db4)");
unit.assert_eq16(16'h360A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #533 f32ac1e9-998f-4080-9f97-6103a07db6ba)");
unit.assert_eq16(16'hA270, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #533 109cc493-97c0-48a5-9ee8-313a73c80322)");
unit.assert_eq16(16'h10B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #533 2bbf70d6-0b5e-49ee-afe5-36f21d3765d0)");
unit.assert_eq16(16'h0D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #533 63e1fe3b-b314-49fb-bffb-36b9047fdaad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 704cef3f-3852-40a7-8e55-5708d042deda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 76eb854a-868f-4bed-b4d5-f9acf35eb007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 28cad8e9-812c-491e-b349-3fd08bcfb083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 54405a3a-23c8-4bfd-ac9c-e1af93f4154e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 60764e6f-1554-435c-a42e-b97b9ea87fa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 677fd82e-a069-479c-a454-af8dea6f93a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h40A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1532;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8D60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #534 d6eba9d8-2ade-496f-aa38-83746b1b6ea3)");
unit.assert_eq16(16'h40A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #534 083f7e35-c212-47b3-82c5-357b97b8e1f1)");
unit.assert_eq16(16'h1532, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #534 e0d882ee-4634-4a44-aa87-590ca3c6273a)");
unit.assert_eq16(16'hF7EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #534 1e2bb712-bc43-4b8d-aa0a-7841e616e40d)");
unit.assert_eq16(16'h06AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #534 12aecb52-3cd3-4029-9dfa-6c40dd048509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 16fa3762-4fba-44f6-93f7-b6cd9e2a300c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 0b9c2474-a0c3-4eb3-bc28-2fd83fd451ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 7cf19047-5bab-4e69-9f9e-678f00c4ddad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 b0689504-b3e2-4fd1-be20-cec3b7e33219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 efc2daa2-3609-463b-8cf4-df479283f328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 7b35641c-1411-4dff-b22b-428307f97cdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1922;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0427;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #535 f70a5eb9-15ce-434c-90a9-9d702407e4ff)");
unit.assert_eq16(16'h9F5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #535 e93f5d10-1ec1-40b8-90e0-a816797c46d6)");
unit.assert_eq16(16'h1922, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #535 ea27e4cc-cbe4-422a-a587-d2208592d089)");
unit.assert_eq16(16'h59D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #535 0821b96d-df5d-435a-b27a-2d6eeaa0b95f)");
unit.assert_eq16(16'h0429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #535 49c42787-7404-4a02-bc0b-9dfb70f7bfb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 1f3798b4-bf55-4c12-aad1-58271bad75f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 d6022b23-0ec2-4c18-adee-7ec2bea50859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 8fc1683b-61c2-492a-9028-c7c9701983eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 cf5e3aec-dc3f-4138-a4ba-7bce47797e04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 aecf3eca-86bc-408d-a63c-2edc24a1a86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 5cf16154-0329-4a05-bd13-dd771bfc5526)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEF03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5697;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF364;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #536 4d8f30ef-7fa2-4ef5-afb9-e78618b7479a)");
unit.assert_eq16(16'hEF03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #536 f447907e-2f95-4503-b263-2b53f1677a10)");
unit.assert_eq16(16'h5697, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #536 27b9210f-f687-4b9a-933a-f26866bef38e)");
unit.assert_eq16(16'h16C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #536 c7e4b4ba-5b91-49b5-a43d-1af7e24ce2be)");
unit.assert_eq16(16'h0D42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #536 f54a01de-0f77-4d16-8ed4-37972cd0c3e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 56d90be9-d134-4b4f-beae-721780896336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 dd5e4049-2e63-4403-9460-8fa9a29dc638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 16b2978e-cf60-495e-b902-76c68abeb3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 ae4f08e1-9c51-401d-991d-98ebef38163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 f7e25f38-9584-4dac-a92f-c1199917ec10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 d0f7648e-011d-420e-9825-2e082040d4b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8A07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h869A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #537 410f6725-a212-4814-a6a3-ef60dea7408d)");
unit.assert_eq16(16'h1E3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #537 8cf29520-c3a4-413b-ba3c-ed910e2cc927)");
unit.assert_eq16(16'h8A07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #537 555f5592-f373-4e40-9bc2-6e93ca25f9bd)");
unit.assert_eq16(16'h8B28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #537 e588bfbc-446f-424c-80d0-e990c670a2b9)");
unit.assert_eq16(16'h092D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #537 ed0490d5-b1f6-4523-abea-0307bcc44c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 269048ab-086a-4c57-a044-0fe2d57a1954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 4a57d434-7195-4fe3-8335-7619c917e372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 5bf6b83f-12ed-42d0-bbeb-12f29d57d85d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 b58169cf-e158-4664-9288-b15fd41fc01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 0a6d652d-01e9-4e70-a4db-689b9deacc4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 4e70ec96-883c-41de-aaaf-c89cb8bb9fbf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB2B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3B1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h35AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #538 a5540481-b528-454f-b5c1-2fbd255fa2ec)");
unit.assert_eq16(16'hB2B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #538 20211628-e669-4ad9-903d-3bf652d6c42d)");
unit.assert_eq16(16'h3B1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #538 17fab62d-73b8-43d3-a5af-1b277ce62869)");
unit.assert_eq16(16'hA0FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #538 1ca5bcaa-1222-48e2-a268-fcc45c900ad9)");
unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #538 e3a11cef-c973-4713-b0c6-eae39ea2bd79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 cafd4122-6b87-409d-85c1-f70ed3d739c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 739e5b58-6ff0-488f-8ffb-516a6b91b1b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 ca487d15-6d9a-4e67-991e-01df9c4cf6fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 1056b063-e13f-45f2-8743-ed9e28a6a48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 0025b921-5672-4382-ad85-9aa618caa366)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 f4964b2e-74d8-4bba-94d4-8546acaf5f1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3373;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD8F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #539 006acf95-f981-4e7d-aa54-b5b1686e6778)");
unit.assert_eq16(16'h5B99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #539 01e31d52-6fde-4f93-a2b9-f0a410ab9625)");
unit.assert_eq16(16'h3373, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #539 27e395d7-cd71-4143-86c3-c0de65ad2ef1)");
unit.assert_eq16(16'h017F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #539 afb8fb3c-9711-4965-be1e-717414744c21)");
unit.assert_eq16(16'h0E13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #539 88c16f08-c59e-4f10-840d-685ffa7c8d03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 2736449d-0a41-4573-b51b-017845a23d2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 8d4ddde5-038f-479b-8df6-9e5080db81e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 8d3691fb-d0fb-485d-962c-33be53731df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 bf62f9f8-7d4b-4298-978f-76329c9f48db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 1ea4e12d-89f0-425f-acfc-575ce90c5eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 35483589-d727-4fc3-a042-348e723bcdcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF14C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9E4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h71DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #540 3e4adcf6-7547-48f0-9bf8-0b5ef27f5083)");
unit.assert_eq16(16'hF14C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #540 516541e1-d0d4-48a8-9d0e-7c53e54c7e86)");
unit.assert_eq16(16'h9E4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #540 bdc7d60c-cf51-4e6b-91dd-0588271f510c)");
unit.assert_eq16(16'h54AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #540 fc77bd19-ee95-487e-8ef7-3f71749b37b6)");
unit.assert_eq16(16'h0E78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #540 3024b3b3-9659-4cbd-bb51-91946c3ca56a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 a9b4a18a-3469-4d6e-b78a-3ed86cd9b4a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 1cfa6753-e050-4279-9e7c-64992e041fb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 b1461f87-cd85-4fed-abc0-d335e90ed5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 5a34e25a-547c-44c2-b243-8f4402267659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 922fe46e-9163-4ff5-b55b-540c92fbe4b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 81ba66e9-8d2a-4d78-920b-f3ea35616e60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h398F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF790;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2095;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h009A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #541 4e47f4a5-8338-4c51-975b-7c37543b4c09)");
unit.assert_eq16(16'h398F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #541 66eee2c5-ead6-4983-86ea-114dc98caf07)");
unit.assert_eq16(16'hF790, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #541 236ad42d-3836-4fca-937c-0a967d716c10)");
unit.assert_eq16(16'hD979, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #541 f513ed61-3671-444b-9914-23d43f94b397)");
unit.assert_eq16(16'h009C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #541 974c8cc6-7e6e-4f50-8bdd-262652a32984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 b5d46b80-159b-43fb-a29f-a029ea28ba7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 f214e426-fab1-4606-8618-f217ce90dc66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 a78ab705-29f7-4d88-95e7-378cd26c803d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 56753de8-80e7-4d62-826e-d18408af8cd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 9708b4c1-7d76-4ef6-aaa5-c53ff0ac6faa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 dee4a4f0-0193-44bf-b486-43a9b6679355)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC7A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFC37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #542 5a075dff-7f21-4d2b-811d-51f7007d994c)");
unit.assert_eq16(16'hC7A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #542 3823009c-53ba-4098-aab8-9900918d4692)");
unit.assert_eq16(16'h71E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #542 3ed40607-9fda-4d06-beaa-4c10b050b0ba)");
unit.assert_eq16(16'hDB4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #542 fa03346d-855c-49ea-983f-501c6e92aa48)");
unit.assert_eq16(16'h05D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #542 b72343d0-9e45-4724-86eb-9b35135ea838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 a6608018-0ad2-4462-a664-c534d93cee02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 4db37412-2e72-43d5-9965-770becc7f916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 5afb087f-92f9-4bbf-bcab-6002105ff474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 43e775b3-086d-40ef-bdb1-c7ce520aac89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 5736a304-3dec-48f7-957d-87ceb9fc8335)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 96e56ebd-7caf-4d91-9208-12942dc26821)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF05B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCAF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6417;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #543 7a7c2461-ecd4-4c37-9575-3b1f2214bd0f)");
unit.assert_eq16(16'hF05B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #543 8405f219-def7-42fb-ad7f-5536544bbf13)");
unit.assert_eq16(16'hCAF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #543 a85e86d1-0473-40a0-b4e2-a7afb26a20e4)");
unit.assert_eq16(16'h087B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #543 e17b6a01-53f9-43cc-8272-4cb4dc1f197a)");
unit.assert_eq16(16'h0CF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #543 dfbab4ba-6449-4cc2-a8cc-d7c45030f7f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 9bed90d8-ad79-4ca4-9bb7-c34434a498d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 b4d216af-462f-4a7d-89d7-6f00c8c1a3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 cefab10f-7b42-4e06-ae48-2bf54e0e3e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 75a1e4fc-93be-4c4d-9a7e-396bdce73ffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 e62a5284-f763-409f-abea-3c4179e537ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 518a355f-1de8-4fe3-9b1a-a7696ddc5d72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2CDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6929;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD0A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #544 43a88492-9b06-4d75-ad3f-e682645b1aea)");
unit.assert_eq16(16'h2CDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #544 6f227728-fa2b-4beb-bf7b-f174069d2c4c)");
unit.assert_eq16(16'h6929, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #544 71d81356-de3a-4522-97d5-844cbf2b5ea3)");
unit.assert_eq16(16'hB48C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #544 1976a151-6caa-4df3-a4e9-a96202cf699b)");
unit.assert_eq16(16'h0EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #544 d9ef5eff-e4cd-475c-a9b9-bb05ddedc798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 e8820703-d4f9-42f4-a743-cd79f47c2254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 768ee5e2-3b77-4df1-ab19-9069d19e7471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 4ef80da8-1feb-4cd4-bd9a-620913375d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 946442be-b4b0-4a9b-8628-c10a1348ec43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 321aed58-2f15-40ec-986f-4987fe627a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 dc83db5e-5cf3-4e70-9ecd-10180481ca21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0944;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #545 8bd4a639-d8d2-46c6-8f4c-07959d8eb870)");
unit.assert_eq16(16'hFFC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #545 15125460-c816-454c-9579-d9d0323cc27c)");
unit.assert_eq16(16'h0944, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #545 e460de62-6716-4675-a513-fe484fcf0e4e)");
unit.assert_eq16(16'hD07E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #545 5e773e09-1de0-4403-bacc-4a3aeaaeea2a)");
unit.assert_eq16(16'h0D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #545 99287637-0354-443d-8d36-a8bedf39bbac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 afb14872-bad9-40c7-810c-8963c70340b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 d0ecfb0d-a5f3-47d7-bf40-19d87c9820a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 293a1315-398f-4569-9bbf-5f77b297f42d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 0bd2d9d9-3e97-4597-b4f1-60c9ca83fd27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 ca8567e3-5a7e-41a8-be9c-53fb742cd66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 70cb765b-1ec1-48c3-bb26-a53b46d67b9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC572;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7F33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7142;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #546 6acc21a5-eeba-462a-802b-a86162e5e773)");
unit.assert_eq16(16'hC572, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #546 9506f697-0429-4d3c-9fbd-14918dbdd4b1)");
unit.assert_eq16(16'h7F33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #546 36d4f166-181c-43f8-8da9-768cf68bb693)");
unit.assert_eq16(16'h476A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #546 072a45a8-48f0-4dda-b084-040bd8303214)");
unit.assert_eq16(16'h0DC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #546 aaebad3f-0db1-4dca-97bb-ccf23a97b553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 b4798fcd-4353-4b78-9a17-bb34b97e184f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 27f8b906-db09-4cff-84a2-f8126d4d2c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 d30c39f9-8ec6-4502-b866-ca4649aebf03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 2148d0c8-a1ef-45b4-a2e5-243484f72770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 ac53c941-b0e9-4f60-a666-d9427bb33040)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 40a0ffb7-76b5-4624-a0f8-57f30c2e22c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h618B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6883;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6EC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0815;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #547 7ac07657-0db0-4ba7-9c87-2502acbc78f7)");
unit.assert_eq16(16'h618B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #547 0b7c505b-45ba-41d1-9b5c-8bb15bf01f33)");
unit.assert_eq16(16'h6883, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #547 8a39f95b-e7a4-4160-a98b-a4c96031f7eb)");
unit.assert_eq16(16'h60A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #547 a1ba7e67-b74d-490e-a68f-b614b1bdbf0a)");
unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #547 41f11d40-2d3a-4a31-be65-7ac8f6ae9142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 3fa72e0b-e4a0-4b0b-9db7-703490cfb3bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 30d655f9-79ed-4ead-94bc-2fc4c4fedd0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 6226f04a-54ac-455a-961d-8ce3ea7a1242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 017c0eef-929d-443d-be52-7556c7a817f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 ddc7f71c-3a9f-4843-806e-d31ece4db1b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 56895958-bf7d-4f19-92c8-799eeb0506fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA7E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h855E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #548 861ee3cb-dbb1-49bb-8561-045d49657bfc)");
unit.assert_eq16(16'hA7E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #548 f83139fb-9c9a-4e47-b4ed-4e411998a33f)");
unit.assert_eq16(16'h855E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #548 c39abdef-1c6b-44a9-91b7-3a090b992ef6)");
unit.assert_eq16(16'h6D51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #548 2208c5dc-3d5e-4965-b194-3347fc06bf08)");
unit.assert_eq16(16'h0FE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #548 8dd4c485-33a1-494a-abf8-3ffe66c8362d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 54c9e038-293b-4d1a-9b84-6899b57095dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 bf161d45-4dae-4b38-b518-1e628a3c0082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 0ec4f3f0-5f57-4b71-9da0-4f099621dc6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 cf76d97a-3fef-425d-95e4-126c68b2238b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 8ff2fef4-7f61-4d0e-8533-86d89b56bff5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 580abb95-f41e-416b-9423-6045d6525ea6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB595;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6044;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC09A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0425;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #549 22c44b67-3d8b-487c-aba5-a34e88a23a2a)");
unit.assert_eq16(16'hB595, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #549 789ae59b-63d9-4870-b5eb-004b1f92cdfe)");
unit.assert_eq16(16'h6044, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #549 1e4ca371-2db8-4913-b7b7-a9a5d339c13d)");
unit.assert_eq16(16'hC9E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #549 fb647323-b952-4951-8a1e-6738d2ad43f5)");
unit.assert_eq16(16'h0427, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #549 ad15041f-b129-4432-b156-e1ff270ebbfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 ef693712-72d5-4907-abd6-48496ab1451f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 5d89e71e-ef3c-488a-b2ca-00aecf53be7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 fcdbdaf2-feee-49ee-ae0a-c30aa6dc4fc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 7e9e654c-5840-4478-846f-e37b9cd40397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 ca48cd3f-75d5-4892-9629-95201da301a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 279b7dee-1d8c-422d-991e-1d1aaa393ef9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h026A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h94BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD783;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0115;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #550 ee5783f7-04ca-4162-93ac-bc973c50f2fe)");
unit.assert_eq16(16'h026A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #550 822e06da-a867-4a1d-ac5d-c23869266028)");
unit.assert_eq16(16'h94BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #550 00d2e460-8f3f-4e22-bb6b-3243c5e8d918)");
unit.assert_eq16(16'hDBDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #550 a60a7671-3dd7-4f73-ba64-a4c2d47cb338)");
unit.assert_eq16(16'h0117, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #550 0354bdd0-2593-4e6d-8fa8-6bd539cdf778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 538508c6-1d7e-4155-a4fa-e99cdc63d781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 295b69f8-10d3-42db-b017-e8281b041441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 11888fd3-e76c-4039-9b54-10d1a79665a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 5b82b214-3d13-41b5-9c81-61b063a56aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 4523f45a-d42c-4d09-a58b-b0cdd4972e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 4b4a8752-f9e7-43db-b931-528a210b7f08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEEC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD172;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #551 d82d8fc7-7b09-4825-acd5-599f48c1eb78)");
unit.assert_eq16(16'hEEC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #551 8f0dfe01-5a63-4ca3-88a6-4c32adf26404)");
unit.assert_eq16(16'h6C85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #551 f4f0bf06-baaf-4a37-b013-a855971f57f2)");
unit.assert_eq16(16'h309A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #551 086244f8-4158-448d-8e7f-35d2dfec873b)");
unit.assert_eq16(16'h0A5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #551 8f31c266-677d-49a2-82d6-e8880dcbcdc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 4a8bcf94-80b8-4c1f-ade4-c528da047fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 b8c1c84b-a3f5-4ccb-988c-da2cedb1393f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 886f497b-2372-4990-b08b-44b80c2aa5bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 a1a1f274-1148-4fb8-a465-bdd7d9529c97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 6ec1ce92-89c3-4444-9f36-8aca6871b577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 86af93b1-e877-4cff-a5bc-b09892fa8542)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB176;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h54CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0281;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #552 1d1e4950-cc96-43cf-ab74-888576f16c30)");
unit.assert_eq16(16'hB176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #552 5d22de65-8db0-4a74-8439-85073c8987cc)");
unit.assert_eq16(16'h82C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #552 ef9eb449-93c7-4494-9d6c-4ae3567ac07e)");
unit.assert_eq16(16'h3E39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #552 c7f6ef31-4013-4b4d-8794-944e5eda7bfa)");
unit.assert_eq16(16'h0283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #552 c567be2f-5790-4030-b305-883f7eea39aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 5a2d67e0-1116-49d3-ac72-fdaa14528d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 de1b50b5-2237-4841-906b-5b179e5dbf89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 a9e3b33f-60d9-42db-9408-1fa0f3bc5c38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 64e88a8e-42b8-458a-b53b-f444ceb6694e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 a45752af-f1c1-49d8-ae69-426253dd50dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 a441e50d-1d12-4699-a97d-452d1b2efa01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h85C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #553 a7a31e27-9570-4d5d-a821-d14eeab5ed89)");
unit.assert_eq16(16'hD7E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #553 cbf1f012-7da3-4d19-8e3d-cc3821a898c1)");
unit.assert_eq16(16'h85C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #553 0e6dc102-ff28-40f9-878c-51e38ccb4456)");
unit.assert_eq16(16'h3A7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #553 0205e178-fe03-4ebf-acee-f834f96239b1)");
unit.assert_eq16(16'h0CF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #553 ece1769c-7642-4ed7-a603-baa31271248d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 71d65d87-1c75-46d3-8cd6-6aeba57a041e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 736b49d7-1413-4e5d-8654-7265d87a3870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 c8931a09-0dc7-474c-af76-55243dfbe61e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 2ff805de-ed13-4df6-a37c-7c6a8c5bc69b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 24566b5b-906d-4b06-a1e8-10c2de80a667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 817fe4e1-6bb8-4ca0-8283-197ae490f11d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h827D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h180F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #554 d5b7157c-cde3-4df7-bd20-96487daece3b)");
unit.assert_eq16(16'h827D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #554 f96d63cf-abf0-41ed-a386-3df6ce30f7f7)");
unit.assert_eq16(16'hEF14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #554 924b9a52-50cb-4531-815a-60c4e12dda95)");
unit.assert_eq16(16'h56DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #554 6e735e51-5ac0-4277-85e8-00b00647b277)");
unit.assert_eq16(16'h0D55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #554 e46b50aa-b9d4-4d8a-a76c-bd98b7d4b36a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 8c14270d-c318-4279-ad1c-6789c8691f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 0383eb09-0379-4c88-bfef-d06227a4990c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 ef25b31b-4432-4da1-a696-1d3f09f94140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 2c1ceff1-30dc-4088-9dc5-a538c8cb0bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 9c69cf96-513e-4c08-9971-558ea399d795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 ee2665a4-fc81-4425-9387-7a8fe864dca9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4E5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h02F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h36E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #555 f59c1502-8ef6-41b5-b4e2-537466be7de4)");
unit.assert_eq16(16'h4E5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #555 38ee5c98-3c75-480c-bfc1-16bc31d9c9fb)");
unit.assert_eq16(16'h02F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #555 59f4ee59-c64c-4fe1-a038-3e96878570c0)");
unit.assert_eq16(16'hE629, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #555 49439ed9-f806-443e-894d-2f7e89ea4fdf)");
unit.assert_eq16(16'h02C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #555 a8c641c8-12b8-4379-84de-058bb396f632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 5a63a1ba-5a35-46c5-a3b4-f3a616c425ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 5b3fdee9-82cc-4064-9c17-f1b0a75dc37b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 05d4ade3-67f9-48fa-9fe4-ed9119c2f704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 b008843b-ed8f-41cc-a2a2-c1933f8eda1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 904f567c-f2b8-498a-81a0-87649e8084dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 c2d9f178-f798-4589-b79f-90e20fa098a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBBAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE9B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF4C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #556 ff9eb258-ed6e-4866-a332-994056f689a2)");
unit.assert_eq16(16'hBBAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #556 2de27b66-fc5e-4974-9105-a06ecd4f3446)");
unit.assert_eq16(16'hE9B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #556 1de28f8c-6403-4cb1-b36a-129443f0eb0f)");
unit.assert_eq16(16'hCC58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #556 60942214-8e25-4fb0-9a48-4379a618aae5)");
unit.assert_eq16(16'h0ED9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #556 9f668f75-921c-4979-9196-46d63b095979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 75530641-bf88-484a-8d15-ae3d380840d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 4d13c593-a95c-403c-b7dc-1e2db3ed38af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 3a6106b6-77e1-4890-99a4-f8288ee01c0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 c7bbe624-fd4e-45b8-ac70-7fb6b69a10a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 7fa0e1f5-9f6e-44cd-88d0-8ff5a28856e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 555005ac-34bd-49a3-82f8-ce787b73400a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF74E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h729F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD8A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #557 d5df5746-f2ba-47f1-ba65-e140860f58eb)");
unit.assert_eq16(16'hF74E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #557 265a45d4-520a-4b3d-81ab-15f2f511a5a6)");
unit.assert_eq16(16'h729F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #557 a446fb05-b0d2-4acf-8663-c03750897842)");
unit.assert_eq16(16'h683E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #557 b35a770d-44bc-49c3-86cc-b369b4a8b376)");
unit.assert_eq16(16'h0DB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #557 e816967d-0a7c-41a0-8114-821b7356faff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 08edfeb9-daf6-4e1c-a3cb-1822e9ad291b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 ca2c48ab-0321-48dc-a351-7f97bbeff49f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 9271f87e-fe05-42d1-bd56-ada7c842ea4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 d17153c3-a4ac-499f-81f6-f32243e5780f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 df263cb9-9682-4ae6-b90a-08685f72f884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 f004fb21-b960-4af7-8556-48d34403cced)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEF98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7F1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0432;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #558 d366943b-2216-4c04-81c2-2a5e7de56556)");
unit.assert_eq16(16'hEF98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #558 917e815d-8f42-44ef-9410-9ed0bc35974b)");
unit.assert_eq16(16'h69E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #558 360a6fdb-de46-4383-a976-5ab92e50d40d)");
unit.assert_eq16(16'hC1DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #558 ec5d5b98-4663-4742-8d90-bfab1d584ade)");
unit.assert_eq16(16'h0434, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #558 218bbfae-0023-47af-8831-713402af21ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 83f8125d-bfda-4d79-a721-e6b86fc11245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 689c695a-d3b8-4f51-8a94-e024119825ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 aa296865-5bbb-4fa6-ad50-0032e748a497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 e309ffca-0dd0-4e3b-b3f7-eb49a39b95a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 210f4ddf-5cfb-4169-8454-baa024729312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 f13ea9af-8b89-471d-a5db-d015eabb27c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9937;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBAE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #559 f1a823c7-187d-4a89-820b-9fd6b7f7e28a)");
unit.assert_eq16(16'h2A74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #559 7e12a3be-23dd-4323-8257-225586906a2c)");
unit.assert_eq16(16'h9937, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #559 08202b34-9a4f-468c-ad8e-04a1a660d19a)");
unit.assert_eq16(16'hE338, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #559 9e87f3c5-c890-464f-a957-6bf18ee1f0da)");
unit.assert_eq16(16'h0EEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #559 96b58d39-50eb-41aa-bd02-640d55264b88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 b8642bb3-2de3-470e-862a-04f60f64a520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 e25960ad-913c-4c99-a99e-0a1204d28aae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 160388d8-4016-4038-b6ee-4c43f13228c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 cefa838a-c8d5-4564-b6c9-005ed7f9ce60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 75fcfba4-fd82-4ba3-8585-35e168635baf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 5e18c66d-d125-479b-aefe-c65ac33fcec9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h14A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8500;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #560 a57e7776-8669-44ea-ada5-3fa70c3f35d1)");
unit.assert_eq16(16'hDA1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #560 f2817d2c-8f08-4764-baa3-bf8ea830be19)");
unit.assert_eq16(16'h14A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #560 e1898106-e459-4138-beba-9b70c7d0e3ab)");
unit.assert_eq16(16'hA42B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #560 106b954f-5f28-4e68-a7f5-1f24957e7682)");
unit.assert_eq16(16'h0D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #560 e98a6e65-d061-4425-ad78-d6371858f813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 2c8975b5-2e64-4925-96bc-f54a02c981d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 6106a346-104f-40bf-95f8-49f773169ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 8da67c2d-c2bb-461f-88ec-bea1f24c19aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 6a4fe38f-25d3-4866-8aeb-3e6f191f5d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 dd8fbecc-a9f1-461f-958e-520268b22608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 c21e0d2b-c165-4457-b993-780235038505)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h531A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h00D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2793;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0515;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #561 c56dc6a5-3fb9-443b-bf32-e76b4caee65c)");
unit.assert_eq16(16'h531A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #561 5199e5d0-5466-4214-b5df-0000857463e7)");
unit.assert_eq16(16'h00D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #561 b8fe903b-ce91-4b0f-9d2b-87d9fca14060)");
unit.assert_eq16(16'h4D23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #561 bb86d528-c30d-42c4-b022-0f449ec46aaf)");
unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #561 4596931b-87df-442e-b8a6-d9a8987cd0ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 10f52a31-60ef-47c3-be3a-598b4106a0e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 525fb9cc-6e82-421d-afd6-e7e40a18591f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 c7a66b56-ca79-4b34-94d0-6d2e873ed00d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 e68770cb-eb7e-4c28-9343-662b30c92add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 37af9c77-04ba-4d6c-9138-9cd16b046418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 9c22fb74-a0ba-4666-848e-53e920beffe9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2168;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #562 65f78bf3-fb4a-4f66-9cc7-5e2dd3aaed45)");
unit.assert_eq16(16'h2168, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #562 326a890f-9620-463e-8532-2963cf90d7b3)");
unit.assert_eq16(16'h3F02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #562 3e6e1ea6-7a21-46d4-8d12-4ea94b575f82)");
unit.assert_eq16(16'hA2D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #562 df44c4e7-1df1-4053-a244-90219ce40dfc)");
unit.assert_eq16(16'h0EE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #562 b8583304-8362-435f-a216-c0d11a8b7a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 d13b51f6-1548-4323-910c-94714369bc00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 9a8b1168-9f7e-42f8-afcd-9252b510cc02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 c1daffb8-1361-4880-afab-97451908ed24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 9dbbfd26-14d3-422f-893c-996a14daa63d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 5b38a36c-dd7f-4cc8-be95-411119d6664e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 9f8380ce-b7c2-43a4-809c-d1b9762fff19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5615;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9BC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #563 7a0d41b1-9d18-424b-80a5-98c9fd1090b9)");
unit.assert_eq16(16'h5615, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #563 4410e1cb-88d7-4b4b-98f0-33953541bbe4)");
unit.assert_eq16(16'h1A96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #563 1e4733d8-0e55-46e7-8df2-1800f4604cf6)");
unit.assert_eq16(16'hD3A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #563 2abdd762-431b-4be1-ae4e-58655ecb5d92)");
unit.assert_eq16(16'h0AFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #563 e3806df6-ada6-4a1f-ba35-c0b8961b322b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 8aadb492-f0d4-4f48-8de2-24eea8b24c68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 5644a3e3-ab34-48cd-bf15-e4ded710073f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 95c3fb17-5c4f-45fd-8175-a95fa6e31177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 b1717e5b-3e02-4879-98e6-c7420618a4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 17727c6e-abd7-477c-979e-51da277fc1df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 68688a5c-56e5-415c-b2c3-9709521f2d3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h53AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h77A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB71F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #564 d74f7b53-5a7d-49d7-b14f-2ca4325113ea)");
unit.assert_eq16(16'h53AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #564 527ef3df-987c-4b15-9d8f-85621239a5a4)");
unit.assert_eq16(16'h77A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #564 c0baa916-4c30-433f-9a09-c65c74c0d8d6)");
unit.assert_eq16(16'hD4A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #564 748d66ba-7029-4eeb-a684-c67c9f622c3a)");
unit.assert_eq16(16'h09F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #564 80fc0a3d-4f49-4794-a83b-d1cb64feee0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 e36ed356-1784-4f96-8008-c75e24da763c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 e847b42f-4724-4f74-8c36-d57d3ebac9ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 601d416c-e27d-4aa8-9057-89cb264a9fd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 3e877450-7e68-4d78-8181-4d385e3fa67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 29d27f1f-f625-4455-9f5e-3a9c3678ca73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 c6a83889-219e-4385-9b8f-8242286987ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE35B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3CAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #565 416bf789-cea7-4e6a-b295-1ed4f6392937)");
unit.assert_eq16(16'hE35B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #565 c74de36e-f733-49c3-921d-3a0cd5428a25)");
unit.assert_eq16(16'h50C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #565 11c43bd8-cc74-492c-a2d1-d65f471898af)");
unit.assert_eq16(16'h8C14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #565 d4213e66-90df-4b83-a1ae-2848346a0824)");
unit.assert_eq16(16'h0D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #565 3ac6f639-4dac-4469-bc05-235531f9c99e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 71323990-c4db-458e-a351-481a619f1a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 ee84bbc1-72cb-4d2a-b729-dadbfd34000a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 7b543576-a8d7-45e0-96aa-ad1c46ff54e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 c0b78a95-f6bc-4ca1-8104-d4d30fe1c910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 abd4074d-9b04-440b-96d5-ed950d7704a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 682c04b6-be22-4f3c-af39-68a3d780eb45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA886;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAD47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0593;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #566 45411900-5a09-489d-b501-6d62e397b63e)");
unit.assert_eq16(16'hA886, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #566 48cf8de3-16a8-477d-85a5-d8bbdec686dd)");
unit.assert_eq16(16'hAD47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #566 15fc5bc5-6c80-4d57-bfdc-cb5cd1e9e7a3)");
unit.assert_eq16(16'hBE43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #566 ad339df4-9b87-4eab-940b-db0ff4d5628e)");
unit.assert_eq16(16'h0595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #566 ae431ea1-f60f-4598-8946-c428c8a05d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 9648b9c4-98d0-43b8-b4ef-b27dc617a8cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 f8b0f45a-b4f7-4d68-8dda-18791bed0b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 374faf0e-b723-4d29-9bbe-2c61e865ae4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 cb5e5145-d1b0-45ff-8e90-d58aa9dd524f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 f3de675c-1ab7-40f8-9acc-f7e42d4c60c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 df6fc2ac-3454-4340-80bb-d31848e95483)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h54C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC0E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4EA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #567 c97d3238-243a-4e5e-b1df-9b83b244b685)");
unit.assert_eq16(16'h54C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #567 dcb4121f-b2a0-405d-bed2-cf789ea0825a)");
unit.assert_eq16(16'hC0E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #567 0e31824b-a519-46fc-95e8-59f1c76212a3)");
unit.assert_eq16(16'h67AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #567 391022c8-49b0-48bc-bd55-00bbf6a8214a)");
unit.assert_eq16(16'h0301, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #567 f657755c-64d0-4f04-a259-ac1a9b130ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 0d68e223-c72b-4ad1-b075-5ccca8c78303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 2576248d-6c43-4877-b3a0-769037fafdc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 f7b3903a-e7f4-4ecf-844b-d85bb6f4afc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 6fdf5851-ec29-471f-a507-2e07025ecdcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 694c4ba6-1a51-4875-a047-fe42c8120f66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 125bd682-19a0-4ba6-b65b-cbd0083c5750)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h35B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h598B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #568 d59b12d5-38b8-4459-9bab-cb10162aa9cb)");
unit.assert_eq16(16'h35B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #568 d3b54950-95c7-4060-a9c5-750ab50281a3)");
unit.assert_eq16(16'h598B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #568 c970bab3-8270-4460-a93e-fa2ea0003698)");
unit.assert_eq16(16'hD198, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #568 18cf539e-51d3-4bfa-87a3-5c6272d632d9)");
unit.assert_eq16(16'h0A29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #568 f1b5e3c1-1bea-4d4f-84a8-f10f6cebc3a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 891bc441-bc81-4432-b4a7-a78beb999af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 e3dd7682-63c0-4241-ac3e-e762463ecf3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 d221c0e2-8c94-44fa-95cb-00bde7375c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 815ada6b-7cd6-409c-b88b-2839fd1fdb21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 ea1ac0d4-98b9-4b5c-98e9-d5ad0cc8f33f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 d5ae0dc2-b548-4ffe-a78b-ca62142c8439)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h52C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFBD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFC61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #569 d3b54e21-64bb-49c4-8925-96092031109f)");
unit.assert_eq16(16'h52C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #569 43f6bf55-89f7-495e-aedc-924d98623770)");
unit.assert_eq16(16'hFBD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #569 a9a6c087-fd4d-4a7b-90eb-4100e0210f4e)");
unit.assert_eq16(16'hDDA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #569 b9c6a077-6887-4f30-8db9-d84c0a73ade0)");
unit.assert_eq16(16'h0D76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #569 313926b2-dc3d-4ed6-bece-6676ff0e42f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 e194c00d-d7e1-44ce-b3ff-049598f20a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 ccab9a8d-6b1b-47d4-9e47-f8fd80f15268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 b65aff83-2389-4cbe-8e81-243123f13b88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 13935f61-8c62-4cd4-be86-22ec7c40a7b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 200b7b0c-0192-43ab-b045-22833c51c968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 80656e56-2164-4810-a891-a723bf9fcec5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2783;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFEF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #570 6a6df6a9-59da-41f0-b07a-54cf1dd5035c)");
unit.assert_eq16(16'h2783, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #570 714aaff1-411f-4531-b577-6f9dea979810)");
unit.assert_eq16(16'hFEF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #570 3c4dcc86-b2dc-478c-84ac-848225e8e927)");
unit.assert_eq16(16'h4D8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #570 ac72d26c-0083-4f11-a00b-0713f0019176)");
unit.assert_eq16(16'h0F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #570 bdb97a9e-6423-4f1a-bf92-599d03026b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 1fc8bfea-9810-4358-ac40-ef49e53d6eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 c5b8c001-03fd-48bc-bd6a-cb62fbd7ea61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 185bbc88-b603-45e0-9cd9-0ae354f48f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 ff0d3292-a159-406b-9770-42d642516e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 2e208265-5056-48be-9fdb-9b84dc53c9d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 b08d7b26-c0eb-4c8d-8553-bd5ad18d2f57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFD96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2AC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA0FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #571 84bd30cb-a424-46ce-ac84-8bdd2632e342)");
unit.assert_eq16(16'hFD96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #571 b5caa6f7-5f99-4095-93f6-32c4687fa832)");
unit.assert_eq16(16'h2AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #571 bcecd09e-e168-4f47-86e9-c4a00288c310)");
unit.assert_eq16(16'h7371, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #571 0896f68c-2c71-4f3f-bd58-0e7b468c52c1)");
unit.assert_eq16(16'h0DA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #571 5b221c61-00b0-49bd-b058-95c92eda9eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 f2ab6c13-5201-48e5-a27d-6812a186147b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 0d342730-130d-42a1-b578-0874b6d87b9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 47b277a6-1b23-48cb-9fef-a77772f9fb8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 bd51508a-487c-4d43-8acf-f0f72744fa15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 1489ffef-5dfc-4e2e-b351-762702a82098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 2de291d3-2e33-4e0c-8360-6a01c08cbd21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h274B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #572 3bfe6d2f-756f-40bd-820c-856e99f11ad8)");
unit.assert_eq16(16'h5F3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #572 bdacd215-08d8-453b-9633-8b00e6170cf2)");
unit.assert_eq16(16'h274B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #572 82a3f3bb-fbba-4f42-8ad6-f5b7551ecbf6)");
unit.assert_eq16(16'h2FB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #572 19215320-e35f-4dde-bf44-908c75907bf7)");
unit.assert_eq16(16'h0EE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #572 a7821c27-3d74-4d88-8382-0e6b172fa8f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 b8e3fa74-69c1-4408-af73-aa8f0e7846bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 e934ea5f-953b-47ee-98c9-e63abf2d6cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 01f0a183-d92f-4dc1-af6d-c3068fbdecc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 fcc1ef8c-1889-4e0a-9618-fecf452c3437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 713b964f-3fde-441d-aa9c-59079176d0cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 1abf37e2-cf52-496e-9350-11c271efc676)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h353E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6675;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0044;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #573 5b137a5a-5679-4f9b-bddd-1b57bad106bb)");
unit.assert_eq16(16'h6B26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #573 0228a590-e6bd-4b2f-83bb-c1524f03ffe7)");
unit.assert_eq16(16'h353E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #573 9b0308dd-66fb-41d2-bc68-92f34f06fcdd)");
unit.assert_eq16(16'h2FD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #573 4a31b644-8830-45a1-8f11-e8917f7b5f21)");
unit.assert_eq16(16'h0046, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #573 c2dec428-af33-489b-ae2a-d066b778788b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 96193d7e-e136-4f22-9422-284cc088c908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 c0445d35-125a-4874-adb4-154fe738c164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 c6aa459d-d473-45ee-9b62-a2bd2262bc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 6e75e84a-e193-4fd1-8bd1-94b259def6c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 6db0a41e-ee76-4f3f-98ec-99fb43778964)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 fa07a661-63de-4522-99c6-a3e0368068db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC603;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1856;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #574 0fbf8698-652c-488f-a976-68e251765930)");
unit.assert_eq16(16'h9B27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #574 b8c4bc3b-d7b4-46f3-90f2-f5fe21d977fc)");
unit.assert_eq16(16'hC603, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #574 4636e785-bccf-40ad-8607-eae4d2b38a26)");
unit.assert_eq16(16'h5939, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #574 767a95f4-52e3-4f95-88e9-2604fbf049f5)");
unit.assert_eq16(16'h0F06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #574 919b14bc-ff08-4111-8e2c-a2dee1176d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 83471275-56bc-4378-9925-4a35ea5b59c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 9de098fe-87c9-4386-b732-0dc51e82b32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 edd98c70-b3f5-40f9-b4db-99e4e46940c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 10cb5f14-e40f-42a3-9ffe-28913abda51e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 bc5df20a-0e5a-4d52-9315-7f01c3cfeb67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 53f1cd90-89f6-4c10-81ec-5becb906d4ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #575 75a0ec12-9bcc-4943-b952-7307bd9c5329)");
unit.assert_eq16(16'hCE1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #575 c9c0ebd5-f6f4-4709-932c-050e7790ca82)");
unit.assert_eq16(16'h6C13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #575 adfdce8f-7e6f-4875-b0b4-46518ceb2ecd)");
unit.assert_eq16(16'h9AE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #575 8f451bb0-bd3d-460c-b917-3e90db60a01f)");
unit.assert_eq16(16'h09A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #575 e8a1181b-82f1-4837-a50b-5028d1656901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 12171d99-eaf1-4283-895b-4a494f99e986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 89531162-8385-4a0d-9da2-59bc2c9fceb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 02dc1b5b-ad7b-4c4d-b3bc-f7a6d6f03d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 abe56876-dadb-48b4-9f7f-8763f1f296b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 8d096114-9ff4-4a98-b03d-a4133e5c539f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 c715520d-3375-4ece-837b-8a9daaf6951f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA3A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h13A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0427;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #576 27ca0fd3-bf11-46d6-88ca-e023c523af47)");
unit.assert_eq16(16'hA3A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #576 b4d10379-2aac-4f42-b3f8-46e951f4ae1e)");
unit.assert_eq16(16'h13A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #576 744140f6-4406-4020-a68e-69c118225b2a)");
unit.assert_eq16(16'h59D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #576 07c28689-d7a5-4f2b-a865-979193adbe16)");
unit.assert_eq16(16'h0429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #576 8318f007-9019-45b5-878a-61558bfb8e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 1ff0dda6-c887-4a0e-8214-8e1063b972c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 2740dcd3-7c79-4433-99f9-a33fcf3a6c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 e3614b61-c00f-42db-9641-61fea55f4701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 091935d8-58ab-466d-ac8b-b91299d14580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 d4d4bc7a-31e0-45ee-8ea7-01a05a27aa69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 360e88df-4212-412e-a5a3-48e020c60e2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC041;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2926;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0047;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #577 e8d3199c-0fe5-44cf-8f17-875e25b44109)");
unit.assert_eq16(16'hC041, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #577 d755b907-d338-4797-9dcf-d99a08240fba)");
unit.assert_eq16(16'hD6E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #577 176bc14e-a446-4aed-97e7-79ea8cc66153)");
unit.assert_eq16(16'hA368, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #577 7634237b-0675-4e5b-ab7d-b1a60c898dd6)");
unit.assert_eq16(16'h0049, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #577 d0631bd0-da5d-420b-9e3c-2cd33e7ce0fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 4e9faf47-fb1e-4565-9a2e-e51eb3fe24dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 7bef0f21-6e7e-45ce-84d9-cc426e62cd9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 216b57a3-57fd-4ddb-9ace-c1e752d259ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 eb87781b-431b-43a4-8573-cdb5d7e2f766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 ace8955f-5765-405a-bb33-f3450638336f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 95db26c1-c856-424c-87a1-70834782fa7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h43DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4DCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #578 d60304c4-8ffe-41e6-8de3-ca0089fef079)");
unit.assert_eq16(16'hAF89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #578 20ea41a6-cb86-49ea-9f51-44137ad23d06)");
unit.assert_eq16(16'h43DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #578 f0cc2875-5059-4f9d-b987-a12659bc53eb)");
unit.assert_eq16(16'h25CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #578 bbf25472-a3a1-40b1-97c3-9bca826ae3bd)");
unit.assert_eq16(16'h049D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #578 7aa7d74b-9a89-4404-b55a-fc1814e4e2ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 1ef47e39-b68c-4d24-b741-e9163ae2f5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 d7e1079c-cf10-4f36-83a7-cef04227a41f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 6f16c353-bb6c-45b5-885c-872353bfc219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 24e9ce9e-81d6-44ec-b4db-3695e6513594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 80325c24-018d-4048-a060-5c79b9889549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 d43793bf-ca81-47b7-9904-9deda4ae8057)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h193A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #579 3edde967-54d3-42ac-a427-0c913573f72a)");
unit.assert_eq16(16'h8E6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #579 cf1f8a6e-fb58-407f-a43a-48350aefc4d2)");
unit.assert_eq16(16'h4A62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #579 87d51ef9-c42a-427c-bab0-b0db540e974d)");
unit.assert_eq16(16'h09FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #579 05261e1f-6a70-40e9-b389-ce705be7bcfa)");
unit.assert_eq16(16'h00CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #579 2a63d1b3-5dfc-4e24-84d5-5df0cad76e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 4cd4fee2-7ecf-4ca5-b50a-2060aef1bc5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 036e8e29-4895-49e6-9180-1ac1444d88ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 18892e9a-2ae8-4c3b-b9a2-65e1fcb87fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 a63023bf-7281-49d5-9a7d-94b3d964fa96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 d1caf807-6f36-441f-99ff-f87ec645278e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 cbe402c4-4adf-4bb5-98c2-0ba93eef2688)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4732;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #580 40f8bd26-1ad3-49cf-96f4-aa5a0d9fefb9)");
unit.assert_eq16(16'hDB56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #580 f4f20ef5-cdfe-421a-9387-3d3de89f2477)");
unit.assert_eq16(16'h3D47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #580 28b6108e-71ca-48a1-958d-d0fe43789098)");
unit.assert_eq16(16'hB744, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #580 4f3b19b5-3cb7-4d5f-b472-486778c5a778)");
unit.assert_eq16(16'h02EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #580 a8c3f9fb-50d0-4b3a-9f37-807989162f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 a597a65a-07bb-43f9-bf5c-6e6fbd7119e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 f5e5eed0-ecf2-4c63-8ebf-8f1896a8d6e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 e62f78ed-903c-4d33-a6d0-815ca2d8b37a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 7ad15822-b3b5-4c89-a976-4ac20bf7c77d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 3d25af62-067f-410a-b88d-4055de54c5a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 95ba16e6-f9e1-42fd-ae63-fac4d5958b96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB997;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h24B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA23D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0116;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #581 d1e95b1a-36b0-457e-b2ad-eefa2adeab0b)");
unit.assert_eq16(16'hB997, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #581 7261392c-a35c-4850-958d-2b308ac67cf2)");
unit.assert_eq16(16'h24B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #581 bd33a30e-93c1-4f1e-9cdd-48088d1490c5)");
unit.assert_eq16(16'h37DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #581 b7a5eada-cf64-4282-b62e-f5eed4fa6779)");
unit.assert_eq16(16'h0118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #581 98d760fe-8be9-4dd9-9485-6916deb2e9ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 6fb7b08c-511e-4ea3-a173-cde21e6fc10b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 e5350e96-d3b6-46b8-9d0a-034483673130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 aa543909-21e7-4e26-8754-1da8cbf1ea5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 7bda6a58-bb8a-480e-9db1-6f6151f9ac71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 c69e573b-0c7d-4c59-888a-49e1955b2fc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 96ee59a7-79a0-4fe2-a4c5-b89accc1e91a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8471;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3351;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #582 2dd656c8-8921-44f5-b26a-f55705356ac4)");
unit.assert_eq16(16'h8B4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #582 fbc834a3-5d50-4393-a100-dcb701872046)");
unit.assert_eq16(16'h8471, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #582 12463d57-80dd-4c2d-b992-6ef651c65f26)");
unit.assert_eq16(16'h14B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #582 091a415e-86ae-4eb3-8309-2157d1431f84)");
unit.assert_eq16(16'h04F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #582 0db78304-abe5-41f6-8cd2-73015669158e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 a8352ca7-1966-4186-9308-67fdf23ad65a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 3884576a-0fb1-4243-b465-79f338084145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 4561abaa-c202-46f9-ae14-da1058b6bcd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 f941f71b-289f-49f3-8e86-60886fc5fc15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 6822481c-d8a7-496c-b6c3-32c0548ac162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 57da5e4d-f3d3-4bec-8a70-8b194741a7ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h38D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC55F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #583 58bb1323-591b-4e47-9ac9-582469c8f15e)");
unit.assert_eq16(16'h2A3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #583 d3654c94-3eeb-4e0c-9638-e59663af8cba)");
unit.assert_eq16(16'h38D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #583 5850e680-7712-46bc-840a-fdec032551f8)");
unit.assert_eq16(16'h77CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #583 561e924b-98bf-40f8-a62f-3f55b0b47340)");
unit.assert_eq16(16'h0ED7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #583 c05c3fe4-c512-4ad6-bf4a-1f6f48da6926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 e16b2034-be78-40f9-a113-a75c257646b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 1d6e8ad8-bc6f-486a-a71c-19ef4ffd85b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 c327069b-dab0-41a9-a841-c58f818d07e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 8c570843-9e6d-4421-989a-f3354704c347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 63ff4e8e-601e-4a18-a0f3-51410809b468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 b76be9af-8107-454e-950c-e678a357f4c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6409;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #584 34450d8d-17b5-4ecf-b137-fb2048258da9)");
unit.assert_eq16(16'h6409, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #584 711c2852-026b-4a7d-b06b-29b8d977f03b)");
unit.assert_eq16(16'h3D18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #584 169e2424-2724-49c0-842f-2ea69dc1e9d8)");
unit.assert_eq16(16'hFBA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #584 a16b7196-c577-4f99-8d60-a9e83c26f9a3)");
unit.assert_eq16(16'h0F53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #584 ea2d45b5-94f8-48c6-8938-269cb3e7fe96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 7febd851-4181-4654-bc2e-6d37b4925fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 53b5e414-63a6-40f7-8a75-e07f12c03065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 a8c82669-33f4-4caa-bf30-2f58bff195e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 91cb29c4-7d33-44d8-8b0c-088801a3eae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 1b4f076f-7c85-4f4b-ac94-59e7a808ee87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 dd24221c-a783-4f60-ae97-017768613ed1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE4A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h431E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7790;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #585 086197d4-01d3-4135-8b63-2f7182699caf)");
unit.assert_eq16(16'hE4A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #585 5893f3a8-06c6-4f7a-b4c2-dce98d0a8ab8)");
unit.assert_eq16(16'h431E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #585 aceeb67a-6e8a-4f22-ac01-193df102f806)");
unit.assert_eq16(16'hC87D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #585 061a63d4-8906-428d-9171-09a100756bc3)");
unit.assert_eq16(16'h0E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #585 6797214f-19f2-4bc0-ba99-04cd11f479c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 7a99a583-b0bf-45be-b9c6-72c9afbf5310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 fd092657-c665-48b8-9ef4-0f05033b61cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 db78036c-693a-4c2f-bcf7-a81a7809a0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 9163a9b8-52e0-4c13-9ed4-1b4a92a096d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 6d8d7f79-f883-4100-b2ec-7aa5e91880c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 5330cab4-00f2-4fbf-bd87-9d32410b9913)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8C7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #586 47f9acf6-ae2a-44c1-97b2-99090637ad2c)");
unit.assert_eq16(16'h7E71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #586 522dcb41-d44e-4d54-9d8a-a0455ea5dcec)");
unit.assert_eq16(16'h71DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #586 c44a3ee6-bdd1-44d0-b5aa-eaf12ed3e16e)");
unit.assert_eq16(16'h8C5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #586 ff90ed79-bb33-4b7c-b203-0fbea96abecc)");
unit.assert_eq16(16'h0DA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #586 a5773ea6-2389-4a8f-96d9-70bfdf3c31ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 b44dcd38-c36f-4814-bb1a-a0c13f3dc677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 2b1e972d-8e78-46b7-b172-4e35ea58a114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 b87c2a0d-59b5-4a5b-a6b3-8476152e2b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 bf5316b3-7438-47ed-8ef6-bfea2e2d8c06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 7a2c5093-7904-411a-944f-4034db06000d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 28e80a68-ddbb-4121-9fa4-e4be3872f5c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h36EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEDD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #587 6649565d-a61a-4b96-aa0e-4e00fc2ae99a)");
unit.assert_eq16(16'h2DE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #587 95ca5e75-c211-4e2c-85f8-843e31945566)");
unit.assert_eq16(16'h36EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #587 5fe5e53c-52ce-4735-912f-35a29c0ac611)");
unit.assert_eq16(16'hC001, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #587 cd594f5d-c61e-446d-86bf-0f0842e65144)");
unit.assert_eq16(16'h0ECF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #587 e01a2151-1e2c-4aa8-a704-e95d9369951f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 495413c6-2776-4e01-b320-ade028a4766b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 7002aa64-89b3-48a7-8f1b-3b5bf8f62322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 e910a467-6575-421b-946c-6147166fe372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 2e090423-4356-424f-808a-f41b81ae1793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 f2ffe3ab-3ba4-4db2-96b7-a7a1475fa834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 c5a86e27-2b8d-4fb9-bb73-8891edebc8e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBF86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF11A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #588 c5de203e-6b90-4c5b-abe8-ae9d85abba68)");
unit.assert_eq16(16'h7FD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #588 a39ac69a-29f2-430b-973c-12a0fe9e81f7)");
unit.assert_eq16(16'hBF86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #588 2eaf3aaa-c109-45c6-8bdc-ea27e1d30c09)");
unit.assert_eq16(16'hD1AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #588 23cf1dc6-65f5-466c-b307-afc837f772d0)");
unit.assert_eq16(16'h0DAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #588 0f68d2ad-be2e-45bf-80bf-c71466d433dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 a46b0aba-abbe-4803-bc2a-734523ac9af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 370fb883-1208-47d5-9b00-5bb008933d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 ce1c211e-a77f-4fee-a51e-c270931a30ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 2f26f9f2-5470-49f7-aa5f-f81d433292e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 31f842ed-2c09-4f03-a5e7-5ad2cb7a7530)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 6e227f9b-ff90-465d-8b54-f43b09d7dbc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDA5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #589 a8b69fae-d7cd-40cb-869e-5b5a09256a43)");
unit.assert_eq16(16'hDA98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #589 ad936de0-0a9d-4edb-b582-c24233df507c)");
unit.assert_eq16(16'hDA5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #589 d479ea50-494a-4945-8205-753168771f7c)");
unit.assert_eq16(16'h1B26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #589 e0cf6174-1ba3-4e97-9765-48528b6039fc)");
unit.assert_eq16(16'h0B93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #589 7ccc499e-1de0-4eb9-8d99-87bd758221e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 f449f8b9-0d61-4921-a163-1cc1d026b135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 cfde17ca-488c-4309-b532-625a2f5792a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 b8fc26b2-0f5b-415f-8048-ce1c09eb3433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 df15f6d3-feff-4b57-be7e-fa16c053c2d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 21b89fc8-28f7-40bb-b7dd-86b46dfdf486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 43ed691c-9f5f-4629-8b43-9ea1ebc6aaff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5FEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1ED9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h25C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #590 6e31e5f8-5741-4957-aec6-e7f26871a307)");
unit.assert_eq16(16'h5FEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #590 33b84430-aba0-43fb-9a06-c3fe02884172)");
unit.assert_eq16(16'h1ED9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #590 1c643678-0f2c-450e-81d2-4ba95d7313e4)");
unit.assert_eq16(16'h0E29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #590 cfc56ef7-6583-42ea-820b-6451c18c9ad5)");
unit.assert_eq16(16'h04D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #590 97ad4e5d-49ac-4b0c-affa-820fd6f30a86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 9ec8c14b-1ed1-4963-8dc3-3a7c60eb6cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 80f63020-ae2e-4abd-a384-168df22587fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 2125658d-fe55-49a3-a001-52f89abb4d7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 8452607e-3fad-43fc-a8c2-f4fd0af3e8a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 b4fa274c-80c1-40a5-9609-7320463cc37a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 b78df771-b5e0-4f44-8b2d-d728ea886ead)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA459;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA9A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h330B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #591 650a80d5-4cd9-4c3d-a381-e91749709521)");
unit.assert_eq16(16'hA459, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #591 4e26d585-af77-4fd4-b127-a7af232e5974)");
unit.assert_eq16(16'hA9A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #591 01978d61-acc6-4ca4-8cd2-92dce0413ee6)");
unit.assert_eq16(16'hECEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #591 eaa518a3-7d62-4100-8a74-7bcb6b216f75)");
unit.assert_eq16(16'h02BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #591 0b505790-5101-4628-8499-005a7e1f83ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 c7e4f6b4-ad15-4ea2-817c-0158ee4480a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 1d46d1ac-3113-4559-9dd5-24914d4c2cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 c48a4a7d-94a2-466a-831c-56381ea16ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 fedbd692-2326-4e85-b12a-d332eb1e7c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 308aa8d7-c4e9-46bb-b201-5f3d5e0a64e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 e758c8dc-dd58-4040-ad01-214d45b4d921)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h03E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5811;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #592 8a85ca64-61ec-47a3-98ab-ba5cdc82f29e)");
unit.assert_eq16(16'h03E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #592 2a59ec9b-61b6-4c2d-a248-1e7e60bbba7f)");
unit.assert_eq16(16'h4C1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #592 02ac74ac-c387-4274-adb0-3ac1f3f55e42)");
unit.assert_eq16(16'h86BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #592 f22d60bb-9094-4dd5-9786-f433b10ed709)");
unit.assert_eq16(16'h0CDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #592 1908c9da-a3db-422a-89eb-57c7990b1a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 b9d52515-d4ed-49be-bd8f-8ce8e3ced53b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 3a425a4e-aef1-4051-8ec5-34993a9e8501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 e67e1b39-f51f-4224-a6cf-d59689bae42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 1b5cd099-7ab4-4aef-a016-dbd662501cf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 d72e419f-e840-4d61-a20b-b78d5c327252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 4b6ecbd2-f3f8-4fa6-b219-650413fa3207)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0E8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCD40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #593 ec0eff43-ac7b-4b5b-855e-d1e02475b443)");
unit.assert_eq16(16'h9B32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #593 718f4498-8bb0-4f5e-ad6d-1ee9cf6c3dc4)");
unit.assert_eq16(16'h0E8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #593 73ec1d45-cc59-4a47-b2e7-f300d61b078f)");
unit.assert_eq16(16'h41ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #593 f4675f20-4ac0-4fc2-9318-164c04698edd)");
unit.assert_eq16(16'h0B82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #593 923a7cb8-e6c0-42e4-97b2-a9c7549195dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 55fe2bc7-6547-41ab-af99-7d7afdd8e6c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 55cacce8-748e-4583-9601-789be9deebb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 fd92448a-e492-4629-ba5e-4c354ac4ec61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 a9c26344-2368-4449-a1c8-91022e75e802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 70baa914-b2db-43e1-a94d-bdb0768ff9d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 5face350-266f-4a2b-9747-5df480042e0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4F73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h933F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD97A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h072C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #594 41ea8674-797f-4ddc-8773-1362dde72522)");
unit.assert_eq16(16'h4F73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #594 95762c46-f26f-49aa-a3aa-b55d479f7087)");
unit.assert_eq16(16'h933F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #594 478b8f54-6efc-45f4-a1b6-18614967e2a3)");
unit.assert_eq16(16'h79BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #594 275bade6-8db0-4f8c-9100-0cd5c64685af)");
unit.assert_eq16(16'h072E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #594 9fd154b9-9d14-4675-afd1-f4e7a6fc6033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 13c52cfb-ebf4-46e3-9a1d-df0865d29a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 ee5e6d3b-e0ba-479a-a2cd-0066fa62b535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 c117b10c-ff0a-4f28-88da-9cc77e27d9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 e0f50fe5-fe5c-4e2d-8f15-78517a9bfa98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 eaf0c701-17d4-47c9-ba5a-ab1cb513e3aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 c0b98223-fb9b-43e3-a7a4-055b75854551)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD695;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8CA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1A62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #595 507b7071-1fa9-4206-b06c-a7807456e43d)");
unit.assert_eq16(16'hD695, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #595 c7d639e8-e53b-4128-b8e9-1a8bae37be71)");
unit.assert_eq16(16'h8CA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #595 be063d2f-e44a-40e0-8d08-5691e4f893ae)");
unit.assert_eq16(16'hE624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #595 7fcde8d8-6754-4ecc-adcf-982b6e1b96e8)");
unit.assert_eq16(16'h0AB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #595 093198cb-2a05-439b-92bd-2c6a4608733f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 d5dcf2f4-e73d-4027-9381-0a05cf7e0e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 51f2c2d7-6a66-4fdc-a523-f63b8cbda7cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 d081f22b-c57a-41cb-b92c-85277e4db88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 29fb4c00-d400-4fa8-8b07-2b66e2ea6709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 3fc5acc3-3260-400e-a6b4-9305120f6d92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 50b038b7-3c59-4bd2-bfd1-2fc087938cb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE8C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2871;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #596 526b97de-e92c-43a1-805f-b72e1dd09a2c)");
unit.assert_eq16(16'hE8C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #596 0da4cc7f-40bf-4fd5-bef4-8688eae8022b)");
unit.assert_eq16(16'h30EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #596 957c84e0-4cb0-45d9-bcad-83610d6dc824)");
unit.assert_eq16(16'h0A7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #596 3ab02532-c5bf-4fa9-893a-cd4ccd6206fc)");
unit.assert_eq16(16'h06CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #596 8c0ba11d-f1d1-4983-8208-3e7c18c9ea24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 077f56a3-ea92-4a4a-8cdd-1c8e8627b62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 458b2985-33e4-401d-acbd-6a79804fdf1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 4b717da0-89df-4899-8a15-345e0f4cb2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 7f5988f8-6634-4190-ac91-49d0301300d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 f15f5f1b-cbbc-4fff-8350-3bf79999f302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 64317453-c751-42f2-bff9-bc2fc5e3a4c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0495;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h39E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #597 bdac001f-165b-4ee4-ba7d-9d6d7c427c74)");
unit.assert_eq16(16'hFF90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #597 c8a897c3-b2b6-47ae-9076-590f5dcf3ae8)");
unit.assert_eq16(16'h0495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #597 99808bee-275b-4b86-81a1-3837a0925680)");
unit.assert_eq16(16'h0A34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #597 c61b6a5f-6eef-4f52-8b62-585534ab9923)");
unit.assert_eq16(16'h0BB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #597 27c03eff-ce9b-47bf-a951-572c4abef6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 f14359c7-3f58-4656-abd3-5cd7898eec8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 85b89bf3-69d6-4f22-9cb6-14a2eafb7213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 506f58eb-4a93-47df-9e51-af7b22232b1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 5200838a-df42-434a-a820-f61b8a772650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 81359aaa-0ea8-4efa-88be-d82b3bc48f9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 3b599ea7-7fca-49db-9087-0e8007d4531a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h131A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2C98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF550;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0255;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #598 d8889574-039f-422e-8ff8-ce214befa708)");
unit.assert_eq16(16'h131A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #598 fe7a7401-41f7-4daf-8e9d-2c631922cf72)");
unit.assert_eq16(16'h2C98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #598 344ef2b3-c346-4ba7-8615-414525bc63a7)");
unit.assert_eq16(16'h184C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #598 fbbe7024-8a2e-4c31-aedf-97d6af64c2fa)");
unit.assert_eq16(16'h0257, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #598 cd59799b-4f5a-49ec-827c-92e4233b1870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 b32251a0-44b0-400b-a4cf-e21858b1916a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 9c421e04-0ee7-4fcf-b322-8ac011a9cbc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 cf2ed4ba-6339-4d13-9ac0-a636401799e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 80d5dc3b-377d-40d0-addc-49ce698e3b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 92ef8257-85c7-401e-86c9-82e96d864713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 2cd54069-333a-4f6c-a3bc-8617c471a239)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA384;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEFF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #599 99bd3b10-2d07-43f4-88a1-5b7c1dada531)");
unit.assert_eq16(16'h7FD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #599 444a4d51-f7a9-407f-b349-676fd276be36)");
unit.assert_eq16(16'hA384, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #599 f8846325-ead9-4e9a-9fd4-4e899b382ef4)");
unit.assert_eq16(16'h3B91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #599 76258515-7f7b-4a1b-881e-4e58f4311a33)");
unit.assert_eq16(16'h0311, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #599 41dda88e-c816-4443-a01e-d94d73aee4bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 9f34613d-73df-4bd7-a02d-042654c94648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 c6599f31-1deb-42c6-a3dd-b9cb653914fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 6bd1d48d-ba68-4f1a-8457-712bef62adaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 8571524d-5bb0-44e9-bfdf-82a6aa9be961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 1398ba34-bde4-43ea-991a-af003451bd1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 62cea099-77e2-4fd8-9b6e-0d439eab6eee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h01DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1444;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #600 f709a15d-540b-4ed1-b522-806c7b72de6b)");
unit.assert_eq16(16'h01DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #600 1f015b2b-9bda-4149-9a0b-e464eef57f8d)");
unit.assert_eq16(16'h6A75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #600 e46b97c9-2598-46c7-89cc-62b6d00d12e4)");
unit.assert_eq16(16'hB142, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #600 f103c0a9-f43c-4947-bf30-be6c7ba8d777)");
unit.assert_eq16(16'h06D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #600 e1309e6b-36fe-40fa-8b35-96db41ca3186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 c9b0df0a-339c-4d56-adcc-368fc6becb3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 eff08045-28b1-45c7-8c51-634d9064144f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 b9dd09c1-dc77-427a-845b-a345b27aa09a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 27fe8815-f998-4ff9-96a2-94f41f5bbf21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 23bad909-9d71-4f45-94de-e686bd5752cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 982dd5cb-c728-44cc-ab7d-36536b40c500)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8BBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6912;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #601 0844798d-3a41-4cf7-a6db-503a8cc18f43)");
unit.assert_eq16(16'h8BBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #601 e2fbbe86-87c5-4721-9210-fbe3478f3337)");
unit.assert_eq16(16'h6912, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #601 92634d2f-93d7-411c-ac5a-65c8e255b654)");
unit.assert_eq16(16'h89BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #601 cae293a5-7aef-4f6b-8b5e-843215ff6c1a)");
unit.assert_eq16(16'h0B40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #601 d70a8ce4-8d80-43f0-884d-cd2322e18b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 b5760328-dfcf-4060-8876-5717c3f7a9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 6f6ca315-2d0d-4410-a596-8a43e5159722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 07ef308d-3744-43c1-b074-1e01740a5c7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 a3b6f952-d390-4e77-8592-718249353ecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 db6270e8-e57c-4d58-b828-9d5daac84500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 8a714fdc-76ab-4da9-9942-5f64662ecf5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h546B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8223;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #602 c9f58277-29e2-48a3-ab95-f09456948ebf)");
unit.assert_eq16(16'h68A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #602 a12bd32b-6960-474b-8706-06396f10d66d)");
unit.assert_eq16(16'h546B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #602 f75804f6-4833-4e95-9a52-6f1d2d63bfbd)");
unit.assert_eq16(16'h8C14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #602 f8832951-94d9-4d63-9e87-c5738432d5ff)");
unit.assert_eq16(16'h0D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #602 eb91da0b-e505-4f1d-915c-1f7feee230ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 ae4c7247-df7a-4326-9ab5-dfd80d2158c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 dfef788f-d3d5-4a99-96ab-2600070713a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 84e86393-c2df-466a-ab5c-47505440c99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 e416f41b-6a42-45cb-a64d-838db9c0c86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 3253a8e1-ace1-4b8f-abdd-d0cc58239a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 0459dd8e-732b-4f25-8a07-a8db97e363c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7409;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h64E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9AE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #603 cfe14712-b7a5-4185-b446-f207e2492073)");
unit.assert_eq16(16'h7409, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #603 6ae690f5-8ae7-44cc-97dc-dcc709f83a89)");
unit.assert_eq16(16'h64E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #603 9b68062d-9bbc-4e4f-9689-59cb7d48324c)");
unit.assert_eq16(16'hFC4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #603 44b7f095-a00f-4233-9a21-2426c2ffc10d)");
unit.assert_eq16(16'h06CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #603 f97b5a4e-8542-437e-bdc7-24215b381216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 fe7d03b2-a4b2-4417-b000-aa62f2e3c2a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 edea0c99-d048-4870-8b7f-6935a425b567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 f31eb5e8-60b9-4c28-85dc-dec6517ad790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 58eca675-b824-450a-a897-573bfc78e663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 fb5dac70-bc84-4f61-9bc6-d0d2e077e95a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 68cf7153-98f1-4912-a396-d910e64a69bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3772;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF14D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9814;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0888;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #604 049689cc-5158-4b0b-892a-1e151f8ae920)");
unit.assert_eq16(16'h3772, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #604 50540b32-d917-42ca-945f-fd2d098629ee)");
unit.assert_eq16(16'hF14D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #604 719e09a4-722e-4554-967d-8e7fe76d7c0b)");
unit.assert_eq16(16'h47FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #604 473d32bf-6b82-44ab-8787-59a18af63aed)");
unit.assert_eq16(16'h088A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #604 da7ab717-8956-4fb3-828e-61f7634b76f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 a0aaa875-2035-4af8-abee-c42cfdd40572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 647bb139-e1d3-4d47-8fc6-81304145a50c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 60e39698-c55e-44f1-a5a3-d3d8632ffa24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 7e11a7de-e682-484d-825d-4405d86cd9e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 69ae3153-92e1-4535-9232-69bc3d2869b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 eb8478c0-f612-4cb3-99ba-912580370c8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9067;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0AEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCFC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #605 6144fa13-fa52-4cc1-8155-c9aeb2377a6d)");
unit.assert_eq16(16'h9067, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #605 9a3d5a30-5ad6-42a7-803d-ba9f8af2570c)");
unit.assert_eq16(16'h0AEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #605 97e7eb15-3671-40f0-b739-7283fb179e4b)");
unit.assert_eq16(16'hEBDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #605 b86e9902-f407-4285-800b-8b69a5e5c01a)");
unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #605 a4918c6e-2904-46ca-8594-0ea270c04c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 e547003e-242a-4fa0-98f4-1faf6292e544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 485ef478-805e-4e7d-8d88-4d57824ec4a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 7e80a9be-1f26-4faf-82a1-48eab3f36617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 332a77d0-545e-426d-b8c7-e59e930dcbd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 fe6d589f-03d5-4676-9995-df069c2f25d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 899fd23a-ce2b-4c46-99ad-55ffc470bf34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0861;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCE74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h038D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #606 0a7712f4-45e2-44cb-8a27-3cca698d7329)");
unit.assert_eq16(16'h2B54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #606 78a5c278-2f50-49a5-b8d1-5a05e2ecfe4f)");
unit.assert_eq16(16'h0861, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #606 418fab68-2200-4bb5-8a9a-c97c243e9df6)");
unit.assert_eq16(16'h925F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #606 073852de-1908-4d28-862a-d394f948c89d)");
unit.assert_eq16(16'h038F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #606 e5254572-802c-4439-b6b0-c86ea1a65893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 9b404cbc-b59a-46d7-b1b1-e0e173ab6db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 e2292ce6-fe72-47c9-a9af-59060b81dbb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 9ad9efd9-101a-4023-9810-1af276ba8384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 0f40b13f-8af3-4812-bf69-22a0ba8f0d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 03c4fce1-512b-40b3-9c32-8cf3b5cf8bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 071f4807-2861-400a-84b9-9e04578fc3ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAEF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC7EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #607 03753739-81d0-4f32-a385-f32944048b3c)");
unit.assert_eq16(16'hDF24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #607 4807bea7-7576-4bf7-a072-da7d139c112f)");
unit.assert_eq16(16'hAEF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #607 64411fba-dad5-42c7-ab75-a173bef08c68)");
unit.assert_eq16(16'hCEF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #607 0a9d2ddf-9085-4e86-8a6b-f8b05fe4895d)");
unit.assert_eq16(16'h0D04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #607 ff1d46ab-e66e-4610-9ef3-594ca64d972c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 c935104d-2c48-4f37-88c3-9c879279ffa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 bfc842de-c4a3-474b-9e67-0d24f48c36fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 238cc8d0-b288-4e8a-9450-b9f3a7a08126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 7ffef8c8-738f-42aa-98ee-27f882982c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 75379b1e-d464-4762-94d5-7e5986dd45f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 d20e243a-68be-4478-a481-127edf54aac6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #608 af4806b9-3656-446b-a062-60116bdf4014)");
unit.assert_eq16(16'hCD1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #608 9945176b-4475-45fd-a0a0-163797d1f2a2)");
unit.assert_eq16(16'hB0B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #608 2b0a4ef6-74a7-4595-81ec-412215bc36d4)");
unit.assert_eq16(16'h1E33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #608 7d169195-6603-4f0d-93dc-03284874f87e)");
unit.assert_eq16(16'h0A65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #608 bede6924-e15f-4f91-ad06-91d7971248df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 d6400a90-248f-4f18-aa38-8efd5c60e1d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 5084f0f8-d3cc-41c2-a10c-57e5df90d136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 0e3e404d-8836-45a8-b5cd-bdae3f7a9185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 5faf95e7-7f5e-4333-b438-edfe4f14d3c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 dde93edd-bd62-465a-a9bb-01c5c3f58f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 2e4e3132-e570-411a-8bc1-808eb6551849)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #609 de763d9b-be87-4bc0-8d97-97f38c423d07)");
unit.assert_eq16(16'hD2E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #609 ac4e5c06-8d39-4950-9b13-ed07d2a205dc)");
unit.assert_eq16(16'h5D38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #609 56b3e2ab-a591-4f0d-a909-75500fe3d8f5)");
unit.assert_eq16(16'h01AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #609 e9b424dc-a1f3-4d75-8e69-3b838b78413d)");
unit.assert_eq16(16'h0E02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #609 f0f0ae3b-c124-493e-ab15-dfef06db585d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 6e0f28bb-786e-4b7c-93da-e48edf08f017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 23ec8ffb-284a-4368-a4e2-8618a8365d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 06323276-675c-4212-8d59-cef263ada225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 1eabd24a-1a16-483e-968b-16c3ae1d66d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 f21384b6-3e4b-4f13-922e-caaacb514198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 fb517aa8-f609-4833-a95b-392bde20bcfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1BBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h668B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #610 ab7cbb6b-77fb-4466-8c85-06d0386ac270)");
unit.assert_eq16(16'h1BBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #610 142a520b-ba7b-4d4e-959d-505ef69162c6)");
unit.assert_eq16(16'h668B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #610 3e63564e-f024-4d8b-bc73-82ccd281203a)");
unit.assert_eq16(16'h5A93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #610 ee68e86d-84a2-4521-ab4b-3a6991e16d1a)");
unit.assert_eq16(16'h0DA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #610 1fff0e68-bb9c-43c1-8a3b-e3979b7664fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 011faa79-cc09-479b-a7c4-19e970c5f528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 3c029a65-6c80-455d-aa88-4c263079af1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 413509f4-577f-42f4-b121-76f1603ddf2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 6f65c80c-6d1b-404b-9fae-83e7e7d534af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 e20dac7e-bc9a-467b-85d7-0b400a802600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 85b7159f-45bf-4813-ac8e-a72d13d9b120)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h66A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #611 ce3def47-312c-4b1b-b6bc-6f9fb1fd76fe)");
unit.assert_eq16(16'h1E89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #611 b8911010-f7ec-432d-8353-3d8faa3e9269)");
unit.assert_eq16(16'h62BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #611 ad58cc6f-30a0-43b8-864b-21ff26e6cc4a)");
unit.assert_eq16(16'h8D8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #611 0708bac1-b2e2-4511-846c-5676223b0f46)");
unit.assert_eq16(16'h09AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #611 f6315e2c-c74e-4a63-a985-28db4fa12aa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 f593a765-eaf9-4a88-9d0d-772cc239c683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 a3124393-8b3e-4605-af0b-6489b187aa47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 92d916f3-d598-49e2-bf76-4d0e123ac28e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 d6619c36-3a87-4871-8015-d613ba58318f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 5efc2802-931a-42dc-8097-4c7e4942885c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 63c0524b-e6fb-4562-844a-af7483510497)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3500;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB807;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #612 c6002a65-a7a9-4a2d-9144-1d96b3fd2903)");
unit.assert_eq16(16'hDEE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #612 ad2504fd-44a3-46ff-846e-ec6d1ba238ab)");
unit.assert_eq16(16'h3500, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #612 83c693b1-6455-4b77-868d-adcbb41f0c97)");
unit.assert_eq16(16'h4BBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #612 fbc10444-c8a2-4ea7-b6ea-f8ea53d17208)");
unit.assert_eq16(16'h0831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #612 80b0d6da-2e8f-463e-912e-a4a7de267e08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 4a019175-a1e5-4297-8d0c-63c51cb14296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 9529c6ec-1379-4bfe-8dd5-e3da6d522b3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 40ba6e6e-168e-4571-885d-7926f7b0281c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 addff3f9-c8f3-4c2e-98a2-e00344e821c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 444dfabd-46f3-473b-9d84-db027aad2f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 e25d2c9d-c6ae-4a09-8084-c64779c3b9ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6ED4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #613 ab7d4f27-08ec-4ce4-a985-a13438a0549c)");
unit.assert_eq16(16'h6ED4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #613 9cbac555-238f-4ed0-9314-fdd92d747651)");
unit.assert_eq16(16'hBD89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #613 96a3e7ff-aa48-49dd-8ef1-5ea242f9835b)");
unit.assert_eq16(16'h0063, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #613 68fc4779-e3c6-4450-93b6-566433f6e978)");
unit.assert_eq16(16'h063C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #613 6374563c-2bcb-4640-9700-909c09b1fb3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 6b6c6e70-2381-4ccb-ba44-b8059ff35f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 e1e07b39-2c66-4d5b-b7f9-34f33273c1b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 3451edd4-5313-4676-b90a-29a2579c5f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 02fcdfdf-6a39-4f84-85d2-026cd0dace0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 b90fe374-3735-4fc3-8a2d-f2db8a01eb6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 cc886b6c-2d54-4f3b-91b3-29c257977eaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB461;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7DD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCE54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #614 df79ccd0-699c-43ec-9d50-1bdb824235cf)");
unit.assert_eq16(16'hB461, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #614 017d4ec4-e881-4659-a3ea-b47f550fb073)");
unit.assert_eq16(16'h7DD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #614 929fd791-950a-425b-a648-1a53b7aa0864)");
unit.assert_eq16(16'h40BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #614 28d9f7b8-6627-477e-b0c1-1d567e1b1b9b)");
unit.assert_eq16(16'h0C18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #614 cc0f0ed6-3f23-43a9-82c7-529d73c422d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 28f65fb6-0435-4e3f-b447-b2fe172a32a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 981bdd08-32be-40bd-ac90-8e405c804deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 2f94c392-5595-4146-8631-1e7914d3b824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 329b39a3-c191-4996-8c88-11d39a8fd0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 9c46286b-2e78-44aa-b326-9080abf03125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 fb5d8d68-f42a-4452-9ac1-57e24eb2006d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7A66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h89C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #615 b8185cdf-9714-4973-9de3-7f1a53e91b3f)");
unit.assert_eq16(16'hBF24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #615 04ef65e9-e92e-4ea8-a914-c4a8ece461cc)");
unit.assert_eq16(16'h7A66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #615 981fa244-2e76-40de-b810-326bb6601e4f)");
unit.assert_eq16(16'hBE99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #615 e4a24a3c-3108-4dbc-bc39-fcd8389ac95c)");
unit.assert_eq16(16'h0EFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #615 0870df6e-9dda-4a3b-9ded-bf32b1964341)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 e43ebbd5-e977-4017-98f7-ae06ed472e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 50a8edcf-d1b1-41b0-a6ea-66659ede2ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 0ae237b7-b2af-4a3f-8cf4-85efc4c5e79d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 e41831c1-3577-47ef-9972-724165ef061a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 a9828800-8426-4724-9327-2fffcff3ee3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 c59285f6-9983-405a-a684-8cd434abad3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h17BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA923;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #616 b0117b54-c389-4894-8e96-f8f03c2377b8)");
unit.assert_eq16(16'h17BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #616 9f3ce158-b470-4d07-8489-b6e2106320c1)");
unit.assert_eq16(16'h5E11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #616 f145db5b-66ff-4251-a327-6923b8789688)");
unit.assert_eq16(16'h895A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #616 83a022a8-d304-4f2f-a5ac-5f3701f76516)");
unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #616 de6e3535-8209-4c9a-b71c-924c7c8b24c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 53638441-0008-477f-8e8f-d22e22767469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 9603473d-1ad7-46d4-a6f1-4e19ac6e1506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 89527568-86ba-4efb-a8cc-a2488bd0469b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 1929d3b3-c890-486b-a67f-8142f6266325)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 88fb0def-c9ba-4754-9e2a-dd8167724694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 2ca2af5d-9e43-4286-bd20-8a168f4c7215)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0962;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0ED6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDFD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #617 58f86036-231b-4936-9214-83666a61fabc)");
unit.assert_eq16(16'h0962, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #617 0dc18fb7-3075-4e48-9840-2cf2a497dea3)");
unit.assert_eq16(16'h0ED6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #617 df8d39a2-23ed-4742-8992-30f08c25486b)");
unit.assert_eq16(16'h77AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #617 8e1e23e1-0f7e-47e4-91a7-e74b49123829)");
unit.assert_eq16(16'h0B68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #617 ca037915-9070-4cbb-b540-425075ce77af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 88686fa7-21e4-4307-b2eb-ad555db42519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 7415edcf-c418-4ffa-9919-d4ace616b764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 98528421-2731-41c3-89bd-8cd6f8cfc232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 5d97199c-f52d-4ae6-a1d5-75f0cae14556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 c82ed938-d3d3-40e3-b76b-7cb146206b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 ea868e20-6d92-4873-b473-b2158553ca72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCAF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1141;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0278;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #618 cb829963-c439-4cc5-8cdc-e7f4c5699826)");
unit.assert_eq16(16'hCAF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #618 c31350ff-c197-48f0-9a0e-52061c3f4b3b)");
unit.assert_eq16(16'h1141, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #618 aa499e82-b5f4-438e-a690-2a5685aff2c1)");
unit.assert_eq16(16'hD9E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #618 e96334dd-9989-4b15-a9c7-cd95f3b7b5d0)");
unit.assert_eq16(16'h0A38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #618 92086837-dedf-4af7-a9bf-70b5fe18f33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 be601b0a-e400-42de-a0ff-d8ce27fff705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 ccc9d11a-cabf-4561-b11b-75554142396e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 8bd893c9-3a2b-4779-9dac-061e2f4b8504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 6cc853ce-8aad-4454-abef-b7f1c97d8a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 f898c9b9-76fe-4413-8326-f5787df4bb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 50d96087-7467-43e4-a445-ae8653835787)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC1F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h042F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9257;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0376;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #619 dbd00ba0-6de5-4f08-b06d-205f97bbea2b)");
unit.assert_eq16(16'hC1F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #619 f767db11-b9d7-4573-bd07-8ade9ba33eb8)");
unit.assert_eq16(16'h042F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #619 21095a15-ed56-402c-867d-b5189a685ea8)");
unit.assert_eq16(16'h9CD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #619 14d082c5-3744-4fa8-958a-2e2bf0d92ada)");
unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #619 48f3ea60-08d6-407c-9955-f75e2d934f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 889709ab-c766-4e78-9dca-edf92877bace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 1c35015d-9d51-44f7-9460-fb2b4a10bc88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 8a99791d-519b-43cd-9f48-28bb84dff881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 77a4eea0-bd5e-4991-8aa8-e4d7c5fafefa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 970ca3a3-d685-446e-8a5b-2d69a6313974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 b9b2750c-18e4-40d3-ad69-841b97d2495e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6EF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h472F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0428;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #620 dcbab35f-82a2-486f-9fe6-1705beb39c04)");
unit.assert_eq16(16'h6EF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #620 2b87c2d8-fb78-4d6d-9f10-99e9f7edc5d9)");
unit.assert_eq16(16'hAA8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #620 fa5caa49-3691-4099-afa2-a7d47f9bef0d)");
unit.assert_eq16(16'h3659, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #620 5fc98637-927d-43ca-a238-32facca69389)");
unit.assert_eq16(16'h042A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #620 2a1d46ff-ddb8-4dfc-b273-307fda47ef28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 8605fbe4-8b40-4f31-8834-bd839289b7b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 4d4623a8-744b-47ef-8c49-80b20d1b0099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 085c801d-1716-4810-a4ac-7223d023e182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 fc97172f-99c3-4659-84fa-4906896c3328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 0352e8b0-8276-4cf4-a81f-dd094c4221ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 e0db44e4-fca7-4582-b2da-c3d0e63dc061)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9D28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0201;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #621 8ddfe166-3f69-4fe0-a6af-559624469e76)");
unit.assert_eq16(16'h9D28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #621 6e5da2ce-59ea-4308-bdc9-a065eda8c11e)");
unit.assert_eq16(16'h0A53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #621 73b75a70-6af1-46af-bb6c-f10657bc9e08)");
unit.assert_eq16(16'h9296, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #621 c86e2709-bbab-4554-a911-45ce386efaed)");
unit.assert_eq16(16'h0203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #621 76fc01fd-e89a-4e9f-9022-c51a745df20a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 02921e71-2dd0-4bdc-8203-a3325c793c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 c88b6458-6db8-415c-a368-00facdcb880b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 fcbe935d-2a95-46b7-ad4e-cadbb2a49247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 6469fc8e-9a14-498d-bff7-615eb8fb6cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 bc15e8e5-430f-4f55-bf78-97bbcdddd5c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 944705f6-7e88-4b82-ba7e-8de31cc6e385)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE378;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8690;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA175;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #622 3cfebaab-aba5-470c-b7bb-2bde7949547d)");
unit.assert_eq16(16'hE378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #622 d918463c-74bf-44dd-8371-3c7edcfc25f9)");
unit.assert_eq16(16'h8690, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #622 33de0c74-2f51-4839-8c57-f9f07eabe4fe)");
unit.assert_eq16(16'hA3E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #622 d853884a-5e44-47b1-afba-84823373fee0)");
unit.assert_eq16(16'h05C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #622 c55c1b2c-13d8-4b32-a56c-3c0af6cae59d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 14206d85-41a7-4d20-9318-cf110f37f4c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 37b4ab72-303c-407c-a150-26baa8ee904c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 96eb8dc5-dfa8-409c-8694-cc5c6a5f4f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 2d5f1712-e694-457c-8be8-b8ebc3b34480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 332f9a63-c4e6-4434-ad88-001c628804bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 30ffde3b-893e-4bd6-a7bb-e04a4c498104)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4BD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE6ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #623 f7ea7eaf-3585-43bf-b071-8797c8730005)");
unit.assert_eq16(16'h4BD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #623 4ba140e0-86b0-46e0-945e-8f4d8150afa7)");
unit.assert_eq16(16'h1E96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #623 258f5760-37c5-48cd-b3fb-c27cd6f518c0)");
unit.assert_eq16(16'h4872, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #623 f6e3ccc9-6de3-4687-b050-6c393e110aaf)");
unit.assert_eq16(16'h0EB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #623 c79c1fb2-d048-47dc-aa89-5d3953f14fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 38babced-2eb7-4771-82a7-70f915ecc5f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 e8d55355-4d1f-4d62-8d86-577eb56a08e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 89ca40a7-8ab7-4c7b-bb7f-b81139c35db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 5014314d-6207-47a5-9207-3e238da5a3d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 1593e6ea-202e-4f8b-981e-3471ffe1eaa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 c3490eda-f6e1-4f65-a3ec-a8bbaf38cb47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC766;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF87F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #624 09799597-9512-4d09-93cd-815bd7062668)");
unit.assert_eq16(16'hC766, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #624 5079bcf0-1a4f-4a06-bcee-53e54b17b435)");
unit.assert_eq16(16'h0D61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #624 bb14415a-df6d-4005-a7cb-78ac99063495)");
unit.assert_eq16(16'h6E98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #624 60af4f5d-e6e5-49fc-bebf-3205c225e2a8)");
unit.assert_eq16(16'h0B6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #624 e3043fb6-2508-48db-9096-12b877d264d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 710c844f-cd8f-448e-86ad-c4fb3b74e94e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 09e81d0f-7cb5-4dca-b1e0-2ce2413ace6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 84475712-549d-4d8b-99d3-46b077cebdb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 2395c17f-c9c7-450b-8aba-1f2facf46131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 c2d35e31-7b24-413d-b780-89ddabd318b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 11978d7b-fd55-4a7d-a403-d14a74fc39ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9EFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h290D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #625 673a6a1d-5f8a-4ab6-a473-b7f0dce8a377)");
unit.assert_eq16(16'h9EFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #625 a4559277-5f55-45a4-bcc4-f9a7c68617f3)");
unit.assert_eq16(16'h290D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #625 292d94fc-6af4-4d3c-9ddf-9466568753b4)");
unit.assert_eq16(16'hD3EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #625 220786df-03d5-4b0a-b25d-01e64d00244a)");
unit.assert_eq16(16'h07AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #625 afc7ab78-b7b0-49b9-b56b-97a2698413d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 06aa08d0-6b03-4054-a535-e4bf0f227e78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 4ba8ef23-9c62-479c-aa1c-d8e00582dce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 79d059c4-e063-4d52-8b7a-954a51ba6caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 eca832d2-73b4-4881-ae4c-cabbb3b94717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 9b1b45c9-e71e-41dd-ae24-788ddf358e56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 2392518e-e5ba-4e53-809f-9030737b1965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF387;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF8BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE7A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0755;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #626 8d1629d2-e77a-496c-adc3-70a859e33e1e)");
unit.assert_eq16(16'hF387, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #626 252dc991-9af6-4bfc-88b6-e0123bb0e9c1)");
unit.assert_eq16(16'hF8BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #626 d8ed1b1a-0275-480d-8b4d-3255beecc743)");
unit.assert_eq16(16'h13C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #626 52562029-8f35-4fc8-a8ad-79711f1cc07d)");
unit.assert_eq16(16'h0757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #626 2827fed0-ca13-4687-8ade-f45f21c69211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 6d699976-1568-4a6f-ad53-ba53b4dae455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 a7d48624-92f5-4c92-8cf1-d77f244b586f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 4e8e55f6-3ff1-4efa-b986-6ccbdace9e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 783454eb-9c52-4718-a5c4-fff0da9bf787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 12f7ce47-4670-4d61-a243-ab34c85c4f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 60d5bab6-682d-4118-b9e6-e6dbe9a76f87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE433;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1734;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #627 79b18b42-6424-4d76-8e9b-8ad8d4a26cdc)");
unit.assert_eq16(16'hE433, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #627 025f4370-cc03-43f6-bc95-88fe39e4827e)");
unit.assert_eq16(16'h1734, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #627 5b0a38af-fef4-4c19-b145-7dc0cf5ad01c)");
unit.assert_eq16(16'hA301, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #627 78c02fb2-d866-435a-85ae-bd7d3e08c1b8)");
unit.assert_eq16(16'h012E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #627 7ee452d1-cb39-434a-8bf0-85b6fb089f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 989b2e72-0f24-4991-8a2a-0161a228aa64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 632f8685-deb2-4c6d-a20f-7d6fac3aa8dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 18386082-c49d-4843-89e5-02c2e3119016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 d94b0705-0e3f-40fa-a4ec-0a59b1c1dc6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 d8da5ec7-8190-438d-8002-509e6555388c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 c514a546-ccf5-4511-8a2d-12c2ee4ff123)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF6BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB827;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3BCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #628 f65d2ad8-7a08-4a8d-9a20-0ef92301f436)");
unit.assert_eq16(16'hF6BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #628 2af24035-95e2-41f9-b076-417f17a3db0d)");
unit.assert_eq16(16'hB827, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #628 eaf35928-6293-4f50-a2cb-fe6448b21ad9)");
unit.assert_eq16(16'h4B59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #628 a0974203-1725-4107-9528-4cfac5d006c8)");
unit.assert_eq16(16'h06D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #628 a57c150a-eadc-4895-bdc3-6f8bf29a4e76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 e61d34d3-c9b5-4bf2-8220-ae21774d6e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 a1287655-cea5-4d83-8729-e9b462d72855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 0749dbd4-0b04-407d-b771-378c5b693c4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 b876a33b-1474-4540-8a11-76c44f502087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 9bfa74d9-849d-42e2-aad7-016810883906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 0110a464-262c-4812-bf7d-a619cdd09f09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h183D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9575;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h077F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #629 febb6607-0700-4a92-826f-33487d93298a)");
unit.assert_eq16(16'h183D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #629 a8efd5e7-02d9-44bd-89c2-f61d32a9bc3e)");
unit.assert_eq16(16'h3E6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #629 d8e4543e-2b55-42f7-81e2-c663b58b7e23)");
unit.assert_eq16(16'h457B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #629 cf55b61b-d385-40df-b49a-26e690ba9f3c)");
unit.assert_eq16(16'h0781, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #629 7c5f634f-e40f-441f-9d92-0dd4c827d326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 e07654e5-7af6-4745-b588-962303dbbbf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 61519be1-3200-4e26-8af3-2afc94fc8b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 ac63ea22-daa6-4ad4-9a82-4cdc0e7a281b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 722b7566-03d1-4d12-b2e3-1ae8e2b4b7cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 b644fc9b-6ed1-4cbc-985e-94c52295602c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 23807536-01c2-4649-8f60-66a783acca06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h71F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF96A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #630 805b6266-0531-4919-874d-8d287b1153dc)");
unit.assert_eq16(16'h71F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #630 bb54b240-02f8-4b70-ae4b-af5919f634e1)");
unit.assert_eq16(16'h5E70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #630 1f446a98-bac7-43cb-bd61-2e8e0541ed42)");
unit.assert_eq16(16'hC8C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #630 f9246530-8f05-4275-a58d-70bb01cdbdff)");
unit.assert_eq16(16'h0600, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #630 ece621ef-cf67-4458-9122-772a19207ccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 e829202e-c749-4655-a1c1-a0dd395c8203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 311424df-593a-4384-b869-e70192072c9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 08346684-0dfd-4b61-91a8-abbc2fd297d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 3850db6d-934a-497d-a3ac-f4e2615721f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 4850bf12-e6d5-48e8-bbec-3ac18ae19d42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 c033b9f8-25a3-438d-87f2-6800e34c83c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAC31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h748D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD03F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #631 0130188f-1360-4ecd-9af5-add3edff5bcb)");
unit.assert_eq16(16'hAC31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #631 5c99dab2-36d5-42fc-ae5b-864d11c2a407)");
unit.assert_eq16(16'h748D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #631 273acf2b-6246-4dd6-b17c-ecf57da086b2)");
unit.assert_eq16(16'hEC75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #631 af9f6476-011e-4932-af1c-1402cfb194ee)");
unit.assert_eq16(16'h03F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #631 43b8b514-3ea5-4ed8-a23a-f71c29cf6fe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 f92ded6c-7154-46f6-a8f9-e0bddd37fec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 789c055b-0cd1-40c2-aa9a-4edbd05b66c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 d53ce89d-f281-470e-adb9-137dbc9916f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 69b370ab-7a2e-4c5c-9e7a-c27067ae77b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 06723d1c-2aa6-4706-aabc-30e18cfffb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 631d3c34-7d3d-496d-a8d2-5cc48c78191b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5DFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4676;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0865;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #632 c4d6b482-4b85-4e31-a816-2ce6cfe67211)");
unit.assert_eq16(16'h5DFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #632 2c5a379a-c757-4977-ac40-a8f74dac6bb5)");
unit.assert_eq16(16'hBE0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #632 d44089e1-29e8-4ca3-8e90-1a671e7b29f1)");
unit.assert_eq16(16'h42F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #632 cf1db8e0-3617-43ff-aee7-5b2a76c5c671)");
unit.assert_eq16(16'h0867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #632 03e0fdc1-fe00-4046-b1bb-c2ba43cbcc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 010da2ef-2f56-4ae5-8178-d0dcc67823a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 882d0757-1500-49a7-8a88-dfc97311633e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 720aeac5-023f-4706-8b18-5e4d7376c536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 39061d07-5bfe-4f31-8348-13c5c3a25073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 d410ce8a-67c8-434a-858d-f083252aa166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 89e31018-dbbe-4c05-90cf-82d074a62162)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0DA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h68EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0575;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #633 06999c1e-9090-4a37-87a5-b347aa87165f)");
unit.assert_eq16(16'h0DA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #633 4aba4973-24bb-44fa-a14a-bd10169eec10)");
unit.assert_eq16(16'h68EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #633 57ab8bb0-9053-4797-9a8d-d8235f685fec)");
unit.assert_eq16(16'hFD10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #633 875f3439-f443-4bfd-87ce-272b0b24e1e5)");
unit.assert_eq16(16'h00D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #633 e3c6dd45-61ae-48cc-ae96-5cd9d2550455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 51a88348-39b8-4bea-b74f-6b03ab8bf62f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 8973f314-145e-4a7c-a894-2d2c04095c58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 00b96f57-1907-45aa-8329-3fa69f105a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 d2e86302-3799-4a6b-9425-3bd855e396df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 b06874f2-bef6-4af6-bf55-e3d60354c25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 e6bfca94-38f6-4993-b8c3-4fd2ec3e9a46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0AE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6340;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2321;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0284;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #634 8bed6c6f-5d4d-490e-8a82-d127f6753562)");
unit.assert_eq16(16'h0AE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #634 cf9f11ca-7dcb-48dd-9552-5695552b848f)");
unit.assert_eq16(16'h6340, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #634 3a64be5e-b0ef-4de8-81c4-b64d58dd8f87)");
unit.assert_eq16(16'h95A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #634 414d42dc-51c8-4fe3-82ec-22f4262dd44c)");
unit.assert_eq16(16'h0286, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #634 08dee5b9-7474-4796-92eb-0ff238c749db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 656ae81d-78e5-47af-8da5-3fd47d120628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 0f13a5de-cbe9-46c8-962f-da9779d88e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 9e2dc5ee-3d2f-40df-b26b-7904fd36e81a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 2fc00697-dda7-49f8-96a0-819c4109bf6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 07f5f627-20c2-4df1-aaee-a81b4c083daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 bc698eed-be84-4486-bdaf-dd2abbe926c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h60D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5CCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #635 05723dd8-713b-4870-b2cd-6a95c887d76b)");
unit.assert_eq16(16'h60D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #635 da5f830d-76cc-42ae-bd46-64f721d13d6f)");
unit.assert_eq16(16'h5CCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #635 eeaab7fe-79f1-428a-9082-81b4acbde86a)");
unit.assert_eq16(16'hAF38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #635 a8722d14-d158-4118-8506-48f85049811c)");
unit.assert_eq16(16'h0E6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #635 d17a7faa-7fdb-4556-8ad6-df4386e16dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 ad8af798-2196-4872-961b-e8ba8999c309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 10549906-1d27-49cc-9323-7319d2415b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 63c8a598-42b0-42c6-bc9c-f7a54a19edd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 89e52fce-ccaa-4025-a1ea-d66503f8a7e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 30405c45-2da0-414f-a8ff-a283d44db377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 2a3ad7e4-c6bb-444e-8441-996cf81c3534)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCBA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #636 c69bfc40-4745-4d36-854d-3c8c138a169f)");
unit.assert_eq16(16'hCBA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #636 135548ba-7e76-4112-ade1-768b108c247e)");
unit.assert_eq16(16'hB0CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #636 f4dd4ec6-f11e-459c-85df-1e9ac1337575)");
unit.assert_eq16(16'h82DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #636 caa05fe2-51a2-4524-9e22-21f5012c398d)");
unit.assert_eq16(16'h0A0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #636 2e9f82a9-1b99-41bf-bd71-6e9c8569ad39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 56ac0184-eba3-4bc3-9532-c17d7579835a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 c3f43e2e-c159-44ed-a169-b942dcc34b46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 94a5b905-5764-4297-9fe7-21b7051ebdb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 5075e2e5-9a88-46e2-bb60-0ba89426ed40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 c4efaac5-3ef1-491e-8c50-4604e7d5bd07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 64d5c5a3-8583-4d70-99b8-71fbaedf0276)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h60DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1E24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #637 7c095017-bc35-426d-846b-fa62c6eb396a)");
unit.assert_eq16(16'hAD7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #637 322de2f1-825c-43d7-a84f-0fae47cbd83b)");
unit.assert_eq16(16'h60DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #637 dd0c426d-6634-4208-905f-a96c1a6e4f86)");
unit.assert_eq16(16'h6155, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #637 86087660-843c-4a34-ba53-f7e944d4ef60)");
unit.assert_eq16(16'h03DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #637 c9aff840-aff5-4547-ad30-a2e88c83f310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 990e0259-36a8-4313-8fc7-b97b404ef7b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 1783c2d9-1e69-410b-832d-893d0d1704df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 1cb4b00c-87ed-446a-ad2c-051ced6e9572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 4de5f098-3022-43a6-abaf-05647d8bcd81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 6721240d-48fe-4770-95ad-d46b99515aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 39afc15c-0efc-4293-8d70-7bc5980f40a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6470;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #638 7f41a19f-b29d-497f-bca1-456f8d7b559d)");
unit.assert_eq16(16'h6470, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #638 77a9ac37-d1a4-4697-aa4b-0dda4cf434cc)");
unit.assert_eq16(16'hD4F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #638 25aebb97-5883-4d62-b9ff-f5c57998b7e6)");
unit.assert_eq16(16'hE5DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #638 fd136d39-b219-4c0f-bf23-d06b7fb20da8)");
unit.assert_eq16(16'h0A5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #638 364382d8-fac5-4a5e-80d0-abed9b1e971f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 4b0b9cd2-65fb-4db7-a557-edfb7d9100d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 b1484835-8e5a-4366-b466-2260de142af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 5dfae73d-5c7a-42db-837c-817b89676657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 3b3c2ca1-f52e-45ab-98ac-4d8514e62fbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 a91cd65e-b19d-424f-a2c4-c58da0d9e2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 0304fae8-9313-4439-9ed0-d3584ee5225b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h856A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h468F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #639 75021516-2b16-4a5b-8aae-538f0ff5a2fe)");
unit.assert_eq16(16'h856A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #639 3a53dc38-ee5d-4bde-8ed0-53ff6ffe9d2a)");
unit.assert_eq16(16'h62B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #639 290a6e6f-7f26-4a9c-92a1-a8011392fc3b)");
unit.assert_eq16(16'h5637, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #639 0b039902-9883-4725-80ff-878482e918d3)");
unit.assert_eq16(16'h04CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #639 ec2acefb-82f7-49f1-8f81-d9993af7a71f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 3f4710ea-0d91-48ea-90b3-dbedc35f0b35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 20b14ae6-0969-4923-a6e6-caa1e42c572d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 2755360a-c9e8-468d-99bd-0db82138d7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 936dca8a-2aa3-41f0-814a-e80a03b9fc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 2a85b52a-97c7-48bf-94b5-d3e74e113826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 cc009280-2b6d-4028-8cf0-5b1b25c68d74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB619;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #640 aab1d152-c659-4784-9151-e238a47e9d80)");
unit.assert_eq16(16'hFC69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #640 71a1aa51-ed4a-4d51-a029-65e44533236a)");
unit.assert_eq16(16'hB619, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #640 4d5f2475-2f40-4aa4-9c72-71a46865829e)");
unit.assert_eq16(16'h06B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #640 2f837760-f855-4573-9138-cd8a03755a2d)");
unit.assert_eq16(16'h0A70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #640 599e484f-49ac-4137-a36d-7df55bb2be33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 fd647a12-095b-43e8-90a5-ba2a742d3e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 536fa54f-d150-4ac8-8ff2-e49be471d84c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 ce0daba5-d9d4-4909-86af-5bd4e7c1380e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 601a5adf-36b2-4d7a-bf5c-895c4371468b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 46f173d7-d972-4f23-943d-4b4a5992cd81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 870d7cf1-bd2f-4ab4-86f3-596f498ed65d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h32BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h025C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #641 2c4976fa-d5cf-49cf-9736-8740027bcde8)");
unit.assert_eq16(16'h32BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #641 7c703d67-e38a-4ac2-8e2d-4d23b47aef35)");
unit.assert_eq16(16'h025C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #641 576db3b8-832b-446e-af92-4b4f476ee8a5)");
unit.assert_eq16(16'h1711, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #641 da846ed5-6bf9-4fe4-bf6f-485970fa727c)");
unit.assert_eq16(16'h0C06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #641 5a616fe3-6e0c-48a6-956e-392c0cee0a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 eb69a8b3-b02b-4492-b153-ed292dc86013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 1210d02f-dd0d-42cc-b6cf-33fa4951126b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 c1f32da0-a209-4632-b00f-7782a66de4b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 7cc524f2-fe48-4990-8a85-16da915157cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 8b593c8f-ee26-4d45-b8bc-1904c105a431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 f369d17d-6739-4dd0-a3d4-a454fe067a7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h93E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD675;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #642 e00b892b-5271-4037-a510-cde69c2b2674)");
unit.assert_eq16(16'h93E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #642 d09f5bcc-8eea-4856-b3ce-dfbde04d0dfb)");
unit.assert_eq16(16'hD675, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #642 6a5d5366-23f9-4222-bd9e-705c3d310cee)");
unit.assert_eq16(16'hF698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #642 743db4e2-7748-4eaf-aa2f-aa90883d84c3)");
unit.assert_eq16(16'h0BD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #642 345d9b90-e7ab-41a3-bb08-c1aa4c2fc4a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 a27af6ce-15c4-49d7-be31-15d76a14f73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 384aa1e5-cb6c-4053-9d3a-8ce4be523465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 312d0421-2b0c-4467-b33c-74f757fbb902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 97c4b4c0-fe61-426f-a456-6c8cb5d87bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 70529904-2052-455d-8a39-3e215fc7a3f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 347f35a4-c58c-4acf-b75a-fbca06648988)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC9FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2BBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE120;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #643 9de9e3d8-822a-4fcf-bfc1-d1b4e89845c3)");
unit.assert_eq16(16'hC9FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #643 7aa0f2a6-223b-4e97-b5a8-7655296488f9)");
unit.assert_eq16(16'h2BBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #643 f26583c8-f3a2-431d-ae4d-e510c55814e6)");
unit.assert_eq16(16'h7683, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #643 1a6ad8e2-5459-467c-854e-b483e8b3c99d)");
unit.assert_eq16(16'h0DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #643 a4771074-40b7-438c-8070-925c3314477e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 6427071c-37d3-47d7-838a-ebe9062e2a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 fdc8d033-a669-4d77-9a22-9bb02c0b77ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 d9e7b38d-c8dd-41dc-8529-9e23f0846848)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 e159ee9f-77fc-4eb6-8524-fbc41ac0017c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 3c420f90-4f79-4c8f-a3e9-d3674eb745aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 0a855f93-ec32-4d0f-b923-3c42bdc94bb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5427;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #644 12134f6e-9f17-4254-88b6-7627c284fb58)");
unit.assert_eq16(16'h5427, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #644 0b7c4c7a-8346-42b7-a4f1-b2de642d3298)");
unit.assert_eq16(16'hD2D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #644 a6338f9e-f3bf-4cf9-907b-6d3005480372)");
unit.assert_eq16(16'h0CD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #644 f4947cd9-da98-40ff-be94-e0f4ca90d104)");
unit.assert_eq16(16'h04E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #644 9deafd46-7f80-4650-a323-4819b35c95c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 3f37b8ea-02e5-47a6-a5fe-046ec4e8ff28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 5855e118-e79d-4757-ac59-b4cbb5bc5c17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 b93c4035-8eff-433b-b1cb-3c67acd9b2e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 5c3d4a6b-b215-4495-b97f-3cada7917c39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 164e1744-e7b1-40a8-b5b0-ec6b5c160b39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 6dffa8a6-069a-486c-be8c-34e185eefb26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD13C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h228B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #645 6aaf183b-4ac4-4544-88fb-d438d98a6ac1)");
unit.assert_eq16(16'hD13C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #645 ff88bce5-16a8-4c8f-9856-f2dfd5322e5a)");
unit.assert_eq16(16'hF9EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #645 21c25ec7-8033-4d8a-ad3d-25a0c88d5ed4)");
unit.assert_eq16(16'h4D55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #645 bb954181-628b-48f4-878e-835a1f85a9d0)");
unit.assert_eq16(16'h05BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #645 eb5ad88a-e6b8-41b6-a409-b127b401b12b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 31c55baf-1d23-4901-b5b0-42e520057c2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 4cbcd24a-03f8-433c-ba1e-128e12922bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 489bc29c-2ce7-4e2e-b64c-1aaa6fbaab18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 46a3046c-9aa1-439d-9280-ed557d0c86be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 6556b0a8-1952-41d7-baf4-706be4942182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 219f7d6a-2554-43ed-b94b-ba994c4bf15f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h77;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAED7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3733;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h72B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #646 e121f4e5-9ab1-420c-be6c-8c99237948b1)");
unit.assert_eq16(16'hAED7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #646 351f8232-8450-46f3-8fb8-0b2b98b98243)");
unit.assert_eq16(16'h3733, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #646 b598d213-0041-4764-b7b0-e46beda2009f)");
unit.assert_eq16(16'hC9DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #646 020f6560-9d8e-435b-a8fc-c45381ba76ad)");
unit.assert_eq16(16'h0D8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #646 a4f8ba8a-c762-4309-b025-46315c18edbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 b6e94949-2c98-45eb-8b7c-b4531082ced5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 19b338ae-8f3b-4b69-8186-54b90c19ce82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 b03e8b15-818e-4e2d-ade0-f171df2b1cde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 b8a2b087-4e9b-4a53-bfd1-bf9a40fd783a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 d6ecc283-7d29-4fd2-ad81-f7c263ae4ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 e180842d-8974-41d5-b4a8-a3e919402ea2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h63E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6865;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #647 7afdb0cf-e69d-48f0-a471-6fe52b064c66)");
unit.assert_eq16(16'h63E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #647 c52f9183-bc2b-48fc-9298-72c096c606bf)");
unit.assert_eq16(16'h6865, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #647 d7077051-eaa7-40bb-88ba-90547ca34cef)");
unit.assert_eq16(16'h60EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #647 534a6ae6-9bdf-42cd-8d15-790105877dfc)");
unit.assert_eq16(16'h09CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #647 6f521078-2f46-4888-8a25-6702140310bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 69819305-278c-4aa5-bd30-b716502b16fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 d7859732-ba5d-453f-8f10-5fd4f2cd475e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 1eeb43c9-6ecd-4634-9a51-51ff0aeac530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 28888b96-43b3-466f-b9ac-115e587bc381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 eb36a33a-ae9e-44e5-b6dd-381c9bd1880d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 81971997-a3f3-4996-8342-5550bd6d5d48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE5E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h086A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #648 20708afc-1177-4f02-975f-f083d6275687)");
unit.assert_eq16(16'h9CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #648 be475aa9-b320-45cd-aa95-30811dc1b4e1)");
unit.assert_eq16(16'hE5E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #648 a321a804-b5d5-43e2-b275-5b93549c1a04)");
unit.assert_eq16(16'h5CAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #648 a80a0503-dc7b-4716-b466-66075b46d520)");
unit.assert_eq16(16'h086C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #648 6cdcaf8f-fce2-4497-aad0-d418e446fa3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 397a081a-7311-4d85-92b7-ea36f0adad5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 fa0e2c06-6bb7-4e9c-adbe-582a5eeec695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 5882aedb-226e-464c-b4c1-56f94fed6aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 d25792e0-c635-44a0-8d21-2fd988307ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 e4ae44d8-fc00-422d-ac7e-ffa1129ace19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 bbd598cc-5e15-4d8c-b16d-654b66c599e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9165;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDFCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1D5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #649 1ac1b66e-31d9-43a0-86bd-4d767142eca5)");
unit.assert_eq16(16'h9165, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #649 a7b8ea57-45ca-46d4-9ed0-7149a2053b35)");
unit.assert_eq16(16'hDFCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #649 95d0c159-4a18-45cf-9c37-84ab2f480715)");
unit.assert_eq16(16'h52B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #649 cf540386-8b3a-4119-ab17-45a2f4ca3683)");
unit.assert_eq16(16'h0570, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #649 0f0f1a85-f91d-4b0d-bb64-7b978bbda372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 54fd27b8-0aea-4b15-8625-1daeb5899b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 e47a93c5-7377-4fc4-8cef-a0df8d24c2fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 87af9b6a-d48b-48a7-9910-b789effea1a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 86ddb46c-f381-4b92-973c-dd1366c38c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 c6987791-4671-4327-b8f5-18b42116f662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 bc5ca36b-4c8d-4941-96df-13ca1e7a252d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD186;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6963;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD176;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #650 8f209454-1755-4997-af5d-68e1d5dab27d)");
unit.assert_eq16(16'hD186, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #650 0c0b6d5c-d29a-4269-9250-00f7b3c48d4f)");
unit.assert_eq16(16'h6963, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #650 1949c444-c349-4ab5-9255-f0758d717a1d)");
unit.assert_eq16(16'h4994, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #650 89473a62-f9b4-4b46-9deb-1c5f5fb12771)");
unit.assert_eq16(16'h0B4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #650 95eecc06-b631-4723-affd-5bad05f789bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 885f04d5-312e-4afc-823d-73f80a61086b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 9acf5bf2-3c0d-4386-bdde-07b10b5ab23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 3190e3a6-175a-4e4e-9681-bd85bfcc0ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 d8fe31ec-ff81-48cf-916c-ce58dcada917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 ffea48ca-30ca-4ee7-9d0b-8718e7480309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 0e92410f-32df-49fd-b52d-7dcd9aa732f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h754C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0934;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #651 2fc1363f-d957-4c30-a5de-228720c7c87c)");
unit.assert_eq16(16'hE5CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #651 97247222-d23f-4927-bc56-07117a3b038a)");
unit.assert_eq16(16'h82D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #651 33e1c27d-0955-486c-b857-a44aed9b5622)");
unit.assert_eq16(16'h7652, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #651 643d59e4-6bb4-4608-8fa3-b58a7611a8e8)");
unit.assert_eq16(16'h0936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #651 5100aacf-d2c4-49e8-ad07-9d23c7b6eada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 318fad5d-8159-4551-8fad-2f279e6e9261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 b05b003a-1be5-4e44-8fb1-9d38c76d4437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 9e74700e-3098-49a2-8fb2-59b837bf1bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 d7ee9da1-b5a5-4d5a-81ef-befb80b3476c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 286ff358-d638-4fe3-9ddd-5165639b4f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 cd5a40cd-52d5-494f-9859-470f1c04315f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDE98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC499;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD53F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0981;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #652 e95a9f36-115d-44e5-a633-5918f69fb9c0)");
unit.assert_eq16(16'hDE98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #652 34c18b07-4e7f-4ee8-a947-6013e1a47145)");
unit.assert_eq16(16'hC499, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #652 99ff8c0d-c605-40e5-a0cd-51ea974b0a6a)");
unit.assert_eq16(16'h92C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #652 f534cc4a-5abe-40d0-b3ec-6226e1d656ad)");
unit.assert_eq16(16'h0983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #652 c142e0b4-589b-416b-b3c6-15fff2189a99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 8add9f7e-1b5c-450e-8e0f-6e74532b89ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 5348a138-4816-4993-8e4f-70996a76577f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 f1ddb358-6b06-4e22-b76f-e44b5c9032e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 fe444c27-6416-43ac-ab65-56907ea56eea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 ac4391c5-3102-47cb-9436-d0585e03320b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 23dd1991-b47b-42ef-9fcb-444c2a048282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3600;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA28E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #653 de3d75ee-f7ad-4028-bca8-65810a24099b)");
unit.assert_eq16(16'h3600, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #653 4346271b-9ce7-4bf2-8068-b2305b05e7bb)");
unit.assert_eq16(16'hA28E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #653 adb5473b-401c-447b-aac3-485a7332cdad)");
unit.assert_eq16(16'h6B1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #653 768cbdc2-f9a9-485d-950a-7101b41170d7)");
unit.assert_eq16(16'h0B08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #653 7d51b752-c061-4a39-8a6b-493e401776b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 2ee24266-874a-4d2c-a4b4-734d7ac9559a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 90d9b1c9-b151-4998-9803-4c71cab2263a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 d0b34ae4-9e15-4513-8fe6-30607cf7f20b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 7b2f6a77-30fd-492c-bcec-6c55f3583156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 cc951849-908f-4335-b217-ae4aded5a08f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 108a40ac-6a3c-41e5-a9bc-6a10a51b1d7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3595;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE5E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #654 fb0e4b4f-48b1-47ae-b469-350145482009)");
unit.assert_eq16(16'h3595, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #654 a21975e9-7f8b-48a0-a6e6-472de5958aec)");
unit.assert_eq16(16'hE5E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #654 afaa4e77-b68a-4dd8-a8cf-3d2f807d2be1)");
unit.assert_eq16(16'h27A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #654 52f8b8fb-b159-4a25-bfd9-ed5800ae2db6)");
unit.assert_eq16(16'h02F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #654 9decbbdd-775d-4b05-a072-0a5cc3e81485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 52c74871-d2b9-4af4-8460-794914a82eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 aa1686e7-e882-42bb-8352-47bd4c5ec47f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 c89a2b80-279c-438c-bbf9-b367554e0a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 4b8a1c15-bd7d-46d4-b421-66c2fcc0899d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 4b4c4a03-944b-4b78-979a-0e23c971c8b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 90371af9-de1a-4f80-8d6a-275d88d7a7ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5EEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #655 b6fb227f-3a72-49b1-bc21-41fd20adfbe3)");
unit.assert_eq16(16'hED19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #655 c6585210-e840-4f49-b8e1-3bf527357a9f)");
unit.assert_eq16(16'hABE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #655 8efc2056-4f71-42de-b45a-a016b2e15229)");
unit.assert_eq16(16'h94DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #655 1da289f2-c7f2-49f5-b58b-ee3e141ab7f0)");
unit.assert_eq16(16'h0420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #655 10dbf71d-f25f-4deb-af7c-e3bb3df95ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 f2ac2d88-3abf-440b-ae50-229e9337816f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 88a92641-dd97-4449-8511-319c8c24d63d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 630e5922-637f-4c60-ab43-84588814ff3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 09e46300-c424-44bd-a583-5ea4da1c6fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 6897e67f-c9e9-4263-b51c-6f183c766536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 7efd382a-59a8-43d7-b3d7-83665c800c72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB9E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE587;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #656 c70905ee-34e3-4d2f-b056-8db513b925ac)");
unit.assert_eq16(16'h3D2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #656 808f78ab-1bcd-4c1b-9988-89ca1cabe340)");
unit.assert_eq16(16'hB9E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #656 a4678818-a0fb-4425-9e94-e04817bd9f65)");
unit.assert_eq16(16'hDD0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #656 71aee392-e73b-4094-8a83-c0afe27deb01)");
unit.assert_eq16(16'h0E3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #656 3458b667-76ba-4771-8b16-773d341e63c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 f50f0da1-686e-4a42-b23f-67bcf2b4ad7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 15e5f005-3015-47ca-8abf-d86a8d2cf51c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 6f734196-6c7c-4d36-93e4-9b2f9459a66f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 6fcb0a98-c3bf-4069-955e-f8ea7926199c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 720d1091-f47c-4e02-90e7-44c89d566516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 5128fcca-8ebf-49f3-a72b-7b0a4c4123f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h33F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9826;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #657 5935a83c-78f5-427a-bd49-cedf0ea9ae30)");
unit.assert_eq16(16'h3B55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #657 5b69b350-9ef5-4733-8210-739f000eddde)");
unit.assert_eq16(16'h33F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #657 303b7c43-4e89-489e-b543-70c6d3fb84c2)");
unit.assert_eq16(16'h05BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #657 04a8f52e-48f6-46ab-b97e-9274dc68081d)");
unit.assert_eq16(16'h06C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #657 56177428-e366-44f0-b489-74da2889eab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 e40f2247-51a4-4ee0-8f6f-5c1afc052ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 66799892-23cb-44a3-bdb4-2604cd326ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 5853aaeb-ffa9-41db-85fa-152e13a492a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 fc958d83-7ef8-4804-82c3-f2fdded138cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 d3715baf-b061-4e8e-8103-7a86ad425a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 ed290a1b-9827-4d59-b8d8-5c3c33dff066)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h033A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3CE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD876;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #658 a7d0d355-ebcc-4566-b26f-5c59b58948bb)");
unit.assert_eq16(16'h033A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #658 450a6491-8e8b-47ae-ba90-6cbd5c7d9d7f)");
unit.assert_eq16(16'h3CE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #658 3a8c96d6-3416-4c1e-a8ad-2e4bc93d8cf1)");
unit.assert_eq16(16'h12B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #658 78bc27e6-b464-4122-a4bc-6b4d6b8edf1a)");
unit.assert_eq16(16'h0CFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #658 35caaee8-a870-4095-a8a8-5f84c5e36ac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 9c926dfd-6f6f-4b64-bb76-c3dae39b003a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 e899b2d3-3b43-4ba5-883c-32dc62b20bbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 b47f0fa8-5532-4a09-8fe4-2e786dbaab79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 8cf0a44d-514e-48f8-b7b8-6ba41efc3b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 39a60ea2-2891-48fe-8328-5792fc4e3dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 6af35b39-33fb-4266-8425-e6e1cdcff6d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEEDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0392;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF211;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #659 2d83d6ef-7519-41e2-ae3a-0ff83bfab810)");
unit.assert_eq16(16'hEEDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #659 433e4bff-3d3b-48ff-bdd9-349c3e3baaa5)");
unit.assert_eq16(16'h0392, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #659 d677d335-e15b-447d-a467-99a4db4b45e9)");
unit.assert_eq16(16'hD200, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #659 39f7c5e4-3f83-4cfa-872a-dcc39d15610d)");
unit.assert_eq16(16'h0C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #659 8a0a68a0-cad0-45c6-a2cb-4a6b2241e97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 643084c5-c0a2-40e6-8b28-7fdfea9444d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 440133b7-4153-42aa-b48a-3806b5d09f26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 91a4f7ab-d368-43dd-9553-49911b42c541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 af8b93ba-95c5-430a-a414-088c00527871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 0c99a09f-cd88-44a6-9f19-3a5c1826f2e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 2c6fcdab-8736-46b5-8779-a27c7590d4d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h13A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC998;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h33F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #660 3618cd1a-5590-469b-b65e-0f702cb50842)");
unit.assert_eq16(16'h13A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #660 02f091b6-a1db-4565-a9f8-f20618d96f08)");
unit.assert_eq16(16'hC998, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #660 f105c99d-2018-4b50-a8cd-8e1af5c61f85)");
unit.assert_eq16(16'h9DCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #660 4ba686ea-58e9-4327-90c4-a53a163122a3)");
unit.assert_eq16(16'h015F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #660 36c2a37e-2ea9-4556-bc01-e39a0fd8fc62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 e14c80ce-cb8f-4eac-80d4-bb31b85eb478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 074625b0-0896-49de-b551-970263ad1f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 bb308d6d-71f3-49fd-9ea2-eee785bf9a63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 25b07ea1-695c-4f40-85f7-20e3ad073e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 b27e2f08-aabf-4cc1-8546-c4997dbb3ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 87b71f31-6289-4a24-af7b-28f90360146d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD6C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #661 8c8ea9da-1217-4b30-b0ca-16e6a5cff374)");
unit.assert_eq16(16'h1EA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #661 5c767570-2321-4f3a-b747-d99839ed764d)");
unit.assert_eq16(16'hAC1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #661 a6219972-3146-4430-9b20-2f2ce29a277f)");
unit.assert_eq16(16'hB7AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #661 5c02877e-bff2-4df7-ab54-a746fdfdfda7)");
unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #661 21066828-a0fa-4e82-bbbf-afdc7bdd0e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 734c98d8-0440-4f53-af6c-b9088adb7481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 aa504a70-c7d7-4fc1-8e15-b74d56fb27ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 df6932bd-8852-4c0a-b70c-2cdffa90f839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 1c2d909b-ebea-461d-a62f-b6fc49c83f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 04e95295-6ff7-4473-9eab-49efbf344a77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 e8a4a0bf-160f-4db9-99b0-ea6b31da4adb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBAFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0651;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #662 a2430341-3219-4f78-8671-fcf72b7b4e9a)");
unit.assert_eq16(16'hBC32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #662 133e0481-75f1-44bd-bd8a-6d331ec9d6f9)");
unit.assert_eq16(16'hAE06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #662 c883e4ba-b2f1-4aed-a821-a0413d3caccb)");
unit.assert_eq16(16'hFC44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #662 f43a8252-9fb1-47a5-b557-330c4021ffc8)");
unit.assert_eq16(16'h0653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #662 42e3b3bc-8634-41c1-b5d6-e68512e85c27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 d7072f8b-9e40-4255-81d8-aa64d61223a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 2e0e32ef-c45b-49f6-96dd-49fe14c9a87f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 e11f6f64-4f3f-4471-89fb-1c4bd1d139aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 35bc56cc-6253-42b4-8c36-f6650a736aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 89133c4c-80f6-450d-984d-fe7c2a3abb5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 8056617a-71b5-41ec-a533-5c8258f2b055)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA4D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h645D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #663 cf22297c-d859-42cb-a0fb-537f470d6d95)");
unit.assert_eq16(16'hA4D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #663 66295c66-cb19-4892-a6db-9ff969313d8f)");
unit.assert_eq16(16'h645D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #663 12b858f0-07bf-4f4f-bdd7-2de8a4deb46b)");
unit.assert_eq16(16'h4AD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #663 87408e98-d23a-4cfe-9976-90865af04e9c)");
unit.assert_eq16(16'h0C0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #663 e923ba4a-2899-4972-8911-3367c802d1db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 65b8b7a7-6a86-4900-8bb1-bb39a11f12c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 28d72cd2-c39d-42a9-a1f1-ce0995c6b184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 70cf112b-1d28-41bc-977b-89198b6a756d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 d455d398-6d7a-4dc4-856e-79a905014cd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 064db2fe-fd4b-43a8-a121-4709e9b9790e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 ea217340-6a71-4783-82e8-1eb78b272940)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD570;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #664 38c547bb-f116-4a9a-a3a0-31c935dd42fe)");
unit.assert_eq16(16'h2C4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #664 96b6a764-a106-471f-b190-67f81a561566)");
unit.assert_eq16(16'hD570, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #664 44e8b133-3b4c-4638-9abf-622d314d99e9)");
unit.assert_eq16(16'hA17C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #664 e79f9391-9723-4536-8c60-874190a0ba5c)");
unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #664 e1bd8bac-8b2a-4625-92ce-cdb54eafd8eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 87d8bdef-1948-4c0e-85ff-41b28529842b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 cfaca2a4-6d3e-40e1-a5f0-d0ffb1694e0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 9446ce3f-9c5d-4b3a-99f7-067f91a25f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 e48a59b0-aa4b-472e-b3f0-652c6923b1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 97d191f0-d8f3-46cb-9580-a1ae50aaa0fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 efa98bb5-23bb-49c9-91b6-0be8bdc48488)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h14F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h773C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #665 bb174ec6-f57d-486c-bbaa-0f20a56c535c)");
unit.assert_eq16(16'h14F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #665 4bfe4ad7-5b22-4633-b28f-42b054a92ed9)");
unit.assert_eq16(16'hBDC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #665 b65af04a-eef7-4284-bafb-038704e1d5a5)");
unit.assert_eq16(16'h3A7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #665 304abd4f-2178-4e80-b9db-fd1afd9035b3)");
unit.assert_eq16(16'h04B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #665 7a4b22ab-44ff-47a8-b3b8-2d33511aa948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 6578cd09-60bf-4a12-bf8f-8c37f1d3705a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 581150c3-f3a4-44e2-8722-5a7f8eeda093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 b0d6c6b5-c346-4d9e-8805-baee4e4fc277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 9c1c5c79-dc21-4b24-a60a-f8f4f21c0cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 f9bef1e9-3d71-4998-806b-6def9e2ca61c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 e0b3c077-e8a9-4079-bc49-9d2277a7cfd0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9E16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h154E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h083F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #666 e96b9854-958a-4424-aa70-5913abf811ee)");
unit.assert_eq16(16'h6F4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #666 fa129f44-e046-4f9f-9fc7-154b37e7b651)");
unit.assert_eq16(16'h9E16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #666 6d2be056-0561-4dee-a3e8-440607b8e97c)");
unit.assert_eq16(16'hE3D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #666 b6c5408b-3eb8-456b-9654-a8f2cd8b5885)");
unit.assert_eq16(16'h0841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #666 27618670-6540-4525-88fa-e765031627de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 64a8d2e0-9740-426f-82ff-c6583fb6d083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 199fbbe5-8ce9-41da-9dd9-f67b06e2fc0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 95c28686-3f36-4a29-9ee4-6e3cb1b71ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 0c754dfa-7ee8-40cf-9e3d-13b1ee45c49f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 88d2d872-2f8d-4869-9e59-02699236745f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 0f2b0f78-070b-426a-908f-11799d9a81c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h568A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC68F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #667 2e542169-c601-4217-8a52-28b541e1d80c)");
unit.assert_eq16(16'h568A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #667 6e27aad3-f148-45bc-b4a7-5a66cb93c198)");
unit.assert_eq16(16'hC68F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #667 b2d5a7b1-5bf9-43c5-94ab-0ea7cedb2a93)");
unit.assert_eq16(16'h8897, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #667 5be3680c-2588-49c9-80c0-f89fa76c01a2)");
unit.assert_eq16(16'h0E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #667 e1758f9f-0857-4f0c-b1d3-4d15ac229a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 d6531051-692f-477b-bbbf-65b71c9fbfed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 5006a6d4-9381-4fcb-b79a-9f5a5b6bdcc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 6decd1a7-001f-49c0-99aa-ab0a9ab24ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 becdecbd-841b-417d-bab3-338ec57c120b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 c1b2f639-7d59-402e-a641-515ea5b43b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 c0dfdbf7-91f1-4bf5-9624-8bb29c006586)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDFEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0726;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #668 e776ae0f-52c3-443d-b3f0-020fde992194)");
unit.assert_eq16(16'hDFEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #668 a43cf0d1-b669-4a92-8738-7c1795946179)");
unit.assert_eq16(16'h0726, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #668 0cc9273a-28a6-401d-aec2-0aae5787ef9d)");
unit.assert_eq16(16'h01B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #668 91517ac9-ddfc-4513-834c-1ba8eb4ea563)");
unit.assert_eq16(16'h0EF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #668 170b49aa-e66f-43ae-bed8-c960d253fb31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 6080ac61-b8cd-4331-9f05-bdfbce1d31ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 656b6838-6c40-4bac-96ee-39eedfc2bf09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 871aab29-7144-46d4-8f18-a0f84b985fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 bf65185f-cccb-40e4-ac19-789622187859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 9d4df068-9bbb-4eb2-970b-70cadca1c8d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 f0a8b0fa-7382-4f8a-ba0b-097164fc0202)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7946;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC427;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE387;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #669 18124525-c82a-42d4-bcb0-b02d6777d964)");
unit.assert_eq16(16'h7946, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #669 24e2a602-f755-488e-b298-4bf3b8214baa)");
unit.assert_eq16(16'hC427, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #669 6336e7ce-da24-465a-ba01-fdab0f3b08ef)");
unit.assert_eq16(16'h3F6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #669 a4be4219-7810-46ef-b653-797dc0a3a402)");
unit.assert_eq16(16'h06C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #669 f6952d66-c3c1-4d9f-8177-148c49bcbd75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 a4642faa-2f22-4f46-bbec-633fe01b72ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 ee41da8c-19b1-4d57-8ff0-1dbd0fd453fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 6c5b28cf-ff7b-4c62-a18f-0a5df5933001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 e892296a-1e6b-46cb-8634-778059c488f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 c03610fc-0d03-4245-835c-cbafdd054bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 1f43161b-e6b1-4c98-9e1a-fffbc57a102d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC109;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF8D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h216C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #670 ee2018b7-355a-4b50-b77c-5875325baaa4)");
unit.assert_eq16(16'hC109, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #670 e4142fc5-a986-48f4-bc43-52de550dcaf0)");
unit.assert_eq16(16'hF8D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #670 c1ad9047-0d18-4199-9e43-bf5c5717146c)");
unit.assert_eq16(16'hF030, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #670 f4024b79-6217-4b4b-abc3-a8ae9519ed96)");
unit.assert_eq16(16'h00CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #670 57f3e558-e30d-47fb-910b-2ff020d87fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 465bd1d9-b750-4580-b301-d37cd0e86e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 d415f860-ebc6-4b46-8648-b89bd0da2c28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 fa4c8eeb-e56a-4f09-83fa-768f38261f04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 9f7d04a1-76ed-4a61-bcef-260336829d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 1c1ead7c-1673-4afa-85ec-39909dd1267b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 047bc341-d93e-444e-8bf1-f6e77f19185d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB34E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1D7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #671 05654700-d1f2-437b-9e2f-3b3f5f8b8a1e)");
unit.assert_eq16(16'h6C4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #671 bc35ec0e-cee1-469b-ab5a-51656238a502)");
unit.assert_eq16(16'hB34E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #671 2693a5d0-4f8a-46e1-82be-1a3256d066aa)");
unit.assert_eq16(16'h829C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #671 c9894c1d-5f9b-40f5-8fee-9028d8cc9644)");
unit.assert_eq16(16'h08F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #671 8ae510df-4928-48ec-9649-c1c171275d19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 1f8e1f8d-7546-423a-9928-50159dc820cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 a77e800c-7b9a-4369-9939-8c0e374679b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 cc026753-5803-4b95-bc12-197ae5b50a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 f9fdcb55-0187-4e2f-ab15-e3990cc5b4df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 e8a6d5a7-8e79-49ee-9e54-b024ed127774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 df61c3fb-ecdf-462a-9a9c-32dee70ed16a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB958;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7028;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #672 29bdfa6d-c1a2-4b37-9fb9-8ad475f94fc2)");
unit.assert_eq16(16'h9B07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #672 0ae49788-6137-4a6b-a452-6db45db2f750)");
unit.assert_eq16(16'hB958, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #672 3ee5dd43-a56c-4f12-90c9-5d92ae66ac60)");
unit.assert_eq16(16'hA6E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #672 8479970a-276e-4cd8-8595-c2beb5570273)");
unit.assert_eq16(16'h01C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #672 25c1a2ff-7bcf-4497-bc4c-3a451e3020ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 d1a80015-fc06-415a-8742-433cfefdcfd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 fd8b560e-3f36-4acd-8880-0d78de6ef0a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 1de96283-6a4e-4f25-afa1-b0655d6e5a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 5ae83142-c22f-475a-bf55-5c45512c6d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 fbdec0c3-338e-411b-8184-2ccca1d73c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 27d3c03c-c469-4b2a-8e02-ba8c8b6b649b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1459;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD364;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #673 0f789cea-feac-4a4b-91ae-5b59ad86e8d6)");
unit.assert_eq16(16'h1459, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #673 32777057-9963-4776-a223-55fc77fd1493)");
unit.assert_eq16(16'hD364, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #673 244161b7-3bc3-4036-b230-d26b301ee0e0)");
unit.assert_eq16(16'h0CC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #673 0252bd59-c81e-4e01-86ea-0efe3dcd3abc)");
unit.assert_eq16(16'h023C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #673 856c3c89-fd8d-4c15-b53d-d946ac0c7f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 43b9eb96-2ebb-4764-afc7-5c1970d29908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 84aeffce-b9e9-4420-9e3e-8d1ed2de330b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 1d7fd070-c29d-4cd8-8af0-e8b006716bcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 b72f8e4a-b3e9-4126-bc3c-4b2657f3bbff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 aee47ef0-7c3b-4713-b93a-d34feeb271a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 51ef2a7e-01ee-4465-baed-533e4e3e5f2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h93E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD333;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #674 ed0efccc-179e-4395-90b9-0f4451353b11)");
unit.assert_eq16(16'h3A83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #674 f618c67c-64bf-43d0-869a-18514a565292)");
unit.assert_eq16(16'h93E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #674 ec690637-e05f-4c30-ba71-6e4a4dfe681a)");
unit.assert_eq16(16'h33CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #674 0d1b52cf-9d8b-4ede-aac5-01effcf20fd5)");
unit.assert_eq16(16'h0C08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #674 71819399-8d9c-4bb5-ad4b-3cf6e9cafbd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 4e2a0ef3-a210-4704-8abb-421b6af3c833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 7d8bad82-8443-4ada-b742-6f1a23912904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 fc4b57b4-1e74-4c9a-bf64-808856cbe068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 fbcf0474-427c-44a0-a92e-ce32c13ab532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 9ed2d6bb-4b77-4868-9918-3cf64d18e55e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 f49b5b10-1afe-4523-b6a7-01de49863c16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3CE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h439B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8FDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #675 e877a3e3-d723-47de-b8a1-a052397af442)");
unit.assert_eq16(16'h3CE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #675 89c301b8-7a51-4370-8317-c087379529f9)");
unit.assert_eq16(16'h439B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #675 6ce2c7ab-c6cb-48ed-875e-47391a77fee3)");
unit.assert_eq16(16'hBB77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #675 e4bbe1d4-707f-4e9e-9556-70da9e9af31b)");
unit.assert_eq16(16'h065D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #675 c3fb8090-d363-4ebd-919b-7822e96c563e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 38984712-3e81-45d5-8664-50cf42933bc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 6b6e1573-73fa-42c4-a96d-ed07f3477478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 407a1c44-a98d-4d3f-b20c-595d02376caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 534e1735-b524-438f-85ae-a2ed032b1eb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 d655b61c-de44-4398-a98d-88878ae7ac0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 675c2414-2f9c-49be-b58e-2f1f3c133b51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC7CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3CC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7394;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h057C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #676 37927d66-18c2-4b37-844b-b217e5eeb754)");
unit.assert_eq16(16'hC7CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #676 7fd8441f-cfc7-46a1-9fca-288c5bcccbb7)");
unit.assert_eq16(16'h3CC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #676 227247ba-08c1-4f87-a486-1157512d1170)");
unit.assert_eq16(16'h4FDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #676 29810191-b080-45fd-8d39-e9a1d4d4860e)");
unit.assert_eq16(16'h057E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #676 f3010b0a-ef83-48df-bc2e-d2309d6cdec2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 d5c5baec-9527-4de3-ab6b-6b1ccd043749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 d26b2c19-1158-4c53-9f69-073d4ea4ffb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 7e15d340-632a-418c-8d30-cc90ad0ef61a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 2cac5b32-5123-44eb-ae7a-b3face6a4f96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 50799b4e-b7b4-4e96-bed5-8b0a0e4d35b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 d9cec860-69ec-40ed-9ff8-1fa6a64a95f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4676;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3875;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #677 3b578531-1a02-48bd-9ada-99bc03455479)");
unit.assert_eq16(16'hBD6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #677 a93eab32-f7f0-495e-bdea-cfd7631eaa8d)");
unit.assert_eq16(16'h4676, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #677 7a56d99d-1577-44da-ae20-8c5cc8dc1a1d)");
unit.assert_eq16(16'hD789, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #677 2983cc43-db48-40fe-87b3-dacf23b2ed7c)");
unit.assert_eq16(16'h0B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #677 0db22453-f98a-41c4-81a2-cecaec32fb1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 02b03cfd-5768-40f0-a1f6-1a564bd675d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 04e17d10-1da3-4fe0-98d3-03b126d70ccd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 b32b5b42-03ce-448f-b1db-a10d94305310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 a5db678a-5cb8-44de-b589-874e841df940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 35e73f5f-b5ea-420b-bd18-8bc07ddedc1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 5c9d6d8f-a007-4b55-b73e-71eafd6dc9d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFE9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9CF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEC1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #678 5c0d6015-d7a0-4f65-994b-e9c322c5a867)");
unit.assert_eq16(16'hFE9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #678 ffc3d1a8-42ed-4e3c-bf88-0b03b604b4ef)");
unit.assert_eq16(16'h9CF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #678 97714cb1-abba-4248-a1dd-b546fb7fd575)");
unit.assert_eq16(16'h332D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #678 54fd34eb-70d1-4416-a57f-8b8c8e64ca61)");
unit.assert_eq16(16'h0A32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #678 c2b82cd3-3ac9-4f09-8051-3927ad31687a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 ff5cb67a-5807-432d-aafc-c2b9ed5221c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 5cb411e9-4403-448e-877d-1cf5f061cf6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 f44b8315-d434-462a-af2e-cd857a9d3726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 909ae61a-ab24-4625-8c79-ca446bea0c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 2a632cad-81b5-4d8e-b32a-0ae0d3b74b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 96dcb8f4-9b92-4110-b8aa-d7e5d6fab2b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC66D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h718D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF217;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #679 5a642318-ad51-4648-a36d-b55a9c16711d)");
unit.assert_eq16(16'hC66D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #679 cc485e6c-1c5b-4621-9143-a6c952866bcb)");
unit.assert_eq16(16'h718D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #679 2825695f-2adf-4207-8f76-c854e4062f35)");
unit.assert_eq16(16'h0AFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #679 dd0022aa-25aa-43f0-9196-6d68536f3950)");
unit.assert_eq16(16'h0FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #679 341389be-235f-403c-bea4-cc6c894c8468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 20e1a98c-f570-46d2-8535-aebe04f1bd8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 861e692a-3a92-4161-8a27-d9a0792b11f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 cefd7baa-5ab1-4393-b534-951c757ae1af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 39e73f13-2775-4dec-85a6-359cdd81a8aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 19880bd6-fa7c-4eb8-bab7-88667344f855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 31224cc9-b650-4662-82da-74611603bd75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC620;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4AAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h72B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #680 fa9c992c-5ef5-4550-927f-8d3c6888a3ba)");
unit.assert_eq16(16'hC620, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #680 33bde2e1-3bb3-4031-8d9d-3c1ab75f61f8)");
unit.assert_eq16(16'h4AAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #680 39d5411a-d62a-4faf-ad8c-dd3a34204711)");
unit.assert_eq16(16'h7A23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #680 576860f9-9bc0-45d0-8c9d-b7abf910fe00)");
unit.assert_eq16(16'h07EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #680 44c3870b-b68c-4d16-ae07-24f6746c7c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 31f14b82-6ea5-469e-b430-c301982042dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 b4e6e990-7dc8-4d4c-842f-b759336429f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 accba95a-9218-4e4f-b4f2-89a721a7498a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 8fba5855-d831-413d-95cc-2bcc07c607bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 1b7d574e-470a-4e53-8d0c-e52c2bd027f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 f8a3055b-6941-4a44-bfa0-e98877e2f9f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8C75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #681 d79174a4-b27d-43b0-9260-522d317010d7)");
unit.assert_eq16(16'h0F19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #681 48c6cc39-ffdc-45f0-9c89-f3100c5bc277)");
unit.assert_eq16(16'h4F2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #681 0898e2d3-9286-4219-8bad-eb8f8a6fad9f)");
unit.assert_eq16(16'h40DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #681 0ced90e0-12c3-40ba-bc1d-4c0dfa2eb572)");
unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #681 9ef1f494-a5d9-4a38-b0ba-dd907dcfceb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 9629a767-0237-4571-ad5c-809ee76e8471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 6597edb5-8fe8-43fb-a1a5-6616592e4d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 8027c9bf-5679-4ec0-b98a-c08883876d56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 e5022c58-9180-437b-9d2f-f9d113dd7281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 5df44175-2f5e-4574-8acd-528bea63fb94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 8707a77c-2a6b-43dc-af46-60b14c52e794)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF55F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE10F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h092F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0390;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #682 2dda0e09-7a16-4f37-a942-76f3cabc5271)");
unit.assert_eq16(16'hF55F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #682 47bd7759-5b9a-4e7a-918d-93bcf794aaeb)");
unit.assert_eq16(16'hE10F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #682 52a4ead4-fd57-4247-be8c-482b357056cc)");
unit.assert_eq16(16'h3C0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #682 d08da394-24c3-4eb9-9c4a-c0ff943fff52)");
unit.assert_eq16(16'h0392, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #682 d954f888-fe4e-4f99-b9c6-2171b055b660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 486d05a1-7fe6-468b-9635-c019bd22088a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 477bec07-4c55-41c8-b1ad-bbcb9952f105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 a2949a2b-9191-4f18-8d46-e49360cd2e5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 58827642-3a88-47c7-afd5-ed65638dd595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 f9c68721-0f95-4686-b3ba-f0d38a64e3f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 0647074c-4a0d-4634-b2a3-72c87092389b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h59EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7163;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1A02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0416;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #683 311ef247-a3f0-4d71-8558-2cc7de910110)");
unit.assert_eq16(16'h59EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #683 6702ed0e-c5c5-4c6f-80ea-525205c6f828)");
unit.assert_eq16(16'h7163, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #683 68a6b8fa-f964-47b1-ad3e-532351b60d3a)");
unit.assert_eq16(16'h7D5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #683 77bebb60-b19c-4df6-a966-901c2fbacc0e)");
unit.assert_eq16(16'h0418, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #683 78701fb6-e7fe-4442-9625-361f42bb3bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 7adc8f19-4af9-4c77-9c97-fa5eee937ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 42d1f650-0349-43f9-b917-7f29b66c3841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 492938d3-bf5b-4efd-b2be-e8177a762552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 c7418b7f-d89c-42fe-b975-9dfaced7a6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 1e70fcb9-2c1d-4c3e-b5c4-295827c02baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 84a286a6-2c97-46f2-9c81-bf6c9b92059a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC5FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h42D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0578;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #684 414d6949-99f3-42c1-a450-a42a95169a7d)");
unit.assert_eq16(16'h4B27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #684 04df22c7-4f87-4b1a-bf83-0a18efc3b4bf)");
unit.assert_eq16(16'hC5FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #684 7c97c107-c90e-4e25-acec-c05ed66d3bce)");
unit.assert_eq16(16'h194F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #684 3e8858a0-3fdb-4621-9423-e7a203845fdd)");
unit.assert_eq16(16'h057A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #684 3963f011-8c0d-4d4c-9c17-8bef59c3697a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 3d4e3617-4b5b-4657-9ecd-55cfb13e51b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 83fbaf4e-28fc-4cad-b85b-6529ca2ec58c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 26a36798-c573-4935-8da5-141deb3b2152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 4b5c2266-2d0c-438d-a2b7-674d1778bb28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 abc93379-ca9b-47ea-9dee-125d79134048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 42ad7242-0f2e-4637-be2c-63fcdc7cf698)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCA28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD3A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4440;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #685 d799e9d5-fba6-4892-bca6-846f29d72af5)");
unit.assert_eq16(16'hCA28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #685 ec95ee3c-a080-448e-9382-0641ed744cb2)");
unit.assert_eq16(16'hD3A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #685 ef89c728-2293-4d8d-820a-e56dcb6f6b96)");
unit.assert_eq16(16'hDDDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #685 456f4aa7-28f4-4935-83af-246a9dd86e10)");
unit.assert_eq16(16'h061D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #685 692a2ae7-01de-4e2d-a40f-e5ae0033b1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 39c69b5c-c1d4-4268-911f-064ba4490542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 935a1702-d0b4-421a-b9b0-521cd5194366)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 bc8b31fb-cee5-4b62-8a22-d3014b61cec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 54be7de7-b4c4-4ee7-afae-90cb6c2d1ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 33668aa1-dabe-4231-8b42-86896c192773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 d3d4bb77-b087-4c99-bd55-1d2af5e373f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC93C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA2C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #686 18fd6cec-fe8c-49bd-8e66-f7ca8a0e4fcc)");
unit.assert_eq16(16'hC93C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #686 e00ddcdc-de7e-4f9d-8952-059bb19b9ae0)");
unit.assert_eq16(16'hB0A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #686 1b0bfc27-f3b3-4744-a144-50e5ced7f10c)");
unit.assert_eq16(16'h9B9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #686 7b8ae9cf-cf75-4247-878a-23450cf4ba3d)");
unit.assert_eq16(16'h082E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #686 89e91425-8057-44fd-8a75-901a33a3c3ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 2dc81f7b-5191-4bd4-8032-1b2682e2bd2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 75e405c3-bcc0-498f-9068-a416d37e15bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 0a8f774c-8a44-4125-bae5-5ed0b02b06db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 7b3024df-50fb-445b-b70e-0b9c6c7b4051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 b357ae6d-2d49-4ea2-9053-4bf03b490098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 a041c84c-4f90-4826-a657-2084109f7e9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h43B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h955D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #687 e255fb20-63b1-4a54-8500-1f417d4d8169)");
unit.assert_eq16(16'h43B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #687 b8579955-b62e-4210-a611-6b52df11eeda)");
unit.assert_eq16(16'h955D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #687 52220cde-2dcb-457e-9c9c-ea74370f2d85)");
unit.assert_eq16(16'h4222, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #687 362350ee-c214-4805-b67f-fcc5015f4146)");
unit.assert_eq16(16'h04A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #687 7b00aac2-7790-4b14-a57d-1a2671b0be16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 031ded72-71e3-4830-ac59-c2a0f54be5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 b4bf003a-a84d-42c6-a462-1139041b0baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 72eacb39-7572-454a-baf0-0927d4f5dbe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 377453c9-128b-4581-8a48-d8fac39b5098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 06423d23-067d-4073-bd3a-c711caccf78e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 56cbc2a3-9cea-4351-903c-0f9816f71bc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9761;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB006;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h385F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #688 c1af3d37-227e-4d95-bdb4-e9c5c62012e0)");
unit.assert_eq16(16'h9761, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #688 feecf39f-2ff2-4c6f-affd-438383e7e8e3)");
unit.assert_eq16(16'hB006, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #688 6223d2f8-2d11-4b4f-81ce-96c2610174d6)");
unit.assert_eq16(16'hF465, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #688 46d53f63-85cb-4927-a73a-72d4a41a0d80)");
unit.assert_eq16(16'h0BB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #688 eca4f5bc-b18f-43d2-bbb3-8999b5e9da7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 207c9906-0708-4d98-a470-701564280dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 2157dbb2-e2e7-4c35-93ca-9ddce7896373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 dc85e889-8b50-4e62-8299-97b44bb27561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 ad82000e-23d6-4002-974e-7e62ec116b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 7f541031-4de0-4f47-9a7e-885d426a21d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 11d84f5f-30bd-4ff8-adbe-9e2fc78a52d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEFE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD608;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD606;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #689 5f7cf34f-7620-4021-bedb-c1924ff6bd69)");
unit.assert_eq16(16'hEFE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #689 4a009e64-54f5-4d09-8bb2-b05629734fb0)");
unit.assert_eq16(16'hD608, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #689 82649611-ffde-4a03-a473-6e920cfdc71c)");
unit.assert_eq16(16'h5C85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #689 613383af-56ee-470d-8873-b4ed726a9ea7)");
unit.assert_eq16(16'h0EDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #689 fa620521-41ff-4ced-8ba6-ceba0e768eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 1cc3b53f-aaa5-4b77-a0e7-adc4ca194a92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 e5296507-9f5e-4c81-a73c-7f3f4f5b9768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 0f911922-c710-4e8f-ae77-1c17d9faa2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 13ecad19-7967-49ac-bfba-5d17ed562b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 cf9d562c-dd46-46d8-94de-4f69e9d0605e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 cb08c260-e9e4-460b-a3ae-3699843ac787)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5834;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #690 8c1731c6-e6b3-4d5e-895c-06ef412a447f)");
unit.assert_eq16(16'h2A98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #690 a9ab2fca-31f2-415a-823b-293b906a176a)");
unit.assert_eq16(16'h55F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #690 54f507ba-ad96-4623-9980-a8ec99f14c6f)");
unit.assert_eq16(16'hBD79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #690 416aa7b3-ad0e-43ef-bedd-20be5948b915)");
unit.assert_eq16(16'h0CDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #690 645bd8c6-101a-4644-9c6b-0ccd49c80bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 7139e03b-8286-494a-bef4-3d2a6d044d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 6f5e706e-a473-4d75-be05-31323688d6a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 fdf8f975-9aa1-4672-9a1f-58c5edfe4891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 dedb905e-4002-4030-a315-8e9f3044b0b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 b3f3bb33-2b33-4572-9cd5-4c503831c4a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 12d8e5e1-eb61-415e-af12-e878c2e5aceb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h75CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #691 af33da66-d414-4b51-9647-87fd9e8cbbd9)");
unit.assert_eq16(16'h75CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #691 7d26c778-a512-468b-801d-17ee6257e474)");
unit.assert_eq16(16'h6A5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #691 485647e9-cb91-4902-b2a8-d9e077cf8faf)");
unit.assert_eq16(16'h0113, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #691 41ed0942-8483-4787-b4ae-2c0ee046919e)");
unit.assert_eq16(16'h0F4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #691 ecebedc9-afba-489b-a2d3-b950ddf46bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 e0e40ce8-1f5e-4dc8-a6aa-e118599150de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 b8c31e02-550f-4993-96b9-642a35c274c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 1fdc7fca-416f-44c5-8d54-05dbab75c1e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 a36bb000-870f-4c48-a425-94eeaf866514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 d48d7bc9-44a2-49cc-abbb-48db6d523fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 4205521a-4fdb-4928-89f9-d6bdb046dbd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9C32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9730;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #692 622916c0-f79d-4a84-8f73-96761e2d1740)");
unit.assert_eq16(16'h9C32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #692 9039ec00-024c-4e17-9efe-34d09ab90bd7)");
unit.assert_eq16(16'h07D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #692 20a05183-ab54-4e8d-906b-4413610c7602)");
unit.assert_eq16(16'h1DF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #692 4163b187-912d-4a00-9046-5a58266f872d)");
unit.assert_eq16(16'h02FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #692 97de8017-47b2-4dd0-ace3-8a8913988089)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 bf99c8a4-47bf-4ce8-a4d1-24474da40ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 8ffe0ac0-6f0c-407a-a9d3-8aaff3213ac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 46727b9a-8a77-4821-88a5-89c21b9da503)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 e1d3d0e4-ce02-4061-afb3-de9ae6c82286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 8952e5f7-5ed8-469a-b93c-6e79b48ec8fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 009cd147-5970-484c-bf91-b2da51606318)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDE6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5679;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #693 decdf473-6ed5-4d90-a362-cb0a51c4fc49)");
unit.assert_eq16(16'h6C35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #693 1352e33c-f9b8-4eb5-9204-574eaadba6c2)");
unit.assert_eq16(16'hDE6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #693 4ba5da61-ba7b-45f4-9ce8-f2dad70ad3e9)");
unit.assert_eq16(16'hBAA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #693 8044e551-31a8-425a-b89e-166d3a832726)");
unit.assert_eq16(16'h012F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #693 2893778d-395f-417c-9952-fd75ea7a8193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 028b9d75-0a99-4ad7-9c44-156ddd51aeca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 3f09e0d6-2c7d-48a8-894b-b834bba68b9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 76c41538-18ea-459c-aba2-5004d65eabb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 13b8ac0b-7d3d-47fa-b15a-79f30a8d0ae7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 1bedef40-1775-46a9-9e1b-07c2ed59ca25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 c34ecc3e-f474-40b2-b773-70e000c10a91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFDF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1798;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #694 24f6297c-2536-45c3-a2c0-4a5b20b567a2)");
unit.assert_eq16(16'hFDF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #694 2b724712-f222-4c32-84b1-1b069a733baf)");
unit.assert_eq16(16'hADAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #694 543097e5-2e7c-419c-ba9d-81d30e722d10)");
unit.assert_eq16(16'hB291, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #694 b5b12814-bbb2-4fd0-a7a5-ab7cb97537cc)");
unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #694 17b457f5-7b93-47a8-83f4-e53a0dd6c133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 84ae6f3c-d86a-4547-bdcb-acf75b22a2ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 606cd14d-5b01-4be9-bcd2-384fc3b248a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 045b8985-f760-4fd1-8043-63e8f9c9da8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 82644ebf-6385-423c-9717-beb0dc2537fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 acfcdbe1-41bb-4f2c-b606-ba696231029b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 b8095dfa-c201-45b3-a1a2-a25df6250abc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE329;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h66D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h57FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #695 2f5fb23a-9801-4e69-a369-cd5f63c2e3d7)");
unit.assert_eq16(16'hE329, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #695 1e0883e2-35f8-4664-a318-4f055fb182ed)");
unit.assert_eq16(16'h66D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #695 0946bff2-e5ac-4d6f-ba76-ea3b9d7ed354)");
unit.assert_eq16(16'hF639, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #695 11d68fff-a5e1-4621-8c5a-75b877eaa420)");
unit.assert_eq16(16'h05B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #695 4a1359b9-a002-4f95-ac6e-a1326280323c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 8fa59436-fc92-441f-8b95-94017820a156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 b9683981-4ecc-4be2-8e60-9ae26cd15d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 d12483ea-0a70-44b6-ac29-57bda4ac87dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 34cfe7aa-157e-4892-80ae-4f54747388e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 d8490f92-466b-4dbf-9457-951c3854b841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 a766d20f-beb8-42e5-99cf-82de47d449ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4564;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF12A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #696 0ff7c60f-2ede-4dcf-97ec-aa9b9184ecc9)");
unit.assert_eq16(16'h4564, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #696 bad2b115-b265-46e7-9b6d-e79bc559bdc4)");
unit.assert_eq16(16'hF12A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #696 6ce27bdb-36c5-49d4-85e3-fa3246a12c49)");
unit.assert_eq16(16'h354B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #696 cdcd68b2-1d3d-4915-8266-7ecd462d8095)");
unit.assert_eq16(16'h0C77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #696 6bf01143-ad82-448e-bc11-e97b7514398e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 13777d58-10a4-484f-afc2-f912a0eaec84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 3747cf5d-913e-4f00-aea2-0ac88f620a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 fce93fdc-d393-4c82-9fed-3ac983596dd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 1b00d1fa-c0ce-4dfd-b5c8-765a5c6e1a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 8d1cc79e-cbde-4667-86e3-ebe148424002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 70568979-0b13-4e22-bb35-3f6a11ea0249)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA668;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #697 944fee76-a282-4a16-b3bc-e60241269d21)");
unit.assert_eq16(16'hA668, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #697 5aa944ac-8de5-43f0-b346-5e788ffae6f8)");
unit.assert_eq16(16'hDC26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #697 49501ab0-5e4f-401a-92fb-d48ae70217d7)");
unit.assert_eq16(16'hD2E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #697 a53fa390-3fbe-42c8-bc3d-df0863c09496)");
unit.assert_eq16(16'h0C34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #697 4751a360-5c61-4c85-ae37-b3b59fef3501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 68ea799d-6447-4285-bfa6-8463b8b82cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 7684c2ad-190d-4cf3-ba4a-f802ac257ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 206f258d-d3f6-4611-b1ae-0eec8f7c15cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 8e2651a4-8aad-4017-8eef-d6d0305f4919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 7445d4e6-657a-4e19-b701-c3b23d115a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 c420bc6e-d208-4a39-b4e0-8945def7c65f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9294;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h13A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0664;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #698 91d70b25-a2c3-4458-aaa4-6821c2ca565d)");
unit.assert_eq16(16'h96A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #698 bb5276f7-b207-4cf2-bef7-c952ad374ea6)");
unit.assert_eq16(16'h9294, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #698 34a3cf13-577a-4aa7-8788-a3415ed69039)");
unit.assert_eq16(16'h81EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #698 78f63d23-3caa-46ca-b8d4-896959f4aa82)");
unit.assert_eq16(16'h0666, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #698 f4e00630-c158-4d21-9e89-84cfb1de400d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 570df9db-c69d-4fb0-8d85-c2ba77c26e86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 ab917fca-a91f-4e93-b526-82ab061c8c84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 ee2f088d-2937-46c7-b141-51793b7212bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 88543a16-34ca-41a8-96ff-2c25385bccae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 61ac9e24-cebb-44f3-841a-7235e920b0f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 9e5f5f62-43d8-4f7a-89b3-e39c74291eb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6600;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD38C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1A03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0836;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #699 ae20a206-c19c-42e2-bef6-c2cc50fb25b1)");
unit.assert_eq16(16'h6600, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #699 cbeb0d40-8704-4e3a-adad-e28256e6ce1e)");
unit.assert_eq16(16'hD38C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #699 f000adc1-e9e7-4845-9e12-4e439c8b6956)");
unit.assert_eq16(16'h679B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #699 8e7c130a-fa84-43fb-9a17-2cf920638f21)");
unit.assert_eq16(16'h0838, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #699 42df9ee5-703f-4fd6-9559-855f75673140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 9e9c13bd-311b-4406-a585-caa94007d075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 383d480e-c53f-4dfa-bab7-40dc119a1708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 5ba7f5f1-3362-4017-a17f-65dbf482f1e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 dc91b5c2-9903-4297-8b34-dbf1e15ae78c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 61384107-3dff-42c4-91c3-ec03ae939f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 93b95a70-4d15-4814-8248-74cca13083fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA514;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h44FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #700 c0923893-5c37-4a97-8999-0aa51cc9fe6d)");
unit.assert_eq16(16'hA514, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #700 ed4664d7-468b-46f6-b9d4-e69c797c71bf)");
unit.assert_eq16(16'h84A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #700 ef0b81eb-85db-4401-bad0-ae4e98074780)");
unit.assert_eq16(16'hED0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #700 52877aa6-2713-4363-9d11-f3b80bb75d7b)");
unit.assert_eq16(16'h0BBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #700 f89c0da5-da27-4ad1-931e-be7a8f1c238d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 78c8bf5d-182e-4e43-b17e-178821a47a81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 f7d86604-8600-45bb-87fe-20c6325508e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 746451f1-4ac2-4c95-95b7-97337be7855d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 0faf74d2-730c-475c-a06f-2a66f8182635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 d512c0be-80ab-4a45-bfbd-322753af9ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 c910f017-bff8-498f-b93e-3194496e36fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h92E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h50A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0293;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #701 0a1579fb-a232-4f1a-a58c-2d8ba958de67)");
unit.assert_eq16(16'h92E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #701 4a053936-057e-4fe9-8a54-887db30494a5)");
unit.assert_eq16(16'h3E91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #701 a8d91f5f-c872-4020-b3ec-2e2b48f23857)");
unit.assert_eq16(16'h7037, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #701 c7e2503c-6e56-48da-8555-dbb83147a882)");
unit.assert_eq16(16'h0295, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #701 20b075d8-0e51-4f52-b89d-f7edff73b1d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 96934628-d68b-4a80-9987-a3eae7fb924e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 01bff3c3-6777-4bdb-b2e0-b738a4769ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 3dd7b52a-158f-4bc3-ac5e-415e0dca30b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 1c83bc8c-63f5-456d-b349-4495c862cd0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 fbc82562-c1ad-473f-b8b3-a4a636d7300f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 3fdcce58-92cf-4856-a796-2fecf519e66c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2CA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5347;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0262;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #702 f5691519-70e1-451f-8717-7cb264cc4c3b)");
unit.assert_eq16(16'hDAD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #702 8e6385e6-3384-4a4e-ab78-9025270019e4)");
unit.assert_eq16(16'h2CA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #702 72db5684-2c1b-4de2-9503-8065a2237768)");
unit.assert_eq16(16'h07A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #702 72b2d7e6-c8fd-4a38-a622-94021296fc4b)");
unit.assert_eq16(16'h0264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #702 aec9fc09-2bb0-4232-ab9b-b707678abf66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 505e980a-95eb-4fd2-a02a-281c0f194dcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 b637696d-5bdd-4b49-a9bd-245f380e26b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 941e2cb1-fb48-4afa-a730-21106b66b7df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 7d4ce0ed-19cb-4239-9583-c777f999133c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 60bd8f24-cae7-42c2-b76b-f2007350f38b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 48381236-2af1-4457-9b1b-cc49a5afd56e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB691;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h546A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h69EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #703 deb599cf-618e-4b39-a983-bf1f9f15e262)");
unit.assert_eq16(16'hB691, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #703 7164c7a8-559b-44d8-bc41-67440295c929)");
unit.assert_eq16(16'h546A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #703 5993cb18-fb6a-4bcb-9d5b-a110655b8e0a)");
unit.assert_eq16(16'h0FB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #703 1d30798b-1ebc-48c4-b10c-1527b82408a4)");
unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #703 6a525f44-3051-40f7-a76d-897c6d0b79cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 e98c0d4c-6f49-449a-a81f-77340070cf99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 4a7e7953-fd09-4059-819b-643861e6d8b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 c53d419d-baf4-4ec5-819e-5c57ee17c538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 3b5ea25c-4285-4a92-bb9a-67b1e5fa45dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 968faad9-4ed2-4ece-9482-5745dabf5e9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 0219eea1-8346-44cc-8493-22c35540a93b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h290D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h12FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h54CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #704 af1f0ae1-3414-489a-a556-691ade64ecd9)");
unit.assert_eq16(16'h290D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #704 9199090c-f0f9-4fa9-a3a1-46de7a0a91c5)");
unit.assert_eq16(16'h12FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #704 79306eb3-27a0-423d-afa9-652a80271eb0)");
unit.assert_eq16(16'h0809, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #704 007f09c5-37c9-499b-9cc7-39176df52dcf)");
unit.assert_eq16(16'h0FBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #704 b7ac8f43-c265-49b4-a622-70d6fd8d28af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 dfd4ec5e-fab8-4584-8b85-bfaa5ab60e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 9361d942-c444-45bc-8f44-37c266e655e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 74075c98-301e-48ce-bdab-827363f8def9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 d1fd3bc9-ef60-4bda-aff3-b3ed7d6a99dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 1abd005a-10c5-4e95-81c7-b00dc0918777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 c8dedc34-f3fa-44fa-9e78-3c7c91062b9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8066;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE7AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAFBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #705 2f12fdc7-1fc9-498a-b2d1-84528561a937)");
unit.assert_eq16(16'h8066, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #705 48b1dd9f-6b9f-424e-b2b0-ba87a0f82267)");
unit.assert_eq16(16'hE7AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #705 2ff06d87-4039-4fac-8764-e2f42f71a0b3)");
unit.assert_eq16(16'h5098, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #705 349c0e25-2e7b-41e2-9446-1f7d68be3497)");
unit.assert_eq16(16'h0E68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #705 bd5f5a58-a690-41ef-b828-61d0b54ded4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 28c59418-e458-42f2-8832-c17b3b98c31e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 85de678d-6951-4ada-a4a2-70338ffd67c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 962c6dd2-af22-425c-a1cc-3522c984666a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 efe7ab33-9f36-4b9a-96e9-31ce10d45b10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 be749823-b826-4729-8e3b-9eaa5a29008e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 5c5c0405-4f0c-4fa5-94c6-278dbd97b3ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEDE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #706 9a2f9aee-f00e-477a-a1ff-f85edb2a256e)");
unit.assert_eq16(16'hE9DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #706 4ba4dd04-655d-415d-a316-d3bc920fd697)");
unit.assert_eq16(16'hEDE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #706 817dd55e-b1e4-45bc-93f6-b2372f29dd6a)");
unit.assert_eq16(16'h08FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #706 8411b67e-79b4-42d6-8718-20a7b236a1b3)");
unit.assert_eq16(16'h0FE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #706 c5564e5f-1c05-4158-8a8a-848fe2149945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 2246490c-0098-42c0-8cb8-4570f7ce17a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 c6db1318-e6ac-4f0a-a8a7-032bec4f2cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 6a34abef-fe72-4448-b66f-81b8c22250fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 62252195-e313-45b1-8987-6f1dece6a033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 e2993761-7bfe-48b2-a800-15fa54762205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 d90dbde2-a87e-415a-a8d7-9f6598b9fc09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8D2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h954D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h843B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #707 75d5a9e5-818c-4e84-89ef-90bb03fc29c7)");
unit.assert_eq16(16'h8D2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #707 eb8d03f7-4dbc-4338-addd-cdf520430ac3)");
unit.assert_eq16(16'h954D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #707 39d95fcd-f451-423a-b5c2-3f20aadabbd3)");
unit.assert_eq16(16'h3839, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #707 e6540af9-a7c9-4d23-8701-15876d89acbb)");
unit.assert_eq16(16'h07DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #707 b79197f0-ac5b-4506-880c-a4cbf11667db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 ce61db21-c8a8-4ca9-bc90-d724e8f8fad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 4ddae03e-6c05-48ef-b131-e351258cbc3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 f1ebbd0e-192f-45cc-9a46-bc86be06ca6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 c3856e16-0427-4453-a5d7-8326c9af8f5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 530f0322-67ab-40e5-a8fb-5845c4332e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 f15b5fa6-0211-43ba-95be-38dfafc4b2e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0357;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDEC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8467;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0296;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #708 4cf9d62b-2939-41f2-a25a-d5c28c229626)");
unit.assert_eq16(16'h0357, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #708 873466db-a743-426c-9677-84b61589fbb6)");
unit.assert_eq16(16'hDEC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #708 0b6335b8-0be8-4ef5-9776-f3a1341bd53f)");
unit.assert_eq16(16'hD47B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #708 56cf57b5-2083-498f-93be-a99f00ff2ae4)");
unit.assert_eq16(16'h0298, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #708 290142ba-1278-46d3-b956-f8df8f717bcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 d635e7e2-43c2-45d6-9328-77018780a1c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 fea68549-46cf-4215-8841-75f62ac27328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 063893bf-790b-4897-9eb7-9eca716533e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 6343d923-406d-4d62-9be2-f87aad7457c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 18eb74a1-40e5-443c-8d5f-c6c50ed699e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 cc0daadd-c245-4523-ad08-2a919855e396)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB367;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h306D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h076B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #709 df18c10f-f25e-4b2e-9ecf-bae4f8268d97)");
unit.assert_eq16(16'hB367, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #709 5c2fbaa7-ba0d-4cb6-a37d-69220f18fb4a)");
unit.assert_eq16(16'h306D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #709 7075a12c-33fe-4a99-b135-7fbb1f5a5def)");
unit.assert_eq16(16'h5945, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #709 4c3ae3bc-d825-4201-bf47-544d9762c611)");
unit.assert_eq16(16'h076D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #709 e4d4bc52-2cbc-4620-b3ac-a969c25be3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 a55e368e-db30-423d-82ba-baa3e1f8131b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 9053afac-7338-4dcb-b67e-712dadb32306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 92ab1d60-7e08-47d7-9673-1466e2cc8240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 824a368d-69eb-4261-8fa5-6c0695fa6a7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 47c0c050-0ec4-4069-8585-7bf11096321d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 3319429a-404d-4cd6-864f-0309dc60317e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9645;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF923;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #710 63e82474-62e9-4ab7-bcd7-1ba78cc908ad)");
unit.assert_eq16(16'h9645, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #710 edea2ef6-f706-4c3b-83fd-12d00693f85e)");
unit.assert_eq16(16'h4E4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #710 2cef86af-3a4f-4fa5-aa2d-2297760d74fc)");
unit.assert_eq16(16'h0AA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #710 f61736da-7264-4466-9a68-9d78ac929cfd)");
unit.assert_eq16(16'h0D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #710 17a4f89d-f1c9-452a-a6fb-5c0bbffc5a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 fe84e278-69de-4e95-8b5d-cf7702afa5cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 442c7240-d37f-446a-88bb-3a6f69b37f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 40eca1b8-eb8f-4fd7-b94e-f42cf1b057f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 cfb97d07-a972-4a4f-a4b4-aa90819a4f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 599a46d2-e949-45fa-a909-0e95206987dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 6c983d41-50b7-4249-a755-8355d26a7f57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1270;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h151F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD4E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #711 1f4c7f01-8dc7-4c7a-bcc5-eea1c5b55d5d)");
unit.assert_eq16(16'h1270, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #711 0a5f7af0-6a1d-4a95-a1c9-7d652da9d4fe)");
unit.assert_eq16(16'h151F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #711 cc8ac2a0-ce28-4f50-8c14-93bcec84f05e)");
unit.assert_eq16(16'h5AB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #711 61167bd8-6e26-441d-ba07-824f563ce874)");
unit.assert_eq16(16'h0AA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #711 be904bff-9b7a-4984-8e6e-ab1741ede60c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 df41c7ed-4811-40e4-b7d4-205ed86e7827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 3cce4291-701e-4064-8a5c-7d807be9632a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 d5de876f-724c-4116-8e2f-272a1d034df5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 a1c96474-da3c-482d-bd3d-4b836eeb09b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 af6ad7d0-f656-44e5-8ab3-757a9e76000d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 0b7026e6-278d-4d08-ac0d-177855837454)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h083A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h46B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0175;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #712 6c9ec7ed-4fb5-4261-94c4-804d8730a748)");
unit.assert_eq16(16'h083A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #712 059f266a-e2e2-4dbb-85d5-133e5e34c845)");
unit.assert_eq16(16'hE1A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #712 3eac9b74-d554-4875-80e6-22ee354556e2)");
unit.assert_eq16(16'hD3AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #712 b614d793-d176-445e-a9dc-c9b5ef191b61)");
unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #712 6ffabcec-3968-4685-bed8-f7db6614d82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 673c510f-5592-4a7a-97b8-c796d525ad91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 e470b18b-b867-4f84-862c-40625475dc69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 1d4d19d0-aff5-4859-a105-fbb8356b5f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 1d597cfb-9b7e-4bf9-92c7-f3ddd3edfb96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 e2f77da5-1c02-4e3d-97a0-1fb4842b73c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 ac40684f-577f-48c3-86c4-26c66eb8ee84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h00AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h12B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #713 822db6cf-87d1-414a-b01d-b95b1aaadf5b)");
unit.assert_eq16(16'h00AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #713 14818fdc-1ad2-436d-ab05-108bf0990d6c)");
unit.assert_eq16(16'h12B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #713 2268e8c6-2712-47ab-a835-ccb5906f8930)");
unit.assert_eq16(16'h7556, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #713 e5f93476-b704-4371-bbcf-5d4b68ca8b32)");
unit.assert_eq16(16'h08A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #713 6f2f12e4-c6ac-41e7-89ac-0ba83c0c073c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 c505dc5f-f392-46f8-bbad-bef03b752c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 6d599163-3180-4fb3-967b-86b88f95341d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 7f929c78-9b00-473f-bd86-145c50e8790b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 a25c9181-0eb1-42c8-b316-192228e5f594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 9151103e-0e90-463c-ae83-a0e723a2edfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 c9838bd7-08ce-4aea-939f-716ae57957c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3716;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h35B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #714 385b3297-f3e9-4baa-8506-aa3b64c7f970)");
unit.assert_eq16(16'h3716, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #714 090e33f4-fa7b-4439-8885-fa2f7b315198)");
unit.assert_eq16(16'h35B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #714 3c4c689f-36dd-412c-bcda-d672a19016c3)");
unit.assert_eq16(16'hFE13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #714 12bb76e4-bbb9-4a29-83c3-c50fda44b757)");
unit.assert_eq16(16'h0D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #714 e7750da1-beec-42aa-aa30-ef4424fdc6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 4ed5f6d1-958c-45ba-8dbe-7ccf99e5eebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 186631fc-52fa-437e-9dc7-36df3c05e431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 aa45394f-d2a2-471a-8cb3-947bbca865bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 9753861e-f371-4b55-8ca1-058bd970bec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 f2fb0d39-f528-4f90-8507-7a14116bae85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 a21c95b8-0222-432d-b81e-e4c05da227b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0811;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDEB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #715 fa344eab-3bbb-4c98-a9bc-bd47e724135f)");
unit.assert_eq16(16'h51E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #715 8a130bc2-567d-426d-8d24-bac7e8e0d6d3)");
unit.assert_eq16(16'h0811, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #715 1f177752-0233-44d5-8c04-5dd104aa2219)");
unit.assert_eq16(16'hA284, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #715 8edd3ac7-4421-48fc-9f27-a5cb29c85e82)");
unit.assert_eq16(16'h0F52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #715 3af7c67f-fec3-4e6e-a92a-0054b08b02b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 f9a71d0e-3be3-4511-83ae-4e76d64905e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 2a097b85-6646-4460-9b20-93aa331470ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 bd097800-ea78-4b3a-a55f-bb89fce584ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 93be80da-cf53-4f9f-b0b2-a015bfbb6940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 8ee18063-8e19-4490-9a1e-32f79fe94a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 a360a6b2-3a37-42a2-b2c3-263d68da2c3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h74C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1517;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF369;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #716 be1ec905-3f91-4644-97a0-5210c55ed371)");
unit.assert_eq16(16'h74C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #716 a5fe8e49-b99a-41c2-8cb5-8c8eaf3d9e93)");
unit.assert_eq16(16'h1517, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #716 3cd709b9-ecc0-4edc-a2e7-ef3baca21b59)");
unit.assert_eq16(16'h1970, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #716 9510a136-e3a3-469a-ab2b-7b8697ece43a)");
unit.assert_eq16(16'h0D8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #716 e2152128-63f3-4e86-a17d-3c82417e9a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 98d27d47-d1a3-4cfb-9785-849ce9f567be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 56594f3e-b0c5-43e0-88ee-bad8d7385db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 f9a32f16-0170-4249-89c2-a092ed2a1fe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 909ab927-48da-41d1-bfc4-81d2399b1258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 59201a57-a1c4-42a2-b7d2-bbacf0cefbed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 765da0b9-dec2-48fa-b259-d31d0e7cb33e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4E29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC33D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8989;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h010E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #717 5693c698-0a30-4d98-a3fd-e31b395e6a24)");
unit.assert_eq16(16'h4E29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #717 afb7d582-9a98-4b9a-b9ea-7c636585ec9c)");
unit.assert_eq16(16'hC33D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #717 b7d1d1e0-5f6b-41e8-9089-9a99385715e8)");
unit.assert_eq16(16'h771B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #717 716f5a96-16f6-4fd5-af99-c70bfbcc9f88)");
unit.assert_eq16(16'h0110, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #717 e3bad650-0185-4e1a-843f-f064c600a6b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 27d757c2-d353-455d-ba4c-669e4bb56f72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 9807bb5b-244e-430d-88c8-88c788b721e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 fccfc473-7eb1-45f1-bddc-57ec3ef48d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 dcfbb743-d17f-4e82-a84c-58a11b7cdee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 ced9b06a-8175-436f-b7c7-0cbc2832d80e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 f5555edf-5e39-4585-aa62-b158eee7af92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8268;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h27B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #718 cf0d648c-d548-4d0d-97f9-e4c7d4250846)");
unit.assert_eq16(16'hDC7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #718 603c7038-73ed-494f-8e42-91b343fe1399)");
unit.assert_eq16(16'h8268, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #718 a7ba0301-a8b4-4dde-92c1-b8712cfd9c42)");
unit.assert_eq16(16'hCAC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #718 3cd02e67-1296-49fe-8e66-a92d5c87783c)");
unit.assert_eq16(16'h0AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #718 437478b5-25eb-4eff-9e3a-ab49f886fc35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 4aa6c4aa-10d9-4931-9794-0d18787affaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 d8082c69-cd88-47ec-a90b-ab4bbdbd1b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 8b89589b-db7c-4ce4-b550-2dba9e53d858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 cd5f666e-4192-4d43-82ac-9a18301d14ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 eaabba6a-5ead-40a0-b28f-b4adf9e58d2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 7ee862f0-0f67-49d7-8133-b2745a03eb2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7354;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2425;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #719 df2e3122-6b80-4eb9-a6ec-fddafb29f98e)");
unit.assert_eq16(16'h7354, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #719 f67d397c-21fb-43c9-a9b4-73c1e6309325)");
unit.assert_eq16(16'h03A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #719 098d53eb-2eb2-4b30-8fa3-edf0d63d9ea4)");
unit.assert_eq16(16'hA05E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #719 47682b3f-c31e-40a7-ade2-701e1066e977)");
unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #719 d4f42f44-2aff-4ab2-9f4f-30fb635d7b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 fbf98cd7-2a60-4740-9a73-2026e36210c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 5be8f8aa-c968-4c35-8ed3-5f1faf0665e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 a363aa70-7ce0-46b9-88cb-151ba33d47f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 d2354948-2584-480e-803a-9d3214ef4f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 f77d818a-8146-413b-a367-97df029a3d4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 48a410f7-56bd-4120-ac67-5a3a7c771bde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h78F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1C28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4229;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #720 f84afa19-5b04-45ec-9381-02130c9a160b)");
unit.assert_eq16(16'h78F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #720 180be9ae-3266-4b39-95b2-0bc6e79bb0f5)");
unit.assert_eq16(16'h1C28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #720 60f7743e-884f-417f-9e22-691f4d960c24)");
unit.assert_eq16(16'h567D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #720 53500c9a-0b12-493a-8d53-16c9d23f49d7)");
unit.assert_eq16(16'h08A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #720 a5b35939-2a2e-434d-bb8c-c95befcec55e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 671c915c-dd7c-4144-92eb-3601defb3418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 52b84db4-e913-4e00-87ed-90617c12dc62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 cfd70886-ce19-4e94-b45a-2ffd948a6e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 f181b89f-0c31-4f44-b759-ac814f2b3bc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 d5fc957f-9cfa-4273-a17f-183b811dacda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 a282aa09-95cf-4d60-94b6-6ea13c93d63a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7B0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF053;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #721 77f0357e-f1c1-4025-add3-46319f041db1)");
unit.assert_eq16(16'h7B0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #721 f03f2141-3dba-4048-ad25-46883aad7aad)");
unit.assert_eq16(16'hF053, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #721 3853a1b4-7d3b-4916-baa7-48ccc18c9ca5)");
unit.assert_eq16(16'h288B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #721 3eccec45-ff37-45d4-9fb3-9583cdbcb2a0)");
unit.assert_eq16(16'h01B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #721 57d0cfe9-297a-497e-9ae6-6e007778cbcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 25deb492-1db9-4d74-b026-258596666fa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 aa6f8124-dcc6-4c32-8b7d-904fa7764620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 4ce9ebee-b4c6-42f7-9d26-6210ad6263d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 eece4e62-0813-4fc6-ac4f-b0289b9cf2db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 982f86fd-acee-4755-a246-28a82711f3ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 26808a82-988e-4248-8dde-e2758ccc1a3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB41D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEC62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0163;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #722 de47beb4-834e-4db6-b91f-613b3462f1a0)");
unit.assert_eq16(16'h8E14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #722 8f01e989-2dd9-4b60-b857-6e50e21b66dd)");
unit.assert_eq16(16'hB41D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #722 8fa4b36c-47cf-4ee9-8582-5f0964b117b6)");
unit.assert_eq16(16'h2557, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #722 d393332e-bcd8-4526-b58e-8e7e4ab5a126)");
unit.assert_eq16(16'h0165, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #722 6ea10dce-2527-4674-bed0-e60ceb2aff0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 fbc7997b-abc7-48d1-a6aa-554fbb5e7b70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 7baec568-aec5-4267-b3df-3ca848d86785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 4132c4ba-6ac3-4451-b1f2-f7e28e10d74d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 3fd6a0d6-8037-4949-99cd-166be8482989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 1037329b-a85f-471f-8ac0-996e4995539b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 87a3c347-732c-49cf-ba5b-557e38a27291)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE988;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #723 5d750c46-a2e1-40e2-8762-9cff18ac28cd)");
unit.assert_eq16(16'hE988, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #723 2c772d8d-9aa6-4269-bdd1-95d05f956438)");
unit.assert_eq16(16'h5A39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #723 f18f8479-fe48-4dbd-84f2-ab32de1ba84f)");
unit.assert_eq16(16'h82BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #723 2a8fd656-3b94-4005-857a-695d814d69ee)");
unit.assert_eq16(16'h0C3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #723 e82f5e45-6533-478e-a493-406d9a40a400)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 0693f86c-ea6e-4cd1-881e-9c2928174c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 cffa9c2e-8df5-4e7f-bda7-e0a75ad2539e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 71bfd3ff-f789-4a48-884e-23df753e6aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 7e5804de-6544-4799-b2d8-c628708d5de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 1f24434e-b9c7-47d1-aec9-f652e6d39882)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 1fbc9548-f84e-41cb-90dc-6d0b4ad63f3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA4D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA6DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h757F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0893;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #724 a5daef3b-1520-471d-9267-920a1009895e)");
unit.assert_eq16(16'hA4D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #724 652417f1-441b-4355-b322-afa1523e8285)");
unit.assert_eq16(16'hA6DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #724 275f8fdd-32d0-4d09-804e-9b723c2d037f)");
unit.assert_eq16(16'h380F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #724 8b6e6c88-4961-42eb-83c1-b5b0f9a1d48f)");
unit.assert_eq16(16'h0895, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #724 4171ace9-070b-4608-a26c-c00312674607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 f9c56bf7-347e-4b4a-a310-e0fbdf4c8563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 e31df1b4-3655-4fec-89a1-d8f187113f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 59ce4a50-0245-47d7-a09e-88bf62c62a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 0505514e-2cf6-4356-846a-e09b01cb4f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 e584ff01-4efe-492f-867f-302719e67777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 0a25365a-121b-46a7-835f-313a42114910)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB193;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h430A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5FFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #725 27373d2d-aa51-4bc1-8b07-df019401bc61)");
unit.assert_eq16(16'hB193, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #725 c4cc905a-6236-4de3-8876-6f6eb15edfbe)");
unit.assert_eq16(16'h430A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #725 6399dc9d-c35f-4e80-980e-1c82c26cf0ab)");
unit.assert_eq16(16'h2BF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #725 e8c77537-5416-415e-b845-48d73d08f66e)");
unit.assert_eq16(16'h0BAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #725 6777e51a-0fcc-4121-b98d-744106e25f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 7880a99f-6c81-4bf8-a7c9-67f0c9ffe31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 83dd4ff2-2e99-4f52-ad28-76cedf7ebca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 e4507008-3335-416d-a723-8de1f11f88fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 770de046-b888-4856-b2f8-e966bed42e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 0d971227-dc5e-4f2c-a6b7-abf62903758f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 d7ad92d9-17e2-4fe2-9caf-ea7a6012f36b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #726 dc2e2893-e1ac-4e09-933d-d60b3c6a23b0)");
unit.assert_eq16(16'hD7A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #726 c80250a3-b555-4696-b428-89ad8eb88b43)");
unit.assert_eq16(16'hD7B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #726 a39d29df-ed67-400f-9f3d-eab5e53a74f2)");
unit.assert_eq16(16'h81AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #726 7d8efcd3-31f4-48b6-bf1d-f482c8679025)");
unit.assert_eq16(16'h0E96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #726 fa09f5b2-042e-43f6-a09d-d83d5f869707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 447cef56-0873-47d9-947c-db4b25535246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 e6d07f48-97a4-4f5b-9557-493cc7a0e81e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 8f70dd18-20c0-4482-a507-6a857c72ef8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 b8182730-1979-4479-b74b-39a86054a42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 3539e33e-521a-4fe0-9961-3dd396fa55f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 0c98a596-de36-4e85-a10e-9f2109e8d7bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4814;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD65;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3DDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #727 ceb32c21-34f8-459a-b065-cc1bb84bfc1c)");
unit.assert_eq16(16'h4814, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #727 b66717d1-6c67-4dc0-8488-2d8ab8a00db4)");
unit.assert_eq16(16'hFD65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #727 1697e768-7340-4f41-9dd5-378622ba5a23)");
unit.assert_eq16(16'hF8BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #727 b431b2d3-4a1d-49f1-a7a1-80952d7726b9)");
unit.assert_eq16(16'h04D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #727 3bc0fb6d-9ab5-429c-88c6-5dd0d49dff86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 d90b0996-c816-4139-a8d5-edbfee2709f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 9939725f-2032-465d-a7c9-4edebcb6ab84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 17090494-5cab-4dd8-9262-1729f889d494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 f409595c-643b-4fc7-b4ea-af036e1f7ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 47fb7075-3967-4279-b434-9e61ac7f388d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 3ef0961d-ec9b-4893-86fb-6cedb42a0b06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #728 558b05cb-efe1-4073-aee6-1b36dc16d847)");
unit.assert_eq16(16'h6C1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #728 1ac7ba26-dfee-49eb-bdde-ce818dc95642)");
unit.assert_eq16(16'hEA7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #728 dcac543a-1697-4609-9968-04f44a1318fc)");
unit.assert_eq16(16'h7A5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #728 c81c1d59-52d2-420c-ad3f-cf687a7376b2)");
unit.assert_eq16(16'h0B15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #728 281e2128-35e1-480b-920f-0e44ed1dfc48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 d77cb550-d94a-4d00-9959-9a432c96d84b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 18432228-02c5-4a46-b1fb-6392505ae79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 5c5d23cc-864c-4011-988f-9e00aaa762b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 9cabb452-3bd1-47f1-9850-e9c7e29c677c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 453c86d9-7b6c-4e48-9962-f794b2d880c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 673a1542-92df-4f81-a7eb-fb92d29adf09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5548;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #729 c291f0b6-4ecd-4e4e-9e5d-ccbb5f177d57)");
unit.assert_eq16(16'h0F4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #729 7800ad7f-3fdf-4e55-a291-62d13c589433)");
unit.assert_eq16(16'h5548, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #729 63af3e47-70b9-49fe-ab9b-178d7ad27374)");
unit.assert_eq16(16'h8C21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #729 8ebe0755-361f-4ec6-abcd-31ed9d09ee8e)");
unit.assert_eq16(16'h04FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #729 dddcf7a0-9418-4010-8ce5-705d140c4e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 f482ed68-cc59-478b-afaa-c0c9b49d24ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 998d982e-d46a-4aee-aecf-e0862be61e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 e6fb69df-a906-4f79-bbfd-1dd485c35eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 c0e90843-aef2-408b-a909-50eabee6be93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 57b0ed71-70ce-4479-94da-2aa630ed9dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 4b14ff0a-db72-4415-9aa7-328b3529df3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA44D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB484;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0367;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #730 09bafd59-a160-4e84-a2dc-01ba06673847)");
unit.assert_eq16(16'hA44D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #730 7b36caf7-3305-4c71-8b36-87ad47af9f49)");
unit.assert_eq16(16'hB484, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #730 0a8cbcfe-1472-4c0c-b7eb-6d0f912633e7)");
unit.assert_eq16(16'h1661, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #730 3f1e375d-a665-45b0-b1a7-1a7f5bde60ea)");
unit.assert_eq16(16'h0369, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #730 16d85de0-cdc6-4531-89f2-afff8dd99523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 760841ea-b5e6-47aa-a9c3-3d392c451d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 0aa2593e-9e36-46a2-89db-6e10cc3d4657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 218f2c63-61d4-4559-abb7-b6b197ba38d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 47a0f809-63e8-45ea-9537-e6753fd145c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 2dce5c83-aa3b-4f8b-9e0e-36a29d5ed6d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 222e7b0a-3f90-4e52-bc13-fb01c84b6d7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD886;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE45C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA817;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #731 27aed5db-f56a-4f69-b0a6-6a6658c6329e)");
unit.assert_eq16(16'hD886, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #731 bf74217b-3d77-465a-aeed-3bdb87e66eaf)");
unit.assert_eq16(16'hE45C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #731 4597e9f6-ac12-4bf9-91d1-9b9b6f2cc54a)");
unit.assert_eq16(16'h57ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #731 d8971ba2-c462-4379-a86b-ce3935b9152e)");
unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #731 c3bfc95c-dfaa-4e30-97a1-89ebf4243847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 e340a392-7d5f-4410-86c8-c8004e3bca3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 3368f8b3-b99a-4a17-9502-79386f4284fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 daca3082-9e8c-4a7f-9863-3b1d03a21560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 f2e34de2-0191-4deb-84af-c58764f43356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 f8d21980-9730-4c1d-be2d-0804fa2e4e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 f58a1660-b503-4bd9-98ef-c4f32289c128)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6E3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h23C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h829A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0613;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #732 377ef324-90a3-4557-91ee-83ca3dc63232)");
unit.assert_eq16(16'h6E3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #732 2709869b-76a8-436c-a33f-5706a1ee0978)");
unit.assert_eq16(16'h23C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #732 c947cf54-fc93-4554-99ef-86adffc736bd)");
unit.assert_eq16(16'h735E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #732 4d476cd0-efdf-47c9-b3c4-3828a65e8845)");
unit.assert_eq16(16'h0615, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #732 87838c2a-c505-4042-abd1-6c5824641e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 f05e6c28-24df-4fdd-82dd-7af73aa415a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 62bd2ebe-0e5a-4715-abd2-34cbb629d7d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 ff414581-a465-4337-9327-3eb51abc8c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 124cfe14-220d-4cda-9dcf-a40bdbc19197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 d4b4f86c-2439-4f9d-936d-e2d86f16d503)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 82109782-ec06-4fd9-b008-1c7d7cdaa08f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD3D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDE92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h376E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #733 349de264-f7a9-4988-acee-b77c4a1c3aa8)");
unit.assert_eq16(16'hD3D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #733 7166e2de-6ece-419d-92fe-0c75e998e384)");
unit.assert_eq16(16'hDE92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #733 e20e1e8e-87a5-4f04-8cdb-25e3d10ee6b9)");
unit.assert_eq16(16'h502F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #733 11229e25-3fd6-4b2a-ab6a-73ffd8f2c6e1)");
unit.assert_eq16(16'h0EE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #733 abad1221-a152-42ca-936d-ce6477c8ba27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 246cff97-4a77-42fd-93ef-f438732bd469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 df0647a1-5879-4898-9d43-94348d6448a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 541f8154-fd01-4110-9404-e5fb68b1dfc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 bb1ec8e9-5640-4494-9591-96a849fd78ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 bf9273c2-9fe5-4052-b076-656bcd8fbc5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 a05eacfc-9c85-4108-b05b-bb4c24a18a0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h77;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9D4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1001;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #734 c4e18591-4e56-4b4d-a304-669e3fa5c165)");
unit.assert_eq16(16'h9D4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #734 becfcf34-a648-42e4-8a24-898ce3b54138)");
unit.assert_eq16(16'h1001, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #734 22f39d52-6466-4db7-a9e4-2cf5e94bf99f)");
unit.assert_eq16(16'hDC75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #734 04ac7494-cb99-49eb-8be1-c5d89f5806c7)");
unit.assert_eq16(16'h0D8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #734 5b834ba9-b770-488d-a293-e8bb75a2a3aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 5f6f63dc-d393-4e2c-bd9a-ef87c99dca5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 af2c7b93-a209-4cd8-a16a-721ae99166b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 4b51b7b1-9ed9-4cd5-85db-5d727dfedc61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 4991071f-b825-4f8d-8391-88549f3bb427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 a58a364a-cf21-44cb-b60a-ad0febe4c2df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 837324b7-4f8f-4dbb-ae57-0314471f8c9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD740;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9AAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #735 8d645a8c-1ccf-4f5b-bd5e-0428c41d47af)");
unit.assert_eq16(16'hC0D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #735 9f3b2904-f253-4a01-bd20-61ab9dfbe2ad)");
unit.assert_eq16(16'hD740, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #735 e07f10d9-ec6a-4c9d-873e-5a918839d5f4)");
unit.assert_eq16(16'hC25D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #735 499e3851-6a0f-41ef-949d-792f5f4bf5fb)");
unit.assert_eq16(16'h0A92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #735 a75b893c-a468-4bb3-a25a-5bc825f82ade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 20b7bd07-8b37-44bd-a4e0-a6b359e1f5b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 898b08f5-a8bf-4a15-90a2-0f4a456f822e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 5dca8f3b-5a31-4502-b258-4638f308d860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 fe1fceb4-2d04-4dc8-804f-b03cc3b568ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 e2ece205-f456-4a59-85e8-951b453908a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 ee4ac504-9f24-476f-9cdb-85e0b0152729)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF643;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h219B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0438;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #736 b22046a1-1048-4e5e-b4fc-42ddf11476b6)");
unit.assert_eq16(16'hF643, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #736 7cb2fac8-0698-4927-80ff-47f194313e96)");
unit.assert_eq16(16'h219B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #736 006b3b0c-59cd-4678-8d0f-0d92d5e34f39)");
unit.assert_eq16(16'h94B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #736 3608e610-d35a-4f74-bc6a-fd9c1b701309)");
unit.assert_eq16(16'h043A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #736 17ff0fb3-ec1d-4131-80ba-bdc2d3b5874b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 7c141c2c-833f-4f58-859a-cd0bd9bf5855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 841bb19d-d5a4-42bd-9e48-dc4118178f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 2b7022e4-3fb5-4bb0-8ac0-0c9cbeae7b19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 11df47c9-f820-42ad-9420-bb6667384b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 5af20194-88a6-4f28-a1ef-7cb9de0c1c0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 1f7d1ee4-a98c-41d7-8ca6-2a7727b15451)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3816;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0ED1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h32AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #737 34c094cd-b8f0-4279-88bb-4600d7e70c87)");
unit.assert_eq16(16'h3816, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #737 1fea45ce-4390-4e22-8a25-529bcd3c5991)");
unit.assert_eq16(16'h0ED1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #737 8285c1d1-2b7c-4c76-b0de-397be991b26a)");
unit.assert_eq16(16'h48D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #737 ef4760c5-ac6c-4df0-8541-c1a5d8e8eb37)");
unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #737 3341eba3-1d6e-4f56-b03f-063ab7a03cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 32f414d6-ac33-486c-ad68-e9e3c35b7e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 287a157d-ab83-4918-9659-e795b36cf464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 be051bae-d080-4d6b-a034-8d4a67061b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 ca03b685-b977-496b-8e30-616df0f5eb4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 77a0c59b-5651-4e20-9024-64b1a2a12388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 3d97a766-7eed-4be8-aa8e-565042446c40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0CCB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h657D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD020;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #738 7cfabe92-5a7b-4df0-8e58-216665aa8109)");
unit.assert_eq16(16'h0CCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #738 0d9e924b-f81e-4baa-ba47-45bb95addffa)");
unit.assert_eq16(16'h657D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #738 47e247a2-e344-4af2-abd6-3b9f29e18738)");
unit.assert_eq16(16'hDFCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #738 f6fc1395-5add-4b17-af01-59e963dfffbf)");
unit.assert_eq16(16'h0471, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #738 b0fca944-caaf-4844-baf4-2e45e44b0302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 c504c06d-7e8f-4341-807b-b3eb78a231de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 5562b744-b143-404f-a500-d386f57ce3e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 06c65170-dedc-486e-832c-ae3e09e62c49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 7624aab5-706f-40d1-8e3b-1cd28164287c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 8b34da5e-00b1-47bf-ada8-7d8edd9c28d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 87351473-af9a-4d98-88ba-c80b29aaf010)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8D24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h193D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h64CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #739 6bc4f77c-4e59-4808-b00a-6e6fa51be3c8)");
unit.assert_eq16(16'h8D24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #739 cac1c2d4-59df-4189-a320-b1ab71c0e491)");
unit.assert_eq16(16'h193D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #739 e1a47715-3da8-4d28-a187-d1691bd1f73a)");
unit.assert_eq16(16'h52BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #739 df0fe571-7566-4860-8b51-662d360f713d)");
unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #739 e6a99586-22e5-4a0b-b96a-cf8fd0ae3970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 8a6768e7-de19-4838-ba4c-3943415176a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 60a6e35a-9cc4-4e43-b05f-cbc099d72d16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 dc19e1db-589c-4cf2-b477-4387ed1a11d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 e0f1a17a-3d42-4d6b-a558-c9e53ae771cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 e49863cf-1062-4b1f-89a2-24282ba7adb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 19c89dc7-3c34-40d0-808e-aab9c2c792e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD1D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFDF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD176;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #740 f7dcc5ce-a4c8-4ed0-98b5-824026dd21c2)");
unit.assert_eq16(16'hD1D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #740 3603318d-7ce8-4972-bb6b-191f429a863a)");
unit.assert_eq16(16'hFDF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #740 9aa9b7f2-3ada-4fe5-a784-44f24175fec8)");
unit.assert_eq16(16'hA166, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #740 69dd7fdb-0b47-491f-9758-5ae63cf8546f)");
unit.assert_eq16(16'h09F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #740 22971a23-590c-4a05-bfa3-b6f541069ae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 a4bfa450-3d23-4ca7-bda6-24445d5664dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 1971953e-64e4-4b38-b576-04d4dc032219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 390e1eec-02aa-4690-b366-f5861c8b90e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 5eb561b8-b2e9-447f-9ce2-14f4438ba68d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 7cb13475-5dab-4e21-9150-8709d8ebe70d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 56317b84-5cc2-4974-aa95-2160bf81e8c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h36FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC349;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #741 c116aa03-6445-4f7e-8828-cd76f904488e)");
unit.assert_eq16(16'hBD63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #741 598d929f-61e2-4f99-a65d-31b94209863e)");
unit.assert_eq16(16'h36FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #741 36701d27-fd1f-4300-a40d-b49070fa09c5)");
unit.assert_eq16(16'hD63C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #741 c2f60260-382e-4522-bc2a-41c79464dbbf)");
unit.assert_eq16(16'h027E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #741 99ebff04-baa0-4e58-a24a-42076a4183e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 0ecac704-a30a-4e53-9d2e-367828b78391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 33356c12-8f74-4d0d-98ea-d7f576108556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 443d4628-d7c3-4e66-88d2-58876a62953f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 2d25ec52-42bb-43f1-9b20-a31a052ee13a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 08497ddf-484d-4977-af8a-1ca9ef7bff81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 282e0933-3a57-4052-baa4-76eea2bdb2ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD9DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0E4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE104;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #742 327e8d16-1dad-4973-90f9-d2136dc94326)");
unit.assert_eq16(16'hD9DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #742 b8ff8af9-89a2-4df5-b431-02d8afca4d31)");
unit.assert_eq16(16'h0E4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #742 ab828bb4-25ce-4125-b313-96a66b77fec1)");
unit.assert_eq16(16'hD0A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #742 69b55f37-4891-490d-a654-787bb0081713)");
unit.assert_eq16(16'h0D7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #742 cf2f7342-ff64-47a0-a7c8-97323337bb33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 55466e5a-6a67-470d-b148-d9e1c0362ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 164fc6f6-19aa-469a-8bb6-9aed1d10c007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 d29fd911-322a-4971-9509-334277d953d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 e301e478-48ee-4333-b0d4-f37605227f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 2506abe5-6b7f-49a6-af79-81ad57bf8d24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 fcf9c6a2-1c3b-4ee1-95f4-c794ece4d729)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF527;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h489C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0321;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #743 35ef54b8-6402-42eb-a99e-d24e36c748ba)");
unit.assert_eq16(16'hF527, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #743 a306f427-4dff-4feb-b470-3946103eac4d)");
unit.assert_eq16(16'h489C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #743 b8d78771-b86d-442d-9044-f978a0d2aeb1)");
unit.assert_eq16(16'h69D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #743 b8722937-fd73-45c9-9e4d-c7daba0afb36)");
unit.assert_eq16(16'h0323, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #743 081a5df6-00de-451c-8e6f-5d814898ea2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 e5c764c8-74ee-455d-be52-3d2b3ece955e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 e57ef656-6074-4ef5-9a4a-ecb5140daf5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 547d5f3b-9ebe-4c03-b53b-ec5e5f475796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 8e19ec18-7f74-4e1a-925e-a10f7e31e1b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 d72b5917-696c-4fee-a531-a0748eb983b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 c00a17c2-53da-4426-88ee-7f754cf0851b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC27C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h89D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0667;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #744 5a216415-a0c3-45a1-8d40-5cf3126bef14)");
unit.assert_eq16(16'hC27C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #744 744afa3f-ad72-41a6-9124-aa57107a162b)");
unit.assert_eq16(16'h89D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #744 2b9b9993-f3b3-4366-9a34-93562662fa47)");
unit.assert_eq16(16'h5305, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #744 e44b486d-f6c7-4aaf-ac06-31c5158e0c65)");
unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #744 897a798c-7fe4-4966-a687-47fbedb12a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 60b1deb6-57cb-4242-be00-9ffdf7948e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 17570def-aabf-4186-b5ef-d41a83917c92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 01a3218f-19c8-4748-a72e-d6a25fd100d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 82510989-047d-4894-9b64-cc95e06af708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 b81da684-68fe-4ed4-a833-2ce87d5a116c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 080e5d84-cb09-4203-a5e9-8ea21a0b4fc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDFDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEC80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h716E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #745 b67739fa-68ec-4422-9b8d-d9f13457792c)");
unit.assert_eq16(16'hDFDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #745 0feae828-1311-4053-8501-57f31f60b5da)");
unit.assert_eq16(16'hEC80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #745 9b9596d0-1a2d-4aa6-a436-99aaa985b28a)");
unit.assert_eq16(16'hD7EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #745 daafa787-561e-443d-bf6e-dcaa559492d9)");
unit.assert_eq16(16'h0CEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #745 a0dcd772-c6e8-4f5d-a34c-f857e2c2099b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 5dfd06b6-39ac-4f2a-9ea7-02dbc49ea19b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 ce43df25-0467-409b-8ff1-e408fe4d60cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 f646a4d7-c13f-4a3e-a1f6-1f68e2f06968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 64b025c8-80d4-4d7c-add8-790ee10e544d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 c617042b-3fab-4877-9bad-cc378822f1e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 8a79dbed-dc8c-44e9-ab3f-1eeda67ed879)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8598;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB988;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0781;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0368;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #746 ee8178ca-2c4f-44d7-a5f9-700270a9da60)");
unit.assert_eq16(16'h8598, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #746 22fbc582-4be8-4f04-80a9-164a1ff82230)");
unit.assert_eq16(16'hB988, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #746 5d8e1804-b431-4c13-be4a-215707428274)");
unit.assert_eq16(16'h6416, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #746 b87f9b56-186b-4b27-aa2b-7cacadac5a2d)");
unit.assert_eq16(16'h036A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #746 d3dfeaa8-5f7d-44ed-ae45-34b527f54027)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 ad6d1a67-c5c8-4eea-bd6d-3557d70f3324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 1d1a5ed9-bec9-4787-8598-89d1cc34a506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 eeea407c-bd32-4871-8361-e1abcc2ac0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 66a519cc-15d7-4d4a-a2cc-5236b47d5ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 d7babfd9-cf7a-478f-936c-64a723a4e774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 0eed4230-23f8-47f3-9b5e-cf3fc18400f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA784;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h60BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF433;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #747 41ad5def-3ff3-4c3b-bbfd-aa644790665d)");
unit.assert_eq16(16'hA784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #747 b948da37-83cd-466b-9c97-3b60331433f7)");
unit.assert_eq16(16'h60BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #747 1b52f1aa-cfec-486a-93f2-602c758df112)");
unit.assert_eq16(16'h3641, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #747 dbb7e69e-8546-4788-b058-bccbdf00e43a)");
unit.assert_eq16(16'h0B83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #747 0d5a4168-4b6c-4da0-9d58-3494ed48a3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 2eea136b-cae3-439a-b0f7-9b43748256c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 f78e1603-732c-4359-a1f6-ddaf11985232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 16cc208e-c289-4b2c-92c0-07fc8203a0ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 dcfc749e-5321-43b7-886f-2f9dd540223f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 7ab713e7-fad5-4c3d-8c67-00a9aff2afd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 1e2fb87d-ee42-45b5-ae77-c969ade3b46c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC42E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF83F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #748 f0cc9014-0aea-448e-b6bc-e5f33ffea48d)");
unit.assert_eq16(16'hC42E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #748 37779ba3-0bad-49ac-8c4c-8b8080e25d3b)");
unit.assert_eq16(16'h8E32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #748 6bebf74e-fe78-4515-877c-6eeee3c6c17f)");
unit.assert_eq16(16'hA598, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #748 98fe289d-ffb5-46b6-9443-4895dbfc5f13)");
unit.assert_eq16(16'h0D81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #748 c76bb1d7-20a2-4247-965b-439b3c3c6c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 8f1af981-f381-4975-958a-c09e1c013c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 bddef680-d327-41b4-bbe5-44cc36cdca03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 f6dc6fd0-e740-4063-9b60-91cb7addea14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 5b6d897e-0c14-4a2e-9823-1b1c73c74507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 0c660481-8d74-4433-b165-3065e7caa832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 508f6991-daea-4df3-ba31-72b5f1227ac6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFCB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC649;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0057;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #749 38c8dc09-5b12-444e-94c5-0ca994665ef1)");
unit.assert_eq16(16'h3FDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #749 91c4be52-0533-4e1c-a0f0-95437d4db105)");
unit.assert_eq16(16'hEFCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #749 299ca7cd-37b6-4f76-8d6a-592c971992e6)");
unit.assert_eq16(16'h5130, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #749 5714b674-2fb3-4531-b365-63f2a5a82ac3)");
unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #749 bb61dddb-0f7c-4c2b-a151-e1e30c0d3b78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 584169bf-f6d8-4259-8e88-2451cc796a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 7302a1b3-3c65-4927-835a-d763a67c5ebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 6038db2f-43c1-4941-b6fe-33727cafeced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 05a607fa-34aa-444b-a2be-aa74aa6bc3a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 1e67a482-e657-4137-8d18-70a96b15f99d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 809bb4e8-ee21-4009-85a8-0af1429713a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2D8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1122;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #750 ef5d12ac-3aa9-490e-8837-0fe940cc2166)");
unit.assert_eq16(16'h2D8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #750 c7b69675-7e76-43dc-bf45-435fbb7bb478)");
unit.assert_eq16(16'hBA3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #750 6fab67cd-b001-4f39-bb15-80d980dda9f4)");
unit.assert_eq16(16'hC743, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #750 101da8cf-2aac-420d-8b7b-744f7aa46ae5)");
unit.assert_eq16(16'h07B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #750 8396d1a0-4af8-4ac6-aabf-34084dbd4dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 cd556f00-0936-49b1-8fbb-e920d4090c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 3881a2c9-2e3f-4641-9661-e14808984d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 4f9103a3-ed5d-4ea5-906d-cf87d3544050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 24ec89d7-e688-4d1a-9b9b-3d13c875ab5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 418f5189-1f59-4d15-8a7c-c8fd35aa2764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 ba3463b1-aa93-474a-b2de-eb57704aeecf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h725D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0314;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #751 152b56dc-e988-49da-83cb-76d06278e6db)");
unit.assert_eq16(16'h6F12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #751 013c223d-e4a1-4eae-83dd-18c44796ef0c)");
unit.assert_eq16(16'h5A19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #751 f59c3935-9df6-447c-a103-7b8842313e02)");
unit.assert_eq16(16'h0BB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #751 6e8e52d5-3254-4c88-bbd4-f35f9c7ede5e)");
unit.assert_eq16(16'h0316, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #751 bbdb7d2a-6345-4269-8fb9-52fc1fc2e804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 c40fc25b-dc18-479f-bd3b-a38cce9a3cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 ff207700-3d48-4b50-8f70-fba8d37124a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 6ad14e43-85e6-4efc-b103-c3463f68632c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 830be089-a226-441d-8744-e8b13c7fef06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 aad57a85-b308-48cd-a021-46e74f8d3e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 f96af937-ad9a-4542-8922-4dbdb450689b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4A10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h58EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF74D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #752 0f1545aa-5b96-4b48-865e-968e7d0ac9c5)");
unit.assert_eq16(16'h4A10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #752 3522b0ab-6848-4bff-98b8-11ad6711b21b)");
unit.assert_eq16(16'h58EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #752 2bea862f-3869-420c-b2e8-e450c319be2d)");
unit.assert_eq16(16'hC282, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #752 7e2f4027-ee8c-47ff-aa64-603e0aea3e07)");
unit.assert_eq16(16'h0E21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #752 36085353-67e4-4ce4-b2ac-57ce05ab9971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 1fea1bda-129e-4ae8-82bb-85df1a3cbf64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 bad9f16e-00f5-4978-9a30-2f1c28473abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 e30cf1b9-1941-463c-9972-b47a11a84305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 5a77f72f-d7c6-4ad2-9a24-2f952d6e4bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 82d96996-ab6e-4be5-9913-07bb46a121ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 59a218cc-430f-49d0-9bbf-d0a252edd814)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7912;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0458;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #753 9dabf1b2-b878-44b3-9840-f7e22a024fa6)");
unit.assert_eq16(16'h7912, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #753 45a2247b-a6e9-4730-bbe3-e8986473ac38)");
unit.assert_eq16(16'hED9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #753 26737262-3ea0-45c1-8721-47c7e11c9a52)");
unit.assert_eq16(16'h0BD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #753 b97a1fdc-78a9-43a2-b60e-99b475298299)");
unit.assert_eq16(16'h045A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #753 7057743f-fc07-432b-804a-1538808c0f9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 485fcb10-84a5-436a-b392-788c86657baf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 723667c6-41ee-44f3-aee9-f87ad510519c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 f3d652fd-21d1-4d75-a359-932d18294c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 4b0d5644-8d6d-43ac-858c-1df663a38053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 b84c699b-386d-49bb-a8bd-2b5e2977c049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 5b511d8d-2f0a-4d66-b774-3722577f22d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8CC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h85CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7D5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #754 e73718d9-426d-4546-8d70-e59ab41a1a48)");
unit.assert_eq16(16'h8CC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #754 afb86cdb-f34c-4573-9c12-5bcc2fbc94f5)");
unit.assert_eq16(16'h85CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #754 9ae8de95-930c-4c92-8b49-cc1c84b079da)");
unit.assert_eq16(16'h6996, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #754 7ea5e4c6-84a0-49c7-af43-129afde1969b)");
unit.assert_eq16(16'h0AC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #754 688a5c6f-7477-44b5-90ee-0b5626c0fbaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 a46a4095-de7d-41ba-bfa9-1f894baddc46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 62d1eac2-3f7d-4e12-8a2f-0889f55a6b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 53043e12-af36-4c04-a109-2258f2bd4214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 e436d1e3-bc58-4071-8e9e-1ee67648cf6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 1a3dd56f-42a4-452e-abcb-b6236fae8b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 3e83360d-177d-4194-9c5a-27837f122024)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB642;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE321;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #755 a7e7e853-9805-4ebe-9603-cf851f02d5a9)");
unit.assert_eq16(16'hB642, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #755 69a344bf-c120-4434-a0e6-98682415499d)");
unit.assert_eq16(16'h2D36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #755 40ce8309-3c6d-4728-b13f-4700a07c2e34)");
unit.assert_eq16(16'hB698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #755 5859ccdf-6158-4f7c-9286-3fa778590946)");
unit.assert_eq16(16'h0F9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #755 a445a7d5-4654-43fb-8c94-d153af52c7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 9e1c9532-45cc-4302-beb0-f146ea11be76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 b397b37d-3235-4718-904a-06d8a0c02c3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 5d2fbf3a-6e89-44fc-88db-7dd2fdcbe52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 a0bce7ec-a90e-41c6-841a-a778899ac09d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 fbbadee0-4eef-4f22-ac92-34c018ff3ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 3698a282-9dce-40f8-80a8-3ba5f06fd024)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCDF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0617;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #756 1223cf48-7cd9-45ea-902e-a4faa1b8a448)");
unit.assert_eq16(16'hABF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #756 1a3e4377-8a64-4acb-8ebf-96c6d0d9c3c4)");
unit.assert_eq16(16'hCDF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #756 47d56feb-1f60-4044-b5ee-4b4401aac70e)");
unit.assert_eq16(16'h7EC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #756 f9cf69a3-cb61-4168-b241-2c4ef289af1d)");
unit.assert_eq16(16'h0619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #756 7c64f763-653c-42bf-bca1-81e8e67c91ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 88fd3ccb-a55d-4fb9-983d-84a5fc1a02d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 00184dc6-9162-4674-9fcd-f8a624f8d55c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 fc711781-0ba7-4139-bffa-ea665025d935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 78790b06-ba26-4b39-9090-5a58cb6e7e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 0b3bccf2-1f78-4892-9ca0-34ed1dad26c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 dd723f14-6e03-45d6-bba2-e0d9f3ef91a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1106;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0372;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #757 e2568b9a-0405-45e7-977d-00f69c61872e)");
unit.assert_eq16(16'h2B74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #757 935ebb63-1857-4e04-a0fd-8003025357ba)");
unit.assert_eq16(16'h1106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #757 69d1e6f8-6586-4cd8-be18-0e0503bc9f20)");
unit.assert_eq16(16'hE0C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #757 f9a97898-6e85-481d-a932-f050fceb9d02)");
unit.assert_eq16(16'h0374, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #757 0652c4d4-1e99-4354-ae34-8be93bf85711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 09422a09-b96f-4b4c-8948-5d34e4578539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 ba94fbf0-6ce0-450e-ae58-cbc13fb45847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 44e686bc-0455-4817-a165-cd997aebf33d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 a4c06a0a-4f57-4577-accc-dda751f37f2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 fa3f426e-1f0a-451d-b542-17d05e4dea3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 fd3a8d4f-9faa-439f-bfc5-38984af7d808)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8DE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h53ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #758 e8f4b0a7-a26c-4d4b-8f81-9c6d0463e7b5)");
unit.assert_eq16(16'h8DE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #758 7d3c5853-9cb9-4af0-9b07-d85920e8d61a)");
unit.assert_eq16(16'h80D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #758 9e9d5d2e-6735-4529-9764-4196207f91a8)");
unit.assert_eq16(16'h24D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #758 baab1430-c39c-4e3a-b52c-d1ad217c8cd1)");
unit.assert_eq16(16'h0D13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #758 fbfda56c-59e3-4d28-83f5-2f8a7bdd87ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 73693070-6727-4145-ac22-d5e599921838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 7d399a60-b502-466a-8781-808e9796a902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 0f2bafe8-4009-4850-9c04-0346b3df2649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 c3a48c12-0b2e-47f0-a654-1df9b7a1a1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 727d4fb6-dfd4-4033-acf8-208c54462f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 492c1a78-6314-4972-b9f2-aa7a9fbb8141)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7AEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7496;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h22E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #759 c347dede-81de-4eab-8a8e-79f16810ff34)");
unit.assert_eq16(16'h7AEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #759 6ae4778c-37c1-450a-ba14-ea64d26474fd)");
unit.assert_eq16(16'h7496, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #759 d6a8cd18-5775-4150-a852-fe50bce62161)");
unit.assert_eq16(16'hAE1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #759 a7619d06-0fc4-4ebb-9666-6334d3f14ea6)");
unit.assert_eq16(16'h0F5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #759 0ecf5e85-96e5-4197-a96a-15eda98d0f6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 3ef00ec5-7221-4557-a6a6-6729f82b837e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 77ab8d1e-0efe-4ec0-93a2-3354df2a684e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 a6992e4d-c9f5-4009-961c-55d958a1c85c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 e786bb61-4d99-4ad5-9f82-35c3465bb8b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 387890d6-eb1d-4025-b011-3479c4e208f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 03237b29-1a76-48b7-bd88-b96f9ee59e64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEDC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB40F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #760 2a0a4aac-0195-4e05-862c-4a8b135ef5ba)");
unit.assert_eq16(16'hEDC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #760 3d557152-7328-4269-b878-432f4fe1d8d1)");
unit.assert_eq16(16'hB40F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #760 70b788eb-b993-45c7-b995-25e5ff1102ad)");
unit.assert_eq16(16'h225F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #760 dc7c35c0-18ed-44cc-af9b-96dc2e06d22c)");
unit.assert_eq16(16'h0A06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #760 28f4dfd1-6006-4f39-a034-f6c8a2a4feb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 d536fea4-b48c-4bcf-96ee-56821fb30652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 3a38a815-47bd-4cd8-b0ef-cbd671f241cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 fdf43654-f01e-4db0-b5ea-56b25452c40c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 3c6591f2-3400-4e82-9173-7dab612c939e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 556a0b65-3d7b-4a3a-9e65-1c71ae1bd1e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 cfaeaf76-d258-4367-9a11-d338d2fa55b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6536;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h35EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #761 70f9bdf5-763f-4147-a9ee-6322bed503dd)");
unit.assert_eq16(16'h6536, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #761 ffdac823-e2a4-4b99-b17b-d5eca8ab8469)");
unit.assert_eq16(16'hEB76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #761 7854f50d-d966-4095-8c21-d92597caafb4)");
unit.assert_eq16(16'h9117, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #761 e5e02e6d-b729-4dcc-9563-de9c672f88b5)");
unit.assert_eq16(16'h0C44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #761 97102d0e-23e8-4b91-a3d1-5cb8512fccbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 5dcd0dc7-8316-4ce2-8daa-0df4a98452b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 e8e73458-1fd3-4534-9f49-7783aad1fc37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 e583bf72-ae81-45fd-915e-fdf6d307f0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 c914ef45-f6e9-483e-a7b5-c4728dee789f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 d9b0f2a7-4a80-421a-9823-9f47a969ba11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 f9679ad6-fcd3-4ba4-bd65-aae27dab0b4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3952;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6794;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #762 79f1be91-341b-4585-a531-36ff982629cc)");
unit.assert_eq16(16'hBC6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #762 8202756a-5de1-46a7-a726-b183e86d7186)");
unit.assert_eq16(16'h3952, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #762 34d7d86e-8372-4308-83cc-92711bc6247b)");
unit.assert_eq16(16'hB1C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #762 32501164-a880-44fe-b1e1-50ba08f7be06)");
unit.assert_eq16(16'h0DCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #762 09b74fa2-a56a-411d-9415-c7507f3a7a6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 96e1d789-7cac-4a74-83c8-f1fd4c21c718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 13125a29-61b5-468a-b5db-6baa47c5dfb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 28bd45dc-374c-42f4-92c1-b970dbb13cb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 6289a901-cbe2-4204-88ec-eb309caf83fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 320ec76d-ff11-46c3-9138-54160a74f25f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 313e1bc2-c569-4439-8e06-448cd1c18fe2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA0D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1488;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h282D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0198;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #763 06e3edcf-2af9-4dc3-af35-668ea9ffd7e1)");
unit.assert_eq16(16'hA0D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #763 4358b06d-5d8e-4921-95b7-676181aa81c8)");
unit.assert_eq16(16'h1488, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #763 2440d831-6853-4625-bc85-b705d2ed0fda)");
unit.assert_eq16(16'h8AE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #763 3007af40-6409-427d-9d70-34a365f681da)");
unit.assert_eq16(16'h019A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #763 745b54bc-2caf-4b1b-a70c-245a904db4ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 9d30b110-8757-4f5f-a07b-932129411a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 26e73224-db38-47d8-874b-abda82544b73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 483fe148-2b2b-4a3e-8d7a-756089d0a971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 c3c962c0-abf7-4d70-afd1-5b2118878ab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 4cdcea39-4000-459e-ad31-3033a5380472)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 50b53a6c-0b63-40b6-9cd2-8525c57fb126)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h319B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h11E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #764 6faca5c9-1741-4e28-98c8-080785e937c5)");
unit.assert_eq16(16'h319B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #764 e9cb52b6-45c0-4d46-af53-23ce40a65059)");
unit.assert_eq16(16'h11E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #764 37f8acde-9922-45a0-a40a-376c9fc83a43)");
unit.assert_eq16(16'h12B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #764 3cb09754-b24c-432d-8400-d583c28e0d23)");
unit.assert_eq16(16'h0CFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #764 af24803f-e773-415f-8cf1-ac27e89d9709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 6c30949d-af7d-4129-b80a-e4af91acbe02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 86a5d1e4-5b8a-4c41-a1bc-67d3cd51f883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 8759a30e-8dcb-45f9-bf95-318bedb70ef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 ce165a6d-a880-4018-8193-b21cbbf6b4ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 dfefda0b-2c20-4b3d-a93d-ed773b3754a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 efd84085-d087-47cc-9deb-3ea6b50ff8af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0899;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h071C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #765 6a4e4a3f-69b5-487a-90f7-a3a1886ff269)");
unit.assert_eq16(16'hBC4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #765 8aa7e420-a3cf-404b-a56f-b62e21133482)");
unit.assert_eq16(16'h0899, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #765 facef5f9-1f54-419a-be39-36f4cd6e1b4a)");
unit.assert_eq16(16'hF75B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #765 d437fd0b-f9e5-4491-bfe4-e77b3f7a0477)");
unit.assert_eq16(16'h071E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #765 8e5e096a-ea2f-45e7-a4df-9c81d92f0fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 1139735c-837f-45e2-8c7b-9eb7627f0232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 67846f68-55b7-4ac8-af04-34ce594441e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 67566668-fef9-4503-bb3f-cf3015c4e01c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 67d1a5b6-c468-4662-b7e0-5a445da74ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 c8761d8d-5e49-45c1-9d00-cada4e7da11b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 40df5732-d87d-4227-8b1c-214a60155d2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9EED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0045;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #766 bbacca8d-3d76-4731-b5a1-5a650ed3a9b8)");
unit.assert_eq16(16'h81F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #766 d4b18a9d-4284-493e-943d-f76192a9090e)");
unit.assert_eq16(16'h9EED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #766 dec80ed5-6706-46fb-a60e-86e3fdf1c549)");
unit.assert_eq16(16'h4C2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #766 5cb72838-7840-4e9a-893d-c31839a123c8)");
unit.assert_eq16(16'h0047, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #766 e672bdee-bdbd-4485-a62b-dbb57180ace9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 04a76a41-245b-4df4-9a4f-1374bb4c93e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 0e390860-3287-48c9-bbd2-e7bbecbf7a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 06889f34-d210-41de-a1d7-d1eac27f3f85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 326f33b9-69df-4e18-8f03-f036ebaa3689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 b997dd7f-5e6c-4904-8098-47dfbb3345d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 1897b587-9dfc-4ebf-945e-593db384685c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5971;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE4FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h073A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #767 196ced9d-a389-4f08-b034-5d2ea414cc93)");
unit.assert_eq16(16'h5971, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #767 f1281325-bbad-4e13-841a-419cda2bda59)");
unit.assert_eq16(16'hE4FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #767 021ef56b-227f-4c03-981c-a24439ee8c80)");
unit.assert_eq16(16'h4779, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #767 6dc345c3-76d0-4899-baae-6a2e32c401c9)");
unit.assert_eq16(16'h073C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #767 223afd7d-f0e6-4c06-9aca-e24d70864617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 6c00d5bc-f8ba-440d-aa6b-c93fa21e1461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 9f2b8dba-51b6-4063-a70b-f6a93cf0e409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 4f6be635-3335-4184-9f49-7a89278ff7d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 183709fc-1dee-4105-b205-b3c6b1155171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 4acae90c-1372-4fbb-b85d-cf09850d0f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 f0dd1f86-be49-4ff9-9b7e-0517c2df046c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3FFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #768 6e1d81f7-6fbd-4f36-8d59-2acd614d7a98)");
unit.assert_eq16(16'hCE55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #768 20e07b19-712d-404e-bb26-09aa6343306f)");
unit.assert_eq16(16'h84C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #768 9dd34f49-9974-4b21-9c18-85040bc1d53f)");
unit.assert_eq16(16'h3FFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #768 51098fcd-7715-4db0-96a4-6d39f197a099)");
unit.assert_eq16(16'h0681, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #768 5c8ab106-778b-4c95-a1aa-163d998025ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 06b78362-dbd0-4d6f-ac11-cb21c3ed2b78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 fe397dfa-578c-4b0c-9194-b59fa3c2365c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 10ab5a96-bb98-4945-bb50-0b869f8f6214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 f4cfc807-a344-4254-b4f5-33729c0921cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 68eb99eb-d472-41f6-8115-39911cc62d0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 2fcc812c-6909-4b34-bae0-b88bf1fdc94c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4DEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD0C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2FE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0700;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #769 0319fb83-c4c5-44e0-8f51-63c998e060cc)");
unit.assert_eq16(16'h4DEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #769 b195400f-4a93-4b86-9cad-0e08607c52d9)");
unit.assert_eq16(16'hD0C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #769 7f7d032a-260f-4d5a-90d5-60a90dddb4e1)");
unit.assert_eq16(16'h2FE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #769 02acbb89-c948-40ec-8b3e-4619253f467e)");
unit.assert_eq16(16'h0702, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #769 c07fea54-4de8-4779-b8ab-096a9fdaa00a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 4aeb6a4f-b4e7-409e-a978-7d281aa1fbde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 1652b080-db4d-4356-a1f2-8d5d76c36c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 2abd2ddd-73cc-471e-8fb8-9d941e430486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 3e8f28d0-0393-4b5f-93f0-ca7a8758da2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 540942a6-1b9e-4898-a5be-d9d3962379db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 159b54f9-fa80-4a92-a0b4-8ddf59d48ada)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h48D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA8FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8154;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #770 de57998d-bacd-4033-a109-91c6e80ef09c)");
unit.assert_eq16(16'h48D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #770 ed1393b0-afac-4ee5-99f9-cfb95528472a)");
unit.assert_eq16(16'hA8FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #770 9102929e-328d-4bf5-9f40-98414456bbb5)");
unit.assert_eq16(16'h8154, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #770 9a414002-c761-454c-8696-8e9722b5f345)");
unit.assert_eq16(16'h0CBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #770 5edcaac9-f19a-437c-a8d2-10890dfc263b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 bdb98bfb-3261-4ebc-b0c6-fd5b76e7ca43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 5d93b71c-6175-457b-82c7-85dce0245551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 2e8fc5f9-8fa6-49c4-be89-48783bdb58bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 7421feb4-f6dc-4194-a771-fb0f672f31e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 6ab2e402-652b-4e4e-8d37-3b0537064935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 82816b98-b73a-44a4-8f8c-7efaafed23f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE19A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2918;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC041;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #771 6ab869bc-9da2-4d79-9583-f70ff7b605a4)");
unit.assert_eq16(16'hE19A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #771 58944453-453c-4ea0-8b3f-14f6998a6383)");
unit.assert_eq16(16'h2918, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #771 4dc6d3e1-df7c-4062-a043-8b33c2e741b0)");
unit.assert_eq16(16'hC041, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #771 a14b62cf-9a2c-4dbe-be64-f42ca14cc4f8)");
unit.assert_eq16(16'h02EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #771 c4e8de0d-0026-4740-a4df-19f2b55eb8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 8415c9af-4f1e-4572-bb13-1cc37c5af2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 729f393b-aa55-495d-9b5f-23fa5c227112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 20f86143-a671-4d8e-ae47-2d3655538455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 381e1890-098d-4c77-8831-a6bd50b57a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 15e5feb2-c002-4e69-a3c4-d4e1b2a78bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 8bd625d4-e917-4786-9622-5e5d34162756)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6212;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC5A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h69B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #772 b8ce5552-be4d-4030-b201-7abf81b28ec4)");
unit.assert_eq16(16'h6212, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #772 6cc02ca1-11ec-49a9-9d4f-08061f71107a)");
unit.assert_eq16(16'hC5A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #772 a21ce274-4a9e-4129-98d4-8f4facbc9a58)");
unit.assert_eq16(16'h69B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #772 c54a45f6-9b8b-409b-a5a1-20cce17f5739)");
unit.assert_eq16(16'h02C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #772 f2a03a16-b287-4351-968b-3a4b690ec028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 61064fbd-d912-4ea0-b9a9-80cd7e243fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 9e85307b-8d07-4956-b3cc-f03ad48e5081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 e13c7a98-66e9-471b-95f5-838ec27c636e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 90c02cb1-3ce4-47e1-bdd2-4ef89660607e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 ecbc458a-3634-4e14-a965-0298bdfa82ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 5d7c525a-a907-4770-95ef-74efb91ea0d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h477A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1317;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8876;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0017;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #773 44c8c5a8-1eca-4adf-a293-daceae7772a3)");
unit.assert_eq16(16'h477A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #773 ae9b272c-7270-4535-ab5e-03f5160017f1)");
unit.assert_eq16(16'h1317, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #773 b95a6210-8bc3-4258-b49c-f267c18ac59c)");
unit.assert_eq16(16'h8876, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #773 00de57af-f2af-43e5-af04-4c51dc1d44ae)");
unit.assert_eq16(16'h0019, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #773 0584e7a6-048f-473e-87b4-ed4302057615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 f9e5469d-9db8-4b14-bdb5-c33ea718f339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 9cfcb6a8-172c-4577-ab22-c895b2789032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 a2f24449-8f6f-40c2-a24b-6c2d530ccd58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 79b02c8e-da9a-4294-8272-6e2d9191659c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 4fab0359-bbe4-4002-88d6-ccf181a38316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 af518da7-481e-420c-b758-126ca486dd72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7B82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0711;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #774 694d50c4-de75-4fdc-a7c7-66506f385838)");
unit.assert_eq16(16'hB8A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #774 4579cc4a-772f-46d9-9ec5-42818ca7547d)");
unit.assert_eq16(16'hE1F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #774 fabe128f-646b-4c28-a6eb-78387b234feb)");
unit.assert_eq16(16'h7B82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #774 6b1226dd-f813-46d0-929d-ffed423f8f58)");
unit.assert_eq16(16'h0713, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #774 ff184438-6ffc-4fa7-8bd0-61222458af83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 7961158e-7795-4e9c-b12d-c0095ea82160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 3a7859c5-3df4-4962-b880-2cc74f888ae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 49ada84f-02e8-4ce9-ba1d-372fee795434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 ef58c05b-1a98-4b4b-ab7d-376e1d969a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 293defee-dc6d-45de-b9d9-ced5348d6e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 1a9da54d-11e5-4512-94b6-5108b3ddb3a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF76B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #775 00d2544e-d560-4135-9ea0-bb25665a7bf1)");
unit.assert_eq16(16'hF76B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #775 282abb84-1dd2-42fd-ab65-3d6651714ba1)");
unit.assert_eq16(16'hDC40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #775 13bf5a2c-40d4-4781-93df-bc951e476253)");
unit.assert_eq16(16'hEB44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #775 43389131-4bf8-4b5c-b07f-cc5f162a3454)");
unit.assert_eq16(16'h0D90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #775 0eb5e3ec-cc2b-4996-8c34-096dc4449e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 9cb60816-be07-4f5c-97b4-fe217222d053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 b1b977b5-7c18-4498-a1b8-8cfd006c58c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 e69549ac-3084-4ea3-99e4-a09c874a6e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 42ae6e12-a2a0-4820-93ad-52019cc9b1d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 c5de5522-45b5-43e5-bb05-6b95fb16ff19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 0a88cf6c-a910-4673-804b-1b7f7f6d9cf6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD603;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE55A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #776 da3cbf88-888f-4ef4-ac8e-9d173ddec30b)");
unit.assert_eq16(16'hD603, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #776 d905c648-6473-4626-9f28-170847589698)");
unit.assert_eq16(16'hE55A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #776 8c9bd479-1fba-4008-8beb-ae146957e8c6)");
unit.assert_eq16(16'hDCE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #776 3d4eae9e-b6d4-4ebe-99fd-493359e164a1)");
unit.assert_eq16(16'h01A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #776 bd189cc0-57ce-48ae-b20e-c64c8a26db49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 d85bc54f-14a0-43f1-9dfc-a04f7aab4af5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 46867fe2-4aad-4437-bd9c-45baffc0c519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 22ffac78-f38d-4187-a355-c97e3f249ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 5c0a749b-efb1-4025-a9a8-4adf8621da4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 a6243a54-c5bd-45a4-8f1c-7d59bc781f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 0cac7524-a95e-45b3-a401-ef940215180c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h46A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #777 d4eb6867-e9fc-4076-b005-0091629d6199)");
unit.assert_eq16(16'h46A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #777 b2ae7612-2716-41fd-b01c-165c68312ce8)");
unit.assert_eq16(16'hCB8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #777 ffcc0b2b-3522-4147-abaf-bb61e45235dc)");
unit.assert_eq16(16'hFF1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #777 d0f48c3f-3b16-4821-9db8-3cd691011e4b)");
unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #777 fdce5d8e-799e-4f57-aee1-789be7482412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 8e83a924-6c36-4eef-afae-0c38faac7c3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 9ec57503-bcb7-43e9-b628-f9b6e948f70a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 3f1a0185-5489-4991-982e-87572698034a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 6654b4c7-df4f-440f-b156-3c3443c6af73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 46b134cc-2747-4ed2-ac75-bc5fc1f2a66a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 e3a54cdb-231a-4f5c-80fa-a382353029c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5C09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h291C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA9A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #778 f026d827-ab8e-453d-8d79-5a00b74417bc)");
unit.assert_eq16(16'h5C09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #778 eb33801c-01f1-4a15-84a8-7ef250eb60fd)");
unit.assert_eq16(16'h291C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #778 132ff544-2f38-4200-8933-e577e6534a33)");
unit.assert_eq16(16'hA9A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #778 c44dfc50-4635-4504-863d-29f123b4d4b9)");
unit.assert_eq16(16'h08FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #778 0eab7733-b4e8-451e-923b-ff984c3bc0cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 47b9bbb5-523d-4055-be09-7256e93c9d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 7b2618c1-c7f8-47a8-beb6-fdebbed6c785)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 e4c5ae17-5608-46c5-9bda-f33a960f863d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 1061967b-ce20-4376-853d-7a0cf22ced63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 d4bea8a4-ffd2-46f6-9a67-ea6611168a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 e6e2af71-3b5b-4bb7-8508-2c31ec1f1e5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB101;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8576;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC5DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0116;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #779 4d7f825a-4f50-4c1e-b62a-6ef2d9b11d23)");
unit.assert_eq16(16'hB101, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #779 6423abfb-31c1-42fa-94ef-762d09b25f8b)");
unit.assert_eq16(16'h8576, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #779 68253548-fb31-41a6-bfc1-606a77b3dc22)");
unit.assert_eq16(16'hC5DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #779 585de1e2-3899-4689-bb9a-e9169d0e2c8f)");
unit.assert_eq16(16'h0118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #779 499d05f4-ca0f-47cc-a76d-46467cf2afb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 7dcec0a6-4899-47b8-8a39-8521b8a29efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 6667bc9d-7798-4ed3-a713-ff44c712faf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 b15767a1-5f19-4715-b0f3-6c507177a8b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 ed958bcb-afc6-4b4c-a510-b3cb4747d8d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 31d78481-51c4-4e07-9094-a0c1146da50e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 05680a23-c584-4a9d-9dfc-811f51322fb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2CC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7410;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #780 97a47909-cbc7-41de-8e44-195859908cf4)");
unit.assert_eq16(16'h2CC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #780 4f3f845b-419d-4793-9cee-ba31e8508892)");
unit.assert_eq16(16'h7410, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #780 26b6ca17-7628-4920-b847-d823a2d0f9c0)");
unit.assert_eq16(16'h0A7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #780 9b4eb3d4-c62c-4421-9cad-1756c93a84af)");
unit.assert_eq16(16'h0A3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #780 a68fcb8a-3bdb-4bb7-98e5-0f3ae9300228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 54c37ac0-f0ea-477b-8ea7-3337b0e4e721)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 fe26f971-a0fe-4f42-baea-3a15b44a93f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 2d969020-6410-4bdc-951c-da11f836f191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 b027f007-ec0e-4a22-bcad-6c13768d1584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 af01ef3a-0f13-4247-8a36-c8fd52a99416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 15f1ec41-22f0-4772-ad14-eace8c6363bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h627A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9596;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0668;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #781 b59bb3bd-9adc-455e-baad-8a9f8697c199)");
unit.assert_eq16(16'h627A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #781 5d0bfeb2-307c-4fd5-b6da-8114dab26a46)");
unit.assert_eq16(16'hA7DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #781 14a6e456-78ab-43b7-b8ab-7b1361b6c304)");
unit.assert_eq16(16'h9596, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #781 251ad43a-8739-4e77-a086-758ab5507c78)");
unit.assert_eq16(16'h066A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #781 574c00e5-47a2-4539-b9d4-e43592a8722a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 a9b02925-ac57-4d50-87fd-eb1229362de1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 65a699a9-16b3-48c7-bd0b-23b5329e0373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 2ddbbdf7-5671-4db0-bcb4-fe1f5587dc9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 bdaf2261-00fd-4541-9a30-b9556b9a5074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 e52d7e01-6d63-47f1-ba04-f5a396469c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 fef7b83e-7aaf-441e-95ce-a54aa3794b0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h09BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF35B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #782 00f106a0-1e8e-46cf-913b-1ad9239834a1)");
unit.assert_eq16(16'h09BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #782 95b112c1-d18d-44dc-9995-6808cfdb866f)");
unit.assert_eq16(16'hF35B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #782 09ccfb18-cc28-4ab7-a8e0-b1f3b7e10bab)");
unit.assert_eq16(16'hAC09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #782 4c034abe-823c-4953-983d-0868d9b00532)");
unit.assert_eq16(16'h0A26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #782 3a28dbe3-0f0c-4f1c-bb4f-f62fb5eed637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 79a2baee-f2e7-4a43-9fd3-4ca82d390bbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 7e328cb7-6f97-41a8-b43a-72f5fc96e9c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 58450d2b-066c-4842-88aa-da9628b3b633)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 de9e14c9-d139-43df-8fb3-149a8c5e8cf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 a6fb15b5-6af3-439b-9b9f-131a06025cb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 5eb86fc7-82b9-4083-ad6f-3d4bff72a164)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3259;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0500;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #783 77e5f72c-2978-4fa0-8b48-5b9917228597)");
unit.assert_eq16(16'h25E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #783 9b007b02-46b9-4b0e-b3e7-663e28304f07)");
unit.assert_eq16(16'h3259, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #783 dd83e347-1160-4055-8799-809b8d796530)");
unit.assert_eq16(16'h47ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #783 363e40fd-c6a4-49e3-945f-968e4da2a1a9)");
unit.assert_eq16(16'h0502, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #783 8c80fc17-f51f-4051-b9ec-81c7c1ba5649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 29396257-e695-448d-82d9-765f7f7d3030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 4369211a-737c-4af9-b5ac-8cd8ddfcddca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 cf106b47-97cb-47ca-bafb-7ce3b9afe82b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 4394dabe-31b6-42fe-bdbd-67b811077ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 4e5d172c-507c-470d-9bab-fc5f944bd2b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 560d53be-d065-4fe3-85bc-5fe4b64cbc18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2CCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6175;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7ADD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #784 1b46ab53-691c-4bcf-819e-c810c08489c3)");
unit.assert_eq16(16'h2CCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #784 110bc780-202d-496e-80aa-a6bb0c8e5ebc)");
unit.assert_eq16(16'h6175, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #784 466af44f-7985-4a7f-a3a1-63b6ca5b5e16)");
unit.assert_eq16(16'h7ADD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #784 8943a94d-fbd2-4401-9e1c-4aea0a313c82)");
unit.assert_eq16(16'h01AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #784 03192be4-a607-456e-b8fb-13ffa1347df0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 af402b18-b646-4bcc-b9e2-354a274a21cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 67c6efff-7386-4716-8166-cdb524793322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 bed1f5da-e5c6-42ef-be4e-a8749e489c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 313a3af1-1d66-4669-8773-398cae4f83a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 be821c3a-b5a0-4dde-9d3a-05a151e95d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 e3537333-cce2-4fa5-8426-441e5df19b47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA2DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2EFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h230D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h074C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #785 88038fd7-0645-4ba5-a60d-b7a442f60931)");
unit.assert_eq16(16'hA2DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #785 b17a5313-bdec-4724-af86-d165e0d7fdf7)");
unit.assert_eq16(16'h2EFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #785 e828337e-a67e-4b8c-87ea-119848f0d9d9)");
unit.assert_eq16(16'h230D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #785 a39fea65-5783-47d4-b46c-438d947deea8)");
unit.assert_eq16(16'h074E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #785 95ddd6bd-4767-40f3-819d-1c7d53f0fe03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 4fac3c3c-e8bd-4b25-bf02-16e122ad520a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 b384bdd8-beda-42ec-91a2-9085b696aa6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 8b1ede61-972b-4cd5-8e00-26e71d08acfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 80b940af-bcff-4c08-a7f6-b037d1a81b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 c8713a71-d6b1-458b-89b1-e83fd2e154d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 2b9fc32a-3e43-4b7b-b479-ff5c86b1ac8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h79AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5720;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0239;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #786 c3c3f90e-9227-4e8c-ae84-2991ba7235ed)");
unit.assert_eq16(16'h79AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #786 a734aa34-fcbe-46c6-a531-9168c0b42d31)");
unit.assert_eq16(16'h6F02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #786 cdb34b77-b822-46e9-89ac-1c9548d3467b)");
unit.assert_eq16(16'h5720, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #786 53d4556e-460d-45f4-a4a1-ae8c765d2b95)");
unit.assert_eq16(16'h023B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #786 441f27da-5a48-417c-94ea-f21f0b0131c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 b9deb258-89be-479e-a53f-568e7a3b2e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 52285d20-ad36-45ab-8f40-88efec5cb626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 d4bb0de9-31a6-4bc4-8b9a-5d74918828b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 7b0cb0fb-0c20-44f8-afcd-cade2e139eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 23afd741-a7b8-4ae4-8ff2-7c2bd96ff447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 ff11e669-b776-407c-9c0f-ff8ee86385f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h570B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h60E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5BA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0168;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #787 006b8f45-4129-4bab-9c15-fea4e4256195)");
unit.assert_eq16(16'h570B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #787 96fcd0f9-5bf7-4856-8981-513942b5c253)");
unit.assert_eq16(16'h60E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #787 f9e84901-97a1-44ee-bc25-66656af1af4a)");
unit.assert_eq16(16'h5BA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #787 da0dd5be-1607-4604-a9af-d3e7ec0a5acc)");
unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #787 79e2702a-1203-4f1c-9195-8a65c0a9686c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 170efcd5-49be-4c80-bc31-4ec20caebbf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 29e00fb2-7d75-459e-a2e8-c2ba7301632b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 e70c7867-bfab-4476-8e0d-c42bc2d4ec9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 e573df09-7081-472f-8e39-dacb6c9c78c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 768a6836-7bc6-42b9-bea8-8629464556cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 5d87b58a-0cfe-487d-a523-217458563c23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7D69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #788 ea63d153-1e04-4a37-9533-a61180d57065)");
unit.assert_eq16(16'h7D69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #788 f6943778-871c-40f4-9d06-5805d3d8953a)");
unit.assert_eq16(16'hCE55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #788 48ceff4e-2cd0-43ee-9952-85753ce767a8)");
unit.assert_eq16(16'h0B8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #788 73cdc9cb-58da-4908-9385-c72767dff801)");
unit.assert_eq16(16'h06F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #788 d264c36d-496f-4cbf-8a76-a561bcebd53a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 84aec141-9c96-44eb-afb7-6dfd972cae78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 ca464476-ffcd-472d-b4ab-ccdead41ff7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 102e85b1-01d3-40ca-b821-fa3d6331cff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 8b720100-4b7c-4a2e-bb6b-d6650e51b0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 c45f4b2a-75b7-4b6f-85ac-0987acf8c762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 77e6d641-0731-4415-8392-0cd7bea9bed1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB99E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCEFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0030;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #789 52af14a1-9602-4e88-a9e5-b1f4047eecd6)");
unit.assert_eq16(16'hB99E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #789 8cbb9525-bc72-49a9-a252-45ca3305cc45)");
unit.assert_eq16(16'h8E13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #789 b495b9f0-76a6-463b-861b-76c45d0b4f12)");
unit.assert_eq16(16'hCEFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #789 cd111baa-9424-4820-92c5-98c0d6d21f15)");
unit.assert_eq16(16'h0032, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #789 28d4055b-550a-4bcd-9843-e5e79cc437c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 f5330922-b601-45fc-8dca-b283b40a8454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 b8c28d7f-d208-4776-89d0-e23b6d507378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 ec128d27-c813-4b71-9fc6-9d771e7be061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 f162a893-ca05-497d-b837-7e894dbcc5c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 67c1d852-15bd-4c0d-ba72-3b5b8bc7fbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 35d129aa-79a8-4fb1-b319-26ee8bb59a27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7DD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6638;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCB81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0315;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #790 f9fbd503-8585-4e64-9974-2e3d27807152)");
unit.assert_eq16(16'h7DD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #790 65a03c70-2e2a-4fc5-a1a7-e6bc99bd9688)");
unit.assert_eq16(16'h6638, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #790 e6fe7571-cbe4-4137-9738-5209a1666424)");
unit.assert_eq16(16'hCB81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #790 ebb83763-c846-47b0-abb6-a18fc2bc6d6d)");
unit.assert_eq16(16'h0317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #790 3baf19fa-7067-4f13-88fe-e1dd5beb6cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 c2b6982f-77c8-4bcd-96a0-1f044b1f3bd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 db582b2d-9b34-43e5-9575-8b9d61b827e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 b659df4c-58f3-45ee-b6f3-b5f8b6738f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 018c96ef-6cc4-4a41-a12b-cbd18a2bbdd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 6a5311a8-6fe1-4b89-9750-21d6e51f598f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 2fbff09d-152a-4b2e-84c5-b1393ccffecc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h94FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h517C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF484;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #791 febca5d5-ae1c-41fc-9b4a-393a66a948a8)");
unit.assert_eq16(16'h94FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #791 1e345af3-0afa-488c-92be-fa329b6ced75)");
unit.assert_eq16(16'h517C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #791 a50a2270-c324-4dc7-8e4f-e4f6c1ce29cf)");
unit.assert_eq16(16'hF484, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #791 c07cb070-478d-4b21-9b9c-031a6e3a28e6)");
unit.assert_eq16(16'h0C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #791 897bacbc-4fa0-44bf-a213-514c80c15a4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 e345a4d7-9b56-4c35-a096-17df4534572f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 6bc7885e-dc13-409e-83f5-a6ee50615abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 ec0090d9-9400-4701-b9bc-1fb593495b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 b925b7c4-198f-4011-a936-49881aeb7a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 528d67aa-149a-4c2a-ae24-e716c8dc30bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 772200f0-19f3-47c8-a225-9c73b781277c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3B49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD24B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #792 e6a4ca65-bece-453b-852f-8173f70d99d5)");
unit.assert_eq16(16'h5D5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #792 8ca43477-42ed-454d-bb69-e8a59c1a053a)");
unit.assert_eq16(16'h3B49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #792 ad6e2ab0-ab8e-4c51-b26c-b04018adcfbb)");
unit.assert_eq16(16'hD24B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #792 ee23266f-8363-46d1-a099-678ec68dd519)");
unit.assert_eq16(16'h03CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #792 f82b23e6-b9d2-4b70-95f2-1d6cec75ab2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 6c6bd3fc-b2cf-47f5-bf1b-ca0d5cb93343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 b3dd514c-e427-4917-b305-a535da5ae3ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 86e33336-d5e6-4b56-8f01-cbcbe5ab4e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 a530ae7d-e24e-4409-adb0-a137a552daec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 20a7b069-7ec0-4324-af95-b87732548239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 0638edee-2506-4475-b568-5c0d06c47b3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h18A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0670;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #793 6881aa06-e6a7-4629-a301-b9a9a4302407)");
unit.assert_eq16(16'h18A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #793 f9db67ce-d9f9-48bf-a77b-86c76b63ca18)");
unit.assert_eq16(16'h0670, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #793 ade6a3d8-4fad-42c9-badf-af7b32fbd2ed)");
unit.assert_eq16(16'hEABC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #793 40ed7ebb-f5ec-4840-ba78-b6022e1a25c0)");
unit.assert_eq16(16'h0BB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #793 563fe792-9d6d-4bae-9005-c4b4075049f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 ecdfb9fc-f3e7-4548-9af9-4441742972cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 d176a0b5-a42b-4cf0-b44a-cf51b1196d26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 d51cce11-4396-4722-bc3b-a23122799f3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 de91161b-cd19-45c0-8749-38a479f37f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 01f6b80c-a191-4c91-95d8-5224aee252d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 81ce5a41-945d-4aa9-b260-6ec819f78dd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0914;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h774D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3993;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #794 e6b2d53a-f519-444f-89d0-93be50cbe43a)");
unit.assert_eq16(16'h0914, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #794 fcc7fde8-1290-445f-80dc-f93e63625c3c)");
unit.assert_eq16(16'h774D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #794 9db08b3d-527a-41f7-8c9b-4a9743abc8a6)");
unit.assert_eq16(16'h3993, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #794 96684366-37d8-4483-82f9-a29c608ad9ad)");
unit.assert_eq16(16'h0B68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #794 29e46b13-fa97-45ab-a051-3b6a78c30a94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 d2db8bd6-3465-4065-b41b-9da810e226da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 fed39193-e54e-429d-af6d-c3f6bf3707ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 2d95a6de-5b91-4a6b-9988-9fbcb54434bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 50e54480-febd-43d6-b143-415a47c6ef4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 073c027f-a4b4-4119-a500-6ff411febd13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 d8b9b80f-773e-4871-8d3a-d42478a64104)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5676;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #795 96b5aa09-7c5b-4656-996f-7eb7a86f1885)");
unit.assert_eq16(16'h5676, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #795 ddc14dfb-396d-49bd-81be-334be070ca84)");
unit.assert_eq16(16'h0A6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #795 24b18f89-1bb2-4964-ad1d-38fbfece6fa8)");
unit.assert_eq16(16'h0D58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #795 1ac2ff7a-21de-4851-929d-8cddb59c5fc0)");
unit.assert_eq16(16'h031F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #795 f4e7148a-0885-49b5-ac91-7f100af792b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 3559569c-4231-4934-b5eb-fe5c5c237de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 67fb7992-5c25-4f43-856a-bf3cdf46d2d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 1bf08ad2-5c78-422d-83be-fff006c4399e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 bf285104-fdb1-4c52-bb9d-020d61d801d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 1a055545-f612-4660-af3f-4865ff895c68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 cd8b3549-4396-4456-ba0b-4b855621bf8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h999A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3953;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF4EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #796 a634950d-1bab-48c4-9d85-a2f6231698e1)");
unit.assert_eq16(16'h999A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #796 9925d017-8f96-4e55-aad3-b757511d8beb)");
unit.assert_eq16(16'h3953, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #796 4e5037d7-8435-473a-b592-2ced109d6bfb)");
unit.assert_eq16(16'hF4EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #796 fc12bede-0230-4604-87d8-3461ad814f40)");
unit.assert_eq16(16'h0C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #796 f8c15a90-cc2d-4f05-91c1-e30f875a84ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 65942f62-2551-4500-aa89-9866e0730b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 f8ab746c-c381-4723-a0ff-08a1ed8a69f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 40ea2043-e73d-46f9-94fb-1b1eeaa7afcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 e02b4d3f-8def-4de3-9f20-0e46eb60fdd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 d8502b16-4174-4d80-80fb-4e07a0d2b8f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 f66a5ad0-0697-4a0e-9154-9c6e87c402b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3075;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h19AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h739A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #797 04474278-b5d3-4c0f-8d81-c67a9cbed621)");
unit.assert_eq16(16'h3075, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #797 24e6befb-b50d-48b6-ba15-44c28d4a5171)");
unit.assert_eq16(16'h19AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #797 62e9de70-870a-41da-abe0-a28206323ba7)");
unit.assert_eq16(16'h739A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #797 0dc0324e-851f-4616-86b8-00c959a0f921)");
unit.assert_eq16(16'h0A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #797 d369004e-f2e2-44e9-a300-3a09de8b011e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 0adb9bb1-ab79-46f8-aa6d-05b95454cf81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 8327608b-5638-4354-bf3d-eac912645e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 cf06f93d-7bc6-43ea-97b7-301c77b45212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 03a367cf-d31e-4b99-aa44-fad33ad8140a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 ccec38dd-8325-4c4b-8973-57da3f45aed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 827a1501-89cf-40b9-a158-8e01419adab9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF659;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0CCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA733;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0698;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #798 f635b7aa-3eec-4c4a-a670-d09a4ccc2024)");
unit.assert_eq16(16'hF659, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #798 16eee362-96c0-4ef3-af98-a1bcb80e119c)");
unit.assert_eq16(16'h0CCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #798 5bf497a1-ca1c-4592-bca1-125bbb49c06c)");
unit.assert_eq16(16'hA733, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #798 6b3b1bdf-9d0c-4127-88ad-71338679ad38)");
unit.assert_eq16(16'h069A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #798 ed099682-ef55-438e-b329-4f7944324cc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 fb2b4230-5361-4e34-b2b0-fd2bbee25b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 09989940-91e4-4dc0-b6cf-4ade34fdb477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 739276bc-35a0-44da-8d8d-07b4ed7504d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 eb2890c5-367e-4a06-b94d-580f36ec49ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 2fe88a56-59ef-4d10-8449-36438a3ab439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 deae14ae-991e-4946-8ab6-8640cee5514f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #799 ad2ca903-dafb-4022-8911-92db631250b2)");
unit.assert_eq16(16'h1E9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #799 38e5fadb-db7b-4fe4-850c-21f5bc901103)");
unit.assert_eq16(16'hEA38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #799 5bd5ab31-4925-41b1-8018-0231adb9698e)");
unit.assert_eq16(16'hCA4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #799 fac80665-003a-472d-92e0-789b3bd3f57a)");
unit.assert_eq16(16'h03B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #799 3b2307c2-3dcf-4cb4-a784-6c174e82af67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 ee6c8f42-c3e1-4bc2-b3ff-5774522feaad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 493b2eca-3753-4f1b-bd8d-dd1bb1e44841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 b48075b9-8cf5-42b1-99dc-99da6b2def09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 5b53fd1e-3b7f-4712-a0c8-d2d60823d3fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 6e5b1344-72c3-4068-b3c2-ec8ce2ab940c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 2d46e844-2338-4af3-9c95-0b5e1a04f8e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEE88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2902;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCD37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h037A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #800 8133f558-e2f2-4681-83ef-54e1cac35d12)");
unit.assert_eq16(16'hEE88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #800 034b72b2-679a-41ea-8f2e-9507d2f3f6f5)");
unit.assert_eq16(16'h2902, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #800 1664acce-8b18-4dbd-91d4-fad42476c9d7)");
unit.assert_eq16(16'hCD37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #800 c759faa7-14f4-48a0-b247-73b59f22f6ea)");
unit.assert_eq16(16'h037C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #800 7c8b6e6a-97c5-41bc-b65f-fdac16c64c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 0281c8eb-1e9d-4da0-91a4-ceae513e9fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 1ab0a4f9-ee05-41d8-9cd1-9a3bd098c49c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 815fa18d-37ac-4a38-8494-48c61b8e927e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 cc805f44-d10f-43c5-b58b-e4dd349c373b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 8fdc9db0-8c0f-493d-9ea3-4966cc4048e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 27bf11b9-019d-4e18-ba15-f5e090290667)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6020;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h64C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0206;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #801 2558150e-9c9f-4bd5-b1b0-753a8017d210)");
unit.assert_eq16(16'h6020, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #801 246aa06d-10d7-479a-9e59-98765bbda9d6)");
unit.assert_eq16(16'h0C3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #801 9eb97e74-b263-4928-87ec-35b7b51c7f04)");
unit.assert_eq16(16'h64C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #801 9ec22c29-a663-4ada-a8f6-245c0617abf4)");
unit.assert_eq16(16'h0208, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #801 357f3389-eab0-4833-b907-7b56dd002df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 df8991e0-e6f9-4cf0-96c5-7fcab6116ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 438d27f2-87b3-4a6d-bb04-4516555aee5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 01ee982b-b302-462e-8d73-4d65c21f9463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 7b3b120d-b159-49b2-8a21-93596c9e661e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 4651a79e-3afb-4dd0-8f45-3bdeed850dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 04d15cd5-7f40-4d55-8916-fea8500cee87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9A5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h142C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #802 d99eaafe-9eff-4d99-adde-ecb356b7b806)");
unit.assert_eq16(16'hBB80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #802 49930d76-2dab-49ef-ab59-3b46916e64dc)");
unit.assert_eq16(16'h9A5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #802 d822488b-31ab-4bc8-b735-8482aa1782cc)");
unit.assert_eq16(16'h142C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #802 f9460145-92a2-4ead-9b0a-822761105f46)");
unit.assert_eq16(16'h00F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #802 9d7f37e0-3036-41d0-a69a-08b6ee9557dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 664faec7-bfa8-436b-8e1d-6894c77e7358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 cb3ee301-ac68-4552-9086-d82a279ea3f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 a46eff60-48eb-4798-a6f4-4170ddcd180c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 f024046b-8867-48eb-951b-51d1e6200320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 b31b3038-45ee-46cf-8ac6-c9d242a7fcd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 d0f01693-ea8d-4791-8223-e43c24b3b6dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC158;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2D66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #803 2d7113d4-b1ac-4ac4-b737-c1705e2e955a)");
unit.assert_eq16(16'hAF3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #803 b6a0723a-27c2-40cd-811f-abff57e6511d)");
unit.assert_eq16(16'hC158, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #803 f58d9904-3fb0-4af8-9f1e-75e0fbd98dbc)");
unit.assert_eq16(16'h2D66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #803 44781b11-5d63-443f-acbf-cdc790b4449c)");
unit.assert_eq16(16'h065D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #803 13c648a1-90be-4257-91fe-3bebbbd8124d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 986c48d4-683a-442b-96ef-dba00ecd1322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 b47a69de-67b4-4e73-8a75-84a57c1c17fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 0c52936b-93bc-4e50-bce4-906f420a58d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 47a3cdf5-0516-4e8c-b3b4-294fb5d84c37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 b3c17d76-2e8e-4fd6-8e24-aeddf11ea157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 f46730fa-84bb-4ebd-9770-ccdfa7c41570)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB828;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2BF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #804 04c508a6-db4c-4499-a719-c45c7cddf299)");
unit.assert_eq16(16'hB828, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #804 e4378645-fab8-4517-9fdd-077d1b65269c)");
unit.assert_eq16(16'h5A10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #804 dc127220-7538-4b47-9b5f-bace954ea909)");
unit.assert_eq16(16'h2BF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #804 218c6d0b-6689-4938-8730-7f4577c31e31)");
unit.assert_eq16(16'h09C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #804 5f8fa4a0-c8c8-400b-b3bc-4de9111cd3eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 d9694747-4369-412a-b027-03ca4716d892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 8d659dbf-25dc-475e-bf32-8b8a1756a317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 59bfb175-1abc-4195-8ad2-f68fa12ad7c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 2ffb66ca-e2ec-431c-8308-811aeb50c6ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 40a39935-8480-478e-82d3-8ef116245697)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 23c1b2f7-8e2c-470c-a906-e8b903ae63e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAEBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC3F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #805 d3d30af8-4dd2-462a-b806-685a006ad051)");
unit.assert_eq16(16'h4B64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #805 7c784b4a-8854-4d05-bd4d-d73cf403cc40)");
unit.assert_eq16(16'hAEBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #805 328b24aa-0f8f-41ff-85e0-e0c0c3acbc0c)");
unit.assert_eq16(16'hC3F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #805 c3ff32c4-c904-40bd-a16e-6ab095a52f47)");
unit.assert_eq16(16'h0CD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #805 9e0f22de-b5b3-4319-853f-58b9317e32ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 83247427-8679-4066-ad26-12c5d1499359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 3767614c-d4f4-4cbc-a8e0-48c0142eec10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 c75f82d3-6e46-4cd8-b64f-7192fa16d736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 3b2a3638-cfda-4c1e-914d-ad3b1c232dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 3fad9636-b6b5-4ab6-af18-2fb16cb0a6f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 100e5ebf-c7bf-45b6-9e2b-db236343d37f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAAC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2AB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0442;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #806 9fa8a893-ee33-4bee-9795-0417ac6edab1)");
unit.assert_eq16(16'hAAC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #806 e149b814-38aa-43f3-9eb5-bc4fe8f37526)");
unit.assert_eq16(16'h2AB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #806 021a6c4b-c881-45b9-a110-927a7b87121f)");
unit.assert_eq16(16'h2E44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #806 fe603dfa-a4a8-459c-a202-3aa38264e4a1)");
unit.assert_eq16(16'h0444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #806 cca5b88b-e93d-4122-9982-f64c011200f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 ae5b79ea-e8b3-4dac-8153-4bec0286fbc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 d2e53945-60a5-47b7-8c8b-c6d32d9f9b2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 1e2792e0-4a4a-4e20-8145-a310296fe427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 22dee507-2d71-441a-8b17-0193ade1ca08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 39fecea7-027e-4946-a603-e9010d461d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 58dafcae-21f5-494d-baaa-246a04c86d47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h353F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h765F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDF55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #807 383c4b55-5090-4955-bbf7-8ff53b689ec8)");
unit.assert_eq16(16'h353F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #807 b18cfff5-dbe6-4d02-a2cf-7f76115ef634)");
unit.assert_eq16(16'h765F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #807 235b0a02-5f35-4753-a00a-148e10d230ac)");
unit.assert_eq16(16'hDF55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #807 53d2aa5e-d854-457e-8aa1-40508bed6825)");
unit.assert_eq16(16'h0F02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #807 3c3a1171-5f55-42bb-b9d1-4794053cc949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 49d4a6b2-92e1-453f-9a99-b4e6e99893a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 b1593cfa-c43d-4db2-96e6-159db32cd896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 57994a27-9dac-4dac-9e25-c4ad8af220d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 926b3742-fe01-4338-9ff9-6a7bb9143ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 fd921592-f567-4b02-ae70-ee3cf05f9fa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 ed268910-e335-4021-a497-74101c20b967)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h226C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6784;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC2BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #808 9819aa57-e6b3-4b83-af81-b4570a02f3f0)");
unit.assert_eq16(16'h226C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #808 8668e05a-9cc4-42ad-96d4-6b0f8808d99d)");
unit.assert_eq16(16'h6784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #808 87e03cff-0b55-4a49-941c-1dab9631db24)");
unit.assert_eq16(16'hC2BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #808 47a0cba2-2cf7-4bd0-ada6-a6c4c6f18c38)");
unit.assert_eq16(16'h01D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #808 e47c4f44-8c34-4d2b-becb-c7e4f6bc894f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 d0f1b0da-b27f-42bf-820e-fa75e5d4b617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 27097630-e490-4147-a283-a64696b7cd34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 312fddf0-32ef-41d3-9968-50f73e1b9d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 010053e1-3597-4d97-ba68-a7fc663cf332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 9d8925af-2f82-4dd9-b057-6b4ed9256d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 3d89b14e-3a29-485b-9f9e-18d1b53843a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCB9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #809 da5f4796-80dc-42cc-a3b6-05f93e3b9000)");
unit.assert_eq16(16'hA8E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #809 a9a470d3-c6b0-450f-83c5-18af53afbb39)");
unit.assert_eq16(16'h1D39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #809 c7ea36da-fa56-4e52-93f3-1512f6619953)");
unit.assert_eq16(16'hCB9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #809 805befdf-b3f4-4165-baf5-c385b1ec4906)");
unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #809 69d1dda8-a654-427d-baa1-1e78ea10e481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 abc5f243-0e1c-4e10-9af7-205499e4ebcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 328f1308-7b4d-49f3-a6ed-7bc5f1c47a92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 0b3e2647-38d8-4e90-8a53-d33fdbd002dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 6a3ecf59-be5b-4c92-a6ff-084cb04be662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 6041b782-0458-4945-b085-ab29bf444582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 dbf4c207-756a-46a9-b5f3-9c52f66947c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h154C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h077F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2B1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0797;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #810 2d587fd2-ab6c-4c2f-8bbe-0beba24e8456)");
unit.assert_eq16(16'h154C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #810 a9d7e117-b970-43fe-a919-4d7529e76cfa)");
unit.assert_eq16(16'h077F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #810 2864a754-521c-48fc-a02b-479036036c35)");
unit.assert_eq16(16'h2B1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #810 298d1d77-2b48-42e6-8443-da379f5639ea)");
unit.assert_eq16(16'h0799, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #810 0658fd9c-f75a-4746-92d3-9b40b16151bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 92419dbc-8f47-4ffa-9b47-222efcf0b835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 f9c677ab-9c9b-4ef3-969b-60d81cbfc276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 12b7b3b0-70cf-4412-bc78-203bfe019ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 d98e2827-e680-4e4e-987a-775a6b2eaf14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 d513b3cc-175a-4520-9518-3ed036b145cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 160528a2-fdaa-41c8-b341-0e2159b808a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC2CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2B9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0567;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #811 b73b8ef3-2098-4131-b8a0-70eb23aeac5f)");
unit.assert_eq16(16'hC2CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #811 50699d2c-c6f5-4657-a933-a225e0df1df5)");
unit.assert_eq16(16'hCE02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #811 5c368289-624a-4102-b375-839862a9951d)");
unit.assert_eq16(16'h2B9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #811 e8d06fbb-37f1-4552-bb51-20f32436dd1c)");
unit.assert_eq16(16'h0569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #811 a077dbcd-cc37-470a-8fe5-17b88a499ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 85dbc982-4e78-4379-94c0-3e049f80e727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 da84b474-9018-488c-9f98-8339f933050a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 10fe9fd1-cd3f-4789-9bca-b0e96fa8dff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 0efb792c-416c-4d95-91a9-3745d00a7b7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 92211a53-5fab-4f4d-b673-51decdb60ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 5bfdf9df-afb8-4cb4-924d-d1edc8b29005)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB093;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h018B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #812 54cc62d1-b4fc-4d5e-a211-97952c5c7100)");
unit.assert_eq16(16'h1EEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #812 b31cb156-b24f-417b-b07a-3dd0dc3ffb81)");
unit.assert_eq16(16'hE3F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #812 5bb9dced-59f9-4ae9-aa26-94d1909e8269)");
unit.assert_eq16(16'hB093, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #812 a06dce9f-2a5b-4291-816f-bc7dd477b890)");
unit.assert_eq16(16'h018D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #812 73e29d15-4441-4b68-a2b9-14729aafd750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 2b23e1aa-6c22-400a-addd-51dfb7eced02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 30e7ce14-4dcb-45dc-8749-e8a8ceb973f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 81a514e4-cbe1-40bc-a4ec-4e367ded0802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 7f406143-33bc-4f63-85eb-ab59a0eb17e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 4f3ef5e8-902c-4355-b5b7-30df6a3a0013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 26b29c34-bca7-485d-872b-204d4a93bdfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD765;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h954E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBDF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0183;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #813 e69604b8-d5ac-4677-b980-2a1102506c6b)");
unit.assert_eq16(16'hD765, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #813 1c7f98d3-41a0-43f8-a1ba-f9b17cf4ff0b)");
unit.assert_eq16(16'h954E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #813 c75e0e42-92a3-4132-9ea0-f0c1e0ef0f6d)");
unit.assert_eq16(16'hBDF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #813 c40f5393-2f04-42aa-9ac5-df687bd9d6c4)");
unit.assert_eq16(16'h0185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #813 2adcadf1-af61-4c05-b1a1-9e71f73de7bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 8456b278-6903-4d37-b5e0-59ef960af8f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 dc827bd1-bb70-4c6f-a05d-0a9c06a49585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 e41628e4-5b8c-4380-9cfb-621faf0a0ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 f15117a3-973f-4fe5-9dc0-931a30e5a6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 656aee93-a72d-4879-bc80-2cb9f25a80e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 beb3b099-be2c-468a-8b6b-6c58e0dd0377)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h193D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h085D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #814 bd51e9cc-8d0d-45d9-9b97-47e7a161e9e5)");
unit.assert_eq16(16'hFF49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #814 a4305cc9-02e4-4738-8fa2-c63d3f9935c7)");
unit.assert_eq16(16'hEF9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #814 13227911-4f78-4326-b778-fcab49405420)");
unit.assert_eq16(16'h193D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #814 0b517a33-33a4-4aca-9cad-6393ffdfdbb4)");
unit.assert_eq16(16'h085F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #814 9201a81f-a1a9-4f8c-a6c6-594a28b9a38f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 bf30a3a7-f200-4531-a3cf-63a4e992bc35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 0059fef8-b5af-42bb-97bc-433ccd32b80b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 25a8af31-d521-43ca-8360-b3dcede71a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 e57f6bdd-8dda-48f4-8d0e-530761bd60d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 885a862d-28ed-49f6-a6cb-61150afbea88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 f695893d-f1c4-40aa-9201-b68d577e879a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF676;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h438D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h591A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0112;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #815 c4553189-8e4a-4d6a-bc8d-65832d598a1c)");
unit.assert_eq16(16'hF676, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #815 80f64454-2479-4b39-98c7-02459a29a8d2)");
unit.assert_eq16(16'h438D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #815 33a66d2e-127c-422a-9fe6-687f5284ed5e)");
unit.assert_eq16(16'h591A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #815 837a7ef0-457a-4eed-84ee-3113accfee64)");
unit.assert_eq16(16'h0114, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #815 41fce4d0-d284-4eb8-8610-fc2fbc4a89c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 8b973068-14ff-4636-8e60-37d190312bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 8638e309-1347-4915-85bf-2f2fd2c66592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 16cfef45-eb2c-40d0-8fbd-48f7a13356e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 01b16a7f-1ddb-4437-a4d6-6ef02bbbe0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 06a729f6-06b3-49fa-bc7b-48ee64e1a76f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 a7fb73c8-64bf-4a04-98d4-4fed6431b0be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA594;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9DE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #816 c56e149f-de41-4f06-805f-2761edddbb93)");
unit.assert_eq16(16'hA594, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #816 e2620ca8-4de5-4cfa-a45e-15e56b5716b5)");
unit.assert_eq16(16'h9DE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #816 cb3bbcb7-d72d-424d-9bd8-8e14ecea589a)");
unit.assert_eq16(16'h3A1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #816 9697c4fd-064d-49a4-859d-6827ff629d64)");
unit.assert_eq16(16'h051C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #816 208e7fdd-4c19-44f7-b11e-f97deacda0c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 21126c58-2d26-4758-90ae-3e057e823da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 5b65bc2a-ad7a-487f-9afc-5a65a373cd51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 d50220f7-fb97-4d2b-9044-5236dd09267e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 fe218522-1875-4f31-8a29-97398ea2a1ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 4111b165-2cc1-4ca7-a9fc-462a5c3a4349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 d2c4deb5-427a-4c2e-b69d-47bae4551763)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA087;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6602;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9BAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #817 6a9e1a02-f626-4304-b908-55b013fcc692)");
unit.assert_eq16(16'hA087, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #817 543b96b5-8753-4a82-b5be-728035271850)");
unit.assert_eq16(16'h6602, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #817 96dc92c2-0ff3-44fa-bd10-e7c582a646d3)");
unit.assert_eq16(16'h9BAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #817 6959e2d7-225e-44ab-958b-a2588491a57f)");
unit.assert_eq16(16'h06BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #817 6ebc3865-b4df-4272-aa86-2260df0a3a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 28fd4fb4-d22a-4448-8a75-30202ec08fff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 013b73d1-b1f2-4ec1-bc6f-885a76d09bf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 d7c52eee-108c-46a1-9814-9ac468b61b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 2183628d-702a-4bcd-a548-14b836f502a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 c8d70efb-79a2-4e22-9c39-de6dd6032e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 8f83af26-ae08-436c-a298-db49a3137af5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE757;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE9BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD105;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0154;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #818 9b6928bd-c223-48c4-9442-7aa66db61014)");
unit.assert_eq16(16'hE757, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #818 2d5481c5-bacd-4a31-9a65-9648434535c7)");
unit.assert_eq16(16'hE9BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #818 6dd73638-b01d-47da-8c43-b56368062716)");
unit.assert_eq16(16'hD105, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #818 913d65b7-7cea-4ec3-9d02-2f4c34c3fd80)");
unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #818 e34ade8b-bb7c-4a18-9899-f096970d71c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 62fa7bd9-7956-472c-a8fa-3655c4c0ad06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 cad720a0-5018-4c18-a31f-9022d374c857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 c29e0b95-1e42-4dfa-9027-d5fd31174cac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 3ad7f5e1-d5d7-4b44-88cf-f59adbebde73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 51012d1e-079e-4bed-8a29-c90bf2c8364b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 eb6ccac5-45af-483e-9e3f-66329d03132f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF636;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFAA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8796;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #819 b3585eb6-3a3c-449c-a659-60004ebec78b)");
unit.assert_eq16(16'hF636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #819 c01ae938-b7b3-4f05-b6c4-dd9fabf3b382)");
unit.assert_eq16(16'hFAA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #819 00561e57-b0b8-44a9-ad3e-24aa9158edca)");
unit.assert_eq16(16'h8796, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #819 ae083148-86d3-422b-8891-37e380720b6a)");
unit.assert_eq16(16'h04FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #819 b214c4fa-de63-4932-9cbd-57d55d176b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 b4954a3a-0511-4e00-87e9-ddba8097f4cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 b7870768-cd4e-4c37-8bd4-38caeeaba93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 1956a583-d235-456c-bca8-707c6fabc0b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 a4816686-b38d-4ce0-98b8-ffd7464fd32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 af940ace-3bcd-4ab9-8f0e-c45ad2767d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 e0f70f82-0fc4-4844-9b37-ff0ef72328b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4119;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0932;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #820 a202ddee-6263-46d6-a235-265e939d4ffa)");
unit.assert_eq16(16'h4119, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #820 39c54e06-3d31-4ae9-b596-1d705a050cb6)");
unit.assert_eq16(16'hBA04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #820 0247ad46-52c8-4d12-be75-37682565238d)");
unit.assert_eq16(16'h09BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #820 d2a3dd8b-6277-49e1-89c8-62ef909c0f26)");
unit.assert_eq16(16'h0934, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #820 2bd7db20-b058-4c7b-a71f-ff63a131a885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 d10f5012-fbb9-4212-9d16-199c8e5fbca3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 8fc61010-d369-41a3-bdb5-1224e7fadeed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 30f89542-bbf8-4154-b880-d55976272dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 79eade6c-4bd2-4d11-9ee8-a211b95d2ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 d279cd22-9c48-4529-b0f1-8d689b532f5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 952914d2-1d41-4759-bdad-5e1be57ee0f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h23C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA4BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9144;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h002B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #821 591982e9-f7c7-496e-a6a8-d3d9d0235279)");
unit.assert_eq16(16'h23C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #821 1bbd4b0f-b0be-44ed-bf17-a6edeec93353)");
unit.assert_eq16(16'hA4BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #821 13af6431-12e9-41c7-9008-d0a48ca3c61a)");
unit.assert_eq16(16'h9144, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #821 aee23d0e-f5da-4b3d-8632-2b1827d8d81b)");
unit.assert_eq16(16'h002D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #821 7df48099-36c8-4f2a-aa27-f92cea4bb30d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 675c5e39-e2f0-4a12-af15-f0812633505d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 55f9da61-d142-41b1-bf1e-4d6b4dbd7e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 804ee96c-ce8b-4126-a61b-6a6325197536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 08b46592-2a51-40e0-aad0-272e58e7a838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 c7c52ad6-cee1-4198-a531-d2baa5190087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 701650fd-ad61-4fcd-b26e-8125ad8c30c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF3F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB6AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h832E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #822 1832f691-c445-47af-8857-d4835a1fe986)");
unit.assert_eq16(16'hF3F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #822 e2771051-016f-4d78-9347-5767876ded2a)");
unit.assert_eq16(16'hB6AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #822 67125858-ddaa-4798-87f0-bbc50ea9aa7f)");
unit.assert_eq16(16'h832E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #822 17c4c2b0-5e0e-46ad-ad5d-fe0153ad1269)");
unit.assert_eq16(16'h006E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #822 42d7b6ee-9651-4d94-8f16-0dbb4eebc297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 dd77ec6b-03bb-4d16-b9c1-5eac897bf6d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 cd3c0bce-c29b-40d2-9256-7f9328fe05ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 d45caf4b-f04a-4b17-9855-bd64f601496d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 73e16075-f677-46a3-bb18-a2fdcf6e389a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 50abe5c4-cd86-4bcc-a20a-51ec596f7398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 58fc677a-04d3-47ec-842e-d6f8c24ed987)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6DE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h680A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF5F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #823 12dad21f-07c3-48c5-bc1d-022e0e9427c4)");
unit.assert_eq16(16'h6DE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #823 b7e01826-2829-4883-bc69-8cd27d04eef3)");
unit.assert_eq16(16'h680A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #823 da5a35af-8914-4d00-8494-a01ff0725f42)");
unit.assert_eq16(16'hF5F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #823 57ff6eb2-fb8a-4e1c-8298-41fa865fbd35)");
unit.assert_eq16(16'h0F12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #823 fe908bdd-ddf0-469e-b9df-8bfb427ce95e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 9c736c94-8d95-4a1b-83f4-95a33322206b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 7a2c4d45-10d5-4c6a-be11-ee3cb2fe53d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 bf794495-011c-4232-8da8-c41a31b2aec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 9d6d1392-14e0-4b2a-88e2-6e741d07d83f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 16ad5b09-9444-4c95-a378-c13955bd5962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 5a7b06cb-939e-42db-abac-eef3cf2934a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3842;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFC7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #824 c22de7e5-0f0c-4a22-9be8-aeeb2900eb0f)");
unit.assert_eq16(16'h3842, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #824 47d517c2-a3a5-4d59-8829-d51ceca80441)");
unit.assert_eq16(16'hFA58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #824 8063cda9-9d22-4be5-8775-16167336fd38)");
unit.assert_eq16(16'hFC7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #824 c8a686f6-f4f4-4775-9fb2-2f3b6026189d)");
unit.assert_eq16(16'h06F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #824 b453cf32-238c-4122-b405-1d9a5d09fdf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 3d4292ec-5e07-44f0-b4de-009c4c034273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 4bea4d8f-fee7-4ede-849a-148abe758401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 31a94eee-5049-466c-92ea-8da4e4c1a012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 73fff6b2-5026-42ad-ada3-2c04b4968b20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 3b72fcc6-f671-4aa5-8a0c-ab372e2e085c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 d3e862a3-28c2-4bc7-ab8e-a10e147a99b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC11E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC849;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h125F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #825 68d01d97-b303-42f7-90c1-f00995c5f66a)");
unit.assert_eq16(16'hC11E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #825 f4c336f8-1516-4259-94fc-437449f7c2a2)");
unit.assert_eq16(16'hC849, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #825 b401416a-e6ec-46d6-9496-fb5a5b6b5d51)");
unit.assert_eq16(16'h125F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #825 477ae276-ed9c-4505-b9ea-7357635a04f0)");
unit.assert_eq16(16'h0D48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #825 759d62bb-bc4b-467d-87e5-ccd0f75ccf8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 04d8b158-9737-4042-8140-c0f692c3d483)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 5f006957-974e-4e03-814c-a1ff232cdd98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 68103677-c5c7-4a6f-b6f5-c85385736c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 7316b374-ca2b-4afa-b1ae-5b5c57839d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 ebbc2cee-37b7-4483-820e-354cc0b13f01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 c50aac17-b17a-41dd-a9da-f27901f74374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA18C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h334B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC572;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #826 803fc57c-f06f-460a-9106-f9fb98d7e935)");
unit.assert_eq16(16'hA18C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #826 08922d59-0aa8-499b-9c27-59f8a7f275bf)");
unit.assert_eq16(16'h334B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #826 e88f9164-8040-4cb6-ada8-1c84d7d6eba4)");
unit.assert_eq16(16'hC572, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #826 6e1ec977-0dc1-4a65-a63a-494901aba976)");
unit.assert_eq16(16'h0C1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #826 3ad646c3-4842-4a3e-bfce-1abf141256a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 5aa7bc33-01f5-4f63-8b31-4df69fb28bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 7501e151-9253-4cad-98f7-2720c15e19a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 76412fd6-3a27-4efa-9e78-b86a44f04ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 1a400a1d-4721-4123-9c0d-9d09608d7dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 67161057-52b4-4731-9aa5-a846880ff7ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 d12a2bde-a558-40c1-8e77-d6e80b843226)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hACEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h037E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #827 83ff93e9-033a-4823-a01a-21de1a1dfc19)");
unit.assert_eq16(16'hFC79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #827 4ea04983-c07e-4597-868f-dcfae08cf779)");
unit.assert_eq16(16'h8F39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #827 9304c4e6-a1c0-4697-83c0-d84b31816f40)");
unit.assert_eq16(16'hACEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #827 2f2dc141-5b0a-4306-a58d-624c58ca8a1e)");
unit.assert_eq16(16'h0380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #827 8a3ba097-7369-4572-8b7b-a45c4ec29fa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 9593bb8b-944d-4cf8-9cf9-cc4e06435d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 2f0dc0d4-49f5-41d0-b72d-6bdef4c329ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 a457769d-0d85-4402-bc74-37222378be46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 5a66e9d7-f43e-4231-a0c2-2b013bf836fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 cb5291a0-2245-492a-a738-776b1dc802b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 087ffe80-1ce5-4b64-b772-6aa03ae6216e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD595;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h098B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #828 a759ea71-bfc6-4904-8d92-64bbfc6e9759)");
unit.assert_eq16(16'hD595, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #828 512377fe-2485-4497-8e04-0e30486f2a6d)");
unit.assert_eq16(16'hEF99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #828 84ba761c-3580-49a4-9ea0-ae24d3a808bb)");
unit.assert_eq16(16'h7E2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #828 17515fc3-117a-44a5-9982-7c3af4038a8e)");
unit.assert_eq16(16'h098D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #828 602fb55c-0fdd-456f-b00e-995440fd9362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 9d80e60d-834c-4c36-8a2d-bf8bd2820ca3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 48582e24-2376-4a12-b031-e9db1027f13b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 d01926c6-3840-4546-83e2-9db0901c721d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 5d8eea0a-9fc6-411a-8ed4-3bdba0810a30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 26f64473-c4b5-45f4-b141-f52bade70a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 07b6868c-f957-43c5-b526-ececd4a08d2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5186;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2816;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #829 479fc6b4-8564-434a-a0d8-f31d1e6b50d1)");
unit.assert_eq16(16'h5186, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #829 10412541-b37a-4fd4-9dbb-00f34769e453)");
unit.assert_eq16(16'h2816, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #829 821a4529-1db7-4e73-ab7a-83fd648ed1e7)");
unit.assert_eq16(16'hAC22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #829 65a15555-3c26-4672-9640-3ab54f9cca4e)");
unit.assert_eq16(16'h0D28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #829 02be9038-1a50-4a09-8cc8-3eba49a5aa07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 cbd18b16-95b5-4a7e-ab2b-62842b904b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 eccd1635-6b7a-4df8-aac2-f59202adf10b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 2e01a28d-35c0-4de9-8270-698706ecb738)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 b0439047-dfe8-4669-823c-bea70263d7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 61125f51-90a2-4fd8-988b-267b490768ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 d2cfd7e1-de92-496b-a98c-9394704d68c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h907F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h94BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #830 ef0bcee1-785c-48a4-bb64-f7fcd9d3d7a7)");
unit.assert_eq16(16'h907F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #830 df23f400-99f7-44a1-8bb9-91d0800b25d1)");
unit.assert_eq16(16'h94BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #830 7e5be206-8e74-432f-9565-e9c88c1b0ab4)");
unit.assert_eq16(16'hCA67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #830 f4d946ac-19ee-42bc-982c-960aa77524cd)");
unit.assert_eq16(16'h0B19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #830 f325504f-df9c-46a8-82ce-126ba711a039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 ca265dea-1c03-4e77-bfb5-c277f85174e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 5d697ef0-3dce-490a-9231-cf202dacd7d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 16481e6e-b6dd-45f8-b6e8-765fa68a2520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 d537c14f-2c96-4865-b58a-fe137fc03f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 a5c62ee5-f242-4f2b-b807-3f6906ffd2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 eb6256c6-cbec-4968-84dd-0ab3fe594ea1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF085;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEEAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1495;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0605;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #831 89606ba1-b84f-425b-b2ee-26c9fe425a0d)");
unit.assert_eq16(16'hF085, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #831 fde1d268-9863-4ad5-89ab-969f44b21ea3)");
unit.assert_eq16(16'hEEAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #831 4bfd5e38-5185-4301-815e-db8ee446b416)");
unit.assert_eq16(16'h1495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #831 90e47d48-43c3-414b-a5fe-d96fba53d157)");
unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #831 ecfffe9a-3a13-4fef-8ca7-ab13e9a12499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 9d22d152-abef-4fc4-b08f-174cf31e299a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 afb6ed10-c0dc-4848-a81d-70e09a53d06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 16065fce-70d3-42d2-a261-d3f195219549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 007d4db2-c722-4b93-9f1a-b077ec802178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 f9416cce-7450-446b-a50f-fa59b7af1b8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 bf9b8a93-16b6-4aa1-969d-894cde1ff5f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2003;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h157E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0708;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #832 84ecea25-b3a1-4beb-86e7-f44d29970a46)");
unit.assert_eq16(16'h2003, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #832 f1b3f3be-8c51-4940-8dd7-ce2190ea7010)");
unit.assert_eq16(16'h157E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #832 1166ff47-f44b-4829-8c8e-9ef8676f5fa5)");
unit.assert_eq16(16'h78E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #832 d283e0a7-4831-4ed9-82b4-11722e0a8aad)");
unit.assert_eq16(16'h070A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #832 1a0b9134-363e-4b21-b0a3-876344498680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 b00c1250-6d47-445f-9c9b-e6b885592b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 c790e4ca-01d3-4629-958a-3bcda7405e3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 24780cad-5a66-4308-bcde-d8e872f20f49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 6a36d97e-b017-4964-aea3-c35837a2a652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 98c9c092-0eab-41ee-8f02-4559ce7e6407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 38ddd5a2-932b-4003-b389-d540858759f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1840;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4EFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #833 7600f649-4986-4fee-9408-751aa713fe83)");
unit.assert_eq16(16'h1840, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #833 8753cc8f-76f1-4dba-9acc-ae2272709867)");
unit.assert_eq16(16'h4EFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #833 6efe6c52-d282-4955-acee-8c9f44530202)");
unit.assert_eq16(16'h3A1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #833 aed63f6e-e23e-44f3-b556-2a9504bc6e72)");
unit.assert_eq16(16'h0E1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #833 6393633a-dd0a-4742-8413-196ea70acda0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 8ca891f8-372b-4442-8560-86b542b0fe25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 1033fb03-7250-47da-8cba-27902607aa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 613892ce-c4d1-470a-a314-5a898948719f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 419d9c85-0112-469a-9e71-752b67c355bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 f2609dab-b0c8-4187-ac8f-12ff92d2f4af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 596f57bf-5da1-4708-80cf-5b60bd365d24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC05E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE500;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #834 ebf4c156-2f56-455b-9716-7b2271a25c59)");
unit.assert_eq16(16'hC05E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #834 d5f2e11f-c49d-4846-8e3d-981448d56fb8)");
unit.assert_eq16(16'hC2A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #834 19ba7981-e2c6-4102-a0c0-6adb3fe1daf5)");
unit.assert_eq16(16'hE500, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #834 4f7b5173-6267-4430-b2ba-76e9da6cde26)");
unit.assert_eq16(16'h01D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #834 1b138095-c94d-41c5-9b4d-a1ec318b5169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 172065f5-86c3-48e0-8867-f4043ecd3479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 e7cee501-961c-4da7-9b4f-b51a6f1a9850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 72fa1425-f969-4de5-bbfc-12c97023300b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 db32a2df-dc06-4b50-81f6-02b501ae565d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 0cd20d0f-2fe6-4de3-b233-46644ed624a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 0ff58ae5-8de8-46ec-b8fc-2c98cb91dfe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEA9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDB9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h821C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0193;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #835 b532062e-66cf-4418-a8bd-979ed3ea2347)");
unit.assert_eq16(16'hEA9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #835 a57a1185-d9d4-42ae-a266-47eb0ea12806)");
unit.assert_eq16(16'hDB9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #835 aa9bbd81-4eac-46bb-81b5-d30c7c4410ea)");
unit.assert_eq16(16'h821C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #835 e41b74ec-366f-4a59-9c4f-e88c65866210)");
unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #835 01f4b7b1-bdbf-419b-a219-4d89f11e2fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 3ce4f9df-d5ba-4348-a462-a7881cd7d3cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 b1abd644-19f3-4116-a2ca-e50ba351e952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 9fbd9ee6-692b-4b8d-8234-df58625de48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 38ccb873-9d5e-41fa-9b35-16b268fcb693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 0432228b-e6f4-48de-95a6-e1c70f3e0f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 bbe4c846-fc47-496a-b6ab-ce1c9cabc3bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD5E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h17DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #836 1a98f9a4-4ed0-4618-84ca-7a25bf2f75cf)");
unit.assert_eq16(16'hD5E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #836 6d98c72d-4a98-455f-9380-547cf5f6660d)");
unit.assert_eq16(16'h17DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #836 bc074f9a-76d6-49f0-b9c2-0eb63cab63f9)");
unit.assert_eq16(16'h15FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #836 dc06f485-236a-4509-bf3c-83b030879484)");
unit.assert_eq16(16'h063C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #836 6e190941-678b-4b09-a981-11ab5b3d0863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 c068b880-a7c3-4308-846e-5b15903b029b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 2e1f8f4d-cab0-48a3-bf38-a16f9ab154d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 ca2b5606-2910-4bf1-a9e1-8c63f77ae1df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 be5a9355-bd05-4188-9b4e-175b5a866451)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 37d7d05b-29f0-4a74-a486-ca185a3e600e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 1610574a-0cdd-4a54-9eb5-a4965a49ac65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDE6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #837 c09480fc-caba-494c-b699-493949334e14)");
unit.assert_eq16(16'h2F74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #837 f72682c8-d833-40b4-8c0d-e04f72a27771)");
unit.assert_eq16(16'hDE6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #837 323ce3d3-623d-4862-a359-ce09794efe0e)");
unit.assert_eq16(16'h5480, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #837 2a0aad20-d0bd-417e-a056-d2db0db607af)");
unit.assert_eq16(16'h04CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #837 2c9976ce-b76a-47bb-9088-e7552e6f18d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 32e63008-76af-4875-a53e-b74bbdac011c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 190f6fd6-5bab-45be-bd14-059ae7693d4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 e54545ff-31f3-4696-b526-a36554d66189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 adf4ee0d-f4ea-40cf-8c8d-4e3cd109cf02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 c3db6d1e-3b01-4bc5-a779-cc069fe5114f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 8fbe0d0d-d868-4d01-b2d1-e7b2e9463166)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCAAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h928C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #838 42a3920a-964c-4a1d-b814-164ce3f0c346)");
unit.assert_eq16(16'hCAAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #838 e799f870-7468-4690-9970-27aba4921581)");
unit.assert_eq16(16'h928C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #838 cba042a6-353c-4480-8020-4659378e1cde)");
unit.assert_eq16(16'h8A56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #838 deab49f5-69a2-4f5c-8498-8acf476434e6)");
unit.assert_eq16(16'h09F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #838 80a07780-4f46-4169-a46f-6eb3eafe1949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 a379f836-b9b5-41ae-8874-290f1943e407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 125c9309-061f-494e-8c2f-0d38e42bb083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 6502b195-1df8-4ddd-8e36-d1febd0d0415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 d63031cd-ad14-4654-af8d-6231efd93b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 88082c4e-c416-4cc1-b8f0-bf0000d1f18a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 84629aa4-1c63-4984-a7b1-3ced5597af1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h99E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h33AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8AA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #839 9e0c47ea-fa91-4602-bae8-8ccfcb17f543)");
unit.assert_eq16(16'h99E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #839 202795e0-a33d-4cda-a0e3-28acd4a2982e)");
unit.assert_eq16(16'h33AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #839 876c8448-6ec3-44c5-84ce-71ba7055f4d8)");
unit.assert_eq16(16'h8AA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #839 86506143-3ccb-400f-91ae-c346a2adef47)");
unit.assert_eq16(16'h0DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #839 d1af195e-4d58-451b-b1b5-11695c3557ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 1ab9a464-c941-462d-9dae-3169ed18f9f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 c6fec468-035d-4ddd-9751-96cbc709d833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 856e06af-1621-46fa-8997-276a0ae66bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 24a60ecc-70df-4de4-ac0b-5f5de5d47ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 f169f289-893e-464c-85c5-0c449ea2908c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 c2252615-6e30-4941-b53c-300e0bb3127b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2CA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF035;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #840 6305ba67-da54-435b-8fa8-95d3e9d5a544)");
unit.assert_eq16(16'h2CA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #840 defb7009-af92-4745-a986-ae028fd8b865)");
unit.assert_eq16(16'hF035, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #840 88cb87bb-de0e-4f51-a680-fa6bb36a5e18)");
unit.assert_eq16(16'h09DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #840 f656e2f0-5a51-4132-9322-c2856e53d756)");
unit.assert_eq16(16'h09C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #840 7aaf1d1e-8975-4422-9ad4-eea4d94887cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 bb32972e-383f-49d3-b256-954d0ebe0803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 6d8c10f1-c774-4070-8947-ff719fb64654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 65990b6c-0837-4b32-9774-f467a0f2ab47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 da49a2df-a567-4138-9840-c9200ae0732a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 298adb1a-c667-45ef-a54d-57c9c7961490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 db9f59a4-e689-4314-9177-b01ee5512083)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2989;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7667;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #841 802845c2-2313-4f0a-8803-233c344e5488)");
unit.assert_eq16(16'hAA82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #841 ff6790f5-0a9f-42a9-a924-9afaf81aa18a)");
unit.assert_eq16(16'h2989, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #841 816e801a-e9ed-4729-a531-bf97f7c15cac)");
unit.assert_eq16(16'h7667, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #841 2a045020-88ca-4e89-a0cc-ff491cbef439)");
unit.assert_eq16(16'h0F18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #841 679c365b-7ccd-44b1-bc35-7068549232d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 5f99ae60-8da8-4775-8066-23c57d9cc887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 b698847e-17c0-4625-8f7f-f3785bd2bb53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 a46dcbe8-5c31-4926-88ac-86f75c132093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 cfa057fa-b707-405c-9648-6565535fc00a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 d10133d3-b3da-4cbf-852e-4782c01f3171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 5feae6ff-0dbd-4d11-a229-7afc30a03c7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD570;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h943C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #842 dde5f1d3-42b3-475b-a9ac-ac9a4acf63eb)");
unit.assert_eq16(16'h72FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #842 0ff2d9a5-1f7d-490e-b759-df9971a66279)");
unit.assert_eq16(16'hD570, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #842 90d091dc-d9b9-481d-99a1-b914f70f1cb3)");
unit.assert_eq16(16'h943C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #842 07371b4c-1b8f-4765-93fb-044675506c3f)");
unit.assert_eq16(16'h07D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #842 c05bd6a8-d036-4b0f-b66b-6cc6c6953ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 70b9e9b9-f8f6-491b-957a-b81be85b070b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 96a11fa3-ff50-4d48-8af8-46029152846e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 ea2ece11-fcaa-42fd-97b7-a998c845d4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 4687c186-a360-46cb-9199-4dbb3b0ceeba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 3b73bae6-5e07-4b67-a774-8852ccc352d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 d8634ea1-1686-4b98-86a6-eb7acdca705e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h417E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCAB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #843 f33ccc04-2ef6-4b5f-b812-63f57a6ef0b3)");
unit.assert_eq16(16'h417E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #843 7ab76275-c709-4d11-976b-04706d5be482)");
unit.assert_eq16(16'hCAB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #843 359d08a3-32c9-4dfc-8890-2811894feb6b)");
unit.assert_eq16(16'h08F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #843 a1328d62-e249-4e6b-8421-a2ef627d794d)");
unit.assert_eq16(16'h04E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #843 f2a9eec8-4405-4d89-87e6-13395b39cb75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 7bbe0ff7-453e-4906-beeb-987613a3b850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 0b972733-e017-428c-85cd-a64b3aa350a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 4ec41805-ce1c-4fd2-a735-0563ce70f95a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 daed7568-0ca6-451f-b54e-9ddf4e06b1a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 d804f73a-91a0-4d4b-91a5-5ecbb93426f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 f825b6b9-36ab-4a02-b7c0-254fc9c6dda7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD9E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2294;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #844 24c50069-bfd4-4ee5-980f-e9aa8b2e9f71)");
unit.assert_eq16(16'hD9E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #844 a77f5d3a-2606-4fb0-b43b-1a2912868288)");
unit.assert_eq16(16'h2294, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #844 9bdc602b-ac84-46a7-af9f-39daf17a3e3a)");
unit.assert_eq16(16'hC1FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #844 bfaf6c3a-a900-416d-bf1a-7b294cafc28c)");
unit.assert_eq16(16'h02FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #844 a7b918a1-7ec7-4831-9a66-e57ede3a4866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 5150d823-9a44-4b4b-ad52-e10140ac6140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 d58eb438-87f1-489f-a7cd-7d31eef004d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 e4b653e0-1126-4b95-bef8-7c10fbc683ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 f46408b6-ad0e-4c7e-b904-12d8cdffe9fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 7323fd61-95d7-4af9-89b9-f1d9e62455a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 bb967011-5ef0-4cc6-87f7-b3fbead77836)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA18F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9D1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0006;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #845 a5341caa-6b99-4077-9c0c-5dbb62bca610)");
unit.assert_eq16(16'h3B50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #845 ff44ba88-82e5-42b9-80e2-f619ebacb2db)");
unit.assert_eq16(16'hA18F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #845 5936e0cc-69b0-49e4-a576-320d3ca476e8)");
unit.assert_eq16(16'h9D1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #845 db37a574-1c2e-4890-accb-4802182e8763)");
unit.assert_eq16(16'h0008, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #845 94ae2e08-6bd7-4053-b295-644edb8e0c2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 94d13bdf-8005-41c2-9cbe-d2b6f2da8849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 2a75e6f5-abd6-4b33-a51c-33b44ca12a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 d1be206e-d4d3-4419-8b5f-433d388b5d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 5a882be6-4169-42d4-9d0a-578cc02d90a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 bdc72cce-37c0-4bfe-af86-1cdc73e0bc1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 e8bbc029-8b86-4c0c-8c68-ef2e75ad3dad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0635;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB440;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8809;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #846 4791a257-47fe-4304-b580-b6d28a80b8ae)");
unit.assert_eq16(16'h0635, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #846 a29dec0a-62ec-4b9a-a741-bc9a582e0e57)");
unit.assert_eq16(16'hB440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #846 697a1223-1671-4c51-b01c-4d72b24c2783)");
unit.assert_eq16(16'h8809, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #846 7d139b53-c76c-4387-a164-39d5b99242f1)");
unit.assert_eq16(16'h023E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #846 329d6619-ea63-45fc-8ec6-ff00101de982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 5f1f8e14-80d4-4252-a861-bc3fdb1dc10a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 2d525e17-9d0f-4362-95c6-cade11e5296e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 f65b14e7-04ec-4310-986c-178b2ca15aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 a76f6322-3a53-4917-b912-4074c97d608a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 cccbf841-49ba-4ea7-8711-f41fae485177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 5b33089b-076a-4e62-b1f3-7ca4aac56edf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h62A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDFB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #847 5833e83d-aa6f-455b-b051-3094202f622d)");
unit.assert_eq16(16'h62A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #847 21d82b40-4fab-47a8-b0ab-52ed046bf4bf)");
unit.assert_eq16(16'hDFB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #847 7162892c-9ebc-4fe1-9744-4df3ee4a4a1b)");
unit.assert_eq16(16'h2DC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #847 de3a3972-7313-4fbc-bc20-3fb71ba68dd6)");
unit.assert_eq16(16'h07CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #847 957c4ced-39f6-4de9-a167-d88be0bbc084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 d0ffb384-991c-4e48-a0ce-b7794aebb6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 498dc4ab-6faa-4c56-95f8-2dd714c8a8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 fdca0c3f-520d-4b40-b79e-9b2e06db7b41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 b12ab4ea-795a-462b-baf6-3fbda4ee480b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 836f93c0-995f-47a8-b789-353553d2d1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 181b534a-8e9f-4bc5-8718-590801033f04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6BD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h47AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #848 3bcbee2b-c441-4f76-acf4-077c54dfc2af)");
unit.assert_eq16(16'h6BD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #848 79a14c75-aa2b-4f2b-83a0-6c550f2016e7)");
unit.assert_eq16(16'h47AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #848 c9f618a8-b7b6-4df6-9586-379bcf7567bb)");
unit.assert_eq16(16'h97B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #848 e379d737-65d6-4632-8b7f-1a56072c7adb)");
unit.assert_eq16(16'h0BC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #848 c8338a5f-ae05-4e86-a71f-7efcedf61514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 a3ff3706-2fc3-448f-b647-65d32ebe38c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 86e786d6-bc91-433e-a6c0-420f6070cefe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 5d876b12-21a7-4d29-a9a2-24931aa7d3cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 44b73dbe-2869-4481-aa06-6158b4460f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 8bae8a05-2544-4ae3-be46-777e40d2bd9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 56dc41ca-ab81-45b7-ad68-fd4c06671aae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE759;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6618;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2772;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #849 4b3b10e8-2e19-4f55-9e5a-c66a376cc916)");
unit.assert_eq16(16'hE759, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #849 e20e3923-6eb5-4d33-aa62-671e12582492)");
unit.assert_eq16(16'h6618, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #849 b64cbb3b-1276-4644-a7cd-22f4ee89854a)");
unit.assert_eq16(16'h2772, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #849 1f59cc38-e055-4144-8cf3-c04a9240b1ee)");
unit.assert_eq16(16'h0B7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #849 4342ad1d-ce2e-4199-9401-3313917aea85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 44a4bbe1-8163-4fca-9caf-3f1d3dc72e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 742d859f-3aac-41c5-8164-177f8ad36b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 685f84f3-0950-4f72-b78f-5d8081542a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 587b0b4f-8453-45e1-87c9-88582ddd7b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 ec69b992-c252-4501-af50-d7344081790b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 ce1018c6-df8a-475c-a83b-0c2be657b71b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE57F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB129;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD90A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #850 84937bde-a3b1-4201-8622-b7b0a16811ff)");
unit.assert_eq16(16'hE57F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #850 a28f8adf-e121-444b-8741-ebe9db96f44d)");
unit.assert_eq16(16'hB129, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #850 a2ad29bc-44cc-451f-96fb-f3dfffce7ed1)");
unit.assert_eq16(16'hD90A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #850 cfe1283e-32f8-4eaf-960d-20faf2e354c8)");
unit.assert_eq16(16'h0D8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #850 b1fb8b26-3627-4aff-9c6f-12166ec72a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 ec9db7b4-4be5-4121-9dc2-1847b0b3e0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 8a358d12-642b-4918-b728-cf87f1233a3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 c484d88d-04f2-4eb7-ad43-83e7b8bfb2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 a26e5553-1887-49a9-9876-4c5d0a9b3cf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 9e8733d0-e0a9-4571-84af-51e45217670a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 7126fd57-13d2-4552-9821-1f8f2f2d6911)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB339;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #851 66bfb839-3bdc-48b6-a529-e22e8b893b38)");
unit.assert_eq16(16'hB339, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #851 e3771d3b-3e39-4823-94ce-e413bb1c765a)");
unit.assert_eq16(16'h2D47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #851 e3f679ad-f7c8-4c3a-8ff8-d6084a4cd21c)");
unit.assert_eq16(16'hFD45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #851 d2817487-4dd5-4959-940b-0b8b89464abf)");
unit.assert_eq16(16'h02BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #851 d4805926-992f-42a4-8110-54089c9c6d18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 50a8fbe6-0914-43b9-92a8-977627c63f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 7558b4cb-d081-42a2-97af-15ce36943a01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 64af113f-c0da-4e1b-8d80-d6c077255d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 b41e3b32-3a3a-4c3b-afde-e262e375fc50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 3845f88a-0f1c-4520-9056-5f9d462f01fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 7d4bdaf2-66b6-451a-b890-8737f73cb92b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h23ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h179E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h702B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #852 5acd2a7e-457f-4953-8519-52caca607949)");
unit.assert_eq16(16'h23ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #852 00580916-51c3-4321-8b84-5a4cf1aefaa5)");
unit.assert_eq16(16'h179E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #852 a33b50b9-4543-46bd-a479-623290f91b4e)");
unit.assert_eq16(16'h702B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #852 54559e0f-ec38-448f-89d2-611a13a7ee1c)");
unit.assert_eq16(16'h0D17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #852 956b6766-d46e-4923-b997-7f4ecc2d0f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 59c7b22d-0ef5-40f3-9eab-1536cc1da01e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 c163f748-5d64-4a5a-b266-c47aafbc971f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 93cf1a4e-eb85-46e8-8f88-4e6e5e6cddfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 ccd1ec07-bbf5-48ed-b559-3f43ebb121f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 8ba15652-72e5-44b2-8049-2888af4b2f9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 0d9d621f-9bbf-4625-9d85-1c45dfe6759f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5A0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #853 92081def-ed77-40dc-b4d3-016a27400a4a)");
unit.assert_eq16(16'h7FF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #853 e50d26ff-c3ed-4571-99de-bc46fcaed6c3)");
unit.assert_eq16(16'hA1E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #853 af4effec-8971-4aad-9d3d-37e098a6ee24)");
unit.assert_eq16(16'h5A0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #853 933ed63d-bbbd-46a4-88e1-b21ccbd64fac)");
unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #853 6fd25858-83b0-4afb-b1c9-35f3b61ee57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 8c79c050-01ed-4db5-9d33-65da3c515d9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 4f253c6a-dcab-4635-8cc4-0f45fd1bcfb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 c13cefec-4411-4a02-81dc-2c70b65b8494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 a25bde69-0680-4133-9d73-1948c6afdca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 6e4efcfc-d0a4-4f1e-8f4d-17c93c1fabfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 7a261e02-8a0c-463d-96ac-f80e50b49e74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5092;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5F19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7316;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #854 c8df5f83-3190-4243-b93f-90a14d8c9284)");
unit.assert_eq16(16'h5092, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #854 29f9306a-b87c-4c8f-b028-145b1d6a6041)");
unit.assert_eq16(16'h5F19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #854 e4592d71-f31e-4c8a-ba7f-d6138ac62f09)");
unit.assert_eq16(16'h7316, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #854 ba74d745-e525-4f78-aafc-dc05047d3596)");
unit.assert_eq16(16'h0F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #854 98c89ec8-778e-4303-adab-31727a3b9efa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 984767f4-e5bc-405d-9796-4625167860bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 95662297-a5fb-47dd-b81a-a5650421c05e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 fe9a764f-923f-4c94-8b0f-e72fa5209a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 cc9927c4-1f6d-45fb-b8e3-3339335c8f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 f2082167-e6f1-4604-946e-a72b4522043f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 1a1ed8d6-2253-40b3-a347-9cea4b1e071c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF593;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #855 80c0e4a3-1237-4a68-b0c6-49072fe951cf)");
unit.assert_eq16(16'hF593, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #855 3e9f0235-0c92-47fc-9722-1df5d3dbf136)");
unit.assert_eq16(16'hCC9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #855 c021b11c-1c2f-4991-8710-770d47aad973)");
unit.assert_eq16(16'h04B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #855 b368da5c-92b1-40a3-9a96-165a7e08da67)");
unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #855 c475b550-4f6c-4b1e-aee2-23fd60835f75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 c6227a04-f212-488f-a3d6-7cc8e0caf945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 52698f83-c7ca-41ba-9d86-956e4f9b891a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 189773d4-96c2-4925-b14b-cdaaa3845ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 f01295ed-a7b7-4476-8048-ba384bd89c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 0b96db4b-ad8f-4ae0-a322-017a1d2d361b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 47f46cba-2e96-4846-a251-1c2f7f8baf0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4ABA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5913;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h084C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #856 2ef513dd-7271-499d-a0bf-c54b715c1589)");
unit.assert_eq16(16'h4ABA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #856 fefaf453-a7c4-4c8f-bb8d-fb951ed4051a)");
unit.assert_eq16(16'h5913, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #856 108359a6-98a7-488b-9ee8-4c8a9dd6596c)");
unit.assert_eq16(16'hFD81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #856 8e90720d-c8a9-44d5-aa90-3779f4bc50fb)");
unit.assert_eq16(16'h084E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #856 bcd2bb7e-150f-49ce-827e-3b91c7141f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 18c90df1-14a8-42a4-a8f3-f9171250bba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 9ceab0ce-583a-436e-b8f5-cfef1abe9687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 3c9482cc-43fc-46dc-a552-58b0205f76f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 09e2751e-e3a8-4a8e-83de-4871a648b8a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 cc85c93c-57e1-46d2-961a-18936e83fbfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 0f43b53d-5b81-43ed-baa8-ba3fe29d6955)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h00DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #857 c48f5f29-dc28-4ce7-b5fc-60121b4c2529)");
unit.assert_eq16(16'hA8BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #857 1502a33d-9ca1-4d15-914a-fb6e7b0f5918)");
unit.assert_eq16(16'h00DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #857 b7fff8e8-071d-4b60-bdff-e96781560594)");
unit.assert_eq16(16'h52AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #857 ebf3d8fe-48ee-4cc7-98d7-55730b387eca)");
unit.assert_eq16(16'h05E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #857 96340798-1956-4ca7-a95d-8bca52cfdd7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 369fa601-39ae-4671-8d92-9b1a06a5f84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 b533d81d-d9bb-4acd-811b-92b7ee72456f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 3ea09312-7455-4d7d-824a-4b089edbce22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 22677eb4-0a8a-4594-92f8-c689f082985b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 e31409c0-9ab3-4cea-99b0-85d62bc5ef0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 8f5b1aab-e491-44b2-be67-0e6fc0ac6d3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h991A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h53F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #858 beb04407-9669-45c2-bcd8-7bddb994cfb2)");
unit.assert_eq16(16'h991A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #858 b2a531f8-524d-443b-8f5c-09dab0fd116f)");
unit.assert_eq16(16'hDF7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #858 942f711e-aaf1-4382-b5a7-f8f72f3a7aaa)");
unit.assert_eq16(16'h53F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #858 a322e310-cefd-42a5-b4c7-99ae30796dfa)");
unit.assert_eq16(16'h00E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #858 044e14ba-d9e1-4301-be63-cae561bb408d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 745d9c4a-7fc5-4704-b3ac-e49a1064b52e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 a7f2770a-945e-448f-89b8-00170908abd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 a1000289-a491-41b0-8635-aa6ae73e499a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 859329e8-6fff-47f6-8767-7e1841da931b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 e2ac42e3-a9bf-48b9-9aff-9ea4a9ce9a10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 8b4d583f-960b-460b-be90-4b43fbed0f89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0BFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h23CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #859 a066ca9b-df6a-4e73-af61-e5751fd330de)");
unit.assert_eq16(16'h0BFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #859 be820d27-b6d5-4b43-af9b-c697f73f36bd)");
unit.assert_eq16(16'h7C05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #859 68bb6f3a-1818-4229-8596-b90c624c271d)");
unit.assert_eq16(16'h23CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #859 d2270472-914c-4cf7-a672-1b746a063a0c)");
unit.assert_eq16(16'h08C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #859 b21f6467-7809-415d-99e0-6e4a8decf1f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 0524e676-e747-4021-9d63-d1503c55f2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 ed66ee4d-4bd7-434a-af3b-40749a804ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 78246c1c-234b-4407-86c8-fa6a90ecbd21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 ec70404e-4d86-4ea1-8ffb-a5c08baf8ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 19136b3e-06eb-4b1a-9c5c-50a8e0c98dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 f94c0f0a-9156-4841-bd18-a16b0ad58543)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA183;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h660C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0516;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #860 f08db89e-2619-43a7-8c1f-2a84dff0bfe9)");
unit.assert_eq16(16'hA183, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #860 58b57199-c08d-4964-931a-b12a44b5b9ad)");
unit.assert_eq16(16'h7D38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #860 5204096e-4084-4e43-aff3-82f6d04cde77)");
unit.assert_eq16(16'h660C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #860 757d0a1c-7160-4825-bf1e-266ffd8e4d0f)");
unit.assert_eq16(16'h0518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #860 c75272c4-9f9d-4abc-aa2b-18c711e56104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 afabbf92-ecc1-43c3-9333-f31e5ac1310a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 031a8fb3-6820-4a8c-a0f8-60089d775a53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 3ccb4bcd-4c28-4069-b726-baddf74e7ad3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 27e9e946-aec6-4621-bb52-c26cbd4a0268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 b84c5e9a-4503-49cf-b8ed-698cce425469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 c77b5cd5-33f9-4426-a13b-d5837408ca68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1F16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h018E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5407;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0210;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #861 82442c6a-ff4b-4cb5-82b3-c1b5d40d0487)");
unit.assert_eq16(16'h1F16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #861 779756e5-fac1-4db1-9ebf-76d12af88ef2)");
unit.assert_eq16(16'h018E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #861 b63ec763-a1a7-4618-80e3-6c617d263980)");
unit.assert_eq16(16'h5407, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #861 252e4123-9889-4eba-aa71-56f39900bf2c)");
unit.assert_eq16(16'h0212, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #861 5504a13f-5d5a-4b89-a1e0-d5ea368426d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 20de3284-1021-421c-b283-9ee50946f9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 860b9783-e69a-4f69-8290-81d90c106f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 d68bbf42-5cb0-4f61-8615-0232f08dbbc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 c7974b17-a6d5-42ab-b1e4-3bcd366262c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 2452b5ba-26e5-41fa-adc4-94635cb3f67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 5450df3a-c87e-4218-a1b0-97556d5e9670)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h37DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3AC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h005D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #862 84cf3e3f-e38a-4bf9-adf6-6418e41459e0)");
unit.assert_eq16(16'h37DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #862 6a2b33d7-1533-4681-9fb5-081661eaf903)");
unit.assert_eq16(16'h3AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #862 160c1011-bd14-4b66-9b10-fb5f70295f73)");
unit.assert_eq16(16'hFA40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #862 2e2652c0-3894-4a0f-be9d-d2c831af76b6)");
unit.assert_eq16(16'h005F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #862 59d626ec-49ad-434e-8f93-a4175f83453e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 20b6a477-a23e-449e-8aaf-e13f54d668b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 e4fd8289-ef09-412e-9f79-94ca2532fe33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 5bd55f17-6a4b-4c13-8dcf-4d13ab979986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 6caa2443-ad6f-41ec-991e-eeb140f7a400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 9f153cb0-605c-4ce9-96cb-17062c645fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 9744d7f1-c717-4c70-bb1f-84e69de12c73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0342;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9907;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h093A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #863 b1789ccd-d5d2-4b4e-9e0a-25157bb580b4)");
unit.assert_eq16(16'h0342, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #863 d43b5ad9-a85b-44cc-b447-2d0244e89603)");
unit.assert_eq16(16'hA7C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #863 636993ca-b512-4313-aed5-37889a4f16bc)");
unit.assert_eq16(16'h9907, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #863 5723e488-6164-4af7-858e-c95f5e47a447)");
unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #863 99b88731-bda3-4ab0-9cb4-3044e7be5bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 f2f21560-129d-4e85-9ec5-71f43793fee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 73d04806-af0b-4c29-a8cf-ff0dbbd7000c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 c5b470b0-b13d-4def-978e-847c2be6a42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 c81bcd2c-756f-4a82-a749-9ad44a10ad1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 499f8d4b-01a3-44eb-99f3-17ea25ea6b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 fd69a712-e0e6-4a3e-9652-2ce80c7ce8b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2C6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h66C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #864 e64fbda6-d45c-4a7f-bbea-476bce799d88)");
unit.assert_eq16(16'hDF56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #864 b6a63d77-27bc-4725-9c71-503c302808ee)");
unit.assert_eq16(16'h2C6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #864 f1e55033-d03c-46d3-a5bc-25859b17fdf2)");
unit.assert_eq16(16'h66C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #864 7b99be78-e126-4fdf-8bab-05865e0697b2)");
unit.assert_eq16(16'h05C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #864 860443e4-a804-4b6d-8b08-3f9551260f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 035e02e7-e20b-4d50-811e-c3b5095e7f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 8c67a7ad-e5a7-401c-9f98-80c5930ca0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 5e197f21-8e9e-40b5-be19-719dc7fb66a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 ce24fc8b-e9d2-45bd-b56e-0bde2f587c7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 6566c975-2d88-4aae-bf29-42a626392380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 62420417-ece2-44f3-9d55-a4d37c0b3da0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBAD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2ADF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0024;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #865 b09b94a7-1cc2-4f41-9cbd-59bf4fbbaac4)");
unit.assert_eq16(16'hBAD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #865 0152861b-cc8c-4b6e-9f60-c2946385da63)");
unit.assert_eq16(16'h2ADF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #865 07f408b9-dec8-4da7-bc18-fcf77c63e7ca)");
unit.assert_eq16(16'hDD46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #865 a8e71e16-c65a-4230-9e82-5becc503b9d3)");
unit.assert_eq16(16'h0026, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #865 92ece9d4-666a-4d8e-96d3-9c7da0965518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 ed99df57-4c30-4a5e-8629-a5b2d1538b35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 a9581be0-5e8b-431b-b2a3-f6912572f0f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 cc09f33f-dcf0-4b52-833a-20d05f969db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 c514f7e6-caa1-4503-bc86-8393afc7070c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 02ac3168-aadc-49ba-bfb5-d9c59158ca9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 5ccbe962-7352-4c07-8f3a-8ad9f32c4e49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h618F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h828E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #866 a1440394-acfd-4e5c-bdf7-70b01548cf0e)");
unit.assert_eq16(16'hED97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #866 9f72169e-59f8-474a-ac40-01aa2b4639f8)");
unit.assert_eq16(16'h618F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #866 cd884149-18ea-4fe7-8210-363cb7dfff46)");
unit.assert_eq16(16'h828E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #866 5d084073-6119-4bfa-8410-db8ede9bd6be)");
unit.assert_eq16(16'h01A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #866 f5660f35-65db-48c4-9957-c956418b1ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 198c8748-b639-4567-9990-021b4cc834d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 b30096d2-5e80-4bea-b4ae-673dcbe06e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 b8e735be-f508-4e82-8982-5c93231cc2b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 e1a5eb0d-cc89-4bd3-8a3b-c80cd2ced825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 35cbc2f8-ce9d-4f26-a508-cf520aaa47e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 d8e7e118-4eee-4656-9c9f-81a3d98b9cf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE85E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #867 986dc02a-4842-4e30-abe4-79fa79698408)");
unit.assert_eq16(16'hFC89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #867 88dbbd34-445c-4f0a-9843-145897fd4478)");
unit.assert_eq16(16'h9C40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #867 5eaa505f-4263-420e-9300-52df83139826)");
unit.assert_eq16(16'hE85E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #867 56419045-fd19-455d-98ee-427cdc50849d)");
unit.assert_eq16(16'h0C29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #867 99e7cfa0-3078-46c8-8480-6a0dddab8cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 7d804bd0-9020-42df-aa0f-e18c1bac65fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 2995fb06-cd32-4a45-848d-e12264706f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 dc4e577e-25cb-4a34-8c18-11794d095ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 8ea9faaa-c9c5-484b-a9b0-460f99bc2b3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 697c6ef0-24d3-4b85-b86c-66a06ac56b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 afecdb48-1121-4837-b643-8470f09a3443)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0906;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAFB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6D9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #868 74838ca6-2ad4-4b9e-a5d6-c9e825506b39)");
unit.assert_eq16(16'h0906, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #868 8f09a9ce-5b63-492b-869b-f9d9d6f4a955)");
unit.assert_eq16(16'hAFB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #868 e699bd6d-c52b-4493-98e1-66d3b80d06f9)");
unit.assert_eq16(16'h6D9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #868 e4cb795d-8c13-4216-ba84-0344729242db)");
unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #868 cce665ab-be95-4639-8690-f0ebd6f4412e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 67b72ee9-dbd8-4bda-9891-b66a4c701162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 d9f5d330-59a7-4371-8f1c-70e52e4aba73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 cd81057e-023f-4177-86d0-2b73202fdc89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 a8b71e55-8bce-4077-8b43-90188f335f07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 01bf74b5-8f39-4554-bc2f-cd04e3547f27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 e6591d30-71b2-423f-b764-808ea7b702b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9605;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0867;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #869 e4d7a8d9-dec2-44f0-a253-b26be5b286cd)");
unit.assert_eq16(16'h9605, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #869 e3f3b546-7957-4c11-a434-5fbdcd2de613)");
unit.assert_eq16(16'h80F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #869 7abc47e0-f2b9-45ce-a161-c77b20702e1f)");
unit.assert_eq16(16'hBC76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #869 f69d7e54-6830-4e84-8b53-ab08dec66fb4)");
unit.assert_eq16(16'h0869, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #869 a11cc2ef-30b3-40ab-9a50-57dc29c7b7d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 5b074083-13a3-4d15-8126-6063dafc6161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 994b81ce-0b1b-4557-8ba4-01c2eb669963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 ef95362c-d5d8-4d49-ba6d-62fa52dad22d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 f525b32a-7886-426b-8142-e1395270e033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 b65bf66d-f229-4539-8794-ce8726fd8812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 acd79c29-40b5-4b15-a2dd-a7317c7df356)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h42DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE2AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #870 e21974e9-e3e5-4460-b94b-2adcf2151680)");
unit.assert_eq16(16'h42DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #870 0b6a41bb-d615-46ef-9b23-5b45193ee03f)");
unit.assert_eq16(16'hCE03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #870 edcc3484-8405-4e1f-88e0-181d60e55984)");
unit.assert_eq16(16'hE2AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #870 4c000457-eec8-43a7-9817-ae0f8eff8b8e)");
unit.assert_eq16(16'h0E74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #870 c23d30de-f5bd-4d4d-a251-6e8a9f075804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 5f748474-e65a-42be-82e0-19e87664740b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 b6e1a70e-bab5-40ba-9499-385a67d894ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 f911e6cd-5228-4956-8b7f-6b08dd437416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 136d2a3f-f8e3-4850-a840-d638eb2250aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 83c39677-df6e-4697-a957-e1059ac7ade3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 aaa4a74c-da09-47ec-ac5e-764aa6626231)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF49A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4640;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF5EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0007;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #871 6166f60f-8c3c-4d0e-9ccf-fa5260804c60)");
unit.assert_eq16(16'hF49A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #871 f49d12e9-e4e5-42a9-975c-29c32a988f82)");
unit.assert_eq16(16'h4640, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #871 03b9b0a0-bc18-4670-966a-c2a1f61f6f08)");
unit.assert_eq16(16'hF5EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #871 81b574d5-ec19-48e0-8c01-f96e7c78db9f)");
unit.assert_eq16(16'h0009, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #871 bece2cd6-44ae-436d-baf6-99e712792e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 1d8dfbe0-2d35-4873-8791-27bba98072ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 147509a0-4d4e-4d29-91b0-900f187aecc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 ecab434c-0f4b-4dec-9bdd-78f0b9e696a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 d4f024dc-ba3d-4161-9624-290a03ecd385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 40b3cc33-372c-4ed0-80b0-44bae9f2a909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 54d8a02a-b36a-4fa6-9dd3-20e6c410a46f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA96F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA416;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #872 9e34b189-d27e-40b4-ac62-7fcf008218bb)");
unit.assert_eq16(16'hA96F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #872 e8428b8b-f79d-41a7-9375-74080ad48199)");
unit.assert_eq16(16'hA416, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #872 1107b030-234e-4197-9ced-2d24f4b68f58)");
unit.assert_eq16(16'hEB01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #872 19356218-4b2f-4ae4-b493-41b03d4514b4)");
unit.assert_eq16(16'h013E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #872 cd4ed871-03e9-489e-8aad-5c811f0714e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 8fef44a4-3495-4acb-b26c-83bec7ac2f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 baeb7eb6-f616-433d-9982-187ec88c0e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 8e99f604-0217-45e5-9d99-3500fdf161e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 d5a5e1f9-bd67-4b09-b9c8-f5a6ddd8e407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 2d54a9fd-16b2-4487-8c33-93887ba771f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 89921aa9-7650-4fde-8391-a7e7923a526b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD87B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #873 0cafeffb-d182-4d36-80d4-eb24c8c10d1e)");
unit.assert_eq16(16'h4C89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #873 422b6b80-f8bb-4869-98a4-b04039b45174)");
unit.assert_eq16(16'h8B91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #873 4b79e088-2e93-451f-ab58-3c2d1f2027f0)");
unit.assert_eq16(16'hD87B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #873 7f2e3cf0-e4d5-4d9a-805a-a55430f1aa9c)");
unit.assert_eq16(16'h035F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #873 301ecacb-a58e-43eb-943d-7c0969512d75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 8433ffbc-9d14-4de7-91d6-7181dcc21ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 62896755-b845-4d13-9ecf-cb38807ffe8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 721d15d6-a65f-4677-8c62-fb0a81ec81d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 04e32c1d-5832-4a04-a229-9f0e3663fff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 17e69798-17b1-4494-97f3-078d602b0db0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 a36e6589-27c3-46bd-8272-b8607792b5da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h383C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h298B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h94F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0937;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #874 7ba59cfa-36e8-483a-b14b-26da657eee09)");
unit.assert_eq16(16'h383C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #874 4c795ae9-4f9d-4735-8d62-61c831e4a451)");
unit.assert_eq16(16'h298B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #874 d9dd4500-0c1e-4d25-85ed-5f86c13047d6)");
unit.assert_eq16(16'h94F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #874 2820b245-b91d-4c7e-9d63-aaec4981e51c)");
unit.assert_eq16(16'h0939, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #874 06d41011-a367-405d-8135-27b8ffb4e7e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 3b3d5f60-31c1-464f-83e8-a218fc928922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 b0a21c9c-348e-475a-8bb6-af9d2ecd14b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 5b840b0b-6f58-4f01-8cc8-6929a8ded1c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 17d09a7c-935a-4316-b638-6dfbc5cdf3d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 4922302b-1938-4a05-8dfe-a05e738a8c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 dc1f04ef-2026-4263-b717-4cefb6b8965e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4710;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h863D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h097D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #875 df578d8f-6487-4302-b048-588508d24eb8)");
unit.assert_eq16(16'h4710, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #875 4e75eabd-1b0b-40a7-b6b9-72c29faa55f5)");
unit.assert_eq16(16'h863D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #875 794e06d6-6bdb-4003-9c74-1c61e7597dab)");
unit.assert_eq16(16'h5CEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #875 a288ac44-0a7d-42e0-9858-63c87cd7ccbc)");
unit.assert_eq16(16'h097F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #875 77d74767-36da-4944-b242-0f6c11c54749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 56515d43-a220-48fc-aa2c-000435d3b062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 0f59105f-6e44-4367-b598-1b597dd84016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 8a91aec8-4431-470f-bc7a-58502ddad046)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 03380626-4dbd-4941-bf20-52bc52718a27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 d6c1dfd8-7d49-4c88-bcc6-eef95d7d89ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 063c9d22-b925-4904-82d0-d65d53c1d996)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6063;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9636;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h069F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #876 efd4204a-8591-420e-895b-149ede738ee9)");
unit.assert_eq16(16'h1EBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #876 346c2526-ffd1-48e2-a25c-7d27b8e0874a)");
unit.assert_eq16(16'h6063, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #876 95cbb305-e81f-49f7-a485-b89effc55c37)");
unit.assert_eq16(16'h9636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #876 e2634486-fc0e-409a-a102-5dd860ddcd0b)");
unit.assert_eq16(16'h06A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #876 ebf79702-501c-4b90-8dce-b1ddc3269d85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 d225aa56-852c-43b0-a6da-bccc42922a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 1432e8b7-e270-44f9-9a3b-421dd40c57f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 af88b8ef-3028-4e1f-b268-29e947e1e1a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 996ce1a5-ca10-473d-a3fd-8fe9e1cae8bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 c20041b5-157e-4331-a8d5-d41e65e32b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 3069fb92-8347-4aaf-960d-0bfdf6ba7c3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h83E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC30D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0046;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #877 30006de2-ca0c-45ee-a1b8-b78c37506547)");
unit.assert_eq16(16'h83E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #877 b8689cae-eea1-4b8a-b510-184d1eb8e92e)");
unit.assert_eq16(16'hBE79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #877 69ae2c03-d548-4e88-9e8a-3b4d5f6d94b8)");
unit.assert_eq16(16'hC30D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #877 5d45be95-2e82-48e3-855b-8e89fa79fabf)");
unit.assert_eq16(16'h0048, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #877 98dfba39-b4e3-466b-ae64-41165bfb753d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 5c68fa27-3c75-44c0-a35b-1a265c55dd8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 a0235508-3bf0-4b81-b3d3-31ca901987a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 fe1af515-fc7d-466a-aee5-8e505521986d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 6d634408-0405-43af-9999-6374bd8c19c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 8775c359-1bbf-46bc-9b6b-65f3272558d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 47b2d69d-7e4b-4ebf-985e-51e8e77d66b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA856;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0239;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF9EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0535;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #878 97014a63-5d6e-438c-a36e-53511eeae98a)");
unit.assert_eq16(16'hA856, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #878 f13e6cb4-a87d-466d-8b31-61dddbeb427a)");
unit.assert_eq16(16'h0239, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #878 20c3dadd-9aaf-403c-aa4e-789b2150bf00)");
unit.assert_eq16(16'hF9EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #878 d91ed9f0-a9d8-45dc-b354-eddf87e0a06b)");
unit.assert_eq16(16'h0537, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #878 78d13f34-82ea-44ab-95cc-ae82f33739c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 dba62932-4da3-4d1a-a2ad-f59f86733a46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 e2e1a86d-a5cc-43d6-b518-f193774b9326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 af67ec7b-59fc-43f5-af88-8c62eb9b3632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 7d199bc9-aac1-428a-a87d-470c1d634b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 72661c84-9548-436b-90af-670533401ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 8edc1fd4-739d-4813-b985-4f1a8d82c4df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDDDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDCD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #879 d8cd1b9b-6294-4429-bbbf-5c3815935201)");
unit.assert_eq16(16'hDDDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #879 34809f3b-4a7b-402b-a8ea-3588355dc7ac)");
unit.assert_eq16(16'hDCD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #879 2eeb7e2b-e0e7-4790-8445-7eb5c8b5d63e)");
unit.assert_eq16(16'h47E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #879 e6b3ade5-ff14-4a50-82c6-df0cfe752989)");
unit.assert_eq16(16'h0AA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #879 84cfffe2-778b-45f6-8fcc-13b385b90e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 639e33b6-35c0-488e-ac0e-02ccef117be6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 33438654-787f-45f8-b070-186a2903ecc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 c7939099-6337-4bc3-8f40-234efa2f0a81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 2874c523-94a1-4c97-93bf-64fa3446d4d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 bf17838e-b4d0-4496-a1e7-85799ad81a48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 6685affa-20f6-4b70-985c-a24cbb67e4f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0284;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9908;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h756F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #880 b3a07006-a7b8-4fe5-b1b6-3a6edfd85c68)");
unit.assert_eq16(16'h0284, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #880 5b983efa-3811-46b2-a01f-fe9b4c39aa37)");
unit.assert_eq16(16'h9908, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #880 48d78243-f251-4954-86f5-60f7101f61d3)");
unit.assert_eq16(16'h756F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #880 1a8efe5e-2ee8-4fad-88e3-a489c361c86e)");
unit.assert_eq16(16'h0F62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #880 f5098673-0560-40e9-bae2-ebb1d1cff4b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 5609514b-ebc4-4153-a7b6-cafaf9b7e2e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 84d1201c-5edb-41d9-be2a-3638312a528a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 7118d79a-bc42-47d8-955e-b3ab5de6cf38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 6072adfd-573e-45ea-ac51-ce09c7bc6d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 4db39a64-0d1e-40e1-96c2-7d3f2bab3e08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 06b0d893-b17b-4231-94a0-0dd07a466b8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEAFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB499;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD209;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #881 4cb7e7a2-dd98-4bef-a248-9b07b1e3105c)");
unit.assert_eq16(16'hEAFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #881 cf72b6b2-25b5-4388-b745-ebbb4e47ce5b)");
unit.assert_eq16(16'hB499, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #881 f53be620-e2df-43e7-99aa-3ff23d797e1d)");
unit.assert_eq16(16'hD209, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #881 e9f9bf77-15fc-47c8-90b2-7791c6ba3362)");
unit.assert_eq16(16'h0C38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #881 92d2f4b5-9195-48c5-a9d5-17447df2f991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 409b5775-ee7e-49f8-948c-9eef5e8b05e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 5aa7dffb-793c-41a3-a335-c8863e39c69c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 56a373f4-dc3a-42fd-adff-05e76e036228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 1d4d5f1a-9451-4b91-82d4-4dfc5452a049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 dd537b1f-e62d-4c44-b959-4de3033de362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 99129f8b-9dba-48fa-a8b5-22c22842fb79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h916E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h23F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0200;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #882 0c47cb30-a9bc-4012-8495-828e6ae289b4)");
unit.assert_eq16(16'h916E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #882 599053d1-2775-42ac-ac18-1dbcd0d7681a)");
unit.assert_eq16(16'h23F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #882 f5e345af-e3c9-4408-b33f-ed89f89cbb65)");
unit.assert_eq16(16'h1B3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #882 4b7fbfa2-2c51-42a0-bad1-05fcddce3fbd)");
unit.assert_eq16(16'h0202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #882 4418b85c-60d8-447b-8855-48bbc3fe1746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 b1f7bbfd-b895-4c74-a67c-71cf948bf67b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 53c8e0d6-845e-4851-b87c-cfa014cd3a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 580a6eaa-b5c5-4e47-bac0-36e2273c8a57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 ca814976-dd3e-46c1-9ac7-e5fd168f50da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 db8fcbca-0aea-4246-bd37-8194002ad16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 724ff6f5-4269-4fe1-bd71-9552c38e0531)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4499;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC3C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h60C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h058F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #883 7c5b7f45-4953-4a6e-8558-0e6779b24c9e)");
unit.assert_eq16(16'h4499, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #883 bc4cd220-54a9-487c-9456-7197a916eef0)");
unit.assert_eq16(16'hCC3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #883 2e664a40-f794-48eb-918b-0abf14d07be7)");
unit.assert_eq16(16'h60C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #883 b8569f6d-54b7-4a4b-b1bc-b6eafd498f55)");
unit.assert_eq16(16'h0591, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #883 2c9edff5-2569-4def-b0d8-d0e3dff529d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 47f4f936-0a6e-4026-8a1b-58c0d7031f3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 66535252-1779-422e-8a01-68cdec8c3a84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 992ef1c8-bb4e-4d1d-ba75-e48db1827f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 4ff5ad06-5c18-498b-9165-4c649ad3d40b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 9643d690-56ec-4503-bb45-02c4a3bab431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 ea6df417-66a6-44f5-9a0c-d0abb7835d0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h02D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h86E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #884 9f0c1ed1-9c4e-4fef-b5e6-0e848119957e)");
unit.assert_eq16(16'h02D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #884 30634463-aa66-49b7-8fd0-25835a301241)");
unit.assert_eq16(16'h86E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #884 3e9ee967-2cd3-4eb8-969f-e29a5090f705)");
unit.assert_eq16(16'h6F32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #884 a3435cc2-3f45-4d78-b8d6-b11005b6cb3e)");
unit.assert_eq16(16'h0FC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #884 a1529d34-37f9-4d7c-a0a1-4c893cb28bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 ccf2a15e-e5d4-4db0-9adf-0917fbff21d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 d6d6e927-2652-444e-b3da-5fc0bc3a9eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 41872c98-b9c2-4f90-b8af-686cfecec402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 475c34ea-4b3b-401a-8cb1-7e036ac06e90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 b83974c2-9184-4792-931a-867b63835345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 6c31b6e8-bd58-4688-bf0d-1a45897e1e25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA537;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #885 e4c743da-637b-41bf-a403-5aa87c2bd53a)");
unit.assert_eq16(16'h2DC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #885 3a93b2fb-a5a8-4ff1-912c-8816a8b7b97c)");
unit.assert_eq16(16'hFB39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #885 75f5ab67-733b-4ed4-9876-6cb9a5d25db1)");
unit.assert_eq16(16'hA537, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #885 f5f476ed-9044-4a6c-a66c-803c41833b94)");
unit.assert_eq16(16'h01B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #885 74553dae-8935-4e20-b385-50646ec6668c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 23efaff2-8086-4c8b-b9d4-8f19c306e66e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 7461c9bb-3bf0-41eb-94fb-d2bbaaa00bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 2d99907d-8260-4417-a7de-55bf616dda20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 48ba4dbf-8c79-4b4c-8e73-1f7484df3475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 72feda32-0e87-4826-8fbd-16a68c0f79f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 623d24fd-82c5-4d34-8448-e26ced5ff111)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2175;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #886 3ca029b6-367d-4c0b-bb8b-b1af0183bcbf)");
unit.assert_eq16(16'h2175, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #886 0730d1ca-7453-474c-9713-9707429f5809)");
unit.assert_eq16(16'h80FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #886 ca3898d2-a087-4182-9e11-5a6290b3e1a1)");
unit.assert_eq16(16'h78AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #886 de084586-1eef-4a94-b8d9-b504673cb85c)");
unit.assert_eq16(16'h0F31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #886 b66d895a-c7c6-4a3e-9f45-af01b9b1d391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 059c9628-691b-44fc-b364-c435889e82a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 4d665acb-df1b-4dd2-82a8-981743eff756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 bc9bcc68-995c-4929-8fbb-c952a8d1c00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 3498122d-3169-4395-a57e-d586ca509d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 ca4c0f3b-fbf1-45a5-a00d-94fb41fa287d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 b32d589b-6b29-4302-98cf-04b5addd4474)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6EBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7793;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #887 0f796e4e-6536-4269-8fc3-c89439cecce6)");
unit.assert_eq16(16'h6EBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #887 665436a7-988a-4cad-a656-4e0ad1c60b37)");
unit.assert_eq16(16'hC9EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #887 95a2f96a-b403-4abd-bd58-f617e7946455)");
unit.assert_eq16(16'h7793, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #887 a56c9c1a-76c2-4398-9696-ec4c4d0ad5b5)");
unit.assert_eq16(16'h0B87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #887 4e12ebae-caf0-4486-863c-57469d253006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 6f4ad544-3d76-435d-aa27-3f60d40e7043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 4d80e6d9-afd1-4bca-b04e-47a97c29127f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 9e5dcf36-e728-4a37-b8f7-2403f0acaa45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 9bf3c402-c57e-4764-9e79-4565b5f56682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 0f34a6a2-bf97-45f5-9114-5fe579e46792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 09601e01-8ef1-483c-9a62-63da48b80f1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA97E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB751;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #888 6627a219-f634-4ab9-b97a-5ed3288b02d1)");
unit.assert_eq16(16'hA97E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #888 711334bd-3333-4da3-8728-af0fbd29c7e7)");
unit.assert_eq16(16'hB751, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #888 deb79180-1404-4c3b-b5af-ed3f161d1b4f)");
unit.assert_eq16(16'hFE44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #888 5f34a071-73a9-41c2-a7a2-b194d940f247)");
unit.assert_eq16(16'h0B38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #888 1e2b13ad-5d17-4456-86d8-84f34e715b83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 49ce7b66-e8cf-4185-9367-f43373df4da8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 03eb18e8-7a04-4d53-9f6a-e35a07ec6bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 19e4de69-0d01-40d8-9fbe-f7fcab6b49e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 63b26a06-b5c7-4ce6-879d-f130892e1880)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 f365e605-54a7-4478-805d-5dd8c11d49ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 0be88f9a-644b-414b-9158-ab201186455b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7576;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB653;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4061;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0543;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #889 deef4053-e8ff-4fa5-b558-e52da4a97397)");
unit.assert_eq16(16'h7576, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #889 d9140d4f-e371-442a-b2b7-51f71c1f163b)");
unit.assert_eq16(16'hB653, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #889 28be8ffc-b2f0-468a-b2e1-41f143939c03)");
unit.assert_eq16(16'h4061, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #889 22e29131-f408-4f2b-8326-0b291c09cb71)");
unit.assert_eq16(16'h0545, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #889 985d09d4-7c8f-4179-b7e4-a08847509e27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 998fe6f0-f291-4a4d-84aa-f12597c1f694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 1c4a3f00-1675-41bd-839d-a3eab76f7ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 a2c0ac03-b176-42e5-a71c-81cdb3fe7cd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 c6650f3d-6d45-45b3-a865-bc8e398c419a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 9456d8d0-045f-4fa7-ad55-3e5c0a733e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 a9f2fe4f-d67b-4dcf-b4a4-7021cd442d69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0056;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9ED6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h503F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #890 f83d4984-788e-49da-a93c-3af64b62e6ae)");
unit.assert_eq16(16'h0056, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #890 3a7a7b01-2188-4f97-83cb-48fbe9e8abb3)");
unit.assert_eq16(16'h9ED6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #890 923adfa6-3af0-4309-95b8-1793e051e7e3)");
unit.assert_eq16(16'h503F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #890 398adc2d-9bc3-4440-a656-0892331b1384)");
unit.assert_eq16(16'h06C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #890 916dd4c1-9363-45e4-877e-f81b9de89884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 18b0c006-fb7c-4216-a77a-4f70704541d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 35abf8a5-ec99-4833-a8fc-430f6257c88f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 adeb695e-6e64-44b1-b1c5-7c9211f252e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 eac0aed4-2348-448c-944c-6f184069e785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 23d5d9ac-e57d-4b8b-aa53-c206c919034a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 c65d5489-78d6-4997-91aa-f73b761dcd3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0EB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h95DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3CA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #891 6b71346b-9f64-4758-ae86-c506c8d4e7b6)");
unit.assert_eq16(16'h0EB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #891 ebec48e0-c14a-4d16-81bf-2b2c80a3829e)");
unit.assert_eq16(16'h95DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #891 eebcb29a-7663-4007-b725-2acbef0691c4)");
unit.assert_eq16(16'h3CA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #891 b7276de3-a500-4aa0-abe1-c417ab8ab347)");
unit.assert_eq16(16'h0EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #891 f28ffaa6-e1ba-469e-a91f-53ddc3bb0753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 83dcce8d-83d9-4c2a-ad14-51852645c10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 a8758ee5-7120-4980-a922-c94a63e4e0e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 1eb6068d-8f5d-4f31-98fb-7c996809f4c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 e9f9c589-ff41-4635-9a98-9349d438c91e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 17ac308d-f3bf-44fc-86b7-81fb4fc13779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 a400768e-0751-42ef-96b1-683a4a976e72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB07C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD25E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #892 002728a6-1f59-45ff-93a9-d58f64a622b5)");
unit.assert_eq16(16'hB07C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #892 2d7b7bbb-be96-4682-bd7c-22023412d624)");
unit.assert_eq16(16'h41B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #892 714e749c-1f4a-4ee2-8179-c245261af482)");
unit.assert_eq16(16'hD25E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #892 a19a039b-da49-4157-a950-9250568f5bcb)");
unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #892 3521f13f-61e7-46ae-8298-5f4dac4beb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 af7b9de7-1e2d-4fdb-9640-9cf4442a5d60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 55439cf6-28c1-4272-ac2b-b4927db382c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 04de3927-0016-4a47-a875-9714c3d029b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 3cb0dd56-2b75-450b-83b4-4e773fc89208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 6985c22e-f28e-4071-ae26-ed143eab8a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 c5a074b6-fdd5-4816-920b-87cdf61353c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5570;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #893 4c11f945-e292-4959-b23f-daa20984c01b)");
unit.assert_eq16(16'hDA15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #893 7a786e60-ca18-4590-b20e-abd6a3ac7546)");
unit.assert_eq16(16'h5570, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #893 efae668c-6e24-4965-b86f-692cdc1af665)");
unit.assert_eq16(16'hEA70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #893 134272d4-a29e-4fc9-9024-1406609117a3)");
unit.assert_eq16(16'h0ADB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #893 d490fd51-5dac-49b7-b27b-3534ab12d6a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 a7e534f3-87bf-4106-81b7-7cb65d8b3592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 a91833f5-f395-4a3a-8796-68764867ba4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 f652ca55-7350-48a5-9b0c-3adf09f87543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 076222ca-529a-42e4-889d-f91fae06b850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 59dcba9a-5bd5-4bd4-9781-efd4928a9ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 6feb0aa5-31ff-4b64-b8b5-24efe37350eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4F41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCA00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9867;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #894 7618b788-963b-4aed-b61f-4f163d6b4bc4)");
unit.assert_eq16(16'h4F41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #894 3b1ed2e1-566e-4465-90c0-3634a8648345)");
unit.assert_eq16(16'hCA00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #894 183ea289-64a9-4147-b9af-0b471313b4d3)");
unit.assert_eq16(16'h9867, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #894 c7570eb5-7763-4cd8-bcb3-8a6944f6b73c)");
unit.assert_eq16(16'h0C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #894 54e04b5d-4754-4d4a-b9c8-ed9b025c1f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 fb0f7216-ce26-4e29-a58d-63863a35d2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 c0cc7cbe-f70f-41d7-87e4-740c1484effa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 72e0960b-4f3a-42bb-b887-40210026211a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 bcc65ad8-5bcc-4e67-ae96-52feb4a5ddc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 b1986c3c-687f-42c3-9b29-0a003adfc472)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 2f38b483-5d8f-4ac7-92ab-75eea7a0075a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDE37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA538;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEDA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0606;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #895 8df41187-a001-40ef-85df-65f3eb017e68)");
unit.assert_eq16(16'hDE37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #895 27a466e0-580e-46ef-ab35-ee356474bb36)");
unit.assert_eq16(16'hA538, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #895 5b49bded-e5cd-4c40-8005-ccb2ff7a503e)");
unit.assert_eq16(16'hEDA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #895 0cab4800-7f7f-4af1-85bb-62a050b9b477)");
unit.assert_eq16(16'h0608, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #895 896b7799-d6da-474c-a0d3-6f651bc2ed8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 b13af8df-a96d-4626-baf3-4acdc74f9e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 f7e55f92-eabc-41d2-b8b5-964cee7619de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 22a70392-d391-4e85-8242-51d000b7d7ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 6a10cdeb-eb44-4d4d-8300-75d86510e8ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 d0183544-6cc7-4be6-aa1f-da97ede3e795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 89f50132-a36f-4248-bb8b-a492c9988fb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9AC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF4F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #896 7af06eda-6e2c-46c5-bd8d-3d867959a084)");
unit.assert_eq16(16'h6B15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #896 0c6380ff-40ef-4fff-b755-590982b621ae)");
unit.assert_eq16(16'h9AC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #896 be5afc88-88e6-4955-bbec-ddaaaf3e16ef)");
unit.assert_eq16(16'hF4F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #896 9503522b-2aed-4c4e-af70-087e81af2038)");
unit.assert_eq16(16'h0EEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #896 f7865a38-3a76-4cf7-a3cd-96c411dbac50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 106fad04-414a-4eec-9abb-fc05c50d9104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 d4c02849-a935-4fa2-b591-c2131183134e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 7a489a0f-d6c0-44c4-b17a-5fd66ba63304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 f3fe264c-e1d7-4fbb-be1a-b27b400be00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 c70f001b-735f-401f-a3fa-d61d23a97729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 79910e7d-9ce8-4740-a427-a9718f1874d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h35AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE926;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #897 72cade19-6325-418f-b0d8-485e160d742d)");
unit.assert_eq16(16'h35AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #897 e4a30800-044c-4987-86d4-203daaa3ac6c)");
unit.assert_eq16(16'h1E6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #897 07b737e6-5faf-416f-954d-219609354f01)");
unit.assert_eq16(16'hE926, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #897 b122b5d2-f25b-40ba-9ee8-332c33dcb112)");
unit.assert_eq16(16'h0E73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #897 fbf5c863-277a-40b4-b401-f2af4d41b893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 eebc848e-2eff-40ef-b60b-9b5a1fe630b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 8c263ffc-deab-4864-9b96-eed8cc8e8fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 e9faed75-19fd-47e0-85dd-2dce20a80a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 24770e46-6be4-4375-9719-b4817ea059a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 edc30544-dcca-4e07-b261-73a1272b46c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 936814a1-772e-495e-bee7-bcf476200361)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC7BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA6D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #898 72e8b382-7eca-4918-8293-605762078acb)");
unit.assert_eq16(16'hC7BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #898 5da73c72-b001-4452-bcfd-7b5411d58ec2)");
unit.assert_eq16(16'hAC6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #898 6ab1d140-3676-44ef-ad2a-89e09029d6e7)");
unit.assert_eq16(16'hA6D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #898 02a4e948-0eb7-4495-9728-305badb1faa3)");
unit.assert_eq16(16'h05BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #898 d7449129-3752-440e-92a0-852ca86cb1ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 7945b023-d020-4f9e-bb55-ff9b11a5a3d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 f6abb743-94e2-4cc6-acd1-43bcae6b311c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 236a0bcd-d0a0-4718-bd0b-e917ce43f6b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 ed983363-95c6-42f9-9529-8cbd1c032d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 90774ef2-53fc-4f71-a8c6-dd3c88c9a019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 8041ab2d-85ba-44a0-a5ec-4083bd735f90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAD2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #899 c203c6ae-db41-43d3-8730-d5ee1f361d34)");
unit.assert_eq16(16'hAEC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #899 85da290c-d82a-4828-863a-8b6414b45f1e)");
unit.assert_eq16(16'hAD2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #899 8ca954fb-32f5-4e69-a456-d3d859a011bd)");
unit.assert_eq16(16'hB0BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #899 72343a8a-96d7-40ad-9749-20852f474519)");
unit.assert_eq16(16'h08A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #899 f349291d-98a6-4653-b24b-0036e0b680de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 68e1a49f-d579-4bde-96d9-7fb685635057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 7f6a9c9b-4d1f-4ece-a47f-ee216ecfff26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 637610d1-8de9-4031-8003-3aa3044f5c28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 3d484385-229b-4a0f-bd38-90a09a3a644e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 fc20d058-4ed2-44ba-a264-ab02e0597ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 6d6af3ae-8719-4652-b09e-6103b1c81a1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB902;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDE72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #900 554c929b-3279-46a7-998a-3ba60f14aca2)");
unit.assert_eq16(16'hB902, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #900 ba454662-8f9d-48cb-997a-2475347bac73)");
unit.assert_eq16(16'hDE72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #900 f6b6674a-4bff-4474-91d8-d1f76f79910d)");
unit.assert_eq16(16'h4C3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #900 55b5d57a-f3a2-4649-ad9f-aeae16436765)");
unit.assert_eq16(16'h00A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #900 fee4d777-6d57-45c1-8744-83dfc98d33ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 53712b97-50be-4784-8a89-4f94419f3228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 c14bd481-122f-4759-beee-bfe038b5e11f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 05c06f9c-7d3c-44da-92c6-3d022e1ff3e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 9cecb9bf-9065-47c3-a078-cf6168a3c329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 d6585f47-ce2f-4241-9dd8-d946cf27b86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 c916bcb6-1040-42a0-bbac-96bb05a87101)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA5DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE468;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #901 893e9e1c-9221-4fb2-8259-43543ae17558)");
unit.assert_eq16(16'hA5DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #901 8a65d803-f0be-446a-9db9-edd069dde58d)");
unit.assert_eq16(16'hE468, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #901 62b6d2ae-fd53-4739-aba7-e07c82df62e0)");
unit.assert_eq16(16'h0E06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #901 4a0ba54c-4339-415b-92ee-569f009d25c2)");
unit.assert_eq16(16'h045F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #901 009dcd85-73f6-458b-a7ea-27d261004001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 1957faf7-2f05-4168-a9c2-8fba5e50e0b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 37069e67-d5b6-4e5c-b84f-7f2fe760820b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 36c16201-07ba-4e0f-9197-cf959391468f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 f5fbdb04-a7d4-4875-b444-6b64a4f04e2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 fd65b734-d6aa-47f3-b62d-ccf04a6e3d0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 c60c112c-a446-4b81-96e7-4e4bda7bf8f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA6CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #902 56e0ff81-0ff0-4dfb-be32-0529362f5187)");
unit.assert_eq16(16'hA6CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #902 24e92b1f-e6a4-4294-824b-5d3ecc6d14ac)");
unit.assert_eq16(16'hBD67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #902 00f733bc-bc94-4b7e-9ac1-65415fc2fc68)");
unit.assert_eq16(16'h9FAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #902 a79610d2-0ff9-4f4b-a3a0-bb9a21b8adf6)");
unit.assert_eq16(16'h0E91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #902 0fa9cc9f-7fe8-4dbd-935a-4cbf08bd9ae7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 e849a1e1-a542-426d-ace9-88f794474fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 a662b508-845e-4c4d-b149-26416a7ea444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 d639665d-a28e-437a-81aa-2c7feeae0113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 928d437b-9e68-4a91-981d-5f2eae8903b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 61c3115b-78ce-4e11-ba9c-c6e23131205c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 fa78ea92-a0c2-4a01-a5f1-537aba7c3704)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE7C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h24ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #903 c506407c-3a95-457e-980d-78ae9ae2dae4)");
unit.assert_eq16(16'hE7C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #903 64e231e4-c2a3-4dc5-b07c-1594e93fa815)");
unit.assert_eq16(16'h24ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #903 624b860b-ac65-4cd9-bf8f-d0bc7bb0b39a)");
unit.assert_eq16(16'h15FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #903 a9b6c6e9-92aa-4003-a618-946bb4588600)");
unit.assert_eq16(16'h0DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #903 04871810-4794-4588-95a7-7ecb01d6f657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 006ba3fd-cbfd-4117-bbc0-e175dc33f89f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 00507d04-370d-45b8-82b2-9cce395f4f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 1e1f4d05-02c5-4afc-84d3-9e4b4bc5172e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 13c2925b-b33a-43e8-9dd1-8f9664d0d5bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 d12a8916-ee98-4403-8681-3d6f4552029f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 c7a2be89-6203-4c9b-96c4-5788c3db6d47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5ACB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD709;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h093B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #904 42b8abc2-3234-40cd-9be5-e6878569b367)");
unit.assert_eq16(16'h5ACB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #904 005aa788-3b73-4636-9f90-99c33c9cafe4)");
unit.assert_eq16(16'hEF1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #904 b509ab0f-2b5a-43f5-be86-1b24cd4039d9)");
unit.assert_eq16(16'hD709, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #904 60b2d592-3256-47ff-9a32-b0e46bc7844f)");
unit.assert_eq16(16'h093D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #904 84777a6b-3b15-4401-91ef-b897c0cf8449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 da995b2f-ff30-4ec9-b22b-f7b737108eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 f55cd8f4-cec8-4518-b1ae-a6d3ff7fed04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 3346e00e-5702-4f2d-b62b-92ae4e97e75f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 176db4cf-2287-4171-abf1-22ab3784b4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 f5253215-a863-4edd-886b-dd27aa8b81e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 390087f0-0bb9-40ae-9dfd-ef07de8bcbcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4043;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2781;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1402;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #905 215888c7-6eaf-43e1-8f0b-c822142ac72a)");
unit.assert_eq16(16'h4043, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #905 09dc2740-f96c-42e5-a8c3-5564463f5a17)");
unit.assert_eq16(16'h2781, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #905 74308cd1-f160-451c-99b0-635d4f6cab2a)");
unit.assert_eq16(16'h1402, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #905 216f35ef-a4e5-41a4-99d7-c651f742e0cb)");
unit.assert_eq16(16'h078D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #905 d400bf91-eaf1-4392-8da9-5977464561f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 4617c2b7-ed2f-40f4-bff7-180f0e3da8b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 5a85b3f5-137a-4b9a-974a-ec6fb6d2e199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 2897fbcc-a5dc-4826-a8c2-b61f60a7b69c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 577b7c58-c9c9-431f-a915-a538b651fbd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 515aedbe-5e34-4bd0-be06-508fec1bf61f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 cee55709-5c1d-4300-af2d-5fab831ebde0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h801E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB951;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #906 a01612d3-e4fd-432f-9216-9919271b8537)");
unit.assert_eq16(16'h801E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #906 727daeca-a0f3-4eaf-8b2b-768742bda46f)");
unit.assert_eq16(16'hB951, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #906 66ee25ff-7969-43f8-949b-5547f5957d09)");
unit.assert_eq16(16'hDD67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #906 d68da381-6a80-42b6-93b3-55b593d866ff)");
unit.assert_eq16(16'h0B53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #906 d61cac72-0dea-4274-a28f-7a5988fd14ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 e1ea8f8a-124b-4df4-88cf-140f6b6d4ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 163a7cab-4838-405f-90f3-9fb07a8331bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 dd2bd86a-cfc8-44e9-b146-547588eaa3dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 57cec342-5373-4682-a02b-44811467b07b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 6dac0036-0aa1-457f-ae25-892d9ba957f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 95d5c062-1178-4585-8424-f9e1177b83ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5862;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #907 125716c3-355c-4e57-9de1-c52b8f143693)");
unit.assert_eq16(16'h9B1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #907 6a328938-c5e9-4417-80a8-2d1a56288cb8)");
unit.assert_eq16(16'h5862, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #907 e4cb005b-622e-404c-8a5d-f1eca4ed35a3)");
unit.assert_eq16(16'h1F22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #907 4e3741d7-932f-433b-bde5-22395c104461)");
unit.assert_eq16(16'h03F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #907 fe79d543-3d1e-4f3e-8d99-d5e5de700a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 2be6163d-acff-42f7-9b47-4734f35cd950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 60f63e8e-b312-4c37-ba8b-2f3332f23b9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 a646978f-7faf-4e78-91de-6d9bacb0d7d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 5ff5a591-3bbc-40c3-b5ea-70271e976f84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 003a9c81-a422-43e0-aabf-c9026c2f74c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 24a16b5a-bc7c-4fa2-923c-957424ec17a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h352A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h06DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h94C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0306;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #908 6990c0a8-485c-4d2a-b0b4-69c2edc5d75e)");
unit.assert_eq16(16'h352A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #908 5c790c0e-e094-4707-87df-9f723da126d6)");
unit.assert_eq16(16'h06DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #908 17fd6eba-569d-4479-af1e-da7c53615adb)");
unit.assert_eq16(16'h94C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #908 f05cbe95-bd21-43f1-9dec-3bf21b8ad153)");
unit.assert_eq16(16'h0308, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #908 cd5fffcd-2489-4d89-ba1f-7d2747893dda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 901e0da4-3413-4825-8fa2-5bf8046ab874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 0860f7d3-bac3-405a-a20d-8c58d56423b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 887e1a5f-fc74-4769-b482-ae4f5880848f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 2a2529a6-de05-4319-b9c6-b494aef27a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 a4e92b2b-3bff-418e-87a7-e83e83dca45f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 6809c46c-fa8c-4911-9357-62add3c79847)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7874;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7288;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0988;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #909 1e16c084-7f8a-4027-b421-bd8ab837a2e6)");
unit.assert_eq16(16'h7874, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #909 ef1970a0-976a-4d9a-98a0-e6c64fa23f21)");
unit.assert_eq16(16'h7288, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #909 6386582e-5835-4a2c-82d1-f2ff2ed05d89)");
unit.assert_eq16(16'h08EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #909 72988962-046a-47ca-baa3-841fad57ce8a)");
unit.assert_eq16(16'h098A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #909 0d7ee91b-ffce-4594-a0d4-ef9b3a75f62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 4790aaf1-05ed-42bf-8f39-8a55b8d0128a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 50efdfa2-5726-458a-aa53-1b8c4f9b2c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 987ccff4-723b-4f65-93b1-9d890313788d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 3aaf0490-d1d1-468f-803b-366df4199edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 ed91b63d-e948-40c5-9428-58a2e5093a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 9e4d6f3d-6161-4144-be69-410ce3a477d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3CF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h422D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3BD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #910 0c261ae7-dc75-4873-a74a-67e5bacf3d79)");
unit.assert_eq16(16'h3CF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #910 f82178b5-cac3-4551-86d4-e23c81a57b2f)");
unit.assert_eq16(16'h422D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #910 c7ecdb01-a784-4672-aee3-dafce6d33291)");
unit.assert_eq16(16'h3BD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #910 3b2e274f-99e8-416e-a703-fd8c3d548bb0)");
unit.assert_eq16(16'h0EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #910 db4065ed-d4c5-4bab-bd9b-b3718da4dc1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 b7cb1ef8-87ae-4775-beb1-4df24b752e18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 248d38d1-36f2-460e-b144-29057ed14166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 cdb76588-a64f-4640-a2eb-f80d32bedc6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 2fbf91be-4203-4096-bc36-ce8fbe1ae2e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 ec32aca8-af61-4b70-a110-d9b8073a8bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 91f22bf3-8b40-4997-a311-197de128edfb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h36CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2B4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFAB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #911 3ef37a7e-0cec-4785-a89b-595c8aed7d82)");
unit.assert_eq16(16'h36CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #911 ba00c659-7bb8-406a-b4d8-006636135bf4)");
unit.assert_eq16(16'h2B4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #911 bfaeeda8-8dcb-4e74-92f0-8ffd6b0c4ba5)");
unit.assert_eq16(16'hFAB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #911 d5578bce-00ef-431b-98e8-6779954b7d71)");
unit.assert_eq16(16'h0D74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #911 1888b545-7021-4618-8dad-7c3816a35e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 a81c6a78-99ce-473f-a3c5-32ef0d164cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 d0df49e1-dc10-4dcc-93ef-a4d15da8ff46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 a78174aa-9f1a-4938-b3f3-0e9ab907ee7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 184f4fda-0127-4529-a7bd-a747c41c4002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 481426dd-5c34-4955-a27f-8fbc974fbd97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 cb357174-ff32-433b-8804-f95ce59c1eec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h48E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF814;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAEE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #912 986b480c-5964-4c9c-84e4-fd36da2ee1a7)");
unit.assert_eq16(16'h48E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #912 17031c83-f32f-44d1-99f8-4c063f924ac3)");
unit.assert_eq16(16'hF814, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #912 ae6d5861-280b-414e-a333-43fa102b33b1)");
unit.assert_eq16(16'hAEE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #912 324b744f-be56-4589-91a3-efb22e6a068c)");
unit.assert_eq16(16'h031F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #912 3511651d-c2b2-430a-af9c-4a1be8a6ae88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 67e06c53-2186-4c8e-975d-f64fb4c70c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 f31e8208-2ac2-4c0a-849d-57093c280ef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 2ca3652c-95e6-4502-8eaa-404969f046b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 fd402792-716a-4499-80ef-1777e2d79bd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 5492e4be-74a7-42d5-8101-a960a4dbbb48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 9397d8f4-8349-4bd1-8a50-5ab5478424d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6BCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h70A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9990;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #913 5f7429b4-a611-4e24-8a50-78a4ec1f5d5e)");
unit.assert_eq16(16'h6BCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #913 e2b22945-d212-4988-b5ce-2df94738c905)");
unit.assert_eq16(16'h70A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #913 aa0f027e-109f-4dcf-ad6c-75ad80a75f69)");
unit.assert_eq16(16'h9990, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #913 dfd4f640-f786-4c5c-979e-ff24606d1195)");
unit.assert_eq16(16'h06E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #913 1003bc59-adc2-44e1-984d-d4686a603cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 056382f2-6e03-4cde-8063-36fadb33116e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 c7032a0a-70f9-4d7f-9412-ba0072c368e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 9810a8dc-6604-43cf-98f0-8eee868a1a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 6b3890d2-11fe-4b7b-af45-12dffd049165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 1d1ba487-c760-4c8a-920c-c22d24a3def0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 b1bfa590-7b05-4131-afa5-011a6204c865)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC85D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5454;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h709F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #914 a900cdcc-f883-4239-81a3-79d4ed2f3f18)");
unit.assert_eq16(16'hC85D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #914 b1fb826d-3b3b-44e6-a326-9571694aa116)");
unit.assert_eq16(16'h5454, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #914 2d6dc40d-2009-464d-a00e-3757d3610bc8)");
unit.assert_eq16(16'h709F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #914 560d109f-2ff8-4392-bf4f-a1bdd85b6e6e)");
unit.assert_eq16(16'h0A26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #914 52c628a3-3784-47d2-aff9-1fd2ffc564e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 89f05254-1432-4651-8150-e93757c99686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 8ff55d49-8d77-480e-8ec7-d3f3d79d4519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 718e741f-e7b6-400d-991d-0127bb92cb5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 192b9039-c647-4128-a356-13685008b20f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 c6bc6038-4000-4d8a-8b94-99e28a072635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 c9dabb0b-2bc6-4098-ba74-ecfa348f7cd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBAFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h23AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6842;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #915 2ae63623-d52a-44ed-a63d-9d871b2bce3c)");
unit.assert_eq16(16'hBAFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #915 b34cbcf3-feca-4136-9fbb-0ca75d67b753)");
unit.assert_eq16(16'h23AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #915 6a936ed3-d270-420a-ba4b-ed6d4f2331f0)");
unit.assert_eq16(16'h6842, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #915 64e962fc-3689-4c67-9af7-7d6ed1149f7f)");
unit.assert_eq16(16'h05B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #915 8d0fd511-4b6a-4101-a12e-d477e56717d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 62cab977-516a-48aa-b06c-659bff65751a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 a3ca059c-a292-4c81-bfe4-368a8340817e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 a14d3be3-314e-42fd-bde8-c038bf67f17e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 4eb5b6cb-1310-4b14-8985-f641adbf0be5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 33f904e8-f681-4a6d-8656-9c91b20e8fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 80996f3d-839f-4815-8114-dcb3e6b8fae4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h82BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8A97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8DE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #916 4c737c71-8ed2-4174-ab66-3be16e87715e)");
unit.assert_eq16(16'h82BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #916 ad6dcd1d-9d37-4292-8c95-3d35869863d2)");
unit.assert_eq16(16'h8A97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #916 d3afbafd-7af5-415c-ad28-38fab85cd728)");
unit.assert_eq16(16'h8DE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #916 299b3f4b-8ef3-43d7-b1eb-bd7ad0fb6c63)");
unit.assert_eq16(16'h04BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #916 fd10f0ed-3939-4614-99c0-39bb2eafef32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 c1c51019-113e-419c-adfe-1ec679a3b7ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 385288a1-1cb7-477a-85b9-780edd89a5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 a0c2ead0-4cc4-4144-96d4-45ce97141ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 5ca0dc27-1bbe-4094-aa67-fb45d0125d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 116612c5-96c0-4f28-8e80-99b6f7266953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 d9febedc-c88c-45b1-905d-a2efea29c47a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1085;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hECC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #917 df273cd2-bb2d-4679-81ce-3f0d00716057)");
unit.assert_eq16(16'h1085, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #917 b7bc6a7f-2a84-4630-a71c-d8ba67402fe0)");
unit.assert_eq16(16'h41E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #917 046745b3-1566-42fd-af32-5eba80f18865)");
unit.assert_eq16(16'hECC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #917 d5676f0b-0346-4a28-896c-d652c2e79821)");
unit.assert_eq16(16'h02BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #917 3cced26d-6ca0-44b1-9aa9-5223cfd55ffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 f64d1cb8-2d98-41a2-9221-f6a99a940ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 756ef62c-9308-4cc0-a1ee-5c1ded6aaac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 3d3c1efa-bdea-4d24-924f-744d334cb1af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 ce18d411-b28e-44e0-9435-570795551ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 78171ab3-74f0-4bab-8304-4bed95afc82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 c08df9f6-5047-4277-9f01-5f8c96aacf49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h38F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6927;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #918 fb302fb9-19ff-43ff-b00b-ade1d4d7f314)");
unit.assert_eq16(16'h7F87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #918 0010c1ed-485e-4dfa-ad2e-1a69bac82659)");
unit.assert_eq16(16'h38F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #918 5e3368b1-c2e5-44b4-acca-22ce8f7747e9)");
unit.assert_eq16(16'h6927, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #918 6966a589-9011-45e1-b8cf-082bf5e8c0ad)");
unit.assert_eq16(16'h0071, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #918 4a151f3a-384f-4471-a3c3-927a02594587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 fc29061e-4252-4f60-b5ec-4179773b5c63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 049a79bd-4b82-4130-9763-99b40be23c13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 0437dd2a-4b88-43e6-a54d-4e3d1e96d504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 b4d3dbdd-dbb2-470b-8744-328b75ff6882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 4628462e-016b-4899-aed1-9ffc1f436167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 3e231d34-4f79-4733-aa5c-aa198b69d2c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD948;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3552;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0838;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #919 b84a8eb0-d628-4fa9-b6d3-074378e551ca)");
unit.assert_eq16(16'hD948, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #919 c1096850-8558-47b7-a862-527cc4b9a9d4)");
unit.assert_eq16(16'h3552, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #919 86abc170-d544-4406-9b2d-12f4af2cdd7a)");
unit.assert_eq16(16'h6F7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #919 28eb0118-0b2f-43a9-a7fc-c371df214be6)");
unit.assert_eq16(16'h083A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #919 58bcce1d-c0d3-4370-9dda-4644306ee881)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 dfcdb443-7787-431c-914b-985202ee509e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 c340b70f-9723-4575-a89f-140c71c52c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 f0844b0a-c394-4625-94b7-ab8316ec511f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 4d850345-bc98-4f38-be1c-e60fa5dbfc72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 1f4ee064-9046-460e-b358-40cd41d8d9aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 ddf4ba5f-232f-4cf7-960d-721b7b26a5d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE669;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1704;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #920 348a2c01-23ef-482e-a7e3-bf6b0b867826)");
unit.assert_eq16(16'hE669, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #920 6db129a4-b573-472c-8131-2dcea99accaa)");
unit.assert_eq16(16'h1704, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #920 4b3e8c0a-f346-43c7-a8df-d274a90dbf81)");
unit.assert_eq16(16'h81B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #920 ef22cd14-4b4c-4126-9bb6-0659350c7522)");
unit.assert_eq16(16'h07A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #920 aea7791a-a524-4326-a319-1b5dfff49714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 a52bfbb8-e97f-487b-8a86-8f7edd55ef73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 0dbbe393-d181-4d53-93cf-61057d8baae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 392e851d-4ee2-48cd-94f4-5e9fdc8f1b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 cd43aa22-9f6c-4847-8503-88f9474b2d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 74bead08-bdcd-47a0-b472-3eb825265563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 11a98809-26d7-4a01-820b-83ef8d56b5e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA317;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6CEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #921 ad99e7b2-1083-4bc5-810d-184e3f3039cf)");
unit.assert_eq16(16'hA317, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #921 e2df4dfb-3c22-4cbc-ba1e-574ce3cb0671)");
unit.assert_eq16(16'hE3A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #921 1f49e8e3-4315-43ed-b146-32b1b07d2de0)");
unit.assert_eq16(16'h6CEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #921 1287eb68-725a-4876-9c85-7567938f6bd5)");
unit.assert_eq16(16'h0C12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #921 2f360794-b8a3-4faf-87de-8e1ace5e71ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 afad760d-caaa-4393-941b-da4c0c76aaaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 ef71de2f-1fb0-435e-b659-70f34819d0ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 d6947224-f8a6-4d79-93f2-6a8dac5a2375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 729dac14-4064-43b9-a54d-79e0a7f4c7e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 12bafa9c-bb13-4075-b865-6d4ff371199c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 d2c8d1da-5100-486c-a5ae-ccc051173ecb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2708;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8150;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #922 73e50bd4-d7b7-4dfc-b793-6d2ed40d9b1f)");
unit.assert_eq16(16'h6F98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #922 d98a973b-f1ba-4130-b9ee-c416e14fa67a)");
unit.assert_eq16(16'h2708, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #922 04d4b3b0-f773-485c-9ecd-03c094177e87)");
unit.assert_eq16(16'h8150, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #922 ba3614bf-15e6-4ae0-96c1-7475ff8be685)");
unit.assert_eq16(16'h0E69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #922 71116307-5e71-40fd-9012-7d38e3f574d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 73548411-868c-412b-850c-28a72211d1cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 222c211c-c8d1-400d-8088-28191ce13dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 65565d6c-a51c-438d-bc65-49ca552c84b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 8b63e15a-97a7-4fd1-829a-768763e48b3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 81f61130-a475-40f0-8d3e-5add9cdddb0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 a02bb717-051d-4cfe-9341-643fa0cc5db5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE0EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDAA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #923 81f46a23-852c-4f52-a785-ee254a266dbb)");
unit.assert_eq16(16'hD2AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #923 a9359762-44a2-4ac8-852d-4a734d119337)");
unit.assert_eq16(16'hE0EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #923 d5792772-081f-4909-9f40-db76f5505c04)");
unit.assert_eq16(16'hDAA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #923 d1f86fad-ffa4-49cf-84bd-9d06869d378f)");
unit.assert_eq16(16'h0F15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #923 7a0c8e7a-23fd-4a46-ace7-e7a1ae804394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 d5d56717-33b1-4bdb-9eca-d4e7b3118fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 b437b563-05e8-4a08-a361-0371be7a7bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 f986fe21-3ad5-4d7c-9341-0ded41fb93bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 472f3fe7-40f9-4650-83bc-6e6b423d4d40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 683d1769-aa0c-40e1-bcc9-7b926b06cb7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 ce190874-f839-4425-898a-31577e6af5cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD580;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h47C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hACA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0160;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #924 d27e58f4-3cbf-422b-b0d7-84d288c0da70)");
unit.assert_eq16(16'hD580, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #924 f08ddfd0-0542-4fd3-b97a-3cbec1282996)");
unit.assert_eq16(16'h47C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #924 998108a6-1359-41db-a18f-cf01a8b40716)");
unit.assert_eq16(16'hACA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #924 4df00e19-a77e-4ec4-9a4c-12a368445c55)");
unit.assert_eq16(16'h0162, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #924 293f1819-bb60-44b6-a2d7-0315d6e1c3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 4afe7b7d-11ee-44af-b7eb-d1ea28a30218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 0e7e7603-c321-4880-b302-530bb8a8b9c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 52b06e4d-86e0-4c4d-9969-b2d10c58d1ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 9dc2def2-d26c-4190-b213-f5280cef0a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 b174e964-a5af-4758-a8d8-c7a6ede49b02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 8afb6457-749d-4c3f-a060-8a82138eb18c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h429E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9DB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF55E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #925 9640b080-0d49-477d-86ca-5fd1f8929c29)");
unit.assert_eq16(16'h429E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #925 56e1d096-5610-45ff-bac2-1381135b514c)");
unit.assert_eq16(16'h9DB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #925 b4c5c4a9-3d45-4f36-8b1c-62f8d3546d79)");
unit.assert_eq16(16'hF55E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #925 2e7a190a-63a9-493b-b40c-ef4591d5cfff)");
unit.assert_eq16(16'h0D24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #925 b3565f01-0452-4571-8559-b4034380f790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 b6a775bf-a601-4ddb-bf79-4bc5149bf370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 3891f971-7bc3-4cd3-8a89-578242f9416f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 38f1e433-cedf-4a72-abd5-f407150320a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 b035053c-bb5a-487f-8435-9631e53f949c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 05ef4110-a164-49ce-bafa-27a4927f9e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 2afb5760-a9c5-4bf6-82db-edc30c97879c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7700;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h49EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1727;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #926 c8ed2582-629f-42c2-9fe2-7c06f1889c91)");
unit.assert_eq16(16'h7700, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #926 a9c6ac72-cda8-4307-899d-b75c4b3f3e1a)");
unit.assert_eq16(16'h49EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #926 8f825926-df37-4e11-9b99-ae3a5b87bab7)");
unit.assert_eq16(16'h1727, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #926 ec4a4b5f-6973-497e-b79c-7bbe74528034)");
unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #926 107e9029-bbe3-44ea-bbf8-3914c7e304f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 4a986fbb-c8dd-43e2-bb51-0439044fb9a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 e2adf339-750a-4c32-bca3-bd03e839e4a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 c453e633-9709-420a-a6bb-cc04706399df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 2c719115-bc9c-4f71-8ab9-6ecf9975c099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 bb5ef984-cb27-4d52-bb5d-f18c41e006b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 49f59254-3285-4e39-ba44-108672ec6039)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7904;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2077;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #927 1c4121ee-a9cf-4468-b7f2-86410e5b79b5)");
unit.assert_eq16(16'h2A51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #927 2fde5d5e-330e-4ab1-9503-88a17e262e02)");
unit.assert_eq16(16'h7904, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #927 88579f74-b376-497c-a757-8dace487766a)");
unit.assert_eq16(16'h2077, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #927 5125cf2d-790a-49ae-b1e4-60c4341cf2bb)");
unit.assert_eq16(16'h0FCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #927 a170c523-c705-4e1a-85b5-1d87d0226c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 4d5083f6-38d3-4397-8d14-839ed201906b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 bcec10ad-be8c-42c1-895e-97c3329f90bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 3bb964ef-e01f-4f15-b170-8da6f35195ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 42ad94fc-1fa6-4da0-963b-0e4b85c55f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 16275174-2649-4915-84e1-8d163af6dc58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 428f2ca2-0552-48af-8fe2-5a8053b63867)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h61F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #928 3b78ede8-1d67-4794-9a22-25c08d4e9962)");
unit.assert_eq16(16'hAEF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #928 21d1ea9e-1fea-4163-8aab-860610e09f4c)");
unit.assert_eq16(16'h7B58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #928 330f5ea9-f82f-4faf-9113-8d0904876fa7)");
unit.assert_eq16(16'h61F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #928 2ac97477-f0bb-4b29-a193-57b5306ff81d)");
unit.assert_eq16(16'h0B36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #928 3e034978-9609-4117-a950-6eef4b27af23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 dd68b314-534a-47a1-9906-6b045f4c6d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 2823bfb8-daca-4a6d-a185-f666c0ef836a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 a6b1cf2b-49d2-461c-8cb0-9d7bcb9b5cc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 0fcbeb49-d853-4c76-83e0-0ce542ea60ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 a7a716c4-c2db-4f47-9904-91311991d171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 6f3d195e-855b-4469-88a4-a5af0a08acde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD3CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7566;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #929 202e4c73-f626-43a0-8aea-e826aa597f89)");
unit.assert_eq16(16'hD3CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #929 c108f12a-a2e5-46ea-a53a-8db9a6d2d16d)");
unit.assert_eq16(16'h7566, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #929 c9097918-f80e-47f5-b64d-a2f244e912f9)");
unit.assert_eq16(16'h5C2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #929 bdc3456a-cfb9-4957-b47c-a49053481a4f)");
unit.assert_eq16(16'h0A7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #929 42f87a11-95d5-49b1-82bd-156dded09205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 53fa3bca-cc49-4347-82f1-18c281f3025b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 d96792a8-7290-40f8-971a-651844cdd25d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 62ea79e1-3609-46b5-b319-770cffc3aadd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 3a7bae64-c0b8-4aa1-9e36-4ede252ab382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 01f4c13d-dfa3-4f94-b6a8-ecad033fab1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 88a0509f-0bb0-4f38-b2b0-f756eeef35c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h458D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h870F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h000B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #930 7e4a26d7-4ed2-44b0-a9ce-f984a6eec094)");
unit.assert_eq16(16'h458D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #930 dafa012c-38e8-4521-9d3e-6d5d6d9334bd)");
unit.assert_eq16(16'hE3F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #930 aa6879f7-906d-41bc-b36f-6db79b83d44c)");
unit.assert_eq16(16'h870F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #930 faa45ad4-b698-47a1-86ff-b394981a5cc2)");
unit.assert_eq16(16'h000D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #930 c7d54d22-f249-40fe-86c6-3825bb6e00e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 b648b42e-0ce2-4345-a92a-df5060a27e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 20869112-36a9-422e-9ed6-70f55d87ab49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 d2ae30a0-8da6-4d48-9eb7-3510079ba205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 67ae0d73-d695-4c09-8b46-3511688988bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 382f3d85-6d66-4fd9-808c-75c5942dcc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 60eba569-56e0-4fae-b254-46cf396eb4b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF42B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h279B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #931 a9646a4f-b09b-4ed5-b487-baa749388efc)");
unit.assert_eq16(16'hF42B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #931 c63df75b-6396-4ffa-a917-db99a06ec3c5)");
unit.assert_eq16(16'h279B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #931 2f1f94f8-8b5d-4620-b056-0068d3e5b5dc)");
unit.assert_eq16(16'h15AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #931 7e199c6e-22fc-4947-8a15-75c6443ddfcb)");
unit.assert_eq16(16'h01B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #931 6dd40705-e05b-4c9a-8269-d7b89dfe4831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 be57de56-f71e-41e4-b9fa-ea4d1bc33e97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 f0b05829-a0aa-41ea-a032-97694557c2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 26429542-e0fc-4cc3-b0b7-fdfb070c1d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 279ca411-ae3f-4e2b-9d93-f4f0d2c89cf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 3a584242-e823-4315-94dd-642c46a74679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 0ff6f0e0-9159-4d97-a44f-bd1a4a853178)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0B18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA0D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0660;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #932 f2754af7-f33c-406c-935d-9d5062e36fc5)");
unit.assert_eq16(16'h0B18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #932 ad9ab31d-1e91-4d65-ab76-0cb0b2cf327d)");
unit.assert_eq16(16'h4E6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #932 80a3e3b4-14d6-4835-8c6f-47aa21ae4a5e)");
unit.assert_eq16(16'hA0D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #932 ecf058ff-f5ca-4028-b9c8-6d1ae5f3a2b5)");
unit.assert_eq16(16'h0662, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #932 6f4eda73-0b9b-4891-89b4-512461373bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 5bd3dff1-c337-4cd9-8806-94d5c5ed07b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 a1cbf59b-72b0-4b3e-a1a6-e9546f769fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 ef474c53-f969-47e7-bae7-12ed7e21277c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 ca28fecf-0843-427a-9611-1e8d76f16c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 04279456-dfdf-4d72-b3ea-6a924d0c75a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 ee2cd20f-5fe1-45e5-97b8-30a2aa3fb3f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6423;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h601F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #933 dc25ab0e-4c93-4641-b1e7-6b56c0d6448a)");
unit.assert_eq16(16'hBDB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #933 f080d9d6-0120-43ef-ac58-f71d539971a0)");
unit.assert_eq16(16'h6423, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #933 ce3a37b3-03f2-4e33-93ef-e4adacc5cdc3)");
unit.assert_eq16(16'h601F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #933 7dbb5fe1-ffc9-4aa9-99ca-547288ec8c94)");
unit.assert_eq16(16'h0C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #933 3f3da7d1-b08b-4ac6-8dfe-bed4f168b69f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 4be2d719-a8e8-4fc5-8847-71bad8e49815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 dd757bf3-6479-4560-bc57-37495e56e80e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 a12ef267-a9a6-4b74-bba2-3b7d2ceae80f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 c08418ba-930e-4792-bff3-b2e6f75a4531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 e1bbbe41-712a-4f30-a744-73e0a0ac75c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 7c141b68-df35-44e6-a548-517848b77aa4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h46DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDD43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7FDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0364;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #934 6aea4f55-0ce1-4085-b540-48ac827373b7)");
unit.assert_eq16(16'h46DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #934 af7aa20f-9b1e-48ae-bcbf-30260f7defc4)");
unit.assert_eq16(16'hDD43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #934 13572707-ac2a-460f-b96c-3bc29704519f)");
unit.assert_eq16(16'h7FDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #934 5192127a-f31b-4809-ba59-d9d461e99723)");
unit.assert_eq16(16'h0366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #934 cecaf76d-2ba0-4059-82d1-46fe690acbb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 c22212a7-5f90-4f63-a080-7ce607b509f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 1fb8a028-1fc3-48a6-97c3-4d6d6f9706c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 0256402c-f428-459b-a6f1-44e240cc8f26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 e99f5cd2-e82f-412f-afc0-24245f89c04c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 2004aa87-6ec5-4045-ba92-728489026b8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 59c1582e-4f97-4045-813f-dadc1d00b61f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5C3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8643;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA3EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #935 1f0213ca-e82b-44ef-b50d-b7a1498f3d42)");
unit.assert_eq16(16'h5C3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #935 4bb3604b-e9da-49e9-9d98-4a24028608e3)");
unit.assert_eq16(16'h8643, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #935 6f91e269-f07d-47e5-8c35-f28f924abb5c)");
unit.assert_eq16(16'hA3EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #935 662922ed-6598-4625-957f-3e98d8d201ae)");
unit.assert_eq16(16'h05C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #935 f53e9e7d-74a3-4047-b35b-7288e4e96907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 325704d5-e945-4736-8d60-61672a25209f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 90b8f9da-8634-4844-ba06-fd436ce66d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 4e0efe74-2fe4-4765-97a8-b22cb7b0ed94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 d2f3628a-e39c-4677-a348-7c24da4ae37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 28a4f256-f2c5-4a7b-bf9c-a3b7b9552fb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 db45d6bb-65ec-4f34-82f6-d0e98d7dc1fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4CB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC491;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h25E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0888;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #936 4a098383-8136-46c5-9080-0e0f07d117aa)");
unit.assert_eq16(16'h4CB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #936 3458aa68-8aa7-4cc0-b90a-99519643d129)");
unit.assert_eq16(16'hC491, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #936 3093f8f3-618c-40d0-aca2-1339cb643148)");
unit.assert_eq16(16'h25E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #936 fa62b0ca-6b6e-4919-8a64-25c7bbee4192)");
unit.assert_eq16(16'h088A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #936 2e932a5c-1345-4a05-af5f-e4b9b05d7a07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 7ce61a29-8e40-4681-b1cc-8b850abfc426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 601a7565-4c3b-4a23-99e7-8aa525eadd0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 f17b6d10-8d40-4344-bb5b-dd8f5082d835)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 13c79a8d-5e0d-49fc-8bfb-6d2e4264bf93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 e69368a5-f2f9-41a8-a9a3-e81f13e20d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 4e268f09-906b-492c-a501-2bc99c967cc4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE45D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3DE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA698;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #937 73d8f956-077c-4bf8-aa51-d0674e6c97eb)");
unit.assert_eq16(16'hE45D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #937 50263413-e42a-4e0d-babd-7562f2848888)");
unit.assert_eq16(16'h3DE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #937 94029bc1-fdd0-46f9-9a75-50a9cd45e6a0)");
unit.assert_eq16(16'hA698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #937 132dc343-932b-4150-98b4-1a2c7980c03d)");
unit.assert_eq16(16'h08ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #937 0926220a-f31b-4284-9499-2245fac05294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 ccddded9-5b33-4cbe-87b8-e5f35dde27b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 48363b5e-41b0-445b-afea-b6270f20fb14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 e7df71ef-07ec-4ffc-8c52-5341c29145f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 32978241-cfd5-4c2d-a19f-d2de2645960b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 f21330ac-d4e7-463f-9d65-e9f6ef40f2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 8ffd40d6-4061-42b5-aab4-f91f14ef6d21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h680D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0EF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #938 e312be9a-7c24-4271-b4ab-57c69fbd78d1)");
unit.assert_eq16(16'h680D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #938 e84fc441-b99f-4baf-81b5-a33d9e28a220)");
unit.assert_eq16(16'h0EF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #938 92bd6182-63b5-4b81-bb53-0a60205cacc0)");
unit.assert_eq16(16'h4BFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #938 00c9c7ff-02b9-4d5f-9499-fb0a2bb5ce69)");
unit.assert_eq16(16'h0D93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #938 520d7b2d-4fb4-4f3c-8827-c59589d116b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 44bf3fa7-406a-484e-915f-7b257345ba94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 a3501897-a90c-42b2-a4db-6ee303d16c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 ee1385ec-9297-4b8a-9a4c-69b9a342a2c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 d59345d1-f2f4-483e-9989-82e42fb514d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 ba0eeeb5-543b-4810-9fe6-f18dcc3cd94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 22b2d286-764f-4f6d-8fd8-6e6861714035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7054;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #939 6fc69d88-cc92-441e-80f5-bd9319f88202)");
unit.assert_eq16(16'h7054, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #939 c7cf7d74-0b3e-443f-a988-9a5234b120d6)");
unit.assert_eq16(16'hCB8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #939 87c9f925-b577-4476-87e6-459cc9452fed)");
unit.assert_eq16(16'hF1AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #939 5e1df554-d1dc-436c-a7ad-9952e15d2d84)");
unit.assert_eq16(16'h0ACC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #939 1e8afa80-6dc8-47c5-9526-c932c6f8776a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 54024b48-eb16-4640-b80b-02315283e355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 bf0faef6-988f-426d-a774-76296d6367ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 a5f3b97a-c95c-409a-8956-a3fff5bff129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 42edce9f-3eb6-4b99-b517-1f1e70c6251f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 c641e73e-95a0-4d97-8627-a49f9597dd17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 208a3fa9-ecc9-42b4-9488-b3c45229d1e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE793;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD8B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3E79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0038;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #940 bc9fe8da-07e5-45fb-9181-53b213b714cb)");
unit.assert_eq16(16'hE793, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #940 a1a61bcc-6e33-4f44-b6f3-9a38d0ef72b7)");
unit.assert_eq16(16'hD8B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #940 7bca695f-fbe7-4de5-a0ba-3d0d6ba72aa8)");
unit.assert_eq16(16'h3E79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #940 61f7b22d-c6c9-463d-b93b-a718365872f2)");
unit.assert_eq16(16'h003A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #940 66de6fc8-db34-4d1e-8ccb-9974f6fdf8b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 73e44c89-ff49-4675-90e3-7e07305afd08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 d6e0a140-aafd-4f02-aff6-ee1a233229be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 51c9ffa3-4ba2-4639-a781-db02283d9ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 0817f637-d9f3-4e54-949e-80f425443058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 84704afa-82fc-4710-a972-7c1fe94c8ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 0795611c-b515-4fc3-81a0-c0cf53b9358d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB49D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB855;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4B91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #941 5e71cb01-d69e-48d5-aace-c4453678ef83)");
unit.assert_eq16(16'hB49D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #941 b73b3080-69c7-4580-8ea5-6c57eae0e9f8)");
unit.assert_eq16(16'hB855, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #941 8f62af5e-265f-469d-894c-077a9f687785)");
unit.assert_eq16(16'h4B91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #941 0fd2cd1c-ead5-4c4e-9657-5f6171bf558a)");
unit.assert_eq16(16'h0B8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #941 06b19340-923e-4039-9a06-859a36e051fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 18f54029-8b24-4a5d-b7f7-e4eea97945e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 bfd72e4b-7f3a-4325-9aad-e750c37c6015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 e6a6f6c1-2849-4252-bd8c-56e687901300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 074c053d-fd00-4e7e-8a75-92a68a78e5fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 5247b81c-dfbe-4276-896f-115eca349ae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 d7200c16-1e3a-4dc2-8174-c1d1bd12942d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0116;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFEE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0843;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #942 6ec3745c-805d-4ac8-875a-b581f7dc68a4)");
unit.assert_eq16(16'h0116, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #942 6b31c616-cddc-4dd6-a2b6-bf8e064bb833)");
unit.assert_eq16(16'hFEE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #942 2702cf33-8cd4-4094-b1fe-444f19aeebec)");
unit.assert_eq16(16'h81B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #942 3e72ac8c-a4b6-4762-b518-d3fa84c34fb5)");
unit.assert_eq16(16'h0845, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #942 32cb6608-a95a-45cf-9085-c88f3ad76929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 45d19ce0-85ee-4a2a-9e68-4335a6c73adb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 4499e6a7-7b90-4f4c-8a56-616108d254c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 9b461151-d8b1-463d-89bf-a05d9974a3b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 eb0c27fe-e637-45d9-a678-27588cb1b856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 67b369b2-841a-47f5-a52b-0e48206748af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 dea2e902-874a-4ceb-b19c-8b3a34aae391)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4F80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB7A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #943 418b5f68-dd96-40ee-a9e7-8e9a23db66fe)");
unit.assert_eq16(16'h4F80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #943 f8a83dfc-c781-43ea-a336-a5dadc50531c)");
unit.assert_eq16(16'hB7A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #943 0d116af1-23c4-4a2c-af0d-0dcbb623f0cb)");
unit.assert_eq16(16'h0AEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #943 20bd69b4-7fce-4e55-94b3-7417e17d7ee9)");
unit.assert_eq16(16'h0E0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #943 7a20b648-ff1f-4ec6-9351-b85949928637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 e14c0a8e-9f28-4348-9f63-948358dfcce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 3f36d4bc-8b04-4521-9d01-87bfc9c8629e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 174efe36-7a8d-4cb0-a929-6cb2ee8afd47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 78145fff-6aed-40e0-b9d3-b86ec3573e90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 8749a57a-6b79-4993-8713-b762b0701e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 b5fcdd1b-4baa-4c00-a2bb-2d0cee38fd12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCACD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCF47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0532;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #944 7d53f927-8538-4c69-ac9a-fa8b040c8310)");
unit.assert_eq16(16'h81BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #944 e9ed3b0a-28be-45c5-8f5e-5d7b8445404d)");
unit.assert_eq16(16'hCACD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #944 cbeb6a6c-383c-4652-9379-ff77d5884272)");
unit.assert_eq16(16'hCF47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #944 4d491378-547d-45b1-ae93-dd2877b4e489)");
unit.assert_eq16(16'h0534, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #944 14cc1174-fafd-44b7-9da8-7f7825235137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 7d17843c-2495-4223-b2ee-82c7e19dcc21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 95f97908-1ab6-4542-8be1-8b85e70e4e20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 4c1451b7-cd2e-4584-a936-94f072031bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 9b6a5a5e-f6e5-49d0-9a50-1c8e942c840b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 af5b72eb-8a20-4c11-8e1c-392f880d6aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 6ef3f642-5452-4231-9ec6-401ecc34705c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h372C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3249;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6583;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #945 af5a32fe-767b-429b-bea6-c5b554fb9fc5)");
unit.assert_eq16(16'h372C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #945 4e0ab68a-24ed-42bc-9b29-90da9f5dc5dd)");
unit.assert_eq16(16'h3249, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #945 409ed3ef-f213-4ae3-a300-432cb8403ca1)");
unit.assert_eq16(16'h6583, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #945 314683ca-52d8-426c-a3a5-f70ee39ef614)");
unit.assert_eq16(16'h06D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #945 2616140b-920d-407f-ad56-840b1f2e3bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 8c2ae894-7c3e-4f99-922b-602d5964fb2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 4067147f-2502-4bb9-b0ef-859d58b2e0d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 4edc4cef-ec28-4b2e-8340-6f00c4a22f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 9ba9d1f7-3607-4e33-8aef-ab9d76b564e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 ab6b9b2c-218d-463a-94f7-03be627911e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 76d9ec7d-611a-4b08-a9f6-2b57d226ac7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h04C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0756;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h88F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0258;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #946 61ad958f-69b8-43bf-9ec6-2051d54e61e7)");
unit.assert_eq16(16'h04C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #946 7f16ef62-e604-49e6-b0fa-5d9f0d9e50b6)");
unit.assert_eq16(16'h0756, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #946 af34a2ff-677f-4667-9baa-508ffaefd665)");
unit.assert_eq16(16'h88F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #946 0f6ad193-7d9c-46fe-a02c-250c8c99f2ed)");
unit.assert_eq16(16'h025A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #946 9c7cbf6d-c8c4-48fd-98a8-e763b367b862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 d99f33dc-ff84-4c33-bbed-43cdf341ee86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 2e897d9d-d67c-4709-8d29-795e2ad32521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 c5ed500b-d897-4f7c-b54c-2f4a4a10a094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 b345e57a-ba54-4b8c-a8d6-10a105d7c476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 a5224365-462c-421c-9355-3bf40cf8da7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 81bae7ea-1b05-4159-be6d-06b0d8116697)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hECC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #947 55f86117-eb68-49be-92df-15e9f3d38e43)");
unit.assert_eq16(16'hAE9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #947 f81c1224-0c9f-4176-baed-1a0689830226)");
unit.assert_eq16(16'hECC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #947 c901139e-e001-43c0-9a5e-a53b7386d2a9)");
unit.assert_eq16(16'h3A81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #947 f37f5a3f-d73d-4573-8ba1-db2e619af6a8)");
unit.assert_eq16(16'h0AD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #947 16e4f28f-dc02-415a-b1e2-4939eb0a7f86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 d606c0ce-a6bb-4624-8e70-7d83caf068fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 135c7868-fef7-400a-9f07-addcd28c8772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 8137e7c4-7353-4b87-81e2-152926cbff7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 6a94e7fb-9bb4-4dac-b3be-723202673595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 fa886fcf-146a-4ac0-832f-79928b3147d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 b63cb059-3d22-4174-b8f7-1cd3783d9f89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9745;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h93CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h020B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #948 848aa391-ea39-4770-95ed-2f8b333c85a4)");
unit.assert_eq16(16'h8B68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #948 02acbb6a-1ecc-480b-ba58-cd870cc806df)");
unit.assert_eq16(16'h9745, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #948 28946ecb-ee4d-4812-bbeb-434a3ad59d04)");
unit.assert_eq16(16'h93CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #948 6fc42a62-efa2-4158-8aee-62dd9402c507)");
unit.assert_eq16(16'h020D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #948 d4589550-75a4-499f-bc97-079dc2e88a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 7bc4b41e-5ece-4e54-82f0-c768bf26cc8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 b98b5720-7d6a-49d8-bc74-c48c927eafe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 1e9b98b3-0fd6-4e64-9e14-861cc7740172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 8a13689b-8ca0-43c0-bb05-1e2747cd6a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 a0289e65-27b1-46c6-8b26-e2f2467586c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 ef80430b-d922-4174-acbc-230d0c638238)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6940;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE57D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0067;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #949 2b770248-a3a5-459e-931f-6a15e49141e3)");
unit.assert_eq16(16'h6940, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #949 a4782c85-96bb-44d0-a159-8857d8f06ff5)");
unit.assert_eq16(16'hE57D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #949 f6e172e5-2ac8-4a1b-b595-62d7d9dd23bb)");
unit.assert_eq16(16'h6F66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #949 cf0ead3d-44a2-42c5-8f77-c45aa4b77422)");
unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #949 2690a9ee-81e4-4718-9531-d9343c7b6367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 7c87842f-e93c-4996-9c42-ed95da353929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 a5606e98-feaf-48b6-9b49-9086a13dcaae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 1fb56e91-52d7-42ff-8f7d-63a7495527c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 fc5ea1f0-40db-416e-b6b0-94450857f120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 f85b701e-06ba-437b-81bb-eb52dc31a27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 6937a9b9-91c7-4e64-8ce8-0d38924c47a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h750C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0245;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #950 fcfe979f-e0a6-4309-98fc-b21a6860650c)");
unit.assert_eq16(16'h750C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #950 30db71a0-4b75-4491-bc80-d8cfa7d5d976)");
unit.assert_eq16(16'hCE27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #950 f660d76a-c527-4f31-862a-53176d10668a)");
unit.assert_eq16(16'h81AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #950 4f0992da-3dd6-477a-b26c-b33044d6afd8)");
unit.assert_eq16(16'h0247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #950 ed432ea0-256a-4ce1-ac7c-b4bd1210d08d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 90186380-52c6-4bd3-9c7a-8c72de7289f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 0427599d-cb10-45d6-9c33-fac1ad58d62e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 5aa681f4-2574-4640-9599-43533b56b0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 f774c169-f119-4f41-9e54-e05bdf01b828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 8fdca0ee-a40c-4f8e-bb28-9737feaa94ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 2d7aec97-45ea-4af4-8033-a04e644a94b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h58EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5122;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #951 99d69e89-6ce9-435c-b4bc-a8d89ee9c8d0)");
unit.assert_eq16(16'hDAF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #951 7a0f8367-d705-419f-b338-ab8670e4d5f9)");
unit.assert_eq16(16'h58EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #951 c8bafffd-48ed-4a26-a69e-b90eff71b24a)");
unit.assert_eq16(16'h5122, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #951 ef48cd0e-f85c-48ad-9f65-f392b748bd41)");
unit.assert_eq16(16'h0A62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #951 d84e9e29-7db1-4d66-acb7-828647379810)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 6f688bcf-857d-4497-981e-56ae2d4ed3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 f0dfb647-2bff-4158-a408-2c9f7167779c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 45d7d0de-6eac-4950-9a6b-f4b8fe9d23b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 1847c995-9025-47a6-90db-1ff043437a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 c3ae6abc-9238-4239-a9fa-5d167a6da158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 25247c8e-2d4a-4d52-904c-550dd3471fbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h174B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD636;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #952 be244fda-d4d1-400d-9dd2-4b5ef699ab26)");
unit.assert_eq16(16'h4C89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #952 f6390a1a-dd9b-44b1-ba86-c76f71dd970d)");
unit.assert_eq16(16'h174B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #952 8ebc4722-9764-41cb-8dc6-b34414b8ed59)");
unit.assert_eq16(16'hD636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #952 04849de5-efb3-4a0c-b544-4b23b38a4495)");
unit.assert_eq16(16'h04CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #952 d1e6f83d-c0e4-4609-9d61-ebf42bd7cc90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 24c3259a-439a-4be1-9887-d50f99552d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 3465d4ca-2b16-4cd4-a101-13ee9a93ded7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 b789750e-8738-4cf5-840a-b1c08fccbad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 25a08982-0fb0-4582-9731-95cb00425b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 22ca9de5-34fb-4e39-b3d3-3b4403064582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 cd604fdf-5441-4b5c-abed-105766d6d2fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB076;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCDB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h862E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h080E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #953 64ee24b3-a9c4-4920-8b6c-8008c2900f8c)");
unit.assert_eq16(16'hB076, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #953 e92487ac-ff54-4675-a6c8-36f2fc2cf84c)");
unit.assert_eq16(16'hCDB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #953 0bfb8e2f-4f48-4726-ab7d-8c1127063a70)");
unit.assert_eq16(16'h862E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #953 2d41e72a-9db2-4012-91c4-a783258ae053)");
unit.assert_eq16(16'h0810, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #953 f12ae9b8-92ef-44e3-b728-f7c34950090c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 063a17ea-1011-4981-87b4-764317fe9eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 385bd369-6085-486c-9180-03c8633b69ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 99a7c8e2-a29c-4fba-ac59-5ded97499ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 d7eee8de-7c88-42fb-a465-a53726c6ed1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 60cfe320-62d7-45bd-bbb4-ca236ae3f00a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 679a0599-07e7-41a0-ae80-d0cfcf5c4471)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB862;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h622E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0979;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #954 a33a9855-a420-4a2c-aac9-adb020bc29d0)");
unit.assert_eq16(16'hB862, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #954 aaab2934-1989-4507-9bb3-f0dd51a1be5a)");
unit.assert_eq16(16'h7B85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #954 646cdc2a-c36d-4b98-994d-59d8f76e5afa)");
unit.assert_eq16(16'h622E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #954 3b3ca761-0e50-4bf4-84dc-b413242c7090)");
unit.assert_eq16(16'h097B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #954 eb623e0a-643b-4021-a34c-b3ae76e92a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 d0d4a3fb-8112-4488-a3cb-8ae6f9de4546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 0fb0a105-cc60-4bd7-b89b-9a4a3a8b546a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 6ce81833-c7e3-4321-b27c-f4f24dc1d8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 2cda2ae8-2595-45c0-8f7e-0bdef1afcac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 267f9c54-b110-4c86-b5bb-3c1586cf1760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 d9c9f61d-9e57-4539-8a08-394b50332713)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6E26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA51D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h68C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #955 536c102a-3f3c-454b-b142-8ff8e8e7ec3b)");
unit.assert_eq16(16'h6E26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #955 d9adad7e-924b-4191-ba2c-69a3dcf9a4dc)");
unit.assert_eq16(16'hA51D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #955 6e3fd914-ccc2-4a02-9635-f8d0c9d27d0b)");
unit.assert_eq16(16'h68C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #955 34a04812-aa23-4ff4-a4b0-000902521528)");
unit.assert_eq16(16'h02B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #955 f5f5fcd7-385d-4c95-be9b-50e3f7b805cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 7704eaf5-94c0-41bb-a76f-3f0f212398de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 a663d7b1-e704-4d7c-b952-5ec1e6353279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 113de553-477b-4d9b-95f3-6dc5d922cec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 94a2b226-a745-41c4-992a-401e5ad1cd4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 c097d3ee-616c-41d7-8632-1affb98f2e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 47935ed5-abd4-472d-ac8d-99680a9e4cc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC73F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7319;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #956 5fa07a30-9d68-422a-b0dd-3a1d4d5154c4)");
unit.assert_eq16(16'hBCC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #956 4e05b8e0-e4c4-4124-bf6e-c377632cb6aa)");
unit.assert_eq16(16'hC73F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #956 c60d98c4-2476-4b99-a591-5f14756d9b3b)");
unit.assert_eq16(16'h7319, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #956 8e870779-0cc3-47f6-97fc-4c8e4e805692)");
unit.assert_eq16(16'h0AB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #956 0788d358-0c8b-4ebc-bbe6-52231bfcc2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 3c0069a5-dc63-4ba7-a859-8b036176fc86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 7861feec-d638-45c8-827d-72d801893c62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 6c610138-17f9-4374-9ae2-f44e014a6308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 d11bf146-ac67-45aa-b5c3-956fc5a363e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 d176e693-72bf-4ffb-a445-9778a4d5b209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 c3cb08f9-0c88-4f7c-88ec-1880154c2c1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2621;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #957 40e33c12-489a-4ce0-ac61-bc3d02bbed65)");
unit.assert_eq16(16'h8A1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #957 368cf470-9fb2-4f77-83f0-1b1a97004c0a)");
unit.assert_eq16(16'h6A45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #957 987b1906-593f-49f3-9d80-92bec8920acf)");
unit.assert_eq16(16'h2621, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #957 2406e049-8c8e-435c-8ea9-ae5fd98be22e)");
unit.assert_eq16(16'h0E92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #957 0521823f-ef8a-4cc3-acd7-b46cce994a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 d8316a83-c232-4575-ba32-6869aecf764f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 664be4a5-d432-41c0-b459-6e74cd187fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 b7efc7ab-d668-4b95-a758-a30aff81b20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 81561806-2115-4a41-80b2-993ad1d386d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 2d112920-48ed-44e0-b600-4c9a82b2081b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 9951d8c9-236e-4a65-86d5-7ca83e6b099c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1137;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4CDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #958 f34d1dc3-dfa6-45bd-90ed-cf28ee348dff)");
unit.assert_eq16(16'h1137, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #958 9c473e93-e2d2-4f96-ba9d-a657a8ce5238)");
unit.assert_eq16(16'h0C34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #958 cbd1ce83-8d57-48cf-bae8-e9eb6453ca58)");
unit.assert_eq16(16'h4CDB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #958 47836918-6330-42b6-a035-efdba22e3ba3)");
unit.assert_eq16(16'h0C1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #958 503a9313-c151-4691-8222-9badeb228f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 bf6510ef-d1f4-400f-bb3c-ca3fb017f14f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 5cd6aa97-c073-45ac-9e0e-7fca7bd22599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 17449bec-0740-4bc6-9b68-50d3b6b30103)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 aaa166c4-e01f-44d6-8be0-fd4d6cf723e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 d6a182d0-e90a-4370-a04c-41152d6810dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 42237b5c-6e41-4143-8fbb-fa42ace2ebfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9163;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE7D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h44A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #959 bb7ea950-1edd-41ac-859c-4f150930eab0)");
unit.assert_eq16(16'h9163, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #959 afbadebf-0b6d-44bf-9f41-93f39585fe9d)");
unit.assert_eq16(16'hCE7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #959 d3727ede-7560-47a5-9e99-6e5d60220bc2)");
unit.assert_eq16(16'h44A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #959 ce356dd3-6aca-4e28-ac51-121b7fda990d)");
unit.assert_eq16(16'h0AF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #959 f717d211-c547-4bb5-b014-618194995a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 948ecff5-7905-46fc-9db6-2a42e469ae03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 2cf8739a-ea3c-4a3b-8c55-2cdbb716bbd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 b6e81164-693b-4340-a93a-ef41bd15a6a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 6cfb9127-e0e8-4d87-9e3e-a400f6e77dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 cc13a347-4bc2-4c63-b2cc-8fd3732e4217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 97aaa539-eb02-4400-b502-f981fd7b6753)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3717;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5080;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #960 a55ecd66-984e-49bd-902e-74f090473440)");
unit.assert_eq16(16'h3717, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #960 1e289ea1-9465-4721-bbb0-ad365e7ea91b)");
unit.assert_eq16(16'h5080, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #960 a63b7c83-3454-49d9-9fa7-eef649bf43e0)");
unit.assert_eq16(16'h6F0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #960 2221bfca-7351-479c-ba11-8f44e0670a59)");
unit.assert_eq16(16'h081C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #960 327b2a34-424e-48dd-bc36-54762ce95795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 a712ccba-9641-42e8-8cf8-602e55693b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 bd5da7e2-d570-425b-aca3-dcbeff07e36d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 4099e5c6-0a32-4d54-8136-2388740f9e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 9c4d9fc3-43c2-4331-9d89-a58ed08f076f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 b3a02aa2-653a-4123-9593-ddcf93478a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 d4027afd-cb7f-4bb7-845d-1d8de3fffa64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC130;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h52CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFEFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #961 929fe37a-d742-4e16-a18a-e02877922a52)");
unit.assert_eq16(16'hC130, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #961 12ff7add-0fe2-4ea7-b9b9-df3d9622c5e2)");
unit.assert_eq16(16'h52CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #961 be87eb7c-3965-4517-92dc-84a10a80d0b2)");
unit.assert_eq16(16'hFEFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #961 c4a8dbae-2b13-45dc-b6d7-f2c065f84c01)");
unit.assert_eq16(16'h0CEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #961 6266846c-97a2-4b3a-ad39-759f81fecb69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 cbecc830-1964-4757-bae1-b3b0e15d5ee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 c818bc40-a726-4213-9d68-fc43bd2223f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 84690ad2-e503-4e6e-a377-5d915f6b36e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 6a514497-5c2a-4fc7-909f-a2f75b6087cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 828d8b9a-4a16-4312-856b-e37f863d0cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 666f52fa-b7dc-49d6-80ef-f8dbdf52bd55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4D94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5859;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEECC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #962 4ba24368-62e3-4110-984a-ef31660309c0)");
unit.assert_eq16(16'h4D94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #962 e5d704bb-b59f-4b7c-8ab5-ea079513fd78)");
unit.assert_eq16(16'h5859, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #962 e5969115-d8c7-45d1-a442-7ba3f28c8c2a)");
unit.assert_eq16(16'hEECC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #962 17a81acb-ad1b-4d51-b2b9-78bd7498e284)");
unit.assert_eq16(16'h04BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #962 1ad821fc-0d3d-4ed4-bee5-48b4fc845d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 150c2806-2399-4225-af8d-9ddac8752bc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 ec0e3a07-3c32-4604-8c95-7dc0ed4ad344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 c1bd7223-2e1e-4e3d-8727-f2a78c0c9b95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 aa43a1a7-cb92-44f1-9378-7edbf60acf7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 8dd50460-1d80-4cd5-a060-19961d476d4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 f2fc8c77-5541-47d4-8e06-8cbff0d5c978)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4BD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h533F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #963 b7926e1e-8ec1-40ac-8f49-06e2f28d8e17)");
unit.assert_eq16(16'h3B58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #963 500669ba-23fa-4841-bfbc-bfbff35d4efb)");
unit.assert_eq16(16'h4BD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #963 531f4f59-296c-4257-ab44-874e0757bf86)");
unit.assert_eq16(16'h533F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #963 0519382e-e334-4f94-b877-ebffe659c6b1)");
unit.assert_eq16(16'h0BD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #963 ebfd2a9a-bb6d-4924-83be-deeb082e7ec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 28154709-00ad-4e9b-8a86-8d97eda251d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 ad8a2b71-bf2a-42a0-a3a4-5f6474bb21da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 55c47f31-3a0a-4915-a576-94b1d152a6df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 f0c262dd-5018-4d47-9c68-f5ebf3ccb3f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 044be8cb-8d1b-451d-a9b4-033ec2682bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 67179877-4522-4c74-8e17-ba52975882d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h916D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6129;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEE5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #964 8341e75d-5bcb-44eb-a9f2-c9245a0791ae)");
unit.assert_eq16(16'h916D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #964 5dd742c7-5db0-454b-844c-799075f2938c)");
unit.assert_eq16(16'h6129, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #964 c591bb70-3c1c-445e-afb5-22d801db2918)");
unit.assert_eq16(16'hEE5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #964 be1bd051-163f-4b79-8b12-0c54b9ac6ca9)");
unit.assert_eq16(16'h0C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #964 7398fdff-bfbf-4b49-aa2b-935e520c5949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 d87c0ffb-3a9e-4ebc-b206-4d178c325484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 20cb9362-f267-459d-8f55-1259e8015950)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 3e4b3a0c-b5d0-417b-abd0-92b4a71607d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 97800c19-1ff7-455f-9190-af26d9877678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 062df390-9690-4f96-aa9b-86f2feaa98be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 32b8b1f3-262f-4d31-a282-8bc1cb8400a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEE87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #965 9ce3144f-aeef-44b1-8c36-9395671f1063)");
unit.assert_eq16(16'hFA1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #965 ba777bcf-5080-492a-ae50-2463c1b1898f)");
unit.assert_eq16(16'hEE87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #965 0d375b0b-c821-4925-ad6c-86e85de6cd33)");
unit.assert_eq16(16'h84D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #965 84ea5081-c74c-4b60-b8e4-ec037cc44060)");
unit.assert_eq16(16'h04E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #965 122d518b-0cb8-4e27-8112-19752efc4655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 a5cf8ffc-6a16-4901-9301-f0084de7528d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 2e4686c4-332c-4864-a8a3-8e4ce6f8283d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 dc3c2dc7-6c3c-4e88-96cf-edfcce2ae29e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 882d73ed-885d-4337-bbbc-6c8797659199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 2f608ff3-6ddd-4e8b-8a8c-0a6ea99f39a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 4a351837-e0e9-4c08-99c4-87c3e38a73dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4EE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #966 e4d6e6c2-629c-411e-b630-8ff34b9a2b9e)");
unit.assert_eq16(16'h4EE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #966 043ac7b2-4f28-4a5a-9640-3929b0f5bbce)");
unit.assert_eq16(16'hA1B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #966 1bfb939f-849d-4415-b548-ff5c4ede487b)");
unit.assert_eq16(16'hE0E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #966 bb6abdc6-f029-4093-9711-f633c1e45541)");
unit.assert_eq16(16'h0A05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #966 05b064ef-6661-41f7-8a87-f5f00216bb87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 a26397c9-ce0d-449a-9372-49cc538a46b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 e5154a0f-13fb-49b2-abce-d582c26449ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 8cb477ba-bebf-4c05-a4d0-9d3c1e7c7d3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 fa4be929-e221-41c5-9b0d-63a8f662885f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 c4447cf5-e134-41e6-af89-3f554ab5e77b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 963f79d7-58cb-4153-901c-7f5b268bdcaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB7B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9765;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #967 eac7d9dd-9c4c-4870-8823-953c13b43e1f)");
unit.assert_eq16(16'hB7B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #967 62210cb8-076b-4417-9ca2-a18b48b22141)");
unit.assert_eq16(16'h9765, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #967 49917d40-6879-4617-915d-438c2d0b4fea)");
unit.assert_eq16(16'hEA01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #967 da3d6aa9-f27b-4ff1-8db8-4c7ca37834b8)");
unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #967 cb2682cb-9aa4-4f5f-ad0e-58500ce899d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 b54e82de-e2bd-42a7-a2a1-f934b36569d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 0981aa90-4799-4752-b53b-01cafb9f0651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 b162528e-7951-49fa-b788-7ed2ef303fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 526091a0-2511-4830-a554-c1a48d5869e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 201c2555-6142-43c4-b6e9-bd945decf09b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 54142061-1990-4ae8-b2b7-5048f4b43b81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5120;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2537;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB06F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0952;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #968 e606b090-8598-46eb-bb9c-0fd0afd03c42)");
unit.assert_eq16(16'h5120, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #968 ac9643ae-2432-4a0d-abda-de439f73f524)");
unit.assert_eq16(16'h2537, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #968 9a1b7b7e-7733-43af-a241-c800ee28b2e4)");
unit.assert_eq16(16'hB06F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #968 1b0dd2b2-8d46-45b2-b88e-57bed1b41c53)");
unit.assert_eq16(16'h0954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #968 b1d3f448-a26f-4e03-97ae-aba42c5bb856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 faa932e1-40f5-484c-9fd5-4a4db953fe8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 798fe1c0-2197-4faa-95f6-1ec98feb10f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 fa37e2c5-dabb-4a39-be7e-7a80f9f934f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 f339aaea-7a48-4647-afcf-84b2658108c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 e6dc473a-a384-427a-b253-f08e540735ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 3c53d687-3f8b-4876-b4c4-8991123f4633)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCFB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2609;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #969 92496d02-545e-45ce-ac6b-f64fc320f8f3)");
unit.assert_eq16(16'hCFB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #969 4bf0a2ea-370c-420b-9f23-f277fccc072b)");
unit.assert_eq16(16'h2609, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #969 069426e0-e29e-47f1-9c24-a8a3fe6e0300)");
unit.assert_eq16(16'h07D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #969 78d122c0-98a2-451a-88a6-789cb88287ea)");
unit.assert_eq16(16'h0E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #969 3dd22a2a-8432-4956-844e-0a1a25a0aa6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 bcb5095c-f29a-430f-812e-2b4d56cd2fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 14e49a65-c83f-49e7-8d25-2f10a30447ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 e589310e-4e84-4590-8c9b-fe600431da5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 be0e9953-996c-4935-9fd3-982c11ad5e8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 95049137-d6d7-4b26-8d51-95288559df56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 38e29710-1199-4643-a2f9-7710e537bb98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7117;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8348;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD4F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #970 4f5cbe31-d361-4014-bd0d-fbb6b3aae952)");
unit.assert_eq16(16'h7117, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #970 9b2d93f3-4388-41b2-9b2b-2eea5fb8ae8a)");
unit.assert_eq16(16'h8348, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #970 ae6c6b19-aad1-459c-b48b-ab27d708108d)");
unit.assert_eq16(16'hD4F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #970 2c988876-c02e-4696-b521-e6fac1af06b4)");
unit.assert_eq16(16'h0B6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #970 893d77c2-b015-4064-9223-0d52fbeab2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 0e62b310-5177-4101-be84-5a218c18793d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 44db854d-adac-4616-89b0-329e0d307aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 0dcefd02-7821-45e7-a1f5-ffc347aa6d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 e8494504-44c7-490a-8f5c-50bd87758933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 8532f7df-4593-4982-81ef-cfcd926e6a25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 32a260cd-cc3b-422f-a81c-25b8f7d2ac5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h21AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1158;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF5E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0387;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #971 da2fa700-d91f-48de-b964-9aa5b784245f)");
unit.assert_eq16(16'h21AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #971 a2e02ee9-181a-49de-8aaa-5530df6b1196)");
unit.assert_eq16(16'h1158, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #971 937594c5-e6ad-4340-b5f5-11d3bf651b0f)");
unit.assert_eq16(16'hF5E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #971 dd2138f4-324c-4478-9ef8-f2d86fb5b8cc)");
unit.assert_eq16(16'h0389, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #971 d485862e-7207-4c04-85ae-5b8b1c1be5a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 301491e2-6aa7-450a-ae4f-72c49657da9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 978cdede-a4d2-4c61-9bec-0817e79425a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 212eb813-4207-43f1-a03c-caa4e65ae378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 00968227-82f5-4d05-80ea-31a15be82ff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 d2ea3279-eade-4c4a-aedf-22009be21829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 1576b170-ad4b-467f-aa8a-6ee2abf2fbf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6495;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2070;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0771;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #972 23a73083-c3f3-4fc6-91a7-530b2575d39a)");
unit.assert_eq16(16'h6495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #972 4e5f57db-7eb5-4793-8ee1-4409d972273f)");
unit.assert_eq16(16'h2070, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #972 993c0ca0-7fdc-4635-bcb7-8cad9399219b)");
unit.assert_eq16(16'hF647, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #972 11caccc4-d1d4-446f-9ae7-06f034cb9bbb)");
unit.assert_eq16(16'h0773, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #972 2c4b01e8-9812-405f-8c21-01af100d3874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 f7a63c88-273f-4c94-93f8-a7fba86f502b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 2160481a-9fae-4a42-b1f6-9e51b6b69bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 eede3bbb-396e-46fe-89f4-a58c45781aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 c8bbee61-4b51-4009-a8e3-a00d5eefb557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 d570f62c-83aa-4dde-afb5-e8789d790ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 0e119b1b-3bb4-4c76-8518-d887d8b6eb06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB652;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4A3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #973 e83efcab-96cb-491d-9f2e-de8834394afc)");
unit.assert_eq16(16'hDAA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #973 d5bfbe6d-22fe-4398-abb9-debf2c771d46)");
unit.assert_eq16(16'hB652, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #973 f8ba7ab8-ceb5-4374-9e3c-6bce5ca16365)");
unit.assert_eq16(16'h4A3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #973 17cc6313-e562-4c06-b64c-db6dfb4b6fa2)");
unit.assert_eq16(16'h00E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #973 b513ec00-dad6-4c52-ac51-a0dc0d447ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 79c5a64e-e87a-4f31-ac00-6a56174dc10a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 ebd05f4b-8dde-49cf-a918-6fc819ec66eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 52ec0d0b-4f42-4844-bb5f-5622babdb138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 b2c74e13-b08d-4bf0-b35a-5040963f6b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 c5a8c2b9-321c-4cbc-b5b4-5a15066fff33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 ddf1e751-5a99-464b-925d-f30f5fc81051)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC1EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1EA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB4BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h010F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #974 04ccb45b-e663-4bae-bed6-e42ecd6509f6)");
unit.assert_eq16(16'hC1EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #974 b9b4c832-0016-4a0b-b59a-244f0bb009eb)");
unit.assert_eq16(16'h1EA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #974 bba936e2-c895-4583-ac5f-f863cb497c13)");
unit.assert_eq16(16'hB4BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #974 ed04df7f-327a-4bc3-8dea-c3a6c551b71b)");
unit.assert_eq16(16'h0111, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #974 5e95700a-6640-4947-afea-c2565a0b7468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 1ebb98ad-382f-49d9-855a-63f4d673b6db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 f3ae15f0-ebbd-452e-bb7a-0d6bbc941a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 81d62c3b-933c-4a0b-9868-08bfc7ad804c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 b102320e-131f-483a-8f73-50efe849ae01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 6ac9a100-e691-4f49-86c0-bfdae042f9a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 3983d70d-05cf-455f-a16e-047d317abfc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDE49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCAA8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB59A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0077;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #975 9aa40aa4-d145-4575-9a3b-3c9e5b9a29e6)");
unit.assert_eq16(16'hDE49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #975 070ffdaf-0c30-43eb-b663-47679560544a)");
unit.assert_eq16(16'hCAA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #975 9e60c8a8-8975-4293-b362-b619663ab314)");
unit.assert_eq16(16'hB59A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #975 f17ff37e-a38b-45ce-8b43-427490db44c2)");
unit.assert_eq16(16'h0079, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #975 e2e9e8bd-a60f-4440-902c-4246fa524f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 0637b1c4-9fa2-4d87-9fee-3bbc1d635850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 14e45756-7665-4e83-bded-e913f633b033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 cba47e59-4af5-42f9-8375-874a0495f5de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 e0df9466-22bc-4b6c-997c-1c2df010b874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 03826874-e9fc-43f5-be5e-100066aaa641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 6d349597-637e-4578-ae3f-846c023d97f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD19D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCE73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h008A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #976 d08d67d5-dd7c-42d7-9b1f-aa4dca074fcc)");
unit.assert_eq16(16'hD19D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #976 124769e2-c5aa-4fdb-a43d-9d1d39a0d3dd)");
unit.assert_eq16(16'h50AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #976 14ccc186-293c-495b-bceb-d86bcb33e22d)");
unit.assert_eq16(16'hCE73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #976 56cd9071-82bd-4b41-9fa2-5394bba30a6a)");
unit.assert_eq16(16'h008C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #976 97a286f9-5908-4b41-a998-6677e9a6a919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 5a597084-ef7a-467f-99d4-6dfb88feae66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 2e83fdf1-03e4-4151-bd5a-3f146356d4e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 9fee03bc-4846-4e50-bd4b-ad581ce6d110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 f28c0fee-e458-4b2e-9b4e-0bcf295c11c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 2c6142b8-ed36-4813-a7fc-75fe251993f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 9abb30da-55b5-497e-a8ea-d0a2f7539fcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h206A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h37B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #977 44562b4d-7a47-45b8-ab8d-d5e3c19bd7fa)");
unit.assert_eq16(16'h206A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #977 fd843cb0-f88e-4a63-80e4-bdb59f7e3fcc)");
unit.assert_eq16(16'h37B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #977 a41d6ae3-7677-45d4-9378-0ae5492f1492)");
unit.assert_eq16(16'h7CC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #977 7ff3cf47-ce1f-4741-8107-7729bf7713c2)");
unit.assert_eq16(16'h05C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #977 d07a0693-d7f1-4c79-9712-0dcceba1f1df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 718481c7-b9c3-41f3-a8e0-6d453508186c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 61302ea2-a721-41e0-8cd8-1b984f572b6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 e7dc8239-9e6d-40a6-867a-7c01adf67caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 086d81bb-4526-47e0-b449-8cd263348d2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 b48915ae-4929-44b6-9246-ad88e6bc4023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 7e2037a1-ee56-4ba4-8d3b-e5c25cda784d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #978 46831da5-4cb8-4edd-8a84-cc9cd8d8a39c)");
unit.assert_eq16(16'h1E53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #978 03b07479-b005-4dbd-81f3-a72d65397f4b)");
unit.assert_eq16(16'h1A2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #978 568054c5-92d8-4812-a446-35d95e2727d6)");
unit.assert_eq16(16'h05E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #978 a24849db-638c-4794-83d6-4620dbea71b5)");
unit.assert_eq16(16'h0A7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #978 e07822d3-a00c-4394-b05b-4bff82ca7671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 d3dc2889-2dc2-4fc8-983a-80df146ba929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 4de14c7e-7709-487b-a240-352c981db401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 926c44ff-7e73-4079-b643-427f24ccb0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 23b34813-158c-4789-8743-45deb34de085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 49a6f3fc-c878-4c89-956e-ca8686c0e115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 301237d4-393e-4f27-99eb-a515dd5907d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD3F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h92C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #979 b545fea3-91a5-473b-a86f-29ca58ddb930)");
unit.assert_eq16(16'h3A6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #979 c769efc0-1c62-472f-be2f-1acd9f75382a)");
unit.assert_eq16(16'hD3F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #979 096b4cfd-3578-4ad2-834f-682093a9cb4f)");
unit.assert_eq16(16'h92C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #979 7a1b0156-6a25-4e01-81fc-b61d4d679859)");
unit.assert_eq16(16'h02BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #979 a7907e47-114e-4c65-8da8-67f91a5a458b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 642e5238-36f1-4173-ab47-1fea4ca82412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 fc8f03e2-1f40-4f36-9283-6ae961aef595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 6f78a87d-826d-401a-9667-731a02d40031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 020fda1b-b691-4ae6-8f39-f20416ceb798)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 45dad749-c140-44d0-b01c-547788932843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 433c584d-5958-4d58-83c7-12f2aa9c667a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA624;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0813;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #980 ad8631dc-683b-4343-94bf-1590d37f0c6a)");
unit.assert_eq16(16'h84C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #980 525eb61d-501f-4be4-b7b8-9ba44b34957a)");
unit.assert_eq16(16'hA624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #980 6b92ae3e-2354-4cd4-a16b-5ef67ef03a29)");
unit.assert_eq16(16'h2F70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #980 8c50f632-9acd-4035-8c0b-3ef6138776d3)");
unit.assert_eq16(16'h0815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #980 2fcebc17-854d-4596-adf6-0502575ef3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 8727265e-1cdb-4342-8355-75cb37527830)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 b58353c6-5f76-4ecd-a44d-ad56a7a3bbac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 37f99470-ce25-48ab-aba2-6e587aba9c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 6d556262-3792-467a-ad8f-ffd2bde8897b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 e7fba76e-e783-4723-b2c0-f69425261ffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 2698ec99-2175-49db-ae2f-41a95e64b0dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC1DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7177;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0840;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #981 a2c0782f-73b4-4577-a557-73c8bd3ede77)");
unit.assert_eq16(16'hBFD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #981 30d8b834-e76b-4034-92c6-5b3bea38fbcf)");
unit.assert_eq16(16'hC1DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #981 7806f7f6-fc55-4e86-ba0a-5c8161ce305a)");
unit.assert_eq16(16'h7177, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #981 b5723594-9fb1-45f5-bf24-3afc99c0115a)");
unit.assert_eq16(16'h0842, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #981 d6e06511-c981-44ed-93e6-28ddb741e79a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 475070fb-1a5e-4373-b5d2-8ecdb70f8bed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 7da17def-492e-442e-9f7b-a5bacb7fb2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 61a50277-1236-40c2-8fa1-07dfab236c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 a076481d-7d76-4c8e-90db-69aeb24b95db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 9351f313-1db2-407f-8318-f12de1404222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 ec97e22d-7264-4461-9b15-f9d7838fb707)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4F92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAEC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #982 22323c64-b2f8-4ad9-9574-10f5f76c58f2)");
unit.assert_eq16(16'h4F92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #982 3c4ae2e8-494e-4068-83c2-6fe73e884a14)");
unit.assert_eq16(16'h5BDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #982 594879d4-7649-41dd-bfea-ff66d57f766a)");
unit.assert_eq16(16'hAEC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #982 75e2c2af-d481-4e74-b661-6855726bdc60)");
unit.assert_eq16(16'h0E74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #982 2b7101bf-9326-4344-99f8-5287ae310f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 9e7f4ac9-0adf-4eb6-a05a-f97de3834aad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 ecfac170-7677-4334-9cc6-9267681e97a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 1ce012b7-a4b8-438c-aede-39c0eba50665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 de5b325e-a97d-44f8-b443-16898393cd33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 a16fde9c-6efc-4b3e-b883-00d86a74f6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 b37720d4-f537-4499-a4bf-ed3b476977c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7741;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #983 7d438495-e52f-4ce4-a686-64a32b8dbaf1)");
unit.assert_eq16(16'h7741, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #983 1e39928e-b047-4804-8c2d-6b18080ad413)");
unit.assert_eq16(16'h7B62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #983 1d0237a7-2dd6-465b-8c57-e0df9700c328)");
unit.assert_eq16(16'hE0B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #983 6062473a-b9d4-4e7c-b134-5d0d25a9a2cf)");
unit.assert_eq16(16'h09AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #983 1211de01-54a5-45e1-ac5b-0cb270298b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 5bf26c8a-bf3d-4e22-a257-cf5706240713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 54d696bd-aad4-4f04-b197-546d4179f70e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 7172bc81-0f07-419c-b4f3-e671188cc45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 86679a6e-c716-4d90-9218-afc7a7c7dc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 d24ae781-ac3d-4f86-962d-5af45f7853e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 6d695966-c376-4aac-99b5-4cf684440431)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0058;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0138;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #984 852027c6-f6f8-48de-a488-68837d999110)");
unit.assert_eq16(16'h8C19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #984 25ad8452-fff2-4a84-bc71-1b627f34c28c)");
unit.assert_eq16(16'h6C69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #984 319f81fc-af7d-4132-8964-efda82079bc9)");
unit.assert_eq16(16'h0058, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #984 713dfad9-baaf-4a70-b053-8066c03fc583)");
unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #984 10047fe8-db56-476d-88f2-f5082348ebcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 b7348348-820a-4273-870f-884d9166a645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 536fb49d-0e4c-45e1-85e3-993b8eed48fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 4c8a0b79-3acb-4da6-b784-c4fdd0563f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 59c7ea60-7af2-49d9-8494-46ee1c07007a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 30802c38-f7fa-4379-bcef-c9d830a09e3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 7b681098-7638-4146-9201-c2033e6727a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8EE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8682;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0133;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #985 e6d5629a-3731-497d-8e7b-b95a62a132e2)");
unit.assert_eq16(16'h8EE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #985 61a87fef-653c-40c9-8c32-fcc6181f38e8)");
unit.assert_eq16(16'h8682, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #985 b9368b44-9731-4d06-b8c5-32fa3ca189ac)");
unit.assert_eq16(16'h1B8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #985 f4726d3e-94df-4862-a434-111cd6cb5231)");
unit.assert_eq16(16'h0135, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #985 7764f376-6d8e-446c-a1e5-ee7f9ea4ca11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 d1094b39-65df-4ba2-a217-bcba663fc19a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 616dd1ae-87de-43b9-b74b-8a40c709b4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 2101a617-05ca-4ed6-a8c5-4cb0026d9e4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 1eb1a642-2417-4a90-8580-3c288cb39d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 cf2734c7-3b10-429b-81a6-5b7e18c4578b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 7fac4ab6-d93a-4381-a37a-421756dae47e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD60D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #986 93bdba39-dab8-4df5-95f5-6e7c8ba87c1b)");
unit.assert_eq16(16'hD60D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #986 ed6f0672-1be6-41ae-9ce0-47de69929e18)");
unit.assert_eq16(16'hA1CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #986 bf28de50-9da0-4360-b33a-7d863a562611)");
unit.assert_eq16(16'h6AA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #986 af2e86b2-bd7d-4664-a077-a7b969d48fc6)");
unit.assert_eq16(16'h03BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #986 24a0576d-a987-41fc-b5da-293fab1a6b87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 34ebc378-863b-4263-b93f-d744a68f9c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 9e8e4fe8-179e-45a3-bf61-858f1f3007c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 7a99cef6-9944-4403-9b39-39a5af156c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 38bfccd6-d2b3-4af1-9b6b-b5c494cec0c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 b5644673-e006-413a-aae1-a370e58a43b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 bb7f3e83-a235-4408-9d6a-c9a6af35469b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6835;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB63D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4EB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #987 c8b505f8-2058-4584-ac5c-26ddadf4a57d)");
unit.assert_eq16(16'h6835, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #987 f22c76b3-2b0f-493a-b660-f0de9397d2c3)");
unit.assert_eq16(16'hB63D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #987 f3f70e68-0c6e-4d7c-aedd-069476632a2f)");
unit.assert_eq16(16'h4EB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #987 10799808-b828-4787-80c6-a94f75fa9c36)");
unit.assert_eq16(16'h0A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #987 c851aa77-fb62-4680-b8f2-b7451549869f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 009a724f-c39c-4632-aaa4-6b0c9dcd046f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 91cdf1cb-2dae-49e7-93ee-674cacf3f08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 72e3693d-9260-48de-a2f0-e552e59a6d90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 40aacda5-22ef-4f55-9550-739b9d4f868c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 8eb9be85-f6f6-49d2-8360-5fd706f2a29e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 e9fbd6e0-9198-4241-9c12-3fe523c470b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h02EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD75B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #988 059e658f-a263-4d90-bfff-c29920550bc3)");
unit.assert_eq16(16'h02EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #988 75362e6e-ca09-4a32-ae48-76ec40c64685)");
unit.assert_eq16(16'hD75B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #988 bab9fb1b-7566-4b2e-bd79-c7e4dc58e561)");
unit.assert_eq16(16'h97F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #988 f65357eb-15dc-40bf-b556-2984ae56bf02)");
unit.assert_eq16(16'h039D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #988 1d042e16-c498-4a8a-9049-33ad75a47ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 499d068c-9e4b-43cc-af95-f5ff32a2a007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 03e7e6ce-18ef-43f6-98fc-a1e7e43f79ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 f47cb314-1e0d-4bb3-9b04-455bcf5f06bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 4c4355d8-b07a-41a5-b83d-3793f3b7e89d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 0f9fbd58-b4bb-46fa-bf4b-8a6737481219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 11697e8b-d30a-45a4-8ae5-fc0176dce275)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4E86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h77BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h066D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #989 db31e0a3-0cf4-4787-a6dd-0ec9a35822fe)");
unit.assert_eq16(16'h4E86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #989 6ce0d579-fd52-4816-8dc9-33e3709c902c)");
unit.assert_eq16(16'h77BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #989 89692c2a-0e63-4d26-9d70-272b3250cbd5)");
unit.assert_eq16(16'h7C11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #989 32081270-3aaf-47df-a286-791bd502e04c)");
unit.assert_eq16(16'h066F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #989 8147cc1d-acc4-4c92-bf77-2901ef9f03b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 44b45240-2ddc-4eb8-ab8e-916c0507394e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 5320068c-0223-4b5c-b260-ab1f5e588b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 1cf45576-9410-416d-8f29-b9ff2c56b0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 62cd11ad-a3e2-4bc0-95fd-afc2a90b2870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 0e7032f4-5329-4c24-a833-09087ead3bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 eb0990c4-5c1a-4f33-9e1d-f41dc09c333d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB3AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD206;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h000C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #990 88a17553-1d1c-4965-89a7-224eddcfa423)");
unit.assert_eq16(16'hB3AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #990 84643f12-9ac2-4e0e-8136-b9a72ba4aed5)");
unit.assert_eq16(16'hD206, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #990 b2934798-6e2c-427c-8147-19900ec4d81e)");
unit.assert_eq16(16'h000C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #990 e1eac402-6005-4505-bd60-8b1244d6901f)");
unit.assert_eq16(16'h01A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #990 4cdf2218-16d8-4b7d-85e6-34087b16ac1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 55e3e8b6-2303-422a-af07-ff85ee43b781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 760407da-80fb-4411-b7a6-e945c7a79bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 15d9183e-07b3-45b2-9dbe-050ebcdae423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 dc873022-790a-4d49-b61c-c5966cb45d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 21ab6b9a-3d21-43df-9afe-04314630f70d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 9527dd3c-0f17-42b1-80c8-121f85697ca2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6E30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h02ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2EE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #991 89c98dd5-5556-4343-bd92-8e530d1ff9e9)");
unit.assert_eq16(16'h6E30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #991 b4bb3177-905d-476e-b7ed-82edfc770f10)");
unit.assert_eq16(16'h02ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #991 34ac7af5-f5a3-4641-a562-b6fb6f85f79f)");
unit.assert_eq16(16'h2EE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #991 855ef2f1-0473-4a39-8f68-1483325f29be)");
unit.assert_eq16(16'h0BF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #991 11057b5d-c5fe-4f77-8120-7b91d627d207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 16f844fc-c431-4d9e-acfd-0548313b4042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 7033c17a-f672-4782-9446-533d3e304bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 ef7191b8-babe-4f68-bb15-1284233a01d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 9aae41c9-2adf-46e7-b157-8621ff3828d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 83f27bd6-4ddd-4f8f-8247-7eafb3beb6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 a932c3bb-936d-434f-938c-0ef86c671fc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h90B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6EDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC18F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h095C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #992 a2f61fad-33cd-4a7e-9737-22c5f4b31436)");
unit.assert_eq16(16'h90B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #992 a50526e8-18b2-4a3a-977a-055afa71572f)");
unit.assert_eq16(16'h6EDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #992 97b95474-8c80-448b-9d1e-791afcc74329)");
unit.assert_eq16(16'hC18F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #992 983fcfe2-e31d-4251-bb75-7e0f8c658433)");
unit.assert_eq16(16'h095E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #992 4a9ae52d-c00d-4187-a6b4-53fb69b90ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 9a58a314-56e3-44c0-9679-4a898bbf9d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 b85d8614-a4a5-44c3-a4bd-f8f1991bc788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 41f5c17e-d456-498e-8ce5-e5f5a54b0ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 53ed3d4f-40b1-4b94-88b3-cf92b998fe52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 1e184689-dbf5-4a97-92a1-fca26a43b152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 9e5dc5e7-1393-4f1e-ae0a-0e12621a207e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3BE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3915;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #993 46c8c3d6-03af-443a-83bd-9ee2fc925573)");
unit.assert_eq16(16'hBB9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #993 9b838758-5350-4ba2-8911-b04d77c8ed95)");
unit.assert_eq16(16'h3BE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #993 78d14df9-2489-4c75-8acc-aeeb8dbe7c79)");
unit.assert_eq16(16'h3915, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #993 dec0609b-76d2-4998-a93e-54186f04f528)");
unit.assert_eq16(16'h0EA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #993 a080ae32-887a-4af4-97ab-1db34da71a15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 2a8547b5-f1a0-4027-b01d-80a146614bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 1c0526ae-45f4-4e80-94bd-ec1419babddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 b5091cf4-f2ff-48b2-a535-3f3642ed3ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 04647389-17f6-471c-b1cf-49592bb499fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 0dc950bd-cafe-48d3-ae94-2c24a885be81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 1d8ad248-bd8b-4de0-ae78-4b9e3d1a26d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE769;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #994 372cc9b5-f768-4aaf-885c-451d1a90a47a)");
unit.assert_eq16(16'h96A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #994 375c8d6b-04e9-4478-baec-8601e2ef6db7)");
unit.assert_eq16(16'hE769, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #994 8941ce0c-7afe-4ed8-b3f6-64ed6cd24097)");
unit.assert_eq16(16'h0E21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #994 aee48cc9-ce17-499f-a1cd-3fdc499b541b)");
unit.assert_eq16(16'h0CF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #994 d479b490-1c50-49f1-8e74-eb809f78feff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 484b552d-a5c2-4569-bdd3-d00867b6605c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 1270db8b-de36-4c21-92fa-f5b7cbd8f152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 ed7a8eff-9816-4e3b-99ca-06b56ff06c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 382b0660-c992-4a48-aaaa-3a3eb7e8d749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 0c107960-59e4-4c7e-93c1-3a88763bd8f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 4affa621-a5bc-43cf-a093-6fb7c114b988)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8424;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDA04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #995 3da4a3d4-aeac-47d4-8789-b1275b844c81)");
unit.assert_eq16(16'h8424, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #995 d7f78ccc-1366-4616-a7ff-cae8c7d6692b)");
unit.assert_eq16(16'hDA04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #995 d20ac1d0-3a2c-4ccf-81bf-9756a5a2d90c)");
unit.assert_eq16(16'h6F3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #995 ff3c9264-4640-4598-9072-f43e0c20f50e)");
unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #995 66398492-1b78-48a6-911e-9afa26653b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 fa09d5ca-4a17-43f1-8b7f-7cd118cf34e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 f36bad85-b0a7-46d9-b2a1-6d16829c9611)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 78c67b00-4510-4bd6-bf82-d51d2aa6664f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 ef5bdaad-2454-44ac-bd53-5fa5598c262e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 fc4f8550-6112-447d-b09c-c4dde6ec3d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 1c4fcb20-b37b-4926-9992-3f49aede25b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC554;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h865B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #996 e690ce5e-05cc-4ab0-a1e4-647e3dd1ac11)");
unit.assert_eq16(16'hC554, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #996 e9c36eae-a3db-4bcf-9b06-4314394518fa)");
unit.assert_eq16(16'h865B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #996 bef9cfec-8475-4107-aaa6-db09e9c99a49)");
unit.assert_eq16(16'h84DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #996 a7e0e621-1a9c-4d4e-9d0d-5f0ee0b7e277)");
unit.assert_eq16(16'h09C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #996 2e0f7838-9b89-4175-a32a-3196244e9da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 01c75978-e697-4f9a-aa99-3be157adef6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 4037202e-6b5e-4b5e-9c1c-0adbf21775b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 da330844-0501-46d8-b206-3c80fab8a2af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 f35daff0-a4b2-4314-ae9b-119f2958f34e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 8f3e5bc2-ebae-44dc-8f1b-3ef1ba97c083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 ba6a09f4-9d65-4d3d-bc8c-f1899343888f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE52F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8422;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDEEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #997 1a9cf6b2-a0b4-4dd5-aae4-e5b37d97f27f)");
unit.assert_eq16(16'hE52F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #997 89565f5d-58a6-4ff2-bd11-a32656c7fed8)");
unit.assert_eq16(16'h8422, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #997 6fe244d6-3ae6-4b9b-9773-c0fa8395685e)");
unit.assert_eq16(16'hDEEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #997 8ca89a29-18eb-44d8-b25f-b392556a402e)");
unit.assert_eq16(16'h0640, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #997 83c76863-96ef-49d2-ad5f-9746613b4ee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 0ef9b00d-df95-40b7-ad93-e54e19beaaae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 368282ee-1c09-41a1-a042-38981512d670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 c4771052-a7ca-4c6c-b55b-09dfb74070ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 7f93dceb-1841-4a6c-94f9-edeb052fcd14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 7246ef39-d042-49c4-b6dc-03a46d6ff723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 f63de470-507d-4f45-9330-a6e5d7a2f3c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h114A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCFCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8681;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #998 3d06203d-a107-421e-b7a6-7e0ea5ce2821)");
unit.assert_eq16(16'h114A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #998 fdfdb67e-9b03-457a-ae2f-153cc355aec7)");
unit.assert_eq16(16'hCFCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #998 2142b4be-9928-4e5e-a9be-0eccee5ddcee)");
unit.assert_eq16(16'h8681, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #998 baca83bb-0a40-4fc3-8aa9-740d4d8e5703)");
unit.assert_eq16(16'h09DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #998 182b375a-566d-4b3b-a451-53fdb04c42bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 29da7c0c-d8ff-497b-b308-fa94f7be8933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 faf28774-c544-40ce-8d80-c8a1264eec58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 de4dcf03-e8e8-4187-a25b-1b25aa7ee714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 9e08c3f1-00d7-4358-8a96-d7bf6558461a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 7740e348-0b9c-4ba3-93ff-2958a3db0f1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 32ec46f4-9707-42c0-8edb-83d4b76fc3ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h48F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #999 0fc64693-eb3f-4cee-9a11-3018f11b3f22)");
unit.assert_eq16(16'h5D1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #999 c12bb507-371f-486a-bec3-900e0f568ac2)");
unit.assert_eq16(16'h48F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #999 b7f9bbd1-ebdc-4cdf-bb4e-58a406316c15)");
unit.assert_eq16(16'hC6C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #999 319f4aef-bea9-4c23-8f13-62335e571950)");
unit.assert_eq16(16'h046C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #999 5759cbd0-c59e-42ae-9ace-72fc52708ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 7609cf28-3a41-41cf-8fc6-a6144d189bda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 b3f64b36-4cd2-487c-988c-070273c68d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 85ae9b5f-4ae6-4303-8e67-02b04c832b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 cb1b07fa-d2db-46a5-950d-5fb497f2df1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 a8e0ab99-81ac-4e7f-8462-f1f8be3bef12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 0b3411c5-c4ed-41d0-b81d-7012b19ef5dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7AAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h63BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0341;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1000 d758a33f-9fbc-41fd-a44a-36c87c4c6e6f)");
unit.assert_eq16(16'h7AAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1000 40d64356-3f57-4b48-a3cf-b64b95144f0a)");
unit.assert_eq16(16'h63BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1000 1b04567b-5586-4285-8902-d8caf5682f9a)");
unit.assert_eq16(16'h6B89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1000 10e9bc5e-3f98-4de8-9c44-db5fe2aab27b)");
unit.assert_eq16(16'h0343, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1000 4604b5e0-db34-4766-a5f7-e54fbb216fe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 efb25211-93cf-4c24-9d1d-9b4d971cced3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 42cb80a6-a707-4d7d-9fef-ceff27a8920e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 c10242a3-b5c2-4530-bf26-9f35286ca491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 c64b2b77-160f-41c6-9fc7-80580955ef03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 92318ecd-5751-4a77-9947-f0bef1d532be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 cb573c87-a746-4874-a86f-35cb328c2ad9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4705;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9904;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1001 6041ef58-b30e-4dba-a7bc-c5b9a9789ab2)");
unit.assert_eq16(16'h4705, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1001 82d63a7a-ca23-4465-a00c-8609def245d0)");
unit.assert_eq16(16'h5D25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1001 a827154f-651f-427b-89b2-c5fa456e1bfb)");
unit.assert_eq16(16'h9904, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1001 ceea44fc-34b2-4d19-950f-02e80d9a1322)");
unit.assert_eq16(16'h0E20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1001 04ed7b37-4f89-4a1a-a1d3-9a90a40a1a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 71bebe67-78d4-485a-8d2e-5a754995a13a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 4b065b41-c324-4270-8281-3337b0830323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 408a6789-6694-43ff-aef2-a651961657b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 245bb90d-242c-4b78-a5f0-72d27387310d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 0d9887fc-a1c8-4231-8c20-866a70b6833c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 e4f07423-402b-4296-80c0-324b8f440f3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h365D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4712;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1002 ae59672a-b918-4ee6-b48f-56e4c2229916)");
unit.assert_eq16(16'h365D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1002 177011e7-8c5c-4e3d-a3a3-f44f60cbe0c0)");
unit.assert_eq16(16'hA1B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1002 004272ef-2925-4886-8e15-55c711e1dd33)");
unit.assert_eq16(16'h4712, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1002 0e562d18-4b8d-40ea-972d-85b59d2a69f3)");
unit.assert_eq16(16'h0AF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1002 332bb7f2-16ce-4a77-85a5-26670ae80b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 7e865b37-4301-41ef-a0e9-5f34730aaa91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 323f4232-5c8c-4746-957f-18d2249ed3f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 15392b3f-ec17-458f-9924-9f4761d5d48e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 a1810929-89de-441a-9750-f1c247e7b40d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 95ea3543-31a4-46bc-b373-b990eb326349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 cfc8f3e5-b291-433c-a804-e5afddeda1c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF1A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC810;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h917A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1003 37ef3d44-2309-4609-8064-1c8e11228296)");
unit.assert_eq16(16'hF1A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1003 a206d244-f404-4d67-817a-f8b840b5295c)");
unit.assert_eq16(16'hC810, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1003 b8bcfddf-91a6-45b0-af1f-26511e0e605a)");
unit.assert_eq16(16'h917A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1003 930317f8-5bfa-429d-b42b-7825f72950e1)");
unit.assert_eq16(16'h0FAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1003 19de0988-8119-46e4-854e-1258f861b695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 ae2435fb-6ebc-4053-9259-fd6501375f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 531c40cf-d385-4c8a-b345-c1a236ec7fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 fa192cfa-fd6b-4358-9b28-4621465d8455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 1365213a-615f-4f99-91de-fee23f77de5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 d21d2522-5786-4540-afa7-3bfa151de1a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 3196b744-6622-4e4b-8da6-efd50d1df933)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2E56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2740;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCB9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1004 25f84b60-6a33-4b5f-8c55-caed268b860c)");
unit.assert_eq16(16'h2E56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1004 522b442f-be4d-4163-99fe-fd94f9c06dc0)");
unit.assert_eq16(16'h2740, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1004 48599ada-6c0d-4742-94ca-fbbfd714a93e)");
unit.assert_eq16(16'hCB9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1004 ec0422d3-6682-43ff-90b0-d2aceb91a102)");
unit.assert_eq16(16'h0C22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1004 1990c13e-ccd5-4f95-9221-56db67dcb3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 890f1201-bb5d-42b8-aaa8-e7c31d9b61e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 a4b3ebc5-bd4b-4bae-bda4-7796ac55507b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 c9a03d9d-5cfa-4572-aa2f-82266d0c7464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 8a6a2812-8898-4ab6-b2f8-af33eaf003ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 c011bc93-494e-475a-8f04-52372ccfa813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 c791949c-9861-47c0-b24e-2e276befb367)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h19C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h21A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1005 ff383d24-6248-4d17-815d-ad96067f3f33)");
unit.assert_eq16(16'hCE5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1005 aef1cd20-1aa9-483e-be61-acb9dcb33757)");
unit.assert_eq16(16'h19C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1005 c5c42c73-6b76-459b-98a8-5f15d1fc4218)");
unit.assert_eq16(16'h21A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1005 e9b12f87-bba3-4f00-a51c-7826625e5c1f)");
unit.assert_eq16(16'h04C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1005 df9d7d5f-4cd6-422b-a254-5266b671e31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 220340bf-7840-4c41-b11e-009fc9fa74d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 ae2645fa-8a9c-4ee6-831c-7eefa70a832c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 40066424-1a82-40fd-84af-b4973603eae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 58057595-4bce-4fd9-881a-507cf9794229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 90f68f75-a817-4048-b43a-418b55cc5f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 bbb183eb-52b2-4bff-8be9-21c6ae7f22e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC901;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEEF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h750B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0665;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1006 b05fbc75-4e68-4817-843e-dbd23754c495)");
unit.assert_eq16(16'hC901, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1006 bb32ae37-1326-485c-9927-b0df130046c2)");
unit.assert_eq16(16'hEEF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1006 e55d10d2-bc11-404c-8a4b-3006c1d7e676)");
unit.assert_eq16(16'h750B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1006 4b78db0b-b1da-4ac2-997c-0439d3796a53)");
unit.assert_eq16(16'h0667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1006 02dea7da-879f-4d1c-bbd4-7e6ae26ca5e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 d6a100f6-4a89-47bb-9b68-d499f015d679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 a06121c6-8e3f-4f60-b2f2-c1fc37a0d575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 60a27478-4f43-4e65-92c3-a09c47713c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 68790080-ad3c-4657-8cd7-235b63d8f859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 44c38056-5f47-40a5-851a-1e2be8452322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 0c11ffec-dc98-48c7-9e26-704a63956110)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h481D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1007 1e7530b4-df48-46fd-bec4-6a05f6fa5af0)");
unit.assert_eq16(16'h481D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1007 68730bc7-2abe-4710-8941-d7671523d0d4)");
unit.assert_eq16(16'h1E38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1007 bbbcd12b-68ea-4478-b0eb-ae61fb2a5f9f)");
unit.assert_eq16(16'h9DD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1007 f2a7f879-3b64-467f-9828-50db4b3d6eb3)");
unit.assert_eq16(16'h0B15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1007 d0e92245-90b3-417b-afa2-87ea4c460c2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 d63a8bfc-4dc4-4556-9ec2-ff7fd2bc554b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 ade27f8c-c0d0-4b49-86c8-49e19a860d57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 69e2405e-32da-4a26-a2ab-49d0a275c5f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 953d34eb-9c5c-45ea-822b-73d73d32495e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 adce34d6-59a9-407c-8ccb-86a2b29c3c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 27f3b298-fbfb-4429-b9f2-a7006d352490)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7D37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3226;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD916;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1008 868a3633-2fa4-4ca5-bc59-c91644b0d6fe)");
unit.assert_eq16(16'h7D37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1008 3a744d71-f720-4e40-84f2-3f181cbaef6c)");
unit.assert_eq16(16'h3226, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1008 1c7d8eaf-9706-4817-afa5-5b5da8f5b5ba)");
unit.assert_eq16(16'hD916, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1008 8a5cb5c2-63bb-4920-9945-d0af07ebc071)");
unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1008 c3f0f873-8490-49bd-8888-cef66f39adbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 bbfeaca7-77c0-496e-a7a6-d616c87cf8dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 e366c4e1-0de0-4a6e-817f-17b4efafd7b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 a402e6b5-f7c3-4aad-86d8-638072594ca3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 51c2aa5f-4ea5-434c-958f-489ab63140f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 93b45ad8-4abf-43d5-9132-1f1023959245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 fff1e3e5-0894-4c99-987d-eef2dfffc8da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB6BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3021;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7990;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1009 978dd884-729d-454d-8e81-fccfaf09bcdf)");
unit.assert_eq16(16'hB6BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1009 a35203bc-43bc-4048-bcfc-781d09d7d3df)");
unit.assert_eq16(16'h3021, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1009 a42cf156-2a10-45cf-b8b2-f13344afa81a)");
unit.assert_eq16(16'h7990, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1009 d67b8843-3315-4e45-a27e-9cb47bed5193)");
unit.assert_eq16(16'h03BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1009 e4c55b44-d400-4d09-970c-df91b07a2f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 d4b5f372-4f16-4863-9f83-bc1500c2840f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 6ebd55e7-0fb0-4474-b5a3-a10c108d79a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 a9ae9f45-2295-4650-b7ae-05b73bd1a598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 419874c1-002b-4c96-92e2-4fcdb8ea55e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 aa34d3f3-6123-4434-9582-278c3dbfdd8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 2e8fac50-316d-47af-929b-47664e022cee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h416C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7FE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9654;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0484;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1010 7fb838ff-31d7-4e7e-800e-4931162bbc41)");
unit.assert_eq16(16'h416C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1010 60f44dee-48bc-41d2-a308-cc32a760ebad)");
unit.assert_eq16(16'h7FE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1010 6bda8434-b65f-4a2a-bac8-f51365150fc4)");
unit.assert_eq16(16'h9654, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1010 7b4ae146-9c63-455a-a960-8dfe4d3555ce)");
unit.assert_eq16(16'h0486, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1010 253623db-9fb7-46a3-a5e1-eeedbe51642f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 d2fc3720-d9fd-491b-95e6-dc28ded449e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 4d79cffd-2797-483c-aa42-6b5cd51ae241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 2a89a0e3-3d66-4f12-a177-59fc312776c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 00ea5fa1-40b9-40ea-8a5e-64e370121a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 fc999e89-1c41-49d0-a8d2-3da739d1fbf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 731ded53-db81-44a5-ab93-b503d3f4404b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h256E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h47E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAA5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1011 189e1cff-0c98-4142-a2cd-ff415f44ede7)");
unit.assert_eq16(16'h256E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1011 f4686b94-defd-4c42-94b6-77e009ba952d)");
unit.assert_eq16(16'h47E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1011 46d9b897-ddba-4c88-8925-d2d263297749)");
unit.assert_eq16(16'hAA5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1011 921dc758-5a71-488e-ae6b-a1bf14e923de)");
unit.assert_eq16(16'h0F93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1011 4e86e02e-a642-4c5c-892f-c56facf6e3c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 78c8369e-ebd2-4bb3-898d-d6a82f0e7f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 55a3fa1d-7ac8-4209-8a6f-fc5a78477ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 692a1f1e-36b3-4578-ad0d-1960e70ecedb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 dc4a4ca5-f483-4c78-b81c-d9129b7054a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 66a69d9d-3299-4900-bdf8-64a86c9af9e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 6d308b0d-0595-46fc-a4c3-aff098a44f4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7E07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4947;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1012 b1dc2229-1862-4157-b8df-a69781f30bc1)");
unit.assert_eq16(16'hB8E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1012 5d2d2fdc-246c-453d-a54e-f7bdf899ea72)");
unit.assert_eq16(16'h7E07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1012 578d704c-516c-4326-9ec4-18484ae9bb4a)");
unit.assert_eq16(16'h4947, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1012 06496266-d538-4c6e-926a-318c541eb864)");
unit.assert_eq16(16'h0CC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1012 2dbf0ce7-afdc-4bf7-9636-e578b7138b26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 dd27b685-7245-49b2-bf4e-170cbb0d42e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 1f07cb6d-6d8d-4fa6-b028-40b049333979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 45370542-64ee-41fc-9215-b751f4d338d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 2d271d04-267d-4b8e-9e53-75b97825c8f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 de251c63-c888-4671-a1db-d98220968e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 c4d71872-3ec6-4b57-91ec-fa989927e1fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h27D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6716;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA19E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1013 1958a8cc-535b-4e6a-8f5f-402b074c7a1b)");
unit.assert_eq16(16'h27D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1013 197ee8e5-f4f8-4960-90fc-3b00ce0b0230)");
unit.assert_eq16(16'h6716, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1013 966f0cc8-dd61-4105-99e8-190bcb4c2268)");
unit.assert_eq16(16'hA19E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1013 3edf52ef-cb96-40e7-ad96-cf114bc1df93)");
unit.assert_eq16(16'h06FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1013 6cd215fa-a5d0-44d3-a3ae-0ef5d420060c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 d9a071b4-1eb7-4d70-8d18-f10774c04cd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 68c2a859-f82c-428a-af01-f54c314d3420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 819caa80-b43a-474f-918a-d0dc5c9bf374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 d6c568f5-2a04-47de-8c27-6ba4f121ebaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 afbfb1e7-a455-42e9-b2ac-c747a3b234df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 666d936a-d0d4-411e-8aef-58273e02b988)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC4A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h205B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA84B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1014 f7efede2-7e1e-41c9-8326-5d7611e9c641)");
unit.assert_eq16(16'hC4A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1014 a6e16392-19ab-4d20-a01c-94825298ab64)");
unit.assert_eq16(16'h205B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1014 5efa6b6f-442c-40f0-bb8a-b19db251f822)");
unit.assert_eq16(16'hA84B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1014 5627f742-ced2-4dfd-bba5-347866841323)");
unit.assert_eq16(16'h0F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1014 5e95e537-06a6-4ece-b526-93d19b7666cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 299e5919-b4c6-4280-a61c-052d94d577b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 c0b01d87-7079-478b-b2c2-e7b1068b5b4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 9612c6be-f8ac-4330-a7ef-7ef94ac86150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 46c1c961-a0a7-4e85-96f9-e46f4590222c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 a2f10d06-7709-42d4-b96e-8ba968fab8e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 1e39a9aa-1810-4c80-8c3d-0df3153a81d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5383;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1015 36bd84ff-7610-4fc8-bfa7-da96db0601cc)");
unit.assert_eq16(16'h5383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1015 409c2f7e-be3f-4d1d-9364-381ac87c1a01)");
unit.assert_eq16(16'hCB4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1015 bfe9b814-0e9b-403a-8462-8a17203ac39e)");
unit.assert_eq16(16'h4D4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1015 996aff94-1736-4895-a466-386f1a903219)");
unit.assert_eq16(16'h0D36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1015 d0e438e8-9c8a-4085-b10b-a54794a71953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 711e3d93-4dd0-4d78-a0ae-08100d945e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 6ecf5593-8262-473a-b256-005f40a59947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 377d9667-dda2-49bb-95f0-690415e36fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 eb832a10-6d4b-4aab-aebc-646c026660e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 cd3c8731-0869-4c31-a96e-d50e023ced9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 59eee6d7-890e-4d44-9ce5-53358487da06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h12EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5B4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h069B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1016 637c3d6f-2dc1-4e50-944e-7b908d0b09fb)");
unit.assert_eq16(16'h12EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1016 e4e0dcab-c9ce-40df-a12f-a8875e598287)");
unit.assert_eq16(16'h9F7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1016 32927191-e95a-4398-ad95-dbcfac38337d)");
unit.assert_eq16(16'h5B4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1016 38db0852-78bd-4749-bf4e-7cd5e6f80a31)");
unit.assert_eq16(16'h069D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1016 c1105461-d475-424d-81b1-315a40f00326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 fed57920-1c05-425f-899f-2a2fedbd9281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 c416debc-54ea-4fc5-9a42-ab3580c2c123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 e1b7908a-bf19-45bc-87de-5da610b4c9bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 274ba1b7-4118-4601-8b51-e5960fd2daae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 860b0693-d1a0-4057-81d4-e842904fee2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 814f4548-94b8-4e4a-8d5a-bd579e3b3f87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFD5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8AF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1017 ab3411e3-f620-44cd-9423-c7d5b2625759)");
unit.assert_eq16(16'hFD5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1017 4a98c3c9-d817-4b23-8db9-634e9c8870b1)");
unit.assert_eq16(16'h8AF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1017 39e6a35a-e05d-4d48-8ed3-9d26b448cdf6)");
unit.assert_eq16(16'h3F9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1017 de1a0722-2183-4da9-9ac2-b490eeccf191)");
unit.assert_eq16(16'h05DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1017 b15f63b2-ded1-455a-b827-56cd53b0597e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 f823019e-b9ee-465c-b5ee-c246ccd6377d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 02906f5c-4a00-4c39-a275-557dbf32ce3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 9d6f0c16-adf2-48a8-9164-915d9cfcee0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 9dfff50f-32e4-4afc-aace-56963038657e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 504c76f7-f874-4415-a209-346edfcf77a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 9c615952-3c6c-4419-bd43-7f4df956c520)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7224;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7DE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC7FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1018 c915d831-79ae-4d12-bcf5-5e43b0559044)");
unit.assert_eq16(16'h7224, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1018 b6120de2-d021-4606-9b20-e572477885a7)");
unit.assert_eq16(16'h7DE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1018 219c4234-52e2-4679-9646-f2fc0cc41d49)");
unit.assert_eq16(16'hC7FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1018 294d140a-5169-4cad-92fd-b7101dd1d7eb)");
unit.assert_eq16(16'h0271, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1018 a0bd7478-dddc-4174-bfe4-34ffb93a27f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 9e902d30-50e6-4777-8d6a-07de28404228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 75bd15af-6172-482a-b2e1-246917759a8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 945440e9-0284-4ffb-bbff-9f9ba0f68626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 ebca7861-64a1-4218-aaec-5dd687776e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 00bbcd58-d3db-4ec7-af66-8dad27243774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 ab549bfc-030b-44a3-b249-2d27cbe54f8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h99F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1019 6a685f81-d5c9-4427-9646-5899b7aaa97a)");
unit.assert_eq16(16'h99F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1019 560303aa-e03c-4fd4-81b6-b32600ae4e9f)");
unit.assert_eq16(16'h0C16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1019 d5180060-0e28-4519-967e-9460d4b6a5bb)");
unit.assert_eq16(16'h5D87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1019 f436f309-6d8b-424b-8575-4f4cd14ccc3f)");
unit.assert_eq16(16'h0C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1019 1b026b31-9526-48a2-aeec-0fc30850c85c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 70009e2b-1468-46d1-859c-ce9ee49843a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 1619cbe1-b62a-49c0-9dcf-1db401d21f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 94776f63-593d-4c9e-8d9e-ca8669878cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 7851b039-1276-46b1-9902-85cd138588c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 1aa0f567-dc30-413a-9f91-73bcaad5b93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 75a30c3a-38ca-4a14-b961-4343c6dc10e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF3DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h060F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3BCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1020 3616b030-70cb-4769-9962-b4b193571c3a)");
unit.assert_eq16(16'hF3DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1020 8d1d8b99-f3ba-4c33-9c38-94058c8f90a4)");
unit.assert_eq16(16'h060F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1020 da46c9d6-aaca-4585-ae22-3c970844e13e)");
unit.assert_eq16(16'h3BCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1020 3e32945d-b9dc-4f4d-bf88-cb3e4355da06)");
unit.assert_eq16(16'h0A91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1020 9f2633be-8ded-49eb-a6c8-d96cbca10082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 f72d9f59-f0c5-4741-bfff-f522c23648b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 0e7ea36d-5b96-41dc-8ab0-dc113abec0d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 8c400c1d-e1bc-44c4-a49d-af1998786819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 ca512663-62ea-41c5-a187-bbb2ecd55873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 7dabfaa4-60ff-4b54-8ed7-f84cf6fbefe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 106d5da3-c434-4c38-a7ec-ab731442f3bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h85A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7E45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h24C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0316;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1021 73f97377-ad89-4316-b066-bcbf068bff68)");
unit.assert_eq16(16'h85A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1021 3517d387-e6c0-4cac-a9e8-39f69bf202ee)");
unit.assert_eq16(16'h7E45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1021 3d885493-9fdb-48c3-ab07-4a0dc96ed1a1)");
unit.assert_eq16(16'h24C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1021 a6c66037-7f11-49fa-8e38-9ee3345f07cc)");
unit.assert_eq16(16'h0318, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1021 75dcf751-1fa4-4e16-9307-b23f0ec38b75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 00db96f9-3c0a-4e36-81ca-14fce0cd5bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 147ee3f8-9b1b-4788-9a73-68797ea5bb3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 e6e8cbd8-202c-43fe-b4a1-073dfe129d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 ce5849b3-9d59-4f0a-b15b-5147119bf7d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 119ae232-7580-4c77-bda4-646e2c6a1bc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 4618c874-8083-456d-bc83-aa10976118ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA121;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA658;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1022 b84e42eb-af7b-4117-a130-3ccb98d80b64)");
unit.assert_eq16(16'h7C97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1022 2e567f8d-a7f1-493e-8be7-9101b2250416)");
unit.assert_eq16(16'hA121, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1022 ffeb840f-cbc8-4849-a179-db82fe23b1a5)");
unit.assert_eq16(16'hA658, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1022 36889961-9377-4de8-af3d-1619dd399fb7)");
unit.assert_eq16(16'h0621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1022 c453ef7f-82d8-490b-a882-caeae4114dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 793fdec8-ee0c-46bd-ae44-1eaa0c501890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 7de1729c-aaa2-44bd-9fb1-912d1280ff4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 24e1122c-8c6a-41b4-ac78-7789df0e1ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 039f9b1a-f9ed-457b-9e16-01c301d286e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 c174de70-cdaf-4696-a52e-125960c781c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 4588057b-ff00-4e33-8da8-5ff50927c70a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF383;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8803;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1023 ae89ec43-79a3-48e6-abf2-cd9e4aed1145)");
unit.assert_eq16(16'h7FE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1023 40798bae-25f7-4d77-a13a-9d816cd79859)");
unit.assert_eq16(16'hF383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1023 09131857-a0f0-4e6e-a9b2-1e6778d28b0b)");
unit.assert_eq16(16'h8803, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1023 0b7b4f77-1ae1-4f6b-a82e-325ecb6234af)");
unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1023 9de9277f-e9b6-4914-8269-24e128395398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 5f0d9b3b-cb74-4814-8bf0-b4cd1ba537ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 eb282ed7-3892-4ac7-9aa4-7a59f9efd659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 74049967-5852-4608-bb3a-c2b8a9357378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 72449e32-3870-4705-953c-9a5bb316d82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 80f7f783-267f-47e8-9a0f-76c96e1817aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 5db79bab-24ab-462f-9b2f-4d6da7938feb)");

#(CLKPERIOD / 4);

unit.finish("ld16popqq ('POP qq')");
